import{SecretClient as e}from"@azure/keyvault-secrets";import t from"inquirer";async function s(t,s){const o=new e(t,s),r=[];for await(const e of o.listPropertiesOfSecrets())r.push({name:e.name,tags:e.tags||{}});return r}function o(e){const t={};for(const s of e){const e=s.tags.group;e&&(t[e]||(t[e]=[]),t[e].push(s.name))}return t}async function r({vaultUrl:e,credential:r}){const n=await s(e,r);if(0===n.length)return console.log("No secrets found in Key Vault."),{};const a=o(n),i={};for(const[e,s]of Object.entries(a))if(1===s.length){const e=s[0],o=/secret|key|token|password/i.test(e),{value:r}=await t.prompt([{type:o?"password":"input",name:"value",message:`Enter value for secret '${e}':`,mask:o?"*":void 0}]);i[e]=r}else{const o=s.some(e=>/secret|key|token|password/i.test(e)),{groupValue:r}=await t.prompt([{type:o?"password":"input",name:"groupValue",message:`Enter value for group '${e}' (applies to: ${s.join(", ")})`,mask:o?"*":void 0}]);for(const e of s)i[e]=r}const p=n.filter(e=>!e.tags.group).map(e=>e.name);if(p.length>0){const e=p.map(e=>({type:/secret|key|token|password/i.test(e)?"password":"input",name:e,message:`Enter value for secret '${e}':`,mask:/secret|key|token|password/i.test(e)?"*":void 0})),s=await t.prompt(e);Object.assign(i,s)}return i}export{o as buildGroupingsFromTags,s as getVaultSecretsWithTags,r as promptForVaultSecretsWithGroups};
//# sourceMappingURL=vaultPromptGroupsUtils-860b1d76.js.map
