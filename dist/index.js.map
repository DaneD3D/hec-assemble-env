{"version":3,"file":"index.js","sources":["../node_modules/@azure/identity/dist/esm/constants.js","../node_modules/@azure/identity/dist/esm/msal/nodeFlows/msalPlugins.js","../node_modules/@azure/identity/dist/esm/errors.js","../node_modules/@typespec/ts-http-runtime/dist/esm/logger/debug.js","../node_modules/@typespec/ts-http-runtime/dist/esm/logger/log.js","../node_modules/@typespec/ts-http-runtime/dist/esm/logger/logger.js","../node_modules/@azure/logger/dist/esm/index.js","../node_modules/@azure/identity/dist/esm/util/logging.js","../node_modules/@azure/core-tracing/dist/esm/tracingContext.js","../node_modules/@azure/core-tracing/dist/esm/state.js","../node_modules/@azure/core-tracing/dist/commonjs/state.js","../node_modules/@azure/core-tracing/dist/esm/instrumenter.js","../node_modules/@azure/core-tracing/dist/esm/tracingClient.js","../node_modules/@azure/identity/dist/esm/util/tracing.js","../node_modules/@azure/identity/dist/esm/credentials/chainedTokenCredential.js","../node_modules/@azure/msal-node/dist/cache/serializer/Serializer.mjs","../node_modules/@azure/msal-common/dist/utils/Constants.mjs","../node_modules/@azure/msal-common/dist/error/AuthErrorCodes.mjs","../node_modules/@azure/msal-common/dist/error/AuthError.mjs","../node_modules/@azure/msal-common/dist/error/ClientAuthErrorCodes.mjs","../node_modules/@azure/msal-common/dist/error/ClientAuthError.mjs","../node_modules/@azure/msal-common/dist/crypto/ICrypto.mjs","../node_modules/@azure/msal-common/dist/logger/Logger.mjs","../node_modules/@azure/msal-common/dist/packageMetadata.mjs","../node_modules/@azure/msal-common/dist/authority/AuthorityOptions.mjs","../node_modules/@azure/msal-common/dist/error/ClientConfigurationErrorCodes.mjs","../node_modules/@azure/msal-common/dist/error/ClientConfigurationError.mjs","../node_modules/@azure/msal-common/dist/utils/StringUtils.mjs","../node_modules/@azure/msal-common/dist/request/ScopeSet.mjs","../node_modules/@azure/msal-common/dist/account/AccountInfo.mjs","../node_modules/@azure/msal-common/dist/account/AuthToken.mjs","../node_modules/@azure/msal-common/dist/utils/UrlUtils.mjs","../node_modules/@azure/msal-common/dist/url/UrlString.mjs","../node_modules/@azure/msal-common/dist/authority/AuthorityMetadata.mjs","../node_modules/@azure/msal-common/dist/error/CacheErrorCodes.mjs","../node_modules/@azure/msal-common/dist/error/CacheError.mjs","../node_modules/@azure/msal-common/dist/cache/CacheManager.mjs","../node_modules/@azure/msal-common/dist/authority/ProtocolMode.mjs","../node_modules/@azure/msal-common/dist/telemetry/performance/PerformanceEvent.mjs","../node_modules/@azure/msal-common/dist/telemetry/performance/StubPerformanceClient.mjs","../node_modules/@azure/msal-common/dist/config/ClientConfiguration.mjs","../node_modules/@azure/msal-common/dist/account/CcsCredential.mjs","../node_modules/@azure/msal-common/dist/account/ClientInfo.mjs","../node_modules/@azure/msal-common/dist/constants/AADServerParamKeys.mjs","../node_modules/@azure/msal-common/dist/request/RequestParameterBuilder.mjs","../node_modules/@azure/msal-common/dist/authority/AuthorityType.mjs","../node_modules/@azure/msal-common/dist/utils/FunctionWrappers.mjs","../node_modules/@azure/msal-common/dist/authority/RegionDiscovery.mjs","../node_modules/@azure/msal-common/dist/utils/TimeUtils.mjs","../node_modules/@azure/msal-common/dist/cache/utils/CacheHelpers.mjs","../node_modules/@azure/msal-common/dist/authority/Authority.mjs","../node_modules/@azure/msal-common/dist/authority/OpenIdConfigResponse.mjs","../node_modules/@azure/msal-common/dist/authority/CloudInstanceDiscoveryResponse.mjs","../node_modules/@azure/msal-common/dist/authority/CloudInstanceDiscoveryErrorResponse.mjs","../node_modules/@azure/msal-common/dist/authority/AuthorityFactory.mjs","../node_modules/@azure/msal-common/dist/error/ServerError.mjs","../node_modules/@azure/msal-common/dist/network/RequestThumbprint.mjs","../node_modules/@azure/msal-common/dist/network/ThrottlingUtils.mjs","../node_modules/@azure/msal-common/dist/error/NetworkError.mjs","../node_modules/@azure/msal-common/dist/client/BaseClient.mjs","../node_modules/@azure/msal-common/dist/account/TokenClaims.mjs","../node_modules/@azure/msal-common/dist/cache/entities/AccountEntity.mjs","../node_modules/@azure/msal-common/dist/error/InteractionRequiredAuthErrorCodes.mjs","../node_modules/@azure/msal-common/dist/error/InteractionRequiredAuthError.mjs","../node_modules/@azure/msal-common/dist/utils/ProtocolUtils.mjs","../node_modules/@azure/msal-common/dist/crypto/PopTokenGenerator.mjs","../node_modules/@azure/msal-common/dist/cache/persistence/TokenCacheContext.mjs","../node_modules/@azure/msal-common/dist/response/ResponseHandler.mjs","../node_modules/@azure/msal-common/dist/utils/ClientAssertionUtils.mjs","../node_modules/@azure/msal-common/dist/client/AuthorizationCodeClient.mjs","../node_modules/@azure/msal-common/dist/client/RefreshTokenClient.mjs","../node_modules/@azure/msal-common/dist/client/SilentFlowClient.mjs","../node_modules/@azure/msal-common/dist/protocol/Authorize.mjs","../node_modules/@azure/msal-common/dist/telemetry/server/ServerTelemetryManager.mjs","../node_modules/@azure/msal-node/dist/cache/serializer/Deserializer.mjs","../node_modules/@azure/msal-node/dist/utils/Constants.mjs","../node_modules/@azure/msal-node/dist/utils/NetworkUtils.mjs","../node_modules/@azure/msal-node/dist/network/HttpClient.mjs","../node_modules/@azure/msal-node/dist/error/ManagedIdentityErrorCodes.mjs","../node_modules/@azure/msal-node/dist/error/ManagedIdentityError.mjs","../node_modules/@azure/msal-node/dist/config/ManagedIdentityId.mjs","../node_modules/@azure/msal-node/dist/error/NodeAuthError.mjs","../node_modules/@azure/msal-node/dist/config/Configuration.mjs","../node_modules/uuid/dist/esm-browser/rng.js","../node_modules/uuid/dist/esm-browser/regex.js","../node_modules/uuid/dist/esm-browser/stringify.js","../node_modules/uuid/dist/esm-browser/validate.js","../node_modules/uuid/dist/esm-browser/v4.js","../node_modules/@azure/msal-node/dist/crypto/GuidGenerator.mjs","../node_modules/@azure/msal-node/dist/utils/EncodingUtils.mjs","../node_modules/@azure/msal-node/dist/crypto/HashUtils.mjs","../node_modules/@azure/msal-node/dist/crypto/PkceGenerator.mjs","../node_modules/@azure/msal-node/dist/crypto/CryptoProvider.mjs","../node_modules/@azure/msal-node/dist/cache/NodeStorage.mjs","../node_modules/@azure/msal-node/dist/cache/CacheHelpers.mjs","../node_modules/@azure/msal-node/dist/cache/TokenCache.mjs","../node_modules/safe-buffer/index.js","../node_modules/jws/lib/data-stream.js","../node_modules/ecdsa-sig-formatter/src/ecdsa-sig-formatter.js","../node_modules/ecdsa-sig-formatter/src/param-bytes-for-alg.js","../node_modules/jwa/index.js","../node_modules/buffer-equal-constant-time/index.js","../node_modules/jws/lib/tostring.js","../node_modules/jws/lib/sign-stream.js","../node_modules/jws/lib/verify-stream.js","../node_modules/jws/index.js","../node_modules/jsonwebtoken/decode.js","../node_modules/jsonwebtoken/lib/JsonWebTokenError.js","../node_modules/jsonwebtoken/lib/NotBeforeError.js","../node_modules/jsonwebtoken/lib/TokenExpiredError.js","../node_modules/ms/index.js","../node_modules/jsonwebtoken/lib/timespan.js","../node_modules/semver/internal/constants.js","../node_modules/semver/internal/debug.js","../node_modules/semver/internal/re.js","../node_modules/semver/internal/parse-options.js","../node_modules/semver/internal/identifiers.js","../node_modules/semver/classes/semver.js","../node_modules/semver/functions/parse.js","../node_modules/semver/functions/compare.js","../node_modules/semver/functions/compare-build.js","../node_modules/semver/functions/gt.js","../node_modules/semver/functions/lt.js","../node_modules/semver/functions/eq.js","../node_modules/semver/functions/neq.js","../node_modules/semver/functions/gte.js","../node_modules/semver/functions/lte.js","../node_modules/semver/functions/cmp.js","../node_modules/semver/classes/range.js","../node_modules/semver/internal/lrucache.js","../node_modules/semver/classes/comparator.js","../node_modules/semver/functions/satisfies.js","../node_modules/semver/ranges/valid.js","../node_modules/semver/ranges/outside.js","../node_modules/semver/index.js","../node_modules/semver/functions/valid.js","../node_modules/semver/functions/clean.js","../node_modules/semver/functions/inc.js","../node_modules/semver/functions/diff.js","../node_modules/semver/functions/major.js","../node_modules/semver/functions/minor.js","../node_modules/semver/functions/patch.js","../node_modules/semver/functions/prerelease.js","../node_modules/semver/functions/rcompare.js","../node_modules/semver/functions/compare-loose.js","../node_modules/semver/functions/sort.js","../node_modules/semver/functions/rsort.js","../node_modules/semver/functions/coerce.js","../node_modules/semver/ranges/to-comparators.js","../node_modules/semver/ranges/max-satisfying.js","../node_modules/semver/ranges/min-satisfying.js","../node_modules/semver/ranges/min-version.js","../node_modules/semver/ranges/gtr.js","../node_modules/semver/ranges/ltr.js","../node_modules/semver/ranges/intersects.js","../node_modules/semver/ranges/simplify.js","../node_modules/semver/ranges/subset.js","../node_modules/jsonwebtoken/lib/validateAsymmetricKey.js","../node_modules/jsonwebtoken/lib/asymmetricKeyDetailsSupported.js","../node_modules/jsonwebtoken/lib/rsaPssKeyDetailsSupported.js","../node_modules/jsonwebtoken/lib/psSupported.js","../node_modules/jsonwebtoken/verify.js","../node_modules/lodash.includes/index.js","../node_modules/lodash.isinteger/index.js","../node_modules/lodash.once/index.js","../node_modules/jsonwebtoken/sign.js","../node_modules/lodash.isboolean/index.js","../node_modules/lodash.isnumber/index.js","../node_modules/lodash.isplainobject/index.js","../node_modules/lodash.isstring/index.js","../node_modules/jsonwebtoken/index.js","../node_modules/@azure/msal-node/dist/client/ClientAssertion.mjs","../node_modules/@azure/msal-node/dist/packageMetadata.mjs","../node_modules/@azure/msal-node/dist/client/UsernamePasswordClient.mjs","../node_modules/@azure/msal-node/dist/protocol/Authorize.mjs","../node_modules/@azure/msal-node/dist/client/ClientApplication.mjs","../node_modules/@azure/msal-node/dist/network/LoopbackClient.mjs","../node_modules/@azure/msal-node/dist/client/DeviceCodeClient.mjs","../node_modules/@azure/msal-node/dist/client/PublicClientApplication.mjs","../node_modules/@azure/msal-node/dist/client/ClientCredentialClient.mjs","../node_modules/@azure/msal-node/dist/client/OnBehalfOfClient.mjs","../node_modules/@azure/msal-node/dist/client/ConfidentialClientApplication.mjs","../node_modules/@azure/msal-node/dist/network/HttpClientWithRetries.mjs","../node_modules/@azure/msal-node/dist/client/ManagedIdentitySources/BaseManagedIdentitySource.mjs","../node_modules/@azure/msal-node/dist/utils/TimeUtils.mjs","../node_modules/@azure/msal-node/dist/retry/LinearRetryStrategy.mjs","../node_modules/@azure/msal-node/dist/retry/DefaultManagedIdentityRetryPolicy.mjs","../node_modules/@azure/msal-node/dist/config/ManagedIdentityRequestParameters.mjs","../node_modules/@azure/msal-node/dist/client/ManagedIdentitySources/AppService.mjs","../node_modules/@azure/msal-node/dist/client/ManagedIdentitySources/AzureArc.mjs","../node_modules/@azure/msal-node/dist/client/ManagedIdentitySources/CloudShell.mjs","../node_modules/@azure/msal-node/dist/retry/ExponentialRetryStrategy.mjs","../node_modules/@azure/msal-node/dist/retry/ImdsRetryPolicy.mjs","../node_modules/@azure/msal-node/dist/client/ManagedIdentitySources/Imds.mjs","../node_modules/@azure/msal-node/dist/client/ManagedIdentitySources/ServiceFabric.mjs","../node_modules/@azure/msal-node/dist/client/ManagedIdentitySources/MachineLearning.mjs","../node_modules/@azure/msal-node/dist/client/ManagedIdentityClient.mjs","../node_modules/@azure/msal-node/dist/client/ManagedIdentityApplication.mjs","../node_modules/@typespec/ts-http-runtime/dist/esm/util/delay.js","../node_modules/@typespec/ts-http-runtime/dist/esm/util/random.js","../node_modules/@typespec/ts-http-runtime/dist/esm/util/object.js","../node_modules/@typespec/ts-http-runtime/dist/esm/util/error.js","../node_modules/@typespec/ts-http-runtime/dist/esm/util/uuidUtils.js","../node_modules/@typespec/ts-http-runtime/dist/esm/util/checkEnvironment.js","../node_modules/@typespec/ts-http-runtime/dist/esm/util/bytesEncoding.js","../node_modules/@typespec/ts-http-runtime/dist/esm/util/sanitizer.js","../node_modules/@azure/abort-controller/dist/esm/AbortError.js","../node_modules/@azure/core-util/dist/esm/delay.js","../node_modules/@azure/core-util/dist/esm/createAbortablePromise.js","../node_modules/@azure/core-util/dist/esm/error.js","../node_modules/@azure/core-util/dist/esm/typeGuards.js","../node_modules/@azure/core-util/dist/esm/index.js","../node_modules/@azure/identity/dist/esm/msal/utils.js","../node_modules/@azure/core-client/dist/esm/interfaces.js","../node_modules/@azure/core-client/dist/esm/utils.js","../node_modules/@azure/core-client/dist/esm/serializer.js","../node_modules/@typespec/ts-http-runtime/dist/esm/abort-controller/AbortError.js","../node_modules/@typespec/ts-http-runtime/dist/esm/httpHeaders.js","../node_modules/@typespec/ts-http-runtime/dist/esm/pipelineRequest.js","../node_modules/@typespec/ts-http-runtime/dist/esm/pipeline.js","../node_modules/@typespec/ts-http-runtime/dist/esm/util/inspect.js","../node_modules/@typespec/ts-http-runtime/dist/esm/restError.js","../node_modules/@typespec/ts-http-runtime/dist/esm/log.js","../node_modules/@typespec/ts-http-runtime/dist/esm/nodeHttpClient.js","../node_modules/@typespec/ts-http-runtime/dist/esm/defaultHttpClient.js","../node_modules/@typespec/ts-http-runtime/dist/esm/policies/logPolicy.js","../node_modules/@typespec/ts-http-runtime/dist/esm/policies/redirectPolicy.js","../node_modules/@typespec/ts-http-runtime/dist/esm/util/userAgent.js","../node_modules/@typespec/ts-http-runtime/dist/esm/constants.js","../node_modules/@typespec/ts-http-runtime/dist/esm/util/userAgentPlatform.js","../node_modules/@typespec/ts-http-runtime/dist/esm/policies/userAgentPolicy.js","../node_modules/@typespec/ts-http-runtime/dist/esm/policies/decompressResponsePolicy.js","../node_modules/@typespec/ts-http-runtime/dist/esm/util/helpers.js","../node_modules/@typespec/ts-http-runtime/dist/esm/retryStrategies/throttlingRetryStrategy.js","../node_modules/@typespec/ts-http-runtime/dist/esm/retryStrategies/exponentialRetryStrategy.js","../node_modules/@typespec/ts-http-runtime/dist/esm/policies/retryPolicy.js","../node_modules/@typespec/ts-http-runtime/dist/esm/policies/defaultRetryPolicy.js","../node_modules/@typespec/ts-http-runtime/dist/esm/policies/formDataPolicy.js","../node_modules/debug/src/common.js","../node_modules/has-flag/index.js","../node_modules/debug/src/node.js","../node_modules/supports-color/index.js","../node_modules/debug/src/index.js","../node_modules/debug/src/browser.js","../node_modules/agent-base/dist/index.js","../node_modules/agent-base/dist/helpers.js","../node_modules/https-proxy-agent/dist/parse-proxy-response.js","../node_modules/https-proxy-agent/dist/index.js","../node_modules/http-proxy-agent/dist/index.js","../node_modules/@typespec/ts-http-runtime/dist/esm/policies/proxyPolicy.js","../node_modules/@typespec/ts-http-runtime/dist/esm/policies/agentPolicy.js","../node_modules/@typespec/ts-http-runtime/dist/esm/policies/tlsPolicy.js","../node_modules/@typespec/ts-http-runtime/dist/esm/util/typeGuards.js","../node_modules/tslib/tslib.es6.mjs","../node_modules/@typespec/ts-http-runtime/dist/esm/util/concat.js","../node_modules/@typespec/ts-http-runtime/dist/esm/policies/multipartPolicy.js","../node_modules/@typespec/ts-http-runtime/dist/esm/createPipelineFromOptions.js","../node_modules/@typespec/ts-http-runtime/dist/esm/policies/auth/checkInsecureConnection.js","../node_modules/@typespec/ts-http-runtime/dist/esm/client/clientHelpers.js","../node_modules/@typespec/ts-http-runtime/dist/esm/client/apiVersionPolicy.js","../node_modules/@typespec/ts-http-runtime/dist/esm/auth/credentials.js","../node_modules/@typespec/ts-http-runtime/dist/esm/policies/auth/oauth2AuthenticationPolicy.js","../node_modules/@typespec/ts-http-runtime/dist/esm/policies/auth/bearerAuthenticationPolicy.js","../node_modules/@typespec/ts-http-runtime/dist/esm/policies/auth/basicAuthenticationPolicy.js","../node_modules/@typespec/ts-http-runtime/dist/esm/policies/auth/apiKeyAuthenticationPolicy.js","../node_modules/@typespec/ts-http-runtime/dist/esm/client/multipart.js","../node_modules/@typespec/ts-http-runtime/dist/esm/client/sendRequest.js","../node_modules/@typespec/ts-http-runtime/dist/esm/client/urlHelpers.js","../node_modules/@typespec/ts-http-runtime/dist/esm/client/getClient.js","../node_modules/@typespec/ts-http-runtime/dist/esm/client/restError.js","../node_modules/@azure/core-rest-pipeline/dist/esm/log.js","../node_modules/@azure/core-rest-pipeline/dist/esm/constants.js","../node_modules/@azure/core-rest-pipeline/dist/esm/util/userAgent.js","../node_modules/@azure/core-rest-pipeline/dist/esm/util/userAgentPlatform.js","../node_modules/@azure/core-rest-pipeline/dist/esm/policies/userAgentPolicy.js","../node_modules/@azure/core-rest-pipeline/dist/esm/util/file.js","../node_modules/@azure/core-rest-pipeline/dist/esm/policies/multipartPolicy.js","../node_modules/@azure/core-rest-pipeline/dist/esm/restError.js","../node_modules/@azure/core-rest-pipeline/dist/esm/policies/tracingPolicy.js","../node_modules/@azure/core-rest-pipeline/dist/esm/util/wrapAbortSignal.js","../node_modules/@azure/core-rest-pipeline/dist/esm/createPipelineFromOptions.js","../node_modules/@azure/core-rest-pipeline/dist/esm/pipeline.js","../node_modules/@azure/core-rest-pipeline/dist/esm/policies/agentPolicy.js","../node_modules/@azure/core-rest-pipeline/dist/esm/policies/tlsPolicy.js","../node_modules/@azure/core-rest-pipeline/dist/esm/policies/proxyPolicy.js","../node_modules/@azure/core-rest-pipeline/dist/esm/policies/decompressResponsePolicy.js","../node_modules/@azure/core-rest-pipeline/dist/esm/policies/wrapAbortSignalLikePolicy.js","../node_modules/@azure/core-rest-pipeline/dist/esm/policies/formDataPolicy.js","../node_modules/@azure/core-rest-pipeline/dist/esm/policies/setClientRequestIdPolicy.js","../node_modules/@azure/core-rest-pipeline/dist/esm/policies/defaultRetryPolicy.js","../node_modules/@azure/core-rest-pipeline/dist/esm/policies/redirectPolicy.js","../node_modules/@azure/core-rest-pipeline/dist/esm/policies/logPolicy.js","../node_modules/@azure/core-rest-pipeline/dist/esm/httpHeaders.js","../node_modules/@azure/core-rest-pipeline/dist/esm/pipelineRequest.js","../node_modules/@azure/core-rest-pipeline/dist/esm/policies/retryPolicy.js","../node_modules/@azure/core-rest-pipeline/dist/esm/util/tokenCycler.js","../node_modules/@azure/core-rest-pipeline/dist/esm/policies/bearerTokenAuthenticationPolicy.js","../node_modules/@azure/core-client/dist/esm/state.js","../node_modules/@azure/core-client/dist/commonjs/state.js","../node_modules/@azure/core-client/dist/esm/operationHelpers.js","../node_modules/@azure/core-client/dist/esm/deserializationPolicy.js","../node_modules/@azure/core-client/dist/esm/interfaceHelpers.js","../node_modules/@azure/core-client/dist/esm/serializationPolicy.js","../node_modules/@azure/core-client/dist/esm/httpClientCache.js","../node_modules/@azure/core-rest-pipeline/dist/esm/defaultHttpClient.js","../node_modules/@azure/core-client/dist/esm/urlHelpers.js","../node_modules/@azure/core-client/dist/esm/log.js","../node_modules/@azure/core-client/dist/esm/serviceClient.js","../node_modules/@azure/core-client/dist/esm/pipeline.js","../node_modules/@azure/identity/dist/esm/credentials/managedIdentityCredential/utils.js","../node_modules/@azure/identity/dist/esm/client/identityClient.js","../node_modules/@azure/identity/dist/esm/util/identityTokenEndpoint.js","../node_modules/@azure/identity/dist/esm/regionalAuthority.js","../node_modules/@azure/identity/dist/esm/util/processMultiTenantRequest.js","../node_modules/@azure/identity/dist/esm/util/tenantIdUtils.js","../node_modules/@azure/identity/dist/esm/msal/nodeFlows/msalClient.js","../node_modules/@azure/identity/dist/esm/credentials/clientCertificateCredential.js","../node_modules/@azure/identity/dist/esm/util/scopeUtils.js","../node_modules/@azure/identity/dist/esm/credentials/clientSecretCredential.js","../node_modules/@azure/identity/dist/esm/credentials/usernamePasswordCredential.js","../node_modules/@azure/identity/dist/esm/credentials/environmentCredential.js","../node_modules/@azure/identity/dist/esm/credentials/managedIdentityCredential/imdsRetryPolicy.js","../node_modules/@azure/identity/dist/esm/credentials/managedIdentityCredential/imdsMsi.js","../node_modules/@azure/identity/dist/esm/credentials/clientAssertionCredential.js","../node_modules/@azure/identity/dist/esm/credentials/workloadIdentityCredential.js","../node_modules/@azure/identity/dist/esm/credentials/managedIdentityCredential/tokenExchangeMsi.js","../node_modules/@azure/identity/dist/esm/credentials/managedIdentityCredential/index.js","../node_modules/@azure/identity/dist/esm/credentials/azureDeveloperCliCredential.js","../node_modules/@azure/identity/dist/esm/util/subscriptionUtils.js","../node_modules/@azure/identity/dist/esm/credentials/azureCliCredential.js","../node_modules/@azure/identity/dist/esm/util/processUtils.js","../node_modules/@azure/identity/dist/esm/credentials/azurePowerShellCredential.js","../node_modules/@azure/identity/dist/esm/credentials/visualStudioCodeCredential.js","../node_modules/@azure/identity/dist/esm/credentials/brokerCredential.js","../node_modules/@azure/identity/dist/esm/credentials/defaultAzureCredentialFunctions.js","../node_modules/@azure/identity/dist/esm/credentials/defaultAzureCredential.js","../node_modules/@azure/keyvault-secrets/dist/esm/log.js","../node_modules/@azure/keyvault-secrets/dist/esm/generated/logger.js","../node_modules/@azure-rest/core-client/dist/esm/restError.js","../node_modules/@azure/core-auth/dist/esm/keyCredential.js","../node_modules/@azure/core-auth/dist/esm/tokenCredential.js","../node_modules/@azure-rest/core-client/dist/esm/clientHelpers.js","../node_modules/@azure-rest/core-client/dist/esm/keyCredentialAuthenticationPolicy.js","../node_modules/@azure-rest/core-client/dist/esm/apiVersionPolicy.js","../node_modules/@azure-rest/core-client/dist/esm/operationOptionHelpers.js","../node_modules/@typespec/ts-http-runtime/dist/esm/client/operationOptionHelpers.js","../node_modules/@azure-rest/core-client/dist/esm/getClient.js","../node_modules/@azure/keyvault-secrets/dist/esm/generated/models/models.js","../node_modules/@azure/keyvault-secrets/dist/esm/generated/static-helpers/pagingHelpers.js","../node_modules/@azure/keyvault-secrets/dist/esm/generated/static-helpers/urlTemplate.js","../node_modules/@azure/keyvault-secrets/dist/esm/generated/api/operations.js","../node_modules/@azure/keyvault-secrets/dist/esm/generated/keyVaultClient.js","../node_modules/@azure/keyvault-secrets/dist/esm/generated/api/keyVaultContext.js","../node_modules/@azure/keyvault-common/dist/esm/parseWWWAuthenticate.js","../node_modules/@azure/keyvault-common/dist/esm/tokenCycler.js","../node_modules/@azure/keyvault-common/dist/esm/logger.js","../node_modules/@azure/keyvault-common/dist/esm/keyVaultAuthenticationPolicy.js","../node_modules/@azure/keyvault-secrets/dist/esm/identifier.js","../node_modules/@azure/keyvault-common/dist/esm/parseKeyVaultIdentifier.js","../node_modules/@azure/keyvault-secrets/dist/esm/transformations.js","../node_modules/@azure/keyvault-secrets/dist/esm/constants.js","../node_modules/@azure/keyvault-secrets/dist/esm/tracing.js","../node_modules/@azure/core-lro/dist/esm/legacy/poller.js","../node_modules/@azure/keyvault-secrets/dist/esm/lro/keyVaultSecretPoller.js","../node_modules/@azure/keyvault-secrets/dist/esm/lro/delete/operation.js","../node_modules/@azure/keyvault-secrets/dist/esm/lro/delete/poller.js","../node_modules/@azure/keyvault-secrets/dist/esm/lro/recover/operation.js","../node_modules/@azure/keyvault-secrets/dist/esm/lro/recover/poller.js","../node_modules/@azure/keyvault-secrets/dist/esm/index.js","../node_modules/@azure/keyvault-secrets/dist/esm/secretsModels.js","../node_modules/@microsoft/microsoft-graph-client/lib/es/src/RequestMethod.js","../node_modules/@microsoft/microsoft-graph-client/lib/es/src/Constants.js","../node_modules/@microsoft/microsoft-graph-client/lib/es/src/GraphClientError.js","../node_modules/@microsoft/microsoft-graph-client/lib/es/src/GraphRequestUtil.js","../node_modules/@microsoft/microsoft-graph-client/lib/es/src/middleware/MiddlewareControl.js","../node_modules/@microsoft/microsoft-graph-client/lib/es/src/middleware/MiddlewareUtil.js","../node_modules/@microsoft/microsoft-graph-client/lib/es/src/middleware/options/AuthenticationHandlerOptions.js","../node_modules/@microsoft/microsoft-graph-client/lib/es/src/middleware/options/TelemetryHandlerOptions.js","../node_modules/@microsoft/microsoft-graph-client/lib/es/src/middleware/AuthenticationHandler.js","../node_modules/@microsoft/microsoft-graph-client/lib/es/src/middleware/HTTPMessageHandler.js","../node_modules/@microsoft/microsoft-graph-client/lib/es/src/middleware/options/RetryHandlerOptions.js","../node_modules/@microsoft/microsoft-graph-client/lib/es/src/middleware/RetryHandler.js","../node_modules/@microsoft/microsoft-graph-client/lib/es/src/middleware/options/RedirectHandlerOptions.js","../node_modules/@microsoft/microsoft-graph-client/lib/es/src/middleware/RedirectHandler.js","../node_modules/@microsoft/microsoft-graph-client/lib/es/src/middleware/TelemetryHandler.js","../node_modules/@microsoft/microsoft-graph-client/lib/es/src/middleware/options/ChaosStrategy.js","../node_modules/@microsoft/microsoft-graph-client/lib/es/src/ResponseType.js","../node_modules/@microsoft/microsoft-graph-client/lib/es/src/GraphResponseHandler.js","../node_modules/@microsoft/microsoft-graph-client/lib/es/src/CustomAuthenticationProvider.js","../node_modules/@microsoft/microsoft-graph-client/lib/es/src/GraphError.js","../node_modules/@microsoft/microsoft-graph-client/lib/es/src/GraphErrorHandler.js","../node_modules/@microsoft/microsoft-graph-client/lib/es/src/GraphRequest.js","../node_modules/@microsoft/microsoft-graph-client/lib/es/src/HTTPClient.js","../node_modules/@microsoft/microsoft-graph-client/lib/es/src/HTTPClientFactory.js","../node_modules/@microsoft/microsoft-graph-client/lib/es/src/Client.js","../node_modules/@microsoft/microsoft-graph-client/lib/es/src/ValidatePolyFilling.js","../node_modules/@inquirer/core/dist/esm/lib/key.js","../node_modules/@inquirer/core/dist/esm/lib/errors.js","../node_modules/@inquirer/core/dist/esm/lib/hook-engine.js","../node_modules/@inquirer/core/dist/esm/lib/use-state.js","../node_modules/@inquirer/core/dist/esm/lib/use-effect.js","../node_modules/yoctocolors-cjs/index.js","../node_modules/@inquirer/figures/dist/esm/index.js","../node_modules/@inquirer/core/dist/esm/lib/theme.js","../node_modules/@inquirer/core/dist/esm/lib/make-theme.js","../node_modules/@inquirer/core/dist/esm/lib/use-prefix.js","../node_modules/@inquirer/core/dist/esm/lib/use-memo.js","../node_modules/@inquirer/core/dist/esm/lib/use-ref.js","../node_modules/@inquirer/core/dist/esm/lib/use-keypress.js","../node_modules/cli-width/index.js","../node_modules/ansi-regex/index.js","../node_modules/strip-ansi/index.js","../node_modules/is-fullwidth-code-point/index.js","../node_modules/emoji-regex/index.js","../node_modules/string-width/index.js","../node_modules/color-convert/conversions.js","../node_modules/color-name/index.js","../node_modules/color-convert/route.js","../node_modules/color-convert/index.js","../node_modules/ansi-styles/index.js","../node_modules/wrap-ansi/index.js","../node_modules/@inquirer/core/dist/esm/lib/utils.js","../node_modules/@inquirer/core/dist/esm/lib/pagination/use-pagination.js","../node_modules/mute-stream/lib/index.js","../node_modules/signal-exit/dist/mjs/signals.js","../node_modules/signal-exit/dist/mjs/index.js","../node_modules/ansi-escapes/index.js","../node_modules/@inquirer/core/dist/esm/lib/screen-manager.js","../node_modules/@inquirer/core/dist/esm/lib/promise-polyfill.js","../node_modules/@inquirer/core/dist/esm/lib/create-prompt.js","../node_modules/@inquirer/core/dist/esm/lib/Separator.js","../node_modules/@inquirer/checkbox/dist/esm/index.js","../node_modules/chardet/lib/match.js","../node_modules/chardet/lib/encoding/unicode.js","../node_modules/chardet/lib/encoding/mbcs.js","../node_modules/chardet/lib/encoding/sbcs.js","../node_modules/chardet/lib/encoding/iso2022.js","../node_modules/chardet/lib/index.js","../node_modules/chardet/lib/fs/node.js","../node_modules/chardet/lib/encoding/ascii.js","../node_modules/chardet/lib/encoding/utf8.js","../node_modules/chardet/lib/utils.js","../node_modules/safer-buffer/safer.js","../node_modules/iconv-lite/lib/bom-handling.js","../node_modules/iconv-lite/encodings/internal.js","../node_modules/iconv-lite/encodings/utf32.js","../node_modules/iconv-lite/encodings/utf16.js","../node_modules/iconv-lite/encodings/utf7.js","../node_modules/iconv-lite/encodings/sbcs-codec.js","../node_modules/iconv-lite/encodings/dbcs-codec.js","../node_modules/iconv-lite/lib/streams.js","../node_modules/iconv-lite/lib/index.js","../node_modules/iconv-lite/encodings/index.js","../node_modules/iconv-lite/encodings/sbcs-data.js","../node_modules/iconv-lite/encodings/sbcs-data-generated.js","../node_modules/iconv-lite/encodings/dbcs-data.js","../node_modules/@inquirer/external-editor/dist/esm/errors/CreateFileError.js","../node_modules/@inquirer/external-editor/dist/esm/errors/LaunchEditorError.js","../node_modules/@inquirer/external-editor/dist/esm/errors/ReadFileError.js","../node_modules/@inquirer/external-editor/dist/esm/errors/RemoveFileError.js","../node_modules/@inquirer/external-editor/dist/esm/index.js","../node_modules/@inquirer/editor/dist/esm/index.js","../node_modules/@inquirer/confirm/dist/esm/index.js","../node_modules/@inquirer/input/dist/esm/index.js","../node_modules/@inquirer/number/dist/esm/index.js","../node_modules/@inquirer/expand/dist/esm/index.js","../node_modules/@inquirer/rawlist/dist/esm/index.js","../node_modules/@inquirer/password/dist/esm/index.js","../node_modules/@inquirer/search/dist/esm/index.js","../node_modules/@inquirer/select/dist/esm/index.js","../node_modules/rxjs/dist/esm5/internal/util/isFunction.js","../node_modules/rxjs/dist/esm5/internal/util/createErrorClass.js","../node_modules/rxjs/dist/esm5/internal/util/UnsubscriptionError.js","../node_modules/rxjs/dist/esm5/internal/util/arrRemove.js","../node_modules/rxjs/dist/esm5/internal/Subscription.js","../node_modules/rxjs/dist/esm5/internal/config.js","../node_modules/rxjs/dist/esm5/internal/scheduler/timeoutProvider.js","../node_modules/rxjs/dist/esm5/internal/util/reportUnhandledError.js","../node_modules/rxjs/dist/esm5/internal/util/noop.js","../node_modules/rxjs/dist/esm5/internal/util/errorContext.js","../node_modules/rxjs/dist/esm5/internal/Subscriber.js","../node_modules/rxjs/dist/esm5/internal/symbol/observable.js","../node_modules/rxjs/dist/esm5/internal/util/identity.js","../node_modules/rxjs/dist/esm5/internal/Observable.js","../node_modules/rxjs/dist/esm5/internal/util/pipe.js","../node_modules/rxjs/dist/esm5/internal/util/lift.js","../node_modules/rxjs/dist/esm5/internal/operators/OperatorSubscriber.js","../node_modules/rxjs/dist/esm5/internal/observable/empty.js","../node_modules/rxjs/dist/esm5/internal/util/args.js","../node_modules/rxjs/dist/esm5/internal/util/isScheduler.js","../node_modules/rxjs/dist/esm5/internal/util/isArrayLike.js","../node_modules/rxjs/dist/esm5/internal/util/isPromise.js","../node_modules/rxjs/dist/esm5/internal/util/isInteropObservable.js","../node_modules/rxjs/dist/esm5/internal/util/isAsyncIterable.js","../node_modules/rxjs/dist/esm5/internal/util/throwUnobservableError.js","../node_modules/rxjs/dist/esm5/internal/symbol/iterator.js","../node_modules/rxjs/dist/esm5/internal/util/isIterable.js","../node_modules/rxjs/dist/esm5/internal/util/isReadableStreamLike.js","../node_modules/rxjs/dist/esm5/internal/observable/innerFrom.js","../node_modules/rxjs/dist/esm5/internal/util/executeSchedule.js","../node_modules/rxjs/dist/esm5/internal/operators/observeOn.js","../node_modules/rxjs/dist/esm5/internal/operators/subscribeOn.js","../node_modules/rxjs/dist/esm5/internal/scheduled/scheduleAsyncIterable.js","../node_modules/rxjs/dist/esm5/internal/scheduled/scheduled.js","../node_modules/rxjs/dist/esm5/internal/scheduled/scheduleObservable.js","../node_modules/rxjs/dist/esm5/internal/scheduled/scheduleArray.js","../node_modules/rxjs/dist/esm5/internal/scheduled/schedulePromise.js","../node_modules/rxjs/dist/esm5/internal/scheduled/scheduleIterable.js","../node_modules/rxjs/dist/esm5/internal/scheduled/scheduleReadableStreamLike.js","../node_modules/rxjs/dist/esm5/internal/observable/from.js","../node_modules/rxjs/dist/esm5/internal/util/EmptyError.js","../node_modules/rxjs/dist/esm5/internal/operators/mergeMap.js","../node_modules/rxjs/dist/esm5/internal/operators/map.js","../node_modules/rxjs/dist/esm5/internal/operators/mergeInternals.js","../node_modules/rxjs/dist/esm5/internal/operators/reduce.js","../node_modules/rxjs/dist/esm5/internal/operators/scanInternals.js","../node_modules/rxjs/dist/esm5/internal/operators/concatMap.js","../node_modules/run-async/index.js","../node_modules/inquirer/dist/esm/ui/prompt.js","../node_modules/rxjs/dist/esm5/internal/util/isObservable.js","../node_modules/rxjs/dist/esm5/internal/observable/of.js","../node_modules/rxjs/dist/esm5/internal/operators/filter.js","../node_modules/rxjs/dist/esm5/internal/observable/defer.js","../node_modules/rxjs/dist/esm5/internal/lastValueFrom.js","../node_modules/inquirer/dist/esm/index.js","../node_modules/webidl-conversions/lib/index.js","../node_modules/whatwg-url/lib/utils.js","../node_modules/tr46/index.js","../node_modules/whatwg-url/lib/url-state-machine.js","../node_modules/whatwg-url/lib/URL.js","../node_modules/whatwg-url/lib/URL-impl.js","../node_modules/whatwg-url/lib/public-api.js","../node_modules/node-fetch/lib/index.mjs","../node_modules/isomorphic-fetch/fetch-npm-node.js","../promptUtils.mjs","../vaultQueryUtils.mjs","../index.mjs","../node_modules/is-docker/index.js","../node_modules/is-inside-container/index.js","../node_modules/is-wsl/index.js","../node_modules/wsl-utils/index.js","../node_modules/define-lazy-prop/index.js","../node_modules/default-browser-id/index.js","../node_modules/run-applescript/index.js","../node_modules/bundle-name/index.js","../node_modules/default-browser/windows.js","../node_modules/default-browser/index.js","../node_modules/open/index.js","../vaultPromptGroupsUtils.mjs","../vaultPromptUtils.mjs"],"sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n/**\n * Current version of the `@azure/identity` package.\n */\nexport const SDK_VERSION = `4.11.1`;\n/**\n * The default client ID for authentication\n * @internal\n */\n// TODO: temporary - this is the Azure CLI clientID - we'll replace it when\n// Developer Sign On application is available\n// https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/identity/Azure.Identity/src/Constants.cs#L9\nexport const DeveloperSignOnClientId = \"04b07795-8ddb-461a-bbee-02f9e1bf7b46\";\n/**\n * The default tenant for authentication\n * @internal\n */\nexport const DefaultTenantId = \"common\";\n/**\n * A list of known Azure authority hosts\n */\nexport var AzureAuthorityHosts;\n(function (AzureAuthorityHosts) {\n    /**\n     * China-based Azure Authority Host\n     */\n    AzureAuthorityHosts[\"AzureChina\"] = \"https://login.chinacloudapi.cn\";\n    /**\n     * Germany-based Azure Authority Host\n     *\n     * @deprecated Microsoft Cloud Germany was closed on October 29th, 2021.\n     *\n     * */\n    AzureAuthorityHosts[\"AzureGermany\"] = \"https://login.microsoftonline.de\";\n    /**\n     * US Government Azure Authority Host\n     */\n    AzureAuthorityHosts[\"AzureGovernment\"] = \"https://login.microsoftonline.us\";\n    /**\n     * Public Cloud Azure Authority Host\n     */\n    AzureAuthorityHosts[\"AzurePublicCloud\"] = \"https://login.microsoftonline.com\";\n})(AzureAuthorityHosts || (AzureAuthorityHosts = {}));\n/**\n * @internal\n * The default authority host.\n */\nexport const DefaultAuthorityHost = AzureAuthorityHosts.AzurePublicCloud;\n/**\n * @internal\n * The default environment host for Azure Public Cloud\n */\nexport const DefaultAuthority = \"login.microsoftonline.com\";\n/**\n * @internal\n * Allow acquiring tokens for any tenant for multi-tentant auth.\n */\nexport const ALL_TENANTS = [\"*\"];\n/**\n * @internal\n */\nexport const CACHE_CAE_SUFFIX = \"cae\";\n/**\n * @internal\n */\nexport const CACHE_NON_CAE_SUFFIX = \"nocae\";\n/**\n * @internal\n *\n * The default name for the cache persistence plugin.\n * Matches the constant defined in the cache persistence package.\n */\nexport const DEFAULT_TOKEN_CACHE_NAME = \"msal.cache\";\n//# sourceMappingURL=constants.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nimport { CACHE_CAE_SUFFIX, CACHE_NON_CAE_SUFFIX, DEFAULT_TOKEN_CACHE_NAME, } from \"../../constants.js\";\n/**\n * The current persistence provider, undefined by default.\n * @internal\n */\nexport let persistenceProvider = undefined;\n/**\n * An object that allows setting the persistence provider.\n * @internal\n */\nexport const msalNodeFlowCacheControl = {\n    setPersistence(pluginProvider) {\n        persistenceProvider = pluginProvider;\n    },\n};\n/**\n * The current native broker provider, undefined by default.\n * @internal\n */\nexport let nativeBrokerInfo = undefined;\n/**\n * The current VSCode auth record path, undefined by default.\n * @internal\n */\nexport let vsCodeAuthRecordPath = undefined;\n/**\n * The current VSCode broker, undefined by default.\n * @internal\n */\nexport let vsCodeBrokerInfo = undefined;\nexport function hasNativeBroker() {\n    return nativeBrokerInfo !== undefined;\n}\nexport function hasVSCodePlugin() {\n    return vsCodeAuthRecordPath !== undefined && vsCodeBrokerInfo !== undefined;\n}\n/**\n * An object that allows setting the native broker provider.\n * @internal\n */\nexport const msalNodeFlowNativeBrokerControl = {\n    setNativeBroker(broker) {\n        nativeBrokerInfo = {\n            broker,\n        };\n    },\n};\n/**\n * An object that allows setting the VSCode credential auth record path and broker.\n * @internal\n */\nexport const msalNodeFlowVSCodeCredentialControl = {\n    setVSCodeAuthRecordPath(path) {\n        vsCodeAuthRecordPath = path;\n    },\n    setVSCodeBroker(broker) {\n        vsCodeBrokerInfo = {\n            broker,\n        };\n    },\n};\n/**\n * Configures plugins, validating that required plugins are available and enabled.\n *\n * Does not create the plugins themselves, but rather returns the configuration that will be used to create them.\n *\n * @param options - options for creating the MSAL client\n * @returns plugin configuration\n */\nfunction generatePluginConfiguration(options) {\n    const config = {\n        cache: {},\n        broker: {\n            ...options.brokerOptions,\n            isEnabled: options.brokerOptions?.enabled ?? false,\n            enableMsaPassthrough: options.brokerOptions?.legacyEnableMsaPassthrough ?? false,\n        },\n    };\n    if (options.tokenCachePersistenceOptions?.enabled) {\n        if (persistenceProvider === undefined) {\n            throw new Error([\n                \"Persistent token caching was requested, but no persistence provider was configured.\",\n                \"You must install the identity-cache-persistence plugin package (`npm install --save @azure/identity-cache-persistence`)\",\n                \"and enable it by importing `useIdentityPlugin` from `@azure/identity` and calling\",\n                \"`useIdentityPlugin(cachePersistencePlugin)` before using `tokenCachePersistenceOptions`.\",\n            ].join(\" \"));\n        }\n        const cacheBaseName = options.tokenCachePersistenceOptions.name || DEFAULT_TOKEN_CACHE_NAME;\n        config.cache.cachePlugin = persistenceProvider({\n            name: `${cacheBaseName}.${CACHE_NON_CAE_SUFFIX}`,\n            ...options.tokenCachePersistenceOptions,\n        });\n        config.cache.cachePluginCae = persistenceProvider({\n            name: `${cacheBaseName}.${CACHE_CAE_SUFFIX}`,\n            ...options.tokenCachePersistenceOptions,\n        });\n    }\n    if (options.brokerOptions?.enabled) {\n        if (options.isVSCodeCredential) {\n            if (vsCodeBrokerInfo === undefined) {\n                throw new Error([\n                    \"Visual Studio Code Credential was requested, but no plugin was configured or no authentication record was found.\",\n                    \"You must install the identity-vscode plugin package (`npm install --save @azure/identity-vscode`)\",\n                    \"and enable it by importing `useIdentityPlugin` from `@azure/identity` and calling\",\n                    \"`useIdentityPlugin(vsCodePlugin)` before using `enableBroker`.\",\n                ].join(\" \"));\n            }\n            config.broker.nativeBrokerPlugin = vsCodeBrokerInfo.broker;\n        }\n        else {\n            if (nativeBrokerInfo === undefined) {\n                throw new Error([\n                    \"Broker for WAM was requested to be enabled, but no native broker was configured.\",\n                    \"You must install the identity-broker plugin package (`npm install --save @azure/identity-broker`)\",\n                    \"and enable it by importing `useIdentityPlugin` from `@azure/identity` and calling\",\n                    \"`useIdentityPlugin(brokerPlugin)` before using `enableBroker`.\",\n                ].join(\" \"));\n            }\n            config.broker.nativeBrokerPlugin = nativeBrokerInfo.broker;\n        }\n    }\n    return config;\n}\n/**\n * Wraps generatePluginConfiguration as a writeable property for test stubbing purposes.\n */\nexport const msalPlugins = {\n    generatePluginConfiguration,\n};\n//# sourceMappingURL=msalPlugins.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nfunction isErrorResponse(errorResponse) {\n    return (errorResponse &&\n        typeof errorResponse.error === \"string\" &&\n        typeof errorResponse.error_description === \"string\");\n}\n/**\n * The Error.name value of an CredentialUnavailable\n */\nexport const CredentialUnavailableErrorName = \"CredentialUnavailableError\";\n/**\n * This signifies that the credential that was tried in a chained credential\n * was not available to be used as the credential. Rather than treating this as\n * an error that should halt the chain, it's caught and the chain continues\n */\nexport class CredentialUnavailableError extends Error {\n    constructor(message, options) {\n        super(message, options);\n        this.name = CredentialUnavailableErrorName;\n    }\n}\n/**\n * The Error.name value of an AuthenticationError\n */\nexport const AuthenticationErrorName = \"AuthenticationError\";\n/**\n * Provides details about a failure to authenticate with Azure Active\n * Directory.  The `errorResponse` field contains more details about\n * the specific failure.\n */\nexport class AuthenticationError extends Error {\n    /**\n     * The HTTP status code returned from the authentication request.\n     */\n    statusCode;\n    /**\n     * The error response details.\n     */\n    errorResponse;\n    constructor(statusCode, errorBody, options) {\n        let errorResponse = {\n            error: \"unknown\",\n            errorDescription: \"An unknown error occurred and no additional details are available.\",\n        };\n        if (isErrorResponse(errorBody)) {\n            errorResponse = convertOAuthErrorResponseToErrorResponse(errorBody);\n        }\n        else if (typeof errorBody === \"string\") {\n            try {\n                // Most error responses will contain JSON-formatted error details\n                // in the response body\n                const oauthErrorResponse = JSON.parse(errorBody);\n                errorResponse = convertOAuthErrorResponseToErrorResponse(oauthErrorResponse);\n            }\n            catch (e) {\n                if (statusCode === 400) {\n                    errorResponse = {\n                        error: \"invalid_request\",\n                        errorDescription: `The service indicated that the request was invalid.\\n\\n${errorBody}`,\n                    };\n                }\n                else {\n                    errorResponse = {\n                        error: \"unknown_error\",\n                        errorDescription: `An unknown error has occurred. Response body:\\n\\n${errorBody}`,\n                    };\n                }\n            }\n        }\n        else {\n            errorResponse = {\n                error: \"unknown_error\",\n                errorDescription: \"An unknown error occurred and no additional details are available.\",\n            };\n        }\n        super(`${errorResponse.error} Status code: ${statusCode}\\nMore details:\\n${errorResponse.errorDescription},`, options);\n        this.statusCode = statusCode;\n        this.errorResponse = errorResponse;\n        // Ensure that this type reports the correct name\n        this.name = AuthenticationErrorName;\n    }\n}\n/**\n * The Error.name value of an AggregateAuthenticationError\n */\nexport const AggregateAuthenticationErrorName = \"AggregateAuthenticationError\";\n/**\n * Provides an `errors` array containing {@link AuthenticationError} instance\n * for authentication failures from credentials in a {@link ChainedTokenCredential}.\n */\nexport class AggregateAuthenticationError extends Error {\n    /**\n     * The array of error objects that were thrown while trying to authenticate\n     * with the credentials in a {@link ChainedTokenCredential}.\n     */\n    errors;\n    constructor(errors, errorMessage) {\n        const errorDetail = errors.join(\"\\n\");\n        super(`${errorMessage}\\n${errorDetail}`);\n        this.errors = errors;\n        // Ensure that this type reports the correct name\n        this.name = AggregateAuthenticationErrorName;\n    }\n}\nfunction convertOAuthErrorResponseToErrorResponse(errorBody) {\n    return {\n        error: errorBody.error,\n        errorDescription: errorBody.error_description,\n        correlationId: errorBody.correlation_id,\n        errorCodes: errorBody.error_codes,\n        timestamp: errorBody.timestamp,\n        traceId: errorBody.trace_id,\n    };\n}\n/**\n * Error used to enforce authentication after trying to retrieve a token silently.\n */\nexport class AuthenticationRequiredError extends Error {\n    /**\n     * The list of scopes for which the token will have access.\n     */\n    scopes;\n    /**\n     * The options passed to the getToken request.\n     */\n    getTokenOptions;\n    constructor(\n    /**\n     * Optional parameters. A message can be specified. The {@link GetTokenOptions} of the request can also be specified to more easily associate the error with the received parameters.\n     */\n    options) {\n        super(options.message, options.cause ? { cause: options.cause } : undefined);\n        this.scopes = options.scopes;\n        this.getTokenOptions = options.getTokenOptions;\n        this.name = \"AuthenticationRequiredError\";\n    }\n}\n//# sourceMappingURL=errors.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nimport { log } from \"./log.js\";\nconst debugEnvVariable = (typeof process !== \"undefined\" && process.env && process.env.DEBUG) || undefined;\nlet enabledString;\nlet enabledNamespaces = [];\nlet skippedNamespaces = [];\nconst debuggers = [];\nif (debugEnvVariable) {\n    enable(debugEnvVariable);\n}\nconst debugObj = Object.assign((namespace) => {\n    return createDebugger(namespace);\n}, {\n    enable,\n    enabled,\n    disable,\n    log,\n});\nfunction enable(namespaces) {\n    enabledString = namespaces;\n    enabledNamespaces = [];\n    skippedNamespaces = [];\n    const wildcard = /\\*/g;\n    const namespaceList = namespaces.split(\",\").map((ns) => ns.trim().replace(wildcard, \".*?\"));\n    for (const ns of namespaceList) {\n        if (ns.startsWith(\"-\")) {\n            skippedNamespaces.push(new RegExp(`^${ns.substr(1)}$`));\n        }\n        else {\n            enabledNamespaces.push(new RegExp(`^${ns}$`));\n        }\n    }\n    for (const instance of debuggers) {\n        instance.enabled = enabled(instance.namespace);\n    }\n}\nfunction enabled(namespace) {\n    if (namespace.endsWith(\"*\")) {\n        return true;\n    }\n    for (const skipped of skippedNamespaces) {\n        if (skipped.test(namespace)) {\n            return false;\n        }\n    }\n    for (const enabledNamespace of enabledNamespaces) {\n        if (enabledNamespace.test(namespace)) {\n            return true;\n        }\n    }\n    return false;\n}\nfunction disable() {\n    const result = enabledString || \"\";\n    enable(\"\");\n    return result;\n}\nfunction createDebugger(namespace) {\n    const newDebugger = Object.assign(debug, {\n        enabled: enabled(namespace),\n        destroy,\n        log: debugObj.log,\n        namespace,\n        extend,\n    });\n    function debug(...args) {\n        if (!newDebugger.enabled) {\n            return;\n        }\n        if (args.length > 0) {\n            args[0] = `${namespace} ${args[0]}`;\n        }\n        newDebugger.log(...args);\n    }\n    debuggers.push(newDebugger);\n    return newDebugger;\n}\nfunction destroy() {\n    const index = debuggers.indexOf(this);\n    if (index >= 0) {\n        debuggers.splice(index, 1);\n        return true;\n    }\n    return false;\n}\nfunction extend(namespace) {\n    const newDebugger = createDebugger(`${this.namespace}:${namespace}`);\n    newDebugger.log = this.log;\n    return newDebugger;\n}\nexport default debugObj;\n//# sourceMappingURL=debug.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nimport { EOL } from \"node:os\";\nimport util from \"node:util\";\nimport * as process from \"node:process\";\nexport function log(message, ...args) {\n    process.stderr.write(`${util.format(message, ...args)}${EOL}`);\n}\n//# sourceMappingURL=log.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nimport debug from \"./debug.js\";\nconst TYPESPEC_RUNTIME_LOG_LEVELS = [\"verbose\", \"info\", \"warning\", \"error\"];\nconst levelMap = {\n    verbose: 400,\n    info: 300,\n    warning: 200,\n    error: 100,\n};\nfunction patchLogMethod(parent, child) {\n    child.log = (...args) => {\n        parent.log(...args);\n    };\n}\nfunction isTypeSpecRuntimeLogLevel(level) {\n    return TYPESPEC_RUNTIME_LOG_LEVELS.includes(level);\n}\n/**\n * Creates a logger context base on the provided options.\n * @param options - The options for creating a logger context.\n * @returns The logger context.\n */\nexport function createLoggerContext(options) {\n    const registeredLoggers = new Set();\n    const logLevelFromEnv = (typeof process !== \"undefined\" && process.env && process.env[options.logLevelEnvVarName]) ||\n        undefined;\n    let logLevel;\n    const clientLogger = debug(options.namespace);\n    clientLogger.log = (...args) => {\n        debug.log(...args);\n    };\n    function contextSetLogLevel(level) {\n        if (level && !isTypeSpecRuntimeLogLevel(level)) {\n            throw new Error(`Unknown log level '${level}'. Acceptable values: ${TYPESPEC_RUNTIME_LOG_LEVELS.join(\",\")}`);\n        }\n        logLevel = level;\n        const enabledNamespaces = [];\n        for (const logger of registeredLoggers) {\n            if (shouldEnable(logger)) {\n                enabledNamespaces.push(logger.namespace);\n            }\n        }\n        debug.enable(enabledNamespaces.join(\",\"));\n    }\n    if (logLevelFromEnv) {\n        // avoid calling setLogLevel because we don't want a mis-set environment variable to crash\n        if (isTypeSpecRuntimeLogLevel(logLevelFromEnv)) {\n            contextSetLogLevel(logLevelFromEnv);\n        }\n        else {\n            console.error(`${options.logLevelEnvVarName} set to unknown log level '${logLevelFromEnv}'; logging is not enabled. Acceptable values: ${TYPESPEC_RUNTIME_LOG_LEVELS.join(\", \")}.`);\n        }\n    }\n    function shouldEnable(logger) {\n        return Boolean(logLevel && levelMap[logger.level] <= levelMap[logLevel]);\n    }\n    function createLogger(parent, level) {\n        const logger = Object.assign(parent.extend(level), {\n            level,\n        });\n        patchLogMethod(parent, logger);\n        if (shouldEnable(logger)) {\n            const enabledNamespaces = debug.disable();\n            debug.enable(enabledNamespaces + \",\" + logger.namespace);\n        }\n        registeredLoggers.add(logger);\n        return logger;\n    }\n    function contextGetLogLevel() {\n        return logLevel;\n    }\n    function contextCreateClientLogger(namespace) {\n        const clientRootLogger = clientLogger.extend(namespace);\n        patchLogMethod(clientLogger, clientRootLogger);\n        return {\n            error: createLogger(clientRootLogger, \"error\"),\n            warning: createLogger(clientRootLogger, \"warning\"),\n            info: createLogger(clientRootLogger, \"info\"),\n            verbose: createLogger(clientRootLogger, \"verbose\"),\n        };\n    }\n    return {\n        setLogLevel: contextSetLogLevel,\n        getLogLevel: contextGetLogLevel,\n        createClientLogger: contextCreateClientLogger,\n        logger: clientLogger,\n    };\n}\nconst context = createLoggerContext({\n    logLevelEnvVarName: \"TYPESPEC_RUNTIME_LOG_LEVEL\",\n    namespace: \"typeSpecRuntime\",\n});\n/**\n * Immediately enables logging at the specified log level. If no level is specified, logging is disabled.\n * @param level - The log level to enable for logging.\n * Options from most verbose to least verbose are:\n * - verbose\n * - info\n * - warning\n * - error\n */\n// eslint-disable-next-line @typescript-eslint/no-redeclare\nexport const TypeSpecRuntimeLogger = context.logger;\n/**\n * Retrieves the currently specified log level.\n */\nexport function setLogLevel(logLevel) {\n    context.setLogLevel(logLevel);\n}\n/**\n * Retrieves the currently specified log level.\n */\nexport function getLogLevel() {\n    return context.getLogLevel();\n}\n/**\n * Creates a logger for use by the SDKs that inherits from `TypeSpecRuntimeLogger`.\n * @param namespace - The name of the SDK package.\n * @hidden\n */\nexport function createClientLogger(namespace) {\n    return context.createClientLogger(namespace);\n}\n//# sourceMappingURL=logger.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nimport { createLoggerContext } from \"@typespec/ts-http-runtime/internal/logger\";\nconst context = createLoggerContext({\n    logLevelEnvVarName: \"AZURE_LOG_LEVEL\",\n    namespace: \"azure\",\n});\n/**\n * The AzureLogger provides a mechanism for overriding where logs are output to.\n * By default, logs are sent to stderr.\n * Override the `log` method to redirect logs to another location.\n */\nexport const AzureLogger = context.logger;\n/**\n * Immediately enables logging at the specified log level. If no level is specified, logging is disabled.\n * @param level - The log level to enable for logging.\n * Options from most verbose to least verbose are:\n * - verbose\n * - info\n * - warning\n * - error\n */\nexport function setLogLevel(level) {\n    context.setLogLevel(level);\n}\n/**\n * Retrieves the currently specified log level.\n */\nexport function getLogLevel() {\n    return context.getLogLevel();\n}\n/**\n * Creates a logger for use by the Azure SDKs that inherits from `AzureLogger`.\n * @param namespace - The name of the SDK package.\n * @hidden\n */\nexport function createClientLogger(namespace) {\n    return context.createClientLogger(namespace);\n}\n//# sourceMappingURL=index.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nimport { createClientLogger } from \"@azure/logger\";\n/**\n * The AzureLogger used for all clients within the identity package\n */\nexport const logger = createClientLogger(\"identity\");\n/**\n * Separates a list of environment variable names into a plain object with two arrays: an array of missing environment variables and another array with assigned environment variables.\n * @param supportedEnvVars - List of environment variable names\n */\nexport function processEnvVars(supportedEnvVars) {\n    return supportedEnvVars.reduce((acc, envVariable) => {\n        if (process.env[envVariable]) {\n            acc.assigned.push(envVariable);\n        }\n        else {\n            acc.missing.push(envVariable);\n        }\n        return acc;\n    }, { missing: [], assigned: [] });\n}\n/**\n * Based on a given list of environment variable names,\n * logs the environment variables currently assigned during the usage of a credential that goes by the given name.\n * @param credentialName - Name of the credential in use\n * @param supportedEnvVars - List of environment variables supported by that credential\n */\nexport function logEnvVars(credentialName, supportedEnvVars) {\n    const { assigned } = processEnvVars(supportedEnvVars);\n    logger.info(`${credentialName} => Found the following environment variables: ${assigned.join(\", \")}`);\n}\n/**\n * Formatting the success event on the credentials\n */\nexport function formatSuccess(scope) {\n    return `SUCCESS. Scopes: ${Array.isArray(scope) ? scope.join(\", \") : scope}.`;\n}\n/**\n * Formatting the success event on the credentials\n */\nexport function formatError(scope, error) {\n    let message = \"ERROR.\";\n    if (scope?.length) {\n        message += ` Scopes: ${Array.isArray(scope) ? scope.join(\", \") : scope}.`;\n    }\n    return `${message} Error message: ${typeof error === \"string\" ? error : error.message}.`;\n}\n/**\n * Generates a CredentialLoggerInstance.\n *\n * It logs with the format:\n *\n *   `[title] => [message]`\n *\n */\nexport function credentialLoggerInstance(title, parent, log = logger) {\n    const fullTitle = parent ? `${parent.fullTitle} ${title}` : title;\n    function info(message) {\n        log.info(`${fullTitle} =>`, message);\n    }\n    function warning(message) {\n        log.warning(`${fullTitle} =>`, message);\n    }\n    function verbose(message) {\n        log.verbose(`${fullTitle} =>`, message);\n    }\n    function error(message) {\n        log.error(`${fullTitle} =>`, message);\n    }\n    return {\n        title,\n        fullTitle,\n        info,\n        warning,\n        verbose,\n        error,\n    };\n}\n/**\n * Generates a CredentialLogger, which is a logger declared at the credential's constructor, and used at any point in the credential.\n * It has all the properties of a CredentialLoggerInstance, plus other logger instances, one per method.\n *\n * It logs with the format:\n *\n *   `[title] => [message]`\n *   `[title] => getToken() => [message]`\n *\n */\nexport function credentialLogger(title, log = logger) {\n    const credLogger = credentialLoggerInstance(title, undefined, log);\n    return {\n        ...credLogger,\n        parent: log,\n        getToken: credentialLoggerInstance(\"=> getToken()\", credLogger, log),\n    };\n}\n//# sourceMappingURL=logging.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n/** @internal */\nexport const knownContextKeys = {\n    span: Symbol.for(\"@azure/core-tracing span\"),\n    namespace: Symbol.for(\"@azure/core-tracing namespace\"),\n};\n/**\n * Creates a new {@link TracingContext} with the given options.\n * @param options - A set of known keys that may be set on the context.\n * @returns A new {@link TracingContext} with the given options.\n *\n * @internal\n */\nexport function createTracingContext(options = {}) {\n    let context = new TracingContextImpl(options.parentContext);\n    if (options.span) {\n        context = context.setValue(knownContextKeys.span, options.span);\n    }\n    if (options.namespace) {\n        context = context.setValue(knownContextKeys.namespace, options.namespace);\n    }\n    return context;\n}\n/** @internal */\nexport class TracingContextImpl {\n    constructor(initialContext) {\n        this._contextMap =\n            initialContext instanceof TracingContextImpl\n                ? new Map(initialContext._contextMap)\n                : new Map();\n    }\n    setValue(key, value) {\n        const newContext = new TracingContextImpl(this);\n        newContext._contextMap.set(key, value);\n        return newContext;\n    }\n    getValue(key) {\n        return this._contextMap.get(key);\n    }\n    deleteValue(key) {\n        const newContext = new TracingContextImpl(this);\n        newContext._contextMap.delete(key);\n        return newContext;\n    }\n}\n//# sourceMappingURL=tracingContext.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n// @ts-expect-error The recommended approach to sharing module state between ESM and CJS.\n// See https://github.com/isaacs/tshy/blob/main/README.md#module-local-state for additional information.\nimport { state as cjsState } from \"../commonjs/state.js\";\n/**\n * Defines the shared state between CJS and ESM by re-exporting the CJS state.\n */\nexport const state = cjsState;\n//# sourceMappingURL=state.js.map","\"use strict\";\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.state = void 0;\n/**\n * @internal\n *\n * Holds the singleton instrumenter, to be shared across CJS and ESM imports.\n */\nexports.state = {\n    instrumenterImplementation: undefined,\n};\n//# sourceMappingURL=state-cjs.cjs.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nimport { createTracingContext } from \"./tracingContext.js\";\nimport { state } from \"./state.js\";\nexport function createDefaultTracingSpan() {\n    return {\n        end: () => {\n            // noop\n        },\n        isRecording: () => false,\n        recordException: () => {\n            // noop\n        },\n        setAttribute: () => {\n            // noop\n        },\n        setStatus: () => {\n            // noop\n        },\n        addEvent: () => {\n            // noop\n        },\n    };\n}\nexport function createDefaultInstrumenter() {\n    return {\n        createRequestHeaders: () => {\n            return {};\n        },\n        parseTraceparentHeader: () => {\n            return undefined;\n        },\n        startSpan: (_name, spanOptions) => {\n            return {\n                span: createDefaultTracingSpan(),\n                tracingContext: createTracingContext({ parentContext: spanOptions.tracingContext }),\n            };\n        },\n        withContext(_context, callback, ...callbackArgs) {\n            return callback(...callbackArgs);\n        },\n    };\n}\n/**\n * Extends the Azure SDK with support for a given instrumenter implementation.\n *\n * @param instrumenter - The instrumenter implementation to use.\n */\nexport function useInstrumenter(instrumenter) {\n    state.instrumenterImplementation = instrumenter;\n}\n/**\n * Gets the currently set instrumenter, a No-Op instrumenter by default.\n *\n * @returns The currently set instrumenter\n */\nexport function getInstrumenter() {\n    if (!state.instrumenterImplementation) {\n        state.instrumenterImplementation = createDefaultInstrumenter();\n    }\n    return state.instrumenterImplementation;\n}\n//# sourceMappingURL=instrumenter.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nimport { getInstrumenter } from \"./instrumenter.js\";\nimport { knownContextKeys } from \"./tracingContext.js\";\n/**\n * Creates a new tracing client.\n *\n * @param options - Options used to configure the tracing client.\n * @returns - An instance of {@link TracingClient}.\n */\nexport function createTracingClient(options) {\n    const { namespace, packageName, packageVersion } = options;\n    function startSpan(name, operationOptions, spanOptions) {\n        var _a;\n        const startSpanResult = getInstrumenter().startSpan(name, Object.assign(Object.assign({}, spanOptions), { packageName: packageName, packageVersion: packageVersion, tracingContext: (_a = operationOptions === null || operationOptions === void 0 ? void 0 : operationOptions.tracingOptions) === null || _a === void 0 ? void 0 : _a.tracingContext }));\n        let tracingContext = startSpanResult.tracingContext;\n        const span = startSpanResult.span;\n        if (!tracingContext.getValue(knownContextKeys.namespace)) {\n            tracingContext = tracingContext.setValue(knownContextKeys.namespace, namespace);\n        }\n        span.setAttribute(\"az.namespace\", tracingContext.getValue(knownContextKeys.namespace));\n        const updatedOptions = Object.assign({}, operationOptions, {\n            tracingOptions: Object.assign(Object.assign({}, operationOptions === null || operationOptions === void 0 ? void 0 : operationOptions.tracingOptions), { tracingContext }),\n        });\n        return {\n            span,\n            updatedOptions,\n        };\n    }\n    async function withSpan(name, operationOptions, callback, spanOptions) {\n        const { span, updatedOptions } = startSpan(name, operationOptions, spanOptions);\n        try {\n            const result = await withContext(updatedOptions.tracingOptions.tracingContext, () => Promise.resolve(callback(updatedOptions, span)));\n            span.setStatus({ status: \"success\" });\n            return result;\n        }\n        catch (err) {\n            span.setStatus({ status: \"error\", error: err });\n            throw err;\n        }\n        finally {\n            span.end();\n        }\n    }\n    function withContext(context, callback, ...callbackArgs) {\n        return getInstrumenter().withContext(context, callback, ...callbackArgs);\n    }\n    /**\n     * Parses a traceparent header value into a span identifier.\n     *\n     * @param traceparentHeader - The traceparent header to parse.\n     * @returns An implementation-specific identifier for the span.\n     */\n    function parseTraceparentHeader(traceparentHeader) {\n        return getInstrumenter().parseTraceparentHeader(traceparentHeader);\n    }\n    /**\n     * Creates a set of request headers to propagate tracing information to a backend.\n     *\n     * @param tracingContext - The context containing the span to serialize.\n     * @returns The set of headers to add to a request.\n     */\n    function createRequestHeaders(tracingContext) {\n        return getInstrumenter().createRequestHeaders(tracingContext);\n    }\n    return {\n        startSpan,\n        withSpan,\n        withContext,\n        parseTraceparentHeader,\n        createRequestHeaders,\n    };\n}\n//# sourceMappingURL=tracingClient.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nimport { SDK_VERSION } from \"../constants.js\";\nimport { createTracingClient } from \"@azure/core-tracing\";\n/**\n * Creates a span using the global tracer.\n * @internal\n */\nexport const tracingClient = createTracingClient({\n    namespace: \"Microsoft.AAD\",\n    packageName: \"@azure/identity\",\n    packageVersion: SDK_VERSION,\n});\n//# sourceMappingURL=tracing.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nimport { AggregateAuthenticationError, CredentialUnavailableError } from \"../errors.js\";\nimport { credentialLogger, formatError, formatSuccess } from \"../util/logging.js\";\nimport { tracingClient } from \"../util/tracing.js\";\n/**\n * @internal\n */\nexport const logger = credentialLogger(\"ChainedTokenCredential\");\n/**\n * Enables multiple `TokenCredential` implementations to be tried in order until\n * one of the getToken methods returns an access token. For more information, see\n * [ChainedTokenCredential overview](https://aka.ms/azsdk/js/identity/credential-chains#use-chainedtokencredential-for-granularity).\n */\nexport class ChainedTokenCredential {\n    _sources = [];\n    /**\n     * Creates an instance of ChainedTokenCredential using the given credentials.\n     *\n     * @param sources - `TokenCredential` implementations to be tried in order.\n     *\n     * Example usage:\n     * ```ts snippet:chained_token_credential_example\n     * import { ClientSecretCredential, ChainedTokenCredential } from \"@azure/identity\";\n     *\n     * const tenantId = \"<tenant-id>\";\n     * const clientId = \"<client-id>\";\n     * const clientSecret = \"<client-secret>\";\n     * const anotherClientId = \"<another-client-id>\";\n     * const anotherSecret = \"<another-client-secret>\";\n     *\n     * const firstCredential = new ClientSecretCredential(tenantId, clientId, clientSecret);\n     * const secondCredential = new ClientSecretCredential(tenantId, anotherClientId, anotherSecret);\n     *\n     * const credentialChain = new ChainedTokenCredential(firstCredential, secondCredential);\n     * ```\n     */\n    constructor(...sources) {\n        this._sources = sources;\n    }\n    /**\n     * Returns the first access token returned by one of the chained\n     * `TokenCredential` implementations.  Throws an {@link AggregateAuthenticationError}\n     * when one or more credentials throws an {@link AuthenticationError} and\n     * no credentials have returned an access token.\n     *\n     * This method is called automatically by Azure SDK client libraries. You may call this method\n     * directly, but you must also handle token caching and token refreshing.\n     *\n     * @param scopes - The list of scopes for which the token will have access.\n     * @param options - The options used to configure any requests this\n     *                `TokenCredential` implementation might make.\n     */\n    async getToken(scopes, options = {}) {\n        const { token } = await this.getTokenInternal(scopes, options);\n        return token;\n    }\n    async getTokenInternal(scopes, options = {}) {\n        let token = null;\n        let successfulCredential;\n        const errors = [];\n        return tracingClient.withSpan(\"ChainedTokenCredential.getToken\", options, async (updatedOptions) => {\n            for (let i = 0; i < this._sources.length && token === null; i++) {\n                try {\n                    token = await this._sources[i].getToken(scopes, updatedOptions);\n                    successfulCredential = this._sources[i];\n                }\n                catch (err) {\n                    if (err.name === \"CredentialUnavailableError\" ||\n                        err.name === \"AuthenticationRequiredError\") {\n                        errors.push(err);\n                    }\n                    else {\n                        logger.getToken.info(formatError(scopes, err));\n                        throw err;\n                    }\n                }\n            }\n            if (!token && errors.length > 0) {\n                const err = new AggregateAuthenticationError(errors, \"ChainedTokenCredential authentication failed.\");\n                logger.getToken.info(formatError(scopes, err));\n                throw err;\n            }\n            logger.getToken.info(`Result for ${successfulCredential.constructor.name}: ${formatSuccess(scopes)}`);\n            if (token === null) {\n                throw new CredentialUnavailableError(\"Failed to retrieve a valid token\");\n            }\n            return { token, successfulCredential };\n        });\n    }\n}\n//# sourceMappingURL=chainedTokenCredential.js.map","/*! @azure/msal-node v3.7.3 2025-08-27 */\n'use strict';\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * This class serializes cache entities to be saved into in-memory object types defined internally\r\n * @internal\r\n */\r\nclass Serializer {\r\n    /**\r\n     * serialize the JSON blob\r\n     * @param data - JSON blob cache\r\n     */\r\n    static serializeJSONBlob(data) {\r\n        return JSON.stringify(data);\r\n    }\r\n    /**\r\n     * Serialize Accounts\r\n     * @param accCache - cache of accounts\r\n     */\r\n    static serializeAccounts(accCache) {\r\n        const accounts = {};\r\n        Object.keys(accCache).map(function (key) {\r\n            const accountEntity = accCache[key];\r\n            accounts[key] = {\r\n                home_account_id: accountEntity.homeAccountId,\r\n                environment: accountEntity.environment,\r\n                realm: accountEntity.realm,\r\n                local_account_id: accountEntity.localAccountId,\r\n                username: accountEntity.username,\r\n                authority_type: accountEntity.authorityType,\r\n                name: accountEntity.name,\r\n                client_info: accountEntity.clientInfo,\r\n                last_modification_time: accountEntity.lastModificationTime,\r\n                last_modification_app: accountEntity.lastModificationApp,\r\n                tenantProfiles: accountEntity.tenantProfiles?.map((tenantProfile) => {\r\n                    return JSON.stringify(tenantProfile);\r\n                }),\r\n            };\r\n        });\r\n        return accounts;\r\n    }\r\n    /**\r\n     * Serialize IdTokens\r\n     * @param idTCache - cache of ID tokens\r\n     */\r\n    static serializeIdTokens(idTCache) {\r\n        const idTokens = {};\r\n        Object.keys(idTCache).map(function (key) {\r\n            const idTEntity = idTCache[key];\r\n            idTokens[key] = {\r\n                home_account_id: idTEntity.homeAccountId,\r\n                environment: idTEntity.environment,\r\n                credential_type: idTEntity.credentialType,\r\n                client_id: idTEntity.clientId,\r\n                secret: idTEntity.secret,\r\n                realm: idTEntity.realm,\r\n            };\r\n        });\r\n        return idTokens;\r\n    }\r\n    /**\r\n     * Serializes AccessTokens\r\n     * @param atCache - cache of access tokens\r\n     */\r\n    static serializeAccessTokens(atCache) {\r\n        const accessTokens = {};\r\n        Object.keys(atCache).map(function (key) {\r\n            const atEntity = atCache[key];\r\n            accessTokens[key] = {\r\n                home_account_id: atEntity.homeAccountId,\r\n                environment: atEntity.environment,\r\n                credential_type: atEntity.credentialType,\r\n                client_id: atEntity.clientId,\r\n                secret: atEntity.secret,\r\n                realm: atEntity.realm,\r\n                target: atEntity.target,\r\n                cached_at: atEntity.cachedAt,\r\n                expires_on: atEntity.expiresOn,\r\n                extended_expires_on: atEntity.extendedExpiresOn,\r\n                refresh_on: atEntity.refreshOn,\r\n                key_id: atEntity.keyId,\r\n                token_type: atEntity.tokenType,\r\n                requestedClaims: atEntity.requestedClaims,\r\n                requestedClaimsHash: atEntity.requestedClaimsHash,\r\n                userAssertionHash: atEntity.userAssertionHash,\r\n            };\r\n        });\r\n        return accessTokens;\r\n    }\r\n    /**\r\n     * Serialize refreshTokens\r\n     * @param rtCache - cache of refresh tokens\r\n     */\r\n    static serializeRefreshTokens(rtCache) {\r\n        const refreshTokens = {};\r\n        Object.keys(rtCache).map(function (key) {\r\n            const rtEntity = rtCache[key];\r\n            refreshTokens[key] = {\r\n                home_account_id: rtEntity.homeAccountId,\r\n                environment: rtEntity.environment,\r\n                credential_type: rtEntity.credentialType,\r\n                client_id: rtEntity.clientId,\r\n                secret: rtEntity.secret,\r\n                family_id: rtEntity.familyId,\r\n                target: rtEntity.target,\r\n                realm: rtEntity.realm,\r\n            };\r\n        });\r\n        return refreshTokens;\r\n    }\r\n    /**\r\n     * Serialize amdtCache\r\n     * @param amdtCache - cache of app metadata\r\n     */\r\n    static serializeAppMetadata(amdtCache) {\r\n        const appMetadata = {};\r\n        Object.keys(amdtCache).map(function (key) {\r\n            const amdtEntity = amdtCache[key];\r\n            appMetadata[key] = {\r\n                client_id: amdtEntity.clientId,\r\n                environment: amdtEntity.environment,\r\n                family_id: amdtEntity.familyId,\r\n            };\r\n        });\r\n        return appMetadata;\r\n    }\r\n    /**\r\n     * Serialize the cache\r\n     * @param inMemCache - itemised cache read from the JSON\r\n     */\r\n    static serializeAllCache(inMemCache) {\r\n        return {\r\n            Account: this.serializeAccounts(inMemCache.accounts),\r\n            IdToken: this.serializeIdTokens(inMemCache.idTokens),\r\n            AccessToken: this.serializeAccessTokens(inMemCache.accessTokens),\r\n            RefreshToken: this.serializeRefreshTokens(inMemCache.refreshTokens),\r\n            AppMetadata: this.serializeAppMetadata(inMemCache.appMetadata),\r\n        };\r\n    }\r\n}\n\nexport { Serializer };\n//# sourceMappingURL=Serializer.mjs.map\n","/*! @azure/msal-common v15.12.0 2025-08-19 */\n'use strict';\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nconst Constants = {\r\n    LIBRARY_NAME: \"MSAL.JS\",\r\n    SKU: \"msal.js.common\",\r\n    // default authority\r\n    DEFAULT_AUTHORITY: \"https://login.microsoftonline.com/common/\",\r\n    DEFAULT_AUTHORITY_HOST: \"login.microsoftonline.com\",\r\n    DEFAULT_COMMON_TENANT: \"common\",\r\n    // ADFS String\r\n    ADFS: \"adfs\",\r\n    DSTS: \"dstsv2\",\r\n    // Default AAD Instance Discovery Endpoint\r\n    AAD_INSTANCE_DISCOVERY_ENDPT: \"https://login.microsoftonline.com/common/discovery/instance?api-version=1.1&authorization_endpoint=\",\r\n    // CIAM URL\r\n    CIAM_AUTH_URL: \".ciamlogin.com\",\r\n    AAD_TENANT_DOMAIN_SUFFIX: \".onmicrosoft.com\",\r\n    // Resource delimiter - used for certain cache entries\r\n    RESOURCE_DELIM: \"|\",\r\n    // Placeholder for non-existent account ids/objects\r\n    NO_ACCOUNT: \"NO_ACCOUNT\",\r\n    // Claims\r\n    CLAIMS: \"claims\",\r\n    // Consumer UTID\r\n    CONSUMER_UTID: \"9188040d-6c67-4c5b-b112-36a304b66dad\",\r\n    // Default scopes\r\n    OPENID_SCOPE: \"openid\",\r\n    PROFILE_SCOPE: \"profile\",\r\n    OFFLINE_ACCESS_SCOPE: \"offline_access\",\r\n    EMAIL_SCOPE: \"email\",\r\n    CODE_GRANT_TYPE: \"authorization_code\",\r\n    RT_GRANT_TYPE: \"refresh_token\",\r\n    S256_CODE_CHALLENGE_METHOD: \"S256\",\r\n    URL_FORM_CONTENT_TYPE: \"application/x-www-form-urlencoded;charset=utf-8\",\r\n    AUTHORIZATION_PENDING: \"authorization_pending\",\r\n    NOT_DEFINED: \"not_defined\",\r\n    EMPTY_STRING: \"\",\r\n    NOT_APPLICABLE: \"N/A\",\r\n    NOT_AVAILABLE: \"Not Available\",\r\n    FORWARD_SLASH: \"/\",\r\n    IMDS_ENDPOINT: \"http://169.254.169.254/metadata/instance/compute/location\",\r\n    IMDS_VERSION: \"2020-06-01\",\r\n    IMDS_TIMEOUT: 2000,\r\n    AZURE_REGION_AUTO_DISCOVER_FLAG: \"TryAutoDetect\",\r\n    REGIONAL_AUTH_PUBLIC_CLOUD_SUFFIX: \"login.microsoft.com\",\r\n    KNOWN_PUBLIC_CLOUDS: [\r\n        \"login.microsoftonline.com\",\r\n        \"login.windows.net\",\r\n        \"login.microsoft.com\",\r\n        \"sts.windows.net\",\r\n    ],\r\n    SHR_NONCE_VALIDITY: 240,\r\n    INVALID_INSTANCE: \"invalid_instance\",\r\n};\r\nconst HttpStatus = {\r\n    SUCCESS: 200,\r\n    SUCCESS_RANGE_START: 200,\r\n    SUCCESS_RANGE_END: 299,\r\n    REDIRECT: 302,\r\n    CLIENT_ERROR: 400,\r\n    CLIENT_ERROR_RANGE_START: 400,\r\n    BAD_REQUEST: 400,\r\n    UNAUTHORIZED: 401,\r\n    NOT_FOUND: 404,\r\n    REQUEST_TIMEOUT: 408,\r\n    GONE: 410,\r\n    TOO_MANY_REQUESTS: 429,\r\n    CLIENT_ERROR_RANGE_END: 499,\r\n    SERVER_ERROR: 500,\r\n    SERVER_ERROR_RANGE_START: 500,\r\n    SERVICE_UNAVAILABLE: 503,\r\n    GATEWAY_TIMEOUT: 504,\r\n    SERVER_ERROR_RANGE_END: 599,\r\n    MULTI_SIDED_ERROR: 600,\r\n};\r\nconst HttpMethod = {\r\n    GET: \"GET\",\r\n    POST: \"POST\",\r\n};\r\nconst OIDC_DEFAULT_SCOPES = [\r\n    Constants.OPENID_SCOPE,\r\n    Constants.PROFILE_SCOPE,\r\n    Constants.OFFLINE_ACCESS_SCOPE,\r\n];\r\nconst OIDC_SCOPES = [...OIDC_DEFAULT_SCOPES, Constants.EMAIL_SCOPE];\r\n/**\r\n * Request header names\r\n */\r\nconst HeaderNames = {\r\n    CONTENT_TYPE: \"Content-Type\",\r\n    CONTENT_LENGTH: \"Content-Length\",\r\n    RETRY_AFTER: \"Retry-After\",\r\n    CCS_HEADER: \"X-AnchorMailbox\",\r\n    WWWAuthenticate: \"WWW-Authenticate\",\r\n    AuthenticationInfo: \"Authentication-Info\",\r\n    X_MS_REQUEST_ID: \"x-ms-request-id\",\r\n    X_MS_HTTP_VERSION: \"x-ms-httpver\",\r\n};\r\n/**\r\n * Persistent cache keys MSAL which stay while user is logged in.\r\n */\r\nconst PersistentCacheKeys = {\r\n    ACTIVE_ACCOUNT_FILTERS: \"active-account-filters\", // new cache entry for active_account for a more robust version for browser\r\n};\r\n/**\r\n * String constants related to AAD Authority\r\n */\r\nconst AADAuthorityConstants = {\r\n    COMMON: \"common\",\r\n    ORGANIZATIONS: \"organizations\",\r\n    CONSUMERS: \"consumers\",\r\n};\r\n/**\r\n * Claims request keys\r\n */\r\nconst ClaimsRequestKeys = {\r\n    ACCESS_TOKEN: \"access_token\",\r\n    XMS_CC: \"xms_cc\",\r\n};\r\n/**\r\n * we considered making this \"enum\" in the request instead of string, however it looks like the allowed list of\r\n * prompt values kept changing over past couple of years. There are some undocumented prompt values for some\r\n * internal partners too, hence the choice of generic \"string\" type instead of the \"enum\"\r\n */\r\nconst PromptValue = {\r\n    LOGIN: \"login\",\r\n    SELECT_ACCOUNT: \"select_account\",\r\n    CONSENT: \"consent\",\r\n    NONE: \"none\",\r\n    CREATE: \"create\",\r\n    NO_SESSION: \"no_session\",\r\n};\r\n/**\r\n * allowed values for codeVerifier\r\n */\r\nconst CodeChallengeMethodValues = {\r\n    PLAIN: \"plain\",\r\n    S256: \"S256\",\r\n};\r\n/**\r\n * Allowed values for response_type\r\n */\r\nconst OAuthResponseType = {\r\n    CODE: \"code\",\r\n    IDTOKEN_TOKEN: \"id_token token\",\r\n    IDTOKEN_TOKEN_REFRESHTOKEN: \"id_token token refresh_token\",\r\n};\r\n/**\r\n * allowed values for server response type\r\n * @deprecated Use ResponseMode instead\r\n */\r\nconst ServerResponseType = {\r\n    QUERY: \"query\",\r\n    FRAGMENT: \"fragment\",\r\n};\r\n/**\r\n * allowed values for response_mode\r\n */\r\nconst ResponseMode = {\r\n    QUERY: \"query\",\r\n    FRAGMENT: \"fragment\",\r\n    FORM_POST: \"form_post\",\r\n};\r\n/**\r\n * allowed grant_type\r\n */\r\nconst GrantType = {\r\n    IMPLICIT_GRANT: \"implicit\",\r\n    AUTHORIZATION_CODE_GRANT: \"authorization_code\",\r\n    CLIENT_CREDENTIALS_GRANT: \"client_credentials\",\r\n    RESOURCE_OWNER_PASSWORD_GRANT: \"password\",\r\n    REFRESH_TOKEN_GRANT: \"refresh_token\",\r\n    DEVICE_CODE_GRANT: \"device_code\",\r\n    JWT_BEARER: \"urn:ietf:params:oauth:grant-type:jwt-bearer\",\r\n};\r\n/**\r\n * Account types in Cache\r\n */\r\nconst CacheAccountType = {\r\n    MSSTS_ACCOUNT_TYPE: \"MSSTS\",\r\n    ADFS_ACCOUNT_TYPE: \"ADFS\",\r\n    MSAV1_ACCOUNT_TYPE: \"MSA\",\r\n    GENERIC_ACCOUNT_TYPE: \"Generic\", // NTLM, Kerberos, FBA, Basic etc\r\n};\r\n/**\r\n * Separators used in cache\r\n */\r\nconst Separators = {\r\n    CACHE_KEY_SEPARATOR: \"-\",\r\n    CLIENT_INFO_SEPARATOR: \".\",\r\n};\r\n/**\r\n * Credential Type stored in the cache\r\n */\r\nconst CredentialType = {\r\n    ID_TOKEN: \"IdToken\",\r\n    ACCESS_TOKEN: \"AccessToken\",\r\n    ACCESS_TOKEN_WITH_AUTH_SCHEME: \"AccessToken_With_AuthScheme\",\r\n    REFRESH_TOKEN: \"RefreshToken\",\r\n};\r\n/**\r\n * Combine all cache types\r\n */\r\nconst CacheType = {\r\n    ADFS: 1001,\r\n    MSA: 1002,\r\n    MSSTS: 1003,\r\n    GENERIC: 1004,\r\n    ACCESS_TOKEN: 2001,\r\n    REFRESH_TOKEN: 2002,\r\n    ID_TOKEN: 2003,\r\n    APP_METADATA: 3001,\r\n    UNDEFINED: 9999,\r\n};\r\n/**\r\n * More Cache related constants\r\n */\r\nconst APP_METADATA = \"appmetadata\";\r\nconst CLIENT_INFO = \"client_info\";\r\nconst THE_FAMILY_ID = \"1\";\r\nconst AUTHORITY_METADATA_CONSTANTS = {\r\n    CACHE_KEY: \"authority-metadata\",\r\n    REFRESH_TIME_SECONDS: 3600 * 24, // 24 Hours\r\n};\r\nconst AuthorityMetadataSource = {\r\n    CONFIG: \"config\",\r\n    CACHE: \"cache\",\r\n    NETWORK: \"network\",\r\n    HARDCODED_VALUES: \"hardcoded_values\",\r\n};\r\nconst SERVER_TELEM_CONSTANTS = {\r\n    SCHEMA_VERSION: 5,\r\n    MAX_LAST_HEADER_BYTES: 330,\r\n    MAX_CACHED_ERRORS: 50,\r\n    CACHE_KEY: \"server-telemetry\",\r\n    CATEGORY_SEPARATOR: \"|\",\r\n    VALUE_SEPARATOR: \",\",\r\n    OVERFLOW_TRUE: \"1\",\r\n    OVERFLOW_FALSE: \"0\",\r\n    UNKNOWN_ERROR: \"unknown_error\",\r\n};\r\n/**\r\n * Type of the authentication request\r\n */\r\nconst AuthenticationScheme = {\r\n    BEARER: \"Bearer\",\r\n    POP: \"pop\",\r\n    SSH: \"ssh-cert\",\r\n};\r\n/**\r\n * Constants related to throttling\r\n */\r\nconst ThrottlingConstants = {\r\n    // Default time to throttle RequestThumbprint in seconds\r\n    DEFAULT_THROTTLE_TIME_SECONDS: 60,\r\n    // Default maximum time to throttle in seconds, overrides what the server sends back\r\n    DEFAULT_MAX_THROTTLE_TIME_SECONDS: 3600,\r\n    // Prefix for storing throttling entries\r\n    THROTTLING_PREFIX: \"throttling\",\r\n    // Value assigned to the x-ms-lib-capability header to indicate to the server the library supports throttling\r\n    X_MS_LIB_CAPABILITY_VALUE: \"retry-after, h429\",\r\n};\r\nconst Errors = {\r\n    INVALID_GRANT_ERROR: \"invalid_grant\",\r\n    CLIENT_MISMATCH_ERROR: \"client_mismatch\",\r\n};\r\n/**\r\n * Password grant parameters\r\n */\r\nconst PasswordGrantConstants = {\r\n    username: \"username\",\r\n    password: \"password\",\r\n};\r\n/**\r\n * Region Discovery Sources\r\n */\r\nconst RegionDiscoverySources = {\r\n    FAILED_AUTO_DETECTION: \"1\",\r\n    INTERNAL_CACHE: \"2\",\r\n    ENVIRONMENT_VARIABLE: \"3\",\r\n    IMDS: \"4\",\r\n};\r\n/**\r\n * Region Discovery Outcomes\r\n */\r\nconst RegionDiscoveryOutcomes = {\r\n    CONFIGURED_NO_AUTO_DETECTION: \"2\",\r\n    AUTO_DETECTION_REQUESTED_SUCCESSFUL: \"4\",\r\n    AUTO_DETECTION_REQUESTED_FAILED: \"5\",\r\n};\r\n/**\r\n * Specifies the reason for fetching the access token from the identity provider\r\n */\r\nconst CacheOutcome = {\r\n    // When a token is found in the cache or the cache is not supposed to be hit when making the request\r\n    NOT_APPLICABLE: \"0\",\r\n    // When the token request goes to the identity provider because force_refresh was set to true. Also occurs if claims were requested\r\n    FORCE_REFRESH_OR_CLAIMS: \"1\",\r\n    // When the token request goes to the identity provider because no cached access token exists\r\n    NO_CACHED_ACCESS_TOKEN: \"2\",\r\n    // When the token request goes to the identity provider because cached access token expired\r\n    CACHED_ACCESS_TOKEN_EXPIRED: \"3\",\r\n    // When the token request goes to the identity provider because refresh_in was used and the existing token needs to be refreshed\r\n    PROACTIVELY_REFRESHED: \"4\",\r\n};\r\nconst JsonWebTokenTypes = {\r\n    Jwt: \"JWT\",\r\n    Jwk: \"JWK\",\r\n    Pop: \"pop\",\r\n};\r\nconst ONE_DAY_IN_MS = 86400000;\r\n// Token renewal offset default in seconds\r\nconst DEFAULT_TOKEN_RENEWAL_OFFSET_SEC = 300;\r\nconst EncodingTypes = {\r\n    BASE64: \"base64\",\r\n    HEX: \"hex\",\r\n    UTF8: \"utf-8\",\r\n};\n\nexport { AADAuthorityConstants, APP_METADATA, AUTHORITY_METADATA_CONSTANTS, AuthenticationScheme, AuthorityMetadataSource, CLIENT_INFO, CacheAccountType, CacheOutcome, CacheType, ClaimsRequestKeys, CodeChallengeMethodValues, Constants, CredentialType, DEFAULT_TOKEN_RENEWAL_OFFSET_SEC, EncodingTypes, Errors, GrantType, HeaderNames, HttpMethod, HttpStatus, JsonWebTokenTypes, OAuthResponseType, OIDC_DEFAULT_SCOPES, OIDC_SCOPES, ONE_DAY_IN_MS, PasswordGrantConstants, PersistentCacheKeys, PromptValue, RegionDiscoveryOutcomes, RegionDiscoverySources, ResponseMode, SERVER_TELEM_CONSTANTS, Separators, ServerResponseType, THE_FAMILY_ID, ThrottlingConstants };\n//# sourceMappingURL=Constants.mjs.map\n","/*! @azure/msal-common v15.12.0 2025-08-19 */\n'use strict';\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * AuthErrorMessage class containing string constants used by error codes and messages.\r\n */\r\nconst unexpectedError = \"unexpected_error\";\r\nconst postRequestFailed = \"post_request_failed\";\n\nexport { postRequestFailed, unexpectedError };\n//# sourceMappingURL=AuthErrorCodes.mjs.map\n","/*! @azure/msal-common v15.12.0 2025-08-19 */\n'use strict';\nimport { Constants } from '../utils/Constants.mjs';\nimport { postRequestFailed, unexpectedError } from './AuthErrorCodes.mjs';\nimport * as AuthErrorCodes from './AuthErrorCodes.mjs';\nexport { AuthErrorCodes };\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nconst AuthErrorMessages = {\r\n    [unexpectedError]: \"Unexpected error in authentication.\",\r\n    [postRequestFailed]: \"Post request failed from the network, could be a 4xx/5xx or a network unavailability. Please check the exact error code for details.\",\r\n};\r\n/**\r\n * AuthErrorMessage class containing string constants used by error codes and messages.\r\n * @deprecated Use AuthErrorCodes instead\r\n */\r\nconst AuthErrorMessage = {\r\n    unexpectedError: {\r\n        code: unexpectedError,\r\n        desc: AuthErrorMessages[unexpectedError],\r\n    },\r\n    postRequestFailed: {\r\n        code: postRequestFailed,\r\n        desc: AuthErrorMessages[postRequestFailed],\r\n    },\r\n};\r\n/**\r\n * General error class thrown by the MSAL.js library.\r\n */\r\nclass AuthError extends Error {\r\n    constructor(errorCode, errorMessage, suberror) {\r\n        const errorString = errorMessage\r\n            ? `${errorCode}: ${errorMessage}`\r\n            : errorCode;\r\n        super(errorString);\r\n        Object.setPrototypeOf(this, AuthError.prototype);\r\n        this.errorCode = errorCode || Constants.EMPTY_STRING;\r\n        this.errorMessage = errorMessage || Constants.EMPTY_STRING;\r\n        this.subError = suberror || Constants.EMPTY_STRING;\r\n        this.name = \"AuthError\";\r\n    }\r\n    setCorrelationId(correlationId) {\r\n        this.correlationId = correlationId;\r\n    }\r\n}\r\nfunction createAuthError(code, additionalMessage) {\r\n    return new AuthError(code, additionalMessage\r\n        ? `${AuthErrorMessages[code]} ${additionalMessage}`\r\n        : AuthErrorMessages[code]);\r\n}\n\nexport { AuthError, AuthErrorMessage, AuthErrorMessages, createAuthError };\n//# sourceMappingURL=AuthError.mjs.map\n","/*! @azure/msal-common v15.12.0 2025-08-19 */\n'use strict';\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nconst clientInfoDecodingError = \"client_info_decoding_error\";\r\nconst clientInfoEmptyError = \"client_info_empty_error\";\r\nconst tokenParsingError = \"token_parsing_error\";\r\nconst nullOrEmptyToken = \"null_or_empty_token\";\r\nconst endpointResolutionError = \"endpoints_resolution_error\";\r\nconst networkError = \"network_error\";\r\nconst openIdConfigError = \"openid_config_error\";\r\nconst hashNotDeserialized = \"hash_not_deserialized\";\r\nconst invalidState = \"invalid_state\";\r\nconst stateMismatch = \"state_mismatch\";\r\nconst stateNotFound = \"state_not_found\";\r\nconst nonceMismatch = \"nonce_mismatch\";\r\nconst authTimeNotFound = \"auth_time_not_found\";\r\nconst maxAgeTranspired = \"max_age_transpired\";\r\nconst multipleMatchingTokens = \"multiple_matching_tokens\";\r\nconst multipleMatchingAccounts = \"multiple_matching_accounts\";\r\nconst multipleMatchingAppMetadata = \"multiple_matching_appMetadata\";\r\nconst requestCannotBeMade = \"request_cannot_be_made\";\r\nconst cannotRemoveEmptyScope = \"cannot_remove_empty_scope\";\r\nconst cannotAppendScopeSet = \"cannot_append_scopeset\";\r\nconst emptyInputScopeSet = \"empty_input_scopeset\";\r\nconst deviceCodePollingCancelled = \"device_code_polling_cancelled\";\r\nconst deviceCodeExpired = \"device_code_expired\";\r\nconst deviceCodeUnknownError = \"device_code_unknown_error\";\r\nconst noAccountInSilentRequest = \"no_account_in_silent_request\";\r\nconst invalidCacheRecord = \"invalid_cache_record\";\r\nconst invalidCacheEnvironment = \"invalid_cache_environment\";\r\nconst noAccountFound = \"no_account_found\";\r\nconst noCryptoObject = \"no_crypto_object\";\r\nconst unexpectedCredentialType = \"unexpected_credential_type\";\r\nconst invalidAssertion = \"invalid_assertion\";\r\nconst invalidClientCredential = \"invalid_client_credential\";\r\nconst tokenRefreshRequired = \"token_refresh_required\";\r\nconst userTimeoutReached = \"user_timeout_reached\";\r\nconst tokenClaimsCnfRequiredForSignedJwt = \"token_claims_cnf_required_for_signedjwt\";\r\nconst authorizationCodeMissingFromServerResponse = \"authorization_code_missing_from_server_response\";\r\nconst bindingKeyNotRemoved = \"binding_key_not_removed\";\r\nconst endSessionEndpointNotSupported = \"end_session_endpoint_not_supported\";\r\nconst keyIdMissing = \"key_id_missing\";\r\nconst noNetworkConnectivity = \"no_network_connectivity\";\r\nconst userCanceled = \"user_canceled\";\r\nconst missingTenantIdError = \"missing_tenant_id_error\";\r\nconst methodNotImplemented = \"method_not_implemented\";\r\nconst nestedAppAuthBridgeDisabled = \"nested_app_auth_bridge_disabled\";\n\nexport { authTimeNotFound, authorizationCodeMissingFromServerResponse, bindingKeyNotRemoved, cannotAppendScopeSet, cannotRemoveEmptyScope, clientInfoDecodingError, clientInfoEmptyError, deviceCodeExpired, deviceCodePollingCancelled, deviceCodeUnknownError, emptyInputScopeSet, endSessionEndpointNotSupported, endpointResolutionError, hashNotDeserialized, invalidAssertion, invalidCacheEnvironment, invalidCacheRecord, invalidClientCredential, invalidState, keyIdMissing, maxAgeTranspired, methodNotImplemented, missingTenantIdError, multipleMatchingAccounts, multipleMatchingAppMetadata, multipleMatchingTokens, nestedAppAuthBridgeDisabled, networkError, noAccountFound, noAccountInSilentRequest, noCryptoObject, noNetworkConnectivity, nonceMismatch, nullOrEmptyToken, openIdConfigError, requestCannotBeMade, stateMismatch, stateNotFound, tokenClaimsCnfRequiredForSignedJwt, tokenParsingError, tokenRefreshRequired, unexpectedCredentialType, userCanceled, userTimeoutReached };\n//# sourceMappingURL=ClientAuthErrorCodes.mjs.map\n","/*! @azure/msal-common v15.12.0 2025-08-19 */\n'use strict';\nimport { AuthError } from './AuthError.mjs';\nimport { nestedAppAuthBridgeDisabled, missingTenantIdError, userCanceled, noNetworkConnectivity, keyIdMissing, endSessionEndpointNotSupported, bindingKeyNotRemoved, authorizationCodeMissingFromServerResponse, tokenClaimsCnfRequiredForSignedJwt, userTimeoutReached, tokenRefreshRequired, invalidClientCredential, invalidAssertion, unexpectedCredentialType, noCryptoObject, noAccountFound, invalidCacheEnvironment, invalidCacheRecord, noAccountInSilentRequest, deviceCodeUnknownError, deviceCodeExpired, deviceCodePollingCancelled, emptyInputScopeSet, cannotAppendScopeSet, cannotRemoveEmptyScope, requestCannotBeMade, multipleMatchingAppMetadata, multipleMatchingAccounts, multipleMatchingTokens, maxAgeTranspired, authTimeNotFound, nonceMismatch, stateNotFound, stateMismatch, invalidState, hashNotDeserialized, openIdConfigError, networkError, endpointResolutionError, nullOrEmptyToken, tokenParsingError, clientInfoEmptyError, clientInfoDecodingError, methodNotImplemented } from './ClientAuthErrorCodes.mjs';\nimport * as ClientAuthErrorCodes from './ClientAuthErrorCodes.mjs';\nexport { ClientAuthErrorCodes };\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * ClientAuthErrorMessage class containing string constants used by error codes and messages.\r\n */\r\nconst ClientAuthErrorMessages = {\r\n    [clientInfoDecodingError]: \"The client info could not be parsed/decoded correctly\",\r\n    [clientInfoEmptyError]: \"The client info was empty\",\r\n    [tokenParsingError]: \"Token cannot be parsed\",\r\n    [nullOrEmptyToken]: \"The token is null or empty\",\r\n    [endpointResolutionError]: \"Endpoints cannot be resolved\",\r\n    [networkError]: \"Network request failed\",\r\n    [openIdConfigError]: \"Could not retrieve endpoints. Check your authority and verify the .well-known/openid-configuration endpoint returns the required endpoints.\",\r\n    [hashNotDeserialized]: \"The hash parameters could not be deserialized\",\r\n    [invalidState]: \"State was not the expected format\",\r\n    [stateMismatch]: \"State mismatch error\",\r\n    [stateNotFound]: \"State not found\",\r\n    [nonceMismatch]: \"Nonce mismatch error\",\r\n    [authTimeNotFound]: \"Max Age was requested and the ID token is missing the auth_time variable.\" +\r\n        \" auth_time is an optional claim and is not enabled by default - it must be enabled.\" +\r\n        \" See https://aka.ms/msaljs/optional-claims for more information.\",\r\n    [maxAgeTranspired]: \"Max Age is set to 0, or too much time has elapsed since the last end-user authentication.\",\r\n    [multipleMatchingTokens]: \"The cache contains multiple tokens satisfying the requirements. \" +\r\n        \"Call AcquireToken again providing more requirements such as authority or account.\",\r\n    [multipleMatchingAccounts]: \"The cache contains multiple accounts satisfying the given parameters. Please pass more info to obtain the correct account\",\r\n    [multipleMatchingAppMetadata]: \"The cache contains multiple appMetadata satisfying the given parameters. Please pass more info to obtain the correct appMetadata\",\r\n    [requestCannotBeMade]: \"Token request cannot be made without authorization code or refresh token.\",\r\n    [cannotRemoveEmptyScope]: \"Cannot remove null or empty scope from ScopeSet\",\r\n    [cannotAppendScopeSet]: \"Cannot append ScopeSet\",\r\n    [emptyInputScopeSet]: \"Empty input ScopeSet cannot be processed\",\r\n    [deviceCodePollingCancelled]: \"Caller has cancelled token endpoint polling during device code flow by setting DeviceCodeRequest.cancel = true.\",\r\n    [deviceCodeExpired]: \"Device code is expired.\",\r\n    [deviceCodeUnknownError]: \"Device code stopped polling for unknown reasons.\",\r\n    [noAccountInSilentRequest]: \"Please pass an account object, silent flow is not supported without account information\",\r\n    [invalidCacheRecord]: \"Cache record object was null or undefined.\",\r\n    [invalidCacheEnvironment]: \"Invalid environment when attempting to create cache entry\",\r\n    [noAccountFound]: \"No account found in cache for given key.\",\r\n    [noCryptoObject]: \"No crypto object detected.\",\r\n    [unexpectedCredentialType]: \"Unexpected credential type.\",\r\n    [invalidAssertion]: \"Client assertion must meet requirements described in https://tools.ietf.org/html/rfc7515\",\r\n    [invalidClientCredential]: \"Client credential (secret, certificate, or assertion) must not be empty when creating a confidential client. An application should at most have one credential\",\r\n    [tokenRefreshRequired]: \"Cannot return token from cache because it must be refreshed. This may be due to one of the following reasons: forceRefresh parameter is set to true, claims have been requested, there is no cached access token or it is expired.\",\r\n    [userTimeoutReached]: \"User defined timeout for device code polling reached\",\r\n    [tokenClaimsCnfRequiredForSignedJwt]: \"Cannot generate a POP jwt if the token_claims are not populated\",\r\n    [authorizationCodeMissingFromServerResponse]: \"Server response does not contain an authorization code to proceed\",\r\n    [bindingKeyNotRemoved]: \"Could not remove the credential's binding key from storage.\",\r\n    [endSessionEndpointNotSupported]: \"The provided authority does not support logout\",\r\n    [keyIdMissing]: \"A keyId value is missing from the requested bound token's cache record and is required to match the token to it's stored binding key.\",\r\n    [noNetworkConnectivity]: \"No network connectivity. Check your internet connection.\",\r\n    [userCanceled]: \"User cancelled the flow.\",\r\n    [missingTenantIdError]: \"A tenant id - not common, organizations, or consumers - must be specified when using the client_credentials flow.\",\r\n    [methodNotImplemented]: \"This method has not been implemented\",\r\n    [nestedAppAuthBridgeDisabled]: \"The nested app auth bridge is disabled\",\r\n};\r\n/**\r\n * String constants used by error codes and messages.\r\n * @deprecated Use ClientAuthErrorCodes instead\r\n */\r\nconst ClientAuthErrorMessage = {\r\n    clientInfoDecodingError: {\r\n        code: clientInfoDecodingError,\r\n        desc: ClientAuthErrorMessages[clientInfoDecodingError],\r\n    },\r\n    clientInfoEmptyError: {\r\n        code: clientInfoEmptyError,\r\n        desc: ClientAuthErrorMessages[clientInfoEmptyError],\r\n    },\r\n    tokenParsingError: {\r\n        code: tokenParsingError,\r\n        desc: ClientAuthErrorMessages[tokenParsingError],\r\n    },\r\n    nullOrEmptyToken: {\r\n        code: nullOrEmptyToken,\r\n        desc: ClientAuthErrorMessages[nullOrEmptyToken],\r\n    },\r\n    endpointResolutionError: {\r\n        code: endpointResolutionError,\r\n        desc: ClientAuthErrorMessages[endpointResolutionError],\r\n    },\r\n    networkError: {\r\n        code: networkError,\r\n        desc: ClientAuthErrorMessages[networkError],\r\n    },\r\n    unableToGetOpenidConfigError: {\r\n        code: openIdConfigError,\r\n        desc: ClientAuthErrorMessages[openIdConfigError],\r\n    },\r\n    hashNotDeserialized: {\r\n        code: hashNotDeserialized,\r\n        desc: ClientAuthErrorMessages[hashNotDeserialized],\r\n    },\r\n    invalidStateError: {\r\n        code: invalidState,\r\n        desc: ClientAuthErrorMessages[invalidState],\r\n    },\r\n    stateMismatchError: {\r\n        code: stateMismatch,\r\n        desc: ClientAuthErrorMessages[stateMismatch],\r\n    },\r\n    stateNotFoundError: {\r\n        code: stateNotFound,\r\n        desc: ClientAuthErrorMessages[stateNotFound],\r\n    },\r\n    nonceMismatchError: {\r\n        code: nonceMismatch,\r\n        desc: ClientAuthErrorMessages[nonceMismatch],\r\n    },\r\n    authTimeNotFoundError: {\r\n        code: authTimeNotFound,\r\n        desc: ClientAuthErrorMessages[authTimeNotFound],\r\n    },\r\n    maxAgeTranspired: {\r\n        code: maxAgeTranspired,\r\n        desc: ClientAuthErrorMessages[maxAgeTranspired],\r\n    },\r\n    multipleMatchingTokens: {\r\n        code: multipleMatchingTokens,\r\n        desc: ClientAuthErrorMessages[multipleMatchingTokens],\r\n    },\r\n    multipleMatchingAccounts: {\r\n        code: multipleMatchingAccounts,\r\n        desc: ClientAuthErrorMessages[multipleMatchingAccounts],\r\n    },\r\n    multipleMatchingAppMetadata: {\r\n        code: multipleMatchingAppMetadata,\r\n        desc: ClientAuthErrorMessages[multipleMatchingAppMetadata],\r\n    },\r\n    tokenRequestCannotBeMade: {\r\n        code: requestCannotBeMade,\r\n        desc: ClientAuthErrorMessages[requestCannotBeMade],\r\n    },\r\n    removeEmptyScopeError: {\r\n        code: cannotRemoveEmptyScope,\r\n        desc: ClientAuthErrorMessages[cannotRemoveEmptyScope],\r\n    },\r\n    appendScopeSetError: {\r\n        code: cannotAppendScopeSet,\r\n        desc: ClientAuthErrorMessages[cannotAppendScopeSet],\r\n    },\r\n    emptyInputScopeSetError: {\r\n        code: emptyInputScopeSet,\r\n        desc: ClientAuthErrorMessages[emptyInputScopeSet],\r\n    },\r\n    DeviceCodePollingCancelled: {\r\n        code: deviceCodePollingCancelled,\r\n        desc: ClientAuthErrorMessages[deviceCodePollingCancelled],\r\n    },\r\n    DeviceCodeExpired: {\r\n        code: deviceCodeExpired,\r\n        desc: ClientAuthErrorMessages[deviceCodeExpired],\r\n    },\r\n    DeviceCodeUnknownError: {\r\n        code: deviceCodeUnknownError,\r\n        desc: ClientAuthErrorMessages[deviceCodeUnknownError],\r\n    },\r\n    NoAccountInSilentRequest: {\r\n        code: noAccountInSilentRequest,\r\n        desc: ClientAuthErrorMessages[noAccountInSilentRequest],\r\n    },\r\n    invalidCacheRecord: {\r\n        code: invalidCacheRecord,\r\n        desc: ClientAuthErrorMessages[invalidCacheRecord],\r\n    },\r\n    invalidCacheEnvironment: {\r\n        code: invalidCacheEnvironment,\r\n        desc: ClientAuthErrorMessages[invalidCacheEnvironment],\r\n    },\r\n    noAccountFound: {\r\n        code: noAccountFound,\r\n        desc: ClientAuthErrorMessages[noAccountFound],\r\n    },\r\n    noCryptoObj: {\r\n        code: noCryptoObject,\r\n        desc: ClientAuthErrorMessages[noCryptoObject],\r\n    },\r\n    unexpectedCredentialType: {\r\n        code: unexpectedCredentialType,\r\n        desc: ClientAuthErrorMessages[unexpectedCredentialType],\r\n    },\r\n    invalidAssertion: {\r\n        code: invalidAssertion,\r\n        desc: ClientAuthErrorMessages[invalidAssertion],\r\n    },\r\n    invalidClientCredential: {\r\n        code: invalidClientCredential,\r\n        desc: ClientAuthErrorMessages[invalidClientCredential],\r\n    },\r\n    tokenRefreshRequired: {\r\n        code: tokenRefreshRequired,\r\n        desc: ClientAuthErrorMessages[tokenRefreshRequired],\r\n    },\r\n    userTimeoutReached: {\r\n        code: userTimeoutReached,\r\n        desc: ClientAuthErrorMessages[userTimeoutReached],\r\n    },\r\n    tokenClaimsRequired: {\r\n        code: tokenClaimsCnfRequiredForSignedJwt,\r\n        desc: ClientAuthErrorMessages[tokenClaimsCnfRequiredForSignedJwt],\r\n    },\r\n    noAuthorizationCodeFromServer: {\r\n        code: authorizationCodeMissingFromServerResponse,\r\n        desc: ClientAuthErrorMessages[authorizationCodeMissingFromServerResponse],\r\n    },\r\n    bindingKeyNotRemovedError: {\r\n        code: bindingKeyNotRemoved,\r\n        desc: ClientAuthErrorMessages[bindingKeyNotRemoved],\r\n    },\r\n    logoutNotSupported: {\r\n        code: endSessionEndpointNotSupported,\r\n        desc: ClientAuthErrorMessages[endSessionEndpointNotSupported],\r\n    },\r\n    keyIdMissing: {\r\n        code: keyIdMissing,\r\n        desc: ClientAuthErrorMessages[keyIdMissing],\r\n    },\r\n    noNetworkConnectivity: {\r\n        code: noNetworkConnectivity,\r\n        desc: ClientAuthErrorMessages[noNetworkConnectivity],\r\n    },\r\n    userCanceledError: {\r\n        code: userCanceled,\r\n        desc: ClientAuthErrorMessages[userCanceled],\r\n    },\r\n    missingTenantIdError: {\r\n        code: missingTenantIdError,\r\n        desc: ClientAuthErrorMessages[missingTenantIdError],\r\n    },\r\n    nestedAppAuthBridgeDisabled: {\r\n        code: nestedAppAuthBridgeDisabled,\r\n        desc: ClientAuthErrorMessages[nestedAppAuthBridgeDisabled],\r\n    },\r\n};\r\n/**\r\n * Error thrown when there is an error in the client code running on the browser.\r\n */\r\nclass ClientAuthError extends AuthError {\r\n    constructor(errorCode, additionalMessage) {\r\n        super(errorCode, additionalMessage\r\n            ? `${ClientAuthErrorMessages[errorCode]}: ${additionalMessage}`\r\n            : ClientAuthErrorMessages[errorCode]);\r\n        this.name = \"ClientAuthError\";\r\n        Object.setPrototypeOf(this, ClientAuthError.prototype);\r\n    }\r\n}\r\nfunction createClientAuthError(errorCode, additionalMessage) {\r\n    return new ClientAuthError(errorCode, additionalMessage);\r\n}\n\nexport { ClientAuthError, ClientAuthErrorMessage, ClientAuthErrorMessages, createClientAuthError };\n//# sourceMappingURL=ClientAuthError.mjs.map\n","/*! @azure/msal-common v15.12.0 2025-08-19 */\n'use strict';\nimport { createClientAuthError } from '../error/ClientAuthError.mjs';\nimport { methodNotImplemented } from '../error/ClientAuthErrorCodes.mjs';\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nconst DEFAULT_CRYPTO_IMPLEMENTATION = {\r\n    createNewGuid: () => {\r\n        throw createClientAuthError(methodNotImplemented);\r\n    },\r\n    base64Decode: () => {\r\n        throw createClientAuthError(methodNotImplemented);\r\n    },\r\n    base64Encode: () => {\r\n        throw createClientAuthError(methodNotImplemented);\r\n    },\r\n    base64UrlEncode: () => {\r\n        throw createClientAuthError(methodNotImplemented);\r\n    },\r\n    encodeKid: () => {\r\n        throw createClientAuthError(methodNotImplemented);\r\n    },\r\n    async getPublicKeyThumbprint() {\r\n        throw createClientAuthError(methodNotImplemented);\r\n    },\r\n    async removeTokenBindingKey() {\r\n        throw createClientAuthError(methodNotImplemented);\r\n    },\r\n    async clearKeystore() {\r\n        throw createClientAuthError(methodNotImplemented);\r\n    },\r\n    async signJwt() {\r\n        throw createClientAuthError(methodNotImplemented);\r\n    },\r\n    async hashString() {\r\n        throw createClientAuthError(methodNotImplemented);\r\n    },\r\n};\n\nexport { DEFAULT_CRYPTO_IMPLEMENTATION };\n//# sourceMappingURL=ICrypto.mjs.map\n","/*! @azure/msal-common v15.12.0 2025-08-19 */\n'use strict';\nimport { Constants } from '../utils/Constants.mjs';\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * Log message level.\r\n */\r\nvar LogLevel;\r\n(function (LogLevel) {\r\n    LogLevel[LogLevel[\"Error\"] = 0] = \"Error\";\r\n    LogLevel[LogLevel[\"Warning\"] = 1] = \"Warning\";\r\n    LogLevel[LogLevel[\"Info\"] = 2] = \"Info\";\r\n    LogLevel[LogLevel[\"Verbose\"] = 3] = \"Verbose\";\r\n    LogLevel[LogLevel[\"Trace\"] = 4] = \"Trace\";\r\n})(LogLevel || (LogLevel = {}));\r\n/**\r\n * Class which facilitates logging of messages to a specific place.\r\n */\r\nclass Logger {\r\n    constructor(loggerOptions, packageName, packageVersion) {\r\n        // Current log level, defaults to info.\r\n        this.level = LogLevel.Info;\r\n        const defaultLoggerCallback = () => {\r\n            return;\r\n        };\r\n        const setLoggerOptions = loggerOptions || Logger.createDefaultLoggerOptions();\r\n        this.localCallback =\r\n            setLoggerOptions.loggerCallback || defaultLoggerCallback;\r\n        this.piiLoggingEnabled = setLoggerOptions.piiLoggingEnabled || false;\r\n        this.level =\r\n            typeof setLoggerOptions.logLevel === \"number\"\r\n                ? setLoggerOptions.logLevel\r\n                : LogLevel.Info;\r\n        this.correlationId =\r\n            setLoggerOptions.correlationId || Constants.EMPTY_STRING;\r\n        this.packageName = packageName || Constants.EMPTY_STRING;\r\n        this.packageVersion = packageVersion || Constants.EMPTY_STRING;\r\n    }\r\n    static createDefaultLoggerOptions() {\r\n        return {\r\n            loggerCallback: () => {\r\n                // allow users to not set loggerCallback\r\n            },\r\n            piiLoggingEnabled: false,\r\n            logLevel: LogLevel.Info,\r\n        };\r\n    }\r\n    /**\r\n     * Create new Logger with existing configurations.\r\n     */\r\n    clone(packageName, packageVersion, correlationId) {\r\n        return new Logger({\r\n            loggerCallback: this.localCallback,\r\n            piiLoggingEnabled: this.piiLoggingEnabled,\r\n            logLevel: this.level,\r\n            correlationId: correlationId || this.correlationId,\r\n        }, packageName, packageVersion);\r\n    }\r\n    /**\r\n     * Log message with required options.\r\n     */\r\n    logMessage(logMessage, options) {\r\n        if (options.logLevel > this.level ||\r\n            (!this.piiLoggingEnabled && options.containsPii)) {\r\n            return;\r\n        }\r\n        const timestamp = new Date().toUTCString();\r\n        // Add correlationId to logs if set, correlationId provided on log messages take precedence\r\n        const logHeader = `[${timestamp}] : [${options.correlationId || this.correlationId || \"\"}]`;\r\n        const log = `${logHeader} : ${this.packageName}@${this.packageVersion} : ${LogLevel[options.logLevel]} - ${logMessage}`;\r\n        // debug(`msal:${LogLevel[options.logLevel]}${options.containsPii ? \"-Pii\": Constants.EMPTY_STRING}${options.context ? `:${options.context}` : Constants.EMPTY_STRING}`)(logMessage);\r\n        this.executeCallback(options.logLevel, log, options.containsPii || false);\r\n    }\r\n    /**\r\n     * Execute callback with message.\r\n     */\r\n    executeCallback(level, message, containsPii) {\r\n        if (this.localCallback) {\r\n            this.localCallback(level, message, containsPii);\r\n        }\r\n    }\r\n    /**\r\n     * Logs error messages.\r\n     */\r\n    error(message, correlationId) {\r\n        this.logMessage(message, {\r\n            logLevel: LogLevel.Error,\r\n            containsPii: false,\r\n            correlationId: correlationId || Constants.EMPTY_STRING,\r\n        });\r\n    }\r\n    /**\r\n     * Logs error messages with PII.\r\n     */\r\n    errorPii(message, correlationId) {\r\n        this.logMessage(message, {\r\n            logLevel: LogLevel.Error,\r\n            containsPii: true,\r\n            correlationId: correlationId || Constants.EMPTY_STRING,\r\n        });\r\n    }\r\n    /**\r\n     * Logs warning messages.\r\n     */\r\n    warning(message, correlationId) {\r\n        this.logMessage(message, {\r\n            logLevel: LogLevel.Warning,\r\n            containsPii: false,\r\n            correlationId: correlationId || Constants.EMPTY_STRING,\r\n        });\r\n    }\r\n    /**\r\n     * Logs warning messages with PII.\r\n     */\r\n    warningPii(message, correlationId) {\r\n        this.logMessage(message, {\r\n            logLevel: LogLevel.Warning,\r\n            containsPii: true,\r\n            correlationId: correlationId || Constants.EMPTY_STRING,\r\n        });\r\n    }\r\n    /**\r\n     * Logs info messages.\r\n     */\r\n    info(message, correlationId) {\r\n        this.logMessage(message, {\r\n            logLevel: LogLevel.Info,\r\n            containsPii: false,\r\n            correlationId: correlationId || Constants.EMPTY_STRING,\r\n        });\r\n    }\r\n    /**\r\n     * Logs info messages with PII.\r\n     */\r\n    infoPii(message, correlationId) {\r\n        this.logMessage(message, {\r\n            logLevel: LogLevel.Info,\r\n            containsPii: true,\r\n            correlationId: correlationId || Constants.EMPTY_STRING,\r\n        });\r\n    }\r\n    /**\r\n     * Logs verbose messages.\r\n     */\r\n    verbose(message, correlationId) {\r\n        this.logMessage(message, {\r\n            logLevel: LogLevel.Verbose,\r\n            containsPii: false,\r\n            correlationId: correlationId || Constants.EMPTY_STRING,\r\n        });\r\n    }\r\n    /**\r\n     * Logs verbose messages with PII.\r\n     */\r\n    verbosePii(message, correlationId) {\r\n        this.logMessage(message, {\r\n            logLevel: LogLevel.Verbose,\r\n            containsPii: true,\r\n            correlationId: correlationId || Constants.EMPTY_STRING,\r\n        });\r\n    }\r\n    /**\r\n     * Logs trace messages.\r\n     */\r\n    trace(message, correlationId) {\r\n        this.logMessage(message, {\r\n            logLevel: LogLevel.Trace,\r\n            containsPii: false,\r\n            correlationId: correlationId || Constants.EMPTY_STRING,\r\n        });\r\n    }\r\n    /**\r\n     * Logs trace messages with PII.\r\n     */\r\n    tracePii(message, correlationId) {\r\n        this.logMessage(message, {\r\n            logLevel: LogLevel.Trace,\r\n            containsPii: true,\r\n            correlationId: correlationId || Constants.EMPTY_STRING,\r\n        });\r\n    }\r\n    /**\r\n     * Returns whether PII Logging is enabled or not.\r\n     */\r\n    isPiiLoggingEnabled() {\r\n        return this.piiLoggingEnabled || false;\r\n    }\r\n}\n\nexport { LogLevel, Logger };\n//# sourceMappingURL=Logger.mjs.map\n","/*! @azure/msal-common v15.12.0 2025-08-19 */\n'use strict';\n/* eslint-disable header/header */\r\nconst name = \"@azure/msal-common\";\r\nconst version = \"15.12.0\";\n\nexport { name, version };\n//# sourceMappingURL=packageMetadata.mjs.map\n","/*! @azure/msal-common v15.12.0 2025-08-19 */\n'use strict';\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nconst AzureCloudInstance = {\r\n    // AzureCloudInstance is not specified.\r\n    None: \"none\",\r\n    // Microsoft Azure public cloud\r\n    AzurePublic: \"https://login.microsoftonline.com\",\r\n    // Microsoft PPE\r\n    AzurePpe: \"https://login.windows-ppe.net\",\r\n    // Microsoft Chinese national/regional cloud\r\n    AzureChina: \"https://login.chinacloudapi.cn\",\r\n    // Microsoft German national/regional cloud (\"Black Forest\")\r\n    AzureGermany: \"https://login.microsoftonline.de\",\r\n    // US Government cloud\r\n    AzureUsGovernment: \"https://login.microsoftonline.us\",\r\n};\n\nexport { AzureCloudInstance };\n//# sourceMappingURL=AuthorityOptions.mjs.map\n","/*! @azure/msal-common v15.12.0 2025-08-19 */\n'use strict';\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nconst redirectUriEmpty = \"redirect_uri_empty\";\r\nconst claimsRequestParsingError = \"claims_request_parsing_error\";\r\nconst authorityUriInsecure = \"authority_uri_insecure\";\r\nconst urlParseError = \"url_parse_error\";\r\nconst urlEmptyError = \"empty_url_error\";\r\nconst emptyInputScopesError = \"empty_input_scopes_error\";\r\nconst invalidClaims = \"invalid_claims\";\r\nconst tokenRequestEmpty = \"token_request_empty\";\r\nconst logoutRequestEmpty = \"logout_request_empty\";\r\nconst invalidCodeChallengeMethod = \"invalid_code_challenge_method\";\r\nconst pkceParamsMissing = \"pkce_params_missing\";\r\nconst invalidCloudDiscoveryMetadata = \"invalid_cloud_discovery_metadata\";\r\nconst invalidAuthorityMetadata = \"invalid_authority_metadata\";\r\nconst untrustedAuthority = \"untrusted_authority\";\r\nconst missingSshJwk = \"missing_ssh_jwk\";\r\nconst missingSshKid = \"missing_ssh_kid\";\r\nconst missingNonceAuthenticationHeader = \"missing_nonce_authentication_header\";\r\nconst invalidAuthenticationHeader = \"invalid_authentication_header\";\r\nconst cannotSetOIDCOptions = \"cannot_set_OIDCOptions\";\r\nconst cannotAllowPlatformBroker = \"cannot_allow_platform_broker\";\r\nconst authorityMismatch = \"authority_mismatch\";\r\nconst invalidRequestMethodForEAR = \"invalid_request_method_for_EAR\";\r\nconst invalidAuthorizePostBodyParameters = \"invalid_authorize_post_body_parameters\";\n\nexport { authorityMismatch, authorityUriInsecure, cannotAllowPlatformBroker, cannotSetOIDCOptions, claimsRequestParsingError, emptyInputScopesError, invalidAuthenticationHeader, invalidAuthorityMetadata, invalidAuthorizePostBodyParameters, invalidClaims, invalidCloudDiscoveryMetadata, invalidCodeChallengeMethod, invalidRequestMethodForEAR, logoutRequestEmpty, missingNonceAuthenticationHeader, missingSshJwk, missingSshKid, pkceParamsMissing, redirectUriEmpty, tokenRequestEmpty, untrustedAuthority, urlEmptyError, urlParseError };\n//# sourceMappingURL=ClientConfigurationErrorCodes.mjs.map\n","/*! @azure/msal-common v15.12.0 2025-08-19 */\n'use strict';\nimport { AuthError } from './AuthError.mjs';\nimport { invalidRequestMethodForEAR, invalidAuthorizePostBodyParameters, authorityMismatch, cannotAllowPlatformBroker, cannotSetOIDCOptions, invalidAuthenticationHeader, missingNonceAuthenticationHeader, missingSshKid, missingSshJwk, untrustedAuthority, invalidAuthorityMetadata, invalidCloudDiscoveryMetadata, pkceParamsMissing, invalidCodeChallengeMethod, logoutRequestEmpty, tokenRequestEmpty, invalidClaims, emptyInputScopesError, urlEmptyError, urlParseError, authorityUriInsecure, claimsRequestParsingError, redirectUriEmpty } from './ClientConfigurationErrorCodes.mjs';\nimport * as ClientConfigurationErrorCodes from './ClientConfigurationErrorCodes.mjs';\nexport { ClientConfigurationErrorCodes };\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nconst ClientConfigurationErrorMessages = {\r\n    [redirectUriEmpty]: \"A redirect URI is required for all calls, and none has been set.\",\r\n    [claimsRequestParsingError]: \"Could not parse the given claims request object.\",\r\n    [authorityUriInsecure]: \"Authority URIs must use https.  Please see here for valid authority configuration options: https://docs.microsoft.com/en-us/azure/active-directory/develop/msal-js-initializing-client-applications#configuration-options\",\r\n    [urlParseError]: \"URL could not be parsed into appropriate segments.\",\r\n    [urlEmptyError]: \"URL was empty or null.\",\r\n    [emptyInputScopesError]: \"Scopes cannot be passed as null, undefined or empty array because they are required to obtain an access token.\",\r\n    [invalidClaims]: \"Given claims parameter must be a stringified JSON object.\",\r\n    [tokenRequestEmpty]: \"Token request was empty and not found in cache.\",\r\n    [logoutRequestEmpty]: \"The logout request was null or undefined.\",\r\n    [invalidCodeChallengeMethod]: 'code_challenge_method passed is invalid. Valid values are \"plain\" and \"S256\".',\r\n    [pkceParamsMissing]: \"Both params: code_challenge and code_challenge_method are to be passed if to be sent in the request\",\r\n    [invalidCloudDiscoveryMetadata]: \"Invalid cloudDiscoveryMetadata provided. Must be a stringified JSON object containing tenant_discovery_endpoint and metadata fields\",\r\n    [invalidAuthorityMetadata]: \"Invalid authorityMetadata provided. Must by a stringified JSON object containing authorization_endpoint, token_endpoint, issuer fields.\",\r\n    [untrustedAuthority]: \"The provided authority is not a trusted authority. Please include this authority in the knownAuthorities config parameter.\",\r\n    [missingSshJwk]: \"Missing sshJwk in SSH certificate request. A stringified JSON Web Key is required when using the SSH authentication scheme.\",\r\n    [missingSshKid]: \"Missing sshKid in SSH certificate request. A string that uniquely identifies the public SSH key is required when using the SSH authentication scheme.\",\r\n    [missingNonceAuthenticationHeader]: \"Unable to find an authentication header containing server nonce. Either the Authentication-Info or WWW-Authenticate headers must be present in order to obtain a server nonce.\",\r\n    [invalidAuthenticationHeader]: \"Invalid authentication header provided\",\r\n    [cannotSetOIDCOptions]: \"Cannot set OIDCOptions parameter. Please change the protocol mode to OIDC or use a non-Microsoft authority.\",\r\n    [cannotAllowPlatformBroker]: \"Cannot set allowPlatformBroker parameter to true when not in AAD protocol mode.\",\r\n    [authorityMismatch]: \"Authority mismatch error. Authority provided in login request or PublicClientApplication config does not match the environment of the provided account. Please use a matching account or make an interactive request to login to this authority.\",\r\n    [invalidAuthorizePostBodyParameters]: \"Invalid authorize post body parameters provided. If you are using authorizePostBodyParameters, the request method must be POST. Please check the request method and parameters.\",\r\n    [invalidRequestMethodForEAR]: \"Invalid request method for EAR protocol mode. The request method cannot be GET when using EAR protocol mode. Please change the request method to POST.\",\r\n};\r\n/**\r\n * ClientConfigurationErrorMessage class containing string constants used by error codes and messages.\r\n * @deprecated Use ClientConfigurationErrorCodes instead\r\n */\r\nconst ClientConfigurationErrorMessage = {\r\n    redirectUriNotSet: {\r\n        code: redirectUriEmpty,\r\n        desc: ClientConfigurationErrorMessages[redirectUriEmpty],\r\n    },\r\n    claimsRequestParsingError: {\r\n        code: claimsRequestParsingError,\r\n        desc: ClientConfigurationErrorMessages[claimsRequestParsingError],\r\n    },\r\n    authorityUriInsecure: {\r\n        code: authorityUriInsecure,\r\n        desc: ClientConfigurationErrorMessages[authorityUriInsecure],\r\n    },\r\n    urlParseError: {\r\n        code: urlParseError,\r\n        desc: ClientConfigurationErrorMessages[urlParseError],\r\n    },\r\n    urlEmptyError: {\r\n        code: urlEmptyError,\r\n        desc: ClientConfigurationErrorMessages[urlEmptyError],\r\n    },\r\n    emptyScopesError: {\r\n        code: emptyInputScopesError,\r\n        desc: ClientConfigurationErrorMessages[emptyInputScopesError],\r\n    },\r\n    invalidClaimsRequest: {\r\n        code: invalidClaims,\r\n        desc: ClientConfigurationErrorMessages[invalidClaims],\r\n    },\r\n    tokenRequestEmptyError: {\r\n        code: tokenRequestEmpty,\r\n        desc: ClientConfigurationErrorMessages[tokenRequestEmpty],\r\n    },\r\n    logoutRequestEmptyError: {\r\n        code: logoutRequestEmpty,\r\n        desc: ClientConfigurationErrorMessages[logoutRequestEmpty],\r\n    },\r\n    invalidCodeChallengeMethod: {\r\n        code: invalidCodeChallengeMethod,\r\n        desc: ClientConfigurationErrorMessages[invalidCodeChallengeMethod],\r\n    },\r\n    invalidCodeChallengeParams: {\r\n        code: pkceParamsMissing,\r\n        desc: ClientConfigurationErrorMessages[pkceParamsMissing],\r\n    },\r\n    invalidCloudDiscoveryMetadata: {\r\n        code: invalidCloudDiscoveryMetadata,\r\n        desc: ClientConfigurationErrorMessages[invalidCloudDiscoveryMetadata],\r\n    },\r\n    invalidAuthorityMetadata: {\r\n        code: invalidAuthorityMetadata,\r\n        desc: ClientConfigurationErrorMessages[invalidAuthorityMetadata],\r\n    },\r\n    untrustedAuthority: {\r\n        code: untrustedAuthority,\r\n        desc: ClientConfigurationErrorMessages[untrustedAuthority],\r\n    },\r\n    missingSshJwk: {\r\n        code: missingSshJwk,\r\n        desc: ClientConfigurationErrorMessages[missingSshJwk],\r\n    },\r\n    missingSshKid: {\r\n        code: missingSshKid,\r\n        desc: ClientConfigurationErrorMessages[missingSshKid],\r\n    },\r\n    missingNonceAuthenticationHeader: {\r\n        code: missingNonceAuthenticationHeader,\r\n        desc: ClientConfigurationErrorMessages[missingNonceAuthenticationHeader],\r\n    },\r\n    invalidAuthenticationHeader: {\r\n        code: invalidAuthenticationHeader,\r\n        desc: ClientConfigurationErrorMessages[invalidAuthenticationHeader],\r\n    },\r\n    cannotSetOIDCOptions: {\r\n        code: cannotSetOIDCOptions,\r\n        desc: ClientConfigurationErrorMessages[cannotSetOIDCOptions],\r\n    },\r\n    cannotAllowPlatformBroker: {\r\n        code: cannotAllowPlatformBroker,\r\n        desc: ClientConfigurationErrorMessages[cannotAllowPlatformBroker],\r\n    },\r\n    authorityMismatch: {\r\n        code: authorityMismatch,\r\n        desc: ClientConfigurationErrorMessages[authorityMismatch],\r\n    },\r\n    invalidAuthorizePostBodyParameters: {\r\n        code: invalidAuthorizePostBodyParameters,\r\n        desc: ClientConfigurationErrorMessages[invalidAuthorizePostBodyParameters],\r\n    },\r\n    invalidRequestMethodForEAR: {\r\n        code: invalidRequestMethodForEAR,\r\n        desc: ClientConfigurationErrorMessages[invalidRequestMethodForEAR],\r\n    },\r\n};\r\n/**\r\n * Error thrown when there is an error in configuration of the MSAL.js library.\r\n */\r\nclass ClientConfigurationError extends AuthError {\r\n    constructor(errorCode) {\r\n        super(errorCode, ClientConfigurationErrorMessages[errorCode]);\r\n        this.name = \"ClientConfigurationError\";\r\n        Object.setPrototypeOf(this, ClientConfigurationError.prototype);\r\n    }\r\n}\r\nfunction createClientConfigurationError(errorCode) {\r\n    return new ClientConfigurationError(errorCode);\r\n}\n\nexport { ClientConfigurationError, ClientConfigurationErrorMessage, ClientConfigurationErrorMessages, createClientConfigurationError };\n//# sourceMappingURL=ClientConfigurationError.mjs.map\n","/*! @azure/msal-common v15.12.0 2025-08-19 */\n'use strict';\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * @hidden\r\n */\r\nclass StringUtils {\r\n    /**\r\n     * Check if stringified object is empty\r\n     * @param strObj\r\n     */\r\n    static isEmptyObj(strObj) {\r\n        if (strObj) {\r\n            try {\r\n                const obj = JSON.parse(strObj);\r\n                return Object.keys(obj).length === 0;\r\n            }\r\n            catch (e) { }\r\n        }\r\n        return true;\r\n    }\r\n    static startsWith(str, search) {\r\n        return str.indexOf(search) === 0;\r\n    }\r\n    static endsWith(str, search) {\r\n        return (str.length >= search.length &&\r\n            str.lastIndexOf(search) === str.length - search.length);\r\n    }\r\n    /**\r\n     * Parses string into an object.\r\n     *\r\n     * @param query\r\n     */\r\n    static queryStringToObject(query) {\r\n        const obj = {};\r\n        const params = query.split(\"&\");\r\n        const decode = (s) => decodeURIComponent(s.replace(/\\+/g, \" \"));\r\n        params.forEach((pair) => {\r\n            if (pair.trim()) {\r\n                const [key, value] = pair.split(/=(.+)/g, 2); // Split on the first occurence of the '=' character\r\n                if (key && value) {\r\n                    obj[decode(key)] = decode(value);\r\n                }\r\n            }\r\n        });\r\n        return obj;\r\n    }\r\n    /**\r\n     * Trims entries in an array.\r\n     *\r\n     * @param arr\r\n     */\r\n    static trimArrayEntries(arr) {\r\n        return arr.map((entry) => entry.trim());\r\n    }\r\n    /**\r\n     * Removes empty strings from array\r\n     * @param arr\r\n     */\r\n    static removeEmptyStringsFromArray(arr) {\r\n        return arr.filter((entry) => {\r\n            return !!entry;\r\n        });\r\n    }\r\n    /**\r\n     * Attempts to parse a string into JSON\r\n     * @param str\r\n     */\r\n    static jsonParseHelper(str) {\r\n        try {\r\n            return JSON.parse(str);\r\n        }\r\n        catch (e) {\r\n            return null;\r\n        }\r\n    }\r\n    /**\r\n     * Tests if a given string matches a given pattern, with support for wildcards and queries.\r\n     * @param pattern Wildcard pattern to string match. Supports \"*\" for wildcards and \"?\" for queries\r\n     * @param input String to match against\r\n     */\r\n    static matchPattern(pattern, input) {\r\n        /**\r\n         * Wildcard support: https://stackoverflow.com/a/3117248/4888559\r\n         * Queries: replaces \"?\" in string with escaped \"\\?\" for regex test\r\n         */\r\n        // eslint-disable-next-line security/detect-non-literal-regexp\r\n        const regex = new RegExp(pattern\r\n            .replace(/\\\\/g, \"\\\\\\\\\")\r\n            .replace(/\\*/g, \"[^ ]*\")\r\n            .replace(/\\?/g, \"\\\\?\"));\r\n        return regex.test(input);\r\n    }\r\n}\n\nexport { StringUtils };\n//# sourceMappingURL=StringUtils.mjs.map\n","/*! @azure/msal-common v15.12.0 2025-08-19 */\n'use strict';\nimport { createClientConfigurationError } from '../error/ClientConfigurationError.mjs';\nimport { StringUtils } from '../utils/StringUtils.mjs';\nimport { createClientAuthError } from '../error/ClientAuthError.mjs';\nimport { Constants, OIDC_DEFAULT_SCOPES, OIDC_SCOPES } from '../utils/Constants.mjs';\nimport { emptyInputScopesError } from '../error/ClientConfigurationErrorCodes.mjs';\nimport { cannotAppendScopeSet, cannotRemoveEmptyScope, emptyInputScopeSet } from '../error/ClientAuthErrorCodes.mjs';\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * The ScopeSet class creates a set of scopes. Scopes are case-insensitive, unique values, so the Set object in JS makes\r\n * the most sense to implement for this class. All scopes are trimmed and converted to lower case strings in intersection and union functions\r\n * to ensure uniqueness of strings.\r\n */\r\nclass ScopeSet {\r\n    constructor(inputScopes) {\r\n        // Filter empty string and null/undefined array items\r\n        const scopeArr = inputScopes\r\n            ? StringUtils.trimArrayEntries([...inputScopes])\r\n            : [];\r\n        const filteredInput = scopeArr\r\n            ? StringUtils.removeEmptyStringsFromArray(scopeArr)\r\n            : [];\r\n        // Check if scopes array has at least one member\r\n        if (!filteredInput || !filteredInput.length) {\r\n            throw createClientConfigurationError(emptyInputScopesError);\r\n        }\r\n        this.scopes = new Set(); // Iterator in constructor not supported by IE11\r\n        filteredInput.forEach((scope) => this.scopes.add(scope));\r\n    }\r\n    /**\r\n     * Factory method to create ScopeSet from space-delimited string\r\n     * @param inputScopeString\r\n     * @param appClientId\r\n     * @param scopesRequired\r\n     */\r\n    static fromString(inputScopeString) {\r\n        const scopeString = inputScopeString || Constants.EMPTY_STRING;\r\n        const inputScopes = scopeString.split(\" \");\r\n        return new ScopeSet(inputScopes);\r\n    }\r\n    /**\r\n     * Creates the set of scopes to search for in cache lookups\r\n     * @param inputScopeString\r\n     * @returns\r\n     */\r\n    static createSearchScopes(inputScopeString) {\r\n        // Handle empty scopes by using default OIDC scopes for cache lookup\r\n        const scopesToUse = inputScopeString && inputScopeString.length > 0\r\n            ? inputScopeString\r\n            : [...OIDC_DEFAULT_SCOPES];\r\n        const scopeSet = new ScopeSet(scopesToUse);\r\n        if (!scopeSet.containsOnlyOIDCScopes()) {\r\n            scopeSet.removeOIDCScopes();\r\n        }\r\n        else {\r\n            scopeSet.removeScope(Constants.OFFLINE_ACCESS_SCOPE);\r\n        }\r\n        return scopeSet;\r\n    }\r\n    /**\r\n     * Check if a given scope is present in this set of scopes.\r\n     * @param scope\r\n     */\r\n    containsScope(scope) {\r\n        const lowerCaseScopes = this.printScopesLowerCase().split(\" \");\r\n        const lowerCaseScopesSet = new ScopeSet(lowerCaseScopes);\r\n        // compare lowercase scopes\r\n        return scope\r\n            ? lowerCaseScopesSet.scopes.has(scope.toLowerCase())\r\n            : false;\r\n    }\r\n    /**\r\n     * Check if a set of scopes is present in this set of scopes.\r\n     * @param scopeSet\r\n     */\r\n    containsScopeSet(scopeSet) {\r\n        if (!scopeSet || scopeSet.scopes.size <= 0) {\r\n            return false;\r\n        }\r\n        return (this.scopes.size >= scopeSet.scopes.size &&\r\n            scopeSet.asArray().every((scope) => this.containsScope(scope)));\r\n    }\r\n    /**\r\n     * Check if set of scopes contains only the defaults\r\n     */\r\n    containsOnlyOIDCScopes() {\r\n        let defaultScopeCount = 0;\r\n        OIDC_SCOPES.forEach((defaultScope) => {\r\n            if (this.containsScope(defaultScope)) {\r\n                defaultScopeCount += 1;\r\n            }\r\n        });\r\n        return this.scopes.size === defaultScopeCount;\r\n    }\r\n    /**\r\n     * Appends single scope if passed\r\n     * @param newScope\r\n     */\r\n    appendScope(newScope) {\r\n        if (newScope) {\r\n            this.scopes.add(newScope.trim());\r\n        }\r\n    }\r\n    /**\r\n     * Appends multiple scopes if passed\r\n     * @param newScopes\r\n     */\r\n    appendScopes(newScopes) {\r\n        try {\r\n            newScopes.forEach((newScope) => this.appendScope(newScope));\r\n        }\r\n        catch (e) {\r\n            throw createClientAuthError(cannotAppendScopeSet);\r\n        }\r\n    }\r\n    /**\r\n     * Removes element from set of scopes.\r\n     * @param scope\r\n     */\r\n    removeScope(scope) {\r\n        if (!scope) {\r\n            throw createClientAuthError(cannotRemoveEmptyScope);\r\n        }\r\n        this.scopes.delete(scope.trim());\r\n    }\r\n    /**\r\n     * Removes default scopes from set of scopes\r\n     * Primarily used to prevent cache misses if the default scopes are not returned from the server\r\n     */\r\n    removeOIDCScopes() {\r\n        OIDC_SCOPES.forEach((defaultScope) => {\r\n            this.scopes.delete(defaultScope);\r\n        });\r\n    }\r\n    /**\r\n     * Combines an array of scopes with the current set of scopes.\r\n     * @param otherScopes\r\n     */\r\n    unionScopeSets(otherScopes) {\r\n        if (!otherScopes) {\r\n            throw createClientAuthError(emptyInputScopeSet);\r\n        }\r\n        const unionScopes = new Set(); // Iterator in constructor not supported in IE11\r\n        otherScopes.scopes.forEach((scope) => unionScopes.add(scope.toLowerCase()));\r\n        this.scopes.forEach((scope) => unionScopes.add(scope.toLowerCase()));\r\n        return unionScopes;\r\n    }\r\n    /**\r\n     * Check if scopes intersect between this set and another.\r\n     * @param otherScopes\r\n     */\r\n    intersectingScopeSets(otherScopes) {\r\n        if (!otherScopes) {\r\n            throw createClientAuthError(emptyInputScopeSet);\r\n        }\r\n        // Do not allow OIDC scopes to be the only intersecting scopes\r\n        if (!otherScopes.containsOnlyOIDCScopes()) {\r\n            otherScopes.removeOIDCScopes();\r\n        }\r\n        const unionScopes = this.unionScopeSets(otherScopes);\r\n        const sizeOtherScopes = otherScopes.getScopeCount();\r\n        const sizeThisScopes = this.getScopeCount();\r\n        const sizeUnionScopes = unionScopes.size;\r\n        return sizeUnionScopes < sizeThisScopes + sizeOtherScopes;\r\n    }\r\n    /**\r\n     * Returns size of set of scopes.\r\n     */\r\n    getScopeCount() {\r\n        return this.scopes.size;\r\n    }\r\n    /**\r\n     * Returns the scopes as an array of string values\r\n     */\r\n    asArray() {\r\n        const array = [];\r\n        this.scopes.forEach((val) => array.push(val));\r\n        return array;\r\n    }\r\n    /**\r\n     * Prints scopes into a space-delimited string\r\n     */\r\n    printScopes() {\r\n        if (this.scopes) {\r\n            const scopeArr = this.asArray();\r\n            return scopeArr.join(\" \");\r\n        }\r\n        return Constants.EMPTY_STRING;\r\n    }\r\n    /**\r\n     * Prints scopes into a space-delimited lower-case string (used for caching)\r\n     */\r\n    printScopesLowerCase() {\r\n        return this.printScopes().toLowerCase();\r\n    }\r\n}\n\nexport { ScopeSet };\n//# sourceMappingURL=ScopeSet.mjs.map\n","/*! @azure/msal-common v15.12.0 2025-08-19 */\n'use strict';\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * Returns true if tenantId matches the utid portion of homeAccountId\r\n * @param tenantId\r\n * @param homeAccountId\r\n * @returns\r\n */\r\nfunction tenantIdMatchesHomeTenant(tenantId, homeAccountId) {\r\n    return (!!tenantId &&\r\n        !!homeAccountId &&\r\n        tenantId === homeAccountId.split(\".\")[1]);\r\n}\r\n/**\r\n * Build tenant profile\r\n * @param homeAccountId - Home account identifier for this account object\r\n * @param localAccountId - Local account identifer for this account object\r\n * @param tenantId - Full tenant or organizational id that this account belongs to\r\n * @param idTokenClaims - Claims from the ID token\r\n * @returns\r\n */\r\nfunction buildTenantProfile(homeAccountId, localAccountId, tenantId, idTokenClaims) {\r\n    if (idTokenClaims) {\r\n        const { oid, sub, tid, name, tfp, acr, preferred_username, upn, login_hint, } = idTokenClaims;\r\n        /**\r\n         * Since there is no way to determine if the authority is AAD or B2C, we exhaust all the possible claims that can serve as tenant ID with the following precedence:\r\n         * tid - TenantID claim that identifies the tenant that issued the token in AAD. Expected in all AAD ID tokens, not present in B2C ID Tokens.\r\n         * tfp - Trust Framework Policy claim that identifies the policy that was used to authenticate the user. Functions as tenant for B2C scenarios.\r\n         * acr - Authentication Context Class Reference claim used only with older B2C policies. Fallback in case tfp is not present, but likely won't be present anyway.\r\n         */\r\n        const tenantId = tid || tfp || acr || \"\";\r\n        return {\r\n            tenantId: tenantId,\r\n            localAccountId: oid || sub || \"\",\r\n            name: name,\r\n            username: preferred_username || upn || \"\",\r\n            loginHint: login_hint,\r\n            isHomeTenant: tenantIdMatchesHomeTenant(tenantId, homeAccountId),\r\n        };\r\n    }\r\n    else {\r\n        return {\r\n            tenantId,\r\n            localAccountId,\r\n            username: \"\",\r\n            isHomeTenant: tenantIdMatchesHomeTenant(tenantId, homeAccountId),\r\n        };\r\n    }\r\n}\r\n/**\r\n * Replaces account info that varies by tenant profile sourced from the ID token claims passed in with the tenant-specific account info\r\n * @param baseAccountInfo\r\n * @param idTokenClaims\r\n * @returns\r\n */\r\nfunction updateAccountTenantProfileData(baseAccountInfo, tenantProfile, idTokenClaims, idTokenSecret) {\r\n    let updatedAccountInfo = baseAccountInfo;\r\n    // Tenant Profile overrides passed in account info\r\n    if (tenantProfile) {\r\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n        const { isHomeTenant, ...tenantProfileOverride } = tenantProfile;\r\n        updatedAccountInfo = { ...baseAccountInfo, ...tenantProfileOverride };\r\n    }\r\n    // ID token claims override passed in account info and tenant profile\r\n    if (idTokenClaims) {\r\n        // Ignore isHomeTenant, loginHint, and sid which are part of tenant profile but not base account info\r\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n        const { isHomeTenant, ...claimsSourcedTenantProfile } = buildTenantProfile(baseAccountInfo.homeAccountId, baseAccountInfo.localAccountId, baseAccountInfo.tenantId, idTokenClaims);\r\n        updatedAccountInfo = {\r\n            ...updatedAccountInfo,\r\n            ...claimsSourcedTenantProfile,\r\n            idTokenClaims: idTokenClaims,\r\n            idToken: idTokenSecret,\r\n        };\r\n        return updatedAccountInfo;\r\n    }\r\n    return updatedAccountInfo;\r\n}\n\nexport { buildTenantProfile, tenantIdMatchesHomeTenant, updateAccountTenantProfileData };\n//# sourceMappingURL=AccountInfo.mjs.map\n","/*! @azure/msal-common v15.12.0 2025-08-19 */\n'use strict';\nimport { createClientAuthError } from '../error/ClientAuthError.mjs';\nimport { tokenParsingError, nullOrEmptyToken, maxAgeTranspired } from '../error/ClientAuthErrorCodes.mjs';\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * Extract token by decoding the rawToken\r\n *\r\n * @param encodedToken\r\n */\r\nfunction extractTokenClaims(encodedToken, base64Decode) {\r\n    const jswPayload = getJWSPayload(encodedToken);\r\n    // token will be decoded to get the username\r\n    try {\r\n        // base64Decode() should throw an error if there is an issue\r\n        const base64Decoded = base64Decode(jswPayload);\r\n        return JSON.parse(base64Decoded);\r\n    }\r\n    catch (err) {\r\n        throw createClientAuthError(tokenParsingError);\r\n    }\r\n}\r\n/**\r\n * decode a JWT\r\n *\r\n * @param authToken\r\n */\r\nfunction getJWSPayload(authToken) {\r\n    if (!authToken) {\r\n        throw createClientAuthError(nullOrEmptyToken);\r\n    }\r\n    const tokenPartsRegex = /^([^\\.\\s]*)\\.([^\\.\\s]+)\\.([^\\.\\s]*)$/;\r\n    const matches = tokenPartsRegex.exec(authToken);\r\n    if (!matches || matches.length < 4) {\r\n        throw createClientAuthError(tokenParsingError);\r\n    }\r\n    /**\r\n     * const crackedToken = {\r\n     *  header: matches[1],\r\n     *  JWSPayload: matches[2],\r\n     *  JWSSig: matches[3],\r\n     * };\r\n     */\r\n    return matches[2];\r\n}\r\n/**\r\n * Determine if the token's max_age has transpired\r\n */\r\nfunction checkMaxAge(authTime, maxAge) {\r\n    /*\r\n     * per https://openid.net/specs/openid-connect-core-1_0.html#AuthRequest\r\n     * To force an immediate re-authentication: If an app requires that a user re-authenticate prior to access,\r\n     * provide a value of 0 for the max_age parameter and the AS will force a fresh login.\r\n     */\r\n    const fiveMinuteSkew = 300000; // five minutes in milliseconds\r\n    if (maxAge === 0 || Date.now() - fiveMinuteSkew > authTime + maxAge) {\r\n        throw createClientAuthError(maxAgeTranspired);\r\n    }\r\n}\n\nexport { checkMaxAge, extractTokenClaims, getJWSPayload };\n//# sourceMappingURL=AuthToken.mjs.map\n","/*! @azure/msal-common v15.12.0 2025-08-19 */\n'use strict';\nimport { createClientAuthError } from '../error/ClientAuthError.mjs';\nimport { StringUtils } from './StringUtils.mjs';\nimport { hashNotDeserialized } from '../error/ClientAuthErrorCodes.mjs';\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * Canonicalizes a URL by making it lowercase and ensuring it ends with /\r\n * Inlined version of UrlString.canonicalizeUri to avoid circular dependency\r\n * @param url - URL to canonicalize\r\n * @returns Canonicalized URL\r\n */\r\nfunction canonicalizeUrl(url) {\r\n    if (!url) {\r\n        return url;\r\n    }\r\n    let lowerCaseUrl = url.toLowerCase();\r\n    if (StringUtils.endsWith(lowerCaseUrl, \"?\")) {\r\n        lowerCaseUrl = lowerCaseUrl.slice(0, -1);\r\n    }\r\n    else if (StringUtils.endsWith(lowerCaseUrl, \"?/\")) {\r\n        lowerCaseUrl = lowerCaseUrl.slice(0, -2);\r\n    }\r\n    if (!StringUtils.endsWith(lowerCaseUrl, \"/\")) {\r\n        lowerCaseUrl += \"/\";\r\n    }\r\n    return lowerCaseUrl;\r\n}\r\n/**\r\n * Parses hash string from given string. Returns empty string if no hash symbol is found.\r\n * @param hashString\r\n */\r\nfunction stripLeadingHashOrQuery(responseString) {\r\n    if (responseString.startsWith(\"#/\")) {\r\n        return responseString.substring(2);\r\n    }\r\n    else if (responseString.startsWith(\"#\") ||\r\n        responseString.startsWith(\"?\")) {\r\n        return responseString.substring(1);\r\n    }\r\n    return responseString;\r\n}\r\n/**\r\n * Returns URL hash as server auth code response object.\r\n */\r\nfunction getDeserializedResponse(responseString) {\r\n    // Check if given hash is empty\r\n    if (!responseString || responseString.indexOf(\"=\") < 0) {\r\n        return null;\r\n    }\r\n    try {\r\n        // Strip the # or ? symbol if present\r\n        const normalizedResponse = stripLeadingHashOrQuery(responseString);\r\n        // If # symbol was not present, above will return empty string, so give original hash value\r\n        const deserializedHash = Object.fromEntries(new URLSearchParams(normalizedResponse));\r\n        // Check for known response properties\r\n        if (deserializedHash.code ||\r\n            deserializedHash.ear_jwe ||\r\n            deserializedHash.error ||\r\n            deserializedHash.error_description ||\r\n            deserializedHash.state) {\r\n            return deserializedHash;\r\n        }\r\n    }\r\n    catch (e) {\r\n        throw createClientAuthError(hashNotDeserialized);\r\n    }\r\n    return null;\r\n}\r\n/**\r\n * Utility to create a URL from the params map\r\n */\r\nfunction mapToQueryString(parameters, encodeExtraParams = true, extraQueryParameters) {\r\n    const queryParameterArray = new Array();\r\n    parameters.forEach((value, key) => {\r\n        if (!encodeExtraParams &&\r\n            extraQueryParameters &&\r\n            key in extraQueryParameters) {\r\n            queryParameterArray.push(`${key}=${value}`);\r\n        }\r\n        else {\r\n            queryParameterArray.push(`${key}=${encodeURIComponent(value)}`);\r\n        }\r\n    });\r\n    return queryParameterArray.join(\"&\");\r\n}\r\n/**\r\n * Normalizes URLs for comparison by removing hash, canonicalizing,\r\n * and ensuring consistent URL encoding in query parameters.\r\n * This fixes redirect loops when URLs contain encoded characters like apostrophes (%27).\r\n * @param url - URL to normalize\r\n * @returns Normalized URL string for comparison\r\n */\r\nfunction normalizeUrlForComparison(url) {\r\n    if (!url) {\r\n        return url;\r\n    }\r\n    // Remove hash first\r\n    const urlWithoutHash = url.split(\"#\")[0];\r\n    try {\r\n        // Parse the URL to handle encoding consistently\r\n        const urlObj = new URL(urlWithoutHash);\r\n        /*\r\n         * Reconstruct the URL with properly decoded query parameters\r\n         * This ensures that %27 and ' are treated as equivalent\r\n         */\r\n        const normalizedUrl = urlObj.origin + urlObj.pathname + urlObj.search;\r\n        // Apply canonicalization logic inline to avoid circular dependency\r\n        return canonicalizeUrl(normalizedUrl);\r\n    }\r\n    catch (e) {\r\n        // Fallback to original logic if URL parsing fails\r\n        return canonicalizeUrl(urlWithoutHash);\r\n    }\r\n}\n\nexport { getDeserializedResponse, mapToQueryString, normalizeUrlForComparison, stripLeadingHashOrQuery };\n//# sourceMappingURL=UrlUtils.mjs.map\n","/*! @azure/msal-common v15.12.0 2025-08-19 */\n'use strict';\nimport { createClientConfigurationError } from '../error/ClientConfigurationError.mjs';\nimport { StringUtils } from '../utils/StringUtils.mjs';\nimport { AADAuthorityConstants, Constants } from '../utils/Constants.mjs';\nimport { getDeserializedResponse } from '../utils/UrlUtils.mjs';\nimport { urlEmptyError, urlParseError, authorityUriInsecure } from '../error/ClientConfigurationErrorCodes.mjs';\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * Url object class which can perform various transformations on url strings.\r\n */\r\nclass UrlString {\r\n    get urlString() {\r\n        return this._urlString;\r\n    }\r\n    constructor(url) {\r\n        this._urlString = url;\r\n        if (!this._urlString) {\r\n            // Throws error if url is empty\r\n            throw createClientConfigurationError(urlEmptyError);\r\n        }\r\n        if (!url.includes(\"#\")) {\r\n            this._urlString = UrlString.canonicalizeUri(url);\r\n        }\r\n    }\r\n    /**\r\n     * Ensure urls are lower case and end with a / character.\r\n     * @param url\r\n     */\r\n    static canonicalizeUri(url) {\r\n        if (url) {\r\n            let lowerCaseUrl = url.toLowerCase();\r\n            if (StringUtils.endsWith(lowerCaseUrl, \"?\")) {\r\n                lowerCaseUrl = lowerCaseUrl.slice(0, -1);\r\n            }\r\n            else if (StringUtils.endsWith(lowerCaseUrl, \"?/\")) {\r\n                lowerCaseUrl = lowerCaseUrl.slice(0, -2);\r\n            }\r\n            if (!StringUtils.endsWith(lowerCaseUrl, \"/\")) {\r\n                lowerCaseUrl += \"/\";\r\n            }\r\n            return lowerCaseUrl;\r\n        }\r\n        return url;\r\n    }\r\n    /**\r\n     * Throws if urlString passed is not a valid authority URI string.\r\n     */\r\n    validateAsUri() {\r\n        // Attempts to parse url for uri components\r\n        let components;\r\n        try {\r\n            components = this.getUrlComponents();\r\n        }\r\n        catch (e) {\r\n            throw createClientConfigurationError(urlParseError);\r\n        }\r\n        // Throw error if URI or path segments are not parseable.\r\n        if (!components.HostNameAndPort || !components.PathSegments) {\r\n            throw createClientConfigurationError(urlParseError);\r\n        }\r\n        // Throw error if uri is insecure.\r\n        if (!components.Protocol ||\r\n            components.Protocol.toLowerCase() !== \"https:\") {\r\n            throw createClientConfigurationError(authorityUriInsecure);\r\n        }\r\n    }\r\n    /**\r\n     * Given a url and a query string return the url with provided query string appended\r\n     * @param url\r\n     * @param queryString\r\n     */\r\n    static appendQueryString(url, queryString) {\r\n        if (!queryString) {\r\n            return url;\r\n        }\r\n        return url.indexOf(\"?\") < 0\r\n            ? `${url}?${queryString}`\r\n            : `${url}&${queryString}`;\r\n    }\r\n    /**\r\n     * Returns a url with the hash removed\r\n     * @param url\r\n     */\r\n    static removeHashFromUrl(url) {\r\n        return UrlString.canonicalizeUri(url.split(\"#\")[0]);\r\n    }\r\n    /**\r\n     * Given a url like https://a:b/common/d?e=f#g, and a tenantId, returns https://a:b/tenantId/d\r\n     * @param href The url\r\n     * @param tenantId The tenant id to replace\r\n     */\r\n    replaceTenantPath(tenantId) {\r\n        const urlObject = this.getUrlComponents();\r\n        const pathArray = urlObject.PathSegments;\r\n        if (tenantId &&\r\n            pathArray.length !== 0 &&\r\n            (pathArray[0] === AADAuthorityConstants.COMMON ||\r\n                pathArray[0] === AADAuthorityConstants.ORGANIZATIONS)) {\r\n            pathArray[0] = tenantId;\r\n        }\r\n        return UrlString.constructAuthorityUriFromObject(urlObject);\r\n    }\r\n    /**\r\n     * Parses out the components from a url string.\r\n     * @returns An object with the various components. Please cache this value insted of calling this multiple times on the same url.\r\n     */\r\n    getUrlComponents() {\r\n        // https://gist.github.com/curtisz/11139b2cfcaef4a261e0\r\n        const regEx = RegExp(\"^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(\\\\?([^#]*))?(#(.*))?\");\r\n        // If url string does not match regEx, we throw an error\r\n        const match = this.urlString.match(regEx);\r\n        if (!match) {\r\n            throw createClientConfigurationError(urlParseError);\r\n        }\r\n        // Url component object\r\n        const urlComponents = {\r\n            Protocol: match[1],\r\n            HostNameAndPort: match[4],\r\n            AbsolutePath: match[5],\r\n            QueryString: match[7],\r\n        };\r\n        let pathSegments = urlComponents.AbsolutePath.split(\"/\");\r\n        pathSegments = pathSegments.filter((val) => val && val.length > 0); // remove empty elements\r\n        urlComponents.PathSegments = pathSegments;\r\n        if (urlComponents.QueryString &&\r\n            urlComponents.QueryString.endsWith(\"/\")) {\r\n            urlComponents.QueryString = urlComponents.QueryString.substring(0, urlComponents.QueryString.length - 1);\r\n        }\r\n        return urlComponents;\r\n    }\r\n    static getDomainFromUrl(url) {\r\n        const regEx = RegExp(\"^([^:/?#]+://)?([^/?#]*)\");\r\n        const match = url.match(regEx);\r\n        if (!match) {\r\n            throw createClientConfigurationError(urlParseError);\r\n        }\r\n        return match[2];\r\n    }\r\n    static getAbsoluteUrl(relativeUrl, baseUrl) {\r\n        if (relativeUrl[0] === Constants.FORWARD_SLASH) {\r\n            const url = new UrlString(baseUrl);\r\n            const baseComponents = url.getUrlComponents();\r\n            return (baseComponents.Protocol +\r\n                \"//\" +\r\n                baseComponents.HostNameAndPort +\r\n                relativeUrl);\r\n        }\r\n        return relativeUrl;\r\n    }\r\n    static constructAuthorityUriFromObject(urlObject) {\r\n        return new UrlString(urlObject.Protocol +\r\n            \"//\" +\r\n            urlObject.HostNameAndPort +\r\n            \"/\" +\r\n            urlObject.PathSegments.join(\"/\"));\r\n    }\r\n    /**\r\n     * Check if the hash of the URL string contains known properties\r\n     * @deprecated This API will be removed in a future version\r\n     */\r\n    static hashContainsKnownProperties(response) {\r\n        return !!getDeserializedResponse(response);\r\n    }\r\n}\n\nexport { UrlString };\n//# sourceMappingURL=UrlString.mjs.map\n","/*! @azure/msal-common v15.12.0 2025-08-19 */\n'use strict';\nimport { UrlString } from '../url/UrlString.mjs';\nimport { AuthorityMetadataSource } from '../utils/Constants.mjs';\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nconst rawMetdataJSON = {\r\n    endpointMetadata: {\r\n        \"login.microsoftonline.com\": {\r\n            token_endpoint: \"https://login.microsoftonline.com/{tenantid}/oauth2/v2.0/token\",\r\n            jwks_uri: \"https://login.microsoftonline.com/{tenantid}/discovery/v2.0/keys\",\r\n            issuer: \"https://login.microsoftonline.com/{tenantid}/v2.0\",\r\n            authorization_endpoint: \"https://login.microsoftonline.com/{tenantid}/oauth2/v2.0/authorize\",\r\n            end_session_endpoint: \"https://login.microsoftonline.com/{tenantid}/oauth2/v2.0/logout\",\r\n        },\r\n        \"login.chinacloudapi.cn\": {\r\n            token_endpoint: \"https://login.chinacloudapi.cn/{tenantid}/oauth2/v2.0/token\",\r\n            jwks_uri: \"https://login.chinacloudapi.cn/{tenantid}/discovery/v2.0/keys\",\r\n            issuer: \"https://login.partner.microsoftonline.cn/{tenantid}/v2.0\",\r\n            authorization_endpoint: \"https://login.chinacloudapi.cn/{tenantid}/oauth2/v2.0/authorize\",\r\n            end_session_endpoint: \"https://login.chinacloudapi.cn/{tenantid}/oauth2/v2.0/logout\",\r\n        },\r\n        \"login.microsoftonline.us\": {\r\n            token_endpoint: \"https://login.microsoftonline.us/{tenantid}/oauth2/v2.0/token\",\r\n            jwks_uri: \"https://login.microsoftonline.us/{tenantid}/discovery/v2.0/keys\",\r\n            issuer: \"https://login.microsoftonline.us/{tenantid}/v2.0\",\r\n            authorization_endpoint: \"https://login.microsoftonline.us/{tenantid}/oauth2/v2.0/authorize\",\r\n            end_session_endpoint: \"https://login.microsoftonline.us/{tenantid}/oauth2/v2.0/logout\",\r\n        },\r\n    },\r\n    instanceDiscoveryMetadata: {\r\n        metadata: [\r\n            {\r\n                preferred_network: \"login.microsoftonline.com\",\r\n                preferred_cache: \"login.windows.net\",\r\n                aliases: [\r\n                    \"login.microsoftonline.com\",\r\n                    \"login.windows.net\",\r\n                    \"login.microsoft.com\",\r\n                    \"sts.windows.net\",\r\n                ],\r\n            },\r\n            {\r\n                preferred_network: \"login.partner.microsoftonline.cn\",\r\n                preferred_cache: \"login.partner.microsoftonline.cn\",\r\n                aliases: [\r\n                    \"login.partner.microsoftonline.cn\",\r\n                    \"login.chinacloudapi.cn\",\r\n                ],\r\n            },\r\n            {\r\n                preferred_network: \"login.microsoftonline.de\",\r\n                preferred_cache: \"login.microsoftonline.de\",\r\n                aliases: [\"login.microsoftonline.de\"],\r\n            },\r\n            {\r\n                preferred_network: \"login.microsoftonline.us\",\r\n                preferred_cache: \"login.microsoftonline.us\",\r\n                aliases: [\r\n                    \"login.microsoftonline.us\",\r\n                    \"login.usgovcloudapi.net\",\r\n                ],\r\n            },\r\n            {\r\n                preferred_network: \"login-us.microsoftonline.com\",\r\n                preferred_cache: \"login-us.microsoftonline.com\",\r\n                aliases: [\"login-us.microsoftonline.com\"],\r\n            },\r\n        ],\r\n    },\r\n};\r\nconst EndpointMetadata = rawMetdataJSON.endpointMetadata;\r\nconst InstanceDiscoveryMetadata = rawMetdataJSON.instanceDiscoveryMetadata;\r\nconst InstanceDiscoveryMetadataAliases = new Set();\r\nInstanceDiscoveryMetadata.metadata.forEach((metadataEntry) => {\r\n    metadataEntry.aliases.forEach((alias) => {\r\n        InstanceDiscoveryMetadataAliases.add(alias);\r\n    });\r\n});\r\n/**\r\n * Attempts to get an aliases array from the static authority metadata sources based on the canonical authority host\r\n * @param staticAuthorityOptions\r\n * @param logger\r\n * @returns\r\n */\r\nfunction getAliasesFromStaticSources(staticAuthorityOptions, logger) {\r\n    let staticAliases;\r\n    const canonicalAuthority = staticAuthorityOptions.canonicalAuthority;\r\n    if (canonicalAuthority) {\r\n        const authorityHost = new UrlString(canonicalAuthority).getUrlComponents().HostNameAndPort;\r\n        staticAliases =\r\n            getAliasesFromMetadata(authorityHost, staticAuthorityOptions.cloudDiscoveryMetadata?.metadata, AuthorityMetadataSource.CONFIG, logger) ||\r\n                getAliasesFromMetadata(authorityHost, InstanceDiscoveryMetadata.metadata, AuthorityMetadataSource.HARDCODED_VALUES, logger) ||\r\n                staticAuthorityOptions.knownAuthorities;\r\n    }\r\n    return staticAliases || [];\r\n}\r\n/**\r\n * Returns aliases for from the raw cloud discovery metadata passed in\r\n * @param authorityHost\r\n * @param rawCloudDiscoveryMetadata\r\n * @returns\r\n */\r\nfunction getAliasesFromMetadata(authorityHost, cloudDiscoveryMetadata, source, logger) {\r\n    logger?.trace(`getAliasesFromMetadata called with source: ${source}`);\r\n    if (authorityHost && cloudDiscoveryMetadata) {\r\n        const metadata = getCloudDiscoveryMetadataFromNetworkResponse(cloudDiscoveryMetadata, authorityHost);\r\n        if (metadata) {\r\n            logger?.trace(`getAliasesFromMetadata: found cloud discovery metadata in ${source}, returning aliases`);\r\n            return metadata.aliases;\r\n        }\r\n        else {\r\n            logger?.trace(`getAliasesFromMetadata: did not find cloud discovery metadata in ${source}`);\r\n        }\r\n    }\r\n    return null;\r\n}\r\n/**\r\n * Get cloud discovery metadata for common authorities\r\n */\r\nfunction getCloudDiscoveryMetadataFromHardcodedValues(authorityHost) {\r\n    const metadata = getCloudDiscoveryMetadataFromNetworkResponse(InstanceDiscoveryMetadata.metadata, authorityHost);\r\n    return metadata;\r\n}\r\n/**\r\n * Searches instance discovery network response for the entry that contains the host in the aliases list\r\n * @param response\r\n * @param authority\r\n */\r\nfunction getCloudDiscoveryMetadataFromNetworkResponse(response, authorityHost) {\r\n    for (let i = 0; i < response.length; i++) {\r\n        const metadata = response[i];\r\n        if (metadata.aliases.includes(authorityHost)) {\r\n            return metadata;\r\n        }\r\n    }\r\n    return null;\r\n}\n\nexport { EndpointMetadata, InstanceDiscoveryMetadata, InstanceDiscoveryMetadataAliases, getAliasesFromMetadata, getAliasesFromStaticSources, getCloudDiscoveryMetadataFromHardcodedValues, getCloudDiscoveryMetadataFromNetworkResponse, rawMetdataJSON };\n//# sourceMappingURL=AuthorityMetadata.mjs.map\n","/*! @azure/msal-common v15.12.0 2025-08-19 */\n'use strict';\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nconst cacheQuotaExceeded = \"cache_quota_exceeded\";\r\nconst cacheErrorUnknown = \"cache_error_unknown\";\n\nexport { cacheErrorUnknown, cacheQuotaExceeded };\n//# sourceMappingURL=CacheErrorCodes.mjs.map\n","/*! @azure/msal-common v15.12.0 2025-08-19 */\n'use strict';\nimport { AuthError } from './AuthError.mjs';\nimport { cacheErrorUnknown, cacheQuotaExceeded } from './CacheErrorCodes.mjs';\nimport * as CacheErrorCodes from './CacheErrorCodes.mjs';\nexport { CacheErrorCodes };\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nconst CacheErrorMessages = {\r\n    [cacheQuotaExceeded]: \"Exceeded cache storage capacity.\",\r\n    [cacheErrorUnknown]: \"Unexpected error occurred when using cache storage.\",\r\n};\r\n/**\r\n * Error thrown when there is an error with the cache\r\n */\r\nclass CacheError extends AuthError {\r\n    constructor(errorCode, errorMessage) {\r\n        const message = errorMessage ||\r\n            (CacheErrorMessages[errorCode]\r\n                ? CacheErrorMessages[errorCode]\r\n                : CacheErrorMessages[cacheErrorUnknown]);\r\n        super(`${errorCode}: ${message}`);\r\n        Object.setPrototypeOf(this, CacheError.prototype);\r\n        this.name = \"CacheError\";\r\n        this.errorCode = errorCode;\r\n        this.errorMessage = message;\r\n    }\r\n}\r\n/**\r\n * Helper function to wrap browser errors in a CacheError object\r\n * @param e\r\n * @returns\r\n */\r\nfunction createCacheError(e) {\r\n    if (!(e instanceof Error)) {\r\n        return new CacheError(cacheErrorUnknown);\r\n    }\r\n    if (e.name === \"QuotaExceededError\" ||\r\n        e.name === \"NS_ERROR_DOM_QUOTA_REACHED\" ||\r\n        e.message.includes(\"exceeded the quota\")) {\r\n        return new CacheError(cacheQuotaExceeded);\r\n    }\r\n    else {\r\n        return new CacheError(e.name, e.message);\r\n    }\r\n}\n\nexport { CacheError, CacheErrorMessages, createCacheError };\n//# sourceMappingURL=CacheError.mjs.map\n","/*! @azure/msal-common v15.12.0 2025-08-19 */\n'use strict';\nimport { CredentialType, AuthenticationScheme, THE_FAMILY_ID, APP_METADATA, AUTHORITY_METADATA_CONSTANTS } from '../utils/Constants.mjs';\nimport { ScopeSet } from '../request/ScopeSet.mjs';\nimport { createClientAuthError } from '../error/ClientAuthError.mjs';\nimport { updateAccountTenantProfileData } from '../account/AccountInfo.mjs';\nimport { extractTokenClaims } from '../account/AuthToken.mjs';\nimport { name, version } from '../packageMetadata.mjs';\nimport { getAliasesFromStaticSources } from '../authority/AuthorityMetadata.mjs';\nimport { createCacheError } from '../error/CacheError.mjs';\nimport { AuthError } from '../error/AuthError.mjs';\nimport { invalidCacheRecord, multipleMatchingAppMetadata, methodNotImplemented } from '../error/ClientAuthErrorCodes.mjs';\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * Interface class which implement cache storage functions used by MSAL to perform validity checks, and store tokens.\r\n * @internal\r\n */\r\nclass CacheManager {\r\n    constructor(clientId, cryptoImpl, logger, performanceClient, staticAuthorityOptions) {\r\n        this.clientId = clientId;\r\n        this.cryptoImpl = cryptoImpl;\r\n        this.commonLogger = logger.clone(name, version);\r\n        this.staticAuthorityOptions = staticAuthorityOptions;\r\n        this.performanceClient = performanceClient;\r\n    }\r\n    /**\r\n     * Returns all the accounts in the cache that match the optional filter. If no filter is provided, all accounts are returned.\r\n     * @param accountFilter - (Optional) filter to narrow down the accounts returned\r\n     * @returns Array of AccountInfo objects in cache\r\n     */\r\n    getAllAccounts(accountFilter, correlationId) {\r\n        return this.buildTenantProfiles(this.getAccountsFilteredBy(accountFilter, correlationId), correlationId, accountFilter);\r\n    }\r\n    /**\r\n     * Gets first tenanted AccountInfo object found based on provided filters\r\n     */\r\n    getAccountInfoFilteredBy(accountFilter, correlationId) {\r\n        if (Object.keys(accountFilter).length === 0 ||\r\n            Object.values(accountFilter).every((value) => !value)) {\r\n            this.commonLogger.warning(\"getAccountInfoFilteredBy: Account filter is empty or invalid, returning null\");\r\n            return null;\r\n        }\r\n        const allAccounts = this.getAllAccounts(accountFilter, correlationId);\r\n        if (allAccounts.length > 1) {\r\n            // If one or more accounts are found, prioritize accounts that have an ID token\r\n            const sortedAccounts = allAccounts.sort((account) => {\r\n                return account.idTokenClaims ? -1 : 1;\r\n            });\r\n            return sortedAccounts[0];\r\n        }\r\n        else if (allAccounts.length === 1) {\r\n            // If only one account is found, return it regardless of whether a matching ID token was found\r\n            return allAccounts[0];\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    }\r\n    /**\r\n     * Returns a single matching\r\n     * @param accountFilter\r\n     * @returns\r\n     */\r\n    getBaseAccountInfo(accountFilter, correlationId) {\r\n        const accountEntities = this.getAccountsFilteredBy(accountFilter, correlationId);\r\n        if (accountEntities.length > 0) {\r\n            return accountEntities[0].getAccountInfo();\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    }\r\n    /**\r\n     * Matches filtered account entities with cached ID tokens that match the tenant profile-specific account filters\r\n     * and builds the account info objects from the matching ID token's claims\r\n     * @param cachedAccounts\r\n     * @param accountFilter\r\n     * @returns Array of AccountInfo objects that match account and tenant profile filters\r\n     */\r\n    buildTenantProfiles(cachedAccounts, correlationId, accountFilter) {\r\n        return cachedAccounts.flatMap((accountEntity) => {\r\n            return this.getTenantProfilesFromAccountEntity(accountEntity, correlationId, accountFilter?.tenantId, accountFilter);\r\n        });\r\n    }\r\n    getTenantedAccountInfoByFilter(accountInfo, tokenKeys, tenantProfile, correlationId, tenantProfileFilter) {\r\n        let tenantedAccountInfo = null;\r\n        let idTokenClaims;\r\n        if (tenantProfileFilter) {\r\n            if (!this.tenantProfileMatchesFilter(tenantProfile, tenantProfileFilter)) {\r\n                return null;\r\n            }\r\n        }\r\n        const idToken = this.getIdToken(accountInfo, correlationId, tokenKeys, tenantProfile.tenantId);\r\n        if (idToken) {\r\n            idTokenClaims = extractTokenClaims(idToken.secret, this.cryptoImpl.base64Decode);\r\n            if (!this.idTokenClaimsMatchTenantProfileFilter(idTokenClaims, tenantProfileFilter)) {\r\n                // ID token sourced claims don't match so this tenant profile is not a match\r\n                return null;\r\n            }\r\n        }\r\n        // Expand tenant profile into account info based on matching tenant profile and if available matching ID token claims\r\n        tenantedAccountInfo = updateAccountTenantProfileData(accountInfo, tenantProfile, idTokenClaims, idToken?.secret);\r\n        return tenantedAccountInfo;\r\n    }\r\n    getTenantProfilesFromAccountEntity(accountEntity, correlationId, targetTenantId, tenantProfileFilter) {\r\n        const accountInfo = accountEntity.getAccountInfo();\r\n        let searchTenantProfiles = accountInfo.tenantProfiles || new Map();\r\n        const tokenKeys = this.getTokenKeys();\r\n        // If a tenant ID was provided, only return the tenant profile for that tenant ID if it exists\r\n        if (targetTenantId) {\r\n            const tenantProfile = searchTenantProfiles.get(targetTenantId);\r\n            if (tenantProfile) {\r\n                // Reduce search field to just this tenant profile\r\n                searchTenantProfiles = new Map([\r\n                    [targetTenantId, tenantProfile],\r\n                ]);\r\n            }\r\n            else {\r\n                // No tenant profile for search tenant ID, return empty array\r\n                return [];\r\n            }\r\n        }\r\n        const matchingTenantProfiles = [];\r\n        searchTenantProfiles.forEach((tenantProfile) => {\r\n            const tenantedAccountInfo = this.getTenantedAccountInfoByFilter(accountInfo, tokenKeys, tenantProfile, correlationId, tenantProfileFilter);\r\n            if (tenantedAccountInfo) {\r\n                matchingTenantProfiles.push(tenantedAccountInfo);\r\n            }\r\n        });\r\n        return matchingTenantProfiles;\r\n    }\r\n    tenantProfileMatchesFilter(tenantProfile, tenantProfileFilter) {\r\n        if (!!tenantProfileFilter.localAccountId &&\r\n            !this.matchLocalAccountIdFromTenantProfile(tenantProfile, tenantProfileFilter.localAccountId)) {\r\n            return false;\r\n        }\r\n        if (!!tenantProfileFilter.name &&\r\n            !(tenantProfile.name === tenantProfileFilter.name)) {\r\n            return false;\r\n        }\r\n        if (tenantProfileFilter.isHomeTenant !== undefined &&\r\n            !(tenantProfile.isHomeTenant === tenantProfileFilter.isHomeTenant)) {\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n    idTokenClaimsMatchTenantProfileFilter(idTokenClaims, tenantProfileFilter) {\r\n        // Tenant Profile filtering\r\n        if (tenantProfileFilter) {\r\n            if (!!tenantProfileFilter.localAccountId &&\r\n                !this.matchLocalAccountIdFromTokenClaims(idTokenClaims, tenantProfileFilter.localAccountId)) {\r\n                return false;\r\n            }\r\n            if (!!tenantProfileFilter.loginHint &&\r\n                !this.matchLoginHintFromTokenClaims(idTokenClaims, tenantProfileFilter.loginHint)) {\r\n                return false;\r\n            }\r\n            if (!!tenantProfileFilter.username &&\r\n                !this.matchUsername(idTokenClaims.preferred_username, tenantProfileFilter.username)) {\r\n                return false;\r\n            }\r\n            if (!!tenantProfileFilter.name &&\r\n                !this.matchName(idTokenClaims, tenantProfileFilter.name)) {\r\n                return false;\r\n            }\r\n            if (!!tenantProfileFilter.sid &&\r\n                !this.matchSid(idTokenClaims, tenantProfileFilter.sid)) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n    /**\r\n     * saves a cache record\r\n     * @param cacheRecord {CacheRecord}\r\n     * @param storeInCache {?StoreInCache}\r\n     * @param correlationId {?string} correlation id\r\n     */\r\n    async saveCacheRecord(cacheRecord, correlationId, storeInCache) {\r\n        if (!cacheRecord) {\r\n            throw createClientAuthError(invalidCacheRecord);\r\n        }\r\n        try {\r\n            if (!!cacheRecord.account) {\r\n                await this.setAccount(cacheRecord.account, correlationId);\r\n            }\r\n            if (!!cacheRecord.idToken && storeInCache?.idToken !== false) {\r\n                await this.setIdTokenCredential(cacheRecord.idToken, correlationId);\r\n            }\r\n            if (!!cacheRecord.accessToken &&\r\n                storeInCache?.accessToken !== false) {\r\n                await this.saveAccessToken(cacheRecord.accessToken, correlationId);\r\n            }\r\n            if (!!cacheRecord.refreshToken &&\r\n                storeInCache?.refreshToken !== false) {\r\n                await this.setRefreshTokenCredential(cacheRecord.refreshToken, correlationId);\r\n            }\r\n            if (!!cacheRecord.appMetadata) {\r\n                this.setAppMetadata(cacheRecord.appMetadata, correlationId);\r\n            }\r\n        }\r\n        catch (e) {\r\n            this.commonLogger?.error(`CacheManager.saveCacheRecord: failed`);\r\n            if (e instanceof AuthError) {\r\n                throw e;\r\n            }\r\n            else {\r\n                throw createCacheError(e);\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * saves access token credential\r\n     * @param credential\r\n     */\r\n    async saveAccessToken(credential, correlationId) {\r\n        const accessTokenFilter = {\r\n            clientId: credential.clientId,\r\n            credentialType: credential.credentialType,\r\n            environment: credential.environment,\r\n            homeAccountId: credential.homeAccountId,\r\n            realm: credential.realm,\r\n            tokenType: credential.tokenType,\r\n            requestedClaimsHash: credential.requestedClaimsHash,\r\n        };\r\n        const tokenKeys = this.getTokenKeys();\r\n        const currentScopes = ScopeSet.fromString(credential.target);\r\n        tokenKeys.accessToken.forEach((key) => {\r\n            if (!this.accessTokenKeyMatchesFilter(key, accessTokenFilter, false)) {\r\n                return;\r\n            }\r\n            const tokenEntity = this.getAccessTokenCredential(key, correlationId);\r\n            if (tokenEntity &&\r\n                this.credentialMatchesFilter(tokenEntity, accessTokenFilter)) {\r\n                const tokenScopeSet = ScopeSet.fromString(tokenEntity.target);\r\n                if (tokenScopeSet.intersectingScopeSets(currentScopes)) {\r\n                    this.removeAccessToken(key, correlationId);\r\n                }\r\n            }\r\n        });\r\n        await this.setAccessTokenCredential(credential, correlationId);\r\n    }\r\n    /**\r\n     * Retrieve account entities matching all provided tenant-agnostic filters; if no filter is set, get all account entities in the cache\r\n     * Not checking for casing as keys are all generated in lower case, remember to convert to lower case if object properties are compared\r\n     * @param accountFilter - An object containing Account properties to filter by\r\n     */\r\n    getAccountsFilteredBy(accountFilter, correlationId) {\r\n        const allAccountKeys = this.getAccountKeys();\r\n        const matchingAccounts = [];\r\n        allAccountKeys.forEach((cacheKey) => {\r\n            const entity = this.getAccount(cacheKey, correlationId);\r\n            // Match base account fields\r\n            if (!entity) {\r\n                return;\r\n            }\r\n            if (!!accountFilter.homeAccountId &&\r\n                !this.matchHomeAccountId(entity, accountFilter.homeAccountId)) {\r\n                return;\r\n            }\r\n            if (!!accountFilter.username &&\r\n                !this.matchUsername(entity.username, accountFilter.username)) {\r\n                return;\r\n            }\r\n            if (!!accountFilter.environment &&\r\n                !this.matchEnvironment(entity, accountFilter.environment)) {\r\n                return;\r\n            }\r\n            if (!!accountFilter.realm &&\r\n                !this.matchRealm(entity, accountFilter.realm)) {\r\n                return;\r\n            }\r\n            if (!!accountFilter.nativeAccountId &&\r\n                !this.matchNativeAccountId(entity, accountFilter.nativeAccountId)) {\r\n                return;\r\n            }\r\n            if (!!accountFilter.authorityType &&\r\n                !this.matchAuthorityType(entity, accountFilter.authorityType)) {\r\n                return;\r\n            }\r\n            // If at least one tenant profile matches the tenant profile filter, add the account to the list of matching accounts\r\n            const tenantProfileFilter = {\r\n                localAccountId: accountFilter?.localAccountId,\r\n                name: accountFilter?.name,\r\n            };\r\n            const matchingTenantProfiles = entity.tenantProfiles?.filter((tenantProfile) => {\r\n                return this.tenantProfileMatchesFilter(tenantProfile, tenantProfileFilter);\r\n            });\r\n            if (matchingTenantProfiles && matchingTenantProfiles.length === 0) {\r\n                // No tenant profile for this account matches filter, don't add to list of matching accounts\r\n                return;\r\n            }\r\n            matchingAccounts.push(entity);\r\n        });\r\n        return matchingAccounts;\r\n    }\r\n    /**\r\n     * Returns whether or not the given credential entity matches the filter\r\n     * @param entity\r\n     * @param filter\r\n     * @returns\r\n     */\r\n    credentialMatchesFilter(entity, filter) {\r\n        if (!!filter.clientId && !this.matchClientId(entity, filter.clientId)) {\r\n            return false;\r\n        }\r\n        if (!!filter.userAssertionHash &&\r\n            !this.matchUserAssertionHash(entity, filter.userAssertionHash)) {\r\n            return false;\r\n        }\r\n        /*\r\n         * homeAccountId can be undefined, and we want to filter out cached items that have a homeAccountId of \"\"\r\n         * because we don't want a client_credential request to return a cached token that has a homeAccountId\r\n         */\r\n        if (typeof filter.homeAccountId === \"string\" &&\r\n            !this.matchHomeAccountId(entity, filter.homeAccountId)) {\r\n            return false;\r\n        }\r\n        if (!!filter.environment &&\r\n            !this.matchEnvironment(entity, filter.environment)) {\r\n            return false;\r\n        }\r\n        if (!!filter.realm && !this.matchRealm(entity, filter.realm)) {\r\n            return false;\r\n        }\r\n        if (!!filter.credentialType &&\r\n            !this.matchCredentialType(entity, filter.credentialType)) {\r\n            return false;\r\n        }\r\n        if (!!filter.familyId && !this.matchFamilyId(entity, filter.familyId)) {\r\n            return false;\r\n        }\r\n        /*\r\n         * idTokens do not have \"target\", target specific refreshTokens do exist for some types of authentication\r\n         * Resource specific refresh tokens case will be added when the support is deemed necessary\r\n         */\r\n        if (!!filter.target && !this.matchTarget(entity, filter.target)) {\r\n            return false;\r\n        }\r\n        // If request OR cached entity has requested Claims Hash, check if they match\r\n        if (filter.requestedClaimsHash || entity.requestedClaimsHash) {\r\n            // Don't match if either is undefined or they are different\r\n            if (entity.requestedClaimsHash !== filter.requestedClaimsHash) {\r\n                return false;\r\n            }\r\n        }\r\n        // Access Token with Auth Scheme specific matching\r\n        if (entity.credentialType ===\r\n            CredentialType.ACCESS_TOKEN_WITH_AUTH_SCHEME) {\r\n            if (!!filter.tokenType &&\r\n                !this.matchTokenType(entity, filter.tokenType)) {\r\n                return false;\r\n            }\r\n            // KeyId (sshKid) in request must match cached SSH certificate keyId because SSH cert is bound to a specific key\r\n            if (filter.tokenType === AuthenticationScheme.SSH) {\r\n                if (filter.keyId && !this.matchKeyId(entity, filter.keyId)) {\r\n                    return false;\r\n                }\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n    /**\r\n     * retrieve appMetadata matching all provided filters; if no filter is set, get all appMetadata\r\n     * @param filter\r\n     */\r\n    getAppMetadataFilteredBy(filter) {\r\n        const allCacheKeys = this.getKeys();\r\n        const matchingAppMetadata = {};\r\n        allCacheKeys.forEach((cacheKey) => {\r\n            // don't parse any non-appMetadata type cache entities\r\n            if (!this.isAppMetadata(cacheKey)) {\r\n                return;\r\n            }\r\n            // Attempt retrieval\r\n            const entity = this.getAppMetadata(cacheKey);\r\n            if (!entity) {\r\n                return;\r\n            }\r\n            if (!!filter.environment &&\r\n                !this.matchEnvironment(entity, filter.environment)) {\r\n                return;\r\n            }\r\n            if (!!filter.clientId &&\r\n                !this.matchClientId(entity, filter.clientId)) {\r\n                return;\r\n            }\r\n            matchingAppMetadata[cacheKey] = entity;\r\n        });\r\n        return matchingAppMetadata;\r\n    }\r\n    /**\r\n     * retrieve authorityMetadata that contains a matching alias\r\n     * @param filter\r\n     */\r\n    getAuthorityMetadataByAlias(host) {\r\n        const allCacheKeys = this.getAuthorityMetadataKeys();\r\n        let matchedEntity = null;\r\n        allCacheKeys.forEach((cacheKey) => {\r\n            // don't parse any non-authorityMetadata type cache entities\r\n            if (!this.isAuthorityMetadata(cacheKey) ||\r\n                cacheKey.indexOf(this.clientId) === -1) {\r\n                return;\r\n            }\r\n            // Attempt retrieval\r\n            const entity = this.getAuthorityMetadata(cacheKey);\r\n            if (!entity) {\r\n                return;\r\n            }\r\n            if (entity.aliases.indexOf(host) === -1) {\r\n                return;\r\n            }\r\n            matchedEntity = entity;\r\n        });\r\n        return matchedEntity;\r\n    }\r\n    /**\r\n     * Removes all accounts and related tokens from cache.\r\n     */\r\n    removeAllAccounts(correlationId) {\r\n        const accounts = this.getAllAccounts({}, correlationId);\r\n        accounts.forEach((account) => {\r\n            this.removeAccount(account, correlationId);\r\n        });\r\n    }\r\n    /**\r\n     * Removes the account and related tokens for a given account key\r\n     * @param account\r\n     */\r\n    removeAccount(account, correlationId) {\r\n        this.removeAccountContext(account, correlationId);\r\n        const accountKeys = this.getAccountKeys();\r\n        const keyFilter = (key) => {\r\n            return (key.includes(account.homeAccountId) &&\r\n                key.includes(account.environment));\r\n        };\r\n        accountKeys.filter(keyFilter).forEach((key) => {\r\n            this.removeItem(key, correlationId);\r\n            this.performanceClient.incrementFields({ accountsRemoved: 1 }, correlationId);\r\n        });\r\n    }\r\n    /**\r\n     * Removes credentials associated with the provided account\r\n     * @param account\r\n     */\r\n    removeAccountContext(account, correlationId) {\r\n        const allTokenKeys = this.getTokenKeys();\r\n        const keyFilter = (key) => {\r\n            return (key.includes(account.homeAccountId) &&\r\n                key.includes(account.environment));\r\n        };\r\n        allTokenKeys.idToken.filter(keyFilter).forEach((key) => {\r\n            this.removeIdToken(key, correlationId);\r\n        });\r\n        allTokenKeys.accessToken.filter(keyFilter).forEach((key) => {\r\n            this.removeAccessToken(key, correlationId);\r\n        });\r\n        allTokenKeys.refreshToken.filter(keyFilter).forEach((key) => {\r\n            this.removeRefreshToken(key, correlationId);\r\n        });\r\n    }\r\n    /**\r\n     * Removes accessToken from the cache\r\n     * @param key\r\n     * @param correlationId\r\n     */\r\n    removeAccessToken(key, correlationId) {\r\n        const credential = this.getAccessTokenCredential(key, correlationId);\r\n        this.removeItem(key, correlationId);\r\n        this.performanceClient.incrementFields({ accessTokensRemoved: 1 }, correlationId);\r\n        if (!credential ||\r\n            credential.credentialType.toLowerCase() !==\r\n                CredentialType.ACCESS_TOKEN_WITH_AUTH_SCHEME.toLowerCase() ||\r\n            credential.tokenType !== AuthenticationScheme.POP) {\r\n            // If the credential is not a PoP token, we can return\r\n            return;\r\n        }\r\n        // Remove Token Binding Key from key store for PoP Tokens Credentials\r\n        const kid = credential.keyId;\r\n        if (kid) {\r\n            void this.cryptoImpl.removeTokenBindingKey(kid).catch(() => {\r\n                this.commonLogger.error(`Failed to remove token binding key ${kid}`, correlationId);\r\n                this.performanceClient?.incrementFields({ removeTokenBindingKeyFailure: 1 }, correlationId);\r\n            });\r\n        }\r\n    }\r\n    /**\r\n     * Removes all app metadata objects from cache.\r\n     */\r\n    removeAppMetadata(correlationId) {\r\n        const allCacheKeys = this.getKeys();\r\n        allCacheKeys.forEach((cacheKey) => {\r\n            if (this.isAppMetadata(cacheKey)) {\r\n                this.removeItem(cacheKey, correlationId);\r\n            }\r\n        });\r\n        return true;\r\n    }\r\n    /**\r\n     * Retrieve IdTokenEntity from cache\r\n     * @param account {AccountInfo}\r\n     * @param tokenKeys {?TokenKeys}\r\n     * @param targetRealm {?string}\r\n     * @param performanceClient {?IPerformanceClient}\r\n     * @param correlationId {?string}\r\n     */\r\n    getIdToken(account, correlationId, tokenKeys, targetRealm, performanceClient) {\r\n        this.commonLogger.trace(\"CacheManager - getIdToken called\");\r\n        const idTokenFilter = {\r\n            homeAccountId: account.homeAccountId,\r\n            environment: account.environment,\r\n            credentialType: CredentialType.ID_TOKEN,\r\n            clientId: this.clientId,\r\n            realm: targetRealm,\r\n        };\r\n        const idTokenMap = this.getIdTokensByFilter(idTokenFilter, correlationId, tokenKeys);\r\n        const numIdTokens = idTokenMap.size;\r\n        if (numIdTokens < 1) {\r\n            this.commonLogger.info(\"CacheManager:getIdToken - No token found\");\r\n            return null;\r\n        }\r\n        else if (numIdTokens > 1) {\r\n            let tokensToBeRemoved = idTokenMap;\r\n            // Multiple tenant profiles and no tenant specified, pick home account\r\n            if (!targetRealm) {\r\n                const homeIdTokenMap = new Map();\r\n                idTokenMap.forEach((idToken, key) => {\r\n                    if (idToken.realm === account.tenantId) {\r\n                        homeIdTokenMap.set(key, idToken);\r\n                    }\r\n                });\r\n                const numHomeIdTokens = homeIdTokenMap.size;\r\n                if (numHomeIdTokens < 1) {\r\n                    this.commonLogger.info(\"CacheManager:getIdToken - Multiple ID tokens found for account but none match account entity tenant id, returning first result\");\r\n                    return idTokenMap.values().next().value;\r\n                }\r\n                else if (numHomeIdTokens === 1) {\r\n                    this.commonLogger.info(\"CacheManager:getIdToken - Multiple ID tokens found for account, defaulting to home tenant profile\");\r\n                    return homeIdTokenMap.values().next().value;\r\n                }\r\n                else {\r\n                    // Multiple ID tokens for home tenant profile, remove all and return null\r\n                    tokensToBeRemoved = homeIdTokenMap;\r\n                }\r\n            }\r\n            // Multiple tokens for a single tenant profile, remove all and return null\r\n            this.commonLogger.info(\"CacheManager:getIdToken - Multiple matching ID tokens found, clearing them\");\r\n            tokensToBeRemoved.forEach((idToken, key) => {\r\n                this.removeIdToken(key, correlationId);\r\n            });\r\n            if (performanceClient && correlationId) {\r\n                performanceClient.addFields({ multiMatchedID: idTokenMap.size }, correlationId);\r\n            }\r\n            return null;\r\n        }\r\n        this.commonLogger.info(\"CacheManager:getIdToken - Returning ID token\");\r\n        return idTokenMap.values().next().value;\r\n    }\r\n    /**\r\n     * Gets all idTokens matching the given filter\r\n     * @param filter\r\n     * @returns\r\n     */\r\n    getIdTokensByFilter(filter, correlationId, tokenKeys) {\r\n        const idTokenKeys = (tokenKeys && tokenKeys.idToken) || this.getTokenKeys().idToken;\r\n        const idTokens = new Map();\r\n        idTokenKeys.forEach((key) => {\r\n            if (!this.idTokenKeyMatchesFilter(key, {\r\n                clientId: this.clientId,\r\n                ...filter,\r\n            })) {\r\n                return;\r\n            }\r\n            const idToken = this.getIdTokenCredential(key, correlationId);\r\n            if (idToken && this.credentialMatchesFilter(idToken, filter)) {\r\n                idTokens.set(key, idToken);\r\n            }\r\n        });\r\n        return idTokens;\r\n    }\r\n    /**\r\n     * Validate the cache key against filter before retrieving and parsing cache value\r\n     * @param key\r\n     * @param filter\r\n     * @returns\r\n     */\r\n    idTokenKeyMatchesFilter(inputKey, filter) {\r\n        const key = inputKey.toLowerCase();\r\n        if (filter.clientId &&\r\n            key.indexOf(filter.clientId.toLowerCase()) === -1) {\r\n            return false;\r\n        }\r\n        if (filter.homeAccountId &&\r\n            key.indexOf(filter.homeAccountId.toLowerCase()) === -1) {\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n    /**\r\n     * Removes idToken from the cache\r\n     * @param key\r\n     */\r\n    removeIdToken(key, correlationId) {\r\n        this.removeItem(key, correlationId);\r\n    }\r\n    /**\r\n     * Removes refresh token from the cache\r\n     * @param key\r\n     */\r\n    removeRefreshToken(key, correlationId) {\r\n        this.removeItem(key, correlationId);\r\n    }\r\n    /**\r\n     * Retrieve AccessTokenEntity from cache\r\n     * @param account {AccountInfo}\r\n     * @param request {BaseAuthRequest}\r\n     * @param correlationId {?string}\r\n     * @param tokenKeys {?TokenKeys}\r\n     * @param performanceClient {?IPerformanceClient}\r\n     */\r\n    getAccessToken(account, request, tokenKeys, targetRealm) {\r\n        const correlationId = request.correlationId;\r\n        this.commonLogger.trace(\"CacheManager - getAccessToken called\", correlationId);\r\n        const scopes = ScopeSet.createSearchScopes(request.scopes);\r\n        const authScheme = request.authenticationScheme || AuthenticationScheme.BEARER;\r\n        /*\r\n         * Distinguish between Bearer and PoP/SSH token cache types\r\n         * Cast to lowercase to handle \"bearer\" from ADFS\r\n         */\r\n        const credentialType = authScheme &&\r\n            authScheme.toLowerCase() !==\r\n                AuthenticationScheme.BEARER.toLowerCase()\r\n            ? CredentialType.ACCESS_TOKEN_WITH_AUTH_SCHEME\r\n            : CredentialType.ACCESS_TOKEN;\r\n        const accessTokenFilter = {\r\n            homeAccountId: account.homeAccountId,\r\n            environment: account.environment,\r\n            credentialType: credentialType,\r\n            clientId: this.clientId,\r\n            realm: targetRealm || account.tenantId,\r\n            target: scopes,\r\n            tokenType: authScheme,\r\n            keyId: request.sshKid,\r\n            requestedClaimsHash: request.requestedClaimsHash,\r\n        };\r\n        const accessTokenKeys = (tokenKeys && tokenKeys.accessToken) ||\r\n            this.getTokenKeys().accessToken;\r\n        const accessTokens = [];\r\n        accessTokenKeys.forEach((key) => {\r\n            // Validate key\r\n            if (this.accessTokenKeyMatchesFilter(key, accessTokenFilter, true)) {\r\n                const accessToken = this.getAccessTokenCredential(key, correlationId);\r\n                // Validate value\r\n                if (accessToken &&\r\n                    this.credentialMatchesFilter(accessToken, accessTokenFilter)) {\r\n                    accessTokens.push(accessToken);\r\n                }\r\n            }\r\n        });\r\n        const numAccessTokens = accessTokens.length;\r\n        if (numAccessTokens < 1) {\r\n            this.commonLogger.info(\"CacheManager:getAccessToken - No token found\", correlationId);\r\n            return null;\r\n        }\r\n        else if (numAccessTokens > 1) {\r\n            this.commonLogger.info(\"CacheManager:getAccessToken - Multiple access tokens found, clearing them\", correlationId);\r\n            accessTokens.forEach((accessToken) => {\r\n                this.removeAccessToken(this.generateCredentialKey(accessToken), correlationId);\r\n            });\r\n            this.performanceClient.addFields({ multiMatchedAT: accessTokens.length }, correlationId);\r\n            return null;\r\n        }\r\n        this.commonLogger.info(\"CacheManager:getAccessToken - Returning access token\", correlationId);\r\n        return accessTokens[0];\r\n    }\r\n    /**\r\n     * Validate the cache key against filter before retrieving and parsing cache value\r\n     * @param key\r\n     * @param filter\r\n     * @param keyMustContainAllScopes\r\n     * @returns\r\n     */\r\n    accessTokenKeyMatchesFilter(inputKey, filter, keyMustContainAllScopes) {\r\n        const key = inputKey.toLowerCase();\r\n        if (filter.clientId &&\r\n            key.indexOf(filter.clientId.toLowerCase()) === -1) {\r\n            return false;\r\n        }\r\n        if (filter.homeAccountId &&\r\n            key.indexOf(filter.homeAccountId.toLowerCase()) === -1) {\r\n            return false;\r\n        }\r\n        if (filter.realm && key.indexOf(filter.realm.toLowerCase()) === -1) {\r\n            return false;\r\n        }\r\n        if (filter.requestedClaimsHash &&\r\n            key.indexOf(filter.requestedClaimsHash.toLowerCase()) === -1) {\r\n            return false;\r\n        }\r\n        if (filter.target) {\r\n            const scopes = filter.target.asArray();\r\n            for (let i = 0; i < scopes.length; i++) {\r\n                if (keyMustContainAllScopes &&\r\n                    !key.includes(scopes[i].toLowerCase())) {\r\n                    // When performing a cache lookup a missing scope would be a cache miss\r\n                    return false;\r\n                }\r\n                else if (!keyMustContainAllScopes &&\r\n                    key.includes(scopes[i].toLowerCase())) {\r\n                    // When performing a cache write, any token with a subset of requested scopes should be replaced\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n    /**\r\n     * Gets all access tokens matching the filter\r\n     * @param filter\r\n     * @returns\r\n     */\r\n    getAccessTokensByFilter(filter, correlationId) {\r\n        const tokenKeys = this.getTokenKeys();\r\n        const accessTokens = [];\r\n        tokenKeys.accessToken.forEach((key) => {\r\n            if (!this.accessTokenKeyMatchesFilter(key, filter, true)) {\r\n                return;\r\n            }\r\n            const accessToken = this.getAccessTokenCredential(key, correlationId);\r\n            if (accessToken &&\r\n                this.credentialMatchesFilter(accessToken, filter)) {\r\n                accessTokens.push(accessToken);\r\n            }\r\n        });\r\n        return accessTokens;\r\n    }\r\n    /**\r\n     * Helper to retrieve the appropriate refresh token from cache\r\n     * @param account {AccountInfo}\r\n     * @param familyRT {boolean}\r\n     * @param correlationId {?string}\r\n     * @param tokenKeys {?TokenKeys}\r\n     * @param performanceClient {?IPerformanceClient}\r\n     */\r\n    getRefreshToken(account, familyRT, correlationId, tokenKeys, performanceClient) {\r\n        this.commonLogger.trace(\"CacheManager - getRefreshToken called\");\r\n        const id = familyRT ? THE_FAMILY_ID : undefined;\r\n        const refreshTokenFilter = {\r\n            homeAccountId: account.homeAccountId,\r\n            environment: account.environment,\r\n            credentialType: CredentialType.REFRESH_TOKEN,\r\n            clientId: this.clientId,\r\n            familyId: id,\r\n        };\r\n        const refreshTokenKeys = (tokenKeys && tokenKeys.refreshToken) ||\r\n            this.getTokenKeys().refreshToken;\r\n        const refreshTokens = [];\r\n        refreshTokenKeys.forEach((key) => {\r\n            // Validate key\r\n            if (this.refreshTokenKeyMatchesFilter(key, refreshTokenFilter)) {\r\n                const refreshToken = this.getRefreshTokenCredential(key, correlationId);\r\n                // Validate value\r\n                if (refreshToken &&\r\n                    this.credentialMatchesFilter(refreshToken, refreshTokenFilter)) {\r\n                    refreshTokens.push(refreshToken);\r\n                }\r\n            }\r\n        });\r\n        const numRefreshTokens = refreshTokens.length;\r\n        if (numRefreshTokens < 1) {\r\n            this.commonLogger.info(\"CacheManager:getRefreshToken - No refresh token found.\");\r\n            return null;\r\n        }\r\n        // address the else case after remove functions address environment aliases\r\n        if (numRefreshTokens > 1 && performanceClient && correlationId) {\r\n            performanceClient.addFields({ multiMatchedRT: numRefreshTokens }, correlationId);\r\n        }\r\n        this.commonLogger.info(\"CacheManager:getRefreshToken - returning refresh token\");\r\n        return refreshTokens[0];\r\n    }\r\n    /**\r\n     * Validate the cache key against filter before retrieving and parsing cache value\r\n     * @param key\r\n     * @param filter\r\n     */\r\n    refreshTokenKeyMatchesFilter(inputKey, filter) {\r\n        const key = inputKey.toLowerCase();\r\n        if (filter.familyId &&\r\n            key.indexOf(filter.familyId.toLowerCase()) === -1) {\r\n            return false;\r\n        }\r\n        // If familyId is used, clientId is not in the key\r\n        if (!filter.familyId &&\r\n            filter.clientId &&\r\n            key.indexOf(filter.clientId.toLowerCase()) === -1) {\r\n            return false;\r\n        }\r\n        if (filter.homeAccountId &&\r\n            key.indexOf(filter.homeAccountId.toLowerCase()) === -1) {\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n    /**\r\n     * Retrieve AppMetadataEntity from cache\r\n     */\r\n    readAppMetadataFromCache(environment) {\r\n        const appMetadataFilter = {\r\n            environment,\r\n            clientId: this.clientId,\r\n        };\r\n        const appMetadata = this.getAppMetadataFilteredBy(appMetadataFilter);\r\n        const appMetadataEntries = Object.keys(appMetadata).map((key) => appMetadata[key]);\r\n        const numAppMetadata = appMetadataEntries.length;\r\n        if (numAppMetadata < 1) {\r\n            return null;\r\n        }\r\n        else if (numAppMetadata > 1) {\r\n            throw createClientAuthError(multipleMatchingAppMetadata);\r\n        }\r\n        return appMetadataEntries[0];\r\n    }\r\n    /**\r\n     * Return the family_id value associated  with FOCI\r\n     * @param environment\r\n     * @param clientId\r\n     */\r\n    isAppMetadataFOCI(environment) {\r\n        const appMetadata = this.readAppMetadataFromCache(environment);\r\n        return !!(appMetadata && appMetadata.familyId === THE_FAMILY_ID);\r\n    }\r\n    /**\r\n     * helper to match account ids\r\n     * @param value\r\n     * @param homeAccountId\r\n     */\r\n    matchHomeAccountId(entity, homeAccountId) {\r\n        return !!(typeof entity.homeAccountId === \"string\" &&\r\n            homeAccountId === entity.homeAccountId);\r\n    }\r\n    /**\r\n     * helper to match account ids\r\n     * @param entity\r\n     * @param localAccountId\r\n     * @returns\r\n     */\r\n    matchLocalAccountIdFromTokenClaims(tokenClaims, localAccountId) {\r\n        const idTokenLocalAccountId = tokenClaims.oid || tokenClaims.sub;\r\n        return localAccountId === idTokenLocalAccountId;\r\n    }\r\n    matchLocalAccountIdFromTenantProfile(tenantProfile, localAccountId) {\r\n        return tenantProfile.localAccountId === localAccountId;\r\n    }\r\n    /**\r\n     * helper to match names\r\n     * @param entity\r\n     * @param name\r\n     * @returns true if the downcased name properties are present and match in the filter and the entity\r\n     */\r\n    matchName(claims, name) {\r\n        return !!(name.toLowerCase() === claims.name?.toLowerCase());\r\n    }\r\n    /**\r\n     * helper to match usernames\r\n     * @param entity\r\n     * @param username\r\n     * @returns\r\n     */\r\n    matchUsername(cachedUsername, filterUsername) {\r\n        return !!(cachedUsername &&\r\n            typeof cachedUsername === \"string\" &&\r\n            filterUsername?.toLowerCase() === cachedUsername.toLowerCase());\r\n    }\r\n    /**\r\n     * helper to match assertion\r\n     * @param value\r\n     * @param oboAssertion\r\n     */\r\n    matchUserAssertionHash(entity, userAssertionHash) {\r\n        return !!(entity.userAssertionHash &&\r\n            userAssertionHash === entity.userAssertionHash);\r\n    }\r\n    /**\r\n     * helper to match environment\r\n     * @param value\r\n     * @param environment\r\n     */\r\n    matchEnvironment(entity, environment) {\r\n        // Check static authority options first for cases where authority metadata has not been resolved and cached yet\r\n        if (this.staticAuthorityOptions) {\r\n            const staticAliases = getAliasesFromStaticSources(this.staticAuthorityOptions, this.commonLogger);\r\n            if (staticAliases.includes(environment) &&\r\n                staticAliases.includes(entity.environment)) {\r\n                return true;\r\n            }\r\n        }\r\n        // Query metadata cache if no static authority configuration has aliases that match enviroment\r\n        const cloudMetadata = this.getAuthorityMetadataByAlias(environment);\r\n        if (cloudMetadata &&\r\n            cloudMetadata.aliases.indexOf(entity.environment) > -1) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    /**\r\n     * helper to match credential type\r\n     * @param entity\r\n     * @param credentialType\r\n     */\r\n    matchCredentialType(entity, credentialType) {\r\n        return (entity.credentialType &&\r\n            credentialType.toLowerCase() === entity.credentialType.toLowerCase());\r\n    }\r\n    /**\r\n     * helper to match client ids\r\n     * @param entity\r\n     * @param clientId\r\n     */\r\n    matchClientId(entity, clientId) {\r\n        return !!(entity.clientId && clientId === entity.clientId);\r\n    }\r\n    /**\r\n     * helper to match family ids\r\n     * @param entity\r\n     * @param familyId\r\n     */\r\n    matchFamilyId(entity, familyId) {\r\n        return !!(entity.familyId && familyId === entity.familyId);\r\n    }\r\n    /**\r\n     * helper to match realm\r\n     * @param entity\r\n     * @param realm\r\n     */\r\n    matchRealm(entity, realm) {\r\n        return !!(entity.realm?.toLowerCase() === realm.toLowerCase());\r\n    }\r\n    /**\r\n     * helper to match nativeAccountId\r\n     * @param entity\r\n     * @param nativeAccountId\r\n     * @returns boolean indicating the match result\r\n     */\r\n    matchNativeAccountId(entity, nativeAccountId) {\r\n        return !!(entity.nativeAccountId && nativeAccountId === entity.nativeAccountId);\r\n    }\r\n    /**\r\n     * helper to match loginHint which can be either:\r\n     * 1. login_hint ID token claim\r\n     * 2. username in cached account object\r\n     * 3. upn in ID token claims\r\n     * @param entity\r\n     * @param loginHint\r\n     * @returns\r\n     */\r\n    matchLoginHintFromTokenClaims(tokenClaims, loginHint) {\r\n        if (tokenClaims.login_hint === loginHint) {\r\n            return true;\r\n        }\r\n        if (tokenClaims.preferred_username === loginHint) {\r\n            return true;\r\n        }\r\n        if (tokenClaims.upn === loginHint) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    /**\r\n     * Helper to match sid\r\n     * @param entity\r\n     * @param sid\r\n     * @returns true if the sid claim is present and matches the filter\r\n     */\r\n    matchSid(idTokenClaims, sid) {\r\n        return idTokenClaims.sid === sid;\r\n    }\r\n    matchAuthorityType(entity, authorityType) {\r\n        return !!(entity.authorityType &&\r\n            authorityType.toLowerCase() === entity.authorityType.toLowerCase());\r\n    }\r\n    /**\r\n     * Returns true if the target scopes are a subset of the current entity's scopes, false otherwise.\r\n     * @param entity\r\n     * @param target\r\n     */\r\n    matchTarget(entity, target) {\r\n        const isNotAccessTokenCredential = entity.credentialType !== CredentialType.ACCESS_TOKEN &&\r\n            entity.credentialType !==\r\n                CredentialType.ACCESS_TOKEN_WITH_AUTH_SCHEME;\r\n        if (isNotAccessTokenCredential || !entity.target) {\r\n            return false;\r\n        }\r\n        const entityScopeSet = ScopeSet.fromString(entity.target);\r\n        return entityScopeSet.containsScopeSet(target);\r\n    }\r\n    /**\r\n     * Returns true if the credential's tokenType or Authentication Scheme matches the one in the request, false otherwise\r\n     * @param entity\r\n     * @param tokenType\r\n     */\r\n    matchTokenType(entity, tokenType) {\r\n        return !!(entity.tokenType && entity.tokenType === tokenType);\r\n    }\r\n    /**\r\n     * Returns true if the credential's keyId matches the one in the request, false otherwise\r\n     * @param entity\r\n     * @param keyId\r\n     */\r\n    matchKeyId(entity, keyId) {\r\n        return !!(entity.keyId && entity.keyId === keyId);\r\n    }\r\n    /**\r\n     * returns if a given cache entity is of the type appmetadata\r\n     * @param key\r\n     */\r\n    isAppMetadata(key) {\r\n        return key.indexOf(APP_METADATA) !== -1;\r\n    }\r\n    /**\r\n     * returns if a given cache entity is of the type authoritymetadata\r\n     * @param key\r\n     */\r\n    isAuthorityMetadata(key) {\r\n        return key.indexOf(AUTHORITY_METADATA_CONSTANTS.CACHE_KEY) !== -1;\r\n    }\r\n    /**\r\n     * returns cache key used for cloud instance metadata\r\n     */\r\n    generateAuthorityMetadataCacheKey(authority) {\r\n        return `${AUTHORITY_METADATA_CONSTANTS.CACHE_KEY}-${this.clientId}-${authority}`;\r\n    }\r\n    /**\r\n     * Helper to convert serialized data to object\r\n     * @param obj\r\n     * @param json\r\n     */\r\n    static toObject(obj, json) {\r\n        for (const propertyName in json) {\r\n            obj[propertyName] = json[propertyName];\r\n        }\r\n        return obj;\r\n    }\r\n}\r\n/** @internal */\r\nclass DefaultStorageClass extends CacheManager {\r\n    async setAccount() {\r\n        throw createClientAuthError(methodNotImplemented);\r\n    }\r\n    getAccount() {\r\n        throw createClientAuthError(methodNotImplemented);\r\n    }\r\n    async setIdTokenCredential() {\r\n        throw createClientAuthError(methodNotImplemented);\r\n    }\r\n    getIdTokenCredential() {\r\n        throw createClientAuthError(methodNotImplemented);\r\n    }\r\n    async setAccessTokenCredential() {\r\n        throw createClientAuthError(methodNotImplemented);\r\n    }\r\n    getAccessTokenCredential() {\r\n        throw createClientAuthError(methodNotImplemented);\r\n    }\r\n    async setRefreshTokenCredential() {\r\n        throw createClientAuthError(methodNotImplemented);\r\n    }\r\n    getRefreshTokenCredential() {\r\n        throw createClientAuthError(methodNotImplemented);\r\n    }\r\n    setAppMetadata() {\r\n        throw createClientAuthError(methodNotImplemented);\r\n    }\r\n    getAppMetadata() {\r\n        throw createClientAuthError(methodNotImplemented);\r\n    }\r\n    setServerTelemetry() {\r\n        throw createClientAuthError(methodNotImplemented);\r\n    }\r\n    getServerTelemetry() {\r\n        throw createClientAuthError(methodNotImplemented);\r\n    }\r\n    setAuthorityMetadata() {\r\n        throw createClientAuthError(methodNotImplemented);\r\n    }\r\n    getAuthorityMetadata() {\r\n        throw createClientAuthError(methodNotImplemented);\r\n    }\r\n    getAuthorityMetadataKeys() {\r\n        throw createClientAuthError(methodNotImplemented);\r\n    }\r\n    setThrottlingCache() {\r\n        throw createClientAuthError(methodNotImplemented);\r\n    }\r\n    getThrottlingCache() {\r\n        throw createClientAuthError(methodNotImplemented);\r\n    }\r\n    removeItem() {\r\n        throw createClientAuthError(methodNotImplemented);\r\n    }\r\n    getKeys() {\r\n        throw createClientAuthError(methodNotImplemented);\r\n    }\r\n    getAccountKeys() {\r\n        throw createClientAuthError(methodNotImplemented);\r\n    }\r\n    getTokenKeys() {\r\n        throw createClientAuthError(methodNotImplemented);\r\n    }\r\n    generateCredentialKey() {\r\n        throw createClientAuthError(methodNotImplemented);\r\n    }\r\n    generateAccountKey() {\r\n        throw createClientAuthError(methodNotImplemented);\r\n    }\r\n}\n\nexport { CacheManager, DefaultStorageClass };\n//# sourceMappingURL=CacheManager.mjs.map\n","/*! @azure/msal-common v15.12.0 2025-08-19 */\n'use strict';\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * Protocol modes supported by MSAL.\r\n */\r\nconst ProtocolMode = {\r\n    /**\r\n     * Auth Code + PKCE with Entra ID (formerly AAD) specific optimizations and features\r\n     */\r\n    AAD: \"AAD\",\r\n    /**\r\n     * Auth Code + PKCE without Entra ID specific optimizations and features. For use only with non-Microsoft owned authorities.\r\n     * Support is limited for this mode.\r\n     */\r\n    OIDC: \"OIDC\",\r\n    /**\r\n     * Encrypted Authorize Response (EAR) with Entra ID specific optimizations and features\r\n     */\r\n    EAR: \"EAR\",\r\n};\n\nexport { ProtocolMode };\n//# sourceMappingURL=ProtocolMode.mjs.map\n","/*! @azure/msal-common v15.12.0 2025-08-19 */\n'use strict';\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * Enumeration of operations that are instrumented by have their performance measured by the PerformanceClient.\r\n *\r\n * @export\r\n * @enum {number}\r\n */\r\nconst PerformanceEvents = {\r\n    /**\r\n     * acquireTokenByCode API (msal-browser and msal-node).\r\n     * Used to acquire tokens by trading an authorization code against the token endpoint.\r\n     */\r\n    AcquireTokenByCode: \"acquireTokenByCode\",\r\n    /**\r\n     * acquireTokenByRefreshToken API (msal-browser and msal-node).\r\n     * Used to renew an access token using a refresh token against the token endpoint.\r\n     */\r\n    AcquireTokenByRefreshToken: \"acquireTokenByRefreshToken\",\r\n    /**\r\n     * acquireTokenSilent API (msal-browser and msal-node).\r\n     * Used to silently acquire a new access token (from the cache or the network).\r\n     */\r\n    AcquireTokenSilent: \"acquireTokenSilent\",\r\n    /**\r\n     * acquireTokenSilentAsync (msal-browser).\r\n     * Internal API for acquireTokenSilent.\r\n     */\r\n    AcquireTokenSilentAsync: \"acquireTokenSilentAsync\",\r\n    /**\r\n     * acquireTokenPopup (msal-browser).\r\n     * Used to acquire a new access token interactively through pop ups\r\n     */\r\n    AcquireTokenPopup: \"acquireTokenPopup\",\r\n    /**\r\n     * acquireTokenPreRedirect (msal-browser).\r\n     * First part of the redirect flow.\r\n     * Used to acquire a new access token interactively through redirects.\r\n     */\r\n    AcquireTokenPreRedirect: \"acquireTokenPreRedirect\",\r\n    /**\r\n     * acquireTokenRedirect (msal-browser).\r\n     * Second part of the redirect flow.\r\n     * Used to acquire a new access token interactively through redirects.\r\n     */\r\n    AcquireTokenRedirect: \"acquireTokenRedirect\",\r\n    /**\r\n     * getPublicKeyThumbprint API in CryptoOpts class (msal-browser).\r\n     * Used to generate a public/private keypair and generate a public key thumbprint for pop requests.\r\n     */\r\n    CryptoOptsGetPublicKeyThumbprint: \"cryptoOptsGetPublicKeyThumbprint\",\r\n    /**\r\n     * signJwt API in CryptoOpts class (msal-browser).\r\n     * Used to signed a pop token.\r\n     */\r\n    CryptoOptsSignJwt: \"cryptoOptsSignJwt\",\r\n    /**\r\n     * acquireToken API in the SilentCacheClient class (msal-browser).\r\n     * Used to read access tokens from the cache.\r\n     */\r\n    SilentCacheClientAcquireToken: \"silentCacheClientAcquireToken\",\r\n    /**\r\n     * acquireToken API in the SilentIframeClient class (msal-browser).\r\n     * Used to acquire a new set of tokens from the authorize endpoint in a hidden iframe.\r\n     */\r\n    SilentIframeClientAcquireToken: \"silentIframeClientAcquireToken\",\r\n    AwaitConcurrentIframe: \"awaitConcurrentIframe\",\r\n    /**\r\n     * acquireToken API in SilentRereshClient (msal-browser).\r\n     * Used to acquire a new set of tokens from the token endpoint using a refresh token.\r\n     */\r\n    SilentRefreshClientAcquireToken: \"silentRefreshClientAcquireToken\",\r\n    /**\r\n     * ssoSilent API (msal-browser).\r\n     * Used to silently acquire an authorization code and set of tokens using a hidden iframe.\r\n     */\r\n    SsoSilent: \"ssoSilent\",\r\n    /**\r\n     * getDiscoveredAuthority API in StandardInteractionClient class (msal-browser).\r\n     * Used to load authority metadata for a request.\r\n     */\r\n    StandardInteractionClientGetDiscoveredAuthority: \"standardInteractionClientGetDiscoveredAuthority\",\r\n    /**\r\n     * acquireToken APIs in msal-browser.\r\n     * Used to make an /authorize endpoint call with native brokering enabled.\r\n     */\r\n    FetchAccountIdWithNativeBroker: \"fetchAccountIdWithNativeBroker\",\r\n    /**\r\n     * acquireToken API in NativeInteractionClient class (msal-browser).\r\n     * Used to acquire a token from Native component when native brokering is enabled.\r\n     */\r\n    NativeInteractionClientAcquireToken: \"nativeInteractionClientAcquireToken\",\r\n    /**\r\n     * Time spent creating default headers for requests to token endpoint\r\n     */\r\n    BaseClientCreateTokenRequestHeaders: \"baseClientCreateTokenRequestHeaders\",\r\n    /**\r\n     * Time spent sending/waiting for the response of a request to the token endpoint\r\n     */\r\n    NetworkClientSendPostRequestAsync: \"networkClientSendPostRequestAsync\",\r\n    RefreshTokenClientExecutePostToTokenEndpoint: \"refreshTokenClientExecutePostToTokenEndpoint\",\r\n    AuthorizationCodeClientExecutePostToTokenEndpoint: \"authorizationCodeClientExecutePostToTokenEndpoint\",\r\n    /**\r\n     * Used to measure the time taken for completing embedded-broker handshake (PW-Broker).\r\n     */\r\n    BrokerHandhshake: \"brokerHandshake\",\r\n    /**\r\n     * acquireTokenByRefreshToken API in BrokerClientApplication (PW-Broker) .\r\n     */\r\n    AcquireTokenByRefreshTokenInBroker: \"acquireTokenByRefreshTokenInBroker\",\r\n    /**\r\n     * Time taken for token acquisition by broker\r\n     */\r\n    AcquireTokenByBroker: \"acquireTokenByBroker\",\r\n    /**\r\n     * Time spent on the network for refresh token acquisition\r\n     */\r\n    RefreshTokenClientExecuteTokenRequest: \"refreshTokenClientExecuteTokenRequest\",\r\n    /**\r\n     * Time taken for acquiring refresh token , records RT size\r\n     */\r\n    RefreshTokenClientAcquireToken: \"refreshTokenClientAcquireToken\",\r\n    /**\r\n     * Time taken for acquiring cached refresh token\r\n     */\r\n    RefreshTokenClientAcquireTokenWithCachedRefreshToken: \"refreshTokenClientAcquireTokenWithCachedRefreshToken\",\r\n    /**\r\n     * acquireTokenByRefreshToken API in RefreshTokenClient (msal-common).\r\n     */\r\n    RefreshTokenClientAcquireTokenByRefreshToken: \"refreshTokenClientAcquireTokenByRefreshToken\",\r\n    /**\r\n     * Helper function to create token request body in RefreshTokenClient (msal-common).\r\n     */\r\n    RefreshTokenClientCreateTokenRequestBody: \"refreshTokenClientCreateTokenRequestBody\",\r\n    /**\r\n     * acquireTokenFromCache (msal-browser).\r\n     * Internal API for acquiring token from cache\r\n     */\r\n    AcquireTokenFromCache: \"acquireTokenFromCache\",\r\n    SilentFlowClientAcquireCachedToken: \"silentFlowClientAcquireCachedToken\",\r\n    SilentFlowClientGenerateResultFromCacheRecord: \"silentFlowClientGenerateResultFromCacheRecord\",\r\n    /**\r\n     * acquireTokenBySilentIframe (msal-browser).\r\n     * Internal API for acquiring token by silent Iframe\r\n     */\r\n    AcquireTokenBySilentIframe: \"acquireTokenBySilentIframe\",\r\n    /**\r\n     * Internal API for initializing base request in BaseInteractionClient (msal-browser)\r\n     */\r\n    InitializeBaseRequest: \"initializeBaseRequest\",\r\n    /**\r\n     * Internal API for initializing silent request in SilentCacheClient (msal-browser)\r\n     */\r\n    InitializeSilentRequest: \"initializeSilentRequest\",\r\n    InitializeClientApplication: \"initializeClientApplication\",\r\n    InitializeCache: \"initializeCache\",\r\n    /**\r\n     * Helper function in SilentIframeClient class (msal-browser).\r\n     */\r\n    SilentIframeClientTokenHelper: \"silentIframeClientTokenHelper\",\r\n    /**\r\n     * SilentHandler\r\n     */\r\n    SilentHandlerInitiateAuthRequest: \"silentHandlerInitiateAuthRequest\",\r\n    SilentHandlerMonitorIframeForHash: \"silentHandlerMonitorIframeForHash\",\r\n    SilentHandlerLoadFrame: \"silentHandlerLoadFrame\",\r\n    SilentHandlerLoadFrameSync: \"silentHandlerLoadFrameSync\",\r\n    /**\r\n     * Helper functions in StandardInteractionClient class (msal-browser)\r\n     */\r\n    StandardInteractionClientCreateAuthCodeClient: \"standardInteractionClientCreateAuthCodeClient\",\r\n    StandardInteractionClientGetClientConfiguration: \"standardInteractionClientGetClientConfiguration\",\r\n    StandardInteractionClientInitializeAuthorizationRequest: \"standardInteractionClientInitializeAuthorizationRequest\",\r\n    /**\r\n     * getAuthCodeUrl API (msal-browser and msal-node).\r\n     */\r\n    GetAuthCodeUrl: \"getAuthCodeUrl\",\r\n    GetStandardParams: \"getStandardParams\",\r\n    /**\r\n     * Functions from InteractionHandler (msal-browser)\r\n     */\r\n    HandleCodeResponseFromServer: \"handleCodeResponseFromServer\",\r\n    HandleCodeResponse: \"handleCodeResponse\",\r\n    HandleResponseEar: \"handleResponseEar\",\r\n    HandleResponsePlatformBroker: \"handleResponsePlatformBroker\",\r\n    HandleResponseCode: \"handleResponseCode\",\r\n    UpdateTokenEndpointAuthority: \"updateTokenEndpointAuthority\",\r\n    /**\r\n     * APIs in Authorization Code Client (msal-common)\r\n     */\r\n    AuthClientAcquireToken: \"authClientAcquireToken\",\r\n    AuthClientExecuteTokenRequest: \"authClientExecuteTokenRequest\",\r\n    AuthClientCreateTokenRequestBody: \"authClientCreateTokenRequestBody\",\r\n    /**\r\n     * Generate functions in PopTokenGenerator (msal-common)\r\n     */\r\n    PopTokenGenerateCnf: \"popTokenGenerateCnf\",\r\n    PopTokenGenerateKid: \"popTokenGenerateKid\",\r\n    /**\r\n     * handleServerTokenResponse API in ResponseHandler (msal-common)\r\n     */\r\n    HandleServerTokenResponse: \"handleServerTokenResponse\",\r\n    DeserializeResponse: \"deserializeResponse\",\r\n    /**\r\n     * Authority functions\r\n     */\r\n    AuthorityFactoryCreateDiscoveredInstance: \"authorityFactoryCreateDiscoveredInstance\",\r\n    AuthorityResolveEndpointsAsync: \"authorityResolveEndpointsAsync\",\r\n    AuthorityResolveEndpointsFromLocalSources: \"authorityResolveEndpointsFromLocalSources\",\r\n    AuthorityGetCloudDiscoveryMetadataFromNetwork: \"authorityGetCloudDiscoveryMetadataFromNetwork\",\r\n    AuthorityUpdateCloudDiscoveryMetadata: \"authorityUpdateCloudDiscoveryMetadata\",\r\n    AuthorityGetEndpointMetadataFromNetwork: \"authorityGetEndpointMetadataFromNetwork\",\r\n    AuthorityUpdateEndpointMetadata: \"authorityUpdateEndpointMetadata\",\r\n    AuthorityUpdateMetadataWithRegionalInformation: \"authorityUpdateMetadataWithRegionalInformation\",\r\n    /**\r\n     * Region Discovery functions\r\n     */\r\n    RegionDiscoveryDetectRegion: \"regionDiscoveryDetectRegion\",\r\n    RegionDiscoveryGetRegionFromIMDS: \"regionDiscoveryGetRegionFromIMDS\",\r\n    RegionDiscoveryGetCurrentVersion: \"regionDiscoveryGetCurrentVersion\",\r\n    AcquireTokenByCodeAsync: \"acquireTokenByCodeAsync\",\r\n    GetEndpointMetadataFromNetwork: \"getEndpointMetadataFromNetwork\",\r\n    GetCloudDiscoveryMetadataFromNetworkMeasurement: \"getCloudDiscoveryMetadataFromNetworkMeasurement\",\r\n    HandleRedirectPromiseMeasurement: \"handleRedirectPromise\",\r\n    HandleNativeRedirectPromiseMeasurement: \"handleNativeRedirectPromise\",\r\n    UpdateCloudDiscoveryMetadataMeasurement: \"updateCloudDiscoveryMetadataMeasurement\",\r\n    UsernamePasswordClientAcquireToken: \"usernamePasswordClientAcquireToken\",\r\n    NativeMessageHandlerHandshake: \"nativeMessageHandlerHandshake\",\r\n    NativeGenerateAuthResult: \"nativeGenerateAuthResult\",\r\n    RemoveHiddenIframe: \"removeHiddenIframe\",\r\n    /**\r\n     * Cache operations\r\n     */\r\n    ClearTokensAndKeysWithClaims: \"clearTokensAndKeysWithClaims\",\r\n    CacheManagerGetRefreshToken: \"cacheManagerGetRefreshToken\",\r\n    ImportExistingCache: \"importExistingCache\",\r\n    SetUserData: \"setUserData\",\r\n    LocalStorageUpdated: \"localStorageUpdated\",\r\n    /**\r\n     * Crypto Operations\r\n     */\r\n    GeneratePkceCodes: \"generatePkceCodes\",\r\n    GenerateCodeVerifier: \"generateCodeVerifier\",\r\n    GenerateCodeChallengeFromVerifier: \"generateCodeChallengeFromVerifier\",\r\n    Sha256Digest: \"sha256Digest\",\r\n    GetRandomValues: \"getRandomValues\",\r\n    GenerateHKDF: \"generateHKDF\",\r\n    GenerateBaseKey: \"generateBaseKey\",\r\n    Base64Decode: \"base64Decode\",\r\n    UrlEncodeArr: \"urlEncodeArr\",\r\n    Encrypt: \"encrypt\",\r\n    Decrypt: \"decrypt\",\r\n    GenerateEarKey: \"generateEarKey\",\r\n    DecryptEarResponse: \"decryptEarResponse\",\r\n};\r\nconst PerformanceEventAbbreviations = new Map([\r\n    [PerformanceEvents.AcquireTokenByCode, \"ATByCode\"],\r\n    [PerformanceEvents.AcquireTokenByRefreshToken, \"ATByRT\"],\r\n    [PerformanceEvents.AcquireTokenSilent, \"ATS\"],\r\n    [PerformanceEvents.AcquireTokenSilentAsync, \"ATSAsync\"],\r\n    [PerformanceEvents.AcquireTokenPopup, \"ATPopup\"],\r\n    [PerformanceEvents.AcquireTokenRedirect, \"ATRedirect\"],\r\n    [\r\n        PerformanceEvents.CryptoOptsGetPublicKeyThumbprint,\r\n        \"CryptoGetPKThumb\",\r\n    ],\r\n    [PerformanceEvents.CryptoOptsSignJwt, \"CryptoSignJwt\"],\r\n    [PerformanceEvents.SilentCacheClientAcquireToken, \"SltCacheClientAT\"],\r\n    [PerformanceEvents.SilentIframeClientAcquireToken, \"SltIframeClientAT\"],\r\n    [PerformanceEvents.SilentRefreshClientAcquireToken, \"SltRClientAT\"],\r\n    [PerformanceEvents.SsoSilent, \"SsoSlt\"],\r\n    [\r\n        PerformanceEvents.StandardInteractionClientGetDiscoveredAuthority,\r\n        \"StdIntClientGetDiscAuth\",\r\n    ],\r\n    [\r\n        PerformanceEvents.FetchAccountIdWithNativeBroker,\r\n        \"FetchAccIdWithNtvBroker\",\r\n    ],\r\n    [\r\n        PerformanceEvents.NativeInteractionClientAcquireToken,\r\n        \"NtvIntClientAT\",\r\n    ],\r\n    [\r\n        PerformanceEvents.BaseClientCreateTokenRequestHeaders,\r\n        \"BaseClientCreateTReqHead\",\r\n    ],\r\n    [\r\n        PerformanceEvents.NetworkClientSendPostRequestAsync,\r\n        \"NetClientSendPost\",\r\n    ],\r\n    [\r\n        PerformanceEvents.RefreshTokenClientExecutePostToTokenEndpoint,\r\n        \"RTClientExecPost\",\r\n    ],\r\n    [\r\n        PerformanceEvents.AuthorizationCodeClientExecutePostToTokenEndpoint,\r\n        \"AuthCodeClientExecPost\",\r\n    ],\r\n    [PerformanceEvents.BrokerHandhshake, \"BrokerHandshake\"],\r\n    [\r\n        PerformanceEvents.AcquireTokenByRefreshTokenInBroker,\r\n        \"ATByRTInBroker\",\r\n    ],\r\n    [PerformanceEvents.AcquireTokenByBroker, \"ATByBroker\"],\r\n    [\r\n        PerformanceEvents.RefreshTokenClientExecuteTokenRequest,\r\n        \"RTClientExecTReq\",\r\n    ],\r\n    [PerformanceEvents.RefreshTokenClientAcquireToken, \"RTClientAT\"],\r\n    [\r\n        PerformanceEvents.RefreshTokenClientAcquireTokenWithCachedRefreshToken,\r\n        \"RTClientATWithCachedRT\",\r\n    ],\r\n    [\r\n        PerformanceEvents.RefreshTokenClientAcquireTokenByRefreshToken,\r\n        \"RTClientATByRT\",\r\n    ],\r\n    [\r\n        PerformanceEvents.RefreshTokenClientCreateTokenRequestBody,\r\n        \"RTClientCreateTReqBody\",\r\n    ],\r\n    [PerformanceEvents.AcquireTokenFromCache, \"ATFromCache\"],\r\n    [\r\n        PerformanceEvents.SilentFlowClientAcquireCachedToken,\r\n        \"SltFlowClientATCached\",\r\n    ],\r\n    [\r\n        PerformanceEvents.SilentFlowClientGenerateResultFromCacheRecord,\r\n        \"SltFlowClientGenResFromCache\",\r\n    ],\r\n    [PerformanceEvents.AcquireTokenBySilentIframe, \"ATBySltIframe\"],\r\n    [PerformanceEvents.InitializeBaseRequest, \"InitBaseReq\"],\r\n    [PerformanceEvents.InitializeSilentRequest, \"InitSltReq\"],\r\n    [\r\n        PerformanceEvents.InitializeClientApplication,\r\n        \"InitClientApplication\",\r\n    ],\r\n    [PerformanceEvents.InitializeCache, \"InitCache\"],\r\n    [PerformanceEvents.ImportExistingCache, \"importCache\"],\r\n    [PerformanceEvents.SetUserData, \"setUserData\"],\r\n    [PerformanceEvents.LocalStorageUpdated, \"localStorageUpdated\"],\r\n    [PerformanceEvents.SilentIframeClientTokenHelper, \"SIClientTHelper\"],\r\n    [\r\n        PerformanceEvents.SilentHandlerInitiateAuthRequest,\r\n        \"SHandlerInitAuthReq\",\r\n    ],\r\n    [\r\n        PerformanceEvents.SilentHandlerMonitorIframeForHash,\r\n        \"SltHandlerMonitorIframeForHash\",\r\n    ],\r\n    [PerformanceEvents.SilentHandlerLoadFrame, \"SHandlerLoadFrame\"],\r\n    [PerformanceEvents.SilentHandlerLoadFrameSync, \"SHandlerLoadFrameSync\"],\r\n    [\r\n        PerformanceEvents.StandardInteractionClientCreateAuthCodeClient,\r\n        \"StdIntClientCreateAuthCodeClient\",\r\n    ],\r\n    [\r\n        PerformanceEvents.StandardInteractionClientGetClientConfiguration,\r\n        \"StdIntClientGetClientConf\",\r\n    ],\r\n    [\r\n        PerformanceEvents.StandardInteractionClientInitializeAuthorizationRequest,\r\n        \"StdIntClientInitAuthReq\",\r\n    ],\r\n    [PerformanceEvents.GetAuthCodeUrl, \"GetAuthCodeUrl\"],\r\n    [\r\n        PerformanceEvents.HandleCodeResponseFromServer,\r\n        \"HandleCodeResFromServer\",\r\n    ],\r\n    [PerformanceEvents.HandleCodeResponse, \"HandleCodeResp\"],\r\n    [PerformanceEvents.HandleResponseEar, \"HandleRespEar\"],\r\n    [PerformanceEvents.HandleResponseCode, \"HandleRespCode\"],\r\n    [\r\n        PerformanceEvents.HandleResponsePlatformBroker,\r\n        \"HandleRespPlatBroker\",\r\n    ],\r\n    [PerformanceEvents.UpdateTokenEndpointAuthority, \"UpdTEndpointAuth\"],\r\n    [PerformanceEvents.AuthClientAcquireToken, \"AuthClientAT\"],\r\n    [PerformanceEvents.AuthClientExecuteTokenRequest, \"AuthClientExecTReq\"],\r\n    [\r\n        PerformanceEvents.AuthClientCreateTokenRequestBody,\r\n        \"AuthClientCreateTReqBody\",\r\n    ],\r\n    [PerformanceEvents.PopTokenGenerateCnf, \"PopTGenCnf\"],\r\n    [PerformanceEvents.PopTokenGenerateKid, \"PopTGenKid\"],\r\n    [PerformanceEvents.HandleServerTokenResponse, \"HandleServerTRes\"],\r\n    [PerformanceEvents.DeserializeResponse, \"DeserializeRes\"],\r\n    [\r\n        PerformanceEvents.AuthorityFactoryCreateDiscoveredInstance,\r\n        \"AuthFactCreateDiscInst\",\r\n    ],\r\n    [\r\n        PerformanceEvents.AuthorityResolveEndpointsAsync,\r\n        \"AuthResolveEndpointsAsync\",\r\n    ],\r\n    [\r\n        PerformanceEvents.AuthorityResolveEndpointsFromLocalSources,\r\n        \"AuthResolveEndpointsFromLocal\",\r\n    ],\r\n    [\r\n        PerformanceEvents.AuthorityGetCloudDiscoveryMetadataFromNetwork,\r\n        \"AuthGetCDMetaFromNet\",\r\n    ],\r\n    [\r\n        PerformanceEvents.AuthorityUpdateCloudDiscoveryMetadata,\r\n        \"AuthUpdCDMeta\",\r\n    ],\r\n    [\r\n        PerformanceEvents.AuthorityGetEndpointMetadataFromNetwork,\r\n        \"AuthUpdCDMetaFromNet\",\r\n    ],\r\n    [\r\n        PerformanceEvents.AuthorityUpdateEndpointMetadata,\r\n        \"AuthUpdEndpointMeta\",\r\n    ],\r\n    [\r\n        PerformanceEvents.AuthorityUpdateMetadataWithRegionalInformation,\r\n        \"AuthUpdMetaWithRegInfo\",\r\n    ],\r\n    [PerformanceEvents.RegionDiscoveryDetectRegion, \"RegDiscDetectReg\"],\r\n    [\r\n        PerformanceEvents.RegionDiscoveryGetRegionFromIMDS,\r\n        \"RegDiscGetRegFromIMDS\",\r\n    ],\r\n    [\r\n        PerformanceEvents.RegionDiscoveryGetCurrentVersion,\r\n        \"RegDiscGetCurrentVer\",\r\n    ],\r\n    [PerformanceEvents.AcquireTokenByCodeAsync, \"ATByCodeAsync\"],\r\n    [\r\n        PerformanceEvents.GetEndpointMetadataFromNetwork,\r\n        \"GetEndpointMetaFromNet\",\r\n    ],\r\n    [\r\n        PerformanceEvents.GetCloudDiscoveryMetadataFromNetworkMeasurement,\r\n        \"GetCDMetaFromNet\",\r\n    ],\r\n    [\r\n        PerformanceEvents.HandleRedirectPromiseMeasurement,\r\n        \"HandleRedirectPromise\",\r\n    ],\r\n    [\r\n        PerformanceEvents.HandleNativeRedirectPromiseMeasurement,\r\n        \"HandleNtvRedirectPromise\",\r\n    ],\r\n    [\r\n        PerformanceEvents.UpdateCloudDiscoveryMetadataMeasurement,\r\n        \"UpdateCDMeta\",\r\n    ],\r\n    [\r\n        PerformanceEvents.UsernamePasswordClientAcquireToken,\r\n        \"UserPassClientAT\",\r\n    ],\r\n    [\r\n        PerformanceEvents.NativeMessageHandlerHandshake,\r\n        \"NtvMsgHandlerHandshake\",\r\n    ],\r\n    [PerformanceEvents.NativeGenerateAuthResult, \"NtvGenAuthRes\"],\r\n    [PerformanceEvents.RemoveHiddenIframe, \"RemoveHiddenIframe\"],\r\n    [\r\n        PerformanceEvents.ClearTokensAndKeysWithClaims,\r\n        \"ClearTAndKeysWithClaims\",\r\n    ],\r\n    [PerformanceEvents.CacheManagerGetRefreshToken, \"CacheManagerGetRT\"],\r\n    [PerformanceEvents.GeneratePkceCodes, \"GenPkceCodes\"],\r\n    [PerformanceEvents.GenerateCodeVerifier, \"GenCodeVerifier\"],\r\n    [\r\n        PerformanceEvents.GenerateCodeChallengeFromVerifier,\r\n        \"GenCodeChallengeFromVerifier\",\r\n    ],\r\n    [PerformanceEvents.Sha256Digest, \"Sha256Digest\"],\r\n    [PerformanceEvents.GetRandomValues, \"GetRandomValues\"],\r\n    [PerformanceEvents.GenerateHKDF, \"genHKDF\"],\r\n    [PerformanceEvents.GenerateBaseKey, \"genBaseKey\"],\r\n    [PerformanceEvents.Base64Decode, \"b64Decode\"],\r\n    [PerformanceEvents.UrlEncodeArr, \"urlEncArr\"],\r\n    [PerformanceEvents.Encrypt, \"encrypt\"],\r\n    [PerformanceEvents.Decrypt, \"decrypt\"],\r\n    [PerformanceEvents.GenerateEarKey, \"genEarKey\"],\r\n    [PerformanceEvents.DecryptEarResponse, \"decryptEarResp\"],\r\n]);\r\n/**\r\n * State of the performance event.\r\n *\r\n * @export\r\n * @enum {number}\r\n */\r\nconst PerformanceEventStatus = {\r\n    NotStarted: 0,\r\n    InProgress: 1,\r\n    Completed: 2,\r\n};\r\nconst IntFields = new Set([\r\n    \"accessTokenSize\",\r\n    \"durationMs\",\r\n    \"idTokenSize\",\r\n    \"matsSilentStatus\",\r\n    \"matsHttpStatus\",\r\n    \"refreshTokenSize\",\r\n    \"queuedTimeMs\",\r\n    \"startTimeMs\",\r\n    \"status\",\r\n    \"multiMatchedAT\",\r\n    \"multiMatchedID\",\r\n    \"multiMatchedRT\",\r\n    \"unencryptedCacheCount\",\r\n    \"encryptedCacheExpiredCount\",\r\n    \"oldAccountCount\",\r\n    \"oldAccessCount\",\r\n    \"oldIdCount\",\r\n    \"oldRefreshCount\",\r\n    \"currAccountCount\",\r\n    \"currAccessCount\",\r\n    \"currIdCount\",\r\n    \"currRefreshCount\",\r\n    \"expiredCacheRemovedCount\",\r\n    \"upgradedCacheCount\",\r\n]);\n\nexport { IntFields, PerformanceEventAbbreviations, PerformanceEventStatus, PerformanceEvents };\n//# sourceMappingURL=PerformanceEvent.mjs.map\n","/*! @azure/msal-common v15.12.0 2025-08-19 */\n'use strict';\nimport { PerformanceEventStatus } from './PerformanceEvent.mjs';\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nclass StubPerformanceMeasurement {\r\n    startMeasurement() {\r\n        return;\r\n    }\r\n    endMeasurement() {\r\n        return;\r\n    }\r\n    flushMeasurement() {\r\n        return null;\r\n    }\r\n}\r\nclass StubPerformanceClient {\r\n    generateId() {\r\n        return \"callback-id\";\r\n    }\r\n    startMeasurement(measureName, correlationId) {\r\n        return {\r\n            end: () => null,\r\n            discard: () => { },\r\n            add: () => { },\r\n            increment: () => { },\r\n            event: {\r\n                eventId: this.generateId(),\r\n                status: PerformanceEventStatus.InProgress,\r\n                authority: \"\",\r\n                libraryName: \"\",\r\n                libraryVersion: \"\",\r\n                clientId: \"\",\r\n                name: measureName,\r\n                startTimeMs: Date.now(),\r\n                correlationId: correlationId || \"\",\r\n            },\r\n            measurement: new StubPerformanceMeasurement(),\r\n        };\r\n    }\r\n    startPerformanceMeasurement() {\r\n        return new StubPerformanceMeasurement();\r\n    }\r\n    calculateQueuedTime() {\r\n        return 0;\r\n    }\r\n    addQueueMeasurement() {\r\n        return;\r\n    }\r\n    setPreQueueTime() {\r\n        return;\r\n    }\r\n    endMeasurement() {\r\n        return null;\r\n    }\r\n    discardMeasurements() {\r\n        return;\r\n    }\r\n    removePerformanceCallback() {\r\n        return true;\r\n    }\r\n    addPerformanceCallback() {\r\n        return \"\";\r\n    }\r\n    emitEvents() {\r\n        return;\r\n    }\r\n    addFields() {\r\n        return;\r\n    }\r\n    incrementFields() {\r\n        return;\r\n    }\r\n    cacheEventByCorrelationId() {\r\n        return;\r\n    }\r\n}\n\nexport { StubPerformanceClient, StubPerformanceMeasurement };\n//# sourceMappingURL=StubPerformanceClient.mjs.map\n","/*! @azure/msal-common v15.12.0 2025-08-19 */\n'use strict';\nimport { DEFAULT_CRYPTO_IMPLEMENTATION } from '../crypto/ICrypto.mjs';\nimport { LogLevel, Logger } from '../logger/Logger.mjs';\nimport { DEFAULT_TOKEN_RENEWAL_OFFSET_SEC, Constants } from '../utils/Constants.mjs';\nimport { version } from '../packageMetadata.mjs';\nimport { AzureCloudInstance } from '../authority/AuthorityOptions.mjs';\nimport { DefaultStorageClass } from '../cache/CacheManager.mjs';\nimport { ProtocolMode } from '../authority/ProtocolMode.mjs';\nimport { createClientAuthError } from '../error/ClientAuthError.mjs';\nimport { StubPerformanceClient } from '../telemetry/performance/StubPerformanceClient.mjs';\nimport { methodNotImplemented } from '../error/ClientAuthErrorCodes.mjs';\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nconst DEFAULT_SYSTEM_OPTIONS = {\r\n    tokenRenewalOffsetSeconds: DEFAULT_TOKEN_RENEWAL_OFFSET_SEC,\r\n    preventCorsPreflight: false,\r\n};\r\nconst DEFAULT_LOGGER_IMPLEMENTATION = {\r\n    loggerCallback: () => {\r\n        // allow users to not set loggerCallback\r\n    },\r\n    piiLoggingEnabled: false,\r\n    logLevel: LogLevel.Info,\r\n    correlationId: Constants.EMPTY_STRING,\r\n};\r\nconst DEFAULT_CACHE_OPTIONS = {\r\n    claimsBasedCachingEnabled: false,\r\n};\r\nconst DEFAULT_NETWORK_IMPLEMENTATION = {\r\n    async sendGetRequestAsync() {\r\n        throw createClientAuthError(methodNotImplemented);\r\n    },\r\n    async sendPostRequestAsync() {\r\n        throw createClientAuthError(methodNotImplemented);\r\n    },\r\n};\r\nconst DEFAULT_LIBRARY_INFO = {\r\n    sku: Constants.SKU,\r\n    version: version,\r\n    cpu: Constants.EMPTY_STRING,\r\n    os: Constants.EMPTY_STRING,\r\n};\r\nconst DEFAULT_CLIENT_CREDENTIALS = {\r\n    clientSecret: Constants.EMPTY_STRING,\r\n    clientAssertion: undefined,\r\n};\r\nconst DEFAULT_AZURE_CLOUD_OPTIONS = {\r\n    azureCloudInstance: AzureCloudInstance.None,\r\n    tenant: `${Constants.DEFAULT_COMMON_TENANT}`,\r\n};\r\nconst DEFAULT_TELEMETRY_OPTIONS = {\r\n    application: {\r\n        appName: \"\",\r\n        appVersion: \"\",\r\n    },\r\n};\r\n/**\r\n * Function that sets the default options when not explicitly configured from app developer\r\n *\r\n * @param Configuration\r\n *\r\n * @returns Configuration\r\n */\r\nfunction buildClientConfiguration({ authOptions: userAuthOptions, systemOptions: userSystemOptions, loggerOptions: userLoggerOption, cacheOptions: userCacheOptions, storageInterface: storageImplementation, networkInterface: networkImplementation, cryptoInterface: cryptoImplementation, clientCredentials: clientCredentials, libraryInfo: libraryInfo, telemetry: telemetry, serverTelemetryManager: serverTelemetryManager, persistencePlugin: persistencePlugin, serializableCache: serializableCache, }) {\r\n    const loggerOptions = {\r\n        ...DEFAULT_LOGGER_IMPLEMENTATION,\r\n        ...userLoggerOption,\r\n    };\r\n    return {\r\n        authOptions: buildAuthOptions(userAuthOptions),\r\n        systemOptions: { ...DEFAULT_SYSTEM_OPTIONS, ...userSystemOptions },\r\n        loggerOptions: loggerOptions,\r\n        cacheOptions: { ...DEFAULT_CACHE_OPTIONS, ...userCacheOptions },\r\n        storageInterface: storageImplementation ||\r\n            new DefaultStorageClass(userAuthOptions.clientId, DEFAULT_CRYPTO_IMPLEMENTATION, new Logger(loggerOptions), new StubPerformanceClient()),\r\n        networkInterface: networkImplementation || DEFAULT_NETWORK_IMPLEMENTATION,\r\n        cryptoInterface: cryptoImplementation || DEFAULT_CRYPTO_IMPLEMENTATION,\r\n        clientCredentials: clientCredentials || DEFAULT_CLIENT_CREDENTIALS,\r\n        libraryInfo: { ...DEFAULT_LIBRARY_INFO, ...libraryInfo },\r\n        telemetry: { ...DEFAULT_TELEMETRY_OPTIONS, ...telemetry },\r\n        serverTelemetryManager: serverTelemetryManager || null,\r\n        persistencePlugin: persistencePlugin || null,\r\n        serializableCache: serializableCache || null,\r\n    };\r\n}\r\n/**\r\n * Construct authoptions from the client and platform passed values\r\n * @param authOptions\r\n */\r\nfunction buildAuthOptions(authOptions) {\r\n    return {\r\n        clientCapabilities: [],\r\n        azureCloudOptions: DEFAULT_AZURE_CLOUD_OPTIONS,\r\n        skipAuthorityMetadataCache: false,\r\n        instanceAware: false,\r\n        encodeExtraQueryParams: false,\r\n        ...authOptions,\r\n    };\r\n}\r\n/**\r\n * Returns true if config has protocolMode set to ProtocolMode.OIDC, false otherwise\r\n * @param ClientConfiguration\r\n */\r\nfunction isOidcProtocolMode(config) {\r\n    return (config.authOptions.authority.options.protocolMode === ProtocolMode.OIDC);\r\n}\n\nexport { DEFAULT_SYSTEM_OPTIONS, buildClientConfiguration, isOidcProtocolMode };\n//# sourceMappingURL=ClientConfiguration.mjs.map\n","/*! @azure/msal-common v15.12.0 2025-08-19 */\n'use strict';\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nconst CcsCredentialType = {\r\n    HOME_ACCOUNT_ID: \"home_account_id\",\r\n    UPN: \"UPN\",\r\n};\n\nexport { CcsCredentialType };\n//# sourceMappingURL=CcsCredential.mjs.map\n","/*! @azure/msal-common v15.12.0 2025-08-19 */\n'use strict';\nimport { createClientAuthError } from '../error/ClientAuthError.mjs';\nimport { Separators, Constants } from '../utils/Constants.mjs';\nimport { clientInfoEmptyError, clientInfoDecodingError } from '../error/ClientAuthErrorCodes.mjs';\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * Function to build a client info object from server clientInfo string\r\n * @param rawClientInfo\r\n * @param crypto\r\n */\r\nfunction buildClientInfo(rawClientInfo, base64Decode) {\r\n    if (!rawClientInfo) {\r\n        throw createClientAuthError(clientInfoEmptyError);\r\n    }\r\n    try {\r\n        const decodedClientInfo = base64Decode(rawClientInfo);\r\n        return JSON.parse(decodedClientInfo);\r\n    }\r\n    catch (e) {\r\n        throw createClientAuthError(clientInfoDecodingError);\r\n    }\r\n}\r\n/**\r\n * Function to build a client info object from cached homeAccountId string\r\n * @param homeAccountId\r\n */\r\nfunction buildClientInfoFromHomeAccountId(homeAccountId) {\r\n    if (!homeAccountId) {\r\n        throw createClientAuthError(clientInfoDecodingError);\r\n    }\r\n    const clientInfoParts = homeAccountId.split(Separators.CLIENT_INFO_SEPARATOR, 2);\r\n    return {\r\n        uid: clientInfoParts[0],\r\n        utid: clientInfoParts.length < 2\r\n            ? Constants.EMPTY_STRING\r\n            : clientInfoParts[1],\r\n    };\r\n}\n\nexport { buildClientInfo, buildClientInfoFromHomeAccountId };\n//# sourceMappingURL=ClientInfo.mjs.map\n","/*! @azure/msal-common v15.12.0 2025-08-19 */\n'use strict';\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nconst CLIENT_ID = \"client_id\";\r\nconst REDIRECT_URI = \"redirect_uri\";\r\nconst RESPONSE_TYPE = \"response_type\";\r\nconst RESPONSE_MODE = \"response_mode\";\r\nconst GRANT_TYPE = \"grant_type\";\r\nconst CLAIMS = \"claims\";\r\nconst SCOPE = \"scope\";\r\nconst ERROR = \"error\";\r\nconst ERROR_DESCRIPTION = \"error_description\";\r\nconst ACCESS_TOKEN = \"access_token\";\r\nconst ID_TOKEN = \"id_token\";\r\nconst REFRESH_TOKEN = \"refresh_token\";\r\nconst EXPIRES_IN = \"expires_in\";\r\nconst REFRESH_TOKEN_EXPIRES_IN = \"refresh_token_expires_in\";\r\nconst STATE = \"state\";\r\nconst NONCE = \"nonce\";\r\nconst PROMPT = \"prompt\";\r\nconst SESSION_STATE = \"session_state\";\r\nconst CLIENT_INFO = \"client_info\";\r\nconst CODE = \"code\";\r\nconst CODE_CHALLENGE = \"code_challenge\";\r\nconst CODE_CHALLENGE_METHOD = \"code_challenge_method\";\r\nconst CODE_VERIFIER = \"code_verifier\";\r\nconst CLIENT_REQUEST_ID = \"client-request-id\";\r\nconst X_CLIENT_SKU = \"x-client-SKU\";\r\nconst X_CLIENT_VER = \"x-client-VER\";\r\nconst X_CLIENT_OS = \"x-client-OS\";\r\nconst X_CLIENT_CPU = \"x-client-CPU\";\r\nconst X_CLIENT_CURR_TELEM = \"x-client-current-telemetry\";\r\nconst X_CLIENT_LAST_TELEM = \"x-client-last-telemetry\";\r\nconst X_MS_LIB_CAPABILITY = \"x-ms-lib-capability\";\r\nconst X_APP_NAME = \"x-app-name\";\r\nconst X_APP_VER = \"x-app-ver\";\r\nconst POST_LOGOUT_URI = \"post_logout_redirect_uri\";\r\nconst ID_TOKEN_HINT = \"id_token_hint\";\r\nconst DEVICE_CODE = \"device_code\";\r\nconst CLIENT_SECRET = \"client_secret\";\r\nconst CLIENT_ASSERTION = \"client_assertion\";\r\nconst CLIENT_ASSERTION_TYPE = \"client_assertion_type\";\r\nconst TOKEN_TYPE = \"token_type\";\r\nconst REQ_CNF = \"req_cnf\";\r\nconst OBO_ASSERTION = \"assertion\";\r\nconst REQUESTED_TOKEN_USE = \"requested_token_use\";\r\nconst ON_BEHALF_OF = \"on_behalf_of\";\r\nconst FOCI = \"foci\";\r\nconst CCS_HEADER = \"X-AnchorMailbox\";\r\nconst RETURN_SPA_CODE = \"return_spa_code\";\r\nconst NATIVE_BROKER = \"nativebroker\";\r\nconst LOGOUT_HINT = \"logout_hint\";\r\nconst SID = \"sid\";\r\nconst LOGIN_HINT = \"login_hint\";\r\nconst DOMAIN_HINT = \"domain_hint\";\r\nconst X_CLIENT_EXTRA_SKU = \"x-client-xtra-sku\";\r\nconst BROKER_CLIENT_ID = \"brk_client_id\";\r\nconst BROKER_REDIRECT_URI = \"brk_redirect_uri\";\r\nconst INSTANCE_AWARE = \"instance_aware\";\r\nconst EAR_JWK = \"ear_jwk\";\r\nconst EAR_JWE_CRYPTO = \"ear_jwe_crypto\";\n\nexport { ACCESS_TOKEN, BROKER_CLIENT_ID, BROKER_REDIRECT_URI, CCS_HEADER, CLAIMS, CLIENT_ASSERTION, CLIENT_ASSERTION_TYPE, CLIENT_ID, CLIENT_INFO, CLIENT_REQUEST_ID, CLIENT_SECRET, CODE, CODE_CHALLENGE, CODE_CHALLENGE_METHOD, CODE_VERIFIER, DEVICE_CODE, DOMAIN_HINT, EAR_JWE_CRYPTO, EAR_JWK, ERROR, ERROR_DESCRIPTION, EXPIRES_IN, FOCI, GRANT_TYPE, ID_TOKEN, ID_TOKEN_HINT, INSTANCE_AWARE, LOGIN_HINT, LOGOUT_HINT, NATIVE_BROKER, NONCE, OBO_ASSERTION, ON_BEHALF_OF, POST_LOGOUT_URI, PROMPT, REDIRECT_URI, REFRESH_TOKEN, REFRESH_TOKEN_EXPIRES_IN, REQUESTED_TOKEN_USE, REQ_CNF, RESPONSE_MODE, RESPONSE_TYPE, RETURN_SPA_CODE, SCOPE, SESSION_STATE, SID, STATE, TOKEN_TYPE, X_APP_NAME, X_APP_VER, X_CLIENT_CPU, X_CLIENT_CURR_TELEM, X_CLIENT_EXTRA_SKU, X_CLIENT_LAST_TELEM, X_CLIENT_OS, X_CLIENT_SKU, X_CLIENT_VER, X_MS_LIB_CAPABILITY };\n//# sourceMappingURL=AADServerParamKeys.mjs.map\n","/*! @azure/msal-common v15.12.0 2025-08-19 */\n'use strict';\nimport { OIDC_DEFAULT_SCOPES, ResponseMode, HeaderNames, CLIENT_INFO, ClaimsRequestKeys, PasswordGrantConstants, AuthenticationScheme, ThrottlingConstants } from '../utils/Constants.mjs';\nimport { CLIENT_ID, BROKER_CLIENT_ID, REDIRECT_URI, RESPONSE_TYPE, RESPONSE_MODE, NATIVE_BROKER, SCOPE, POST_LOGOUT_URI, ID_TOKEN_HINT, DOMAIN_HINT, LOGIN_HINT, SID, CLAIMS, CLIENT_REQUEST_ID, X_CLIENT_SKU, X_CLIENT_VER, X_CLIENT_OS, X_CLIENT_CPU, X_APP_NAME, X_APP_VER, PROMPT, STATE, NONCE, CODE_CHALLENGE, CODE_CHALLENGE_METHOD, CODE, DEVICE_CODE, REFRESH_TOKEN, CODE_VERIFIER, CLIENT_SECRET, CLIENT_ASSERTION, CLIENT_ASSERTION_TYPE, OBO_ASSERTION, REQUESTED_TOKEN_USE, GRANT_TYPE, INSTANCE_AWARE, TOKEN_TYPE, REQ_CNF, X_CLIENT_CURR_TELEM, X_CLIENT_LAST_TELEM, X_MS_LIB_CAPABILITY, LOGOUT_HINT, BROKER_REDIRECT_URI, EAR_JWK, EAR_JWE_CRYPTO } from '../constants/AADServerParamKeys.mjs';\nimport { ScopeSet } from './ScopeSet.mjs';\nimport { createClientConfigurationError } from '../error/ClientConfigurationError.mjs';\nimport { invalidClaims, pkceParamsMissing } from '../error/ClientConfigurationErrorCodes.mjs';\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nfunction instrumentBrokerParams(parameters, correlationId, performanceClient) {\r\n    if (!correlationId) {\r\n        return;\r\n    }\r\n    const clientId = parameters.get(CLIENT_ID);\r\n    if (clientId && parameters.has(BROKER_CLIENT_ID)) {\r\n        performanceClient?.addFields({\r\n            embeddedClientId: clientId,\r\n            embeddedRedirectUri: parameters.get(REDIRECT_URI),\r\n        }, correlationId);\r\n    }\r\n}\r\n/**\r\n * Add the given response_type\r\n * @param parameters\r\n * @param responseType\r\n */\r\nfunction addResponseType(parameters, responseType) {\r\n    parameters.set(RESPONSE_TYPE, responseType);\r\n}\r\n/**\r\n * add response_mode. defaults to query.\r\n * @param responseMode\r\n */\r\nfunction addResponseMode(parameters, responseMode) {\r\n    parameters.set(RESPONSE_MODE, responseMode ? responseMode : ResponseMode.QUERY);\r\n}\r\n/**\r\n * Add flag to indicate STS should attempt to use WAM if available\r\n */\r\nfunction addNativeBroker(parameters) {\r\n    parameters.set(NATIVE_BROKER, \"1\");\r\n}\r\n/**\r\n * add scopes. set addOidcScopes to false to prevent default scopes in non-user scenarios\r\n * @param scopeSet\r\n * @param addOidcScopes\r\n */\r\nfunction addScopes(parameters, scopes, addOidcScopes = true, defaultScopes = OIDC_DEFAULT_SCOPES) {\r\n    // Always add openid to the scopes when adding OIDC scopes\r\n    if (addOidcScopes &&\r\n        !defaultScopes.includes(\"openid\") &&\r\n        !scopes.includes(\"openid\")) {\r\n        defaultScopes.push(\"openid\");\r\n    }\r\n    const requestScopes = addOidcScopes\r\n        ? [...(scopes || []), ...defaultScopes]\r\n        : scopes || [];\r\n    const scopeSet = new ScopeSet(requestScopes);\r\n    parameters.set(SCOPE, scopeSet.printScopes());\r\n}\r\n/**\r\n * add clientId\r\n * @param clientId\r\n */\r\nfunction addClientId(parameters, clientId) {\r\n    parameters.set(CLIENT_ID, clientId);\r\n}\r\n/**\r\n * add redirect_uri\r\n * @param redirectUri\r\n */\r\nfunction addRedirectUri(parameters, redirectUri) {\r\n    parameters.set(REDIRECT_URI, redirectUri);\r\n}\r\n/**\r\n * add post logout redirectUri\r\n * @param redirectUri\r\n */\r\nfunction addPostLogoutRedirectUri(parameters, redirectUri) {\r\n    parameters.set(POST_LOGOUT_URI, redirectUri);\r\n}\r\n/**\r\n * add id_token_hint to logout request\r\n * @param idTokenHint\r\n */\r\nfunction addIdTokenHint(parameters, idTokenHint) {\r\n    parameters.set(ID_TOKEN_HINT, idTokenHint);\r\n}\r\n/**\r\n * add domain_hint\r\n * @param domainHint\r\n */\r\nfunction addDomainHint(parameters, domainHint) {\r\n    parameters.set(DOMAIN_HINT, domainHint);\r\n}\r\n/**\r\n * add login_hint\r\n * @param loginHint\r\n */\r\nfunction addLoginHint(parameters, loginHint) {\r\n    parameters.set(LOGIN_HINT, loginHint);\r\n}\r\n/**\r\n * Adds the CCS (Cache Credential Service) query parameter for login_hint\r\n * @param loginHint\r\n */\r\nfunction addCcsUpn(parameters, loginHint) {\r\n    parameters.set(HeaderNames.CCS_HEADER, `UPN:${loginHint}`);\r\n}\r\n/**\r\n * Adds the CCS (Cache Credential Service) query parameter for account object\r\n * @param loginHint\r\n */\r\nfunction addCcsOid(parameters, clientInfo) {\r\n    parameters.set(HeaderNames.CCS_HEADER, `Oid:${clientInfo.uid}@${clientInfo.utid}`);\r\n}\r\n/**\r\n * add sid\r\n * @param sid\r\n */\r\nfunction addSid(parameters, sid) {\r\n    parameters.set(SID, sid);\r\n}\r\n/**\r\n * add claims\r\n * @param claims\r\n */\r\nfunction addClaims(parameters, claims, clientCapabilities) {\r\n    const mergedClaims = addClientCapabilitiesToClaims(claims, clientCapabilities);\r\n    try {\r\n        JSON.parse(mergedClaims);\r\n    }\r\n    catch (e) {\r\n        throw createClientConfigurationError(invalidClaims);\r\n    }\r\n    parameters.set(CLAIMS, mergedClaims);\r\n}\r\n/**\r\n * add correlationId\r\n * @param correlationId\r\n */\r\nfunction addCorrelationId(parameters, correlationId) {\r\n    parameters.set(CLIENT_REQUEST_ID, correlationId);\r\n}\r\n/**\r\n * add library info query params\r\n * @param libraryInfo\r\n */\r\nfunction addLibraryInfo(parameters, libraryInfo) {\r\n    // Telemetry Info\r\n    parameters.set(X_CLIENT_SKU, libraryInfo.sku);\r\n    parameters.set(X_CLIENT_VER, libraryInfo.version);\r\n    if (libraryInfo.os) {\r\n        parameters.set(X_CLIENT_OS, libraryInfo.os);\r\n    }\r\n    if (libraryInfo.cpu) {\r\n        parameters.set(X_CLIENT_CPU, libraryInfo.cpu);\r\n    }\r\n}\r\n/**\r\n * Add client telemetry parameters\r\n * @param appTelemetry\r\n */\r\nfunction addApplicationTelemetry(parameters, appTelemetry) {\r\n    if (appTelemetry?.appName) {\r\n        parameters.set(X_APP_NAME, appTelemetry.appName);\r\n    }\r\n    if (appTelemetry?.appVersion) {\r\n        parameters.set(X_APP_VER, appTelemetry.appVersion);\r\n    }\r\n}\r\n/**\r\n * add prompt\r\n * @param prompt\r\n */\r\nfunction addPrompt(parameters, prompt) {\r\n    parameters.set(PROMPT, prompt);\r\n}\r\n/**\r\n * add state\r\n * @param state\r\n */\r\nfunction addState(parameters, state) {\r\n    if (state) {\r\n        parameters.set(STATE, state);\r\n    }\r\n}\r\n/**\r\n * add nonce\r\n * @param nonce\r\n */\r\nfunction addNonce(parameters, nonce) {\r\n    parameters.set(NONCE, nonce);\r\n}\r\n/**\r\n * add code_challenge and code_challenge_method\r\n * - throw if either of them are not passed\r\n * @param codeChallenge\r\n * @param codeChallengeMethod\r\n */\r\nfunction addCodeChallengeParams(parameters, codeChallenge, codeChallengeMethod) {\r\n    if (codeChallenge && codeChallengeMethod) {\r\n        parameters.set(CODE_CHALLENGE, codeChallenge);\r\n        parameters.set(CODE_CHALLENGE_METHOD, codeChallengeMethod);\r\n    }\r\n    else {\r\n        throw createClientConfigurationError(pkceParamsMissing);\r\n    }\r\n}\r\n/**\r\n * add the `authorization_code` passed by the user to exchange for a token\r\n * @param code\r\n */\r\nfunction addAuthorizationCode(parameters, code) {\r\n    parameters.set(CODE, code);\r\n}\r\n/**\r\n * add the `authorization_code` passed by the user to exchange for a token\r\n * @param code\r\n */\r\nfunction addDeviceCode(parameters, code) {\r\n    parameters.set(DEVICE_CODE, code);\r\n}\r\n/**\r\n * add the `refreshToken` passed by the user\r\n * @param refreshToken\r\n */\r\nfunction addRefreshToken(parameters, refreshToken) {\r\n    parameters.set(REFRESH_TOKEN, refreshToken);\r\n}\r\n/**\r\n * add the `code_verifier` passed by the user to exchange for a token\r\n * @param codeVerifier\r\n */\r\nfunction addCodeVerifier(parameters, codeVerifier) {\r\n    parameters.set(CODE_VERIFIER, codeVerifier);\r\n}\r\n/**\r\n * add client_secret\r\n * @param clientSecret\r\n */\r\nfunction addClientSecret(parameters, clientSecret) {\r\n    parameters.set(CLIENT_SECRET, clientSecret);\r\n}\r\n/**\r\n * add clientAssertion for confidential client flows\r\n * @param clientAssertion\r\n */\r\nfunction addClientAssertion(parameters, clientAssertion) {\r\n    if (clientAssertion) {\r\n        parameters.set(CLIENT_ASSERTION, clientAssertion);\r\n    }\r\n}\r\n/**\r\n * add clientAssertionType for confidential client flows\r\n * @param clientAssertionType\r\n */\r\nfunction addClientAssertionType(parameters, clientAssertionType) {\r\n    if (clientAssertionType) {\r\n        parameters.set(CLIENT_ASSERTION_TYPE, clientAssertionType);\r\n    }\r\n}\r\n/**\r\n * add OBO assertion for confidential client flows\r\n * @param clientAssertion\r\n */\r\nfunction addOboAssertion(parameters, oboAssertion) {\r\n    parameters.set(OBO_ASSERTION, oboAssertion);\r\n}\r\n/**\r\n * add grant type\r\n * @param grantType\r\n */\r\nfunction addRequestTokenUse(parameters, tokenUse) {\r\n    parameters.set(REQUESTED_TOKEN_USE, tokenUse);\r\n}\r\n/**\r\n * add grant type\r\n * @param grantType\r\n */\r\nfunction addGrantType(parameters, grantType) {\r\n    parameters.set(GRANT_TYPE, grantType);\r\n}\r\n/**\r\n * add client info\r\n *\r\n */\r\nfunction addClientInfo(parameters) {\r\n    parameters.set(CLIENT_INFO, \"1\");\r\n}\r\nfunction addInstanceAware(parameters) {\r\n    if (!parameters.has(INSTANCE_AWARE)) {\r\n        parameters.set(INSTANCE_AWARE, \"true\");\r\n    }\r\n}\r\n/**\r\n * add extraQueryParams\r\n * @param eQParams\r\n */\r\nfunction addExtraQueryParameters(parameters, eQParams) {\r\n    Object.entries(eQParams).forEach(([key, value]) => {\r\n        if (!parameters.has(key) && value) {\r\n            parameters.set(key, value);\r\n        }\r\n    });\r\n}\r\nfunction addClientCapabilitiesToClaims(claims, clientCapabilities) {\r\n    let mergedClaims;\r\n    // Parse provided claims into JSON object or initialize empty object\r\n    if (!claims) {\r\n        mergedClaims = {};\r\n    }\r\n    else {\r\n        try {\r\n            mergedClaims = JSON.parse(claims);\r\n        }\r\n        catch (e) {\r\n            throw createClientConfigurationError(invalidClaims);\r\n        }\r\n    }\r\n    if (clientCapabilities && clientCapabilities.length > 0) {\r\n        if (!mergedClaims.hasOwnProperty(ClaimsRequestKeys.ACCESS_TOKEN)) {\r\n            // Add access_token key to claims object\r\n            mergedClaims[ClaimsRequestKeys.ACCESS_TOKEN] = {};\r\n        }\r\n        // Add xms_cc claim with provided clientCapabilities to access_token key\r\n        mergedClaims[ClaimsRequestKeys.ACCESS_TOKEN][ClaimsRequestKeys.XMS_CC] =\r\n            {\r\n                values: clientCapabilities,\r\n            };\r\n    }\r\n    return JSON.stringify(mergedClaims);\r\n}\r\n/**\r\n * adds `username` for Password Grant flow\r\n * @param username\r\n */\r\nfunction addUsername(parameters, username) {\r\n    parameters.set(PasswordGrantConstants.username, username);\r\n}\r\n/**\r\n * adds `password` for Password Grant flow\r\n * @param password\r\n */\r\nfunction addPassword(parameters, password) {\r\n    parameters.set(PasswordGrantConstants.password, password);\r\n}\r\n/**\r\n * add pop_jwk to query params\r\n * @param cnfString\r\n */\r\nfunction addPopToken(parameters, cnfString) {\r\n    if (cnfString) {\r\n        parameters.set(TOKEN_TYPE, AuthenticationScheme.POP);\r\n        parameters.set(REQ_CNF, cnfString);\r\n    }\r\n}\r\n/**\r\n * add SSH JWK and key ID to query params\r\n */\r\nfunction addSshJwk(parameters, sshJwkString) {\r\n    if (sshJwkString) {\r\n        parameters.set(TOKEN_TYPE, AuthenticationScheme.SSH);\r\n        parameters.set(REQ_CNF, sshJwkString);\r\n    }\r\n}\r\n/**\r\n * add server telemetry fields\r\n * @param serverTelemetryManager\r\n */\r\nfunction addServerTelemetry(parameters, serverTelemetryManager) {\r\n    parameters.set(X_CLIENT_CURR_TELEM, serverTelemetryManager.generateCurrentRequestHeaderValue());\r\n    parameters.set(X_CLIENT_LAST_TELEM, serverTelemetryManager.generateLastRequestHeaderValue());\r\n}\r\n/**\r\n * Adds parameter that indicates to the server that throttling is supported\r\n */\r\nfunction addThrottling(parameters) {\r\n    parameters.set(X_MS_LIB_CAPABILITY, ThrottlingConstants.X_MS_LIB_CAPABILITY_VALUE);\r\n}\r\n/**\r\n * Adds logout_hint parameter for \"silent\" logout which prevent server account picker\r\n */\r\nfunction addLogoutHint(parameters, logoutHint) {\r\n    parameters.set(LOGOUT_HINT, logoutHint);\r\n}\r\nfunction addBrokerParameters(parameters, brokerClientId, brokerRedirectUri) {\r\n    if (!parameters.has(BROKER_CLIENT_ID)) {\r\n        parameters.set(BROKER_CLIENT_ID, brokerClientId);\r\n    }\r\n    if (!parameters.has(BROKER_REDIRECT_URI)) {\r\n        parameters.set(BROKER_REDIRECT_URI, brokerRedirectUri);\r\n    }\r\n}\r\n/**\r\n * Add EAR (Encrypted Authorize Response) request parameters\r\n * @param parameters\r\n * @param jwk\r\n */\r\nfunction addEARParameters(parameters, jwk) {\r\n    parameters.set(EAR_JWK, encodeURIComponent(jwk));\r\n    // ear_jwe_crypto will always have value: {\"alg\":\"dir\",\"enc\":\"A256GCM\"} so we can hardcode this\r\n    const jweCryptoB64Encoded = \"eyJhbGciOiJkaXIiLCJlbmMiOiJBMjU2R0NNIn0\";\r\n    parameters.set(EAR_JWE_CRYPTO, jweCryptoB64Encoded);\r\n}\r\n/**\r\n * Adds authorize body parameters to the request parameters\r\n * @param parameters\r\n * @param bodyParameters\r\n */\r\nfunction addPostBodyParameters(parameters, bodyParameters) {\r\n    Object.entries(bodyParameters).forEach(([key, value]) => {\r\n        if (value) {\r\n            parameters.set(key, value);\r\n        }\r\n    });\r\n}\n\nexport { addApplicationTelemetry, addAuthorizationCode, addBrokerParameters, addCcsOid, addCcsUpn, addClaims, addClientAssertion, addClientAssertionType, addClientCapabilitiesToClaims, addClientId, addClientInfo, addClientSecret, addCodeChallengeParams, addCodeVerifier, addCorrelationId, addDeviceCode, addDomainHint, addEARParameters, addExtraQueryParameters, addGrantType, addIdTokenHint, addInstanceAware, addLibraryInfo, addLoginHint, addLogoutHint, addNativeBroker, addNonce, addOboAssertion, addPassword, addPopToken, addPostBodyParameters, addPostLogoutRedirectUri, addPrompt, addRedirectUri, addRefreshToken, addRequestTokenUse, addResponseMode, addResponseType, addScopes, addServerTelemetry, addSid, addSshJwk, addState, addThrottling, addUsername, instrumentBrokerParams };\n//# sourceMappingURL=RequestParameterBuilder.mjs.map\n","/*! @azure/msal-common v15.12.0 2025-08-19 */\n'use strict';\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * Authority types supported by MSAL.\r\n */\r\nconst AuthorityType = {\r\n    Default: 0,\r\n    Adfs: 1,\r\n    Dsts: 2,\r\n    Ciam: 3,\r\n};\n\nexport { AuthorityType };\n//# sourceMappingURL=AuthorityType.mjs.map\n","/*! @azure/msal-common v15.12.0 2025-08-19 */\n'use strict';\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * Wraps a function with a performance measurement.\r\n * Usage: invoke(functionToCall, performanceClient, \"EventName\", \"correlationId\")(...argsToPassToFunction)\r\n * @param callback\r\n * @param eventName\r\n * @param logger\r\n * @param telemetryClient\r\n * @param correlationId\r\n * @returns\r\n * @internal\r\n */\r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\nconst invoke = (callback, eventName, logger, telemetryClient, correlationId) => {\r\n    return (...args) => {\r\n        logger.trace(`Executing function ${eventName}`);\r\n        const inProgressEvent = telemetryClient?.startMeasurement(eventName, correlationId);\r\n        if (correlationId) {\r\n            // Track number of times this API is called in a single request\r\n            const eventCount = eventName + \"CallCount\";\r\n            telemetryClient?.incrementFields({ [eventCount]: 1 }, correlationId);\r\n        }\r\n        try {\r\n            const result = callback(...args);\r\n            inProgressEvent?.end({\r\n                success: true,\r\n            });\r\n            logger.trace(`Returning result from ${eventName}`);\r\n            return result;\r\n        }\r\n        catch (e) {\r\n            logger.trace(`Error occurred in ${eventName}`);\r\n            try {\r\n                logger.trace(JSON.stringify(e));\r\n            }\r\n            catch (e) {\r\n                logger.trace(\"Unable to print error message.\");\r\n            }\r\n            inProgressEvent?.end({\r\n                success: false,\r\n            }, e);\r\n            throw e;\r\n        }\r\n    };\r\n};\r\n/**\r\n * Wraps an async function with a performance measurement.\r\n * Usage: invokeAsync(functionToCall, performanceClient, \"EventName\", \"correlationId\")(...argsToPassToFunction)\r\n * @param callback\r\n * @param eventName\r\n * @param logger\r\n * @param telemetryClient\r\n * @param correlationId\r\n * @returns\r\n * @internal\r\n *\r\n */\r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\nconst invokeAsync = (callback, eventName, logger, telemetryClient, correlationId) => {\r\n    return (...args) => {\r\n        logger.trace(`Executing function ${eventName}`);\r\n        const inProgressEvent = telemetryClient?.startMeasurement(eventName, correlationId);\r\n        if (correlationId) {\r\n            // Track number of times this API is called in a single request\r\n            const eventCount = eventName + \"CallCount\";\r\n            telemetryClient?.incrementFields({ [eventCount]: 1 }, correlationId);\r\n        }\r\n        telemetryClient?.setPreQueueTime(eventName, correlationId);\r\n        return callback(...args)\r\n            .then((response) => {\r\n            logger.trace(`Returning result from ${eventName}`);\r\n            inProgressEvent?.end({\r\n                success: true,\r\n            });\r\n            return response;\r\n        })\r\n            .catch((e) => {\r\n            logger.trace(`Error occurred in ${eventName}`);\r\n            try {\r\n                logger.trace(JSON.stringify(e));\r\n            }\r\n            catch (e) {\r\n                logger.trace(\"Unable to print error message.\");\r\n            }\r\n            inProgressEvent?.end({\r\n                success: false,\r\n            }, e);\r\n            throw e;\r\n        });\r\n    };\r\n};\n\nexport { invoke, invokeAsync };\n//# sourceMappingURL=FunctionWrappers.mjs.map\n","/*! @azure/msal-common v15.12.0 2025-08-19 */\n'use strict';\nimport { Constants, HttpStatus, RegionDiscoverySources } from '../utils/Constants.mjs';\nimport { PerformanceEvents } from '../telemetry/performance/PerformanceEvent.mjs';\nimport { invokeAsync } from '../utils/FunctionWrappers.mjs';\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nclass RegionDiscovery {\r\n    constructor(networkInterface, logger, performanceClient, correlationId) {\r\n        this.networkInterface = networkInterface;\r\n        this.logger = logger;\r\n        this.performanceClient = performanceClient;\r\n        this.correlationId = correlationId;\r\n    }\r\n    /**\r\n     * Detect the region from the application's environment.\r\n     *\r\n     * @returns Promise<string | null>\r\n     */\r\n    async detectRegion(environmentRegion, regionDiscoveryMetadata) {\r\n        this.performanceClient?.addQueueMeasurement(PerformanceEvents.RegionDiscoveryDetectRegion, this.correlationId);\r\n        // Initialize auto detected region with the region from the envrionment\r\n        let autodetectedRegionName = environmentRegion;\r\n        // Check if a region was detected from the environment, if not, attempt to get the region from IMDS\r\n        if (!autodetectedRegionName) {\r\n            const options = RegionDiscovery.IMDS_OPTIONS;\r\n            try {\r\n                const localIMDSVersionResponse = await invokeAsync(this.getRegionFromIMDS.bind(this), PerformanceEvents.RegionDiscoveryGetRegionFromIMDS, this.logger, this.performanceClient, this.correlationId)(Constants.IMDS_VERSION, options);\r\n                if (localIMDSVersionResponse.status === HttpStatus.SUCCESS) {\r\n                    autodetectedRegionName = localIMDSVersionResponse.body;\r\n                    regionDiscoveryMetadata.region_source =\r\n                        RegionDiscoverySources.IMDS;\r\n                }\r\n                // If the response using the local IMDS version failed, try to fetch the current version of IMDS and retry.\r\n                if (localIMDSVersionResponse.status === HttpStatus.BAD_REQUEST) {\r\n                    const currentIMDSVersion = await invokeAsync(this.getCurrentVersion.bind(this), PerformanceEvents.RegionDiscoveryGetCurrentVersion, this.logger, this.performanceClient, this.correlationId)(options);\r\n                    if (!currentIMDSVersion) {\r\n                        regionDiscoveryMetadata.region_source =\r\n                            RegionDiscoverySources.FAILED_AUTO_DETECTION;\r\n                        return null;\r\n                    }\r\n                    const currentIMDSVersionResponse = await invokeAsync(this.getRegionFromIMDS.bind(this), PerformanceEvents.RegionDiscoveryGetRegionFromIMDS, this.logger, this.performanceClient, this.correlationId)(currentIMDSVersion, options);\r\n                    if (currentIMDSVersionResponse.status === HttpStatus.SUCCESS) {\r\n                        autodetectedRegionName =\r\n                            currentIMDSVersionResponse.body;\r\n                        regionDiscoveryMetadata.region_source =\r\n                            RegionDiscoverySources.IMDS;\r\n                    }\r\n                }\r\n            }\r\n            catch (e) {\r\n                regionDiscoveryMetadata.region_source =\r\n                    RegionDiscoverySources.FAILED_AUTO_DETECTION;\r\n                return null;\r\n            }\r\n        }\r\n        else {\r\n            regionDiscoveryMetadata.region_source =\r\n                RegionDiscoverySources.ENVIRONMENT_VARIABLE;\r\n        }\r\n        // If no region was auto detected from the environment or from the IMDS endpoint, mark the attempt as a FAILED_AUTO_DETECTION\r\n        if (!autodetectedRegionName) {\r\n            regionDiscoveryMetadata.region_source =\r\n                RegionDiscoverySources.FAILED_AUTO_DETECTION;\r\n        }\r\n        return autodetectedRegionName || null;\r\n    }\r\n    /**\r\n     * Make the call to the IMDS endpoint\r\n     *\r\n     * @param imdsEndpointUrl\r\n     * @returns Promise<NetworkResponse<string>>\r\n     */\r\n    async getRegionFromIMDS(version, options) {\r\n        this.performanceClient?.addQueueMeasurement(PerformanceEvents.RegionDiscoveryGetRegionFromIMDS, this.correlationId);\r\n        return this.networkInterface.sendGetRequestAsync(`${Constants.IMDS_ENDPOINT}?api-version=${version}&format=text`, options, Constants.IMDS_TIMEOUT);\r\n    }\r\n    /**\r\n     * Get the most recent version of the IMDS endpoint available\r\n     *\r\n     * @returns Promise<string | null>\r\n     */\r\n    async getCurrentVersion(options) {\r\n        this.performanceClient?.addQueueMeasurement(PerformanceEvents.RegionDiscoveryGetCurrentVersion, this.correlationId);\r\n        try {\r\n            const response = await this.networkInterface.sendGetRequestAsync(`${Constants.IMDS_ENDPOINT}?format=json`, options);\r\n            // When IMDS endpoint is called without the api version query param, bad request response comes back with latest version.\r\n            if (response.status === HttpStatus.BAD_REQUEST &&\r\n                response.body &&\r\n                response.body[\"newest-versions\"] &&\r\n                response.body[\"newest-versions\"].length > 0) {\r\n                return response.body[\"newest-versions\"][0];\r\n            }\r\n            return null;\r\n        }\r\n        catch (e) {\r\n            return null;\r\n        }\r\n    }\r\n}\r\n// Options for the IMDS endpoint request\r\nRegionDiscovery.IMDS_OPTIONS = {\r\n    headers: {\r\n        Metadata: \"true\",\r\n    },\r\n};\n\nexport { RegionDiscovery };\n//# sourceMappingURL=RegionDiscovery.mjs.map\n","/*! @azure/msal-common v15.12.0 2025-08-19 */\n'use strict';\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * Utility functions for managing date and time operations.\r\n */\r\n/**\r\n * return the current time in Unix time (seconds).\r\n */\r\nfunction nowSeconds() {\r\n    // Date.getTime() returns in milliseconds.\r\n    return Math.round(new Date().getTime() / 1000.0);\r\n}\r\n/**\r\n * Converts JS Date object to seconds\r\n * @param date Date\r\n */\r\nfunction toSecondsFromDate(date) {\r\n    // Convert date to seconds\r\n    return date.getTime() / 1000;\r\n}\r\n/**\r\n * Convert seconds to JS Date object. Seconds can be in a number or string format or undefined (will still return a date).\r\n * @param seconds\r\n */\r\nfunction toDateFromSeconds(seconds) {\r\n    if (seconds) {\r\n        return new Date(Number(seconds) * 1000);\r\n    }\r\n    return new Date();\r\n}\r\n/**\r\n * check if a token is expired based on given UTC time in seconds.\r\n * @param expiresOn\r\n */\r\nfunction isTokenExpired(expiresOn, offset) {\r\n    // check for access token expiry\r\n    const expirationSec = Number(expiresOn) || 0;\r\n    const offsetCurrentTimeSec = nowSeconds() + offset;\r\n    // If current time + offset is greater than token expiration time, then token is expired.\r\n    return offsetCurrentTimeSec > expirationSec;\r\n}\r\n/**\r\n * Checks if a cache entry is expired based on the last updated time and cache retention days.\r\n * @param lastUpdatedAt\r\n * @param cacheRetentionDays\r\n * @returns\r\n */\r\nfunction isCacheExpired(lastUpdatedAt, cacheRetentionDays) {\r\n    const cacheExpirationTimestamp = Number(lastUpdatedAt) + cacheRetentionDays * 24 * 60 * 60 * 1000;\r\n    return Date.now() > cacheExpirationTimestamp;\r\n}\r\n/**\r\n * If the current time is earlier than the time that a token was cached at, we must discard the token\r\n * i.e. The system clock was turned back after acquiring the cached token\r\n * @param cachedAt\r\n * @param offset\r\n */\r\nfunction wasClockTurnedBack(cachedAt) {\r\n    const cachedAtSec = Number(cachedAt);\r\n    return cachedAtSec > nowSeconds();\r\n}\r\n/**\r\n * Waits for t number of milliseconds\r\n * @param t number\r\n * @param value T\r\n */\r\nfunction delay(t, value) {\r\n    return new Promise((resolve) => setTimeout(() => resolve(value), t));\r\n}\n\nexport { delay, isCacheExpired, isTokenExpired, nowSeconds, toDateFromSeconds, toSecondsFromDate, wasClockTurnedBack };\n//# sourceMappingURL=TimeUtils.mjs.map\n","/*! @azure/msal-common v15.12.0 2025-08-19 */\n'use strict';\nimport { extractTokenClaims } from '../../account/AuthToken.mjs';\nimport { createClientAuthError } from '../../error/ClientAuthError.mjs';\nimport { CredentialType, AuthenticationScheme, SERVER_TELEM_CONSTANTS, ThrottlingConstants, APP_METADATA, Separators, AUTHORITY_METADATA_CONSTANTS } from '../../utils/Constants.mjs';\nimport { nowSeconds } from '../../utils/TimeUtils.mjs';\nimport { tokenClaimsCnfRequiredForSignedJwt } from '../../error/ClientAuthErrorCodes.mjs';\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * Create IdTokenEntity\r\n * @param homeAccountId\r\n * @param authenticationResult\r\n * @param clientId\r\n * @param authority\r\n */\r\nfunction createIdTokenEntity(homeAccountId, environment, idToken, clientId, tenantId) {\r\n    const idTokenEntity = {\r\n        credentialType: CredentialType.ID_TOKEN,\r\n        homeAccountId: homeAccountId,\r\n        environment: environment,\r\n        clientId: clientId,\r\n        secret: idToken,\r\n        realm: tenantId,\r\n        lastUpdatedAt: Date.now().toString(), // Set the last updated time to now\r\n    };\r\n    return idTokenEntity;\r\n}\r\n/**\r\n * Create AccessTokenEntity\r\n * @param homeAccountId\r\n * @param environment\r\n * @param accessToken\r\n * @param clientId\r\n * @param tenantId\r\n * @param scopes\r\n * @param expiresOn\r\n * @param extExpiresOn\r\n */\r\nfunction createAccessTokenEntity(homeAccountId, environment, accessToken, clientId, tenantId, scopes, expiresOn, extExpiresOn, base64Decode, refreshOn, tokenType, userAssertionHash, keyId, requestedClaims, requestedClaimsHash) {\r\n    const atEntity = {\r\n        homeAccountId: homeAccountId,\r\n        credentialType: CredentialType.ACCESS_TOKEN,\r\n        secret: accessToken,\r\n        cachedAt: nowSeconds().toString(),\r\n        expiresOn: expiresOn.toString(),\r\n        extendedExpiresOn: extExpiresOn.toString(),\r\n        environment: environment,\r\n        clientId: clientId,\r\n        realm: tenantId,\r\n        target: scopes,\r\n        tokenType: tokenType || AuthenticationScheme.BEARER,\r\n        lastUpdatedAt: Date.now().toString(), // Set the last updated time to now\r\n    };\r\n    if (userAssertionHash) {\r\n        atEntity.userAssertionHash = userAssertionHash;\r\n    }\r\n    if (refreshOn) {\r\n        atEntity.refreshOn = refreshOn.toString();\r\n    }\r\n    if (requestedClaims) {\r\n        atEntity.requestedClaims = requestedClaims;\r\n        atEntity.requestedClaimsHash = requestedClaimsHash;\r\n    }\r\n    /*\r\n     * Create Access Token With Auth Scheme instead of regular access token\r\n     * Cast to lower to handle \"bearer\" from ADFS\r\n     */\r\n    if (atEntity.tokenType?.toLowerCase() !==\r\n        AuthenticationScheme.BEARER.toLowerCase()) {\r\n        atEntity.credentialType = CredentialType.ACCESS_TOKEN_WITH_AUTH_SCHEME;\r\n        switch (atEntity.tokenType) {\r\n            case AuthenticationScheme.POP:\r\n                // Make sure keyId is present and add it to credential\r\n                const tokenClaims = extractTokenClaims(accessToken, base64Decode);\r\n                if (!tokenClaims?.cnf?.kid) {\r\n                    throw createClientAuthError(tokenClaimsCnfRequiredForSignedJwt);\r\n                }\r\n                atEntity.keyId = tokenClaims.cnf.kid;\r\n                break;\r\n            case AuthenticationScheme.SSH:\r\n                atEntity.keyId = keyId;\r\n        }\r\n    }\r\n    return atEntity;\r\n}\r\n/**\r\n * Create RefreshTokenEntity\r\n * @param homeAccountId\r\n * @param authenticationResult\r\n * @param clientId\r\n * @param authority\r\n */\r\nfunction createRefreshTokenEntity(homeAccountId, environment, refreshToken, clientId, familyId, userAssertionHash, expiresOn) {\r\n    const rtEntity = {\r\n        credentialType: CredentialType.REFRESH_TOKEN,\r\n        homeAccountId: homeAccountId,\r\n        environment: environment,\r\n        clientId: clientId,\r\n        secret: refreshToken,\r\n        lastUpdatedAt: Date.now().toString(),\r\n    };\r\n    if (userAssertionHash) {\r\n        rtEntity.userAssertionHash = userAssertionHash;\r\n    }\r\n    if (familyId) {\r\n        rtEntity.familyId = familyId;\r\n    }\r\n    if (expiresOn) {\r\n        rtEntity.expiresOn = expiresOn.toString();\r\n    }\r\n    return rtEntity;\r\n}\r\nfunction isCredentialEntity(entity) {\r\n    return (entity.hasOwnProperty(\"homeAccountId\") &&\r\n        entity.hasOwnProperty(\"environment\") &&\r\n        entity.hasOwnProperty(\"credentialType\") &&\r\n        entity.hasOwnProperty(\"clientId\") &&\r\n        entity.hasOwnProperty(\"secret\"));\r\n}\r\n/**\r\n * Validates an entity: checks for all expected params\r\n * @param entity\r\n */\r\nfunction isAccessTokenEntity(entity) {\r\n    if (!entity) {\r\n        return false;\r\n    }\r\n    return (isCredentialEntity(entity) &&\r\n        entity.hasOwnProperty(\"realm\") &&\r\n        entity.hasOwnProperty(\"target\") &&\r\n        (entity[\"credentialType\"] === CredentialType.ACCESS_TOKEN ||\r\n            entity[\"credentialType\"] ===\r\n                CredentialType.ACCESS_TOKEN_WITH_AUTH_SCHEME));\r\n}\r\n/**\r\n * Validates an entity: checks for all expected params\r\n * @param entity\r\n */\r\nfunction isIdTokenEntity(entity) {\r\n    if (!entity) {\r\n        return false;\r\n    }\r\n    return (isCredentialEntity(entity) &&\r\n        entity.hasOwnProperty(\"realm\") &&\r\n        entity[\"credentialType\"] === CredentialType.ID_TOKEN);\r\n}\r\n/**\r\n * Validates an entity: checks for all expected params\r\n * @param entity\r\n */\r\nfunction isRefreshTokenEntity(entity) {\r\n    if (!entity) {\r\n        return false;\r\n    }\r\n    return (isCredentialEntity(entity) &&\r\n        entity[\"credentialType\"] === CredentialType.REFRESH_TOKEN);\r\n}\r\n/**\r\n * validates if a given cache entry is \"Telemetry\", parses <key,value>\r\n * @param key\r\n * @param entity\r\n */\r\nfunction isServerTelemetryEntity(key, entity) {\r\n    const validateKey = key.indexOf(SERVER_TELEM_CONSTANTS.CACHE_KEY) === 0;\r\n    let validateEntity = true;\r\n    if (entity) {\r\n        validateEntity =\r\n            entity.hasOwnProperty(\"failedRequests\") &&\r\n                entity.hasOwnProperty(\"errors\") &&\r\n                entity.hasOwnProperty(\"cacheHits\");\r\n    }\r\n    return validateKey && validateEntity;\r\n}\r\n/**\r\n * validates if a given cache entry is \"Throttling\", parses <key,value>\r\n * @param key\r\n * @param entity\r\n */\r\nfunction isThrottlingEntity(key, entity) {\r\n    let validateKey = false;\r\n    if (key) {\r\n        validateKey = key.indexOf(ThrottlingConstants.THROTTLING_PREFIX) === 0;\r\n    }\r\n    let validateEntity = true;\r\n    if (entity) {\r\n        validateEntity = entity.hasOwnProperty(\"throttleTime\");\r\n    }\r\n    return validateKey && validateEntity;\r\n}\r\n/**\r\n * Generate AppMetadata Cache Key as per the schema: appmetadata-<environment>-<client_id>\r\n */\r\nfunction generateAppMetadataKey({ environment, clientId, }) {\r\n    const appMetaDataKeyArray = [\r\n        APP_METADATA,\r\n        environment,\r\n        clientId,\r\n    ];\r\n    return appMetaDataKeyArray\r\n        .join(Separators.CACHE_KEY_SEPARATOR)\r\n        .toLowerCase();\r\n}\r\n/*\r\n * Validates an entity: checks for all expected params\r\n * @param entity\r\n */\r\nfunction isAppMetadataEntity(key, entity) {\r\n    if (!entity) {\r\n        return false;\r\n    }\r\n    return (key.indexOf(APP_METADATA) === 0 &&\r\n        entity.hasOwnProperty(\"clientId\") &&\r\n        entity.hasOwnProperty(\"environment\"));\r\n}\r\n/**\r\n * Validates an entity: checks for all expected params\r\n * @param entity\r\n */\r\nfunction isAuthorityMetadataEntity(key, entity) {\r\n    if (!entity) {\r\n        return false;\r\n    }\r\n    return (key.indexOf(AUTHORITY_METADATA_CONSTANTS.CACHE_KEY) === 0 &&\r\n        entity.hasOwnProperty(\"aliases\") &&\r\n        entity.hasOwnProperty(\"preferred_cache\") &&\r\n        entity.hasOwnProperty(\"preferred_network\") &&\r\n        entity.hasOwnProperty(\"canonical_authority\") &&\r\n        entity.hasOwnProperty(\"authorization_endpoint\") &&\r\n        entity.hasOwnProperty(\"token_endpoint\") &&\r\n        entity.hasOwnProperty(\"issuer\") &&\r\n        entity.hasOwnProperty(\"aliasesFromNetwork\") &&\r\n        entity.hasOwnProperty(\"endpointsFromNetwork\") &&\r\n        entity.hasOwnProperty(\"expiresAt\") &&\r\n        entity.hasOwnProperty(\"jwks_uri\"));\r\n}\r\n/**\r\n * Reset the exiresAt value\r\n */\r\nfunction generateAuthorityMetadataExpiresAt() {\r\n    return (nowSeconds() +\r\n        AUTHORITY_METADATA_CONSTANTS.REFRESH_TIME_SECONDS);\r\n}\r\nfunction updateAuthorityEndpointMetadata(authorityMetadata, updatedValues, fromNetwork) {\r\n    authorityMetadata.authorization_endpoint =\r\n        updatedValues.authorization_endpoint;\r\n    authorityMetadata.token_endpoint = updatedValues.token_endpoint;\r\n    authorityMetadata.end_session_endpoint = updatedValues.end_session_endpoint;\r\n    authorityMetadata.issuer = updatedValues.issuer;\r\n    authorityMetadata.endpointsFromNetwork = fromNetwork;\r\n    authorityMetadata.jwks_uri = updatedValues.jwks_uri;\r\n}\r\nfunction updateCloudDiscoveryMetadata(authorityMetadata, updatedValues, fromNetwork) {\r\n    authorityMetadata.aliases = updatedValues.aliases;\r\n    authorityMetadata.preferred_cache = updatedValues.preferred_cache;\r\n    authorityMetadata.preferred_network = updatedValues.preferred_network;\r\n    authorityMetadata.aliasesFromNetwork = fromNetwork;\r\n}\r\n/**\r\n * Returns whether or not the data needs to be refreshed\r\n */\r\nfunction isAuthorityMetadataExpired(metadata) {\r\n    return metadata.expiresAt <= nowSeconds();\r\n}\n\nexport { createAccessTokenEntity, createIdTokenEntity, createRefreshTokenEntity, generateAppMetadataKey, generateAuthorityMetadataExpiresAt, isAccessTokenEntity, isAppMetadataEntity, isAuthorityMetadataEntity, isAuthorityMetadataExpired, isCredentialEntity, isIdTokenEntity, isRefreshTokenEntity, isServerTelemetryEntity, isThrottlingEntity, updateAuthorityEndpointMetadata, updateCloudDiscoveryMetadata };\n//# sourceMappingURL=CacheHelpers.mjs.map\n","/*! @azure/msal-common v15.12.0 2025-08-19 */\n'use strict';\nimport { AuthorityType } from './AuthorityType.mjs';\nimport { isOpenIdConfigResponse } from './OpenIdConfigResponse.mjs';\nimport { UrlString } from '../url/UrlString.mjs';\nimport { createClientAuthError } from '../error/ClientAuthError.mjs';\nimport { Constants, AuthorityMetadataSource, RegionDiscoveryOutcomes, AADAuthorityConstants } from '../utils/Constants.mjs';\nimport { EndpointMetadata, getCloudDiscoveryMetadataFromHardcodedValues, getCloudDiscoveryMetadataFromNetworkResponse, InstanceDiscoveryMetadataAliases } from './AuthorityMetadata.mjs';\nimport { createClientConfigurationError } from '../error/ClientConfigurationError.mjs';\nimport { ProtocolMode } from './ProtocolMode.mjs';\nimport { AzureCloudInstance } from './AuthorityOptions.mjs';\nimport { isCloudInstanceDiscoveryResponse } from './CloudInstanceDiscoveryResponse.mjs';\nimport { isCloudInstanceDiscoveryErrorResponse } from './CloudInstanceDiscoveryErrorResponse.mjs';\nimport { RegionDiscovery } from './RegionDiscovery.mjs';\nimport { AuthError } from '../error/AuthError.mjs';\nimport { PerformanceEvents } from '../telemetry/performance/PerformanceEvent.mjs';\nimport { invokeAsync } from '../utils/FunctionWrappers.mjs';\nimport { generateAuthorityMetadataExpiresAt, updateAuthorityEndpointMetadata, isAuthorityMetadataExpired, updateCloudDiscoveryMetadata } from '../cache/utils/CacheHelpers.mjs';\nimport { endpointResolutionError, endSessionEndpointNotSupported, openIdConfigError } from '../error/ClientAuthErrorCodes.mjs';\nimport { invalidAuthorityMetadata, untrustedAuthority, invalidCloudDiscoveryMetadata } from '../error/ClientConfigurationErrorCodes.mjs';\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * The authority class validates the authority URIs used by the user, and retrieves the OpenID Configuration Data from the\r\n * endpoint. It will store the pertinent config data in this object for use during token calls.\r\n * @internal\r\n */\r\nclass Authority {\r\n    constructor(authority, networkInterface, cacheManager, authorityOptions, logger, correlationId, performanceClient, managedIdentity) {\r\n        this.canonicalAuthority = authority;\r\n        this._canonicalAuthority.validateAsUri();\r\n        this.networkInterface = networkInterface;\r\n        this.cacheManager = cacheManager;\r\n        this.authorityOptions = authorityOptions;\r\n        this.regionDiscoveryMetadata = {\r\n            region_used: undefined,\r\n            region_source: undefined,\r\n            region_outcome: undefined,\r\n        };\r\n        this.logger = logger;\r\n        this.performanceClient = performanceClient;\r\n        this.correlationId = correlationId;\r\n        this.managedIdentity = managedIdentity || false;\r\n        this.regionDiscovery = new RegionDiscovery(networkInterface, this.logger, this.performanceClient, this.correlationId);\r\n    }\r\n    /**\r\n     * Get {@link AuthorityType}\r\n     * @param authorityUri {@link IUri}\r\n     * @private\r\n     */\r\n    getAuthorityType(authorityUri) {\r\n        // CIAM auth url pattern is being standardized as: <tenant>.ciamlogin.com\r\n        if (authorityUri.HostNameAndPort.endsWith(Constants.CIAM_AUTH_URL)) {\r\n            return AuthorityType.Ciam;\r\n        }\r\n        const pathSegments = authorityUri.PathSegments;\r\n        if (pathSegments.length) {\r\n            switch (pathSegments[0].toLowerCase()) {\r\n                case Constants.ADFS:\r\n                    return AuthorityType.Adfs;\r\n                case Constants.DSTS:\r\n                    return AuthorityType.Dsts;\r\n            }\r\n        }\r\n        return AuthorityType.Default;\r\n    }\r\n    // See above for AuthorityType\r\n    get authorityType() {\r\n        return this.getAuthorityType(this.canonicalAuthorityUrlComponents);\r\n    }\r\n    /**\r\n     * ProtocolMode enum representing the way endpoints are constructed.\r\n     */\r\n    get protocolMode() {\r\n        return this.authorityOptions.protocolMode;\r\n    }\r\n    /**\r\n     * Returns authorityOptions which can be used to reinstantiate a new authority instance\r\n     */\r\n    get options() {\r\n        return this.authorityOptions;\r\n    }\r\n    /**\r\n     * A URL that is the authority set by the developer\r\n     */\r\n    get canonicalAuthority() {\r\n        return this._canonicalAuthority.urlString;\r\n    }\r\n    /**\r\n     * Sets canonical authority.\r\n     */\r\n    set canonicalAuthority(url) {\r\n        this._canonicalAuthority = new UrlString(url);\r\n        this._canonicalAuthority.validateAsUri();\r\n        this._canonicalAuthorityUrlComponents = null;\r\n    }\r\n    /**\r\n     * Get authority components.\r\n     */\r\n    get canonicalAuthorityUrlComponents() {\r\n        if (!this._canonicalAuthorityUrlComponents) {\r\n            this._canonicalAuthorityUrlComponents =\r\n                this._canonicalAuthority.getUrlComponents();\r\n        }\r\n        return this._canonicalAuthorityUrlComponents;\r\n    }\r\n    /**\r\n     * Get hostname and port i.e. login.microsoftonline.com\r\n     */\r\n    get hostnameAndPort() {\r\n        return this.canonicalAuthorityUrlComponents.HostNameAndPort.toLowerCase();\r\n    }\r\n    /**\r\n     * Get tenant for authority.\r\n     */\r\n    get tenant() {\r\n        return this.canonicalAuthorityUrlComponents.PathSegments[0];\r\n    }\r\n    /**\r\n     * OAuth /authorize endpoint for requests\r\n     */\r\n    get authorizationEndpoint() {\r\n        if (this.discoveryComplete()) {\r\n            return this.replacePath(this.metadata.authorization_endpoint);\r\n        }\r\n        else {\r\n            throw createClientAuthError(endpointResolutionError);\r\n        }\r\n    }\r\n    /**\r\n     * OAuth /token endpoint for requests\r\n     */\r\n    get tokenEndpoint() {\r\n        if (this.discoveryComplete()) {\r\n            return this.replacePath(this.metadata.token_endpoint);\r\n        }\r\n        else {\r\n            throw createClientAuthError(endpointResolutionError);\r\n        }\r\n    }\r\n    get deviceCodeEndpoint() {\r\n        if (this.discoveryComplete()) {\r\n            return this.replacePath(this.metadata.token_endpoint.replace(\"/token\", \"/devicecode\"));\r\n        }\r\n        else {\r\n            throw createClientAuthError(endpointResolutionError);\r\n        }\r\n    }\r\n    /**\r\n     * OAuth logout endpoint for requests\r\n     */\r\n    get endSessionEndpoint() {\r\n        if (this.discoveryComplete()) {\r\n            // ROPC policies may not have end_session_endpoint set\r\n            if (!this.metadata.end_session_endpoint) {\r\n                throw createClientAuthError(endSessionEndpointNotSupported);\r\n            }\r\n            return this.replacePath(this.metadata.end_session_endpoint);\r\n        }\r\n        else {\r\n            throw createClientAuthError(endpointResolutionError);\r\n        }\r\n    }\r\n    /**\r\n     * OAuth issuer for requests\r\n     */\r\n    get selfSignedJwtAudience() {\r\n        if (this.discoveryComplete()) {\r\n            return this.replacePath(this.metadata.issuer);\r\n        }\r\n        else {\r\n            throw createClientAuthError(endpointResolutionError);\r\n        }\r\n    }\r\n    /**\r\n     * Jwks_uri for token signing keys\r\n     */\r\n    get jwksUri() {\r\n        if (this.discoveryComplete()) {\r\n            return this.replacePath(this.metadata.jwks_uri);\r\n        }\r\n        else {\r\n            throw createClientAuthError(endpointResolutionError);\r\n        }\r\n    }\r\n    /**\r\n     * Returns a flag indicating that tenant name can be replaced in authority {@link IUri}\r\n     * @param authorityUri {@link IUri}\r\n     * @private\r\n     */\r\n    canReplaceTenant(authorityUri) {\r\n        return (authorityUri.PathSegments.length === 1 &&\r\n            !Authority.reservedTenantDomains.has(authorityUri.PathSegments[0]) &&\r\n            this.getAuthorityType(authorityUri) === AuthorityType.Default &&\r\n            this.protocolMode !== ProtocolMode.OIDC);\r\n    }\r\n    /**\r\n     * Replaces tenant in url path with current tenant. Defaults to common.\r\n     * @param urlString\r\n     */\r\n    replaceTenant(urlString) {\r\n        return urlString.replace(/{tenant}|{tenantid}/g, this.tenant);\r\n    }\r\n    /**\r\n     * Replaces path such as tenant or policy with the current tenant or policy.\r\n     * @param urlString\r\n     */\r\n    replacePath(urlString) {\r\n        let endpoint = urlString;\r\n        const cachedAuthorityUrl = new UrlString(this.metadata.canonical_authority);\r\n        const cachedAuthorityUrlComponents = cachedAuthorityUrl.getUrlComponents();\r\n        const cachedAuthorityParts = cachedAuthorityUrlComponents.PathSegments;\r\n        const currentAuthorityParts = this.canonicalAuthorityUrlComponents.PathSegments;\r\n        currentAuthorityParts.forEach((currentPart, index) => {\r\n            let cachedPart = cachedAuthorityParts[index];\r\n            if (index === 0 &&\r\n                this.canReplaceTenant(cachedAuthorityUrlComponents)) {\r\n                const tenantId = new UrlString(this.metadata.authorization_endpoint).getUrlComponents().PathSegments[0];\r\n                /**\r\n                 * Check if AAD canonical authority contains tenant domain name, for example \"testdomain.onmicrosoft.com\",\r\n                 * by comparing its first path segment to the corresponding authorization endpoint path segment, which is\r\n                 * always resolved with tenant id by OIDC.\r\n                 */\r\n                if (cachedPart !== tenantId) {\r\n                    this.logger.verbose(`Replacing tenant domain name ${cachedPart} with id ${tenantId}`);\r\n                    cachedPart = tenantId;\r\n                }\r\n            }\r\n            if (currentPart !== cachedPart) {\r\n                endpoint = endpoint.replace(`/${cachedPart}/`, `/${currentPart}/`);\r\n            }\r\n        });\r\n        return this.replaceTenant(endpoint);\r\n    }\r\n    /**\r\n     * The default open id configuration endpoint for any canonical authority.\r\n     */\r\n    get defaultOpenIdConfigurationEndpoint() {\r\n        const canonicalAuthorityHost = this.hostnameAndPort;\r\n        if (this.canonicalAuthority.endsWith(\"v2.0/\") ||\r\n            this.authorityType === AuthorityType.Adfs ||\r\n            (this.protocolMode === ProtocolMode.OIDC &&\r\n                !this.isAliasOfKnownMicrosoftAuthority(canonicalAuthorityHost))) {\r\n            return `${this.canonicalAuthority}.well-known/openid-configuration`;\r\n        }\r\n        return `${this.canonicalAuthority}v2.0/.well-known/openid-configuration`;\r\n    }\r\n    /**\r\n     * Boolean that returns whether or not tenant discovery has been completed.\r\n     */\r\n    discoveryComplete() {\r\n        return !!this.metadata;\r\n    }\r\n    /**\r\n     * Perform endpoint discovery to discover aliases, preferred_cache, preferred_network\r\n     * and the /authorize, /token and logout endpoints.\r\n     */\r\n    async resolveEndpointsAsync() {\r\n        this.performanceClient?.addQueueMeasurement(PerformanceEvents.AuthorityResolveEndpointsAsync, this.correlationId);\r\n        const metadataEntity = this.getCurrentMetadataEntity();\r\n        const cloudDiscoverySource = await invokeAsync(this.updateCloudDiscoveryMetadata.bind(this), PerformanceEvents.AuthorityUpdateCloudDiscoveryMetadata, this.logger, this.performanceClient, this.correlationId)(metadataEntity);\r\n        this.canonicalAuthority = this.canonicalAuthority.replace(this.hostnameAndPort, metadataEntity.preferred_network);\r\n        const endpointSource = await invokeAsync(this.updateEndpointMetadata.bind(this), PerformanceEvents.AuthorityUpdateEndpointMetadata, this.logger, this.performanceClient, this.correlationId)(metadataEntity);\r\n        this.updateCachedMetadata(metadataEntity, cloudDiscoverySource, {\r\n            source: endpointSource,\r\n        });\r\n        this.performanceClient?.addFields({\r\n            cloudDiscoverySource: cloudDiscoverySource,\r\n            authorityEndpointSource: endpointSource,\r\n        }, this.correlationId);\r\n    }\r\n    /**\r\n     * Returns metadata entity from cache if it exists, otherwiser returns a new metadata entity built\r\n     * from the configured canonical authority\r\n     * @returns\r\n     */\r\n    getCurrentMetadataEntity() {\r\n        let metadataEntity = this.cacheManager.getAuthorityMetadataByAlias(this.hostnameAndPort);\r\n        if (!metadataEntity) {\r\n            metadataEntity = {\r\n                aliases: [],\r\n                preferred_cache: this.hostnameAndPort,\r\n                preferred_network: this.hostnameAndPort,\r\n                canonical_authority: this.canonicalAuthority,\r\n                authorization_endpoint: \"\",\r\n                token_endpoint: \"\",\r\n                end_session_endpoint: \"\",\r\n                issuer: \"\",\r\n                aliasesFromNetwork: false,\r\n                endpointsFromNetwork: false,\r\n                expiresAt: generateAuthorityMetadataExpiresAt(),\r\n                jwks_uri: \"\",\r\n            };\r\n        }\r\n        return metadataEntity;\r\n    }\r\n    /**\r\n     * Updates cached metadata based on metadata source and sets the instance's metadata\r\n     * property to the same value\r\n     * @param metadataEntity\r\n     * @param cloudDiscoverySource\r\n     * @param endpointMetadataResult\r\n     */\r\n    updateCachedMetadata(metadataEntity, cloudDiscoverySource, endpointMetadataResult) {\r\n        if (cloudDiscoverySource !== AuthorityMetadataSource.CACHE &&\r\n            endpointMetadataResult?.source !== AuthorityMetadataSource.CACHE) {\r\n            // Reset the expiration time unless both values came from a successful cache lookup\r\n            metadataEntity.expiresAt =\r\n                generateAuthorityMetadataExpiresAt();\r\n            metadataEntity.canonical_authority = this.canonicalAuthority;\r\n        }\r\n        const cacheKey = this.cacheManager.generateAuthorityMetadataCacheKey(metadataEntity.preferred_cache);\r\n        this.cacheManager.setAuthorityMetadata(cacheKey, metadataEntity);\r\n        this.metadata = metadataEntity;\r\n    }\r\n    /**\r\n     * Update AuthorityMetadataEntity with new endpoints and return where the information came from\r\n     * @param metadataEntity\r\n     */\r\n    async updateEndpointMetadata(metadataEntity) {\r\n        this.performanceClient?.addQueueMeasurement(PerformanceEvents.AuthorityUpdateEndpointMetadata, this.correlationId);\r\n        const localMetadata = this.updateEndpointMetadataFromLocalSources(metadataEntity);\r\n        // Further update may be required for hardcoded metadata if regional metadata is preferred\r\n        if (localMetadata) {\r\n            if (localMetadata.source ===\r\n                AuthorityMetadataSource.HARDCODED_VALUES) {\r\n                // If the user prefers to use an azure region replace the global endpoints with regional information.\r\n                if (this.authorityOptions.azureRegionConfiguration?.azureRegion) {\r\n                    if (localMetadata.metadata) {\r\n                        const hardcodedMetadata = await invokeAsync(this.updateMetadataWithRegionalInformation.bind(this), PerformanceEvents.AuthorityUpdateMetadataWithRegionalInformation, this.logger, this.performanceClient, this.correlationId)(localMetadata.metadata);\r\n                        updateAuthorityEndpointMetadata(metadataEntity, hardcodedMetadata, false);\r\n                        metadataEntity.canonical_authority =\r\n                            this.canonicalAuthority;\r\n                    }\r\n                }\r\n            }\r\n            return localMetadata.source;\r\n        }\r\n        // Get metadata from network if local sources aren't available\r\n        let metadata = await invokeAsync(this.getEndpointMetadataFromNetwork.bind(this), PerformanceEvents.AuthorityGetEndpointMetadataFromNetwork, this.logger, this.performanceClient, this.correlationId)();\r\n        if (metadata) {\r\n            // If the user prefers to use an azure region replace the global endpoints with regional information.\r\n            if (this.authorityOptions.azureRegionConfiguration?.azureRegion) {\r\n                metadata = await invokeAsync(this.updateMetadataWithRegionalInformation.bind(this), PerformanceEvents.AuthorityUpdateMetadataWithRegionalInformation, this.logger, this.performanceClient, this.correlationId)(metadata);\r\n            }\r\n            updateAuthorityEndpointMetadata(metadataEntity, metadata, true);\r\n            return AuthorityMetadataSource.NETWORK;\r\n        }\r\n        else {\r\n            // Metadata could not be obtained from the config, cache, network or hardcoded values\r\n            throw createClientAuthError(openIdConfigError, this.defaultOpenIdConfigurationEndpoint);\r\n        }\r\n    }\r\n    /**\r\n     * Updates endpoint metadata from local sources and returns where the information was retrieved from and the metadata config\r\n     * response if the source is hardcoded metadata\r\n     * @param metadataEntity\r\n     * @returns\r\n     */\r\n    updateEndpointMetadataFromLocalSources(metadataEntity) {\r\n        this.logger.verbose(\"Attempting to get endpoint metadata from authority configuration\");\r\n        const configMetadata = this.getEndpointMetadataFromConfig();\r\n        if (configMetadata) {\r\n            this.logger.verbose(\"Found endpoint metadata in authority configuration\");\r\n            updateAuthorityEndpointMetadata(metadataEntity, configMetadata, false);\r\n            return {\r\n                source: AuthorityMetadataSource.CONFIG,\r\n            };\r\n        }\r\n        this.logger.verbose(\"Did not find endpoint metadata in the config... Attempting to get endpoint metadata from the hardcoded values.\");\r\n        // skipAuthorityMetadataCache is used to bypass hardcoded authority metadata and force a network metadata cache lookup and network metadata request if no cached response is available.\r\n        if (this.authorityOptions.skipAuthorityMetadataCache) {\r\n            this.logger.verbose(\"Skipping hardcoded metadata cache since skipAuthorityMetadataCache is set to true. Attempting to get endpoint metadata from the network metadata cache.\");\r\n        }\r\n        else {\r\n            const hardcodedMetadata = this.getEndpointMetadataFromHardcodedValues();\r\n            if (hardcodedMetadata) {\r\n                updateAuthorityEndpointMetadata(metadataEntity, hardcodedMetadata, false);\r\n                return {\r\n                    source: AuthorityMetadataSource.HARDCODED_VALUES,\r\n                    metadata: hardcodedMetadata,\r\n                };\r\n            }\r\n            else {\r\n                this.logger.verbose(\"Did not find endpoint metadata in hardcoded values... Attempting to get endpoint metadata from the network metadata cache.\");\r\n            }\r\n        }\r\n        // Check cached metadata entity expiration status\r\n        const metadataEntityExpired = isAuthorityMetadataExpired(metadataEntity);\r\n        if (this.isAuthoritySameType(metadataEntity) &&\r\n            metadataEntity.endpointsFromNetwork &&\r\n            !metadataEntityExpired) {\r\n            // No need to update\r\n            this.logger.verbose(\"Found endpoint metadata in the cache.\");\r\n            return { source: AuthorityMetadataSource.CACHE };\r\n        }\r\n        else if (metadataEntityExpired) {\r\n            this.logger.verbose(\"The metadata entity is expired.\");\r\n        }\r\n        return null;\r\n    }\r\n    /**\r\n     * Compares the number of url components after the domain to determine if the cached\r\n     * authority metadata can be used for the requested authority. Protects against same domain different\r\n     * authority such as login.microsoftonline.com/tenant and login.microsoftonline.com/tfp/tenant/policy\r\n     * @param metadataEntity\r\n     */\r\n    isAuthoritySameType(metadataEntity) {\r\n        const cachedAuthorityUrl = new UrlString(metadataEntity.canonical_authority);\r\n        const cachedParts = cachedAuthorityUrl.getUrlComponents().PathSegments;\r\n        return (cachedParts.length ===\r\n            this.canonicalAuthorityUrlComponents.PathSegments.length);\r\n    }\r\n    /**\r\n     * Parse authorityMetadata config option\r\n     */\r\n    getEndpointMetadataFromConfig() {\r\n        if (this.authorityOptions.authorityMetadata) {\r\n            try {\r\n                return JSON.parse(this.authorityOptions.authorityMetadata);\r\n            }\r\n            catch (e) {\r\n                throw createClientConfigurationError(invalidAuthorityMetadata);\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n    /**\r\n     * Gets OAuth endpoints from the given OpenID configuration endpoint.\r\n     *\r\n     * @param hasHardcodedMetadata boolean\r\n     */\r\n    async getEndpointMetadataFromNetwork() {\r\n        this.performanceClient?.addQueueMeasurement(PerformanceEvents.AuthorityGetEndpointMetadataFromNetwork, this.correlationId);\r\n        const options = {};\r\n        /*\r\n         * TODO: Add a timeout if the authority exists in our library's\r\n         * hardcoded list of metadata\r\n         */\r\n        const openIdConfigurationEndpoint = this.defaultOpenIdConfigurationEndpoint;\r\n        this.logger.verbose(`Authority.getEndpointMetadataFromNetwork: attempting to retrieve OAuth endpoints from ${openIdConfigurationEndpoint}`);\r\n        try {\r\n            const response = await this.networkInterface.sendGetRequestAsync(openIdConfigurationEndpoint, options);\r\n            const isValidResponse = isOpenIdConfigResponse(response.body);\r\n            if (isValidResponse) {\r\n                return response.body;\r\n            }\r\n            else {\r\n                this.logger.verbose(`Authority.getEndpointMetadataFromNetwork: could not parse response as OpenID configuration`);\r\n                return null;\r\n            }\r\n        }\r\n        catch (e) {\r\n            this.logger.verbose(`Authority.getEndpointMetadataFromNetwork: ${e}`);\r\n            return null;\r\n        }\r\n    }\r\n    /**\r\n     * Get OAuth endpoints for common authorities.\r\n     */\r\n    getEndpointMetadataFromHardcodedValues() {\r\n        if (this.hostnameAndPort in EndpointMetadata) {\r\n            return EndpointMetadata[this.hostnameAndPort];\r\n        }\r\n        return null;\r\n    }\r\n    /**\r\n     * Update the retrieved metadata with regional information.\r\n     * User selected Azure region will be used if configured.\r\n     */\r\n    async updateMetadataWithRegionalInformation(metadata) {\r\n        this.performanceClient?.addQueueMeasurement(PerformanceEvents.AuthorityUpdateMetadataWithRegionalInformation, this.correlationId);\r\n        const userConfiguredAzureRegion = this.authorityOptions.azureRegionConfiguration?.azureRegion;\r\n        if (userConfiguredAzureRegion) {\r\n            if (userConfiguredAzureRegion !==\r\n                Constants.AZURE_REGION_AUTO_DISCOVER_FLAG) {\r\n                this.regionDiscoveryMetadata.region_outcome =\r\n                    RegionDiscoveryOutcomes.CONFIGURED_NO_AUTO_DETECTION;\r\n                this.regionDiscoveryMetadata.region_used =\r\n                    userConfiguredAzureRegion;\r\n                return Authority.replaceWithRegionalInformation(metadata, userConfiguredAzureRegion);\r\n            }\r\n            const autodetectedRegionName = await invokeAsync(this.regionDiscovery.detectRegion.bind(this.regionDiscovery), PerformanceEvents.RegionDiscoveryDetectRegion, this.logger, this.performanceClient, this.correlationId)(this.authorityOptions.azureRegionConfiguration\r\n                ?.environmentRegion, this.regionDiscoveryMetadata);\r\n            if (autodetectedRegionName) {\r\n                this.regionDiscoveryMetadata.region_outcome =\r\n                    RegionDiscoveryOutcomes.AUTO_DETECTION_REQUESTED_SUCCESSFUL;\r\n                this.regionDiscoveryMetadata.region_used =\r\n                    autodetectedRegionName;\r\n                return Authority.replaceWithRegionalInformation(metadata, autodetectedRegionName);\r\n            }\r\n            this.regionDiscoveryMetadata.region_outcome =\r\n                RegionDiscoveryOutcomes.AUTO_DETECTION_REQUESTED_FAILED;\r\n        }\r\n        return metadata;\r\n    }\r\n    /**\r\n     * Updates the AuthorityMetadataEntity with new aliases, preferred_network and preferred_cache\r\n     * and returns where the information was retrieved from\r\n     * @param metadataEntity\r\n     * @returns AuthorityMetadataSource\r\n     */\r\n    async updateCloudDiscoveryMetadata(metadataEntity) {\r\n        this.performanceClient?.addQueueMeasurement(PerformanceEvents.AuthorityUpdateCloudDiscoveryMetadata, this.correlationId);\r\n        const localMetadataSource = this.updateCloudDiscoveryMetadataFromLocalSources(metadataEntity);\r\n        if (localMetadataSource) {\r\n            return localMetadataSource;\r\n        }\r\n        // Fallback to network as metadata source\r\n        const metadata = await invokeAsync(this.getCloudDiscoveryMetadataFromNetwork.bind(this), PerformanceEvents.AuthorityGetCloudDiscoveryMetadataFromNetwork, this.logger, this.performanceClient, this.correlationId)();\r\n        if (metadata) {\r\n            updateCloudDiscoveryMetadata(metadataEntity, metadata, true);\r\n            return AuthorityMetadataSource.NETWORK;\r\n        }\r\n        // Metadata could not be obtained from the config, cache, network or hardcoded values\r\n        throw createClientConfigurationError(untrustedAuthority);\r\n    }\r\n    updateCloudDiscoveryMetadataFromLocalSources(metadataEntity) {\r\n        this.logger.verbose(\"Attempting to get cloud discovery metadata  from authority configuration\");\r\n        this.logger.verbosePii(`Known Authorities: ${this.authorityOptions.knownAuthorities ||\r\n            Constants.NOT_APPLICABLE}`);\r\n        this.logger.verbosePii(`Authority Metadata: ${this.authorityOptions.authorityMetadata ||\r\n            Constants.NOT_APPLICABLE}`);\r\n        this.logger.verbosePii(`Canonical Authority: ${metadataEntity.canonical_authority || Constants.NOT_APPLICABLE}`);\r\n        const metadata = this.getCloudDiscoveryMetadataFromConfig();\r\n        if (metadata) {\r\n            this.logger.verbose(\"Found cloud discovery metadata in authority configuration\");\r\n            updateCloudDiscoveryMetadata(metadataEntity, metadata, false);\r\n            return AuthorityMetadataSource.CONFIG;\r\n        }\r\n        // If the cached metadata came from config but that config was not passed to this instance, we must go to hardcoded values\r\n        this.logger.verbose(\"Did not find cloud discovery metadata in the config... Attempting to get cloud discovery metadata from the hardcoded values.\");\r\n        if (this.options.skipAuthorityMetadataCache) {\r\n            this.logger.verbose(\"Skipping hardcoded cloud discovery metadata cache since skipAuthorityMetadataCache is set to true. Attempting to get cloud discovery metadata from the network metadata cache.\");\r\n        }\r\n        else {\r\n            const hardcodedMetadata = getCloudDiscoveryMetadataFromHardcodedValues(this.hostnameAndPort);\r\n            if (hardcodedMetadata) {\r\n                this.logger.verbose(\"Found cloud discovery metadata from hardcoded values.\");\r\n                updateCloudDiscoveryMetadata(metadataEntity, hardcodedMetadata, false);\r\n                return AuthorityMetadataSource.HARDCODED_VALUES;\r\n            }\r\n            this.logger.verbose(\"Did not find cloud discovery metadata in hardcoded values... Attempting to get cloud discovery metadata from the network metadata cache.\");\r\n        }\r\n        const metadataEntityExpired = isAuthorityMetadataExpired(metadataEntity);\r\n        if (this.isAuthoritySameType(metadataEntity) &&\r\n            metadataEntity.aliasesFromNetwork &&\r\n            !metadataEntityExpired) {\r\n            this.logger.verbose(\"Found cloud discovery metadata in the cache.\");\r\n            // No need to update\r\n            return AuthorityMetadataSource.CACHE;\r\n        }\r\n        else if (metadataEntityExpired) {\r\n            this.logger.verbose(\"The metadata entity is expired.\");\r\n        }\r\n        return null;\r\n    }\r\n    /**\r\n     * Parse cloudDiscoveryMetadata config or check knownAuthorities\r\n     */\r\n    getCloudDiscoveryMetadataFromConfig() {\r\n        // CIAM does not support cloud discovery metadata\r\n        if (this.authorityType === AuthorityType.Ciam) {\r\n            this.logger.verbose(\"CIAM authorities do not support cloud discovery metadata, generate the aliases from authority host.\");\r\n            return Authority.createCloudDiscoveryMetadataFromHost(this.hostnameAndPort);\r\n        }\r\n        // Check if network response was provided in config\r\n        if (this.authorityOptions.cloudDiscoveryMetadata) {\r\n            this.logger.verbose(\"The cloud discovery metadata has been provided as a network response, in the config.\");\r\n            try {\r\n                this.logger.verbose(\"Attempting to parse the cloud discovery metadata.\");\r\n                const parsedResponse = JSON.parse(this.authorityOptions.cloudDiscoveryMetadata);\r\n                const metadata = getCloudDiscoveryMetadataFromNetworkResponse(parsedResponse.metadata, this.hostnameAndPort);\r\n                this.logger.verbose(\"Parsed the cloud discovery metadata.\");\r\n                if (metadata) {\r\n                    this.logger.verbose(\"There is returnable metadata attached to the parsed cloud discovery metadata.\");\r\n                    return metadata;\r\n                }\r\n                else {\r\n                    this.logger.verbose(\"There is no metadata attached to the parsed cloud discovery metadata.\");\r\n                }\r\n            }\r\n            catch (e) {\r\n                this.logger.verbose(\"Unable to parse the cloud discovery metadata. Throwing Invalid Cloud Discovery Metadata Error.\");\r\n                throw createClientConfigurationError(invalidCloudDiscoveryMetadata);\r\n            }\r\n        }\r\n        // If cloudDiscoveryMetadata is empty or does not contain the host, check knownAuthorities\r\n        if (this.isInKnownAuthorities()) {\r\n            this.logger.verbose(\"The host is included in knownAuthorities. Creating new cloud discovery metadata from the host.\");\r\n            return Authority.createCloudDiscoveryMetadataFromHost(this.hostnameAndPort);\r\n        }\r\n        return null;\r\n    }\r\n    /**\r\n     * Called to get metadata from network if CloudDiscoveryMetadata was not populated by config\r\n     *\r\n     * @param hasHardcodedMetadata boolean\r\n     */\r\n    async getCloudDiscoveryMetadataFromNetwork() {\r\n        this.performanceClient?.addQueueMeasurement(PerformanceEvents.AuthorityGetCloudDiscoveryMetadataFromNetwork, this.correlationId);\r\n        const instanceDiscoveryEndpoint = `${Constants.AAD_INSTANCE_DISCOVERY_ENDPT}${this.canonicalAuthority}oauth2/v2.0/authorize`;\r\n        const options = {};\r\n        /*\r\n         * TODO: Add a timeout if the authority exists in our library's\r\n         * hardcoded list of metadata\r\n         */\r\n        let match = null;\r\n        try {\r\n            const response = await this.networkInterface.sendGetRequestAsync(instanceDiscoveryEndpoint, options);\r\n            let typedResponseBody;\r\n            let metadata;\r\n            if (isCloudInstanceDiscoveryResponse(response.body)) {\r\n                typedResponseBody =\r\n                    response.body;\r\n                metadata = typedResponseBody.metadata;\r\n                this.logger.verbosePii(`tenant_discovery_endpoint is: ${typedResponseBody.tenant_discovery_endpoint}`);\r\n            }\r\n            else if (isCloudInstanceDiscoveryErrorResponse(response.body)) {\r\n                this.logger.warning(`A CloudInstanceDiscoveryErrorResponse was returned. The cloud instance discovery network request's status code is: ${response.status}`);\r\n                typedResponseBody =\r\n                    response.body;\r\n                if (typedResponseBody.error === Constants.INVALID_INSTANCE) {\r\n                    this.logger.error(\"The CloudInstanceDiscoveryErrorResponse error is invalid_instance.\");\r\n                    return null;\r\n                }\r\n                this.logger.warning(`The CloudInstanceDiscoveryErrorResponse error is ${typedResponseBody.error}`);\r\n                this.logger.warning(`The CloudInstanceDiscoveryErrorResponse error description is ${typedResponseBody.error_description}`);\r\n                this.logger.warning(\"Setting the value of the CloudInstanceDiscoveryMetadata (returned from the network) to []\");\r\n                metadata = [];\r\n            }\r\n            else {\r\n                this.logger.error(\"AAD did not return a CloudInstanceDiscoveryResponse or CloudInstanceDiscoveryErrorResponse\");\r\n                return null;\r\n            }\r\n            this.logger.verbose(\"Attempting to find a match between the developer's authority and the CloudInstanceDiscoveryMetadata returned from the network request.\");\r\n            match = getCloudDiscoveryMetadataFromNetworkResponse(metadata, this.hostnameAndPort);\r\n        }\r\n        catch (error) {\r\n            if (error instanceof AuthError) {\r\n                this.logger.error(`There was a network error while attempting to get the cloud discovery instance metadata.\\nError: ${error.errorCode}\\nError Description: ${error.errorMessage}`);\r\n            }\r\n            else {\r\n                const typedError = error;\r\n                this.logger.error(`A non-MSALJS error was thrown while attempting to get the cloud instance discovery metadata.\\nError: ${typedError.name}\\nError Description: ${typedError.message}`);\r\n            }\r\n            return null;\r\n        }\r\n        // Custom Domain scenario, host is trusted because Instance Discovery call succeeded\r\n        if (!match) {\r\n            this.logger.warning(\"The developer's authority was not found within the CloudInstanceDiscoveryMetadata returned from the network request.\");\r\n            this.logger.verbose(\"Creating custom Authority for custom domain scenario.\");\r\n            match = Authority.createCloudDiscoveryMetadataFromHost(this.hostnameAndPort);\r\n        }\r\n        return match;\r\n    }\r\n    /**\r\n     * Helper function to determine if this host is included in the knownAuthorities config option\r\n     */\r\n    isInKnownAuthorities() {\r\n        const matches = this.authorityOptions.knownAuthorities.filter((authority) => {\r\n            return (authority &&\r\n                UrlString.getDomainFromUrl(authority).toLowerCase() ===\r\n                    this.hostnameAndPort);\r\n        });\r\n        return matches.length > 0;\r\n    }\r\n    /**\r\n     * helper function to populate the authority based on azureCloudOptions\r\n     * @param authorityString\r\n     * @param azureCloudOptions\r\n     */\r\n    static generateAuthority(authorityString, azureCloudOptions) {\r\n        let authorityAzureCloudInstance;\r\n        if (azureCloudOptions &&\r\n            azureCloudOptions.azureCloudInstance !== AzureCloudInstance.None) {\r\n            const tenant = azureCloudOptions.tenant\r\n                ? azureCloudOptions.tenant\r\n                : Constants.DEFAULT_COMMON_TENANT;\r\n            authorityAzureCloudInstance = `${azureCloudOptions.azureCloudInstance}/${tenant}/`;\r\n        }\r\n        return authorityAzureCloudInstance\r\n            ? authorityAzureCloudInstance\r\n            : authorityString;\r\n    }\r\n    /**\r\n     * Creates cloud discovery metadata object from a given host\r\n     * @param host\r\n     */\r\n    static createCloudDiscoveryMetadataFromHost(host) {\r\n        return {\r\n            preferred_network: host,\r\n            preferred_cache: host,\r\n            aliases: [host],\r\n        };\r\n    }\r\n    /**\r\n     * helper function to generate environment from authority object\r\n     */\r\n    getPreferredCache() {\r\n        if (this.managedIdentity) {\r\n            return Constants.DEFAULT_AUTHORITY_HOST;\r\n        }\r\n        else if (this.discoveryComplete()) {\r\n            return this.metadata.preferred_cache;\r\n        }\r\n        else {\r\n            throw createClientAuthError(endpointResolutionError);\r\n        }\r\n    }\r\n    /**\r\n     * Returns whether or not the provided host is an alias of this authority instance\r\n     * @param host\r\n     */\r\n    isAlias(host) {\r\n        return this.metadata.aliases.indexOf(host) > -1;\r\n    }\r\n    /**\r\n     * Returns whether or not the provided host is an alias of a known Microsoft authority for purposes of endpoint discovery\r\n     * @param host\r\n     */\r\n    isAliasOfKnownMicrosoftAuthority(host) {\r\n        return InstanceDiscoveryMetadataAliases.has(host);\r\n    }\r\n    /**\r\n     * Checks whether the provided host is that of a public cloud authority\r\n     *\r\n     * @param authority string\r\n     * @returns bool\r\n     */\r\n    static isPublicCloudAuthority(host) {\r\n        return Constants.KNOWN_PUBLIC_CLOUDS.indexOf(host) >= 0;\r\n    }\r\n    /**\r\n     * Rebuild the authority string with the region\r\n     *\r\n     * @param host string\r\n     * @param region string\r\n     */\r\n    static buildRegionalAuthorityString(host, region, queryString) {\r\n        // Create and validate a Url string object with the initial authority string\r\n        const authorityUrlInstance = new UrlString(host);\r\n        authorityUrlInstance.validateAsUri();\r\n        const authorityUrlParts = authorityUrlInstance.getUrlComponents();\r\n        let hostNameAndPort = `${region}.${authorityUrlParts.HostNameAndPort}`;\r\n        if (this.isPublicCloudAuthority(authorityUrlParts.HostNameAndPort)) {\r\n            hostNameAndPort = `${region}.${Constants.REGIONAL_AUTH_PUBLIC_CLOUD_SUFFIX}`;\r\n        }\r\n        // Include the query string portion of the url\r\n        const url = UrlString.constructAuthorityUriFromObject({\r\n            ...authorityUrlInstance.getUrlComponents(),\r\n            HostNameAndPort: hostNameAndPort,\r\n        }).urlString;\r\n        // Add the query string if a query string was provided\r\n        if (queryString)\r\n            return `${url}?${queryString}`;\r\n        return url;\r\n    }\r\n    /**\r\n     * Replace the endpoints in the metadata object with their regional equivalents.\r\n     *\r\n     * @param metadata OpenIdConfigResponse\r\n     * @param azureRegion string\r\n     */\r\n    static replaceWithRegionalInformation(metadata, azureRegion) {\r\n        const regionalMetadata = { ...metadata };\r\n        regionalMetadata.authorization_endpoint =\r\n            Authority.buildRegionalAuthorityString(regionalMetadata.authorization_endpoint, azureRegion);\r\n        regionalMetadata.token_endpoint =\r\n            Authority.buildRegionalAuthorityString(regionalMetadata.token_endpoint, azureRegion);\r\n        if (regionalMetadata.end_session_endpoint) {\r\n            regionalMetadata.end_session_endpoint =\r\n                Authority.buildRegionalAuthorityString(regionalMetadata.end_session_endpoint, azureRegion);\r\n        }\r\n        return regionalMetadata;\r\n    }\r\n    /**\r\n     * Transform CIAM_AUTHORIY as per the below rules:\r\n     * If no path segments found and it is a CIAM authority (hostname ends with .ciamlogin.com), then transform it\r\n     *\r\n     * NOTE: The transformation path should go away once STS supports CIAM with the format: `tenantIdorDomain.ciamlogin.com`\r\n     * `ciamlogin.com` can also change in the future and we should accommodate the same\r\n     *\r\n     * @param authority\r\n     */\r\n    static transformCIAMAuthority(authority) {\r\n        let ciamAuthority = authority;\r\n        const authorityUrl = new UrlString(authority);\r\n        const authorityUrlComponents = authorityUrl.getUrlComponents();\r\n        // check if transformation is needed\r\n        if (authorityUrlComponents.PathSegments.length === 0 &&\r\n            authorityUrlComponents.HostNameAndPort.endsWith(Constants.CIAM_AUTH_URL)) {\r\n            const tenantIdOrDomain = authorityUrlComponents.HostNameAndPort.split(\".\")[0];\r\n            ciamAuthority = `${ciamAuthority}${tenantIdOrDomain}${Constants.AAD_TENANT_DOMAIN_SUFFIX}`;\r\n        }\r\n        return ciamAuthority;\r\n    }\r\n}\r\n// Reserved tenant domain names that will not be replaced with tenant id\r\nAuthority.reservedTenantDomains = new Set([\r\n    \"{tenant}\",\r\n    \"{tenantid}\",\r\n    AADAuthorityConstants.COMMON,\r\n    AADAuthorityConstants.CONSUMERS,\r\n    AADAuthorityConstants.ORGANIZATIONS,\r\n]);\r\n/**\r\n * Extract tenantId from authority\r\n */\r\nfunction getTenantFromAuthorityString(authority) {\r\n    const authorityUrl = new UrlString(authority);\r\n    const authorityUrlComponents = authorityUrl.getUrlComponents();\r\n    /**\r\n     * For credential matching purposes, tenantId is the last path segment of the authority URL:\r\n     *  AAD Authority - domain/tenantId -> Credentials are cached with realm = tenantId\r\n     *  B2C Authority - domain/{tenantId}?/.../policy -> Credentials are cached with realm = policy\r\n     *  tenantId is downcased because B2C policies can have mixed case but tfp claim is downcased\r\n     *\r\n     * Note that we may not have any path segments in certain OIDC scenarios.\r\n     */\r\n    const tenantId = authorityUrlComponents.PathSegments.slice(-1)[0]?.toLowerCase();\r\n    switch (tenantId) {\r\n        case AADAuthorityConstants.COMMON:\r\n        case AADAuthorityConstants.ORGANIZATIONS:\r\n        case AADAuthorityConstants.CONSUMERS:\r\n            return undefined;\r\n        default:\r\n            return tenantId;\r\n    }\r\n}\r\nfunction formatAuthorityUri(authorityUri) {\r\n    return authorityUri.endsWith(Constants.FORWARD_SLASH)\r\n        ? authorityUri\r\n        : `${authorityUri}${Constants.FORWARD_SLASH}`;\r\n}\r\nfunction buildStaticAuthorityOptions(authOptions) {\r\n    const rawCloudDiscoveryMetadata = authOptions.cloudDiscoveryMetadata;\r\n    let cloudDiscoveryMetadata = undefined;\r\n    if (rawCloudDiscoveryMetadata) {\r\n        try {\r\n            cloudDiscoveryMetadata = JSON.parse(rawCloudDiscoveryMetadata);\r\n        }\r\n        catch (e) {\r\n            throw createClientConfigurationError(invalidCloudDiscoveryMetadata);\r\n        }\r\n    }\r\n    return {\r\n        canonicalAuthority: authOptions.authority\r\n            ? formatAuthorityUri(authOptions.authority)\r\n            : undefined,\r\n        knownAuthorities: authOptions.knownAuthorities,\r\n        cloudDiscoveryMetadata: cloudDiscoveryMetadata,\r\n    };\r\n}\n\nexport { Authority, buildStaticAuthorityOptions, formatAuthorityUri, getTenantFromAuthorityString };\n//# sourceMappingURL=Authority.mjs.map\n","/*! @azure/msal-common v15.12.0 2025-08-19 */\n'use strict';\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nfunction isOpenIdConfigResponse(response) {\r\n    return (response.hasOwnProperty(\"authorization_endpoint\") &&\r\n        response.hasOwnProperty(\"token_endpoint\") &&\r\n        response.hasOwnProperty(\"issuer\") &&\r\n        response.hasOwnProperty(\"jwks_uri\"));\r\n}\n\nexport { isOpenIdConfigResponse };\n//# sourceMappingURL=OpenIdConfigResponse.mjs.map\n","/*! @azure/msal-common v15.12.0 2025-08-19 */\n'use strict';\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nfunction isCloudInstanceDiscoveryResponse(response) {\r\n    return (response.hasOwnProperty(\"tenant_discovery_endpoint\") &&\r\n        response.hasOwnProperty(\"metadata\"));\r\n}\n\nexport { isCloudInstanceDiscoveryResponse };\n//# sourceMappingURL=CloudInstanceDiscoveryResponse.mjs.map\n","/*! @azure/msal-common v15.12.0 2025-08-19 */\n'use strict';\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nfunction isCloudInstanceDiscoveryErrorResponse(response) {\r\n    return (response.hasOwnProperty(\"error\") &&\r\n        response.hasOwnProperty(\"error_description\"));\r\n}\n\nexport { isCloudInstanceDiscoveryErrorResponse };\n//# sourceMappingURL=CloudInstanceDiscoveryErrorResponse.mjs.map\n","/*! @azure/msal-common v15.12.0 2025-08-19 */\n'use strict';\nimport { Authority, formatAuthorityUri } from './Authority.mjs';\nimport { createClientAuthError } from '../error/ClientAuthError.mjs';\nimport { PerformanceEvents } from '../telemetry/performance/PerformanceEvent.mjs';\nimport { invokeAsync } from '../utils/FunctionWrappers.mjs';\nimport { endpointResolutionError } from '../error/ClientAuthErrorCodes.mjs';\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * Create an authority object of the correct type based on the url\r\n * Performs basic authority validation - checks to see if the authority is of a valid type (i.e. aad, b2c, adfs)\r\n *\r\n * Also performs endpoint discovery.\r\n *\r\n * @param authorityUri\r\n * @param networkClient\r\n * @param protocolMode\r\n * @internal\r\n */\r\nasync function createDiscoveredInstance(authorityUri, networkClient, cacheManager, authorityOptions, logger, correlationId, performanceClient) {\r\n    performanceClient?.addQueueMeasurement(PerformanceEvents.AuthorityFactoryCreateDiscoveredInstance, correlationId);\r\n    const authorityUriFinal = Authority.transformCIAMAuthority(formatAuthorityUri(authorityUri));\r\n    // Initialize authority and perform discovery endpoint check.\r\n    const acquireTokenAuthority = new Authority(authorityUriFinal, networkClient, cacheManager, authorityOptions, logger, correlationId, performanceClient);\r\n    try {\r\n        await invokeAsync(acquireTokenAuthority.resolveEndpointsAsync.bind(acquireTokenAuthority), PerformanceEvents.AuthorityResolveEndpointsAsync, logger, performanceClient, correlationId)();\r\n        return acquireTokenAuthority;\r\n    }\r\n    catch (e) {\r\n        throw createClientAuthError(endpointResolutionError);\r\n    }\r\n}\n\nexport { createDiscoveredInstance };\n//# sourceMappingURL=AuthorityFactory.mjs.map\n","/*! @azure/msal-common v15.12.0 2025-08-19 */\n'use strict';\nimport { AuthError } from './AuthError.mjs';\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * Error thrown when there is an error with the server code, for example, unavailability.\r\n */\r\nclass ServerError extends AuthError {\r\n    constructor(errorCode, errorMessage, subError, errorNo, status) {\r\n        super(errorCode, errorMessage, subError);\r\n        this.name = \"ServerError\";\r\n        this.errorNo = errorNo;\r\n        this.status = status;\r\n        Object.setPrototypeOf(this, ServerError.prototype);\r\n    }\r\n}\n\nexport { ServerError };\n//# sourceMappingURL=ServerError.mjs.map\n","/*! @azure/msal-common v15.12.0 2025-08-19 */\n'use strict';\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nfunction getRequestThumbprint(clientId, request, homeAccountId) {\r\n    return {\r\n        clientId: clientId,\r\n        authority: request.authority,\r\n        scopes: request.scopes,\r\n        homeAccountIdentifier: homeAccountId,\r\n        claims: request.claims,\r\n        authenticationScheme: request.authenticationScheme,\r\n        resourceRequestMethod: request.resourceRequestMethod,\r\n        resourceRequestUri: request.resourceRequestUri,\r\n        shrClaims: request.shrClaims,\r\n        sshKid: request.sshKid,\r\n        embeddedClientId: request.embeddedClientId || request.tokenBodyParameters?.clientId,\r\n    };\r\n}\n\nexport { getRequestThumbprint };\n//# sourceMappingURL=RequestThumbprint.mjs.map\n","/*! @azure/msal-common v15.12.0 2025-08-19 */\n'use strict';\nimport { ThrottlingConstants, Constants, HeaderNames } from '../utils/Constants.mjs';\nimport { ServerError } from '../error/ServerError.mjs';\nimport { getRequestThumbprint } from './RequestThumbprint.mjs';\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/** @internal */\r\nclass ThrottlingUtils {\r\n    /**\r\n     * Prepares a RequestThumbprint to be stored as a key.\r\n     * @param thumbprint\r\n     */\r\n    static generateThrottlingStorageKey(thumbprint) {\r\n        return `${ThrottlingConstants.THROTTLING_PREFIX}.${JSON.stringify(thumbprint)}`;\r\n    }\r\n    /**\r\n     * Performs necessary throttling checks before a network request.\r\n     * @param cacheManager\r\n     * @param thumbprint\r\n     */\r\n    static preProcess(cacheManager, thumbprint, correlationId) {\r\n        const key = ThrottlingUtils.generateThrottlingStorageKey(thumbprint);\r\n        const value = cacheManager.getThrottlingCache(key);\r\n        if (value) {\r\n            if (value.throttleTime < Date.now()) {\r\n                cacheManager.removeItem(key, correlationId);\r\n                return;\r\n            }\r\n            throw new ServerError(value.errorCodes?.join(\" \") || Constants.EMPTY_STRING, value.errorMessage, value.subError);\r\n        }\r\n    }\r\n    /**\r\n     * Performs necessary throttling checks after a network request.\r\n     * @param cacheManager\r\n     * @param thumbprint\r\n     * @param response\r\n     */\r\n    static postProcess(cacheManager, thumbprint, response, correlationId) {\r\n        if (ThrottlingUtils.checkResponseStatus(response) ||\r\n            ThrottlingUtils.checkResponseForRetryAfter(response)) {\r\n            const thumbprintValue = {\r\n                throttleTime: ThrottlingUtils.calculateThrottleTime(parseInt(response.headers[HeaderNames.RETRY_AFTER])),\r\n                error: response.body.error,\r\n                errorCodes: response.body.error_codes,\r\n                errorMessage: response.body.error_description,\r\n                subError: response.body.suberror,\r\n            };\r\n            cacheManager.setThrottlingCache(ThrottlingUtils.generateThrottlingStorageKey(thumbprint), thumbprintValue, correlationId);\r\n        }\r\n    }\r\n    /**\r\n     * Checks a NetworkResponse object's status codes against 429 or 5xx\r\n     * @param response\r\n     */\r\n    static checkResponseStatus(response) {\r\n        return (response.status === 429 ||\r\n            (response.status >= 500 && response.status < 600));\r\n    }\r\n    /**\r\n     * Checks a NetworkResponse object's RetryAfter header\r\n     * @param response\r\n     */\r\n    static checkResponseForRetryAfter(response) {\r\n        if (response.headers) {\r\n            return (response.headers.hasOwnProperty(HeaderNames.RETRY_AFTER) &&\r\n                (response.status < 200 || response.status >= 300));\r\n        }\r\n        return false;\r\n    }\r\n    /**\r\n     * Calculates the Unix-time value for a throttle to expire given throttleTime in seconds.\r\n     * @param throttleTime\r\n     */\r\n    static calculateThrottleTime(throttleTime) {\r\n        const time = throttleTime <= 0 ? 0 : throttleTime;\r\n        const currentSeconds = Date.now() / 1000;\r\n        return Math.floor(Math.min(currentSeconds +\r\n            (time || ThrottlingConstants.DEFAULT_THROTTLE_TIME_SECONDS), currentSeconds +\r\n            ThrottlingConstants.DEFAULT_MAX_THROTTLE_TIME_SECONDS) * 1000);\r\n    }\r\n    static removeThrottle(cacheManager, clientId, request, homeAccountIdentifier) {\r\n        const thumbprint = getRequestThumbprint(clientId, request, homeAccountIdentifier);\r\n        const key = this.generateThrottlingStorageKey(thumbprint);\r\n        cacheManager.removeItem(key, request.correlationId);\r\n    }\r\n}\n\nexport { ThrottlingUtils };\n//# sourceMappingURL=ThrottlingUtils.mjs.map\n","/*! @azure/msal-common v15.12.0 2025-08-19 */\n'use strict';\nimport { AuthError } from './AuthError.mjs';\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * Represents network related errors\r\n */\r\nclass NetworkError extends AuthError {\r\n    constructor(error, httpStatus, responseHeaders) {\r\n        super(error.errorCode, error.errorMessage, error.subError);\r\n        Object.setPrototypeOf(this, NetworkError.prototype);\r\n        this.name = \"NetworkError\";\r\n        this.error = error;\r\n        this.httpStatus = httpStatus;\r\n        this.responseHeaders = responseHeaders;\r\n    }\r\n}\r\n/**\r\n * Creates NetworkError object for a failed network request\r\n * @param error - Error to be thrown back to the caller\r\n * @param httpStatus - Status code of the network request\r\n * @param responseHeaders - Response headers of the network request, when available\r\n * @returns NetworkError object\r\n */\r\nfunction createNetworkError(error, httpStatus, responseHeaders, additionalError) {\r\n    error.errorMessage = `${error.errorMessage}, additionalErrorInfo: error.name:${additionalError?.name}, error.message:${additionalError?.message}`;\r\n    return new NetworkError(error, httpStatus, responseHeaders);\r\n}\n\nexport { NetworkError, createNetworkError };\n//# sourceMappingURL=NetworkError.mjs.map\n","/*! @azure/msal-common v15.12.0 2025-08-19 */\n'use strict';\nimport { buildClientConfiguration } from '../config/ClientConfiguration.mjs';\nimport { Logger } from '../logger/Logger.mjs';\nimport { Constants, HeaderNames } from '../utils/Constants.mjs';\nimport { name, version } from '../packageMetadata.mjs';\nimport { CcsCredentialType } from '../account/CcsCredential.mjs';\nimport { buildClientInfoFromHomeAccountId } from '../account/ClientInfo.mjs';\nimport { addBrokerParameters, addExtraQueryParameters, addCorrelationId, instrumentBrokerParams } from '../request/RequestParameterBuilder.mjs';\nimport { mapToQueryString } from '../utils/UrlUtils.mjs';\nimport { createDiscoveredInstance } from '../authority/AuthorityFactory.mjs';\nimport { PerformanceEvents } from '../telemetry/performance/PerformanceEvent.mjs';\nimport { ThrottlingUtils } from '../network/ThrottlingUtils.mjs';\nimport { AuthError } from '../error/AuthError.mjs';\nimport { createClientAuthError } from '../error/ClientAuthError.mjs';\nimport { NetworkError } from '../error/NetworkError.mjs';\nimport { invokeAsync } from '../utils/FunctionWrappers.mjs';\nimport { networkError } from '../error/ClientAuthErrorCodes.mjs';\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * Base application class which will construct requests to send to and handle responses from the Microsoft STS using the authorization code flow.\r\n * @internal\r\n */\r\nclass BaseClient {\r\n    constructor(configuration, performanceClient) {\r\n        // Set the configuration\r\n        this.config = buildClientConfiguration(configuration);\r\n        // Initialize the logger\r\n        this.logger = new Logger(this.config.loggerOptions, name, version);\r\n        // Initialize crypto\r\n        this.cryptoUtils = this.config.cryptoInterface;\r\n        // Initialize storage interface\r\n        this.cacheManager = this.config.storageInterface;\r\n        // Set the network interface\r\n        this.networkClient = this.config.networkInterface;\r\n        // Set TelemetryManager\r\n        this.serverTelemetryManager = this.config.serverTelemetryManager;\r\n        // set Authority\r\n        this.authority = this.config.authOptions.authority;\r\n        // set performance telemetry client\r\n        this.performanceClient = performanceClient;\r\n    }\r\n    /**\r\n     * Creates default headers for requests to token endpoint\r\n     */\r\n    createTokenRequestHeaders(ccsCred) {\r\n        const headers = {};\r\n        headers[HeaderNames.CONTENT_TYPE] = Constants.URL_FORM_CONTENT_TYPE;\r\n        if (!this.config.systemOptions.preventCorsPreflight && ccsCred) {\r\n            switch (ccsCred.type) {\r\n                case CcsCredentialType.HOME_ACCOUNT_ID:\r\n                    try {\r\n                        const clientInfo = buildClientInfoFromHomeAccountId(ccsCred.credential);\r\n                        headers[HeaderNames.CCS_HEADER] = `Oid:${clientInfo.uid}@${clientInfo.utid}`;\r\n                    }\r\n                    catch (e) {\r\n                        this.logger.verbose(\"Could not parse home account ID for CCS Header: \" +\r\n                            e);\r\n                    }\r\n                    break;\r\n                case CcsCredentialType.UPN:\r\n                    headers[HeaderNames.CCS_HEADER] = `UPN: ${ccsCred.credential}`;\r\n                    break;\r\n            }\r\n        }\r\n        return headers;\r\n    }\r\n    /**\r\n     * Http post to token endpoint\r\n     * @param tokenEndpoint\r\n     * @param queryString\r\n     * @param headers\r\n     * @param thumbprint\r\n     */\r\n    async executePostToTokenEndpoint(tokenEndpoint, queryString, headers, thumbprint, correlationId, queuedEvent) {\r\n        if (queuedEvent) {\r\n            this.performanceClient?.addQueueMeasurement(queuedEvent, correlationId);\r\n        }\r\n        const response = await this.sendPostRequest(thumbprint, tokenEndpoint, { body: queryString, headers: headers }, correlationId);\r\n        if (this.config.serverTelemetryManager &&\r\n            response.status < 500 &&\r\n            response.status !== 429) {\r\n            // Telemetry data successfully logged by server, clear Telemetry cache\r\n            this.config.serverTelemetryManager.clearTelemetryCache();\r\n        }\r\n        return response;\r\n    }\r\n    /**\r\n     * Wraps sendPostRequestAsync with necessary preflight and postflight logic\r\n     * @param thumbprint - Request thumbprint for throttling\r\n     * @param tokenEndpoint - Endpoint to make the POST to\r\n     * @param options - Body and Headers to include on the POST request\r\n     * @param correlationId - CorrelationId for telemetry\r\n     */\r\n    async sendPostRequest(thumbprint, tokenEndpoint, options, correlationId) {\r\n        ThrottlingUtils.preProcess(this.cacheManager, thumbprint, correlationId);\r\n        let response;\r\n        try {\r\n            response = await invokeAsync((this.networkClient.sendPostRequestAsync.bind(this.networkClient)), PerformanceEvents.NetworkClientSendPostRequestAsync, this.logger, this.performanceClient, correlationId)(tokenEndpoint, options);\r\n            const responseHeaders = response.headers || {};\r\n            this.performanceClient?.addFields({\r\n                refreshTokenSize: response.body.refresh_token?.length || 0,\r\n                httpVerToken: responseHeaders[HeaderNames.X_MS_HTTP_VERSION] || \"\",\r\n                requestId: responseHeaders[HeaderNames.X_MS_REQUEST_ID] || \"\",\r\n            }, correlationId);\r\n        }\r\n        catch (e) {\r\n            if (e instanceof NetworkError) {\r\n                const responseHeaders = e.responseHeaders;\r\n                if (responseHeaders) {\r\n                    this.performanceClient?.addFields({\r\n                        httpVerToken: responseHeaders[HeaderNames.X_MS_HTTP_VERSION] || \"\",\r\n                        requestId: responseHeaders[HeaderNames.X_MS_REQUEST_ID] ||\r\n                            \"\",\r\n                        contentTypeHeader: responseHeaders[HeaderNames.CONTENT_TYPE] ||\r\n                            undefined,\r\n                        contentLengthHeader: responseHeaders[HeaderNames.CONTENT_LENGTH] ||\r\n                            undefined,\r\n                        httpStatus: e.httpStatus,\r\n                    }, correlationId);\r\n                }\r\n                throw e.error;\r\n            }\r\n            if (e instanceof AuthError) {\r\n                throw e;\r\n            }\r\n            else {\r\n                throw createClientAuthError(networkError);\r\n            }\r\n        }\r\n        ThrottlingUtils.postProcess(this.cacheManager, thumbprint, response, correlationId);\r\n        return response;\r\n    }\r\n    /**\r\n     * Updates the authority object of the client. Endpoint discovery must be completed.\r\n     * @param updatedAuthority\r\n     */\r\n    async updateAuthority(cloudInstanceHostname, correlationId) {\r\n        this.performanceClient?.addQueueMeasurement(PerformanceEvents.UpdateTokenEndpointAuthority, correlationId);\r\n        const cloudInstanceAuthorityUri = `https://${cloudInstanceHostname}/${this.authority.tenant}/`;\r\n        const cloudInstanceAuthority = await createDiscoveredInstance(cloudInstanceAuthorityUri, this.networkClient, this.cacheManager, this.authority.options, this.logger, correlationId, this.performanceClient);\r\n        this.authority = cloudInstanceAuthority;\r\n    }\r\n    /**\r\n     * Creates query string for the /token request\r\n     * @param request\r\n     */\r\n    createTokenQueryParameters(request) {\r\n        const parameters = new Map();\r\n        if (request.embeddedClientId) {\r\n            addBrokerParameters(parameters, this.config.authOptions.clientId, this.config.authOptions.redirectUri);\r\n        }\r\n        if (request.tokenQueryParameters) {\r\n            addExtraQueryParameters(parameters, request.tokenQueryParameters);\r\n        }\r\n        addCorrelationId(parameters, request.correlationId);\r\n        instrumentBrokerParams(parameters, request.correlationId, this.performanceClient);\r\n        return mapToQueryString(parameters);\r\n    }\r\n}\n\nexport { BaseClient };\n//# sourceMappingURL=BaseClient.mjs.map\n","/*! @azure/msal-common v15.12.0 2025-08-19 */\n'use strict';\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * Gets tenantId from available ID token claims to set as credential realm with the following precedence:\r\n * 1. tid - if the token is acquired from an Azure AD tenant tid will be present\r\n * 2. tfp - if the token is acquired from a modern B2C tenant tfp should be present\r\n * 3. acr - if the token is acquired from a legacy B2C tenant acr should be present\r\n * Downcased to match the realm case-insensitive comparison requirements\r\n * @param idTokenClaims\r\n * @returns\r\n */\r\nfunction getTenantIdFromIdTokenClaims(idTokenClaims) {\r\n    if (idTokenClaims) {\r\n        const tenantId = idTokenClaims.tid || idTokenClaims.tfp || idTokenClaims.acr;\r\n        return tenantId || null;\r\n    }\r\n    return null;\r\n}\n\nexport { getTenantIdFromIdTokenClaims };\n//# sourceMappingURL=TokenClaims.mjs.map\n","/*! @azure/msal-common v15.12.0 2025-08-19 */\n'use strict';\nimport { CacheAccountType } from '../../utils/Constants.mjs';\nimport { buildClientInfo } from '../../account/ClientInfo.mjs';\nimport { buildTenantProfile } from '../../account/AccountInfo.mjs';\nimport { createClientAuthError } from '../../error/ClientAuthError.mjs';\nimport { AuthorityType } from '../../authority/AuthorityType.mjs';\nimport { getTenantIdFromIdTokenClaims } from '../../account/TokenClaims.mjs';\nimport { ProtocolMode } from '../../authority/ProtocolMode.mjs';\nimport { invalidCacheEnvironment } from '../../error/ClientAuthErrorCodes.mjs';\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * Type that defines required and optional parameters for an Account field (based on universal cache schema implemented by all MSALs).\r\n *\r\n * Key : Value Schema\r\n *\r\n * Key: <home_account_id>-<environment>-<realm*>\r\n *\r\n * Value Schema:\r\n * {\r\n *      homeAccountId: home account identifier for the auth scheme,\r\n *      environment: entity that issued the token, represented as a full host\r\n *      realm: Full tenant or organizational identifier that the account belongs to\r\n *      localAccountId: Original tenant-specific accountID, usually used for legacy cases\r\n *      username: primary username that represents the user, usually corresponds to preferred_username in the v2 endpt\r\n *      authorityType: Accounts authority type as a string\r\n *      name: Full name for the account, including given name and family name,\r\n *      lastModificationTime: last time this entity was modified in the cache\r\n *      lastModificationApp:\r\n *      nativeAccountId: Account identifier on the native device\r\n *      tenantProfiles: Array of tenant profile objects for each tenant that the account has authenticated with in the browser\r\n * }\r\n * @internal\r\n */\r\nclass AccountEntity {\r\n    /**\r\n     * Returns the AccountInfo interface for this account.\r\n     */\r\n    getAccountInfo() {\r\n        return {\r\n            homeAccountId: this.homeAccountId,\r\n            environment: this.environment,\r\n            tenantId: this.realm,\r\n            username: this.username,\r\n            localAccountId: this.localAccountId,\r\n            loginHint: this.loginHint,\r\n            name: this.name,\r\n            nativeAccountId: this.nativeAccountId,\r\n            authorityType: this.authorityType,\r\n            // Deserialize tenant profiles array into a Map\r\n            tenantProfiles: new Map((this.tenantProfiles || []).map((tenantProfile) => {\r\n                return [tenantProfile.tenantId, tenantProfile];\r\n            })),\r\n        };\r\n    }\r\n    /**\r\n     * Returns true if the account entity is in single tenant format (outdated), false otherwise\r\n     */\r\n    isSingleTenant() {\r\n        return !this.tenantProfiles;\r\n    }\r\n    /**\r\n     * Build Account cache from IdToken, clientInfo and authority/policy. Associated with AAD.\r\n     * @param accountDetails\r\n     */\r\n    static createAccount(accountDetails, authority, base64Decode) {\r\n        const account = new AccountEntity();\r\n        if (authority.authorityType === AuthorityType.Adfs) {\r\n            account.authorityType = CacheAccountType.ADFS_ACCOUNT_TYPE;\r\n        }\r\n        else if (authority.protocolMode === ProtocolMode.OIDC) {\r\n            account.authorityType = CacheAccountType.GENERIC_ACCOUNT_TYPE;\r\n        }\r\n        else {\r\n            account.authorityType = CacheAccountType.MSSTS_ACCOUNT_TYPE;\r\n        }\r\n        let clientInfo;\r\n        if (accountDetails.clientInfo && base64Decode) {\r\n            clientInfo = buildClientInfo(accountDetails.clientInfo, base64Decode);\r\n        }\r\n        account.clientInfo = accountDetails.clientInfo;\r\n        account.homeAccountId = accountDetails.homeAccountId;\r\n        account.nativeAccountId = accountDetails.nativeAccountId;\r\n        const env = accountDetails.environment ||\r\n            (authority && authority.getPreferredCache());\r\n        if (!env) {\r\n            throw createClientAuthError(invalidCacheEnvironment);\r\n        }\r\n        account.environment = env;\r\n        // non AAD scenarios can have empty realm\r\n        account.realm =\r\n            clientInfo?.utid ||\r\n                getTenantIdFromIdTokenClaims(accountDetails.idTokenClaims) ||\r\n                \"\";\r\n        // How do you account for MSA CID here?\r\n        account.localAccountId =\r\n            clientInfo?.uid ||\r\n                accountDetails.idTokenClaims?.oid ||\r\n                accountDetails.idTokenClaims?.sub ||\r\n                \"\";\r\n        /*\r\n         * In B2C scenarios the emails claim is used instead of preferred_username and it is an array.\r\n         * In most cases it will contain a single email. This field should not be relied upon if a custom\r\n         * policy is configured to return more than 1 email.\r\n         */\r\n        const preferredUsername = accountDetails.idTokenClaims?.preferred_username ||\r\n            accountDetails.idTokenClaims?.upn;\r\n        const email = accountDetails.idTokenClaims?.emails\r\n            ? accountDetails.idTokenClaims.emails[0]\r\n            : null;\r\n        account.username = preferredUsername || email || \"\";\r\n        account.loginHint = accountDetails.idTokenClaims?.login_hint;\r\n        account.name = accountDetails.idTokenClaims?.name || \"\";\r\n        account.cloudGraphHostName = accountDetails.cloudGraphHostName;\r\n        account.msGraphHost = accountDetails.msGraphHost;\r\n        if (accountDetails.tenantProfiles) {\r\n            account.tenantProfiles = accountDetails.tenantProfiles;\r\n        }\r\n        else {\r\n            const tenantProfile = buildTenantProfile(accountDetails.homeAccountId, account.localAccountId, account.realm, accountDetails.idTokenClaims);\r\n            account.tenantProfiles = [tenantProfile];\r\n        }\r\n        return account;\r\n    }\r\n    /**\r\n     * Creates an AccountEntity object from AccountInfo\r\n     * @param accountInfo\r\n     * @param cloudGraphHostName\r\n     * @param msGraphHost\r\n     * @returns\r\n     */\r\n    static createFromAccountInfo(accountInfo, cloudGraphHostName, msGraphHost) {\r\n        const account = new AccountEntity();\r\n        account.authorityType =\r\n            accountInfo.authorityType || CacheAccountType.GENERIC_ACCOUNT_TYPE;\r\n        account.homeAccountId = accountInfo.homeAccountId;\r\n        account.localAccountId = accountInfo.localAccountId;\r\n        account.nativeAccountId = accountInfo.nativeAccountId;\r\n        account.realm = accountInfo.tenantId;\r\n        account.environment = accountInfo.environment;\r\n        account.username = accountInfo.username;\r\n        account.name = accountInfo.name;\r\n        account.loginHint = accountInfo.loginHint;\r\n        account.cloudGraphHostName = cloudGraphHostName;\r\n        account.msGraphHost = msGraphHost;\r\n        // Serialize tenant profiles map into an array\r\n        account.tenantProfiles = Array.from(accountInfo.tenantProfiles?.values() || []);\r\n        return account;\r\n    }\r\n    /**\r\n     * Generate HomeAccountId from server response\r\n     * @param serverClientInfo\r\n     * @param authType\r\n     */\r\n    static generateHomeAccountId(serverClientInfo, authType, logger, cryptoObj, idTokenClaims) {\r\n        // since ADFS/DSTS do not have tid and does not set client_info\r\n        if (!(authType === AuthorityType.Adfs ||\r\n            authType === AuthorityType.Dsts)) {\r\n            // for cases where there is clientInfo\r\n            if (serverClientInfo) {\r\n                try {\r\n                    const clientInfo = buildClientInfo(serverClientInfo, cryptoObj.base64Decode);\r\n                    if (clientInfo.uid && clientInfo.utid) {\r\n                        return `${clientInfo.uid}.${clientInfo.utid}`;\r\n                    }\r\n                }\r\n                catch (e) { }\r\n            }\r\n            logger.warning(\"No client info in response\");\r\n        }\r\n        // default to \"sub\" claim\r\n        return idTokenClaims?.sub || \"\";\r\n    }\r\n    /**\r\n     * Validates an entity: checks for all expected params\r\n     * @param entity\r\n     */\r\n    static isAccountEntity(entity) {\r\n        if (!entity) {\r\n            return false;\r\n        }\r\n        return (entity.hasOwnProperty(\"homeAccountId\") &&\r\n            entity.hasOwnProperty(\"environment\") &&\r\n            entity.hasOwnProperty(\"realm\") &&\r\n            entity.hasOwnProperty(\"localAccountId\") &&\r\n            entity.hasOwnProperty(\"username\") &&\r\n            entity.hasOwnProperty(\"authorityType\"));\r\n    }\r\n    /**\r\n     * Helper function to determine whether 2 accountInfo objects represent the same account\r\n     * @param accountA\r\n     * @param accountB\r\n     * @param compareClaims - If set to true idTokenClaims will also be compared to determine account equality\r\n     */\r\n    static accountInfoIsEqual(accountA, accountB, compareClaims) {\r\n        if (!accountA || !accountB) {\r\n            return false;\r\n        }\r\n        let claimsMatch = true; // default to true so as to not fail comparison below if compareClaims: false\r\n        if (compareClaims) {\r\n            const accountAClaims = (accountA.idTokenClaims ||\r\n                {});\r\n            const accountBClaims = (accountB.idTokenClaims ||\r\n                {});\r\n            // issued at timestamp and nonce are expected to change each time a new id token is acquired\r\n            claimsMatch =\r\n                accountAClaims.iat === accountBClaims.iat &&\r\n                    accountAClaims.nonce === accountBClaims.nonce;\r\n        }\r\n        return (accountA.homeAccountId === accountB.homeAccountId &&\r\n            accountA.localAccountId === accountB.localAccountId &&\r\n            accountA.username === accountB.username &&\r\n            accountA.tenantId === accountB.tenantId &&\r\n            accountA.loginHint === accountB.loginHint &&\r\n            accountA.environment === accountB.environment &&\r\n            accountA.nativeAccountId === accountB.nativeAccountId &&\r\n            claimsMatch);\r\n    }\r\n}\n\nexport { AccountEntity };\n//# sourceMappingURL=AccountEntity.mjs.map\n","/*! @azure/msal-common v15.12.0 2025-08-19 */\n'use strict';\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n// Codes defined by MSAL\r\nconst noTokensFound = \"no_tokens_found\";\r\nconst nativeAccountUnavailable = \"native_account_unavailable\";\r\nconst refreshTokenExpired = \"refresh_token_expired\";\r\nconst uxNotAllowed = \"ux_not_allowed\";\r\n// Codes potentially returned by server\r\nconst interactionRequired = \"interaction_required\";\r\nconst consentRequired = \"consent_required\";\r\nconst loginRequired = \"login_required\";\r\nconst badToken = \"bad_token\";\n\nexport { badToken, consentRequired, interactionRequired, loginRequired, nativeAccountUnavailable, noTokensFound, refreshTokenExpired, uxNotAllowed };\n//# sourceMappingURL=InteractionRequiredAuthErrorCodes.mjs.map\n","/*! @azure/msal-common v15.12.0 2025-08-19 */\n'use strict';\nimport { Constants } from '../utils/Constants.mjs';\nimport { AuthError } from './AuthError.mjs';\nimport { badToken, nativeAccountUnavailable, noTokensFound, uxNotAllowed, refreshTokenExpired, interactionRequired, consentRequired, loginRequired } from './InteractionRequiredAuthErrorCodes.mjs';\nimport * as InteractionRequiredAuthErrorCodes from './InteractionRequiredAuthErrorCodes.mjs';\nexport { InteractionRequiredAuthErrorCodes };\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * InteractionRequiredServerErrorMessage contains string constants used by error codes and messages returned by the server indicating interaction is required\r\n */\r\nconst InteractionRequiredServerErrorMessage = [\r\n    interactionRequired,\r\n    consentRequired,\r\n    loginRequired,\r\n    badToken,\r\n    uxNotAllowed,\r\n];\r\nconst InteractionRequiredAuthSubErrorMessage = [\r\n    \"message_only\",\r\n    \"additional_action\",\r\n    \"basic_action\",\r\n    \"user_password_expired\",\r\n    \"consent_required\",\r\n    \"bad_token\",\r\n];\r\nconst InteractionRequiredAuthErrorMessages = {\r\n    [noTokensFound]: \"No refresh token found in the cache. Please sign-in.\",\r\n    [nativeAccountUnavailable]: \"The requested account is not available in the native broker. It may have been deleted or logged out. Please sign-in again using an interactive API.\",\r\n    [refreshTokenExpired]: \"Refresh token has expired.\",\r\n    [badToken]: \"Identity provider returned bad_token due to an expired or invalid refresh token. Please invoke an interactive API to resolve.\",\r\n    [uxNotAllowed]: \"`canShowUI` flag in Edge was set to false. User interaction required on web page. Please invoke an interactive API to resolve.\",\r\n};\r\n/**\r\n * Interaction required errors defined by the SDK\r\n * @deprecated Use InteractionRequiredAuthErrorCodes instead\r\n */\r\nconst InteractionRequiredAuthErrorMessage = {\r\n    noTokensFoundError: {\r\n        code: noTokensFound,\r\n        desc: InteractionRequiredAuthErrorMessages[noTokensFound],\r\n    },\r\n    native_account_unavailable: {\r\n        code: nativeAccountUnavailable,\r\n        desc: InteractionRequiredAuthErrorMessages[nativeAccountUnavailable],\r\n    },\r\n    bad_token: {\r\n        code: badToken,\r\n        desc: InteractionRequiredAuthErrorMessages[badToken],\r\n    },\r\n};\r\n/**\r\n * Error thrown when user interaction is required.\r\n */\r\nclass InteractionRequiredAuthError extends AuthError {\r\n    constructor(errorCode, errorMessage, subError, timestamp, traceId, correlationId, claims, errorNo) {\r\n        super(errorCode, errorMessage, subError);\r\n        Object.setPrototypeOf(this, InteractionRequiredAuthError.prototype);\r\n        this.timestamp = timestamp || Constants.EMPTY_STRING;\r\n        this.traceId = traceId || Constants.EMPTY_STRING;\r\n        this.correlationId = correlationId || Constants.EMPTY_STRING;\r\n        this.claims = claims || Constants.EMPTY_STRING;\r\n        this.name = \"InteractionRequiredAuthError\";\r\n        this.errorNo = errorNo;\r\n    }\r\n}\r\n/**\r\n * Helper function used to determine if an error thrown by the server requires interaction to resolve\r\n * @param errorCode\r\n * @param errorString\r\n * @param subError\r\n */\r\nfunction isInteractionRequiredError(errorCode, errorString, subError) {\r\n    const isInteractionRequiredErrorCode = !!errorCode &&\r\n        InteractionRequiredServerErrorMessage.indexOf(errorCode) > -1;\r\n    const isInteractionRequiredSubError = !!subError &&\r\n        InteractionRequiredAuthSubErrorMessage.indexOf(subError) > -1;\r\n    const isInteractionRequiredErrorDesc = !!errorString &&\r\n        InteractionRequiredServerErrorMessage.some((irErrorCode) => {\r\n            return errorString.indexOf(irErrorCode) > -1;\r\n        });\r\n    return (isInteractionRequiredErrorCode ||\r\n        isInteractionRequiredErrorDesc ||\r\n        isInteractionRequiredSubError);\r\n}\r\n/**\r\n * Creates an InteractionRequiredAuthError\r\n */\r\nfunction createInteractionRequiredAuthError(errorCode) {\r\n    return new InteractionRequiredAuthError(errorCode, InteractionRequiredAuthErrorMessages[errorCode]);\r\n}\n\nexport { InteractionRequiredAuthError, InteractionRequiredAuthErrorMessage, InteractionRequiredAuthSubErrorMessage, InteractionRequiredServerErrorMessage, createInteractionRequiredAuthError, isInteractionRequiredError };\n//# sourceMappingURL=InteractionRequiredAuthError.mjs.map\n","/*! @azure/msal-common v15.12.0 2025-08-19 */\n'use strict';\nimport { Constants } from './Constants.mjs';\nimport { createClientAuthError } from '../error/ClientAuthError.mjs';\nimport { noCryptoObject, invalidState } from '../error/ClientAuthErrorCodes.mjs';\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * Class which provides helpers for OAuth 2.0 protocol specific values\r\n */\r\nclass ProtocolUtils {\r\n    /**\r\n     * Appends user state with random guid, or returns random guid.\r\n     * @param userState\r\n     * @param randomGuid\r\n     */\r\n    static setRequestState(cryptoObj, userState, meta) {\r\n        const libraryState = ProtocolUtils.generateLibraryState(cryptoObj, meta);\r\n        return userState\r\n            ? `${libraryState}${Constants.RESOURCE_DELIM}${userState}`\r\n            : libraryState;\r\n    }\r\n    /**\r\n     * Generates the state value used by the common library.\r\n     * @param randomGuid\r\n     * @param cryptoObj\r\n     */\r\n    static generateLibraryState(cryptoObj, meta) {\r\n        if (!cryptoObj) {\r\n            throw createClientAuthError(noCryptoObject);\r\n        }\r\n        // Create a state object containing a unique id and the timestamp of the request creation\r\n        const stateObj = {\r\n            id: cryptoObj.createNewGuid(),\r\n        };\r\n        if (meta) {\r\n            stateObj.meta = meta;\r\n        }\r\n        const stateString = JSON.stringify(stateObj);\r\n        return cryptoObj.base64Encode(stateString);\r\n    }\r\n    /**\r\n     * Parses the state into the RequestStateObject, which contains the LibraryState info and the state passed by the user.\r\n     * @param state\r\n     * @param cryptoObj\r\n     */\r\n    static parseRequestState(cryptoObj, state) {\r\n        if (!cryptoObj) {\r\n            throw createClientAuthError(noCryptoObject);\r\n        }\r\n        if (!state) {\r\n            throw createClientAuthError(invalidState);\r\n        }\r\n        try {\r\n            // Split the state between library state and user passed state and decode them separately\r\n            const splitState = state.split(Constants.RESOURCE_DELIM);\r\n            const libraryState = splitState[0];\r\n            const userState = splitState.length > 1\r\n                ? splitState.slice(1).join(Constants.RESOURCE_DELIM)\r\n                : Constants.EMPTY_STRING;\r\n            const libraryStateString = cryptoObj.base64Decode(libraryState);\r\n            const libraryStateObj = JSON.parse(libraryStateString);\r\n            return {\r\n                userRequestState: userState || Constants.EMPTY_STRING,\r\n                libraryState: libraryStateObj,\r\n            };\r\n        }\r\n        catch (e) {\r\n            throw createClientAuthError(invalidState);\r\n        }\r\n    }\r\n}\n\nexport { ProtocolUtils };\n//# sourceMappingURL=ProtocolUtils.mjs.map\n","/*! @azure/msal-common v15.12.0 2025-08-19 */\n'use strict';\nimport { nowSeconds } from '../utils/TimeUtils.mjs';\nimport { UrlString } from '../url/UrlString.mjs';\nimport { PerformanceEvents } from '../telemetry/performance/PerformanceEvent.mjs';\nimport { invokeAsync } from '../utils/FunctionWrappers.mjs';\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nconst KeyLocation = {\r\n    SW: \"sw\"};\r\n/** @internal */\r\nclass PopTokenGenerator {\r\n    constructor(cryptoUtils, performanceClient) {\r\n        this.cryptoUtils = cryptoUtils;\r\n        this.performanceClient = performanceClient;\r\n    }\r\n    /**\r\n     * Generates the req_cnf validated at the RP in the POP protocol for SHR parameters\r\n     * and returns an object containing the keyid, the full req_cnf string and the req_cnf string hash\r\n     * @param request\r\n     * @returns\r\n     */\r\n    async generateCnf(request, logger) {\r\n        this.performanceClient?.addQueueMeasurement(PerformanceEvents.PopTokenGenerateCnf, request.correlationId);\r\n        const reqCnf = await invokeAsync(this.generateKid.bind(this), PerformanceEvents.PopTokenGenerateCnf, logger, this.performanceClient, request.correlationId)(request);\r\n        const reqCnfString = this.cryptoUtils.base64UrlEncode(JSON.stringify(reqCnf));\r\n        return {\r\n            kid: reqCnf.kid,\r\n            reqCnfString,\r\n        };\r\n    }\r\n    /**\r\n     * Generates key_id for a SHR token request\r\n     * @param request\r\n     * @returns\r\n     */\r\n    async generateKid(request) {\r\n        this.performanceClient?.addQueueMeasurement(PerformanceEvents.PopTokenGenerateKid, request.correlationId);\r\n        const kidThumbprint = await this.cryptoUtils.getPublicKeyThumbprint(request);\r\n        return {\r\n            kid: kidThumbprint,\r\n            xms_ksl: KeyLocation.SW,\r\n        };\r\n    }\r\n    /**\r\n     * Signs the POP access_token with the local generated key-pair\r\n     * @param accessToken\r\n     * @param request\r\n     * @returns\r\n     */\r\n    async signPopToken(accessToken, keyId, request) {\r\n        return this.signPayload(accessToken, keyId, request);\r\n    }\r\n    /**\r\n     * Utility function to generate the signed JWT for an access_token\r\n     * @param payload\r\n     * @param kid\r\n     * @param request\r\n     * @param claims\r\n     * @returns\r\n     */\r\n    async signPayload(payload, keyId, request, claims) {\r\n        // Deconstruct request to extract SHR parameters\r\n        const { resourceRequestMethod, resourceRequestUri, shrClaims, shrNonce, shrOptions, } = request;\r\n        const resourceUrlString = resourceRequestUri\r\n            ? new UrlString(resourceRequestUri)\r\n            : undefined;\r\n        const resourceUrlComponents = resourceUrlString?.getUrlComponents();\r\n        return this.cryptoUtils.signJwt({\r\n            at: payload,\r\n            ts: nowSeconds(),\r\n            m: resourceRequestMethod?.toUpperCase(),\r\n            u: resourceUrlComponents?.HostNameAndPort,\r\n            nonce: shrNonce || this.cryptoUtils.createNewGuid(),\r\n            p: resourceUrlComponents?.AbsolutePath,\r\n            q: resourceUrlComponents?.QueryString\r\n                ? [[], resourceUrlComponents.QueryString]\r\n                : undefined,\r\n            client_claims: shrClaims || undefined,\r\n            ...claims,\r\n        }, keyId, shrOptions, request.correlationId);\r\n    }\r\n}\n\nexport { PopTokenGenerator };\n//# sourceMappingURL=PopTokenGenerator.mjs.map\n","/*! @azure/msal-common v15.12.0 2025-08-19 */\n'use strict';\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * This class instance helps track the memory changes facilitating\r\n * decisions to read from and write to the persistent cache\r\n */ class TokenCacheContext {\r\n    constructor(tokenCache, hasChanged) {\r\n        this.cache = tokenCache;\r\n        this.hasChanged = hasChanged;\r\n    }\r\n    /**\r\n     * boolean which indicates the changes in cache\r\n     */\r\n    get cacheHasChanged() {\r\n        return this.hasChanged;\r\n    }\r\n    /**\r\n     * function to retrieve the token cache\r\n     */\r\n    get tokenCache() {\r\n        return this.cache;\r\n    }\r\n}\n\nexport { TokenCacheContext };\n//# sourceMappingURL=TokenCacheContext.mjs.map\n","/*! @azure/msal-common v15.12.0 2025-08-19 */\n'use strict';\nimport { createClientAuthError } from '../error/ClientAuthError.mjs';\nimport { ServerError } from '../error/ServerError.mjs';\nimport { ScopeSet } from '../request/ScopeSet.mjs';\nimport { AccountEntity } from '../cache/entities/AccountEntity.mjs';\nimport { isInteractionRequiredError, InteractionRequiredAuthError } from '../error/InteractionRequiredAuthError.mjs';\nimport { ProtocolUtils } from '../utils/ProtocolUtils.mjs';\nimport { Constants, HttpStatus, AuthenticationScheme, THE_FAMILY_ID } from '../utils/Constants.mjs';\nimport { PopTokenGenerator } from '../crypto/PopTokenGenerator.mjs';\nimport { TokenCacheContext } from '../cache/persistence/TokenCacheContext.mjs';\nimport { PerformanceEvents } from '../telemetry/performance/PerformanceEvent.mjs';\nimport { extractTokenClaims, checkMaxAge } from '../account/AuthToken.mjs';\nimport { getTenantIdFromIdTokenClaims } from '../account/TokenClaims.mjs';\nimport { updateAccountTenantProfileData, buildTenantProfile } from '../account/AccountInfo.mjs';\nimport { createIdTokenEntity, createAccessTokenEntity, createRefreshTokenEntity } from '../cache/utils/CacheHelpers.mjs';\nimport { toDateFromSeconds } from '../utils/TimeUtils.mjs';\nimport { nonceMismatch, authTimeNotFound, invalidCacheEnvironment, keyIdMissing } from '../error/ClientAuthErrorCodes.mjs';\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * Class that handles response parsing.\r\n * @internal\r\n */\r\nclass ResponseHandler {\r\n    constructor(clientId, cacheStorage, cryptoObj, logger, serializableCache, persistencePlugin, performanceClient) {\r\n        this.clientId = clientId;\r\n        this.cacheStorage = cacheStorage;\r\n        this.cryptoObj = cryptoObj;\r\n        this.logger = logger;\r\n        this.serializableCache = serializableCache;\r\n        this.persistencePlugin = persistencePlugin;\r\n        this.performanceClient = performanceClient;\r\n    }\r\n    /**\r\n     * Function which validates server authorization token response.\r\n     * @param serverResponse\r\n     * @param refreshAccessToken\r\n     */\r\n    validateTokenResponse(serverResponse, refreshAccessToken) {\r\n        // Check for error\r\n        if (serverResponse.error ||\r\n            serverResponse.error_description ||\r\n            serverResponse.suberror) {\r\n            const errString = `Error(s): ${serverResponse.error_codes || Constants.NOT_AVAILABLE} - Timestamp: ${serverResponse.timestamp || Constants.NOT_AVAILABLE} - Description: ${serverResponse.error_description || Constants.NOT_AVAILABLE} - Correlation ID: ${serverResponse.correlation_id || Constants.NOT_AVAILABLE} - Trace ID: ${serverResponse.trace_id || Constants.NOT_AVAILABLE}`;\r\n            const serverErrorNo = serverResponse.error_codes?.length\r\n                ? serverResponse.error_codes[0]\r\n                : undefined;\r\n            const serverError = new ServerError(serverResponse.error, errString, serverResponse.suberror, serverErrorNo, serverResponse.status);\r\n            // check if 500 error\r\n            if (refreshAccessToken &&\r\n                serverResponse.status &&\r\n                serverResponse.status >= HttpStatus.SERVER_ERROR_RANGE_START &&\r\n                serverResponse.status <= HttpStatus.SERVER_ERROR_RANGE_END) {\r\n                this.logger.warning(`executeTokenRequest:validateTokenResponse - AAD is currently unavailable and the access token is unable to be refreshed.\\n${serverError}`);\r\n                // don't throw an exception, but alert the user via a log that the token was unable to be refreshed\r\n                return;\r\n                // check if 400 error\r\n            }\r\n            else if (refreshAccessToken &&\r\n                serverResponse.status &&\r\n                serverResponse.status >= HttpStatus.CLIENT_ERROR_RANGE_START &&\r\n                serverResponse.status <= HttpStatus.CLIENT_ERROR_RANGE_END) {\r\n                this.logger.warning(`executeTokenRequest:validateTokenResponse - AAD is currently available but is unable to refresh the access token.\\n${serverError}`);\r\n                // don't throw an exception, but alert the user via a log that the token was unable to be refreshed\r\n                return;\r\n            }\r\n            if (isInteractionRequiredError(serverResponse.error, serverResponse.error_description, serverResponse.suberror)) {\r\n                throw new InteractionRequiredAuthError(serverResponse.error, serverResponse.error_description, serverResponse.suberror, serverResponse.timestamp || Constants.EMPTY_STRING, serverResponse.trace_id || Constants.EMPTY_STRING, serverResponse.correlation_id || Constants.EMPTY_STRING, serverResponse.claims || Constants.EMPTY_STRING, serverErrorNo);\r\n            }\r\n            throw serverError;\r\n        }\r\n    }\r\n    /**\r\n     * Returns a constructed token response based on given string. Also manages the cache updates and cleanups.\r\n     * @param serverTokenResponse\r\n     * @param authority\r\n     */\r\n    async handleServerTokenResponse(serverTokenResponse, authority, reqTimestamp, request, authCodePayload, userAssertionHash, handlingRefreshTokenResponse, forceCacheRefreshTokenResponse, serverRequestId) {\r\n        this.performanceClient?.addQueueMeasurement(PerformanceEvents.HandleServerTokenResponse, serverTokenResponse.correlation_id);\r\n        // create an idToken object (not entity)\r\n        let idTokenClaims;\r\n        if (serverTokenResponse.id_token) {\r\n            idTokenClaims = extractTokenClaims(serverTokenResponse.id_token || Constants.EMPTY_STRING, this.cryptoObj.base64Decode);\r\n            // token nonce check (TODO: Add a warning if no nonce is given?)\r\n            if (authCodePayload && authCodePayload.nonce) {\r\n                if (idTokenClaims.nonce !== authCodePayload.nonce) {\r\n                    throw createClientAuthError(nonceMismatch);\r\n                }\r\n            }\r\n            // token max_age check\r\n            if (request.maxAge || request.maxAge === 0) {\r\n                const authTime = idTokenClaims.auth_time;\r\n                if (!authTime) {\r\n                    throw createClientAuthError(authTimeNotFound);\r\n                }\r\n                checkMaxAge(authTime, request.maxAge);\r\n            }\r\n        }\r\n        // generate homeAccountId\r\n        this.homeAccountIdentifier = AccountEntity.generateHomeAccountId(serverTokenResponse.client_info || Constants.EMPTY_STRING, authority.authorityType, this.logger, this.cryptoObj, idTokenClaims);\r\n        // save the response tokens\r\n        let requestStateObj;\r\n        if (!!authCodePayload && !!authCodePayload.state) {\r\n            requestStateObj = ProtocolUtils.parseRequestState(this.cryptoObj, authCodePayload.state);\r\n        }\r\n        // Add keyId from request to serverTokenResponse if defined\r\n        serverTokenResponse.key_id =\r\n            serverTokenResponse.key_id || request.sshKid || undefined;\r\n        const cacheRecord = this.generateCacheRecord(serverTokenResponse, authority, reqTimestamp, request, idTokenClaims, userAssertionHash, authCodePayload);\r\n        let cacheContext;\r\n        try {\r\n            if (this.persistencePlugin && this.serializableCache) {\r\n                this.logger.verbose(\"Persistence enabled, calling beforeCacheAccess\");\r\n                cacheContext = new TokenCacheContext(this.serializableCache, true);\r\n                await this.persistencePlugin.beforeCacheAccess(cacheContext);\r\n            }\r\n            /*\r\n             * When saving a refreshed tokens to the cache, it is expected that the account that was used is present in the cache.\r\n             * If not present, we should return null, as it's the case that another application called removeAccount in between\r\n             * the calls to getAllAccounts and acquireTokenSilent. We should not overwrite that removal, unless explicitly flagged by\r\n             * the developer, as in the case of refresh token flow used in ADAL Node to MSAL Node migration.\r\n             */\r\n            if (handlingRefreshTokenResponse &&\r\n                !forceCacheRefreshTokenResponse &&\r\n                cacheRecord.account) {\r\n                const key = this.cacheStorage.generateAccountKey(cacheRecord.account.getAccountInfo());\r\n                const account = this.cacheStorage.getAccount(key, request.correlationId);\r\n                if (!account) {\r\n                    this.logger.warning(\"Account used to refresh tokens not in persistence, refreshed tokens will not be stored in the cache\");\r\n                    return await ResponseHandler.generateAuthenticationResult(this.cryptoObj, authority, cacheRecord, false, request, idTokenClaims, requestStateObj, undefined, serverRequestId);\r\n                }\r\n            }\r\n            await this.cacheStorage.saveCacheRecord(cacheRecord, request.correlationId, request.storeInCache);\r\n        }\r\n        finally {\r\n            if (this.persistencePlugin &&\r\n                this.serializableCache &&\r\n                cacheContext) {\r\n                this.logger.verbose(\"Persistence enabled, calling afterCacheAccess\");\r\n                await this.persistencePlugin.afterCacheAccess(cacheContext);\r\n            }\r\n        }\r\n        return ResponseHandler.generateAuthenticationResult(this.cryptoObj, authority, cacheRecord, false, request, idTokenClaims, requestStateObj, serverTokenResponse, serverRequestId);\r\n    }\r\n    /**\r\n     * Generates CacheRecord\r\n     * @param serverTokenResponse\r\n     * @param idTokenObj\r\n     * @param authority\r\n     */\r\n    generateCacheRecord(serverTokenResponse, authority, reqTimestamp, request, idTokenClaims, userAssertionHash, authCodePayload) {\r\n        const env = authority.getPreferredCache();\r\n        if (!env) {\r\n            throw createClientAuthError(invalidCacheEnvironment);\r\n        }\r\n        const claimsTenantId = getTenantIdFromIdTokenClaims(idTokenClaims);\r\n        // IdToken: non AAD scenarios can have empty realm\r\n        let cachedIdToken;\r\n        let cachedAccount;\r\n        if (serverTokenResponse.id_token && !!idTokenClaims) {\r\n            cachedIdToken = createIdTokenEntity(this.homeAccountIdentifier, env, serverTokenResponse.id_token, this.clientId, claimsTenantId || \"\");\r\n            cachedAccount = buildAccountToCache(this.cacheStorage, authority, this.homeAccountIdentifier, this.cryptoObj.base64Decode, request.correlationId, idTokenClaims, serverTokenResponse.client_info, env, claimsTenantId, authCodePayload, undefined, // nativeAccountId\r\n            this.logger);\r\n        }\r\n        // AccessToken\r\n        let cachedAccessToken = null;\r\n        if (serverTokenResponse.access_token) {\r\n            // If scopes not returned in server response, use request scopes\r\n            const responseScopes = serverTokenResponse.scope\r\n                ? ScopeSet.fromString(serverTokenResponse.scope)\r\n                : new ScopeSet(request.scopes || []);\r\n            /*\r\n             * Use timestamp calculated before request\r\n             * Server may return timestamps as strings, parse to numbers if so.\r\n             */\r\n            const expiresIn = (typeof serverTokenResponse.expires_in === \"string\"\r\n                ? parseInt(serverTokenResponse.expires_in, 10)\r\n                : serverTokenResponse.expires_in) || 0;\r\n            const extExpiresIn = (typeof serverTokenResponse.ext_expires_in === \"string\"\r\n                ? parseInt(serverTokenResponse.ext_expires_in, 10)\r\n                : serverTokenResponse.ext_expires_in) || 0;\r\n            const refreshIn = (typeof serverTokenResponse.refresh_in === \"string\"\r\n                ? parseInt(serverTokenResponse.refresh_in, 10)\r\n                : serverTokenResponse.refresh_in) || undefined;\r\n            const tokenExpirationSeconds = reqTimestamp + expiresIn;\r\n            const extendedTokenExpirationSeconds = tokenExpirationSeconds + extExpiresIn;\r\n            const refreshOnSeconds = refreshIn && refreshIn > 0\r\n                ? reqTimestamp + refreshIn\r\n                : undefined;\r\n            // non AAD scenarios can have empty realm\r\n            cachedAccessToken = createAccessTokenEntity(this.homeAccountIdentifier, env, serverTokenResponse.access_token, this.clientId, claimsTenantId || authority.tenant || \"\", responseScopes.printScopes(), tokenExpirationSeconds, extendedTokenExpirationSeconds, this.cryptoObj.base64Decode, refreshOnSeconds, serverTokenResponse.token_type, userAssertionHash, serverTokenResponse.key_id, request.claims, request.requestedClaimsHash);\r\n        }\r\n        // refreshToken\r\n        let cachedRefreshToken = null;\r\n        if (serverTokenResponse.refresh_token) {\r\n            let rtExpiresOn;\r\n            if (serverTokenResponse.refresh_token_expires_in) {\r\n                const rtExpiresIn = typeof serverTokenResponse.refresh_token_expires_in ===\r\n                    \"string\"\r\n                    ? parseInt(serverTokenResponse.refresh_token_expires_in, 10)\r\n                    : serverTokenResponse.refresh_token_expires_in;\r\n                rtExpiresOn = reqTimestamp + rtExpiresIn;\r\n            }\r\n            cachedRefreshToken = createRefreshTokenEntity(this.homeAccountIdentifier, env, serverTokenResponse.refresh_token, this.clientId, serverTokenResponse.foci, userAssertionHash, rtExpiresOn);\r\n        }\r\n        // appMetadata\r\n        let cachedAppMetadata = null;\r\n        if (serverTokenResponse.foci) {\r\n            cachedAppMetadata = {\r\n                clientId: this.clientId,\r\n                environment: env,\r\n                familyId: serverTokenResponse.foci,\r\n            };\r\n        }\r\n        return {\r\n            account: cachedAccount,\r\n            idToken: cachedIdToken,\r\n            accessToken: cachedAccessToken,\r\n            refreshToken: cachedRefreshToken,\r\n            appMetadata: cachedAppMetadata,\r\n        };\r\n    }\r\n    /**\r\n     * Creates an @AuthenticationResult from @CacheRecord , @IdToken , and a boolean that states whether or not the result is from cache.\r\n     *\r\n     * Optionally takes a state string that is set as-is in the response.\r\n     *\r\n     * @param cacheRecord\r\n     * @param idTokenObj\r\n     * @param fromTokenCache\r\n     * @param stateString\r\n     */\r\n    static async generateAuthenticationResult(cryptoObj, authority, cacheRecord, fromTokenCache, request, idTokenClaims, requestState, serverTokenResponse, requestId) {\r\n        let accessToken = Constants.EMPTY_STRING;\r\n        let responseScopes = [];\r\n        let expiresOn = null;\r\n        let extExpiresOn;\r\n        let refreshOn;\r\n        let familyId = Constants.EMPTY_STRING;\r\n        if (cacheRecord.accessToken) {\r\n            /*\r\n             * if the request object has `popKid` property, `signPopToken` will be set to false and\r\n             * the token will be returned unsigned\r\n             */\r\n            if (cacheRecord.accessToken.tokenType ===\r\n                AuthenticationScheme.POP &&\r\n                !request.popKid) {\r\n                const popTokenGenerator = new PopTokenGenerator(cryptoObj);\r\n                const { secret, keyId } = cacheRecord.accessToken;\r\n                if (!keyId) {\r\n                    throw createClientAuthError(keyIdMissing);\r\n                }\r\n                accessToken = await popTokenGenerator.signPopToken(secret, keyId, request);\r\n            }\r\n            else {\r\n                accessToken = cacheRecord.accessToken.secret;\r\n            }\r\n            responseScopes = ScopeSet.fromString(cacheRecord.accessToken.target).asArray();\r\n            // Access token expiresOn cached in seconds, converting to Date for AuthenticationResult\r\n            expiresOn = toDateFromSeconds(cacheRecord.accessToken.expiresOn);\r\n            extExpiresOn = toDateFromSeconds(cacheRecord.accessToken.extendedExpiresOn);\r\n            if (cacheRecord.accessToken.refreshOn) {\r\n                refreshOn = toDateFromSeconds(cacheRecord.accessToken.refreshOn);\r\n            }\r\n        }\r\n        if (cacheRecord.appMetadata) {\r\n            familyId =\r\n                cacheRecord.appMetadata.familyId === THE_FAMILY_ID\r\n                    ? THE_FAMILY_ID\r\n                    : \"\";\r\n        }\r\n        const uid = idTokenClaims?.oid || idTokenClaims?.sub || \"\";\r\n        const tid = idTokenClaims?.tid || \"\";\r\n        // for hybrid + native bridge enablement, send back the native account Id\r\n        if (serverTokenResponse?.spa_accountid && !!cacheRecord.account) {\r\n            cacheRecord.account.nativeAccountId =\r\n                serverTokenResponse?.spa_accountid;\r\n        }\r\n        const accountInfo = cacheRecord.account\r\n            ? updateAccountTenantProfileData(cacheRecord.account.getAccountInfo(), undefined, // tenantProfile optional\r\n            idTokenClaims, cacheRecord.idToken?.secret)\r\n            : null;\r\n        return {\r\n            authority: authority.canonicalAuthority,\r\n            uniqueId: uid,\r\n            tenantId: tid,\r\n            scopes: responseScopes,\r\n            account: accountInfo,\r\n            idToken: cacheRecord?.idToken?.secret || \"\",\r\n            idTokenClaims: idTokenClaims || {},\r\n            accessToken: accessToken,\r\n            fromCache: fromTokenCache,\r\n            expiresOn: expiresOn,\r\n            extExpiresOn: extExpiresOn,\r\n            refreshOn: refreshOn,\r\n            correlationId: request.correlationId,\r\n            requestId: requestId || Constants.EMPTY_STRING,\r\n            familyId: familyId,\r\n            tokenType: cacheRecord.accessToken?.tokenType || Constants.EMPTY_STRING,\r\n            state: requestState\r\n                ? requestState.userRequestState\r\n                : Constants.EMPTY_STRING,\r\n            cloudGraphHostName: cacheRecord.account?.cloudGraphHostName ||\r\n                Constants.EMPTY_STRING,\r\n            msGraphHost: cacheRecord.account?.msGraphHost || Constants.EMPTY_STRING,\r\n            code: serverTokenResponse?.spa_code,\r\n            fromNativeBroker: false,\r\n        };\r\n    }\r\n}\r\nfunction buildAccountToCache(cacheStorage, authority, homeAccountId, base64Decode, correlationId, idTokenClaims, clientInfo, environment, claimsTenantId, authCodePayload, nativeAccountId, logger) {\r\n    logger?.verbose(\"setCachedAccount called\");\r\n    // Check if base account is already cached\r\n    const accountKeys = cacheStorage.getAccountKeys();\r\n    const baseAccountKey = accountKeys.find((accountKey) => {\r\n        return accountKey.startsWith(homeAccountId);\r\n    });\r\n    let cachedAccount = null;\r\n    if (baseAccountKey) {\r\n        cachedAccount = cacheStorage.getAccount(baseAccountKey, correlationId);\r\n    }\r\n    const baseAccount = cachedAccount ||\r\n        AccountEntity.createAccount({\r\n            homeAccountId,\r\n            idTokenClaims,\r\n            clientInfo,\r\n            environment,\r\n            cloudGraphHostName: authCodePayload?.cloud_graph_host_name,\r\n            msGraphHost: authCodePayload?.msgraph_host,\r\n            nativeAccountId: nativeAccountId,\r\n        }, authority, base64Decode);\r\n    const tenantProfiles = baseAccount.tenantProfiles || [];\r\n    const tenantId = claimsTenantId || baseAccount.realm;\r\n    if (tenantId &&\r\n        !tenantProfiles.find((tenantProfile) => {\r\n            return tenantProfile.tenantId === tenantId;\r\n        })) {\r\n        const newTenantProfile = buildTenantProfile(homeAccountId, baseAccount.localAccountId, tenantId, idTokenClaims);\r\n        tenantProfiles.push(newTenantProfile);\r\n    }\r\n    baseAccount.tenantProfiles = tenantProfiles;\r\n    return baseAccount;\r\n}\n\nexport { ResponseHandler, buildAccountToCache };\n//# sourceMappingURL=ResponseHandler.mjs.map\n","/*! @azure/msal-common v15.12.0 2025-08-19 */\n'use strict';\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nasync function getClientAssertion(clientAssertion, clientId, tokenEndpoint) {\r\n    if (typeof clientAssertion === \"string\") {\r\n        return clientAssertion;\r\n    }\r\n    else {\r\n        const config = {\r\n            clientId: clientId,\r\n            tokenEndpoint: tokenEndpoint,\r\n        };\r\n        return clientAssertion(config);\r\n    }\r\n}\n\nexport { getClientAssertion };\n//# sourceMappingURL=ClientAssertionUtils.mjs.map\n","/*! @azure/msal-common v15.12.0 2025-08-19 */\n'use strict';\nimport { BaseClient } from './BaseClient.mjs';\nimport { addClientId, addRedirectUri, addScopes, addAuthorizationCode, addLibraryInfo, addApplicationTelemetry, addThrottling, addServerTelemetry, addCodeVerifier, addClientSecret, addClientAssertion, addClientAssertionType, addGrantType, addClientInfo, addPopToken, addSshJwk, addClaims, addCcsUpn, addCcsOid, addBrokerParameters, addExtraQueryParameters, instrumentBrokerParams, addPostLogoutRedirectUri, addCorrelationId, addIdTokenHint, addState, addLogoutHint, addInstanceAware } from '../request/RequestParameterBuilder.mjs';\nimport { mapToQueryString } from '../utils/UrlUtils.mjs';\nimport { Separators, AuthenticationScheme, HeaderNames, GrantType } from '../utils/Constants.mjs';\nimport { RETURN_SPA_CODE, CLIENT_ID } from '../constants/AADServerParamKeys.mjs';\nimport { isOidcProtocolMode } from '../config/ClientConfiguration.mjs';\nimport { ResponseHandler } from '../response/ResponseHandler.mjs';\nimport { StringUtils } from '../utils/StringUtils.mjs';\nimport { createClientAuthError } from '../error/ClientAuthError.mjs';\nimport { UrlString } from '../url/UrlString.mjs';\nimport { PopTokenGenerator } from '../crypto/PopTokenGenerator.mjs';\nimport { nowSeconds } from '../utils/TimeUtils.mjs';\nimport { buildClientInfo, buildClientInfoFromHomeAccountId } from '../account/ClientInfo.mjs';\nimport { CcsCredentialType } from '../account/CcsCredential.mjs';\nimport { createClientConfigurationError } from '../error/ClientConfigurationError.mjs';\nimport { PerformanceEvents } from '../telemetry/performance/PerformanceEvent.mjs';\nimport { invokeAsync } from '../utils/FunctionWrappers.mjs';\nimport { getClientAssertion } from '../utils/ClientAssertionUtils.mjs';\nimport { getRequestThumbprint } from '../network/RequestThumbprint.mjs';\nimport { requestCannotBeMade } from '../error/ClientAuthErrorCodes.mjs';\nimport { logoutRequestEmpty, redirectUriEmpty, missingSshJwk } from '../error/ClientConfigurationErrorCodes.mjs';\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * Oauth2.0 Authorization Code client\r\n * @internal\r\n */\r\nclass AuthorizationCodeClient extends BaseClient {\r\n    constructor(configuration, performanceClient) {\r\n        super(configuration, performanceClient);\r\n        // Flag to indicate if client is for hybrid spa auth code redemption\r\n        this.includeRedirectUri = true;\r\n        this.oidcDefaultScopes =\r\n            this.config.authOptions.authority.options.OIDCOptions?.defaultScopes;\r\n    }\r\n    /**\r\n     * API to acquire a token in exchange of 'authorization_code` acquired by the user in the first leg of the\r\n     * authorization_code_grant\r\n     * @param request\r\n     */\r\n    async acquireToken(request, authCodePayload) {\r\n        this.performanceClient?.addQueueMeasurement(PerformanceEvents.AuthClientAcquireToken, request.correlationId);\r\n        if (!request.code) {\r\n            throw createClientAuthError(requestCannotBeMade);\r\n        }\r\n        const reqTimestamp = nowSeconds();\r\n        const response = await invokeAsync(this.executeTokenRequest.bind(this), PerformanceEvents.AuthClientExecuteTokenRequest, this.logger, this.performanceClient, request.correlationId)(this.authority, request);\r\n        // Retrieve requestId from response headers\r\n        const requestId = response.headers?.[HeaderNames.X_MS_REQUEST_ID];\r\n        const responseHandler = new ResponseHandler(this.config.authOptions.clientId, this.cacheManager, this.cryptoUtils, this.logger, this.config.serializableCache, this.config.persistencePlugin, this.performanceClient);\r\n        // Validate response. This function throws a server error if an error is returned by the server.\r\n        responseHandler.validateTokenResponse(response.body);\r\n        return invokeAsync(responseHandler.handleServerTokenResponse.bind(responseHandler), PerformanceEvents.HandleServerTokenResponse, this.logger, this.performanceClient, request.correlationId)(response.body, this.authority, reqTimestamp, request, authCodePayload, undefined, undefined, undefined, requestId);\r\n    }\r\n    /**\r\n     * Used to log out the current user, and redirect the user to the postLogoutRedirectUri.\r\n     * Default behaviour is to redirect the user to `window.location.href`.\r\n     * @param authorityUri\r\n     */\r\n    getLogoutUri(logoutRequest) {\r\n        // Throw error if logoutRequest is null/undefined\r\n        if (!logoutRequest) {\r\n            throw createClientConfigurationError(logoutRequestEmpty);\r\n        }\r\n        const queryString = this.createLogoutUrlQueryString(logoutRequest);\r\n        // Construct logout URI\r\n        return UrlString.appendQueryString(this.authority.endSessionEndpoint, queryString);\r\n    }\r\n    /**\r\n     * Executes POST request to token endpoint\r\n     * @param authority\r\n     * @param request\r\n     */\r\n    async executeTokenRequest(authority, request) {\r\n        this.performanceClient?.addQueueMeasurement(PerformanceEvents.AuthClientExecuteTokenRequest, request.correlationId);\r\n        const queryParametersString = this.createTokenQueryParameters(request);\r\n        const endpoint = UrlString.appendQueryString(authority.tokenEndpoint, queryParametersString);\r\n        const requestBody = await invokeAsync(this.createTokenRequestBody.bind(this), PerformanceEvents.AuthClientCreateTokenRequestBody, this.logger, this.performanceClient, request.correlationId)(request);\r\n        let ccsCredential = undefined;\r\n        if (request.clientInfo) {\r\n            try {\r\n                const clientInfo = buildClientInfo(request.clientInfo, this.cryptoUtils.base64Decode);\r\n                ccsCredential = {\r\n                    credential: `${clientInfo.uid}${Separators.CLIENT_INFO_SEPARATOR}${clientInfo.utid}`,\r\n                    type: CcsCredentialType.HOME_ACCOUNT_ID,\r\n                };\r\n            }\r\n            catch (e) {\r\n                this.logger.verbose(\"Could not parse client info for CCS Header: \" + e);\r\n            }\r\n        }\r\n        const headers = this.createTokenRequestHeaders(ccsCredential || request.ccsCredential);\r\n        const thumbprint = getRequestThumbprint(this.config.authOptions.clientId, request);\r\n        return invokeAsync(this.executePostToTokenEndpoint.bind(this), PerformanceEvents.AuthorizationCodeClientExecutePostToTokenEndpoint, this.logger, this.performanceClient, request.correlationId)(endpoint, requestBody, headers, thumbprint, request.correlationId, PerformanceEvents.AuthorizationCodeClientExecutePostToTokenEndpoint);\r\n    }\r\n    /**\r\n     * Generates a map for all the params to be sent to the service\r\n     * @param request\r\n     */\r\n    async createTokenRequestBody(request) {\r\n        this.performanceClient?.addQueueMeasurement(PerformanceEvents.AuthClientCreateTokenRequestBody, request.correlationId);\r\n        const parameters = new Map();\r\n        addClientId(parameters, request.embeddedClientId ||\r\n            request.tokenBodyParameters?.[CLIENT_ID] ||\r\n            this.config.authOptions.clientId);\r\n        /*\r\n         * For hybrid spa flow, there will be a code but no verifier\r\n         * In this scenario, don't include redirect uri as auth code will not be bound to redirect URI\r\n         */\r\n        if (!this.includeRedirectUri) {\r\n            // Just validate\r\n            if (!request.redirectUri) {\r\n                throw createClientConfigurationError(redirectUriEmpty);\r\n            }\r\n        }\r\n        else {\r\n            // Validate and include redirect uri\r\n            addRedirectUri(parameters, request.redirectUri);\r\n        }\r\n        // Add scope array, parameter builder will add default scopes and dedupe\r\n        addScopes(parameters, request.scopes, true, this.oidcDefaultScopes);\r\n        // add code: user set, not validated\r\n        addAuthorizationCode(parameters, request.code);\r\n        // Add library metadata\r\n        addLibraryInfo(parameters, this.config.libraryInfo);\r\n        addApplicationTelemetry(parameters, this.config.telemetry.application);\r\n        addThrottling(parameters);\r\n        if (this.serverTelemetryManager && !isOidcProtocolMode(this.config)) {\r\n            addServerTelemetry(parameters, this.serverTelemetryManager);\r\n        }\r\n        // add code_verifier if passed\r\n        if (request.codeVerifier) {\r\n            addCodeVerifier(parameters, request.codeVerifier);\r\n        }\r\n        if (this.config.clientCredentials.clientSecret) {\r\n            addClientSecret(parameters, this.config.clientCredentials.clientSecret);\r\n        }\r\n        if (this.config.clientCredentials.clientAssertion) {\r\n            const clientAssertion = this.config.clientCredentials.clientAssertion;\r\n            addClientAssertion(parameters, await getClientAssertion(clientAssertion.assertion, this.config.authOptions.clientId, request.resourceRequestUri));\r\n            addClientAssertionType(parameters, clientAssertion.assertionType);\r\n        }\r\n        addGrantType(parameters, GrantType.AUTHORIZATION_CODE_GRANT);\r\n        addClientInfo(parameters);\r\n        if (request.authenticationScheme === AuthenticationScheme.POP) {\r\n            const popTokenGenerator = new PopTokenGenerator(this.cryptoUtils, this.performanceClient);\r\n            let reqCnfData;\r\n            if (!request.popKid) {\r\n                const generatedReqCnfData = await invokeAsync(popTokenGenerator.generateCnf.bind(popTokenGenerator), PerformanceEvents.PopTokenGenerateCnf, this.logger, this.performanceClient, request.correlationId)(request, this.logger);\r\n                reqCnfData = generatedReqCnfData.reqCnfString;\r\n            }\r\n            else {\r\n                reqCnfData = this.cryptoUtils.encodeKid(request.popKid);\r\n            }\r\n            // SPA PoP requires full Base64Url encoded req_cnf string (unhashed)\r\n            addPopToken(parameters, reqCnfData);\r\n        }\r\n        else if (request.authenticationScheme === AuthenticationScheme.SSH) {\r\n            if (request.sshJwk) {\r\n                addSshJwk(parameters, request.sshJwk);\r\n            }\r\n            else {\r\n                throw createClientConfigurationError(missingSshJwk);\r\n            }\r\n        }\r\n        if (!StringUtils.isEmptyObj(request.claims) ||\r\n            (this.config.authOptions.clientCapabilities &&\r\n                this.config.authOptions.clientCapabilities.length > 0)) {\r\n            addClaims(parameters, request.claims, this.config.authOptions.clientCapabilities);\r\n        }\r\n        let ccsCred = undefined;\r\n        if (request.clientInfo) {\r\n            try {\r\n                const clientInfo = buildClientInfo(request.clientInfo, this.cryptoUtils.base64Decode);\r\n                ccsCred = {\r\n                    credential: `${clientInfo.uid}${Separators.CLIENT_INFO_SEPARATOR}${clientInfo.utid}`,\r\n                    type: CcsCredentialType.HOME_ACCOUNT_ID,\r\n                };\r\n            }\r\n            catch (e) {\r\n                this.logger.verbose(\"Could not parse client info for CCS Header: \" + e);\r\n            }\r\n        }\r\n        else {\r\n            ccsCred = request.ccsCredential;\r\n        }\r\n        // Adds these as parameters in the request instead of headers to prevent CORS preflight request\r\n        if (this.config.systemOptions.preventCorsPreflight && ccsCred) {\r\n            switch (ccsCred.type) {\r\n                case CcsCredentialType.HOME_ACCOUNT_ID:\r\n                    try {\r\n                        const clientInfo = buildClientInfoFromHomeAccountId(ccsCred.credential);\r\n                        addCcsOid(parameters, clientInfo);\r\n                    }\r\n                    catch (e) {\r\n                        this.logger.verbose(\"Could not parse home account ID for CCS Header: \" +\r\n                            e);\r\n                    }\r\n                    break;\r\n                case CcsCredentialType.UPN:\r\n                    addCcsUpn(parameters, ccsCred.credential);\r\n                    break;\r\n            }\r\n        }\r\n        if (request.embeddedClientId) {\r\n            addBrokerParameters(parameters, this.config.authOptions.clientId, this.config.authOptions.redirectUri);\r\n        }\r\n        if (request.tokenBodyParameters) {\r\n            addExtraQueryParameters(parameters, request.tokenBodyParameters);\r\n        }\r\n        // Add hybrid spa parameters if not already provided\r\n        if (request.enableSpaAuthorizationCode &&\r\n            (!request.tokenBodyParameters ||\r\n                !request.tokenBodyParameters[RETURN_SPA_CODE])) {\r\n            addExtraQueryParameters(parameters, {\r\n                [RETURN_SPA_CODE]: \"1\",\r\n            });\r\n        }\r\n        instrumentBrokerParams(parameters, request.correlationId, this.performanceClient);\r\n        return mapToQueryString(parameters);\r\n    }\r\n    /**\r\n     * This API validates the `EndSessionRequest` and creates a URL\r\n     * @param request\r\n     */\r\n    createLogoutUrlQueryString(request) {\r\n        const parameters = new Map();\r\n        if (request.postLogoutRedirectUri) {\r\n            addPostLogoutRedirectUri(parameters, request.postLogoutRedirectUri);\r\n        }\r\n        if (request.correlationId) {\r\n            addCorrelationId(parameters, request.correlationId);\r\n        }\r\n        if (request.idTokenHint) {\r\n            addIdTokenHint(parameters, request.idTokenHint);\r\n        }\r\n        if (request.state) {\r\n            addState(parameters, request.state);\r\n        }\r\n        if (request.logoutHint) {\r\n            addLogoutHint(parameters, request.logoutHint);\r\n        }\r\n        if (request.extraQueryParameters) {\r\n            addExtraQueryParameters(parameters, request.extraQueryParameters);\r\n        }\r\n        if (this.config.authOptions.instanceAware) {\r\n            addInstanceAware(parameters);\r\n        }\r\n        return mapToQueryString(parameters, this.config.authOptions.encodeExtraQueryParams, request.extraQueryParameters);\r\n    }\r\n}\n\nexport { AuthorizationCodeClient };\n//# sourceMappingURL=AuthorizationCodeClient.mjs.map\n","/*! @azure/msal-common v15.12.0 2025-08-19 */\n'use strict';\nimport { isOidcProtocolMode } from '../config/ClientConfiguration.mjs';\nimport { BaseClient } from './BaseClient.mjs';\nimport { addClientId, addRedirectUri, addScopes, addGrantType, addClientInfo, addLibraryInfo, addApplicationTelemetry, addThrottling, addServerTelemetry, addRefreshToken, addClientSecret, addClientAssertion, addClientAssertionType, addPopToken, addSshJwk, addClaims, addCcsUpn, addCcsOid, addBrokerParameters, addExtraQueryParameters, instrumentBrokerParams } from '../request/RequestParameterBuilder.mjs';\nimport { mapToQueryString } from '../utils/UrlUtils.mjs';\nimport { AuthenticationScheme, HeaderNames, Errors, GrantType } from '../utils/Constants.mjs';\nimport { CLIENT_ID } from '../constants/AADServerParamKeys.mjs';\nimport { ResponseHandler } from '../response/ResponseHandler.mjs';\nimport { PopTokenGenerator } from '../crypto/PopTokenGenerator.mjs';\nimport { StringUtils } from '../utils/StringUtils.mjs';\nimport { createClientConfigurationError } from '../error/ClientConfigurationError.mjs';\nimport { createClientAuthError } from '../error/ClientAuthError.mjs';\nimport { ServerError } from '../error/ServerError.mjs';\nimport { nowSeconds, isTokenExpired } from '../utils/TimeUtils.mjs';\nimport { UrlString } from '../url/UrlString.mjs';\nimport { CcsCredentialType } from '../account/CcsCredential.mjs';\nimport { buildClientInfoFromHomeAccountId } from '../account/ClientInfo.mjs';\nimport { createInteractionRequiredAuthError, InteractionRequiredAuthError } from '../error/InteractionRequiredAuthError.mjs';\nimport { PerformanceEvents } from '../telemetry/performance/PerformanceEvent.mjs';\nimport { invokeAsync, invoke } from '../utils/FunctionWrappers.mjs';\nimport { getClientAssertion } from '../utils/ClientAssertionUtils.mjs';\nimport { getRequestThumbprint } from '../network/RequestThumbprint.mjs';\nimport { badToken, noTokensFound, refreshTokenExpired } from '../error/InteractionRequiredAuthErrorCodes.mjs';\nimport { tokenRequestEmpty, missingSshJwk } from '../error/ClientConfigurationErrorCodes.mjs';\nimport { noAccountInSilentRequest } from '../error/ClientAuthErrorCodes.mjs';\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nconst DEFAULT_REFRESH_TOKEN_EXPIRATION_OFFSET_SECONDS = 300; // 5 Minutes\r\n/**\r\n * OAuth2.0 refresh token client\r\n * @internal\r\n */\r\nclass RefreshTokenClient extends BaseClient {\r\n    constructor(configuration, performanceClient) {\r\n        super(configuration, performanceClient);\r\n    }\r\n    async acquireToken(request) {\r\n        this.performanceClient?.addQueueMeasurement(PerformanceEvents.RefreshTokenClientAcquireToken, request.correlationId);\r\n        const reqTimestamp = nowSeconds();\r\n        const response = await invokeAsync(this.executeTokenRequest.bind(this), PerformanceEvents.RefreshTokenClientExecuteTokenRequest, this.logger, this.performanceClient, request.correlationId)(request, this.authority);\r\n        // Retrieve requestId from response headers\r\n        const requestId = response.headers?.[HeaderNames.X_MS_REQUEST_ID];\r\n        const responseHandler = new ResponseHandler(this.config.authOptions.clientId, this.cacheManager, this.cryptoUtils, this.logger, this.config.serializableCache, this.config.persistencePlugin);\r\n        responseHandler.validateTokenResponse(response.body);\r\n        return invokeAsync(responseHandler.handleServerTokenResponse.bind(responseHandler), PerformanceEvents.HandleServerTokenResponse, this.logger, this.performanceClient, request.correlationId)(response.body, this.authority, reqTimestamp, request, undefined, undefined, true, request.forceCache, requestId);\r\n    }\r\n    /**\r\n     * Gets cached refresh token and attaches to request, then calls acquireToken API\r\n     * @param request\r\n     */\r\n    async acquireTokenByRefreshToken(request) {\r\n        // Cannot renew token if no request object is given.\r\n        if (!request) {\r\n            throw createClientConfigurationError(tokenRequestEmpty);\r\n        }\r\n        this.performanceClient?.addQueueMeasurement(PerformanceEvents.RefreshTokenClientAcquireTokenByRefreshToken, request.correlationId);\r\n        // We currently do not support silent flow for account === null use cases; This will be revisited for confidential flow usecases\r\n        if (!request.account) {\r\n            throw createClientAuthError(noAccountInSilentRequest);\r\n        }\r\n        // try checking if FOCI is enabled for the given application\r\n        const isFOCI = this.cacheManager.isAppMetadataFOCI(request.account.environment);\r\n        // if the app is part of the family, retrive a Family refresh token if present and make a refreshTokenRequest\r\n        if (isFOCI) {\r\n            try {\r\n                return await invokeAsync(this.acquireTokenWithCachedRefreshToken.bind(this), PerformanceEvents.RefreshTokenClientAcquireTokenWithCachedRefreshToken, this.logger, this.performanceClient, request.correlationId)(request, true);\r\n            }\r\n            catch (e) {\r\n                const noFamilyRTInCache = e instanceof InteractionRequiredAuthError &&\r\n                    e.errorCode ===\r\n                        noTokensFound;\r\n                const clientMismatchErrorWithFamilyRT = e instanceof ServerError &&\r\n                    e.errorCode === Errors.INVALID_GRANT_ERROR &&\r\n                    e.subError === Errors.CLIENT_MISMATCH_ERROR;\r\n                // if family Refresh Token (FRT) cache acquisition fails or if client_mismatch error is seen with FRT, reattempt with application Refresh Token (ART)\r\n                if (noFamilyRTInCache || clientMismatchErrorWithFamilyRT) {\r\n                    return invokeAsync(this.acquireTokenWithCachedRefreshToken.bind(this), PerformanceEvents.RefreshTokenClientAcquireTokenWithCachedRefreshToken, this.logger, this.performanceClient, request.correlationId)(request, false);\r\n                    // throw in all other cases\r\n                }\r\n                else {\r\n                    throw e;\r\n                }\r\n            }\r\n        }\r\n        // fall back to application refresh token acquisition\r\n        return invokeAsync(this.acquireTokenWithCachedRefreshToken.bind(this), PerformanceEvents.RefreshTokenClientAcquireTokenWithCachedRefreshToken, this.logger, this.performanceClient, request.correlationId)(request, false);\r\n    }\r\n    /**\r\n     * makes a network call to acquire tokens by exchanging RefreshToken available in userCache; throws if refresh token is not cached\r\n     * @param request\r\n     */\r\n    async acquireTokenWithCachedRefreshToken(request, foci) {\r\n        this.performanceClient?.addQueueMeasurement(PerformanceEvents.RefreshTokenClientAcquireTokenWithCachedRefreshToken, request.correlationId);\r\n        // fetches family RT or application RT based on FOCI value\r\n        const refreshToken = invoke(this.cacheManager.getRefreshToken.bind(this.cacheManager), PerformanceEvents.CacheManagerGetRefreshToken, this.logger, this.performanceClient, request.correlationId)(request.account, foci, request.correlationId, undefined, this.performanceClient);\r\n        if (!refreshToken) {\r\n            throw createInteractionRequiredAuthError(noTokensFound);\r\n        }\r\n        if (refreshToken.expiresOn &&\r\n            isTokenExpired(refreshToken.expiresOn, request.refreshTokenExpirationOffsetSeconds ||\r\n                DEFAULT_REFRESH_TOKEN_EXPIRATION_OFFSET_SECONDS)) {\r\n            this.performanceClient?.addFields({ rtExpiresOnMs: Number(refreshToken.expiresOn) }, request.correlationId);\r\n            throw createInteractionRequiredAuthError(refreshTokenExpired);\r\n        }\r\n        // attach cached RT size to the current measurement\r\n        const refreshTokenRequest = {\r\n            ...request,\r\n            refreshToken: refreshToken.secret,\r\n            authenticationScheme: request.authenticationScheme || AuthenticationScheme.BEARER,\r\n            ccsCredential: {\r\n                credential: request.account.homeAccountId,\r\n                type: CcsCredentialType.HOME_ACCOUNT_ID,\r\n            },\r\n        };\r\n        try {\r\n            return await invokeAsync(this.acquireToken.bind(this), PerformanceEvents.RefreshTokenClientAcquireToken, this.logger, this.performanceClient, request.correlationId)(refreshTokenRequest);\r\n        }\r\n        catch (e) {\r\n            if (e instanceof InteractionRequiredAuthError) {\r\n                this.performanceClient?.addFields({ rtExpiresOnMs: Number(refreshToken.expiresOn) }, request.correlationId);\r\n                if (e.subError === badToken) {\r\n                    // Remove bad refresh token from cache\r\n                    this.logger.verbose(\"acquireTokenWithRefreshToken: bad refresh token, removing from cache\");\r\n                    const badRefreshTokenKey = this.cacheManager.generateCredentialKey(refreshToken);\r\n                    this.cacheManager.removeRefreshToken(badRefreshTokenKey, request.correlationId);\r\n                }\r\n            }\r\n            throw e;\r\n        }\r\n    }\r\n    /**\r\n     * Constructs the network message and makes a NW call to the underlying secure token service\r\n     * @param request\r\n     * @param authority\r\n     */\r\n    async executeTokenRequest(request, authority) {\r\n        this.performanceClient?.addQueueMeasurement(PerformanceEvents.RefreshTokenClientExecuteTokenRequest, request.correlationId);\r\n        const queryParametersString = this.createTokenQueryParameters(request);\r\n        const endpoint = UrlString.appendQueryString(authority.tokenEndpoint, queryParametersString);\r\n        const requestBody = await invokeAsync(this.createTokenRequestBody.bind(this), PerformanceEvents.RefreshTokenClientCreateTokenRequestBody, this.logger, this.performanceClient, request.correlationId)(request);\r\n        const headers = this.createTokenRequestHeaders(request.ccsCredential);\r\n        const thumbprint = getRequestThumbprint(this.config.authOptions.clientId, request);\r\n        return invokeAsync(this.executePostToTokenEndpoint.bind(this), PerformanceEvents.RefreshTokenClientExecutePostToTokenEndpoint, this.logger, this.performanceClient, request.correlationId)(endpoint, requestBody, headers, thumbprint, request.correlationId, PerformanceEvents.RefreshTokenClientExecutePostToTokenEndpoint);\r\n    }\r\n    /**\r\n     * Helper function to create the token request body\r\n     * @param request\r\n     */\r\n    async createTokenRequestBody(request) {\r\n        this.performanceClient?.addQueueMeasurement(PerformanceEvents.RefreshTokenClientCreateTokenRequestBody, request.correlationId);\r\n        const parameters = new Map();\r\n        addClientId(parameters, request.embeddedClientId ||\r\n            request.tokenBodyParameters?.[CLIENT_ID] ||\r\n            this.config.authOptions.clientId);\r\n        if (request.redirectUri) {\r\n            addRedirectUri(parameters, request.redirectUri);\r\n        }\r\n        addScopes(parameters, request.scopes, true, this.config.authOptions.authority.options.OIDCOptions?.defaultScopes);\r\n        addGrantType(parameters, GrantType.REFRESH_TOKEN_GRANT);\r\n        addClientInfo(parameters);\r\n        addLibraryInfo(parameters, this.config.libraryInfo);\r\n        addApplicationTelemetry(parameters, this.config.telemetry.application);\r\n        addThrottling(parameters);\r\n        if (this.serverTelemetryManager && !isOidcProtocolMode(this.config)) {\r\n            addServerTelemetry(parameters, this.serverTelemetryManager);\r\n        }\r\n        addRefreshToken(parameters, request.refreshToken);\r\n        if (this.config.clientCredentials.clientSecret) {\r\n            addClientSecret(parameters, this.config.clientCredentials.clientSecret);\r\n        }\r\n        if (this.config.clientCredentials.clientAssertion) {\r\n            const clientAssertion = this.config.clientCredentials.clientAssertion;\r\n            addClientAssertion(parameters, await getClientAssertion(clientAssertion.assertion, this.config.authOptions.clientId, request.resourceRequestUri));\r\n            addClientAssertionType(parameters, clientAssertion.assertionType);\r\n        }\r\n        if (request.authenticationScheme === AuthenticationScheme.POP) {\r\n            const popTokenGenerator = new PopTokenGenerator(this.cryptoUtils, this.performanceClient);\r\n            let reqCnfData;\r\n            if (!request.popKid) {\r\n                const generatedReqCnfData = await invokeAsync(popTokenGenerator.generateCnf.bind(popTokenGenerator), PerformanceEvents.PopTokenGenerateCnf, this.logger, this.performanceClient, request.correlationId)(request, this.logger);\r\n                reqCnfData = generatedReqCnfData.reqCnfString;\r\n            }\r\n            else {\r\n                reqCnfData = this.cryptoUtils.encodeKid(request.popKid);\r\n            }\r\n            // SPA PoP requires full Base64Url encoded req_cnf string (unhashed)\r\n            addPopToken(parameters, reqCnfData);\r\n        }\r\n        else if (request.authenticationScheme === AuthenticationScheme.SSH) {\r\n            if (request.sshJwk) {\r\n                addSshJwk(parameters, request.sshJwk);\r\n            }\r\n            else {\r\n                throw createClientConfigurationError(missingSshJwk);\r\n            }\r\n        }\r\n        if (!StringUtils.isEmptyObj(request.claims) ||\r\n            (this.config.authOptions.clientCapabilities &&\r\n                this.config.authOptions.clientCapabilities.length > 0)) {\r\n            addClaims(parameters, request.claims, this.config.authOptions.clientCapabilities);\r\n        }\r\n        if (this.config.systemOptions.preventCorsPreflight &&\r\n            request.ccsCredential) {\r\n            switch (request.ccsCredential.type) {\r\n                case CcsCredentialType.HOME_ACCOUNT_ID:\r\n                    try {\r\n                        const clientInfo = buildClientInfoFromHomeAccountId(request.ccsCredential.credential);\r\n                        addCcsOid(parameters, clientInfo);\r\n                    }\r\n                    catch (e) {\r\n                        this.logger.verbose(\"Could not parse home account ID for CCS Header: \" +\r\n                            e);\r\n                    }\r\n                    break;\r\n                case CcsCredentialType.UPN:\r\n                    addCcsUpn(parameters, request.ccsCredential.credential);\r\n                    break;\r\n            }\r\n        }\r\n        if (request.embeddedClientId) {\r\n            addBrokerParameters(parameters, this.config.authOptions.clientId, this.config.authOptions.redirectUri);\r\n        }\r\n        if (request.tokenBodyParameters) {\r\n            addExtraQueryParameters(parameters, request.tokenBodyParameters);\r\n        }\r\n        instrumentBrokerParams(parameters, request.correlationId, this.performanceClient);\r\n        return mapToQueryString(parameters);\r\n    }\r\n}\n\nexport { RefreshTokenClient };\n//# sourceMappingURL=RefreshTokenClient.mjs.map\n","/*! @azure/msal-common v15.12.0 2025-08-19 */\n'use strict';\nimport { BaseClient } from './BaseClient.mjs';\nimport { wasClockTurnedBack, isTokenExpired } from '../utils/TimeUtils.mjs';\nimport { createClientAuthError } from '../error/ClientAuthError.mjs';\nimport { ResponseHandler } from '../response/ResponseHandler.mjs';\nimport { CacheOutcome } from '../utils/Constants.mjs';\nimport { StringUtils } from '../utils/StringUtils.mjs';\nimport { extractTokenClaims, checkMaxAge } from '../account/AuthToken.mjs';\nimport { PerformanceEvents } from '../telemetry/performance/PerformanceEvent.mjs';\nimport { invokeAsync } from '../utils/FunctionWrappers.mjs';\nimport { getTenantFromAuthorityString } from '../authority/Authority.mjs';\nimport { tokenRefreshRequired, noAccountInSilentRequest, authTimeNotFound } from '../error/ClientAuthErrorCodes.mjs';\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/** @internal */\r\nclass SilentFlowClient extends BaseClient {\r\n    constructor(configuration, performanceClient) {\r\n        super(configuration, performanceClient);\r\n    }\r\n    /**\r\n     * Retrieves token from cache or throws an error if it must be refreshed.\r\n     * @param request\r\n     */\r\n    async acquireCachedToken(request) {\r\n        this.performanceClient?.addQueueMeasurement(PerformanceEvents.SilentFlowClientAcquireCachedToken, request.correlationId);\r\n        let lastCacheOutcome = CacheOutcome.NOT_APPLICABLE;\r\n        if (request.forceRefresh ||\r\n            (!this.config.cacheOptions.claimsBasedCachingEnabled &&\r\n                !StringUtils.isEmptyObj(request.claims))) {\r\n            // Must refresh due to present force_refresh flag.\r\n            this.setCacheOutcome(CacheOutcome.FORCE_REFRESH_OR_CLAIMS, request.correlationId);\r\n            throw createClientAuthError(tokenRefreshRequired);\r\n        }\r\n        // We currently do not support silent flow for account === null use cases; This will be revisited for confidential flow usecases\r\n        if (!request.account) {\r\n            throw createClientAuthError(noAccountInSilentRequest);\r\n        }\r\n        const requestTenantId = request.account.tenantId ||\r\n            getTenantFromAuthorityString(request.authority);\r\n        const tokenKeys = this.cacheManager.getTokenKeys();\r\n        const cachedAccessToken = this.cacheManager.getAccessToken(request.account, request, tokenKeys, requestTenantId);\r\n        if (!cachedAccessToken) {\r\n            // must refresh due to non-existent access_token\r\n            this.setCacheOutcome(CacheOutcome.NO_CACHED_ACCESS_TOKEN, request.correlationId);\r\n            throw createClientAuthError(tokenRefreshRequired);\r\n        }\r\n        else if (wasClockTurnedBack(cachedAccessToken.cachedAt) ||\r\n            isTokenExpired(cachedAccessToken.expiresOn, this.config.systemOptions.tokenRenewalOffsetSeconds)) {\r\n            // must refresh due to the expires_in value\r\n            this.setCacheOutcome(CacheOutcome.CACHED_ACCESS_TOKEN_EXPIRED, request.correlationId);\r\n            throw createClientAuthError(tokenRefreshRequired);\r\n        }\r\n        else if (cachedAccessToken.refreshOn &&\r\n            isTokenExpired(cachedAccessToken.refreshOn, 0)) {\r\n            // must refresh (in the background) due to the refresh_in value\r\n            lastCacheOutcome = CacheOutcome.PROACTIVELY_REFRESHED;\r\n            // don't throw ClientAuthError.createRefreshRequiredError(), return cached token instead\r\n        }\r\n        const environment = request.authority || this.authority.getPreferredCache();\r\n        const cacheRecord = {\r\n            account: this.cacheManager.getAccount(this.cacheManager.generateAccountKey(request.account), request.correlationId),\r\n            accessToken: cachedAccessToken,\r\n            idToken: this.cacheManager.getIdToken(request.account, request.correlationId, tokenKeys, requestTenantId, this.performanceClient),\r\n            refreshToken: null,\r\n            appMetadata: this.cacheManager.readAppMetadataFromCache(environment),\r\n        };\r\n        this.setCacheOutcome(lastCacheOutcome, request.correlationId);\r\n        if (this.config.serverTelemetryManager) {\r\n            this.config.serverTelemetryManager.incrementCacheHits();\r\n        }\r\n        return [\r\n            await invokeAsync(this.generateResultFromCacheRecord.bind(this), PerformanceEvents.SilentFlowClientGenerateResultFromCacheRecord, this.logger, this.performanceClient, request.correlationId)(cacheRecord, request),\r\n            lastCacheOutcome,\r\n        ];\r\n    }\r\n    setCacheOutcome(cacheOutcome, correlationId) {\r\n        this.serverTelemetryManager?.setCacheOutcome(cacheOutcome);\r\n        this.performanceClient?.addFields({\r\n            cacheOutcome: cacheOutcome,\r\n        }, correlationId);\r\n        if (cacheOutcome !== CacheOutcome.NOT_APPLICABLE) {\r\n            this.logger.info(`Token refresh is required due to cache outcome: ${cacheOutcome}`);\r\n        }\r\n    }\r\n    /**\r\n     * Helper function to build response object from the CacheRecord\r\n     * @param cacheRecord\r\n     */\r\n    async generateResultFromCacheRecord(cacheRecord, request) {\r\n        this.performanceClient?.addQueueMeasurement(PerformanceEvents.SilentFlowClientGenerateResultFromCacheRecord, request.correlationId);\r\n        let idTokenClaims;\r\n        if (cacheRecord.idToken) {\r\n            idTokenClaims = extractTokenClaims(cacheRecord.idToken.secret, this.config.cryptoInterface.base64Decode);\r\n        }\r\n        // token max_age check\r\n        if (request.maxAge || request.maxAge === 0) {\r\n            const authTime = idTokenClaims?.auth_time;\r\n            if (!authTime) {\r\n                throw createClientAuthError(authTimeNotFound);\r\n            }\r\n            checkMaxAge(authTime, request.maxAge);\r\n        }\r\n        return ResponseHandler.generateAuthenticationResult(this.cryptoUtils, this.authority, cacheRecord, true, request, idTokenClaims);\r\n    }\r\n}\n\nexport { SilentFlowClient };\n//# sourceMappingURL=SilentFlowClient.mjs.map\n","/*! @azure/msal-common v15.12.0 2025-08-19 */\n'use strict';\nimport { addClientId, addScopes, addRedirectUri, addCorrelationId, addResponseMode, addClientInfo, addPrompt, addDomainHint, addSid, addLoginHint, addCcsOid, addCcsUpn, addNonce, addState, addClaims, addBrokerParameters, addInstanceAware } from '../request/RequestParameterBuilder.mjs';\nimport { INSTANCE_AWARE, CLIENT_ID } from '../constants/AADServerParamKeys.mjs';\nimport { PromptValue } from '../utils/Constants.mjs';\nimport { buildClientInfoFromHomeAccountId } from '../account/ClientInfo.mjs';\nimport { mapToQueryString } from '../utils/UrlUtils.mjs';\nimport { UrlString } from '../url/UrlString.mjs';\nimport { createClientAuthError } from '../error/ClientAuthError.mjs';\nimport { isInteractionRequiredError, InteractionRequiredAuthError } from '../error/InteractionRequiredAuthError.mjs';\nimport { ServerError } from '../error/ServerError.mjs';\nimport { authorizationCodeMissingFromServerResponse, stateNotFound, invalidState, stateMismatch } from '../error/ClientAuthErrorCodes.mjs';\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * Returns map of parameters that are applicable to all calls to /authorize whether using PKCE or EAR\r\n * @param config\r\n * @param request\r\n * @param logger\r\n * @param performanceClient\r\n * @returns\r\n */\r\nfunction getStandardAuthorizeRequestParameters(authOptions, request, logger, performanceClient) {\r\n    // generate the correlationId if not set by the user and add\r\n    const correlationId = request.correlationId;\r\n    const parameters = new Map();\r\n    addClientId(parameters, request.embeddedClientId ||\r\n        request.extraQueryParameters?.[CLIENT_ID] ||\r\n        authOptions.clientId);\r\n    const requestScopes = [\r\n        ...(request.scopes || []),\r\n        ...(request.extraScopesToConsent || []),\r\n    ];\r\n    addScopes(parameters, requestScopes, true, authOptions.authority.options.OIDCOptions?.defaultScopes);\r\n    addRedirectUri(parameters, request.redirectUri);\r\n    addCorrelationId(parameters, correlationId);\r\n    // add response_mode. If not passed in it defaults to query.\r\n    addResponseMode(parameters, request.responseMode);\r\n    // add client_info=1\r\n    addClientInfo(parameters);\r\n    if (request.prompt) {\r\n        addPrompt(parameters, request.prompt);\r\n        performanceClient?.addFields({ prompt: request.prompt }, correlationId);\r\n    }\r\n    if (request.domainHint) {\r\n        addDomainHint(parameters, request.domainHint);\r\n        performanceClient?.addFields({ domainHintFromRequest: true }, correlationId);\r\n    }\r\n    // Add sid or loginHint with preference for login_hint claim (in request) -> sid -> loginHint (upn/email) -> username of AccountInfo object\r\n    if (request.prompt !== PromptValue.SELECT_ACCOUNT) {\r\n        // AAD will throw if prompt=select_account is passed with an account hint\r\n        if (request.sid && request.prompt === PromptValue.NONE) {\r\n            // SessionID is only used in silent calls\r\n            logger.verbose(\"createAuthCodeUrlQueryString: Prompt is none, adding sid from request\");\r\n            addSid(parameters, request.sid);\r\n            performanceClient?.addFields({ sidFromRequest: true }, correlationId);\r\n        }\r\n        else if (request.account) {\r\n            const accountSid = extractAccountSid(request.account);\r\n            let accountLoginHintClaim = extractLoginHint(request.account);\r\n            if (accountLoginHintClaim && request.domainHint) {\r\n                logger.warning(`AuthorizationCodeClient.createAuthCodeUrlQueryString: \"domainHint\" param is set, skipping opaque \"login_hint\" claim. Please consider not passing domainHint`);\r\n                accountLoginHintClaim = null;\r\n            }\r\n            // If login_hint claim is present, use it over sid/username\r\n            if (accountLoginHintClaim) {\r\n                logger.verbose(\"createAuthCodeUrlQueryString: login_hint claim present on account\");\r\n                addLoginHint(parameters, accountLoginHintClaim);\r\n                performanceClient?.addFields({ loginHintFromClaim: true }, correlationId);\r\n                try {\r\n                    const clientInfo = buildClientInfoFromHomeAccountId(request.account.homeAccountId);\r\n                    addCcsOid(parameters, clientInfo);\r\n                }\r\n                catch (e) {\r\n                    logger.verbose(\"createAuthCodeUrlQueryString: Could not parse home account ID for CCS Header\");\r\n                }\r\n            }\r\n            else if (accountSid && request.prompt === PromptValue.NONE) {\r\n                /*\r\n                 * If account and loginHint are provided, we will check account first for sid before adding loginHint\r\n                 * SessionId is only used in silent calls\r\n                 */\r\n                logger.verbose(\"createAuthCodeUrlQueryString: Prompt is none, adding sid from account\");\r\n                addSid(parameters, accountSid);\r\n                performanceClient?.addFields({ sidFromClaim: true }, correlationId);\r\n                try {\r\n                    const clientInfo = buildClientInfoFromHomeAccountId(request.account.homeAccountId);\r\n                    addCcsOid(parameters, clientInfo);\r\n                }\r\n                catch (e) {\r\n                    logger.verbose(\"createAuthCodeUrlQueryString: Could not parse home account ID for CCS Header\");\r\n                }\r\n            }\r\n            else if (request.loginHint) {\r\n                logger.verbose(\"createAuthCodeUrlQueryString: Adding login_hint from request\");\r\n                addLoginHint(parameters, request.loginHint);\r\n                addCcsUpn(parameters, request.loginHint);\r\n                performanceClient?.addFields({ loginHintFromRequest: true }, correlationId);\r\n            }\r\n            else if (request.account.username) {\r\n                // Fallback to account username if provided\r\n                logger.verbose(\"createAuthCodeUrlQueryString: Adding login_hint from account\");\r\n                addLoginHint(parameters, request.account.username);\r\n                performanceClient?.addFields({ loginHintFromUpn: true }, correlationId);\r\n                try {\r\n                    const clientInfo = buildClientInfoFromHomeAccountId(request.account.homeAccountId);\r\n                    addCcsOid(parameters, clientInfo);\r\n                }\r\n                catch (e) {\r\n                    logger.verbose(\"createAuthCodeUrlQueryString: Could not parse home account ID for CCS Header\");\r\n                }\r\n            }\r\n        }\r\n        else if (request.loginHint) {\r\n            logger.verbose(\"createAuthCodeUrlQueryString: No account, adding login_hint from request\");\r\n            addLoginHint(parameters, request.loginHint);\r\n            addCcsUpn(parameters, request.loginHint);\r\n            performanceClient?.addFields({ loginHintFromRequest: true }, correlationId);\r\n        }\r\n    }\r\n    else {\r\n        logger.verbose(\"createAuthCodeUrlQueryString: Prompt is select_account, ignoring account hints\");\r\n    }\r\n    if (request.nonce) {\r\n        addNonce(parameters, request.nonce);\r\n    }\r\n    if (request.state) {\r\n        addState(parameters, request.state);\r\n    }\r\n    if (request.claims ||\r\n        (authOptions.clientCapabilities &&\r\n            authOptions.clientCapabilities.length > 0)) {\r\n        addClaims(parameters, request.claims, authOptions.clientCapabilities);\r\n    }\r\n    if (request.embeddedClientId) {\r\n        addBrokerParameters(parameters, authOptions.clientId, authOptions.redirectUri);\r\n    }\r\n    // If extraQueryParameters includes instance_aware its value will be added when extraQueryParameters are added\r\n    if (authOptions.instanceAware &&\r\n        (!request.extraQueryParameters ||\r\n            !Object.keys(request.extraQueryParameters).includes(INSTANCE_AWARE))) {\r\n        addInstanceAware(parameters);\r\n    }\r\n    return parameters;\r\n}\r\n/**\r\n * Returns authorize endpoint with given request parameters in the query string\r\n * @param authority\r\n * @param requestParameters\r\n * @returns\r\n */\r\nfunction getAuthorizeUrl(authority, requestParameters, encodeParams, extraQueryParameters) {\r\n    const queryString = mapToQueryString(requestParameters, encodeParams, extraQueryParameters);\r\n    return UrlString.appendQueryString(authority.authorizationEndpoint, queryString);\r\n}\r\n/**\r\n * Handles the hash fragment response from public client code request. Returns a code response used by\r\n * the client to exchange for a token in acquireToken.\r\n * @param serverParams\r\n * @param cachedState\r\n */\r\nfunction getAuthorizationCodePayload(serverParams, cachedState) {\r\n    // Get code response\r\n    validateAuthorizationResponse(serverParams, cachedState);\r\n    // throw when there is no auth code in the response\r\n    if (!serverParams.code) {\r\n        throw createClientAuthError(authorizationCodeMissingFromServerResponse);\r\n    }\r\n    return serverParams;\r\n}\r\n/**\r\n * Function which validates server authorization code response.\r\n * @param serverResponseHash\r\n * @param requestState\r\n */\r\nfunction validateAuthorizationResponse(serverResponse, requestState) {\r\n    if (!serverResponse.state || !requestState) {\r\n        throw serverResponse.state\r\n            ? createClientAuthError(stateNotFound, \"Cached State\")\r\n            : createClientAuthError(stateNotFound, \"Server State\");\r\n    }\r\n    let decodedServerResponseState;\r\n    let decodedRequestState;\r\n    try {\r\n        decodedServerResponseState = decodeURIComponent(serverResponse.state);\r\n    }\r\n    catch (e) {\r\n        throw createClientAuthError(invalidState, serverResponse.state);\r\n    }\r\n    try {\r\n        decodedRequestState = decodeURIComponent(requestState);\r\n    }\r\n    catch (e) {\r\n        throw createClientAuthError(invalidState, serverResponse.state);\r\n    }\r\n    if (decodedServerResponseState !== decodedRequestState) {\r\n        throw createClientAuthError(stateMismatch);\r\n    }\r\n    // Check for error\r\n    if (serverResponse.error ||\r\n        serverResponse.error_description ||\r\n        serverResponse.suberror) {\r\n        const serverErrorNo = parseServerErrorNo(serverResponse);\r\n        if (isInteractionRequiredError(serverResponse.error, serverResponse.error_description, serverResponse.suberror)) {\r\n            throw new InteractionRequiredAuthError(serverResponse.error || \"\", serverResponse.error_description, serverResponse.suberror, serverResponse.timestamp || \"\", serverResponse.trace_id || \"\", serverResponse.correlation_id || \"\", serverResponse.claims || \"\", serverErrorNo);\r\n        }\r\n        throw new ServerError(serverResponse.error || \"\", serverResponse.error_description, serverResponse.suberror, serverErrorNo);\r\n    }\r\n}\r\n/**\r\n * Get server error No from the error_uri\r\n * @param serverResponse\r\n * @returns\r\n */\r\nfunction parseServerErrorNo(serverResponse) {\r\n    const errorCodePrefix = \"code=\";\r\n    const errorCodePrefixIndex = serverResponse.error_uri?.lastIndexOf(errorCodePrefix);\r\n    return errorCodePrefixIndex && errorCodePrefixIndex >= 0\r\n        ? serverResponse.error_uri?.substring(errorCodePrefixIndex + errorCodePrefix.length)\r\n        : undefined;\r\n}\r\n/**\r\n * Helper to get sid from account. Returns null if idTokenClaims are not present or sid is not present.\r\n * @param account\r\n */\r\nfunction extractAccountSid(account) {\r\n    return account.idTokenClaims?.sid || null;\r\n}\r\nfunction extractLoginHint(account) {\r\n    return account.loginHint || account.idTokenClaims?.login_hint || null;\r\n}\n\nexport { getAuthorizationCodePayload, getAuthorizeUrl, getStandardAuthorizeRequestParameters, validateAuthorizationResponse };\n//# sourceMappingURL=Authorize.mjs.map\n","/*! @azure/msal-common v15.12.0 2025-08-19 */\n'use strict';\nimport { CacheOutcome, Constants, SERVER_TELEM_CONSTANTS, Separators } from '../../utils/Constants.mjs';\nimport { AuthError } from '../../error/AuthError.mjs';\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nconst skuGroupSeparator = \",\";\r\nconst skuValueSeparator = \"|\";\r\nfunction makeExtraSkuString(params) {\r\n    const { skus, libraryName, libraryVersion, extensionName, extensionVersion, } = params;\r\n    const skuMap = new Map([\r\n        [0, [libraryName, libraryVersion]],\r\n        [2, [extensionName, extensionVersion]],\r\n    ]);\r\n    let skuArr = [];\r\n    if (skus?.length) {\r\n        skuArr = skus.split(skuGroupSeparator);\r\n        // Ignore invalid input sku param\r\n        if (skuArr.length < 4) {\r\n            return skus;\r\n        }\r\n    }\r\n    else {\r\n        skuArr = Array.from({ length: 4 }, () => skuValueSeparator);\r\n    }\r\n    skuMap.forEach((value, key) => {\r\n        if (value.length === 2 && value[0]?.length && value[1]?.length) {\r\n            setSku({\r\n                skuArr,\r\n                index: key,\r\n                skuName: value[0],\r\n                skuVersion: value[1],\r\n            });\r\n        }\r\n    });\r\n    return skuArr.join(skuGroupSeparator);\r\n}\r\nfunction setSku(params) {\r\n    const { skuArr, index, skuName, skuVersion } = params;\r\n    if (index >= skuArr.length) {\r\n        return;\r\n    }\r\n    skuArr[index] = [skuName, skuVersion].join(skuValueSeparator);\r\n}\r\n/** @internal */\r\nclass ServerTelemetryManager {\r\n    constructor(telemetryRequest, cacheManager) {\r\n        this.cacheOutcome = CacheOutcome.NOT_APPLICABLE;\r\n        this.cacheManager = cacheManager;\r\n        this.apiId = telemetryRequest.apiId;\r\n        this.correlationId = telemetryRequest.correlationId;\r\n        this.wrapperSKU = telemetryRequest.wrapperSKU || Constants.EMPTY_STRING;\r\n        this.wrapperVer = telemetryRequest.wrapperVer || Constants.EMPTY_STRING;\r\n        this.telemetryCacheKey =\r\n            SERVER_TELEM_CONSTANTS.CACHE_KEY +\r\n                Separators.CACHE_KEY_SEPARATOR +\r\n                telemetryRequest.clientId;\r\n    }\r\n    /**\r\n     * API to add MSER Telemetry to request\r\n     */\r\n    generateCurrentRequestHeaderValue() {\r\n        const request = `${this.apiId}${SERVER_TELEM_CONSTANTS.VALUE_SEPARATOR}${this.cacheOutcome}`;\r\n        const platformFieldsArr = [this.wrapperSKU, this.wrapperVer];\r\n        const nativeBrokerErrorCode = this.getNativeBrokerErrorCode();\r\n        if (nativeBrokerErrorCode?.length) {\r\n            platformFieldsArr.push(`broker_error=${nativeBrokerErrorCode}`);\r\n        }\r\n        const platformFields = platformFieldsArr.join(SERVER_TELEM_CONSTANTS.VALUE_SEPARATOR);\r\n        const regionDiscoveryFields = this.getRegionDiscoveryFields();\r\n        const requestWithRegionDiscoveryFields = [\r\n            request,\r\n            regionDiscoveryFields,\r\n        ].join(SERVER_TELEM_CONSTANTS.VALUE_SEPARATOR);\r\n        return [\r\n            SERVER_TELEM_CONSTANTS.SCHEMA_VERSION,\r\n            requestWithRegionDiscoveryFields,\r\n            platformFields,\r\n        ].join(SERVER_TELEM_CONSTANTS.CATEGORY_SEPARATOR);\r\n    }\r\n    /**\r\n     * API to add MSER Telemetry for the last failed request\r\n     */\r\n    generateLastRequestHeaderValue() {\r\n        const lastRequests = this.getLastRequests();\r\n        const maxErrors = ServerTelemetryManager.maxErrorsToSend(lastRequests);\r\n        const failedRequests = lastRequests.failedRequests\r\n            .slice(0, 2 * maxErrors)\r\n            .join(SERVER_TELEM_CONSTANTS.VALUE_SEPARATOR);\r\n        const errors = lastRequests.errors\r\n            .slice(0, maxErrors)\r\n            .join(SERVER_TELEM_CONSTANTS.VALUE_SEPARATOR);\r\n        const errorCount = lastRequests.errors.length;\r\n        // Indicate whether this header contains all data or partial data\r\n        const overflow = maxErrors < errorCount\r\n            ? SERVER_TELEM_CONSTANTS.OVERFLOW_TRUE\r\n            : SERVER_TELEM_CONSTANTS.OVERFLOW_FALSE;\r\n        const platformFields = [errorCount, overflow].join(SERVER_TELEM_CONSTANTS.VALUE_SEPARATOR);\r\n        return [\r\n            SERVER_TELEM_CONSTANTS.SCHEMA_VERSION,\r\n            lastRequests.cacheHits,\r\n            failedRequests,\r\n            errors,\r\n            platformFields,\r\n        ].join(SERVER_TELEM_CONSTANTS.CATEGORY_SEPARATOR);\r\n    }\r\n    /**\r\n     * API to cache token failures for MSER data capture\r\n     * @param error\r\n     */\r\n    cacheFailedRequest(error) {\r\n        const lastRequests = this.getLastRequests();\r\n        if (lastRequests.errors.length >=\r\n            SERVER_TELEM_CONSTANTS.MAX_CACHED_ERRORS) {\r\n            // Remove a cached error to make room, first in first out\r\n            lastRequests.failedRequests.shift(); // apiId\r\n            lastRequests.failedRequests.shift(); // correlationId\r\n            lastRequests.errors.shift();\r\n        }\r\n        lastRequests.failedRequests.push(this.apiId, this.correlationId);\r\n        if (error instanceof Error && !!error && error.toString()) {\r\n            if (error instanceof AuthError) {\r\n                if (error.subError) {\r\n                    lastRequests.errors.push(error.subError);\r\n                }\r\n                else if (error.errorCode) {\r\n                    lastRequests.errors.push(error.errorCode);\r\n                }\r\n                else {\r\n                    lastRequests.errors.push(error.toString());\r\n                }\r\n            }\r\n            else {\r\n                lastRequests.errors.push(error.toString());\r\n            }\r\n        }\r\n        else {\r\n            lastRequests.errors.push(SERVER_TELEM_CONSTANTS.UNKNOWN_ERROR);\r\n        }\r\n        this.cacheManager.setServerTelemetry(this.telemetryCacheKey, lastRequests, this.correlationId);\r\n        return;\r\n    }\r\n    /**\r\n     * Update server telemetry cache entry by incrementing cache hit counter\r\n     */\r\n    incrementCacheHits() {\r\n        const lastRequests = this.getLastRequests();\r\n        lastRequests.cacheHits += 1;\r\n        this.cacheManager.setServerTelemetry(this.telemetryCacheKey, lastRequests, this.correlationId);\r\n        return lastRequests.cacheHits;\r\n    }\r\n    /**\r\n     * Get the server telemetry entity from cache or initialize a new one\r\n     */\r\n    getLastRequests() {\r\n        const initialValue = {\r\n            failedRequests: [],\r\n            errors: [],\r\n            cacheHits: 0,\r\n        };\r\n        const lastRequests = this.cacheManager.getServerTelemetry(this.telemetryCacheKey);\r\n        return lastRequests || initialValue;\r\n    }\r\n    /**\r\n     * Remove server telemetry cache entry\r\n     */\r\n    clearTelemetryCache() {\r\n        const lastRequests = this.getLastRequests();\r\n        const numErrorsFlushed = ServerTelemetryManager.maxErrorsToSend(lastRequests);\r\n        const errorCount = lastRequests.errors.length;\r\n        if (numErrorsFlushed === errorCount) {\r\n            // All errors were sent on last request, clear Telemetry cache\r\n            this.cacheManager.removeItem(this.telemetryCacheKey, this.correlationId);\r\n        }\r\n        else {\r\n            // Partial data was flushed to server, construct a new telemetry cache item with errors that were not flushed\r\n            const serverTelemEntity = {\r\n                failedRequests: lastRequests.failedRequests.slice(numErrorsFlushed * 2),\r\n                errors: lastRequests.errors.slice(numErrorsFlushed),\r\n                cacheHits: 0,\r\n            };\r\n            this.cacheManager.setServerTelemetry(this.telemetryCacheKey, serverTelemEntity, this.correlationId);\r\n        }\r\n    }\r\n    /**\r\n     * Returns the maximum number of errors that can be flushed to the server in the next network request\r\n     * @param serverTelemetryEntity\r\n     */\r\n    static maxErrorsToSend(serverTelemetryEntity) {\r\n        let i;\r\n        let maxErrors = 0;\r\n        let dataSize = 0;\r\n        const errorCount = serverTelemetryEntity.errors.length;\r\n        for (i = 0; i < errorCount; i++) {\r\n            // failedRequests parameter contains pairs of apiId and correlationId, multiply index by 2 to preserve pairs\r\n            const apiId = serverTelemetryEntity.failedRequests[2 * i] ||\r\n                Constants.EMPTY_STRING;\r\n            const correlationId = serverTelemetryEntity.failedRequests[2 * i + 1] ||\r\n                Constants.EMPTY_STRING;\r\n            const errorCode = serverTelemetryEntity.errors[i] || Constants.EMPTY_STRING;\r\n            // Count number of characters that would be added to header, each character is 1 byte. Add 3 at the end to account for separators\r\n            dataSize +=\r\n                apiId.toString().length +\r\n                    correlationId.toString().length +\r\n                    errorCode.length +\r\n                    3;\r\n            if (dataSize < SERVER_TELEM_CONSTANTS.MAX_LAST_HEADER_BYTES) {\r\n                // Adding this entry to the header would still keep header size below the limit\r\n                maxErrors += 1;\r\n            }\r\n            else {\r\n                break;\r\n            }\r\n        }\r\n        return maxErrors;\r\n    }\r\n    /**\r\n     * Get the region discovery fields\r\n     *\r\n     * @returns string\r\n     */\r\n    getRegionDiscoveryFields() {\r\n        const regionDiscoveryFields = [];\r\n        regionDiscoveryFields.push(this.regionUsed || Constants.EMPTY_STRING);\r\n        regionDiscoveryFields.push(this.regionSource || Constants.EMPTY_STRING);\r\n        regionDiscoveryFields.push(this.regionOutcome || Constants.EMPTY_STRING);\r\n        return regionDiscoveryFields.join(\",\");\r\n    }\r\n    /**\r\n     * Update the region discovery metadata\r\n     *\r\n     * @param regionDiscoveryMetadata\r\n     * @returns void\r\n     */\r\n    updateRegionDiscoveryMetadata(regionDiscoveryMetadata) {\r\n        this.regionUsed = regionDiscoveryMetadata.region_used;\r\n        this.regionSource = regionDiscoveryMetadata.region_source;\r\n        this.regionOutcome = regionDiscoveryMetadata.region_outcome;\r\n    }\r\n    /**\r\n     * Set cache outcome\r\n     */\r\n    setCacheOutcome(cacheOutcome) {\r\n        this.cacheOutcome = cacheOutcome;\r\n    }\r\n    setNativeBrokerErrorCode(errorCode) {\r\n        const lastRequests = this.getLastRequests();\r\n        lastRequests.nativeBrokerErrorCode = errorCode;\r\n        this.cacheManager.setServerTelemetry(this.telemetryCacheKey, lastRequests, this.correlationId);\r\n    }\r\n    getNativeBrokerErrorCode() {\r\n        return this.getLastRequests().nativeBrokerErrorCode;\r\n    }\r\n    clearNativeBrokerErrorCode() {\r\n        const lastRequests = this.getLastRequests();\r\n        delete lastRequests.nativeBrokerErrorCode;\r\n        this.cacheManager.setServerTelemetry(this.telemetryCacheKey, lastRequests, this.correlationId);\r\n    }\r\n    static makeExtraSkuString(params) {\r\n        return makeExtraSkuString(params);\r\n    }\r\n}\n\nexport { ServerTelemetryManager };\n//# sourceMappingURL=ServerTelemetryManager.mjs.map\n","/*! @azure/msal-node v3.7.3 2025-08-27 */\n'use strict';\nimport { AccountEntity, CacheManager } from '@azure/msal-common/node';\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * This class deserializes cache entities read from the file into in-memory object types defined internally\r\n * @internal\r\n */\r\nclass Deserializer {\r\n    /**\r\n     * Parse the JSON blob in memory and deserialize the content\r\n     * @param cachedJson - JSON blob cache\r\n     */\r\n    static deserializeJSONBlob(jsonFile) {\r\n        const deserializedCache = !jsonFile ? {} : JSON.parse(jsonFile);\r\n        return deserializedCache;\r\n    }\r\n    /**\r\n     * Deserializes accounts to AccountEntity objects\r\n     * @param accounts - accounts of type SerializedAccountEntity\r\n     */\r\n    static deserializeAccounts(accounts) {\r\n        const accountObjects = {};\r\n        if (accounts) {\r\n            Object.keys(accounts).map(function (key) {\r\n                const serializedAcc = accounts[key];\r\n                const mappedAcc = {\r\n                    homeAccountId: serializedAcc.home_account_id,\r\n                    environment: serializedAcc.environment,\r\n                    realm: serializedAcc.realm,\r\n                    localAccountId: serializedAcc.local_account_id,\r\n                    username: serializedAcc.username,\r\n                    authorityType: serializedAcc.authority_type,\r\n                    name: serializedAcc.name,\r\n                    clientInfo: serializedAcc.client_info,\r\n                    lastModificationTime: serializedAcc.last_modification_time,\r\n                    lastModificationApp: serializedAcc.last_modification_app,\r\n                    tenantProfiles: serializedAcc.tenantProfiles?.map((serializedTenantProfile) => {\r\n                        return JSON.parse(serializedTenantProfile);\r\n                    }),\r\n                    lastUpdatedAt: Date.now().toString(),\r\n                };\r\n                const account = new AccountEntity();\r\n                CacheManager.toObject(account, mappedAcc);\r\n                accountObjects[key] = account;\r\n            });\r\n        }\r\n        return accountObjects;\r\n    }\r\n    /**\r\n     * Deserializes id tokens to IdTokenEntity objects\r\n     * @param idTokens - credentials of type SerializedIdTokenEntity\r\n     */\r\n    static deserializeIdTokens(idTokens) {\r\n        const idObjects = {};\r\n        if (idTokens) {\r\n            Object.keys(idTokens).map(function (key) {\r\n                const serializedIdT = idTokens[key];\r\n                const idToken = {\r\n                    homeAccountId: serializedIdT.home_account_id,\r\n                    environment: serializedIdT.environment,\r\n                    credentialType: serializedIdT.credential_type,\r\n                    clientId: serializedIdT.client_id,\r\n                    secret: serializedIdT.secret,\r\n                    realm: serializedIdT.realm,\r\n                    lastUpdatedAt: Date.now().toString(),\r\n                };\r\n                idObjects[key] = idToken;\r\n            });\r\n        }\r\n        return idObjects;\r\n    }\r\n    /**\r\n     * Deserializes access tokens to AccessTokenEntity objects\r\n     * @param accessTokens - access tokens of type SerializedAccessTokenEntity\r\n     */\r\n    static deserializeAccessTokens(accessTokens) {\r\n        const atObjects = {};\r\n        if (accessTokens) {\r\n            Object.keys(accessTokens).map(function (key) {\r\n                const serializedAT = accessTokens[key];\r\n                const accessToken = {\r\n                    homeAccountId: serializedAT.home_account_id,\r\n                    environment: serializedAT.environment,\r\n                    credentialType: serializedAT.credential_type,\r\n                    clientId: serializedAT.client_id,\r\n                    secret: serializedAT.secret,\r\n                    realm: serializedAT.realm,\r\n                    target: serializedAT.target,\r\n                    cachedAt: serializedAT.cached_at,\r\n                    expiresOn: serializedAT.expires_on,\r\n                    extendedExpiresOn: serializedAT.extended_expires_on,\r\n                    refreshOn: serializedAT.refresh_on,\r\n                    keyId: serializedAT.key_id,\r\n                    tokenType: serializedAT.token_type,\r\n                    requestedClaims: serializedAT.requestedClaims,\r\n                    requestedClaimsHash: serializedAT.requestedClaimsHash,\r\n                    userAssertionHash: serializedAT.userAssertionHash,\r\n                    lastUpdatedAt: Date.now().toString(),\r\n                };\r\n                atObjects[key] = accessToken;\r\n            });\r\n        }\r\n        return atObjects;\r\n    }\r\n    /**\r\n     * Deserializes refresh tokens to RefreshTokenEntity objects\r\n     * @param refreshTokens - refresh tokens of type SerializedRefreshTokenEntity\r\n     */\r\n    static deserializeRefreshTokens(refreshTokens) {\r\n        const rtObjects = {};\r\n        if (refreshTokens) {\r\n            Object.keys(refreshTokens).map(function (key) {\r\n                const serializedRT = refreshTokens[key];\r\n                const refreshToken = {\r\n                    homeAccountId: serializedRT.home_account_id,\r\n                    environment: serializedRT.environment,\r\n                    credentialType: serializedRT.credential_type,\r\n                    clientId: serializedRT.client_id,\r\n                    secret: serializedRT.secret,\r\n                    familyId: serializedRT.family_id,\r\n                    target: serializedRT.target,\r\n                    realm: serializedRT.realm,\r\n                    lastUpdatedAt: Date.now().toString(),\r\n                };\r\n                rtObjects[key] = refreshToken;\r\n            });\r\n        }\r\n        return rtObjects;\r\n    }\r\n    /**\r\n     * Deserializes appMetadata to AppMetaData objects\r\n     * @param appMetadata - app metadata of type SerializedAppMetadataEntity\r\n     */\r\n    static deserializeAppMetadata(appMetadata) {\r\n        const appMetadataObjects = {};\r\n        if (appMetadata) {\r\n            Object.keys(appMetadata).map(function (key) {\r\n                const serializedAmdt = appMetadata[key];\r\n                appMetadataObjects[key] = {\r\n                    clientId: serializedAmdt.client_id,\r\n                    environment: serializedAmdt.environment,\r\n                    familyId: serializedAmdt.family_id,\r\n                };\r\n            });\r\n        }\r\n        return appMetadataObjects;\r\n    }\r\n    /**\r\n     * Deserialize an inMemory Cache\r\n     * @param jsonCache - JSON blob cache\r\n     */\r\n    static deserializeAllCache(jsonCache) {\r\n        return {\r\n            accounts: jsonCache.Account\r\n                ? this.deserializeAccounts(jsonCache.Account)\r\n                : {},\r\n            idTokens: jsonCache.IdToken\r\n                ? this.deserializeIdTokens(jsonCache.IdToken)\r\n                : {},\r\n            accessTokens: jsonCache.AccessToken\r\n                ? this.deserializeAccessTokens(jsonCache.AccessToken)\r\n                : {},\r\n            refreshTokens: jsonCache.RefreshToken\r\n                ? this.deserializeRefreshTokens(jsonCache.RefreshToken)\r\n                : {},\r\n            appMetadata: jsonCache.AppMetadata\r\n                ? this.deserializeAppMetadata(jsonCache.AppMetadata)\r\n                : {},\r\n        };\r\n    }\r\n}\n\nexport { Deserializer };\n//# sourceMappingURL=Deserializer.mjs.map\n","/*! @azure/msal-node v3.7.3 2025-08-27 */\n'use strict';\nimport { HttpStatus } from '@azure/msal-common/node';\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n// MSI Constants. Docs for MSI are available here https://docs.microsoft.com/azure/app-service/overview-managed-identity\r\nconst DEFAULT_MANAGED_IDENTITY_ID = \"system_assigned_managed_identity\";\r\nconst MANAGED_IDENTITY_DEFAULT_TENANT = \"managed_identity\";\r\nconst DEFAULT_AUTHORITY_FOR_MANAGED_IDENTITY = `https://login.microsoftonline.com/${MANAGED_IDENTITY_DEFAULT_TENANT}/`;\r\n/**\r\n * Managed Identity Headers - used in network requests\r\n */\r\nconst ManagedIdentityHeaders = {\r\n    AUTHORIZATION_HEADER_NAME: \"Authorization\",\r\n    METADATA_HEADER_NAME: \"Metadata\",\r\n    APP_SERVICE_SECRET_HEADER_NAME: \"X-IDENTITY-HEADER\",\r\n    ML_AND_SF_SECRET_HEADER_NAME: \"secret\",\r\n};\r\n/**\r\n * Managed Identity Query Parameters - used in network requests\r\n */\r\nconst ManagedIdentityQueryParameters = {\r\n    API_VERSION: \"api-version\",\r\n    RESOURCE: \"resource\",\r\n    SHA256_TOKEN_TO_REFRESH: \"token_sha256_to_refresh\",\r\n    XMS_CC: \"xms_cc\",\r\n};\r\n/**\r\n * Managed Identity Environment Variable Names\r\n */\r\nconst ManagedIdentityEnvironmentVariableNames = {\r\n    AZURE_POD_IDENTITY_AUTHORITY_HOST: \"AZURE_POD_IDENTITY_AUTHORITY_HOST\",\r\n    DEFAULT_IDENTITY_CLIENT_ID: \"DEFAULT_IDENTITY_CLIENT_ID\",\r\n    IDENTITY_ENDPOINT: \"IDENTITY_ENDPOINT\",\r\n    IDENTITY_HEADER: \"IDENTITY_HEADER\",\r\n    IDENTITY_SERVER_THUMBPRINT: \"IDENTITY_SERVER_THUMBPRINT\",\r\n    IMDS_ENDPOINT: \"IMDS_ENDPOINT\",\r\n    MSI_ENDPOINT: \"MSI_ENDPOINT\",\r\n    MSI_SECRET: \"MSI_SECRET\",\r\n};\r\n/**\r\n * Managed Identity Source Names\r\n * @public\r\n */\r\nconst ManagedIdentitySourceNames = {\r\n    APP_SERVICE: \"AppService\",\r\n    AZURE_ARC: \"AzureArc\",\r\n    CLOUD_SHELL: \"CloudShell\",\r\n    DEFAULT_TO_IMDS: \"DefaultToImds\",\r\n    IMDS: \"Imds\",\r\n    MACHINE_LEARNING: \"MachineLearning\",\r\n    SERVICE_FABRIC: \"ServiceFabric\",\r\n};\r\n/**\r\n * Managed Identity Ids\r\n */\r\nconst ManagedIdentityIdType = {\r\n    SYSTEM_ASSIGNED: \"system-assigned\",\r\n    USER_ASSIGNED_CLIENT_ID: \"user-assigned-client-id\",\r\n    USER_ASSIGNED_RESOURCE_ID: \"user-assigned-resource-id\",\r\n    USER_ASSIGNED_OBJECT_ID: \"user-assigned-object-id\",\r\n};\r\n/**\r\n * http methods\r\n */\r\nconst HttpMethod = {\r\n    GET: \"get\",\r\n    POST: \"post\",\r\n};\r\nconst ProxyStatus = {\r\n    SUCCESS_RANGE_START: HttpStatus.SUCCESS_RANGE_START,\r\n    SUCCESS_RANGE_END: HttpStatus.SUCCESS_RANGE_END,\r\n    SERVER_ERROR: HttpStatus.SERVER_ERROR,\r\n};\r\n/**\r\n * Constants used for region discovery\r\n */\r\nconst REGION_ENVIRONMENT_VARIABLE = \"REGION_NAME\";\r\nconst MSAL_FORCE_REGION = \"MSAL_FORCE_REGION\";\r\n/**\r\n * Constant used for PKCE\r\n */\r\nconst RANDOM_OCTET_SIZE = 32;\r\n/**\r\n * Constants used in PKCE\r\n */\r\nconst Hash = {\r\n    SHA256: \"sha256\",\r\n};\r\n/**\r\n * Constants for encoding schemes\r\n */\r\nconst CharSet = {\r\n    CV_CHARSET: \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-._~\",\r\n};\r\n/**\r\n * Cache Constants\r\n */\r\nconst CACHE = {\r\n    KEY_SEPARATOR: \"-\",\r\n};\r\n/**\r\n * Constants\r\n */\r\nconst Constants = {\r\n    MSAL_SKU: \"msal.js.node\",\r\n    JWT_BEARER_ASSERTION_TYPE: \"urn:ietf:params:oauth:client-assertion-type:jwt-bearer\",\r\n    AUTHORIZATION_PENDING: \"authorization_pending\",\r\n    HTTP_PROTOCOL: \"http://\",\r\n    LOCALHOST: \"localhost\",\r\n};\r\n/**\r\n * API Codes for Telemetry purposes.\r\n * Before adding a new code you must claim it in the MSAL Telemetry tracker as these number spaces are shared across all MSALs\r\n * 0-99 Silent Flow\r\n * 600-699 Device Code Flow\r\n * 800-899 Auth Code Flow\r\n */\r\nconst ApiId = {\r\n    acquireTokenSilent: 62,\r\n    acquireTokenByUsernamePassword: 371,\r\n    acquireTokenByDeviceCode: 671,\r\n    acquireTokenByClientCredential: 771,\r\n    acquireTokenByCode: 871,\r\n    acquireTokenByRefreshToken: 872,\r\n};\r\n/**\r\n * JWT  constants\r\n */\r\nconst JwtConstants = {\r\n    RSA_256: \"RS256\",\r\n    PSS_256: \"PS256\",\r\n    X5T_256: \"x5t#S256\",\r\n    X5T: \"x5t\",\r\n    X5C: \"x5c\",\r\n    AUDIENCE: \"aud\",\r\n    EXPIRATION_TIME: \"exp\",\r\n    ISSUER: \"iss\",\r\n    SUBJECT: \"sub\",\r\n    NOT_BEFORE: \"nbf\",\r\n    JWT_ID: \"jti\",\r\n};\r\nconst LOOPBACK_SERVER_CONSTANTS = {\r\n    INTERVAL_MS: 100,\r\n    TIMEOUT_MS: 5000,\r\n};\r\nconst AZURE_ARC_SECRET_FILE_MAX_SIZE_BYTES = 4096; // 4 KB\n\nexport { AZURE_ARC_SECRET_FILE_MAX_SIZE_BYTES, ApiId, CACHE, CharSet, Constants, DEFAULT_AUTHORITY_FOR_MANAGED_IDENTITY, DEFAULT_MANAGED_IDENTITY_ID, Hash, HttpMethod, JwtConstants, LOOPBACK_SERVER_CONSTANTS, MANAGED_IDENTITY_DEFAULT_TENANT, MSAL_FORCE_REGION, ManagedIdentityEnvironmentVariableNames, ManagedIdentityHeaders, ManagedIdentityIdType, ManagedIdentityQueryParameters, ManagedIdentitySourceNames, ProxyStatus, RANDOM_OCTET_SIZE, REGION_ENVIRONMENT_VARIABLE };\n//# sourceMappingURL=Constants.mjs.map\n","/*! @azure/msal-node v3.7.3 2025-08-27 */\n'use strict';\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nclass NetworkUtils {\r\n    static getNetworkResponse(headers, body, statusCode) {\r\n        return {\r\n            headers: headers,\r\n            body: body,\r\n            status: statusCode,\r\n        };\r\n    }\r\n    /*\r\n     * Utility function that converts a URL object into an ordinary options object as expected by the\r\n     * http.request and https.request APIs.\r\n     * https://github.com/nodejs/node/blob/main/lib/internal/url.js#L1090\r\n     */\r\n    static urlToHttpOptions(url) {\r\n        const options = {\r\n            protocol: url.protocol,\r\n            hostname: url.hostname && url.hostname.startsWith(\"[\")\r\n                ? url.hostname.slice(1, -1)\r\n                : url.hostname,\r\n            hash: url.hash,\r\n            search: url.search,\r\n            pathname: url.pathname,\r\n            path: `${url.pathname || \"\"}${url.search || \"\"}`,\r\n            href: url.href,\r\n        };\r\n        if (url.port !== \"\") {\r\n            options.port = Number(url.port);\r\n        }\r\n        if (url.username || url.password) {\r\n            options.auth = `${decodeURIComponent(url.username)}:${decodeURIComponent(url.password)}`;\r\n        }\r\n        return options;\r\n    }\r\n}\n\nexport { NetworkUtils };\n//# sourceMappingURL=NetworkUtils.mjs.map\n","/*! @azure/msal-node v3.7.3 2025-08-27 */\n'use strict';\nimport { HttpStatus } from '@azure/msal-common/node';\nimport { ProxyStatus, Constants, HttpMethod } from '../utils/Constants.mjs';\nimport { NetworkUtils } from '../utils/NetworkUtils.mjs';\nimport http from 'http';\nimport https from 'https';\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * This class implements the API for network requests.\r\n */\r\nclass HttpClient {\r\n    constructor(proxyUrl, customAgentOptions) {\r\n        this.proxyUrl = proxyUrl || \"\";\r\n        this.customAgentOptions = customAgentOptions || {};\r\n    }\r\n    /**\r\n     * Http Get request\r\n     * @param url\r\n     * @param options\r\n     */\r\n    async sendGetRequestAsync(url, options, timeout) {\r\n        if (this.proxyUrl) {\r\n            return networkRequestViaProxy(url, this.proxyUrl, HttpMethod.GET, options, this.customAgentOptions, timeout);\r\n        }\r\n        else {\r\n            return networkRequestViaHttps(url, HttpMethod.GET, options, this.customAgentOptions, timeout);\r\n        }\r\n    }\r\n    /**\r\n     * Http Post request\r\n     * @param url\r\n     * @param options\r\n     */\r\n    async sendPostRequestAsync(url, options) {\r\n        if (this.proxyUrl) {\r\n            return networkRequestViaProxy(url, this.proxyUrl, HttpMethod.POST, options, this.customAgentOptions);\r\n        }\r\n        else {\r\n            return networkRequestViaHttps(url, HttpMethod.POST, options, this.customAgentOptions);\r\n        }\r\n    }\r\n}\r\nconst networkRequestViaProxy = (destinationUrlString, proxyUrlString, httpMethod, options, agentOptions, timeout) => {\r\n    const destinationUrl = new URL(destinationUrlString);\r\n    const proxyUrl = new URL(proxyUrlString);\r\n    // \"method: connect\" must be used to establish a connection to the proxy\r\n    const headers = options?.headers || {};\r\n    const tunnelRequestOptions = {\r\n        host: proxyUrl.hostname,\r\n        port: proxyUrl.port,\r\n        method: \"CONNECT\",\r\n        path: destinationUrl.hostname,\r\n        headers: headers,\r\n    };\r\n    if (agentOptions && Object.keys(agentOptions).length) {\r\n        tunnelRequestOptions.agent = new http.Agent(agentOptions);\r\n    }\r\n    // compose a request string for the socket\r\n    let postRequestStringContent = \"\";\r\n    if (httpMethod === HttpMethod.POST) {\r\n        const body = options?.body || \"\";\r\n        postRequestStringContent =\r\n            \"Content-Type: application/x-www-form-urlencoded\\r\\n\" +\r\n                `Content-Length: ${body.length}\\r\\n` +\r\n                `\\r\\n${body}`;\r\n    }\r\n    else {\r\n        // optional timeout is only for get requests (regionDiscovery, for example)\r\n        if (timeout) {\r\n            tunnelRequestOptions.timeout = timeout;\r\n        }\r\n    }\r\n    const outgoingRequestString = `${httpMethod.toUpperCase()} ${destinationUrl.href} HTTP/1.1\\r\\n` +\r\n        `Host: ${destinationUrl.host}\\r\\n` +\r\n        \"Connection: close\\r\\n\" +\r\n        postRequestStringContent +\r\n        \"\\r\\n\";\r\n    return new Promise((resolve, reject) => {\r\n        const request = http.request(tunnelRequestOptions);\r\n        if (timeout) {\r\n            request.on(\"timeout\", () => {\r\n                request.destroy();\r\n                reject(new Error(\"Request time out\"));\r\n            });\r\n        }\r\n        request.end();\r\n        // establish connection to the proxy\r\n        request.on(\"connect\", (response, socket) => {\r\n            const proxyStatusCode = response?.statusCode || ProxyStatus.SERVER_ERROR;\r\n            if (proxyStatusCode < ProxyStatus.SUCCESS_RANGE_START ||\r\n                proxyStatusCode > ProxyStatus.SUCCESS_RANGE_END) {\r\n                request.destroy();\r\n                socket.destroy();\r\n                reject(new Error(`Error connecting to proxy. Http status code: ${response.statusCode}. Http status message: ${response?.statusMessage || \"Unknown\"}`));\r\n            }\r\n            // make a request over an HTTP tunnel\r\n            socket.write(outgoingRequestString);\r\n            const data = [];\r\n            socket.on(\"data\", (chunk) => {\r\n                data.push(chunk);\r\n            });\r\n            socket.on(\"end\", () => {\r\n                // combine all received buffer streams into one buffer, and then into a string\r\n                const dataString = Buffer.concat([...data]).toString();\r\n                // separate each line into it's own entry in an arry\r\n                const dataStringArray = dataString.split(\"\\r\\n\");\r\n                // the first entry will contain the statusCode and statusMessage\r\n                const httpStatusCode = parseInt(dataStringArray[0].split(\" \")[1]);\r\n                // remove \"HTTP/1.1\" and the status code to get the status message\r\n                const statusMessage = dataStringArray[0]\r\n                    .split(\" \")\r\n                    .slice(2)\r\n                    .join(\" \");\r\n                // the last entry will contain the body\r\n                const body = dataStringArray[dataStringArray.length - 1];\r\n                // everything in between the first and last entries are the headers\r\n                const headersArray = dataStringArray.slice(1, dataStringArray.length - 2);\r\n                // build an object out of all the headers\r\n                const entries = new Map();\r\n                headersArray.forEach((header) => {\r\n                    /**\r\n                     * the header might look like \"Content-Length: 1531\", but that is just a string\r\n                     * it needs to be converted to a key/value pair\r\n                     * split the string at the first instance of \":\"\r\n                     * there may be more than one \":\" if the value of the header is supposed to be a JSON object\r\n                     */\r\n                    const headerKeyValue = header.split(new RegExp(/:\\s(.*)/s));\r\n                    const headerKey = headerKeyValue[0];\r\n                    let headerValue = headerKeyValue[1];\r\n                    // check if the value of the header is supposed to be a JSON object\r\n                    try {\r\n                        const object = JSON.parse(headerValue);\r\n                        // if it is, then convert it from a string to a JSON object\r\n                        if (object && typeof object === \"object\") {\r\n                            headerValue = object;\r\n                        }\r\n                    }\r\n                    catch (e) {\r\n                        // otherwise, leave it as a string\r\n                    }\r\n                    entries.set(headerKey, headerValue);\r\n                });\r\n                const headers = Object.fromEntries(entries);\r\n                const parsedHeaders = headers;\r\n                const networkResponse = NetworkUtils.getNetworkResponse(parsedHeaders, parseBody(httpStatusCode, statusMessage, parsedHeaders, body), httpStatusCode);\r\n                if ((httpStatusCode < HttpStatus.SUCCESS_RANGE_START ||\r\n                    httpStatusCode > HttpStatus.SUCCESS_RANGE_END) &&\r\n                    // do not destroy the request for the device code flow\r\n                    networkResponse.body[\"error\"] !==\r\n                        Constants.AUTHORIZATION_PENDING) {\r\n                    request.destroy();\r\n                }\r\n                resolve(networkResponse);\r\n            });\r\n            socket.on(\"error\", (chunk) => {\r\n                request.destroy();\r\n                socket.destroy();\r\n                reject(new Error(chunk.toString()));\r\n            });\r\n        });\r\n        request.on(\"error\", (chunk) => {\r\n            request.destroy();\r\n            reject(new Error(chunk.toString()));\r\n        });\r\n    });\r\n};\r\nconst networkRequestViaHttps = (urlString, httpMethod, options, agentOptions, timeout) => {\r\n    const isPostRequest = httpMethod === HttpMethod.POST;\r\n    const body = options?.body || \"\";\r\n    const url = new URL(urlString);\r\n    const headers = options?.headers || {};\r\n    const customOptions = {\r\n        method: httpMethod,\r\n        headers: headers,\r\n        ...NetworkUtils.urlToHttpOptions(url),\r\n    };\r\n    if (agentOptions && Object.keys(agentOptions).length) {\r\n        customOptions.agent = new https.Agent(agentOptions);\r\n    }\r\n    if (isPostRequest) {\r\n        // needed for post request to work\r\n        customOptions.headers = {\r\n            ...customOptions.headers,\r\n            \"Content-Length\": body.length,\r\n        };\r\n    }\r\n    else {\r\n        // optional timeout is only for get requests (regionDiscovery, for example)\r\n        if (timeout) {\r\n            customOptions.timeout = timeout;\r\n        }\r\n    }\r\n    return new Promise((resolve, reject) => {\r\n        let request;\r\n        // managed identity sources use http instead of https\r\n        if (customOptions.protocol === \"http:\") {\r\n            request = http.request(customOptions);\r\n        }\r\n        else {\r\n            request = https.request(customOptions);\r\n        }\r\n        if (isPostRequest) {\r\n            request.write(body);\r\n        }\r\n        if (timeout) {\r\n            request.on(\"timeout\", () => {\r\n                request.destroy();\r\n                reject(new Error(\"Request time out\"));\r\n            });\r\n        }\r\n        request.end();\r\n        request.on(\"response\", (response) => {\r\n            const headers = response.headers;\r\n            const statusCode = response.statusCode;\r\n            const statusMessage = response.statusMessage;\r\n            const data = [];\r\n            response.on(\"data\", (chunk) => {\r\n                data.push(chunk);\r\n            });\r\n            response.on(\"end\", () => {\r\n                // combine all received buffer streams into one buffer, and then into a string\r\n                const body = Buffer.concat([...data]).toString();\r\n                const parsedHeaders = headers;\r\n                const networkResponse = NetworkUtils.getNetworkResponse(parsedHeaders, parseBody(statusCode, statusMessage, parsedHeaders, body), statusCode);\r\n                if ((statusCode < HttpStatus.SUCCESS_RANGE_START ||\r\n                    statusCode > HttpStatus.SUCCESS_RANGE_END) &&\r\n                    // do not destroy the request for the device code flow\r\n                    networkResponse.body[\"error\"] !==\r\n                        Constants.AUTHORIZATION_PENDING) {\r\n                    request.destroy();\r\n                }\r\n                resolve(networkResponse);\r\n            });\r\n        });\r\n        request.on(\"error\", (chunk) => {\r\n            request.destroy();\r\n            reject(new Error(chunk.toString()));\r\n        });\r\n    });\r\n};\r\n/**\r\n * Check if extra parsing is needed on the repsonse from the server\r\n * @param statusCode {number} the status code of the response from the server\r\n * @param statusMessage {string | undefined} the status message of the response from the server\r\n * @param headers {Record<string, string>} the headers of the response from the server\r\n * @param body {string} the body from the response of the server\r\n * @returns {Object} JSON parsed body or error object\r\n */\r\nconst parseBody = (statusCode, statusMessage, headers, body) => {\r\n    /*\r\n     * Informational responses (100 – 199)\r\n     * Successful responses (200 – 299)\r\n     * Redirection messages (300 – 399)\r\n     * Client error responses (400 – 499)\r\n     * Server error responses (500 – 599)\r\n     */\r\n    let parsedBody;\r\n    try {\r\n        parsedBody = JSON.parse(body);\r\n    }\r\n    catch (error) {\r\n        let errorType;\r\n        let errorDescriptionHelper;\r\n        if (statusCode >= HttpStatus.CLIENT_ERROR_RANGE_START &&\r\n            statusCode <= HttpStatus.CLIENT_ERROR_RANGE_END) {\r\n            errorType = \"client_error\";\r\n            errorDescriptionHelper = \"A client\";\r\n        }\r\n        else if (statusCode >= HttpStatus.SERVER_ERROR_RANGE_START &&\r\n            statusCode <= HttpStatus.SERVER_ERROR_RANGE_END) {\r\n            errorType = \"server_error\";\r\n            errorDescriptionHelper = \"A server\";\r\n        }\r\n        else {\r\n            errorType = \"unknown_error\";\r\n            errorDescriptionHelper = \"An unknown\";\r\n        }\r\n        parsedBody = {\r\n            error: errorType,\r\n            error_description: `${errorDescriptionHelper} error occured.\\nHttp status code: ${statusCode}\\nHttp status message: ${statusMessage || \"Unknown\"}\\nHeaders: ${JSON.stringify(headers)}`,\r\n        };\r\n    }\r\n    return parsedBody;\r\n};\n\nexport { HttpClient };\n//# sourceMappingURL=HttpClient.mjs.map\n","/*! @azure/msal-node v3.7.3 2025-08-27 */\n'use strict';\nimport { ManagedIdentityEnvironmentVariableNames } from '../utils/Constants.mjs';\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nconst invalidFileExtension = \"invalid_file_extension\";\r\nconst invalidFilePath = \"invalid_file_path\";\r\nconst invalidManagedIdentityIdType = \"invalid_managed_identity_id_type\";\r\nconst invalidSecret = \"invalid_secret\";\r\nconst missingId = \"missing_client_id\";\r\nconst networkUnavailable = \"network_unavailable\";\r\nconst platformNotSupported = \"platform_not_supported\";\r\nconst unableToCreateAzureArc = \"unable_to_create_azure_arc\";\r\nconst unableToCreateCloudShell = \"unable_to_create_cloud_shell\";\r\nconst unableToCreateSource = \"unable_to_create_source\";\r\nconst unableToReadSecretFile = \"unable_to_read_secret_file\";\r\nconst userAssignedNotAvailableAtRuntime = \"user_assigned_not_available_at_runtime\";\r\nconst wwwAuthenticateHeaderMissing = \"www_authenticate_header_missing\";\r\nconst wwwAuthenticateHeaderUnsupportedFormat = \"www_authenticate_header_unsupported_format\";\r\nconst MsiEnvironmentVariableUrlMalformedErrorCodes = {\r\n    [ManagedIdentityEnvironmentVariableNames.AZURE_POD_IDENTITY_AUTHORITY_HOST]: \"azure_pod_identity_authority_host_url_malformed\",\r\n    [ManagedIdentityEnvironmentVariableNames.IDENTITY_ENDPOINT]: \"identity_endpoint_url_malformed\",\r\n    [ManagedIdentityEnvironmentVariableNames.IMDS_ENDPOINT]: \"imds_endpoint_url_malformed\",\r\n    [ManagedIdentityEnvironmentVariableNames.MSI_ENDPOINT]: \"msi_endpoint_url_malformed\",\r\n};\n\nexport { MsiEnvironmentVariableUrlMalformedErrorCodes, invalidFileExtension, invalidFilePath, invalidManagedIdentityIdType, invalidSecret, missingId, networkUnavailable, platformNotSupported, unableToCreateAzureArc, unableToCreateCloudShell, unableToCreateSource, unableToReadSecretFile, userAssignedNotAvailableAtRuntime, wwwAuthenticateHeaderMissing, wwwAuthenticateHeaderUnsupportedFormat };\n//# sourceMappingURL=ManagedIdentityErrorCodes.mjs.map\n","/*! @azure/msal-node v3.7.3 2025-08-27 */\n'use strict';\nimport { AuthError } from '@azure/msal-common/node';\nimport { wwwAuthenticateHeaderUnsupportedFormat, wwwAuthenticateHeaderMissing, userAssignedNotAvailableAtRuntime, unableToReadSecretFile, unableToCreateSource, unableToCreateCloudShell, unableToCreateAzureArc, networkUnavailable, MsiEnvironmentVariableUrlMalformedErrorCodes, missingId, platformNotSupported, invalidSecret, invalidManagedIdentityIdType, invalidFilePath, invalidFileExtension } from './ManagedIdentityErrorCodes.mjs';\nimport { ManagedIdentityEnvironmentVariableNames } from '../utils/Constants.mjs';\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * ManagedIdentityErrorMessage class containing string constants used by error codes and messages.\r\n */\r\nconst ManagedIdentityErrorMessages = {\r\n    [invalidFileExtension]: \"The file path in the WWW-Authenticate header does not contain a .key file.\",\r\n    [invalidFilePath]: \"The file path in the WWW-Authenticate header is not in a valid Windows or Linux Format.\",\r\n    [invalidManagedIdentityIdType]: \"More than one ManagedIdentityIdType was provided.\",\r\n    [invalidSecret]: \"The secret in the file on the file path in the WWW-Authenticate header is greater than 4096 bytes.\",\r\n    [platformNotSupported]: \"The platform is not supported by Azure Arc. Azure Arc only supports Windows and Linux.\",\r\n    [missingId]: \"A ManagedIdentityId id was not provided.\",\r\n    [MsiEnvironmentVariableUrlMalformedErrorCodes\r\n        .AZURE_POD_IDENTITY_AUTHORITY_HOST]: `The Managed Identity's '${ManagedIdentityEnvironmentVariableNames.AZURE_POD_IDENTITY_AUTHORITY_HOST}' environment variable is malformed.`,\r\n    [MsiEnvironmentVariableUrlMalformedErrorCodes\r\n        .IDENTITY_ENDPOINT]: `The Managed Identity's '${ManagedIdentityEnvironmentVariableNames.IDENTITY_ENDPOINT}' environment variable is malformed.`,\r\n    [MsiEnvironmentVariableUrlMalformedErrorCodes\r\n        .IMDS_ENDPOINT]: `The Managed Identity's '${ManagedIdentityEnvironmentVariableNames.IMDS_ENDPOINT}' environment variable is malformed.`,\r\n    [MsiEnvironmentVariableUrlMalformedErrorCodes\r\n        .MSI_ENDPOINT]: `The Managed Identity's '${ManagedIdentityEnvironmentVariableNames.MSI_ENDPOINT}' environment variable is malformed.`,\r\n    [networkUnavailable]: \"Authentication unavailable. The request to the managed identity endpoint timed out.\",\r\n    [unableToCreateAzureArc]: \"Azure Arc Managed Identities can only be system assigned.\",\r\n    [unableToCreateCloudShell]: \"Cloud Shell Managed Identities can only be system assigned.\",\r\n    [unableToCreateSource]: \"Unable to create a Managed Identity source based on environment variables.\",\r\n    [unableToReadSecretFile]: \"Unable to read the secret file.\",\r\n    [userAssignedNotAvailableAtRuntime]: \"Service Fabric user assigned managed identity ClientId or ResourceId is not configurable at runtime.\",\r\n    [wwwAuthenticateHeaderMissing]: \"A 401 response was received form the Azure Arc Managed Identity, but the www-authenticate header is missing.\",\r\n    [wwwAuthenticateHeaderUnsupportedFormat]: \"A 401 response was received form the Azure Arc Managed Identity, but the www-authenticate header is in an unsupported format.\",\r\n};\r\nclass ManagedIdentityError extends AuthError {\r\n    constructor(errorCode) {\r\n        super(errorCode, ManagedIdentityErrorMessages[errorCode]);\r\n        this.name = \"ManagedIdentityError\";\r\n        Object.setPrototypeOf(this, ManagedIdentityError.prototype);\r\n    }\r\n}\r\nfunction createManagedIdentityError(errorCode) {\r\n    return new ManagedIdentityError(errorCode);\r\n}\n\nexport { ManagedIdentityError, ManagedIdentityErrorMessages, createManagedIdentityError };\n//# sourceMappingURL=ManagedIdentityError.mjs.map\n","/*! @azure/msal-node v3.7.3 2025-08-27 */\n'use strict';\nimport { createManagedIdentityError } from '../error/ManagedIdentityError.mjs';\nimport { ManagedIdentityIdType, DEFAULT_MANAGED_IDENTITY_ID } from '../utils/Constants.mjs';\nimport { invalidManagedIdentityIdType } from '../error/ManagedIdentityErrorCodes.mjs';\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nclass ManagedIdentityId {\r\n    get id() {\r\n        return this._id;\r\n    }\r\n    set id(value) {\r\n        this._id = value;\r\n    }\r\n    get idType() {\r\n        return this._idType;\r\n    }\r\n    set idType(value) {\r\n        this._idType = value;\r\n    }\r\n    constructor(managedIdentityIdParams) {\r\n        const userAssignedClientId = managedIdentityIdParams?.userAssignedClientId;\r\n        const userAssignedResourceId = managedIdentityIdParams?.userAssignedResourceId;\r\n        const userAssignedObjectId = managedIdentityIdParams?.userAssignedObjectId;\r\n        if (userAssignedClientId) {\r\n            if (userAssignedResourceId || userAssignedObjectId) {\r\n                throw createManagedIdentityError(invalidManagedIdentityIdType);\r\n            }\r\n            this.id = userAssignedClientId;\r\n            this.idType = ManagedIdentityIdType.USER_ASSIGNED_CLIENT_ID;\r\n        }\r\n        else if (userAssignedResourceId) {\r\n            if (userAssignedClientId || userAssignedObjectId) {\r\n                throw createManagedIdentityError(invalidManagedIdentityIdType);\r\n            }\r\n            this.id = userAssignedResourceId;\r\n            this.idType = ManagedIdentityIdType.USER_ASSIGNED_RESOURCE_ID;\r\n        }\r\n        else if (userAssignedObjectId) {\r\n            if (userAssignedClientId || userAssignedResourceId) {\r\n                throw createManagedIdentityError(invalidManagedIdentityIdType);\r\n            }\r\n            this.id = userAssignedObjectId;\r\n            this.idType = ManagedIdentityIdType.USER_ASSIGNED_OBJECT_ID;\r\n        }\r\n        else {\r\n            this.id = DEFAULT_MANAGED_IDENTITY_ID;\r\n            this.idType = ManagedIdentityIdType.SYSTEM_ASSIGNED;\r\n        }\r\n    }\r\n}\n\nexport { ManagedIdentityId };\n//# sourceMappingURL=ManagedIdentityId.mjs.map\n","/*! @azure/msal-node v3.7.3 2025-08-27 */\n'use strict';\nimport { AuthError } from '@azure/msal-common/node';\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * NodeAuthErrorMessage class containing string constants used by error codes and messages.\r\n */\r\nconst NodeAuthErrorMessage = {\r\n    invalidLoopbackAddressType: {\r\n        code: \"invalid_loopback_server_address_type\",\r\n        desc: \"Loopback server address is not type string. This is unexpected.\",\r\n    },\r\n    unableToLoadRedirectUri: {\r\n        code: \"unable_to_load_redirectUrl\",\r\n        desc: \"Loopback server callback was invoked without a url. This is unexpected.\",\r\n    },\r\n    noAuthCodeInResponse: {\r\n        code: \"no_auth_code_in_response\",\r\n        desc: \"No auth code found in the server response. Please check your network trace to determine what happened.\",\r\n    },\r\n    noLoopbackServerExists: {\r\n        code: \"no_loopback_server_exists\",\r\n        desc: \"No loopback server exists yet.\",\r\n    },\r\n    loopbackServerAlreadyExists: {\r\n        code: \"loopback_server_already_exists\",\r\n        desc: \"Loopback server already exists. Cannot create another.\",\r\n    },\r\n    loopbackServerTimeout: {\r\n        code: \"loopback_server_timeout\",\r\n        desc: \"Timed out waiting for auth code listener to be registered.\",\r\n    },\r\n    stateNotFoundError: {\r\n        code: \"state_not_found\",\r\n        desc: \"State not found. Please verify that the request originated from msal.\",\r\n    },\r\n    thumbprintMissing: {\r\n        code: \"thumbprint_missing_from_client_certificate\",\r\n        desc: \"Client certificate does not contain a SHA-1 or SHA-256 thumbprint.\",\r\n    },\r\n    redirectUriNotSupported: {\r\n        code: \"redirect_uri_not_supported\",\r\n        desc: \"RedirectUri is not supported in this scenario. Please remove redirectUri from the request.\",\r\n    },\r\n};\r\nclass NodeAuthError extends AuthError {\r\n    constructor(errorCode, errorMessage) {\r\n        super(errorCode, errorMessage);\r\n        this.name = \"NodeAuthError\";\r\n    }\r\n    /**\r\n     * Creates an error thrown if loopback server address is of type string.\r\n     */\r\n    static createInvalidLoopbackAddressTypeError() {\r\n        return new NodeAuthError(NodeAuthErrorMessage.invalidLoopbackAddressType.code, `${NodeAuthErrorMessage.invalidLoopbackAddressType.desc}`);\r\n    }\r\n    /**\r\n     * Creates an error thrown if the loopback server is unable to get a url.\r\n     */\r\n    static createUnableToLoadRedirectUrlError() {\r\n        return new NodeAuthError(NodeAuthErrorMessage.unableToLoadRedirectUri.code, `${NodeAuthErrorMessage.unableToLoadRedirectUri.desc}`);\r\n    }\r\n    /**\r\n     * Creates an error thrown if the server response does not contain an auth code.\r\n     */\r\n    static createNoAuthCodeInResponseError() {\r\n        return new NodeAuthError(NodeAuthErrorMessage.noAuthCodeInResponse.code, `${NodeAuthErrorMessage.noAuthCodeInResponse.desc}`);\r\n    }\r\n    /**\r\n     * Creates an error thrown if the loopback server has not been spun up yet.\r\n     */\r\n    static createNoLoopbackServerExistsError() {\r\n        return new NodeAuthError(NodeAuthErrorMessage.noLoopbackServerExists.code, `${NodeAuthErrorMessage.noLoopbackServerExists.desc}`);\r\n    }\r\n    /**\r\n     * Creates an error thrown if a loopback server already exists when attempting to create another one.\r\n     */\r\n    static createLoopbackServerAlreadyExistsError() {\r\n        return new NodeAuthError(NodeAuthErrorMessage.loopbackServerAlreadyExists.code, `${NodeAuthErrorMessage.loopbackServerAlreadyExists.desc}`);\r\n    }\r\n    /**\r\n     * Creates an error thrown if the loopback server times out registering the auth code listener.\r\n     */\r\n    static createLoopbackServerTimeoutError() {\r\n        return new NodeAuthError(NodeAuthErrorMessage.loopbackServerTimeout.code, `${NodeAuthErrorMessage.loopbackServerTimeout.desc}`);\r\n    }\r\n    /**\r\n     * Creates an error thrown when the state is not present.\r\n     */\r\n    static createStateNotFoundError() {\r\n        return new NodeAuthError(NodeAuthErrorMessage.stateNotFoundError.code, NodeAuthErrorMessage.stateNotFoundError.desc);\r\n    }\r\n    /**\r\n     * Creates an error thrown when client certificate was provided, but neither the SHA-1 or SHA-256 thumbprints were provided\r\n     */\r\n    static createThumbprintMissingError() {\r\n        return new NodeAuthError(NodeAuthErrorMessage.thumbprintMissing.code, NodeAuthErrorMessage.thumbprintMissing.desc);\r\n    }\r\n    /**\r\n     * Creates an error thrown when redirectUri is provided in an unsupported scenario\r\n     */\r\n    static createRedirectUriNotSupportedError() {\r\n        return new NodeAuthError(NodeAuthErrorMessage.redirectUriNotSupported.code, NodeAuthErrorMessage.redirectUriNotSupported.desc);\r\n    }\r\n}\n\nexport { NodeAuthError, NodeAuthErrorMessage };\n//# sourceMappingURL=NodeAuthError.mjs.map\n","/*! @azure/msal-node v3.7.3 2025-08-27 */\n'use strict';\nimport { Constants, LogLevel, AzureCloudInstance, ProtocolMode } from '@azure/msal-common/node';\nimport { HttpClient } from '../network/HttpClient.mjs';\nimport { ManagedIdentityId } from './ManagedIdentityId.mjs';\nimport { NodeAuthError } from '../error/NodeAuthError.mjs';\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nconst DEFAULT_AUTH_OPTIONS = {\r\n    clientId: Constants.EMPTY_STRING,\r\n    authority: Constants.DEFAULT_AUTHORITY,\r\n    clientSecret: Constants.EMPTY_STRING,\r\n    clientAssertion: Constants.EMPTY_STRING,\r\n    clientCertificate: {\r\n        thumbprint: Constants.EMPTY_STRING,\r\n        thumbprintSha256: Constants.EMPTY_STRING,\r\n        privateKey: Constants.EMPTY_STRING,\r\n        x5c: Constants.EMPTY_STRING,\r\n    },\r\n    knownAuthorities: [],\r\n    cloudDiscoveryMetadata: Constants.EMPTY_STRING,\r\n    authorityMetadata: Constants.EMPTY_STRING,\r\n    clientCapabilities: [],\r\n    protocolMode: ProtocolMode.AAD,\r\n    azureCloudOptions: {\r\n        azureCloudInstance: AzureCloudInstance.None,\r\n        tenant: Constants.EMPTY_STRING,\r\n    },\r\n    skipAuthorityMetadataCache: false,\r\n    encodeExtraQueryParams: false,\r\n};\r\nconst DEFAULT_CACHE_OPTIONS = {\r\n    claimsBasedCachingEnabled: false,\r\n};\r\nconst DEFAULT_LOGGER_OPTIONS = {\r\n    loggerCallback: () => {\r\n        // allow users to not set logger call back\r\n    },\r\n    piiLoggingEnabled: false,\r\n    logLevel: LogLevel.Info,\r\n};\r\nconst DEFAULT_SYSTEM_OPTIONS = {\r\n    loggerOptions: DEFAULT_LOGGER_OPTIONS,\r\n    networkClient: new HttpClient(),\r\n    proxyUrl: Constants.EMPTY_STRING,\r\n    customAgentOptions: {},\r\n    disableInternalRetries: false,\r\n};\r\nconst DEFAULT_TELEMETRY_OPTIONS = {\r\n    application: {\r\n        appName: Constants.EMPTY_STRING,\r\n        appVersion: Constants.EMPTY_STRING,\r\n    },\r\n};\r\n/**\r\n * Sets the default options when not explicitly configured from app developer\r\n *\r\n * @param auth - Authentication options\r\n * @param cache - Cache options\r\n * @param system - System options\r\n * @param telemetry - Telemetry options\r\n *\r\n * @returns Configuration\r\n * @internal\r\n */\r\nfunction buildAppConfiguration({ auth, broker, cache, system, telemetry, }) {\r\n    const systemOptions = {\r\n        ...DEFAULT_SYSTEM_OPTIONS,\r\n        networkClient: new HttpClient(system?.proxyUrl, system?.customAgentOptions),\r\n        loggerOptions: system?.loggerOptions || DEFAULT_LOGGER_OPTIONS,\r\n        disableInternalRetries: system?.disableInternalRetries || false,\r\n    };\r\n    // if client certificate was provided, ensure that at least one of the SHA-1 or SHA-256 thumbprints were provided\r\n    if (!!auth.clientCertificate &&\r\n        !!!auth.clientCertificate.thumbprint &&\r\n        !!!auth.clientCertificate.thumbprintSha256) {\r\n        throw NodeAuthError.createStateNotFoundError();\r\n    }\r\n    return {\r\n        auth: { ...DEFAULT_AUTH_OPTIONS, ...auth },\r\n        broker: { ...broker },\r\n        cache: { ...DEFAULT_CACHE_OPTIONS, ...cache },\r\n        system: { ...systemOptions, ...system },\r\n        telemetry: { ...DEFAULT_TELEMETRY_OPTIONS, ...telemetry },\r\n    };\r\n}\r\nfunction buildManagedIdentityConfiguration({ clientCapabilities, managedIdentityIdParams, system, }) {\r\n    const managedIdentityId = new ManagedIdentityId(managedIdentityIdParams);\r\n    const loggerOptions = system?.loggerOptions || DEFAULT_LOGGER_OPTIONS;\r\n    let networkClient;\r\n    // use developer provided network client if passed in\r\n    if (system?.networkClient) {\r\n        networkClient = system.networkClient;\r\n        // otherwise, create a new one\r\n    }\r\n    else {\r\n        networkClient = new HttpClient(system?.proxyUrl, system?.customAgentOptions);\r\n    }\r\n    return {\r\n        clientCapabilities: clientCapabilities || [],\r\n        managedIdentityId: managedIdentityId,\r\n        system: {\r\n            loggerOptions,\r\n            networkClient,\r\n        },\r\n        disableInternalRetries: system?.disableInternalRetries || false,\r\n    };\r\n}\n\nexport { buildAppConfiguration, buildManagedIdentityConfiguration };\n//# sourceMappingURL=Configuration.mjs.map\n","// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\nvar getRandomValues;\nvar rnds8 = new Uint8Array(16);\nexport default function rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation. Also,\n    // find the complete implementation of crypto (msCrypto) on IE11.\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto) || typeof msCrypto !== 'undefined' && typeof msCrypto.getRandomValues === 'function' && msCrypto.getRandomValues.bind(msCrypto);\n\n    if (!getRandomValues) {\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n  }\n\n  return getRandomValues(rnds8);\n}","export default /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;","import validate from './validate.js';\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nvar byteToHex = [];\n\nfor (var i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).substr(1));\n}\n\nfunction stringify(arr) {\n  var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  var uuid = (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase(); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;","import REGEX from './regex.js';\n\nfunction validate(uuid) {\n  return typeof uuid === 'string' && REGEX.test(uuid);\n}\n\nexport default validate;","import rng from './rng.js';\nimport stringify from './stringify.js';\n\nfunction v4(options, buf, offset) {\n  options = options || {};\n  var rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (var i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return stringify(rnds);\n}\n\nexport default v4;","/*! @azure/msal-node v3.7.3 2025-08-27 */\n'use strict';\nimport { v4 } from 'uuid';\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nclass GuidGenerator {\r\n    /**\r\n     *\r\n     * RFC4122: The version 4 UUID is meant for generating UUIDs from truly-random or pseudo-random numbers.\r\n     * uuidv4 generates guids from cryprtographically-string random\r\n     */\r\n    generateGuid() {\r\n        return v4();\r\n    }\r\n    /**\r\n     * verifies if a string is  GUID\r\n     * @param guid\r\n     */\r\n    isGuid(guid) {\r\n        const regexGuid = /^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$/i;\r\n        return regexGuid.test(guid);\r\n    }\r\n}\n\nexport { GuidGenerator };\n//# sourceMappingURL=GuidGenerator.mjs.map\n","/*! @azure/msal-node v3.7.3 2025-08-27 */\n'use strict';\nimport { EncodingTypes, Constants } from '@azure/msal-common/node';\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nclass EncodingUtils {\r\n    /**\r\n     * 'utf8': Multibyte encoded Unicode characters. Many web pages and other document formats use UTF-8.\r\n     * 'base64': Base64 encoding.\r\n     *\r\n     * @param str text\r\n     */\r\n    static base64Encode(str, encoding) {\r\n        return Buffer.from(str, encoding).toString(EncodingTypes.BASE64);\r\n    }\r\n    /**\r\n     * encode a URL\r\n     * @param str\r\n     */\r\n    static base64EncodeUrl(str, encoding) {\r\n        return EncodingUtils.base64Encode(str, encoding)\r\n            .replace(/=/g, Constants.EMPTY_STRING)\r\n            .replace(/\\+/g, \"-\")\r\n            .replace(/\\//g, \"_\");\r\n    }\r\n    /**\r\n     * 'utf8': Multibyte encoded Unicode characters. Many web pages and other document formats use UTF-8.\r\n     * 'base64': Base64 encoding.\r\n     *\r\n     * @param base64Str Base64 encoded text\r\n     */\r\n    static base64Decode(base64Str) {\r\n        return Buffer.from(base64Str, EncodingTypes.BASE64).toString(\"utf8\");\r\n    }\r\n    /**\r\n     * @param base64Str Base64 encoded Url\r\n     */\r\n    static base64DecodeUrl(base64Str) {\r\n        let str = base64Str.replace(/-/g, \"+\").replace(/_/g, \"/\");\r\n        while (str.length % 4) {\r\n            str += \"=\";\r\n        }\r\n        return EncodingUtils.base64Decode(str);\r\n    }\r\n}\n\nexport { EncodingUtils };\n//# sourceMappingURL=EncodingUtils.mjs.map\n","/*! @azure/msal-node v3.7.3 2025-08-27 */\n'use strict';\nimport { Hash } from '../utils/Constants.mjs';\nimport crypto from 'crypto';\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nclass HashUtils {\r\n    /**\r\n     * generate 'SHA256' hash\r\n     * @param buffer\r\n     */\r\n    sha256(buffer) {\r\n        return crypto.createHash(Hash.SHA256).update(buffer).digest();\r\n    }\r\n}\n\nexport { HashUtils };\n//# sourceMappingURL=HashUtils.mjs.map\n","/*! @azure/msal-node v3.7.3 2025-08-27 */\n'use strict';\nimport { EncodingTypes, Constants } from '@azure/msal-common/node';\nimport { RANDOM_OCTET_SIZE, CharSet } from '../utils/Constants.mjs';\nimport { EncodingUtils } from '../utils/EncodingUtils.mjs';\nimport { HashUtils } from './HashUtils.mjs';\nimport crypto from 'crypto';\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * https://tools.ietf.org/html/rfc7636#page-8\r\n */\r\nclass PkceGenerator {\r\n    constructor() {\r\n        this.hashUtils = new HashUtils();\r\n    }\r\n    /**\r\n     * generates the codeVerfier and the challenge from the codeVerfier\r\n     * reference: https://tools.ietf.org/html/rfc7636#section-4.1 and https://tools.ietf.org/html/rfc7636#section-4.2\r\n     */\r\n    async generatePkceCodes() {\r\n        const verifier = this.generateCodeVerifier();\r\n        const challenge = this.generateCodeChallengeFromVerifier(verifier);\r\n        return { verifier, challenge };\r\n    }\r\n    /**\r\n     * generates the codeVerfier; reference: https://tools.ietf.org/html/rfc7636#section-4.1\r\n     */\r\n    generateCodeVerifier() {\r\n        const charArr = [];\r\n        const maxNumber = 256 - (256 % CharSet.CV_CHARSET.length);\r\n        while (charArr.length <= RANDOM_OCTET_SIZE) {\r\n            const byte = crypto.randomBytes(1)[0];\r\n            if (byte >= maxNumber) {\r\n                /*\r\n                 * Ignore this number to maintain randomness.\r\n                 * Including it would result in an unequal distribution of characters after doing the modulo\r\n                 */\r\n                continue;\r\n            }\r\n            const index = byte % CharSet.CV_CHARSET.length;\r\n            charArr.push(CharSet.CV_CHARSET[index]);\r\n        }\r\n        const verifier = charArr.join(Constants.EMPTY_STRING);\r\n        return EncodingUtils.base64EncodeUrl(verifier);\r\n    }\r\n    /**\r\n     * generate the challenge from the codeVerfier; reference: https://tools.ietf.org/html/rfc7636#section-4.2\r\n     * @param codeVerifier\r\n     */\r\n    generateCodeChallengeFromVerifier(codeVerifier) {\r\n        return EncodingUtils.base64EncodeUrl(this.hashUtils.sha256(codeVerifier).toString(EncodingTypes.BASE64), EncodingTypes.BASE64);\r\n    }\r\n}\n\nexport { PkceGenerator };\n//# sourceMappingURL=PkceGenerator.mjs.map\n","/*! @azure/msal-node v3.7.3 2025-08-27 */\n'use strict';\nimport { EncodingTypes } from '@azure/msal-common/node';\nimport { GuidGenerator } from './GuidGenerator.mjs';\nimport { EncodingUtils } from '../utils/EncodingUtils.mjs';\nimport { PkceGenerator } from './PkceGenerator.mjs';\nimport { HashUtils } from './HashUtils.mjs';\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * This class implements MSAL node's crypto interface, which allows it to perform base64 encoding and decoding, generating cryptographically random GUIDs and\r\n * implementing Proof Key for Code Exchange specs for the OAuth Authorization Code Flow using PKCE (rfc here: https://tools.ietf.org/html/rfc7636).\r\n * @public\r\n */\r\nclass CryptoProvider {\r\n    constructor() {\r\n        // Browser crypto needs to be validated first before any other classes can be set.\r\n        this.pkceGenerator = new PkceGenerator();\r\n        this.guidGenerator = new GuidGenerator();\r\n        this.hashUtils = new HashUtils();\r\n    }\r\n    /**\r\n     * base64 URL safe encoded string\r\n     */\r\n    base64UrlEncode() {\r\n        throw new Error(\"Method not implemented.\");\r\n    }\r\n    /**\r\n     * Stringifies and base64Url encodes input public key\r\n     * @param inputKid - public key id\r\n     * @returns Base64Url encoded public key\r\n     */\r\n    encodeKid() {\r\n        throw new Error(\"Method not implemented.\");\r\n    }\r\n    /**\r\n     * Creates a new random GUID - used to populate state and nonce.\r\n     * @returns string (GUID)\r\n     */\r\n    createNewGuid() {\r\n        return this.guidGenerator.generateGuid();\r\n    }\r\n    /**\r\n     * Encodes input string to base64.\r\n     * @param input - string to be encoded\r\n     */\r\n    base64Encode(input) {\r\n        return EncodingUtils.base64Encode(input);\r\n    }\r\n    /**\r\n     * Decodes input string from base64.\r\n     * @param input - string to be decoded\r\n     */\r\n    base64Decode(input) {\r\n        return EncodingUtils.base64Decode(input);\r\n    }\r\n    /**\r\n     * Generates PKCE codes used in Authorization Code Flow.\r\n     */\r\n    generatePkceCodes() {\r\n        return this.pkceGenerator.generatePkceCodes();\r\n    }\r\n    /**\r\n     * Generates a keypair, stores it and returns a thumbprint - not yet implemented for node\r\n     */\r\n    getPublicKeyThumbprint() {\r\n        throw new Error(\"Method not implemented.\");\r\n    }\r\n    /**\r\n     * Removes cryptographic keypair from key store matching the keyId passed in\r\n     * @param kid - public key id\r\n     */\r\n    removeTokenBindingKey() {\r\n        throw new Error(\"Method not implemented.\");\r\n    }\r\n    /**\r\n     * Removes all cryptographic keys from Keystore\r\n     */\r\n    clearKeystore() {\r\n        throw new Error(\"Method not implemented.\");\r\n    }\r\n    /**\r\n     * Signs the given object as a jwt payload with private key retrieved by given kid - currently not implemented for node\r\n     */\r\n    signJwt() {\r\n        throw new Error(\"Method not implemented.\");\r\n    }\r\n    /**\r\n     * Returns the SHA-256 hash of an input string\r\n     */\r\n    async hashString(plainText) {\r\n        return EncodingUtils.base64EncodeUrl(this.hashUtils.sha256(plainText).toString(EncodingTypes.BASE64), EncodingTypes.BASE64);\r\n    }\r\n}\n\nexport { CryptoProvider };\n//# sourceMappingURL=CryptoProvider.mjs.map\n","/*! @azure/msal-node v3.7.3 2025-08-27 */\n'use strict';\nimport { CacheManager, AccountEntity, CacheHelpers } from '@azure/msal-common/node';\nimport { Deserializer } from './serializer/Deserializer.mjs';\nimport { Serializer } from './serializer/Serializer.mjs';\nimport { StubPerformanceClient } from '@azure/msal-common';\nimport { generateCredentialKey, generateAccountKey } from './CacheHelpers.mjs';\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * This class implements Storage for node, reading cache from user specified storage location or an  extension library\r\n * @public\r\n */\r\nclass NodeStorage extends CacheManager {\r\n    constructor(logger, clientId, cryptoImpl, staticAuthorityOptions) {\r\n        super(clientId, cryptoImpl, logger, new StubPerformanceClient(), staticAuthorityOptions);\r\n        this.cache = {};\r\n        this.changeEmitters = [];\r\n        this.logger = logger;\r\n    }\r\n    /**\r\n     * Queue up callbacks\r\n     * @param func - a callback function for cache change indication\r\n     */\r\n    registerChangeEmitter(func) {\r\n        this.changeEmitters.push(func);\r\n    }\r\n    /**\r\n     * Invoke the callback when cache changes\r\n     */\r\n    emitChange() {\r\n        this.changeEmitters.forEach((func) => func.call(null));\r\n    }\r\n    /**\r\n     * Converts cacheKVStore to InMemoryCache\r\n     * @param cache - key value store\r\n     */\r\n    cacheToInMemoryCache(cache) {\r\n        const inMemoryCache = {\r\n            accounts: {},\r\n            idTokens: {},\r\n            accessTokens: {},\r\n            refreshTokens: {},\r\n            appMetadata: {},\r\n        };\r\n        for (const key in cache) {\r\n            const value = cache[key];\r\n            if (typeof value !== \"object\") {\r\n                continue;\r\n            }\r\n            if (value instanceof AccountEntity) {\r\n                inMemoryCache.accounts[key] = value;\r\n            }\r\n            else if (CacheHelpers.isIdTokenEntity(value)) {\r\n                inMemoryCache.idTokens[key] = value;\r\n            }\r\n            else if (CacheHelpers.isAccessTokenEntity(value)) {\r\n                inMemoryCache.accessTokens[key] = value;\r\n            }\r\n            else if (CacheHelpers.isRefreshTokenEntity(value)) {\r\n                inMemoryCache.refreshTokens[key] = value;\r\n            }\r\n            else if (CacheHelpers.isAppMetadataEntity(key, value)) {\r\n                inMemoryCache.appMetadata[key] = value;\r\n            }\r\n            else {\r\n                continue;\r\n            }\r\n        }\r\n        return inMemoryCache;\r\n    }\r\n    /**\r\n     * converts inMemoryCache to CacheKVStore\r\n     * @param inMemoryCache - kvstore map for inmemory\r\n     */\r\n    inMemoryCacheToCache(inMemoryCache) {\r\n        // convert in memory cache to a flat Key-Value map\r\n        let cache = this.getCache();\r\n        cache = {\r\n            ...cache,\r\n            ...inMemoryCache.accounts,\r\n            ...inMemoryCache.idTokens,\r\n            ...inMemoryCache.accessTokens,\r\n            ...inMemoryCache.refreshTokens,\r\n            ...inMemoryCache.appMetadata,\r\n        };\r\n        // convert in memory cache to a flat Key-Value map\r\n        return cache;\r\n    }\r\n    /**\r\n     * gets the current in memory cache for the client\r\n     */\r\n    getInMemoryCache() {\r\n        this.logger.trace(\"Getting in-memory cache\");\r\n        // convert the cache key value store to inMemoryCache\r\n        const inMemoryCache = this.cacheToInMemoryCache(this.getCache());\r\n        return inMemoryCache;\r\n    }\r\n    /**\r\n     * sets the current in memory cache for the client\r\n     * @param inMemoryCache - key value map in memory\r\n     */\r\n    setInMemoryCache(inMemoryCache) {\r\n        this.logger.trace(\"Setting in-memory cache\");\r\n        // convert and append the inMemoryCache to cacheKVStore\r\n        const cache = this.inMemoryCacheToCache(inMemoryCache);\r\n        this.setCache(cache);\r\n        this.emitChange();\r\n    }\r\n    /**\r\n     * get the current cache key-value store\r\n     */\r\n    getCache() {\r\n        this.logger.trace(\"Getting cache key-value store\");\r\n        return this.cache;\r\n    }\r\n    /**\r\n     * sets the current cache (key value store)\r\n     * @param cacheMap - key value map\r\n     */\r\n    setCache(cache) {\r\n        this.logger.trace(\"Setting cache key value store\");\r\n        this.cache = cache;\r\n        // mark change in cache\r\n        this.emitChange();\r\n    }\r\n    /**\r\n     * Gets cache item with given key.\r\n     * @param key - lookup key for the cache entry\r\n     */\r\n    getItem(key) {\r\n        this.logger.tracePii(`Item key: ${key}`);\r\n        // read cache\r\n        const cache = this.getCache();\r\n        return cache[key];\r\n    }\r\n    /**\r\n     * Gets cache item with given key-value\r\n     * @param key - lookup key for the cache entry\r\n     * @param value - value of the cache entry\r\n     */\r\n    setItem(key, value) {\r\n        this.logger.tracePii(`Item key: ${key}`);\r\n        // read cache\r\n        const cache = this.getCache();\r\n        cache[key] = value;\r\n        // write to cache\r\n        this.setCache(cache);\r\n    }\r\n    generateCredentialKey(credential) {\r\n        return generateCredentialKey(credential);\r\n    }\r\n    generateAccountKey(account) {\r\n        return generateAccountKey(account);\r\n    }\r\n    getAccountKeys() {\r\n        const inMemoryCache = this.getInMemoryCache();\r\n        const accountKeys = Object.keys(inMemoryCache.accounts);\r\n        return accountKeys;\r\n    }\r\n    getTokenKeys() {\r\n        const inMemoryCache = this.getInMemoryCache();\r\n        const tokenKeys = {\r\n            idToken: Object.keys(inMemoryCache.idTokens),\r\n            accessToken: Object.keys(inMemoryCache.accessTokens),\r\n            refreshToken: Object.keys(inMemoryCache.refreshTokens),\r\n        };\r\n        return tokenKeys;\r\n    }\r\n    /**\r\n     * Reads account from cache, builds it into an account entity and returns it.\r\n     * @param accountKey - lookup key to fetch cache type AccountEntity\r\n     * @returns\r\n     */\r\n    getAccount(accountKey) {\r\n        const cachedAccount = this.getItem(accountKey);\r\n        return cachedAccount\r\n            ? Object.assign(new AccountEntity(), this.getItem(accountKey))\r\n            : null;\r\n    }\r\n    /**\r\n     * set account entity\r\n     * @param account - cache value to be set of type AccountEntity\r\n     */\r\n    async setAccount(account) {\r\n        const accountKey = this.generateAccountKey(account.getAccountInfo());\r\n        this.setItem(accountKey, account);\r\n    }\r\n    /**\r\n     * fetch the idToken credential\r\n     * @param idTokenKey - lookup key to fetch cache type IdTokenEntity\r\n     */\r\n    getIdTokenCredential(idTokenKey) {\r\n        const idToken = this.getItem(idTokenKey);\r\n        if (CacheHelpers.isIdTokenEntity(idToken)) {\r\n            return idToken;\r\n        }\r\n        return null;\r\n    }\r\n    /**\r\n     * set idToken credential\r\n     * @param idToken - cache value to be set of type IdTokenEntity\r\n     */\r\n    async setIdTokenCredential(idToken) {\r\n        const idTokenKey = this.generateCredentialKey(idToken);\r\n        this.setItem(idTokenKey, idToken);\r\n    }\r\n    /**\r\n     * fetch the accessToken credential\r\n     * @param accessTokenKey - lookup key to fetch cache type AccessTokenEntity\r\n     */\r\n    getAccessTokenCredential(accessTokenKey) {\r\n        const accessToken = this.getItem(accessTokenKey);\r\n        if (CacheHelpers.isAccessTokenEntity(accessToken)) {\r\n            return accessToken;\r\n        }\r\n        return null;\r\n    }\r\n    /**\r\n     * set accessToken credential\r\n     * @param accessToken -  cache value to be set of type AccessTokenEntity\r\n     */\r\n    async setAccessTokenCredential(accessToken) {\r\n        const accessTokenKey = this.generateCredentialKey(accessToken);\r\n        this.setItem(accessTokenKey, accessToken);\r\n    }\r\n    /**\r\n     * fetch the refreshToken credential\r\n     * @param refreshTokenKey - lookup key to fetch cache type RefreshTokenEntity\r\n     */\r\n    getRefreshTokenCredential(refreshTokenKey) {\r\n        const refreshToken = this.getItem(refreshTokenKey);\r\n        if (CacheHelpers.isRefreshTokenEntity(refreshToken)) {\r\n            return refreshToken;\r\n        }\r\n        return null;\r\n    }\r\n    /**\r\n     * set refreshToken credential\r\n     * @param refreshToken - cache value to be set of type RefreshTokenEntity\r\n     */\r\n    async setRefreshTokenCredential(refreshToken) {\r\n        const refreshTokenKey = this.generateCredentialKey(refreshToken);\r\n        this.setItem(refreshTokenKey, refreshToken);\r\n    }\r\n    /**\r\n     * fetch appMetadata entity from the platform cache\r\n     * @param appMetadataKey - lookup key to fetch cache type AppMetadataEntity\r\n     */\r\n    getAppMetadata(appMetadataKey) {\r\n        const appMetadata = this.getItem(appMetadataKey);\r\n        if (CacheHelpers.isAppMetadataEntity(appMetadataKey, appMetadata)) {\r\n            return appMetadata;\r\n        }\r\n        return null;\r\n    }\r\n    /**\r\n     * set appMetadata entity to the platform cache\r\n     * @param appMetadata - cache value to be set of type AppMetadataEntity\r\n     */\r\n    setAppMetadata(appMetadata) {\r\n        const appMetadataKey = CacheHelpers.generateAppMetadataKey(appMetadata);\r\n        this.setItem(appMetadataKey, appMetadata);\r\n    }\r\n    /**\r\n     * fetch server telemetry entity from the platform cache\r\n     * @param serverTelemetrykey - lookup key to fetch cache type ServerTelemetryEntity\r\n     */\r\n    getServerTelemetry(serverTelemetrykey) {\r\n        const serverTelemetryEntity = this.getItem(serverTelemetrykey);\r\n        if (serverTelemetryEntity &&\r\n            CacheHelpers.isServerTelemetryEntity(serverTelemetrykey, serverTelemetryEntity)) {\r\n            return serverTelemetryEntity;\r\n        }\r\n        return null;\r\n    }\r\n    /**\r\n     * set server telemetry entity to the platform cache\r\n     * @param serverTelemetryKey - lookup key to fetch cache type ServerTelemetryEntity\r\n     * @param serverTelemetry - cache value to be set of type ServerTelemetryEntity\r\n     */\r\n    setServerTelemetry(serverTelemetryKey, serverTelemetry) {\r\n        this.setItem(serverTelemetryKey, serverTelemetry);\r\n    }\r\n    /**\r\n     * fetch authority metadata entity from the platform cache\r\n     * @param key - lookup key to fetch cache type AuthorityMetadataEntity\r\n     */\r\n    getAuthorityMetadata(key) {\r\n        const authorityMetadataEntity = this.getItem(key);\r\n        if (authorityMetadataEntity &&\r\n            CacheHelpers.isAuthorityMetadataEntity(key, authorityMetadataEntity)) {\r\n            return authorityMetadataEntity;\r\n        }\r\n        return null;\r\n    }\r\n    /**\r\n     * Get all authority metadata keys\r\n     */\r\n    getAuthorityMetadataKeys() {\r\n        return this.getKeys().filter((key) => {\r\n            return this.isAuthorityMetadata(key);\r\n        });\r\n    }\r\n    /**\r\n     * set authority metadata entity to the platform cache\r\n     * @param key - lookup key to fetch cache type AuthorityMetadataEntity\r\n     * @param metadata - cache value to be set of type AuthorityMetadataEntity\r\n     */\r\n    setAuthorityMetadata(key, metadata) {\r\n        this.setItem(key, metadata);\r\n    }\r\n    /**\r\n     * fetch throttling entity from the platform cache\r\n     * @param throttlingCacheKey - lookup key to fetch cache type ThrottlingEntity\r\n     */\r\n    getThrottlingCache(throttlingCacheKey) {\r\n        const throttlingCache = this.getItem(throttlingCacheKey);\r\n        if (throttlingCache &&\r\n            CacheHelpers.isThrottlingEntity(throttlingCacheKey, throttlingCache)) {\r\n            return throttlingCache;\r\n        }\r\n        return null;\r\n    }\r\n    /**\r\n     * set throttling entity to the platform cache\r\n     * @param throttlingCacheKey - lookup key to fetch cache type ThrottlingEntity\r\n     * @param throttlingCache - cache value to be set of type ThrottlingEntity\r\n     */\r\n    setThrottlingCache(throttlingCacheKey, throttlingCache) {\r\n        this.setItem(throttlingCacheKey, throttlingCache);\r\n    }\r\n    /**\r\n     * Removes the cache item from memory with the given key.\r\n     * @param key - lookup key to remove a cache entity\r\n     * @param inMemory - key value map of the cache\r\n     */\r\n    removeItem(key) {\r\n        this.logger.tracePii(`Item key: ${key}`);\r\n        // read inMemoryCache\r\n        let result = false;\r\n        const cache = this.getCache();\r\n        if (!!cache[key]) {\r\n            delete cache[key];\r\n            result = true;\r\n        }\r\n        // write to the cache after removal\r\n        if (result) {\r\n            this.setCache(cache);\r\n            this.emitChange();\r\n        }\r\n        return result;\r\n    }\r\n    /**\r\n     * Remove account entity from the platform cache if it's outdated\r\n     * @param accountKey - lookup key to fetch cache type AccountEntity\r\n     */\r\n    removeOutdatedAccount(accountKey) {\r\n        this.removeItem(accountKey);\r\n    }\r\n    /**\r\n     * Checks whether key is in cache.\r\n     * @param key - look up key for a cache entity\r\n     */\r\n    containsKey(key) {\r\n        return this.getKeys().includes(key);\r\n    }\r\n    /**\r\n     * Gets all keys in window.\r\n     */\r\n    getKeys() {\r\n        this.logger.trace(\"Retrieving all cache keys\");\r\n        // read cache\r\n        const cache = this.getCache();\r\n        return [...Object.keys(cache)];\r\n    }\r\n    /**\r\n     * Clears all cache entries created by MSAL (except tokens).\r\n     */\r\n    clear() {\r\n        this.logger.trace(\"Clearing cache entries created by MSAL\");\r\n        // read inMemoryCache\r\n        const cacheKeys = this.getKeys();\r\n        // delete each element\r\n        cacheKeys.forEach((key) => {\r\n            this.removeItem(key);\r\n        });\r\n        this.emitChange();\r\n    }\r\n    /**\r\n     * Initialize in memory cache from an exisiting cache vault\r\n     * @param cache - blob formatted cache (JSON)\r\n     */\r\n    static generateInMemoryCache(cache) {\r\n        return Deserializer.deserializeAllCache(Deserializer.deserializeJSONBlob(cache));\r\n    }\r\n    /**\r\n     * retrieves the final JSON\r\n     * @param inMemoryCache - itemised cache read from the JSON\r\n     */\r\n    static generateJsonCache(inMemoryCache) {\r\n        return Serializer.serializeAllCache(inMemoryCache);\r\n    }\r\n    /**\r\n     * Updates a credential's cache key if the current cache key is outdated\r\n     */\r\n    updateCredentialCacheKey(currentCacheKey, credential) {\r\n        const updatedCacheKey = this.generateCredentialKey(credential);\r\n        if (currentCacheKey !== updatedCacheKey) {\r\n            const cacheItem = this.getItem(currentCacheKey);\r\n            if (cacheItem) {\r\n                this.removeItem(currentCacheKey);\r\n                this.setItem(updatedCacheKey, cacheItem);\r\n                this.logger.verbose(`Updated an outdated ${credential.credentialType} cache key`);\r\n                return updatedCacheKey;\r\n            }\r\n            else {\r\n                this.logger.error(`Attempted to update an outdated ${credential.credentialType} cache key but no item matching the outdated key was found in storage`);\r\n            }\r\n        }\r\n        return currentCacheKey;\r\n    }\r\n}\n\nexport { NodeStorage };\n//# sourceMappingURL=NodeStorage.mjs.map\n","/*! @azure/msal-node v3.7.3 2025-08-27 */\n'use strict';\nimport { AuthenticationScheme, CredentialType } from '@azure/msal-common/node';\nimport { CACHE } from '../utils/Constants.mjs';\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nfunction generateCredentialKey(credential) {\r\n    const familyId = (credential.credentialType === CredentialType.REFRESH_TOKEN &&\r\n        credential.familyId) ||\r\n        credential.clientId;\r\n    const scheme = credential.tokenType &&\r\n        credential.tokenType.toLowerCase() !==\r\n            AuthenticationScheme.BEARER.toLowerCase()\r\n        ? credential.tokenType.toLowerCase()\r\n        : \"\";\r\n    const credentialKey = [\r\n        credential.homeAccountId,\r\n        credential.environment,\r\n        credential.credentialType,\r\n        familyId,\r\n        credential.realm || \"\",\r\n        credential.target || \"\",\r\n        credential.requestedClaimsHash || \"\",\r\n        scheme,\r\n    ];\r\n    return credentialKey.join(CACHE.KEY_SEPARATOR).toLowerCase();\r\n}\r\nfunction generateAccountKey(account) {\r\n    const homeTenantId = account.homeAccountId.split(\".\")[1];\r\n    const accountKey = [\r\n        account.homeAccountId,\r\n        account.environment,\r\n        homeTenantId || account.tenantId || \"\",\r\n    ];\r\n    return accountKey.join(CACHE.KEY_SEPARATOR).toLowerCase();\r\n}\n\nexport { generateAccountKey, generateCredentialKey };\n//# sourceMappingURL=CacheHelpers.mjs.map\n","/*! @azure/msal-node v3.7.3 2025-08-27 */\n'use strict';\nimport { NodeStorage } from './NodeStorage.mjs';\nimport { TokenCacheContext } from '@azure/msal-common/node';\nimport { Deserializer } from './serializer/Deserializer.mjs';\nimport { Serializer } from './serializer/Serializer.mjs';\nimport { CryptoProvider } from '../crypto/CryptoProvider.mjs';\nimport { GuidGenerator } from '../crypto/GuidGenerator.mjs';\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nconst defaultSerializedCache = {\r\n    Account: {},\r\n    IdToken: {},\r\n    AccessToken: {},\r\n    RefreshToken: {},\r\n    AppMetadata: {},\r\n};\r\n/**\r\n * In-memory token cache manager\r\n * @public\r\n */\r\nclass TokenCache {\r\n    constructor(storage, logger, cachePlugin) {\r\n        this.cacheHasChanged = false;\r\n        this.storage = storage;\r\n        this.storage.registerChangeEmitter(this.handleChangeEvent.bind(this));\r\n        if (cachePlugin) {\r\n            this.persistence = cachePlugin;\r\n        }\r\n        this.logger = logger;\r\n    }\r\n    /**\r\n     * Set to true if cache state has changed since last time serialize or writeToPersistence was called\r\n     */\r\n    hasChanged() {\r\n        return this.cacheHasChanged;\r\n    }\r\n    /**\r\n     * Serializes in memory cache to JSON\r\n     */\r\n    serialize() {\r\n        this.logger.trace(\"Serializing in-memory cache\");\r\n        let finalState = Serializer.serializeAllCache(this.storage.getInMemoryCache());\r\n        // if cacheSnapshot not null or empty, merge\r\n        if (this.cacheSnapshot) {\r\n            this.logger.trace(\"Reading cache snapshot from disk\");\r\n            finalState = this.mergeState(JSON.parse(this.cacheSnapshot), finalState);\r\n        }\r\n        else {\r\n            this.logger.trace(\"No cache snapshot to merge\");\r\n        }\r\n        this.cacheHasChanged = false;\r\n        return JSON.stringify(finalState);\r\n    }\r\n    /**\r\n     * Deserializes JSON to in-memory cache. JSON should be in MSAL cache schema format\r\n     * @param cache - blob formatted cache\r\n     */\r\n    deserialize(cache) {\r\n        this.logger.trace(\"Deserializing JSON to in-memory cache\");\r\n        this.cacheSnapshot = cache;\r\n        if (this.cacheSnapshot) {\r\n            this.logger.trace(\"Reading cache snapshot from disk\");\r\n            const deserializedCache = Deserializer.deserializeAllCache(this.overlayDefaults(JSON.parse(this.cacheSnapshot)));\r\n            this.storage.setInMemoryCache(deserializedCache);\r\n        }\r\n        else {\r\n            this.logger.trace(\"No cache snapshot to deserialize\");\r\n        }\r\n    }\r\n    /**\r\n     * Fetches the cache key-value map\r\n     */\r\n    getKVStore() {\r\n        return this.storage.getCache();\r\n    }\r\n    /**\r\n     * Gets cache snapshot in CacheKVStore format\r\n     */\r\n    getCacheSnapshot() {\r\n        const deserializedPersistentStorage = NodeStorage.generateInMemoryCache(this.cacheSnapshot);\r\n        return this.storage.inMemoryCacheToCache(deserializedPersistentStorage);\r\n    }\r\n    /**\r\n     * API that retrieves all accounts currently in cache to the user\r\n     */\r\n    async getAllAccounts(correlationId = new CryptoProvider().createNewGuid()) {\r\n        this.logger.trace(\"getAllAccounts called\");\r\n        let cacheContext;\r\n        try {\r\n            if (this.persistence) {\r\n                cacheContext = new TokenCacheContext(this, false);\r\n                await this.persistence.beforeCacheAccess(cacheContext);\r\n            }\r\n            return this.storage.getAllAccounts({}, correlationId);\r\n        }\r\n        finally {\r\n            if (this.persistence && cacheContext) {\r\n                await this.persistence.afterCacheAccess(cacheContext);\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * Returns the signed in account matching homeAccountId.\r\n     * (the account object is created at the time of successful login)\r\n     * or null when no matching account is found\r\n     * @param homeAccountId - unique identifier for an account (uid.utid)\r\n     */\r\n    async getAccountByHomeId(homeAccountId) {\r\n        const allAccounts = await this.getAllAccounts();\r\n        if (homeAccountId && allAccounts && allAccounts.length) {\r\n            return (allAccounts.filter((accountObj) => accountObj.homeAccountId === homeAccountId)[0] || null);\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    }\r\n    /**\r\n     * Returns the signed in account matching localAccountId.\r\n     * (the account object is created at the time of successful login)\r\n     * or null when no matching account is found\r\n     * @param localAccountId - unique identifier of an account (sub/obj when homeAccountId cannot be populated)\r\n     */\r\n    async getAccountByLocalId(localAccountId) {\r\n        const allAccounts = await this.getAllAccounts();\r\n        if (localAccountId && allAccounts && allAccounts.length) {\r\n            return (allAccounts.filter((accountObj) => accountObj.localAccountId === localAccountId)[0] || null);\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    }\r\n    /**\r\n     * API to remove a specific account and the relevant data from cache\r\n     * @param account - AccountInfo passed by the user\r\n     */\r\n    async removeAccount(account, correlationId) {\r\n        this.logger.trace(\"removeAccount called\");\r\n        let cacheContext;\r\n        try {\r\n            if (this.persistence) {\r\n                cacheContext = new TokenCacheContext(this, true);\r\n                await this.persistence.beforeCacheAccess(cacheContext);\r\n            }\r\n            this.storage.removeAccount(account, correlationId || new GuidGenerator().generateGuid());\r\n        }\r\n        finally {\r\n            if (this.persistence && cacheContext) {\r\n                await this.persistence.afterCacheAccess(cacheContext);\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * Overwrites in-memory cache with persistent cache\r\n     */\r\n    async overwriteCache() {\r\n        if (!this.persistence) {\r\n            this.logger.info(\"No persistence layer specified, cache cannot be overwritten\");\r\n            return;\r\n        }\r\n        this.logger.info(\"Overwriting in-memory cache with persistent cache\");\r\n        this.storage.clear();\r\n        const cacheContext = new TokenCacheContext(this, false);\r\n        await this.persistence.beforeCacheAccess(cacheContext);\r\n        const cacheSnapshot = this.getCacheSnapshot();\r\n        this.storage.setCache(cacheSnapshot);\r\n        await this.persistence.afterCacheAccess(cacheContext);\r\n    }\r\n    /**\r\n     * Called when the cache has changed state.\r\n     */\r\n    handleChangeEvent() {\r\n        this.cacheHasChanged = true;\r\n    }\r\n    /**\r\n     * Merge in memory cache with the cache snapshot.\r\n     * @param oldState - cache before changes\r\n     * @param currentState - current cache state in the library\r\n     */\r\n    mergeState(oldState, currentState) {\r\n        this.logger.trace(\"Merging in-memory cache with cache snapshot\");\r\n        const stateAfterRemoval = this.mergeRemovals(oldState, currentState);\r\n        return this.mergeUpdates(stateAfterRemoval, currentState);\r\n    }\r\n    /**\r\n     * Deep update of oldState based on newState values\r\n     * @param oldState - cache before changes\r\n     * @param newState - updated cache\r\n     */\r\n    mergeUpdates(oldState, newState) {\r\n        Object.keys(newState).forEach((newKey) => {\r\n            const newValue = newState[newKey];\r\n            // if oldState does not contain value but newValue does, add it\r\n            if (!oldState.hasOwnProperty(newKey)) {\r\n                if (newValue !== null) {\r\n                    oldState[newKey] = newValue;\r\n                }\r\n            }\r\n            else {\r\n                // both oldState and newState contain the key, do deep update\r\n                const newValueNotNull = newValue !== null;\r\n                const newValueIsObject = typeof newValue === \"object\";\r\n                const newValueIsNotArray = !Array.isArray(newValue);\r\n                const oldStateNotUndefinedOrNull = typeof oldState[newKey] !== \"undefined\" &&\r\n                    oldState[newKey] !== null;\r\n                if (newValueNotNull &&\r\n                    newValueIsObject &&\r\n                    newValueIsNotArray &&\r\n                    oldStateNotUndefinedOrNull) {\r\n                    this.mergeUpdates(oldState[newKey], newValue);\r\n                }\r\n                else {\r\n                    oldState[newKey] = newValue;\r\n                }\r\n            }\r\n        });\r\n        return oldState;\r\n    }\r\n    /**\r\n     * Removes entities in oldState that the were removed from newState. If there are any unknown values in root of\r\n     * oldState that are not recognized, they are left untouched.\r\n     * @param oldState - cache before changes\r\n     * @param newState - updated cache\r\n     */\r\n    mergeRemovals(oldState, newState) {\r\n        this.logger.trace(\"Remove updated entries in cache\");\r\n        const accounts = oldState.Account\r\n            ? this.mergeRemovalsDict(oldState.Account, newState.Account)\r\n            : oldState.Account;\r\n        const accessTokens = oldState.AccessToken\r\n            ? this.mergeRemovalsDict(oldState.AccessToken, newState.AccessToken)\r\n            : oldState.AccessToken;\r\n        const refreshTokens = oldState.RefreshToken\r\n            ? this.mergeRemovalsDict(oldState.RefreshToken, newState.RefreshToken)\r\n            : oldState.RefreshToken;\r\n        const idTokens = oldState.IdToken\r\n            ? this.mergeRemovalsDict(oldState.IdToken, newState.IdToken)\r\n            : oldState.IdToken;\r\n        const appMetadata = oldState.AppMetadata\r\n            ? this.mergeRemovalsDict(oldState.AppMetadata, newState.AppMetadata)\r\n            : oldState.AppMetadata;\r\n        return {\r\n            ...oldState,\r\n            Account: accounts,\r\n            AccessToken: accessTokens,\r\n            RefreshToken: refreshTokens,\r\n            IdToken: idTokens,\r\n            AppMetadata: appMetadata,\r\n        };\r\n    }\r\n    /**\r\n     * Helper to merge new cache with the old one\r\n     * @param oldState - cache before changes\r\n     * @param newState - updated cache\r\n     */\r\n    mergeRemovalsDict(oldState, newState) {\r\n        const finalState = { ...oldState };\r\n        Object.keys(oldState).forEach((oldKey) => {\r\n            if (!newState || !newState.hasOwnProperty(oldKey)) {\r\n                delete finalState[oldKey];\r\n            }\r\n        });\r\n        return finalState;\r\n    }\r\n    /**\r\n     * Helper to overlay as a part of cache merge\r\n     * @param passedInCache - cache read from the blob\r\n     */\r\n    overlayDefaults(passedInCache) {\r\n        this.logger.trace(\"Overlaying input cache with the default cache\");\r\n        return {\r\n            Account: {\r\n                ...defaultSerializedCache.Account,\r\n                ...passedInCache.Account,\r\n            },\r\n            IdToken: {\r\n                ...defaultSerializedCache.IdToken,\r\n                ...passedInCache.IdToken,\r\n            },\r\n            AccessToken: {\r\n                ...defaultSerializedCache.AccessToken,\r\n                ...passedInCache.AccessToken,\r\n            },\r\n            RefreshToken: {\r\n                ...defaultSerializedCache.RefreshToken,\r\n                ...passedInCache.RefreshToken,\r\n            },\r\n            AppMetadata: {\r\n                ...defaultSerializedCache.AppMetadata,\r\n                ...passedInCache.AppMetadata,\r\n            },\r\n        };\r\n    }\r\n}\n\nexport { TokenCache };\n//# sourceMappingURL=TokenCache.mjs.map\n","/*! safe-buffer. MIT License. Feross Aboukhadijeh <https://feross.org/opensource> */\n/* eslint-disable node/no-deprecated-api */\nvar buffer = require('buffer')\nvar Buffer = buffer.Buffer\n\n// alternative to using Object.keys for old browsers\nfunction copyProps (src, dst) {\n  for (var key in src) {\n    dst[key] = src[key]\n  }\n}\nif (Buffer.from && Buffer.alloc && Buffer.allocUnsafe && Buffer.allocUnsafeSlow) {\n  module.exports = buffer\n} else {\n  // Copy properties from require('buffer')\n  copyProps(buffer, exports)\n  exports.Buffer = SafeBuffer\n}\n\nfunction SafeBuffer (arg, encodingOrOffset, length) {\n  return Buffer(arg, encodingOrOffset, length)\n}\n\nSafeBuffer.prototype = Object.create(Buffer.prototype)\n\n// Copy static methods from Buffer\ncopyProps(Buffer, SafeBuffer)\n\nSafeBuffer.from = function (arg, encodingOrOffset, length) {\n  if (typeof arg === 'number') {\n    throw new TypeError('Argument must not be a number')\n  }\n  return Buffer(arg, encodingOrOffset, length)\n}\n\nSafeBuffer.alloc = function (size, fill, encoding) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  var buf = Buffer(size)\n  if (fill !== undefined) {\n    if (typeof encoding === 'string') {\n      buf.fill(fill, encoding)\n    } else {\n      buf.fill(fill)\n    }\n  } else {\n    buf.fill(0)\n  }\n  return buf\n}\n\nSafeBuffer.allocUnsafe = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return Buffer(size)\n}\n\nSafeBuffer.allocUnsafeSlow = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return buffer.SlowBuffer(size)\n}\n","/*global module, process*/\nvar Buffer = require('safe-buffer').Buffer;\nvar Stream = require('stream');\nvar util = require('util');\n\nfunction DataStream(data) {\n  this.buffer = null;\n  this.writable = true;\n  this.readable = true;\n\n  // No input\n  if (!data) {\n    this.buffer = Buffer.alloc(0);\n    return this;\n  }\n\n  // Stream\n  if (typeof data.pipe === 'function') {\n    this.buffer = Buffer.alloc(0);\n    data.pipe(this);\n    return this;\n  }\n\n  // Buffer or String\n  // or Object (assumedly a passworded key)\n  if (data.length || typeof data === 'object') {\n    this.buffer = data;\n    this.writable = false;\n    process.nextTick(function () {\n      this.emit('end', data);\n      this.readable = false;\n      this.emit('close');\n    }.bind(this));\n    return this;\n  }\n\n  throw new TypeError('Unexpected data type ('+ typeof data + ')');\n}\nutil.inherits(DataStream, Stream);\n\nDataStream.prototype.write = function write(data) {\n  this.buffer = Buffer.concat([this.buffer, Buffer.from(data)]);\n  this.emit('data', data);\n};\n\nDataStream.prototype.end = function end(data) {\n  if (data)\n    this.write(data);\n  this.emit('end', data);\n  this.emit('close');\n  this.writable = false;\n  this.readable = false;\n};\n\nmodule.exports = DataStream;\n","'use strict';\n\nvar Buffer = require('safe-buffer').Buffer;\n\nvar getParamBytesForAlg = require('./param-bytes-for-alg');\n\nvar MAX_OCTET = 0x80,\n\tCLASS_UNIVERSAL = 0,\n\tPRIMITIVE_BIT = 0x20,\n\tTAG_SEQ = 0x10,\n\tTAG_INT = 0x02,\n\tENCODED_TAG_SEQ = (TAG_SEQ | PRIMITIVE_BIT) | (CLASS_UNIVERSAL << 6),\n\tENCODED_TAG_INT = TAG_INT | (CLASS_UNIVERSAL << 6);\n\nfunction base64Url(base64) {\n\treturn base64\n\t\t.replace(/=/g, '')\n\t\t.replace(/\\+/g, '-')\n\t\t.replace(/\\//g, '_');\n}\n\nfunction signatureAsBuffer(signature) {\n\tif (Buffer.isBuffer(signature)) {\n\t\treturn signature;\n\t} else if ('string' === typeof signature) {\n\t\treturn Buffer.from(signature, 'base64');\n\t}\n\n\tthrow new TypeError('ECDSA signature must be a Base64 string or a Buffer');\n}\n\nfunction derToJose(signature, alg) {\n\tsignature = signatureAsBuffer(signature);\n\tvar paramBytes = getParamBytesForAlg(alg);\n\n\t// the DER encoded param should at most be the param size, plus a padding\n\t// zero, since due to being a signed integer\n\tvar maxEncodedParamLength = paramBytes + 1;\n\n\tvar inputLength = signature.length;\n\n\tvar offset = 0;\n\tif (signature[offset++] !== ENCODED_TAG_SEQ) {\n\t\tthrow new Error('Could not find expected \"seq\"');\n\t}\n\n\tvar seqLength = signature[offset++];\n\tif (seqLength === (MAX_OCTET | 1)) {\n\t\tseqLength = signature[offset++];\n\t}\n\n\tif (inputLength - offset < seqLength) {\n\t\tthrow new Error('\"seq\" specified length of \"' + seqLength + '\", only \"' + (inputLength - offset) + '\" remaining');\n\t}\n\n\tif (signature[offset++] !== ENCODED_TAG_INT) {\n\t\tthrow new Error('Could not find expected \"int\" for \"r\"');\n\t}\n\n\tvar rLength = signature[offset++];\n\n\tif (inputLength - offset - 2 < rLength) {\n\t\tthrow new Error('\"r\" specified length of \"' + rLength + '\", only \"' + (inputLength - offset - 2) + '\" available');\n\t}\n\n\tif (maxEncodedParamLength < rLength) {\n\t\tthrow new Error('\"r\" specified length of \"' + rLength + '\", max of \"' + maxEncodedParamLength + '\" is acceptable');\n\t}\n\n\tvar rOffset = offset;\n\toffset += rLength;\n\n\tif (signature[offset++] !== ENCODED_TAG_INT) {\n\t\tthrow new Error('Could not find expected \"int\" for \"s\"');\n\t}\n\n\tvar sLength = signature[offset++];\n\n\tif (inputLength - offset !== sLength) {\n\t\tthrow new Error('\"s\" specified length of \"' + sLength + '\", expected \"' + (inputLength - offset) + '\"');\n\t}\n\n\tif (maxEncodedParamLength < sLength) {\n\t\tthrow new Error('\"s\" specified length of \"' + sLength + '\", max of \"' + maxEncodedParamLength + '\" is acceptable');\n\t}\n\n\tvar sOffset = offset;\n\toffset += sLength;\n\n\tif (offset !== inputLength) {\n\t\tthrow new Error('Expected to consume entire buffer, but \"' + (inputLength - offset) + '\" bytes remain');\n\t}\n\n\tvar rPadding = paramBytes - rLength,\n\t\tsPadding = paramBytes - sLength;\n\n\tvar dst = Buffer.allocUnsafe(rPadding + rLength + sPadding + sLength);\n\n\tfor (offset = 0; offset < rPadding; ++offset) {\n\t\tdst[offset] = 0;\n\t}\n\tsignature.copy(dst, offset, rOffset + Math.max(-rPadding, 0), rOffset + rLength);\n\n\toffset = paramBytes;\n\n\tfor (var o = offset; offset < o + sPadding; ++offset) {\n\t\tdst[offset] = 0;\n\t}\n\tsignature.copy(dst, offset, sOffset + Math.max(-sPadding, 0), sOffset + sLength);\n\n\tdst = dst.toString('base64');\n\tdst = base64Url(dst);\n\n\treturn dst;\n}\n\nfunction countPadding(buf, start, stop) {\n\tvar padding = 0;\n\twhile (start + padding < stop && buf[start + padding] === 0) {\n\t\t++padding;\n\t}\n\n\tvar needsSign = buf[start + padding] >= MAX_OCTET;\n\tif (needsSign) {\n\t\t--padding;\n\t}\n\n\treturn padding;\n}\n\nfunction joseToDer(signature, alg) {\n\tsignature = signatureAsBuffer(signature);\n\tvar paramBytes = getParamBytesForAlg(alg);\n\n\tvar signatureBytes = signature.length;\n\tif (signatureBytes !== paramBytes * 2) {\n\t\tthrow new TypeError('\"' + alg + '\" signatures must be \"' + paramBytes * 2 + '\" bytes, saw \"' + signatureBytes + '\"');\n\t}\n\n\tvar rPadding = countPadding(signature, 0, paramBytes);\n\tvar sPadding = countPadding(signature, paramBytes, signature.length);\n\tvar rLength = paramBytes - rPadding;\n\tvar sLength = paramBytes - sPadding;\n\n\tvar rsBytes = 1 + 1 + rLength + 1 + 1 + sLength;\n\n\tvar shortLength = rsBytes < MAX_OCTET;\n\n\tvar dst = Buffer.allocUnsafe((shortLength ? 2 : 3) + rsBytes);\n\n\tvar offset = 0;\n\tdst[offset++] = ENCODED_TAG_SEQ;\n\tif (shortLength) {\n\t\t// Bit 8 has value \"0\"\n\t\t// bits 7-1 give the length.\n\t\tdst[offset++] = rsBytes;\n\t} else {\n\t\t// Bit 8 of first octet has value \"1\"\n\t\t// bits 7-1 give the number of additional length octets.\n\t\tdst[offset++] = MAX_OCTET\t| 1;\n\t\t// length, base 256\n\t\tdst[offset++] = rsBytes & 0xff;\n\t}\n\tdst[offset++] = ENCODED_TAG_INT;\n\tdst[offset++] = rLength;\n\tif (rPadding < 0) {\n\t\tdst[offset++] = 0;\n\t\toffset += signature.copy(dst, offset, 0, paramBytes);\n\t} else {\n\t\toffset += signature.copy(dst, offset, rPadding, paramBytes);\n\t}\n\tdst[offset++] = ENCODED_TAG_INT;\n\tdst[offset++] = sLength;\n\tif (sPadding < 0) {\n\t\tdst[offset++] = 0;\n\t\tsignature.copy(dst, offset, paramBytes);\n\t} else {\n\t\tsignature.copy(dst, offset, paramBytes + sPadding);\n\t}\n\n\treturn dst;\n}\n\nmodule.exports = {\n\tderToJose: derToJose,\n\tjoseToDer: joseToDer\n};\n","'use strict';\n\nfunction getParamSize(keySize) {\n\tvar result = ((keySize / 8) | 0) + (keySize % 8 === 0 ? 0 : 1);\n\treturn result;\n}\n\nvar paramBytesForAlg = {\n\tES256: getParamSize(256),\n\tES384: getParamSize(384),\n\tES512: getParamSize(521)\n};\n\nfunction getParamBytesForAlg(alg) {\n\tvar paramBytes = paramBytesForAlg[alg];\n\tif (paramBytes) {\n\t\treturn paramBytes;\n\t}\n\n\tthrow new Error('Unknown algorithm \"' + alg + '\"');\n}\n\nmodule.exports = getParamBytesForAlg;\n","var Buffer = require('safe-buffer').Buffer;\nvar crypto = require('crypto');\nvar formatEcdsa = require('ecdsa-sig-formatter');\nvar util = require('util');\n\nvar MSG_INVALID_ALGORITHM = '\"%s\" is not a valid algorithm.\\n  Supported algorithms are:\\n  \"HS256\", \"HS384\", \"HS512\", \"RS256\", \"RS384\", \"RS512\", \"PS256\", \"PS384\", \"PS512\", \"ES256\", \"ES384\", \"ES512\" and \"none\".'\nvar MSG_INVALID_SECRET = 'secret must be a string or buffer';\nvar MSG_INVALID_VERIFIER_KEY = 'key must be a string or a buffer';\nvar MSG_INVALID_SIGNER_KEY = 'key must be a string, a buffer or an object';\n\nvar supportsKeyObjects = typeof crypto.createPublicKey === 'function';\nif (supportsKeyObjects) {\n  MSG_INVALID_VERIFIER_KEY += ' or a KeyObject';\n  MSG_INVALID_SECRET += 'or a KeyObject';\n}\n\nfunction checkIsPublicKey(key) {\n  if (Buffer.isBuffer(key)) {\n    return;\n  }\n\n  if (typeof key === 'string') {\n    return;\n  }\n\n  if (!supportsKeyObjects) {\n    throw typeError(MSG_INVALID_VERIFIER_KEY);\n  }\n\n  if (typeof key !== 'object') {\n    throw typeError(MSG_INVALID_VERIFIER_KEY);\n  }\n\n  if (typeof key.type !== 'string') {\n    throw typeError(MSG_INVALID_VERIFIER_KEY);\n  }\n\n  if (typeof key.asymmetricKeyType !== 'string') {\n    throw typeError(MSG_INVALID_VERIFIER_KEY);\n  }\n\n  if (typeof key.export !== 'function') {\n    throw typeError(MSG_INVALID_VERIFIER_KEY);\n  }\n};\n\nfunction checkIsPrivateKey(key) {\n  if (Buffer.isBuffer(key)) {\n    return;\n  }\n\n  if (typeof key === 'string') {\n    return;\n  }\n\n  if (typeof key === 'object') {\n    return;\n  }\n\n  throw typeError(MSG_INVALID_SIGNER_KEY);\n};\n\nfunction checkIsSecretKey(key) {\n  if (Buffer.isBuffer(key)) {\n    return;\n  }\n\n  if (typeof key === 'string') {\n    return key;\n  }\n\n  if (!supportsKeyObjects) {\n    throw typeError(MSG_INVALID_SECRET);\n  }\n\n  if (typeof key !== 'object') {\n    throw typeError(MSG_INVALID_SECRET);\n  }\n\n  if (key.type !== 'secret') {\n    throw typeError(MSG_INVALID_SECRET);\n  }\n\n  if (typeof key.export !== 'function') {\n    throw typeError(MSG_INVALID_SECRET);\n  }\n}\n\nfunction fromBase64(base64) {\n  return base64\n    .replace(/=/g, '')\n    .replace(/\\+/g, '-')\n    .replace(/\\//g, '_');\n}\n\nfunction toBase64(base64url) {\n  base64url = base64url.toString();\n\n  var padding = 4 - base64url.length % 4;\n  if (padding !== 4) {\n    for (var i = 0; i < padding; ++i) {\n      base64url += '=';\n    }\n  }\n\n  return base64url\n    .replace(/\\-/g, '+')\n    .replace(/_/g, '/');\n}\n\nfunction typeError(template) {\n  var args = [].slice.call(arguments, 1);\n  var errMsg = util.format.bind(util, template).apply(null, args);\n  return new TypeError(errMsg);\n}\n\nfunction bufferOrString(obj) {\n  return Buffer.isBuffer(obj) || typeof obj === 'string';\n}\n\nfunction normalizeInput(thing) {\n  if (!bufferOrString(thing))\n    thing = JSON.stringify(thing);\n  return thing;\n}\n\nfunction createHmacSigner(bits) {\n  return function sign(thing, secret) {\n    checkIsSecretKey(secret);\n    thing = normalizeInput(thing);\n    var hmac = crypto.createHmac('sha' + bits, secret);\n    var sig = (hmac.update(thing), hmac.digest('base64'))\n    return fromBase64(sig);\n  }\n}\n\nvar bufferEqual;\nvar timingSafeEqual = 'timingSafeEqual' in crypto ? function timingSafeEqual(a, b) {\n  if (a.byteLength !== b.byteLength) {\n    return false;\n  }\n\n  return crypto.timingSafeEqual(a, b)\n} : function timingSafeEqual(a, b) {\n  if (!bufferEqual) {\n    bufferEqual = require('buffer-equal-constant-time');\n  }\n\n  return bufferEqual(a, b)\n}\n\nfunction createHmacVerifier(bits) {\n  return function verify(thing, signature, secret) {\n    var computedSig = createHmacSigner(bits)(thing, secret);\n    return timingSafeEqual(Buffer.from(signature), Buffer.from(computedSig));\n  }\n}\n\nfunction createKeySigner(bits) {\n return function sign(thing, privateKey) {\n    checkIsPrivateKey(privateKey);\n    thing = normalizeInput(thing);\n    // Even though we are specifying \"RSA\" here, this works with ECDSA\n    // keys as well.\n    var signer = crypto.createSign('RSA-SHA' + bits);\n    var sig = (signer.update(thing), signer.sign(privateKey, 'base64'));\n    return fromBase64(sig);\n  }\n}\n\nfunction createKeyVerifier(bits) {\n  return function verify(thing, signature, publicKey) {\n    checkIsPublicKey(publicKey);\n    thing = normalizeInput(thing);\n    signature = toBase64(signature);\n    var verifier = crypto.createVerify('RSA-SHA' + bits);\n    verifier.update(thing);\n    return verifier.verify(publicKey, signature, 'base64');\n  }\n}\n\nfunction createPSSKeySigner(bits) {\n  return function sign(thing, privateKey) {\n    checkIsPrivateKey(privateKey);\n    thing = normalizeInput(thing);\n    var signer = crypto.createSign('RSA-SHA' + bits);\n    var sig = (signer.update(thing), signer.sign({\n      key: privateKey,\n      padding: crypto.constants.RSA_PKCS1_PSS_PADDING,\n      saltLength: crypto.constants.RSA_PSS_SALTLEN_DIGEST\n    }, 'base64'));\n    return fromBase64(sig);\n  }\n}\n\nfunction createPSSKeyVerifier(bits) {\n  return function verify(thing, signature, publicKey) {\n    checkIsPublicKey(publicKey);\n    thing = normalizeInput(thing);\n    signature = toBase64(signature);\n    var verifier = crypto.createVerify('RSA-SHA' + bits);\n    verifier.update(thing);\n    return verifier.verify({\n      key: publicKey,\n      padding: crypto.constants.RSA_PKCS1_PSS_PADDING,\n      saltLength: crypto.constants.RSA_PSS_SALTLEN_DIGEST\n    }, signature, 'base64');\n  }\n}\n\nfunction createECDSASigner(bits) {\n  var inner = createKeySigner(bits);\n  return function sign() {\n    var signature = inner.apply(null, arguments);\n    signature = formatEcdsa.derToJose(signature, 'ES' + bits);\n    return signature;\n  };\n}\n\nfunction createECDSAVerifer(bits) {\n  var inner = createKeyVerifier(bits);\n  return function verify(thing, signature, publicKey) {\n    signature = formatEcdsa.joseToDer(signature, 'ES' + bits).toString('base64');\n    var result = inner(thing, signature, publicKey);\n    return result;\n  };\n}\n\nfunction createNoneSigner() {\n  return function sign() {\n    return '';\n  }\n}\n\nfunction createNoneVerifier() {\n  return function verify(thing, signature) {\n    return signature === '';\n  }\n}\n\nmodule.exports = function jwa(algorithm) {\n  var signerFactories = {\n    hs: createHmacSigner,\n    rs: createKeySigner,\n    ps: createPSSKeySigner,\n    es: createECDSASigner,\n    none: createNoneSigner,\n  }\n  var verifierFactories = {\n    hs: createHmacVerifier,\n    rs: createKeyVerifier,\n    ps: createPSSKeyVerifier,\n    es: createECDSAVerifer,\n    none: createNoneVerifier,\n  }\n  var match = algorithm.match(/^(RS|PS|ES|HS)(256|384|512)$|^(none)$/i);\n  if (!match)\n    throw typeError(MSG_INVALID_ALGORITHM, algorithm);\n  var algo = (match[1] || match[3]).toLowerCase();\n  var bits = match[2];\n\n  return {\n    sign: signerFactories[algo](bits),\n    verify: verifierFactories[algo](bits),\n  }\n};\n","/*jshint node:true */\n'use strict';\nvar Buffer = require('buffer').Buffer; // browserify\nvar SlowBuffer = require('buffer').SlowBuffer;\n\nmodule.exports = bufferEq;\n\nfunction bufferEq(a, b) {\n\n  // shortcutting on type is necessary for correctness\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    return false;\n  }\n\n  // buffer sizes should be well-known information, so despite this\n  // shortcutting, it doesn't leak any information about the *contents* of the\n  // buffers.\n  if (a.length !== b.length) {\n    return false;\n  }\n\n  var c = 0;\n  for (var i = 0; i < a.length; i++) {\n    /*jshint bitwise:false */\n    c |= a[i] ^ b[i]; // XOR\n  }\n  return c === 0;\n}\n\nbufferEq.install = function() {\n  Buffer.prototype.equal = SlowBuffer.prototype.equal = function equal(that) {\n    return bufferEq(this, that);\n  };\n};\n\nvar origBufEqual = Buffer.prototype.equal;\nvar origSlowBufEqual = SlowBuffer.prototype.equal;\nbufferEq.restore = function() {\n  Buffer.prototype.equal = origBufEqual;\n  SlowBuffer.prototype.equal = origSlowBufEqual;\n};\n","/*global module*/\nvar Buffer = require('buffer').Buffer;\n\nmodule.exports = function toString(obj) {\n  if (typeof obj === 'string')\n    return obj;\n  if (typeof obj === 'number' || Buffer.isBuffer(obj))\n    return obj.toString();\n  return JSON.stringify(obj);\n};\n","/*global module*/\nvar Buffer = require('safe-buffer').Buffer;\nvar DataStream = require('./data-stream');\nvar jwa = require('jwa');\nvar Stream = require('stream');\nvar toString = require('./tostring');\nvar util = require('util');\n\nfunction base64url(string, encoding) {\n  return Buffer\n    .from(string, encoding)\n    .toString('base64')\n    .replace(/=/g, '')\n    .replace(/\\+/g, '-')\n    .replace(/\\//g, '_');\n}\n\nfunction jwsSecuredInput(header, payload, encoding) {\n  encoding = encoding || 'utf8';\n  var encodedHeader = base64url(toString(header), 'binary');\n  var encodedPayload = base64url(toString(payload), encoding);\n  return util.format('%s.%s', encodedHeader, encodedPayload);\n}\n\nfunction jwsSign(opts) {\n  var header = opts.header;\n  var payload = opts.payload;\n  var secretOrKey = opts.secret || opts.privateKey;\n  var encoding = opts.encoding;\n  var algo = jwa(header.alg);\n  var securedInput = jwsSecuredInput(header, payload, encoding);\n  var signature = algo.sign(securedInput, secretOrKey);\n  return util.format('%s.%s', securedInput, signature);\n}\n\nfunction SignStream(opts) {\n  var secret = opts.secret||opts.privateKey||opts.key;\n  var secretStream = new DataStream(secret);\n  this.readable = true;\n  this.header = opts.header;\n  this.encoding = opts.encoding;\n  this.secret = this.privateKey = this.key = secretStream;\n  this.payload = new DataStream(opts.payload);\n  this.secret.once('close', function () {\n    if (!this.payload.writable && this.readable)\n      this.sign();\n  }.bind(this));\n\n  this.payload.once('close', function () {\n    if (!this.secret.writable && this.readable)\n      this.sign();\n  }.bind(this));\n}\nutil.inherits(SignStream, Stream);\n\nSignStream.prototype.sign = function sign() {\n  try {\n    var signature = jwsSign({\n      header: this.header,\n      payload: this.payload.buffer,\n      secret: this.secret.buffer,\n      encoding: this.encoding\n    });\n    this.emit('done', signature);\n    this.emit('data', signature);\n    this.emit('end');\n    this.readable = false;\n    return signature;\n  } catch (e) {\n    this.readable = false;\n    this.emit('error', e);\n    this.emit('close');\n  }\n};\n\nSignStream.sign = jwsSign;\n\nmodule.exports = SignStream;\n","/*global module*/\nvar Buffer = require('safe-buffer').Buffer;\nvar DataStream = require('./data-stream');\nvar jwa = require('jwa');\nvar Stream = require('stream');\nvar toString = require('./tostring');\nvar util = require('util');\nvar JWS_REGEX = /^[a-zA-Z0-9\\-_]+?\\.[a-zA-Z0-9\\-_]+?\\.([a-zA-Z0-9\\-_]+)?$/;\n\nfunction isObject(thing) {\n  return Object.prototype.toString.call(thing) === '[object Object]';\n}\n\nfunction safeJsonParse(thing) {\n  if (isObject(thing))\n    return thing;\n  try { return JSON.parse(thing); }\n  catch (e) { return undefined; }\n}\n\nfunction headerFromJWS(jwsSig) {\n  var encodedHeader = jwsSig.split('.', 1)[0];\n  return safeJsonParse(Buffer.from(encodedHeader, 'base64').toString('binary'));\n}\n\nfunction securedInputFromJWS(jwsSig) {\n  return jwsSig.split('.', 2).join('.');\n}\n\nfunction signatureFromJWS(jwsSig) {\n  return jwsSig.split('.')[2];\n}\n\nfunction payloadFromJWS(jwsSig, encoding) {\n  encoding = encoding || 'utf8';\n  var payload = jwsSig.split('.')[1];\n  return Buffer.from(payload, 'base64').toString(encoding);\n}\n\nfunction isValidJws(string) {\n  return JWS_REGEX.test(string) && !!headerFromJWS(string);\n}\n\nfunction jwsVerify(jwsSig, algorithm, secretOrKey) {\n  if (!algorithm) {\n    var err = new Error(\"Missing algorithm parameter for jws.verify\");\n    err.code = \"MISSING_ALGORITHM\";\n    throw err;\n  }\n  jwsSig = toString(jwsSig);\n  var signature = signatureFromJWS(jwsSig);\n  var securedInput = securedInputFromJWS(jwsSig);\n  var algo = jwa(algorithm);\n  return algo.verify(securedInput, signature, secretOrKey);\n}\n\nfunction jwsDecode(jwsSig, opts) {\n  opts = opts || {};\n  jwsSig = toString(jwsSig);\n\n  if (!isValidJws(jwsSig))\n    return null;\n\n  var header = headerFromJWS(jwsSig);\n\n  if (!header)\n    return null;\n\n  var payload = payloadFromJWS(jwsSig);\n  if (header.typ === 'JWT' || opts.json)\n    payload = JSON.parse(payload, opts.encoding);\n\n  return {\n    header: header,\n    payload: payload,\n    signature: signatureFromJWS(jwsSig)\n  };\n}\n\nfunction VerifyStream(opts) {\n  opts = opts || {};\n  var secretOrKey = opts.secret||opts.publicKey||opts.key;\n  var secretStream = new DataStream(secretOrKey);\n  this.readable = true;\n  this.algorithm = opts.algorithm;\n  this.encoding = opts.encoding;\n  this.secret = this.publicKey = this.key = secretStream;\n  this.signature = new DataStream(opts.signature);\n  this.secret.once('close', function () {\n    if (!this.signature.writable && this.readable)\n      this.verify();\n  }.bind(this));\n\n  this.signature.once('close', function () {\n    if (!this.secret.writable && this.readable)\n      this.verify();\n  }.bind(this));\n}\nutil.inherits(VerifyStream, Stream);\nVerifyStream.prototype.verify = function verify() {\n  try {\n    var valid = jwsVerify(this.signature.buffer, this.algorithm, this.key.buffer);\n    var obj = jwsDecode(this.signature.buffer, this.encoding);\n    this.emit('done', valid, obj);\n    this.emit('data', valid);\n    this.emit('end');\n    this.readable = false;\n    return valid;\n  } catch (e) {\n    this.readable = false;\n    this.emit('error', e);\n    this.emit('close');\n  }\n};\n\nVerifyStream.decode = jwsDecode;\nVerifyStream.isValid = isValidJws;\nVerifyStream.verify = jwsVerify;\n\nmodule.exports = VerifyStream;\n","/*global exports*/\nvar SignStream = require('./lib/sign-stream');\nvar VerifyStream = require('./lib/verify-stream');\n\nvar ALGORITHMS = [\n  'HS256', 'HS384', 'HS512',\n  'RS256', 'RS384', 'RS512',\n  'PS256', 'PS384', 'PS512',\n  'ES256', 'ES384', 'ES512'\n];\n\nexports.ALGORITHMS = ALGORITHMS;\nexports.sign = SignStream.sign;\nexports.verify = VerifyStream.verify;\nexports.decode = VerifyStream.decode;\nexports.isValid = VerifyStream.isValid;\nexports.createSign = function createSign(opts) {\n  return new SignStream(opts);\n};\nexports.createVerify = function createVerify(opts) {\n  return new VerifyStream(opts);\n};\n","var jws = require('jws');\n\nmodule.exports = function (jwt, options) {\n  options = options || {};\n  var decoded = jws.decode(jwt, options);\n  if (!decoded) { return null; }\n  var payload = decoded.payload;\n\n  //try parse the payload\n  if(typeof payload === 'string') {\n    try {\n      var obj = JSON.parse(payload);\n      if(obj !== null && typeof obj === 'object') {\n        payload = obj;\n      }\n    } catch (e) { }\n  }\n\n  //return header if `complete` option is enabled.  header includes claims\n  //such as `kid` and `alg` used to select the key within a JWKS needed to\n  //verify the signature\n  if (options.complete === true) {\n    return {\n      header: decoded.header,\n      payload: payload,\n      signature: decoded.signature\n    };\n  }\n  return payload;\n};\n","var JsonWebTokenError = function (message, error) {\n  Error.call(this, message);\n  if(Error.captureStackTrace) {\n    Error.captureStackTrace(this, this.constructor);\n  }\n  this.name = 'JsonWebTokenError';\n  this.message = message;\n  if (error) this.inner = error;\n};\n\nJsonWebTokenError.prototype = Object.create(Error.prototype);\nJsonWebTokenError.prototype.constructor = JsonWebTokenError;\n\nmodule.exports = JsonWebTokenError;\n","var JsonWebTokenError = require('./JsonWebTokenError');\n\nvar NotBeforeError = function (message, date) {\n  JsonWebTokenError.call(this, message);\n  this.name = 'NotBeforeError';\n  this.date = date;\n};\n\nNotBeforeError.prototype = Object.create(JsonWebTokenError.prototype);\n\nNotBeforeError.prototype.constructor = NotBeforeError;\n\nmodule.exports = NotBeforeError;","var JsonWebTokenError = require('./JsonWebTokenError');\n\nvar TokenExpiredError = function (message, expiredAt) {\n  JsonWebTokenError.call(this, message);\n  this.name = 'TokenExpiredError';\n  this.expiredAt = expiredAt;\n};\n\nTokenExpiredError.prototype = Object.create(JsonWebTokenError.prototype);\n\nTokenExpiredError.prototype.constructor = TokenExpiredError;\n\nmodule.exports = TokenExpiredError;","/**\n * Helpers.\n */\n\nvar s = 1000;\nvar m = s * 60;\nvar h = m * 60;\nvar d = h * 24;\nvar w = d * 7;\nvar y = d * 365.25;\n\n/**\n * Parse or format the given `val`.\n *\n * Options:\n *\n *  - `long` verbose formatting [false]\n *\n * @param {String|Number} val\n * @param {Object} [options]\n * @throws {Error} throw an error if val is not a non-empty string or a number\n * @return {String|Number}\n * @api public\n */\n\nmodule.exports = function (val, options) {\n  options = options || {};\n  var type = typeof val;\n  if (type === 'string' && val.length > 0) {\n    return parse(val);\n  } else if (type === 'number' && isFinite(val)) {\n    return options.long ? fmtLong(val) : fmtShort(val);\n  }\n  throw new Error(\n    'val is not a non-empty string or a valid number. val=' +\n      JSON.stringify(val)\n  );\n};\n\n/**\n * Parse the given `str` and return milliseconds.\n *\n * @param {String} str\n * @return {Number}\n * @api private\n */\n\nfunction parse(str) {\n  str = String(str);\n  if (str.length > 100) {\n    return;\n  }\n  var match = /^(-?(?:\\d+)?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)?$/i.exec(\n    str\n  );\n  if (!match) {\n    return;\n  }\n  var n = parseFloat(match[1]);\n  var type = (match[2] || 'ms').toLowerCase();\n  switch (type) {\n    case 'years':\n    case 'year':\n    case 'yrs':\n    case 'yr':\n    case 'y':\n      return n * y;\n    case 'weeks':\n    case 'week':\n    case 'w':\n      return n * w;\n    case 'days':\n    case 'day':\n    case 'd':\n      return n * d;\n    case 'hours':\n    case 'hour':\n    case 'hrs':\n    case 'hr':\n    case 'h':\n      return n * h;\n    case 'minutes':\n    case 'minute':\n    case 'mins':\n    case 'min':\n    case 'm':\n      return n * m;\n    case 'seconds':\n    case 'second':\n    case 'secs':\n    case 'sec':\n    case 's':\n      return n * s;\n    case 'milliseconds':\n    case 'millisecond':\n    case 'msecs':\n    case 'msec':\n    case 'ms':\n      return n;\n    default:\n      return undefined;\n  }\n}\n\n/**\n * Short format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtShort(ms) {\n  var msAbs = Math.abs(ms);\n  if (msAbs >= d) {\n    return Math.round(ms / d) + 'd';\n  }\n  if (msAbs >= h) {\n    return Math.round(ms / h) + 'h';\n  }\n  if (msAbs >= m) {\n    return Math.round(ms / m) + 'm';\n  }\n  if (msAbs >= s) {\n    return Math.round(ms / s) + 's';\n  }\n  return ms + 'ms';\n}\n\n/**\n * Long format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtLong(ms) {\n  var msAbs = Math.abs(ms);\n  if (msAbs >= d) {\n    return plural(ms, msAbs, d, 'day');\n  }\n  if (msAbs >= h) {\n    return plural(ms, msAbs, h, 'hour');\n  }\n  if (msAbs >= m) {\n    return plural(ms, msAbs, m, 'minute');\n  }\n  if (msAbs >= s) {\n    return plural(ms, msAbs, s, 'second');\n  }\n  return ms + ' ms';\n}\n\n/**\n * Pluralization helper.\n */\n\nfunction plural(ms, msAbs, n, name) {\n  var isPlural = msAbs >= n * 1.5;\n  return Math.round(ms / n) + ' ' + name + (isPlural ? 's' : '');\n}\n","var ms = require('ms');\n\nmodule.exports = function (time, iat) {\n  var timestamp = iat || Math.floor(Date.now() / 1000);\n\n  if (typeof time === 'string') {\n    var milliseconds = ms(time);\n    if (typeof milliseconds === 'undefined') {\n      return;\n    }\n    return Math.floor(timestamp + milliseconds / 1000);\n  } else if (typeof time === 'number') {\n    return timestamp + time;\n  } else {\n    return;\n  }\n\n};","'use strict'\n\n// Note: this is the semver.org version of the spec that it implements\n// Not necessarily the package version of this code.\nconst SEMVER_SPEC_VERSION = '2.0.0'\n\nconst MAX_LENGTH = 256\nconst MAX_SAFE_INTEGER = Number.MAX_SAFE_INTEGER ||\n/* istanbul ignore next */ 9007199254740991\n\n// Max safe segment length for coercion.\nconst MAX_SAFE_COMPONENT_LENGTH = 16\n\n// Max safe length for a build identifier. The max length minus 6 characters for\n// the shortest version with a build 0.0.0+BUILD.\nconst MAX_SAFE_BUILD_LENGTH = MAX_LENGTH - 6\n\nconst RELEASE_TYPES = [\n  'major',\n  'premajor',\n  'minor',\n  'preminor',\n  'patch',\n  'prepatch',\n  'prerelease',\n]\n\nmodule.exports = {\n  MAX_LENGTH,\n  MAX_SAFE_COMPONENT_LENGTH,\n  MAX_SAFE_BUILD_LENGTH,\n  MAX_SAFE_INTEGER,\n  RELEASE_TYPES,\n  SEMVER_SPEC_VERSION,\n  FLAG_INCLUDE_PRERELEASE: 0b001,\n  FLAG_LOOSE: 0b010,\n}\n","'use strict'\n\nconst debug = (\n  typeof process === 'object' &&\n  process.env &&\n  process.env.NODE_DEBUG &&\n  /\\bsemver\\b/i.test(process.env.NODE_DEBUG)\n) ? (...args) => console.error('SEMVER', ...args)\n  : () => {}\n\nmodule.exports = debug\n","'use strict'\n\nconst {\n  MAX_SAFE_COMPONENT_LENGTH,\n  MAX_SAFE_BUILD_LENGTH,\n  MAX_LENGTH,\n} = require('./constants')\nconst debug = require('./debug')\nexports = module.exports = {}\n\n// The actual regexps go on exports.re\nconst re = exports.re = []\nconst safeRe = exports.safeRe = []\nconst src = exports.src = []\nconst safeSrc = exports.safeSrc = []\nconst t = exports.t = {}\nlet R = 0\n\nconst LETTERDASHNUMBER = '[a-zA-Z0-9-]'\n\n// Replace some greedy regex tokens to prevent regex dos issues. These regex are\n// used internally via the safeRe object since all inputs in this library get\n// normalized first to trim and collapse all extra whitespace. The original\n// regexes are exported for userland consumption and lower level usage. A\n// future breaking change could export the safer regex only with a note that\n// all input should have extra whitespace removed.\nconst safeRegexReplacements = [\n  ['\\\\s', 1],\n  ['\\\\d', MAX_LENGTH],\n  [LETTERDASHNUMBER, MAX_SAFE_BUILD_LENGTH],\n]\n\nconst makeSafeRegex = (value) => {\n  for (const [token, max] of safeRegexReplacements) {\n    value = value\n      .split(`${token}*`).join(`${token}{0,${max}}`)\n      .split(`${token}+`).join(`${token}{1,${max}}`)\n  }\n  return value\n}\n\nconst createToken = (name, value, isGlobal) => {\n  const safe = makeSafeRegex(value)\n  const index = R++\n  debug(name, index, value)\n  t[name] = index\n  src[index] = value\n  safeSrc[index] = safe\n  re[index] = new RegExp(value, isGlobal ? 'g' : undefined)\n  safeRe[index] = new RegExp(safe, isGlobal ? 'g' : undefined)\n}\n\n// The following Regular Expressions can be used for tokenizing,\n// validating, and parsing SemVer version strings.\n\n// ## Numeric Identifier\n// A single `0`, or a non-zero digit followed by zero or more digits.\n\ncreateToken('NUMERICIDENTIFIER', '0|[1-9]\\\\d*')\ncreateToken('NUMERICIDENTIFIERLOOSE', '\\\\d+')\n\n// ## Non-numeric Identifier\n// Zero or more digits, followed by a letter or hyphen, and then zero or\n// more letters, digits, or hyphens.\n\ncreateToken('NONNUMERICIDENTIFIER', `\\\\d*[a-zA-Z-]${LETTERDASHNUMBER}*`)\n\n// ## Main Version\n// Three dot-separated numeric identifiers.\n\ncreateToken('MAINVERSION', `(${src[t.NUMERICIDENTIFIER]})\\\\.` +\n                   `(${src[t.NUMERICIDENTIFIER]})\\\\.` +\n                   `(${src[t.NUMERICIDENTIFIER]})`)\n\ncreateToken('MAINVERSIONLOOSE', `(${src[t.NUMERICIDENTIFIERLOOSE]})\\\\.` +\n                        `(${src[t.NUMERICIDENTIFIERLOOSE]})\\\\.` +\n                        `(${src[t.NUMERICIDENTIFIERLOOSE]})`)\n\n// ## Pre-release Version Identifier\n// A numeric identifier, or a non-numeric identifier.\n// Non-numberic identifiers include numberic identifiers but can be longer.\n// Therefore non-numberic identifiers must go first.\n\ncreateToken('PRERELEASEIDENTIFIER', `(?:${src[t.NONNUMERICIDENTIFIER]\n}|${src[t.NUMERICIDENTIFIER]})`)\n\ncreateToken('PRERELEASEIDENTIFIERLOOSE', `(?:${src[t.NONNUMERICIDENTIFIER]\n}|${src[t.NUMERICIDENTIFIERLOOSE]})`)\n\n// ## Pre-release Version\n// Hyphen, followed by one or more dot-separated pre-release version\n// identifiers.\n\ncreateToken('PRERELEASE', `(?:-(${src[t.PRERELEASEIDENTIFIER]\n}(?:\\\\.${src[t.PRERELEASEIDENTIFIER]})*))`)\n\ncreateToken('PRERELEASELOOSE', `(?:-?(${src[t.PRERELEASEIDENTIFIERLOOSE]\n}(?:\\\\.${src[t.PRERELEASEIDENTIFIERLOOSE]})*))`)\n\n// ## Build Metadata Identifier\n// Any combination of digits, letters, or hyphens.\n\ncreateToken('BUILDIDENTIFIER', `${LETTERDASHNUMBER}+`)\n\n// ## Build Metadata\n// Plus sign, followed by one or more period-separated build metadata\n// identifiers.\n\ncreateToken('BUILD', `(?:\\\\+(${src[t.BUILDIDENTIFIER]\n}(?:\\\\.${src[t.BUILDIDENTIFIER]})*))`)\n\n// ## Full Version String\n// A main version, followed optionally by a pre-release version and\n// build metadata.\n\n// Note that the only major, minor, patch, and pre-release sections of\n// the version string are capturing groups.  The build metadata is not a\n// capturing group, because it should not ever be used in version\n// comparison.\n\ncreateToken('FULLPLAIN', `v?${src[t.MAINVERSION]\n}${src[t.PRERELEASE]}?${\n  src[t.BUILD]}?`)\n\ncreateToken('FULL', `^${src[t.FULLPLAIN]}$`)\n\n// like full, but allows v1.2.3 and =1.2.3, which people do sometimes.\n// also, 1.0.0alpha1 (prerelease without the hyphen) which is pretty\n// common in the npm registry.\ncreateToken('LOOSEPLAIN', `[v=\\\\s]*${src[t.MAINVERSIONLOOSE]\n}${src[t.PRERELEASELOOSE]}?${\n  src[t.BUILD]}?`)\n\ncreateToken('LOOSE', `^${src[t.LOOSEPLAIN]}$`)\n\ncreateToken('GTLT', '((?:<|>)?=?)')\n\n// Something like \"2.*\" or \"1.2.x\".\n// Note that \"x.x\" is a valid xRange identifer, meaning \"any version\"\n// Only the first item is strictly required.\ncreateToken('XRANGEIDENTIFIERLOOSE', `${src[t.NUMERICIDENTIFIERLOOSE]}|x|X|\\\\*`)\ncreateToken('XRANGEIDENTIFIER', `${src[t.NUMERICIDENTIFIER]}|x|X|\\\\*`)\n\ncreateToken('XRANGEPLAIN', `[v=\\\\s]*(${src[t.XRANGEIDENTIFIER]})` +\n                   `(?:\\\\.(${src[t.XRANGEIDENTIFIER]})` +\n                   `(?:\\\\.(${src[t.XRANGEIDENTIFIER]})` +\n                   `(?:${src[t.PRERELEASE]})?${\n                     src[t.BUILD]}?` +\n                   `)?)?`)\n\ncreateToken('XRANGEPLAINLOOSE', `[v=\\\\s]*(${src[t.XRANGEIDENTIFIERLOOSE]})` +\n                        `(?:\\\\.(${src[t.XRANGEIDENTIFIERLOOSE]})` +\n                        `(?:\\\\.(${src[t.XRANGEIDENTIFIERLOOSE]})` +\n                        `(?:${src[t.PRERELEASELOOSE]})?${\n                          src[t.BUILD]}?` +\n                        `)?)?`)\n\ncreateToken('XRANGE', `^${src[t.GTLT]}\\\\s*${src[t.XRANGEPLAIN]}$`)\ncreateToken('XRANGELOOSE', `^${src[t.GTLT]}\\\\s*${src[t.XRANGEPLAINLOOSE]}$`)\n\n// Coercion.\n// Extract anything that could conceivably be a part of a valid semver\ncreateToken('COERCEPLAIN', `${'(^|[^\\\\d])' +\n              '(\\\\d{1,'}${MAX_SAFE_COMPONENT_LENGTH}})` +\n              `(?:\\\\.(\\\\d{1,${MAX_SAFE_COMPONENT_LENGTH}}))?` +\n              `(?:\\\\.(\\\\d{1,${MAX_SAFE_COMPONENT_LENGTH}}))?`)\ncreateToken('COERCE', `${src[t.COERCEPLAIN]}(?:$|[^\\\\d])`)\ncreateToken('COERCEFULL', src[t.COERCEPLAIN] +\n              `(?:${src[t.PRERELEASE]})?` +\n              `(?:${src[t.BUILD]})?` +\n              `(?:$|[^\\\\d])`)\ncreateToken('COERCERTL', src[t.COERCE], true)\ncreateToken('COERCERTLFULL', src[t.COERCEFULL], true)\n\n// Tilde ranges.\n// Meaning is \"reasonably at or greater than\"\ncreateToken('LONETILDE', '(?:~>?)')\n\ncreateToken('TILDETRIM', `(\\\\s*)${src[t.LONETILDE]}\\\\s+`, true)\nexports.tildeTrimReplace = '$1~'\n\ncreateToken('TILDE', `^${src[t.LONETILDE]}${src[t.XRANGEPLAIN]}$`)\ncreateToken('TILDELOOSE', `^${src[t.LONETILDE]}${src[t.XRANGEPLAINLOOSE]}$`)\n\n// Caret ranges.\n// Meaning is \"at least and backwards compatible with\"\ncreateToken('LONECARET', '(?:\\\\^)')\n\ncreateToken('CARETTRIM', `(\\\\s*)${src[t.LONECARET]}\\\\s+`, true)\nexports.caretTrimReplace = '$1^'\n\ncreateToken('CARET', `^${src[t.LONECARET]}${src[t.XRANGEPLAIN]}$`)\ncreateToken('CARETLOOSE', `^${src[t.LONECARET]}${src[t.XRANGEPLAINLOOSE]}$`)\n\n// A simple gt/lt/eq thing, or just \"\" to indicate \"any version\"\ncreateToken('COMPARATORLOOSE', `^${src[t.GTLT]}\\\\s*(${src[t.LOOSEPLAIN]})$|^$`)\ncreateToken('COMPARATOR', `^${src[t.GTLT]}\\\\s*(${src[t.FULLPLAIN]})$|^$`)\n\n// An expression to strip any whitespace between the gtlt and the thing\n// it modifies, so that `> 1.2.3` ==> `>1.2.3`\ncreateToken('COMPARATORTRIM', `(\\\\s*)${src[t.GTLT]\n}\\\\s*(${src[t.LOOSEPLAIN]}|${src[t.XRANGEPLAIN]})`, true)\nexports.comparatorTrimReplace = '$1$2$3'\n\n// Something like `1.2.3 - 1.2.4`\n// Note that these all use the loose form, because they'll be\n// checked against either the strict or loose comparator form\n// later.\ncreateToken('HYPHENRANGE', `^\\\\s*(${src[t.XRANGEPLAIN]})` +\n                   `\\\\s+-\\\\s+` +\n                   `(${src[t.XRANGEPLAIN]})` +\n                   `\\\\s*$`)\n\ncreateToken('HYPHENRANGELOOSE', `^\\\\s*(${src[t.XRANGEPLAINLOOSE]})` +\n                        `\\\\s+-\\\\s+` +\n                        `(${src[t.XRANGEPLAINLOOSE]})` +\n                        `\\\\s*$`)\n\n// Star ranges basically just allow anything at all.\ncreateToken('STAR', '(<|>)?=?\\\\s*\\\\*')\n// >=0.0.0 is like a star\ncreateToken('GTE0', '^\\\\s*>=\\\\s*0\\\\.0\\\\.0\\\\s*$')\ncreateToken('GTE0PRE', '^\\\\s*>=\\\\s*0\\\\.0\\\\.0-0\\\\s*$')\n","'use strict'\n\n// parse out just the options we care about\nconst looseOption = Object.freeze({ loose: true })\nconst emptyOpts = Object.freeze({ })\nconst parseOptions = options => {\n  if (!options) {\n    return emptyOpts\n  }\n\n  if (typeof options !== 'object') {\n    return looseOption\n  }\n\n  return options\n}\nmodule.exports = parseOptions\n","'use strict'\n\nconst numeric = /^[0-9]+$/\nconst compareIdentifiers = (a, b) => {\n  const anum = numeric.test(a)\n  const bnum = numeric.test(b)\n\n  if (anum && bnum) {\n    a = +a\n    b = +b\n  }\n\n  return a === b ? 0\n    : (anum && !bnum) ? -1\n    : (bnum && !anum) ? 1\n    : a < b ? -1\n    : 1\n}\n\nconst rcompareIdentifiers = (a, b) => compareIdentifiers(b, a)\n\nmodule.exports = {\n  compareIdentifiers,\n  rcompareIdentifiers,\n}\n","'use strict'\n\nconst debug = require('../internal/debug')\nconst { MAX_LENGTH, MAX_SAFE_INTEGER } = require('../internal/constants')\nconst { safeRe: re, t } = require('../internal/re')\n\nconst parseOptions = require('../internal/parse-options')\nconst { compareIdentifiers } = require('../internal/identifiers')\nclass SemVer {\n  constructor (version, options) {\n    options = parseOptions(options)\n\n    if (version instanceof SemVer) {\n      if (version.loose === !!options.loose &&\n        version.includePrerelease === !!options.includePrerelease) {\n        return version\n      } else {\n        version = version.version\n      }\n    } else if (typeof version !== 'string') {\n      throw new TypeError(`Invalid version. Must be a string. Got type \"${typeof version}\".`)\n    }\n\n    if (version.length > MAX_LENGTH) {\n      throw new TypeError(\n        `version is longer than ${MAX_LENGTH} characters`\n      )\n    }\n\n    debug('SemVer', version, options)\n    this.options = options\n    this.loose = !!options.loose\n    // this isn't actually relevant for versions, but keep it so that we\n    // don't run into trouble passing this.options around.\n    this.includePrerelease = !!options.includePrerelease\n\n    const m = version.trim().match(options.loose ? re[t.LOOSE] : re[t.FULL])\n\n    if (!m) {\n      throw new TypeError(`Invalid Version: ${version}`)\n    }\n\n    this.raw = version\n\n    // these are actually numbers\n    this.major = +m[1]\n    this.minor = +m[2]\n    this.patch = +m[3]\n\n    if (this.major > MAX_SAFE_INTEGER || this.major < 0) {\n      throw new TypeError('Invalid major version')\n    }\n\n    if (this.minor > MAX_SAFE_INTEGER || this.minor < 0) {\n      throw new TypeError('Invalid minor version')\n    }\n\n    if (this.patch > MAX_SAFE_INTEGER || this.patch < 0) {\n      throw new TypeError('Invalid patch version')\n    }\n\n    // numberify any prerelease numeric ids\n    if (!m[4]) {\n      this.prerelease = []\n    } else {\n      this.prerelease = m[4].split('.').map((id) => {\n        if (/^[0-9]+$/.test(id)) {\n          const num = +id\n          if (num >= 0 && num < MAX_SAFE_INTEGER) {\n            return num\n          }\n        }\n        return id\n      })\n    }\n\n    this.build = m[5] ? m[5].split('.') : []\n    this.format()\n  }\n\n  format () {\n    this.version = `${this.major}.${this.minor}.${this.patch}`\n    if (this.prerelease.length) {\n      this.version += `-${this.prerelease.join('.')}`\n    }\n    return this.version\n  }\n\n  toString () {\n    return this.version\n  }\n\n  compare (other) {\n    debug('SemVer.compare', this.version, this.options, other)\n    if (!(other instanceof SemVer)) {\n      if (typeof other === 'string' && other === this.version) {\n        return 0\n      }\n      other = new SemVer(other, this.options)\n    }\n\n    if (other.version === this.version) {\n      return 0\n    }\n\n    return this.compareMain(other) || this.comparePre(other)\n  }\n\n  compareMain (other) {\n    if (!(other instanceof SemVer)) {\n      other = new SemVer(other, this.options)\n    }\n\n    return (\n      compareIdentifiers(this.major, other.major) ||\n      compareIdentifiers(this.minor, other.minor) ||\n      compareIdentifiers(this.patch, other.patch)\n    )\n  }\n\n  comparePre (other) {\n    if (!(other instanceof SemVer)) {\n      other = new SemVer(other, this.options)\n    }\n\n    // NOT having a prerelease is > having one\n    if (this.prerelease.length && !other.prerelease.length) {\n      return -1\n    } else if (!this.prerelease.length && other.prerelease.length) {\n      return 1\n    } else if (!this.prerelease.length && !other.prerelease.length) {\n      return 0\n    }\n\n    let i = 0\n    do {\n      const a = this.prerelease[i]\n      const b = other.prerelease[i]\n      debug('prerelease compare', i, a, b)\n      if (a === undefined && b === undefined) {\n        return 0\n      } else if (b === undefined) {\n        return 1\n      } else if (a === undefined) {\n        return -1\n      } else if (a === b) {\n        continue\n      } else {\n        return compareIdentifiers(a, b)\n      }\n    } while (++i)\n  }\n\n  compareBuild (other) {\n    if (!(other instanceof SemVer)) {\n      other = new SemVer(other, this.options)\n    }\n\n    let i = 0\n    do {\n      const a = this.build[i]\n      const b = other.build[i]\n      debug('build compare', i, a, b)\n      if (a === undefined && b === undefined) {\n        return 0\n      } else if (b === undefined) {\n        return 1\n      } else if (a === undefined) {\n        return -1\n      } else if (a === b) {\n        continue\n      } else {\n        return compareIdentifiers(a, b)\n      }\n    } while (++i)\n  }\n\n  // preminor will bump the version up to the next minor release, and immediately\n  // down to pre-release. premajor and prepatch work the same way.\n  inc (release, identifier, identifierBase) {\n    if (release.startsWith('pre')) {\n      if (!identifier && identifierBase === false) {\n        throw new Error('invalid increment argument: identifier is empty')\n      }\n      // Avoid an invalid semver results\n      if (identifier) {\n        const match = `-${identifier}`.match(this.options.loose ? re[t.PRERELEASELOOSE] : re[t.PRERELEASE])\n        if (!match || match[1] !== identifier) {\n          throw new Error(`invalid identifier: ${identifier}`)\n        }\n      }\n    }\n\n    switch (release) {\n      case 'premajor':\n        this.prerelease.length = 0\n        this.patch = 0\n        this.minor = 0\n        this.major++\n        this.inc('pre', identifier, identifierBase)\n        break\n      case 'preminor':\n        this.prerelease.length = 0\n        this.patch = 0\n        this.minor++\n        this.inc('pre', identifier, identifierBase)\n        break\n      case 'prepatch':\n        // If this is already a prerelease, it will bump to the next version\n        // drop any prereleases that might already exist, since they are not\n        // relevant at this point.\n        this.prerelease.length = 0\n        this.inc('patch', identifier, identifierBase)\n        this.inc('pre', identifier, identifierBase)\n        break\n      // If the input is a non-prerelease version, this acts the same as\n      // prepatch.\n      case 'prerelease':\n        if (this.prerelease.length === 0) {\n          this.inc('patch', identifier, identifierBase)\n        }\n        this.inc('pre', identifier, identifierBase)\n        break\n      case 'release':\n        if (this.prerelease.length === 0) {\n          throw new Error(`version ${this.raw} is not a prerelease`)\n        }\n        this.prerelease.length = 0\n        break\n\n      case 'major':\n        // If this is a pre-major version, bump up to the same major version.\n        // Otherwise increment major.\n        // 1.0.0-5 bumps to 1.0.0\n        // 1.1.0 bumps to 2.0.0\n        if (\n          this.minor !== 0 ||\n          this.patch !== 0 ||\n          this.prerelease.length === 0\n        ) {\n          this.major++\n        }\n        this.minor = 0\n        this.patch = 0\n        this.prerelease = []\n        break\n      case 'minor':\n        // If this is a pre-minor version, bump up to the same minor version.\n        // Otherwise increment minor.\n        // 1.2.0-5 bumps to 1.2.0\n        // 1.2.1 bumps to 1.3.0\n        if (this.patch !== 0 || this.prerelease.length === 0) {\n          this.minor++\n        }\n        this.patch = 0\n        this.prerelease = []\n        break\n      case 'patch':\n        // If this is not a pre-release version, it will increment the patch.\n        // If it is a pre-release it will bump up to the same patch version.\n        // 1.2.0-5 patches to 1.2.0\n        // 1.2.0 patches to 1.2.1\n        if (this.prerelease.length === 0) {\n          this.patch++\n        }\n        this.prerelease = []\n        break\n      // This probably shouldn't be used publicly.\n      // 1.0.0 'pre' would become 1.0.0-0 which is the wrong direction.\n      case 'pre': {\n        const base = Number(identifierBase) ? 1 : 0\n\n        if (this.prerelease.length === 0) {\n          this.prerelease = [base]\n        } else {\n          let i = this.prerelease.length\n          while (--i >= 0) {\n            if (typeof this.prerelease[i] === 'number') {\n              this.prerelease[i]++\n              i = -2\n            }\n          }\n          if (i === -1) {\n            // didn't increment anything\n            if (identifier === this.prerelease.join('.') && identifierBase === false) {\n              throw new Error('invalid increment argument: identifier already exists')\n            }\n            this.prerelease.push(base)\n          }\n        }\n        if (identifier) {\n          // 1.2.0-beta.1 bumps to 1.2.0-beta.2,\n          // 1.2.0-beta.fooblz or 1.2.0-beta bumps to 1.2.0-beta.0\n          let prerelease = [identifier, base]\n          if (identifierBase === false) {\n            prerelease = [identifier]\n          }\n          if (compareIdentifiers(this.prerelease[0], identifier) === 0) {\n            if (isNaN(this.prerelease[1])) {\n              this.prerelease = prerelease\n            }\n          } else {\n            this.prerelease = prerelease\n          }\n        }\n        break\n      }\n      default:\n        throw new Error(`invalid increment argument: ${release}`)\n    }\n    this.raw = this.format()\n    if (this.build.length) {\n      this.raw += `+${this.build.join('.')}`\n    }\n    return this\n  }\n}\n\nmodule.exports = SemVer\n","'use strict'\n\nconst SemVer = require('../classes/semver')\nconst parse = (version, options, throwErrors = false) => {\n  if (version instanceof SemVer) {\n    return version\n  }\n  try {\n    return new SemVer(version, options)\n  } catch (er) {\n    if (!throwErrors) {\n      return null\n    }\n    throw er\n  }\n}\n\nmodule.exports = parse\n","'use strict'\n\nconst SemVer = require('../classes/semver')\nconst compare = (a, b, loose) =>\n  new SemVer(a, loose).compare(new SemVer(b, loose))\n\nmodule.exports = compare\n","'use strict'\n\nconst SemVer = require('../classes/semver')\nconst compareBuild = (a, b, loose) => {\n  const versionA = new SemVer(a, loose)\n  const versionB = new SemVer(b, loose)\n  return versionA.compare(versionB) || versionA.compareBuild(versionB)\n}\nmodule.exports = compareBuild\n","'use strict'\n\nconst compare = require('./compare')\nconst gt = (a, b, loose) => compare(a, b, loose) > 0\nmodule.exports = gt\n","'use strict'\n\nconst compare = require('./compare')\nconst lt = (a, b, loose) => compare(a, b, loose) < 0\nmodule.exports = lt\n","'use strict'\n\nconst compare = require('./compare')\nconst eq = (a, b, loose) => compare(a, b, loose) === 0\nmodule.exports = eq\n","'use strict'\n\nconst compare = require('./compare')\nconst neq = (a, b, loose) => compare(a, b, loose) !== 0\nmodule.exports = neq\n","'use strict'\n\nconst compare = require('./compare')\nconst gte = (a, b, loose) => compare(a, b, loose) >= 0\nmodule.exports = gte\n","'use strict'\n\nconst compare = require('./compare')\nconst lte = (a, b, loose) => compare(a, b, loose) <= 0\nmodule.exports = lte\n","'use strict'\n\nconst eq = require('./eq')\nconst neq = require('./neq')\nconst gt = require('./gt')\nconst gte = require('./gte')\nconst lt = require('./lt')\nconst lte = require('./lte')\n\nconst cmp = (a, op, b, loose) => {\n  switch (op) {\n    case '===':\n      if (typeof a === 'object') {\n        a = a.version\n      }\n      if (typeof b === 'object') {\n        b = b.version\n      }\n      return a === b\n\n    case '!==':\n      if (typeof a === 'object') {\n        a = a.version\n      }\n      if (typeof b === 'object') {\n        b = b.version\n      }\n      return a !== b\n\n    case '':\n    case '=':\n    case '==':\n      return eq(a, b, loose)\n\n    case '!=':\n      return neq(a, b, loose)\n\n    case '>':\n      return gt(a, b, loose)\n\n    case '>=':\n      return gte(a, b, loose)\n\n    case '<':\n      return lt(a, b, loose)\n\n    case '<=':\n      return lte(a, b, loose)\n\n    default:\n      throw new TypeError(`Invalid operator: ${op}`)\n  }\n}\nmodule.exports = cmp\n","'use strict'\n\nconst SPACE_CHARACTERS = /\\s+/g\n\n// hoisted class for cyclic dependency\nclass Range {\n  constructor (range, options) {\n    options = parseOptions(options)\n\n    if (range instanceof Range) {\n      if (\n        range.loose === !!options.loose &&\n        range.includePrerelease === !!options.includePrerelease\n      ) {\n        return range\n      } else {\n        return new Range(range.raw, options)\n      }\n    }\n\n    if (range instanceof Comparator) {\n      // just put it in the set and return\n      this.raw = range.value\n      this.set = [[range]]\n      this.formatted = undefined\n      return this\n    }\n\n    this.options = options\n    this.loose = !!options.loose\n    this.includePrerelease = !!options.includePrerelease\n\n    // First reduce all whitespace as much as possible so we do not have to rely\n    // on potentially slow regexes like \\s*. This is then stored and used for\n    // future error messages as well.\n    this.raw = range.trim().replace(SPACE_CHARACTERS, ' ')\n\n    // First, split on ||\n    this.set = this.raw\n      .split('||')\n      // map the range to a 2d array of comparators\n      .map(r => this.parseRange(r.trim()))\n      // throw out any comparator lists that are empty\n      // this generally means that it was not a valid range, which is allowed\n      // in loose mode, but will still throw if the WHOLE range is invalid.\n      .filter(c => c.length)\n\n    if (!this.set.length) {\n      throw new TypeError(`Invalid SemVer Range: ${this.raw}`)\n    }\n\n    // if we have any that are not the null set, throw out null sets.\n    if (this.set.length > 1) {\n      // keep the first one, in case they're all null sets\n      const first = this.set[0]\n      this.set = this.set.filter(c => !isNullSet(c[0]))\n      if (this.set.length === 0) {\n        this.set = [first]\n      } else if (this.set.length > 1) {\n        // if we have any that are *, then the range is just *\n        for (const c of this.set) {\n          if (c.length === 1 && isAny(c[0])) {\n            this.set = [c]\n            break\n          }\n        }\n      }\n    }\n\n    this.formatted = undefined\n  }\n\n  get range () {\n    if (this.formatted === undefined) {\n      this.formatted = ''\n      for (let i = 0; i < this.set.length; i++) {\n        if (i > 0) {\n          this.formatted += '||'\n        }\n        const comps = this.set[i]\n        for (let k = 0; k < comps.length; k++) {\n          if (k > 0) {\n            this.formatted += ' '\n          }\n          this.formatted += comps[k].toString().trim()\n        }\n      }\n    }\n    return this.formatted\n  }\n\n  format () {\n    return this.range\n  }\n\n  toString () {\n    return this.range\n  }\n\n  parseRange (range) {\n    // memoize range parsing for performance.\n    // this is a very hot path, and fully deterministic.\n    const memoOpts =\n      (this.options.includePrerelease && FLAG_INCLUDE_PRERELEASE) |\n      (this.options.loose && FLAG_LOOSE)\n    const memoKey = memoOpts + ':' + range\n    const cached = cache.get(memoKey)\n    if (cached) {\n      return cached\n    }\n\n    const loose = this.options.loose\n    // `1.2.3 - 1.2.4` => `>=1.2.3 <=1.2.4`\n    const hr = loose ? re[t.HYPHENRANGELOOSE] : re[t.HYPHENRANGE]\n    range = range.replace(hr, hyphenReplace(this.options.includePrerelease))\n    debug('hyphen replace', range)\n\n    // `> 1.2.3 < 1.2.5` => `>1.2.3 <1.2.5`\n    range = range.replace(re[t.COMPARATORTRIM], comparatorTrimReplace)\n    debug('comparator trim', range)\n\n    // `~ 1.2.3` => `~1.2.3`\n    range = range.replace(re[t.TILDETRIM], tildeTrimReplace)\n    debug('tilde trim', range)\n\n    // `^ 1.2.3` => `^1.2.3`\n    range = range.replace(re[t.CARETTRIM], caretTrimReplace)\n    debug('caret trim', range)\n\n    // At this point, the range is completely trimmed and\n    // ready to be split into comparators.\n\n    let rangeList = range\n      .split(' ')\n      .map(comp => parseComparator(comp, this.options))\n      .join(' ')\n      .split(/\\s+/)\n      // >=0.0.0 is equivalent to *\n      .map(comp => replaceGTE0(comp, this.options))\n\n    if (loose) {\n      // in loose mode, throw out any that are not valid comparators\n      rangeList = rangeList.filter(comp => {\n        debug('loose invalid filter', comp, this.options)\n        return !!comp.match(re[t.COMPARATORLOOSE])\n      })\n    }\n    debug('range list', rangeList)\n\n    // if any comparators are the null set, then replace with JUST null set\n    // if more than one comparator, remove any * comparators\n    // also, don't include the same comparator more than once\n    const rangeMap = new Map()\n    const comparators = rangeList.map(comp => new Comparator(comp, this.options))\n    for (const comp of comparators) {\n      if (isNullSet(comp)) {\n        return [comp]\n      }\n      rangeMap.set(comp.value, comp)\n    }\n    if (rangeMap.size > 1 && rangeMap.has('')) {\n      rangeMap.delete('')\n    }\n\n    const result = [...rangeMap.values()]\n    cache.set(memoKey, result)\n    return result\n  }\n\n  intersects (range, options) {\n    if (!(range instanceof Range)) {\n      throw new TypeError('a Range is required')\n    }\n\n    return this.set.some((thisComparators) => {\n      return (\n        isSatisfiable(thisComparators, options) &&\n        range.set.some((rangeComparators) => {\n          return (\n            isSatisfiable(rangeComparators, options) &&\n            thisComparators.every((thisComparator) => {\n              return rangeComparators.every((rangeComparator) => {\n                return thisComparator.intersects(rangeComparator, options)\n              })\n            })\n          )\n        })\n      )\n    })\n  }\n\n  // if ANY of the sets match ALL of its comparators, then pass\n  test (version) {\n    if (!version) {\n      return false\n    }\n\n    if (typeof version === 'string') {\n      try {\n        version = new SemVer(version, this.options)\n      } catch (er) {\n        return false\n      }\n    }\n\n    for (let i = 0; i < this.set.length; i++) {\n      if (testSet(this.set[i], version, this.options)) {\n        return true\n      }\n    }\n    return false\n  }\n}\n\nmodule.exports = Range\n\nconst LRU = require('../internal/lrucache')\nconst cache = new LRU()\n\nconst parseOptions = require('../internal/parse-options')\nconst Comparator = require('./comparator')\nconst debug = require('../internal/debug')\nconst SemVer = require('./semver')\nconst {\n  safeRe: re,\n  t,\n  comparatorTrimReplace,\n  tildeTrimReplace,\n  caretTrimReplace,\n} = require('../internal/re')\nconst { FLAG_INCLUDE_PRERELEASE, FLAG_LOOSE } = require('../internal/constants')\n\nconst isNullSet = c => c.value === '<0.0.0-0'\nconst isAny = c => c.value === ''\n\n// take a set of comparators and determine whether there\n// exists a version which can satisfy it\nconst isSatisfiable = (comparators, options) => {\n  let result = true\n  const remainingComparators = comparators.slice()\n  let testComparator = remainingComparators.pop()\n\n  while (result && remainingComparators.length) {\n    result = remainingComparators.every((otherComparator) => {\n      return testComparator.intersects(otherComparator, options)\n    })\n\n    testComparator = remainingComparators.pop()\n  }\n\n  return result\n}\n\n// comprised of xranges, tildes, stars, and gtlt's at this point.\n// already replaced the hyphen ranges\n// turn into a set of JUST comparators.\nconst parseComparator = (comp, options) => {\n  debug('comp', comp, options)\n  comp = replaceCarets(comp, options)\n  debug('caret', comp)\n  comp = replaceTildes(comp, options)\n  debug('tildes', comp)\n  comp = replaceXRanges(comp, options)\n  debug('xrange', comp)\n  comp = replaceStars(comp, options)\n  debug('stars', comp)\n  return comp\n}\n\nconst isX = id => !id || id.toLowerCase() === 'x' || id === '*'\n\n// ~, ~> --> * (any, kinda silly)\n// ~2, ~2.x, ~2.x.x, ~>2, ~>2.x ~>2.x.x --> >=2.0.0 <3.0.0-0\n// ~2.0, ~2.0.x, ~>2.0, ~>2.0.x --> >=2.0.0 <2.1.0-0\n// ~1.2, ~1.2.x, ~>1.2, ~>1.2.x --> >=1.2.0 <1.3.0-0\n// ~1.2.3, ~>1.2.3 --> >=1.2.3 <1.3.0-0\n// ~1.2.0, ~>1.2.0 --> >=1.2.0 <1.3.0-0\n// ~0.0.1 --> >=0.0.1 <0.1.0-0\nconst replaceTildes = (comp, options) => {\n  return comp\n    .trim()\n    .split(/\\s+/)\n    .map((c) => replaceTilde(c, options))\n    .join(' ')\n}\n\nconst replaceTilde = (comp, options) => {\n  const r = options.loose ? re[t.TILDELOOSE] : re[t.TILDE]\n  return comp.replace(r, (_, M, m, p, pr) => {\n    debug('tilde', comp, _, M, m, p, pr)\n    let ret\n\n    if (isX(M)) {\n      ret = ''\n    } else if (isX(m)) {\n      ret = `>=${M}.0.0 <${+M + 1}.0.0-0`\n    } else if (isX(p)) {\n      // ~1.2 == >=1.2.0 <1.3.0-0\n      ret = `>=${M}.${m}.0 <${M}.${+m + 1}.0-0`\n    } else if (pr) {\n      debug('replaceTilde pr', pr)\n      ret = `>=${M}.${m}.${p}-${pr\n      } <${M}.${+m + 1}.0-0`\n    } else {\n      // ~1.2.3 == >=1.2.3 <1.3.0-0\n      ret = `>=${M}.${m}.${p\n      } <${M}.${+m + 1}.0-0`\n    }\n\n    debug('tilde return', ret)\n    return ret\n  })\n}\n\n// ^ --> * (any, kinda silly)\n// ^2, ^2.x, ^2.x.x --> >=2.0.0 <3.0.0-0\n// ^2.0, ^2.0.x --> >=2.0.0 <3.0.0-0\n// ^1.2, ^1.2.x --> >=1.2.0 <2.0.0-0\n// ^1.2.3 --> >=1.2.3 <2.0.0-0\n// ^1.2.0 --> >=1.2.0 <2.0.0-0\n// ^0.0.1 --> >=0.0.1 <0.0.2-0\n// ^0.1.0 --> >=0.1.0 <0.2.0-0\nconst replaceCarets = (comp, options) => {\n  return comp\n    .trim()\n    .split(/\\s+/)\n    .map((c) => replaceCaret(c, options))\n    .join(' ')\n}\n\nconst replaceCaret = (comp, options) => {\n  debug('caret', comp, options)\n  const r = options.loose ? re[t.CARETLOOSE] : re[t.CARET]\n  const z = options.includePrerelease ? '-0' : ''\n  return comp.replace(r, (_, M, m, p, pr) => {\n    debug('caret', comp, _, M, m, p, pr)\n    let ret\n\n    if (isX(M)) {\n      ret = ''\n    } else if (isX(m)) {\n      ret = `>=${M}.0.0${z} <${+M + 1}.0.0-0`\n    } else if (isX(p)) {\n      if (M === '0') {\n        ret = `>=${M}.${m}.0${z} <${M}.${+m + 1}.0-0`\n      } else {\n        ret = `>=${M}.${m}.0${z} <${+M + 1}.0.0-0`\n      }\n    } else if (pr) {\n      debug('replaceCaret pr', pr)\n      if (M === '0') {\n        if (m === '0') {\n          ret = `>=${M}.${m}.${p}-${pr\n          } <${M}.${m}.${+p + 1}-0`\n        } else {\n          ret = `>=${M}.${m}.${p}-${pr\n          } <${M}.${+m + 1}.0-0`\n        }\n      } else {\n        ret = `>=${M}.${m}.${p}-${pr\n        } <${+M + 1}.0.0-0`\n      }\n    } else {\n      debug('no pr')\n      if (M === '0') {\n        if (m === '0') {\n          ret = `>=${M}.${m}.${p\n          }${z} <${M}.${m}.${+p + 1}-0`\n        } else {\n          ret = `>=${M}.${m}.${p\n          }${z} <${M}.${+m + 1}.0-0`\n        }\n      } else {\n        ret = `>=${M}.${m}.${p\n        } <${+M + 1}.0.0-0`\n      }\n    }\n\n    debug('caret return', ret)\n    return ret\n  })\n}\n\nconst replaceXRanges = (comp, options) => {\n  debug('replaceXRanges', comp, options)\n  return comp\n    .split(/\\s+/)\n    .map((c) => replaceXRange(c, options))\n    .join(' ')\n}\n\nconst replaceXRange = (comp, options) => {\n  comp = comp.trim()\n  const r = options.loose ? re[t.XRANGELOOSE] : re[t.XRANGE]\n  return comp.replace(r, (ret, gtlt, M, m, p, pr) => {\n    debug('xRange', comp, ret, gtlt, M, m, p, pr)\n    const xM = isX(M)\n    const xm = xM || isX(m)\n    const xp = xm || isX(p)\n    const anyX = xp\n\n    if (gtlt === '=' && anyX) {\n      gtlt = ''\n    }\n\n    // if we're including prereleases in the match, then we need\n    // to fix this to -0, the lowest possible prerelease value\n    pr = options.includePrerelease ? '-0' : ''\n\n    if (xM) {\n      if (gtlt === '>' || gtlt === '<') {\n        // nothing is allowed\n        ret = '<0.0.0-0'\n      } else {\n        // nothing is forbidden\n        ret = '*'\n      }\n    } else if (gtlt && anyX) {\n      // we know patch is an x, because we have any x at all.\n      // replace X with 0\n      if (xm) {\n        m = 0\n      }\n      p = 0\n\n      if (gtlt === '>') {\n        // >1 => >=2.0.0\n        // >1.2 => >=1.3.0\n        gtlt = '>='\n        if (xm) {\n          M = +M + 1\n          m = 0\n          p = 0\n        } else {\n          m = +m + 1\n          p = 0\n        }\n      } else if (gtlt === '<=') {\n        // <=0.7.x is actually <0.8.0, since any 0.7.x should\n        // pass.  Similarly, <=7.x is actually <8.0.0, etc.\n        gtlt = '<'\n        if (xm) {\n          M = +M + 1\n        } else {\n          m = +m + 1\n        }\n      }\n\n      if (gtlt === '<') {\n        pr = '-0'\n      }\n\n      ret = `${gtlt + M}.${m}.${p}${pr}`\n    } else if (xm) {\n      ret = `>=${M}.0.0${pr} <${+M + 1}.0.0-0`\n    } else if (xp) {\n      ret = `>=${M}.${m}.0${pr\n      } <${M}.${+m + 1}.0-0`\n    }\n\n    debug('xRange return', ret)\n\n    return ret\n  })\n}\n\n// Because * is AND-ed with everything else in the comparator,\n// and '' means \"any version\", just remove the *s entirely.\nconst replaceStars = (comp, options) => {\n  debug('replaceStars', comp, options)\n  // Looseness is ignored here.  star is always as loose as it gets!\n  return comp\n    .trim()\n    .replace(re[t.STAR], '')\n}\n\nconst replaceGTE0 = (comp, options) => {\n  debug('replaceGTE0', comp, options)\n  return comp\n    .trim()\n    .replace(re[options.includePrerelease ? t.GTE0PRE : t.GTE0], '')\n}\n\n// This function is passed to string.replace(re[t.HYPHENRANGE])\n// M, m, patch, prerelease, build\n// 1.2 - 3.4.5 => >=1.2.0 <=3.4.5\n// 1.2.3 - 3.4 => >=1.2.0 <3.5.0-0 Any 3.4.x will do\n// 1.2 - 3.4 => >=1.2.0 <3.5.0-0\n// TODO build?\nconst hyphenReplace = incPr => ($0,\n  from, fM, fm, fp, fpr, fb,\n  to, tM, tm, tp, tpr) => {\n  if (isX(fM)) {\n    from = ''\n  } else if (isX(fm)) {\n    from = `>=${fM}.0.0${incPr ? '-0' : ''}`\n  } else if (isX(fp)) {\n    from = `>=${fM}.${fm}.0${incPr ? '-0' : ''}`\n  } else if (fpr) {\n    from = `>=${from}`\n  } else {\n    from = `>=${from}${incPr ? '-0' : ''}`\n  }\n\n  if (isX(tM)) {\n    to = ''\n  } else if (isX(tm)) {\n    to = `<${+tM + 1}.0.0-0`\n  } else if (isX(tp)) {\n    to = `<${tM}.${+tm + 1}.0-0`\n  } else if (tpr) {\n    to = `<=${tM}.${tm}.${tp}-${tpr}`\n  } else if (incPr) {\n    to = `<${tM}.${tm}.${+tp + 1}-0`\n  } else {\n    to = `<=${to}`\n  }\n\n  return `${from} ${to}`.trim()\n}\n\nconst testSet = (set, version, options) => {\n  for (let i = 0; i < set.length; i++) {\n    if (!set[i].test(version)) {\n      return false\n    }\n  }\n\n  if (version.prerelease.length && !options.includePrerelease) {\n    // Find the set of versions that are allowed to have prereleases\n    // For example, ^1.2.3-pr.1 desugars to >=1.2.3-pr.1 <2.0.0\n    // That should allow `1.2.3-pr.2` to pass.\n    // However, `1.2.4-alpha.notready` should NOT be allowed,\n    // even though it's within the range set by the comparators.\n    for (let i = 0; i < set.length; i++) {\n      debug(set[i].semver)\n      if (set[i].semver === Comparator.ANY) {\n        continue\n      }\n\n      if (set[i].semver.prerelease.length > 0) {\n        const allowed = set[i].semver\n        if (allowed.major === version.major &&\n            allowed.minor === version.minor &&\n            allowed.patch === version.patch) {\n          return true\n        }\n      }\n    }\n\n    // Version has a -pre, but it's not one of the ones we like.\n    return false\n  }\n\n  return true\n}\n","'use strict'\n\nclass LRUCache {\n  constructor () {\n    this.max = 1000\n    this.map = new Map()\n  }\n\n  get (key) {\n    const value = this.map.get(key)\n    if (value === undefined) {\n      return undefined\n    } else {\n      // Remove the key from the map and add it to the end\n      this.map.delete(key)\n      this.map.set(key, value)\n      return value\n    }\n  }\n\n  delete (key) {\n    return this.map.delete(key)\n  }\n\n  set (key, value) {\n    const deleted = this.delete(key)\n\n    if (!deleted && value !== undefined) {\n      // If cache is full, delete the least recently used item\n      if (this.map.size >= this.max) {\n        const firstKey = this.map.keys().next().value\n        this.delete(firstKey)\n      }\n\n      this.map.set(key, value)\n    }\n\n    return this\n  }\n}\n\nmodule.exports = LRUCache\n","'use strict'\n\nconst ANY = Symbol('SemVer ANY')\n// hoisted class for cyclic dependency\nclass Comparator {\n  static get ANY () {\n    return ANY\n  }\n\n  constructor (comp, options) {\n    options = parseOptions(options)\n\n    if (comp instanceof Comparator) {\n      if (comp.loose === !!options.loose) {\n        return comp\n      } else {\n        comp = comp.value\n      }\n    }\n\n    comp = comp.trim().split(/\\s+/).join(' ')\n    debug('comparator', comp, options)\n    this.options = options\n    this.loose = !!options.loose\n    this.parse(comp)\n\n    if (this.semver === ANY) {\n      this.value = ''\n    } else {\n      this.value = this.operator + this.semver.version\n    }\n\n    debug('comp', this)\n  }\n\n  parse (comp) {\n    const r = this.options.loose ? re[t.COMPARATORLOOSE] : re[t.COMPARATOR]\n    const m = comp.match(r)\n\n    if (!m) {\n      throw new TypeError(`Invalid comparator: ${comp}`)\n    }\n\n    this.operator = m[1] !== undefined ? m[1] : ''\n    if (this.operator === '=') {\n      this.operator = ''\n    }\n\n    // if it literally is just '>' or '' then allow anything.\n    if (!m[2]) {\n      this.semver = ANY\n    } else {\n      this.semver = new SemVer(m[2], this.options.loose)\n    }\n  }\n\n  toString () {\n    return this.value\n  }\n\n  test (version) {\n    debug('Comparator.test', version, this.options.loose)\n\n    if (this.semver === ANY || version === ANY) {\n      return true\n    }\n\n    if (typeof version === 'string') {\n      try {\n        version = new SemVer(version, this.options)\n      } catch (er) {\n        return false\n      }\n    }\n\n    return cmp(version, this.operator, this.semver, this.options)\n  }\n\n  intersects (comp, options) {\n    if (!(comp instanceof Comparator)) {\n      throw new TypeError('a Comparator is required')\n    }\n\n    if (this.operator === '') {\n      if (this.value === '') {\n        return true\n      }\n      return new Range(comp.value, options).test(this.value)\n    } else if (comp.operator === '') {\n      if (comp.value === '') {\n        return true\n      }\n      return new Range(this.value, options).test(comp.semver)\n    }\n\n    options = parseOptions(options)\n\n    // Special cases where nothing can possibly be lower\n    if (options.includePrerelease &&\n      (this.value === '<0.0.0-0' || comp.value === '<0.0.0-0')) {\n      return false\n    }\n    if (!options.includePrerelease &&\n      (this.value.startsWith('<0.0.0') || comp.value.startsWith('<0.0.0'))) {\n      return false\n    }\n\n    // Same direction increasing (> or >=)\n    if (this.operator.startsWith('>') && comp.operator.startsWith('>')) {\n      return true\n    }\n    // Same direction decreasing (< or <=)\n    if (this.operator.startsWith('<') && comp.operator.startsWith('<')) {\n      return true\n    }\n    // same SemVer and both sides are inclusive (<= or >=)\n    if (\n      (this.semver.version === comp.semver.version) &&\n      this.operator.includes('=') && comp.operator.includes('=')) {\n      return true\n    }\n    // opposite directions less than\n    if (cmp(this.semver, '<', comp.semver, options) &&\n      this.operator.startsWith('>') && comp.operator.startsWith('<')) {\n      return true\n    }\n    // opposite directions greater than\n    if (cmp(this.semver, '>', comp.semver, options) &&\n      this.operator.startsWith('<') && comp.operator.startsWith('>')) {\n      return true\n    }\n    return false\n  }\n}\n\nmodule.exports = Comparator\n\nconst parseOptions = require('../internal/parse-options')\nconst { safeRe: re, t } = require('../internal/re')\nconst cmp = require('../functions/cmp')\nconst debug = require('../internal/debug')\nconst SemVer = require('./semver')\nconst Range = require('./range')\n","'use strict'\n\nconst Range = require('../classes/range')\nconst satisfies = (version, range, options) => {\n  try {\n    range = new Range(range, options)\n  } catch (er) {\n    return false\n  }\n  return range.test(version)\n}\nmodule.exports = satisfies\n","'use strict'\n\nconst Range = require('../classes/range')\nconst validRange = (range, options) => {\n  try {\n    // Return '*' instead of '' so that truthiness works.\n    // This will throw if it's invalid anyway\n    return new Range(range, options).range || '*'\n  } catch (er) {\n    return null\n  }\n}\nmodule.exports = validRange\n","'use strict'\n\nconst SemVer = require('../classes/semver')\nconst Comparator = require('../classes/comparator')\nconst { ANY } = Comparator\nconst Range = require('../classes/range')\nconst satisfies = require('../functions/satisfies')\nconst gt = require('../functions/gt')\nconst lt = require('../functions/lt')\nconst lte = require('../functions/lte')\nconst gte = require('../functions/gte')\n\nconst outside = (version, range, hilo, options) => {\n  version = new SemVer(version, options)\n  range = new Range(range, options)\n\n  let gtfn, ltefn, ltfn, comp, ecomp\n  switch (hilo) {\n    case '>':\n      gtfn = gt\n      ltefn = lte\n      ltfn = lt\n      comp = '>'\n      ecomp = '>='\n      break\n    case '<':\n      gtfn = lt\n      ltefn = gte\n      ltfn = gt\n      comp = '<'\n      ecomp = '<='\n      break\n    default:\n      throw new TypeError('Must provide a hilo val of \"<\" or \">\"')\n  }\n\n  // If it satisfies the range it is not outside\n  if (satisfies(version, range, options)) {\n    return false\n  }\n\n  // From now on, variable terms are as if we're in \"gtr\" mode.\n  // but note that everything is flipped for the \"ltr\" function.\n\n  for (let i = 0; i < range.set.length; ++i) {\n    const comparators = range.set[i]\n\n    let high = null\n    let low = null\n\n    comparators.forEach((comparator) => {\n      if (comparator.semver === ANY) {\n        comparator = new Comparator('>=0.0.0')\n      }\n      high = high || comparator\n      low = low || comparator\n      if (gtfn(comparator.semver, high.semver, options)) {\n        high = comparator\n      } else if (ltfn(comparator.semver, low.semver, options)) {\n        low = comparator\n      }\n    })\n\n    // If the edge version comparator has a operator then our version\n    // isn't outside it\n    if (high.operator === comp || high.operator === ecomp) {\n      return false\n    }\n\n    // If the lowest version comparator has an operator and our version\n    // is less than it then it isn't higher than the range\n    if ((!low.operator || low.operator === comp) &&\n        ltefn(version, low.semver)) {\n      return false\n    } else if (low.operator === ecomp && ltfn(version, low.semver)) {\n      return false\n    }\n  }\n  return true\n}\n\nmodule.exports = outside\n","'use strict'\n\n// just pre-load all the stuff that index.js lazily exports\nconst internalRe = require('./internal/re')\nconst constants = require('./internal/constants')\nconst SemVer = require('./classes/semver')\nconst identifiers = require('./internal/identifiers')\nconst parse = require('./functions/parse')\nconst valid = require('./functions/valid')\nconst clean = require('./functions/clean')\nconst inc = require('./functions/inc')\nconst diff = require('./functions/diff')\nconst major = require('./functions/major')\nconst minor = require('./functions/minor')\nconst patch = require('./functions/patch')\nconst prerelease = require('./functions/prerelease')\nconst compare = require('./functions/compare')\nconst rcompare = require('./functions/rcompare')\nconst compareLoose = require('./functions/compare-loose')\nconst compareBuild = require('./functions/compare-build')\nconst sort = require('./functions/sort')\nconst rsort = require('./functions/rsort')\nconst gt = require('./functions/gt')\nconst lt = require('./functions/lt')\nconst eq = require('./functions/eq')\nconst neq = require('./functions/neq')\nconst gte = require('./functions/gte')\nconst lte = require('./functions/lte')\nconst cmp = require('./functions/cmp')\nconst coerce = require('./functions/coerce')\nconst Comparator = require('./classes/comparator')\nconst Range = require('./classes/range')\nconst satisfies = require('./functions/satisfies')\nconst toComparators = require('./ranges/to-comparators')\nconst maxSatisfying = require('./ranges/max-satisfying')\nconst minSatisfying = require('./ranges/min-satisfying')\nconst minVersion = require('./ranges/min-version')\nconst validRange = require('./ranges/valid')\nconst outside = require('./ranges/outside')\nconst gtr = require('./ranges/gtr')\nconst ltr = require('./ranges/ltr')\nconst intersects = require('./ranges/intersects')\nconst simplifyRange = require('./ranges/simplify')\nconst subset = require('./ranges/subset')\nmodule.exports = {\n  parse,\n  valid,\n  clean,\n  inc,\n  diff,\n  major,\n  minor,\n  patch,\n  prerelease,\n  compare,\n  rcompare,\n  compareLoose,\n  compareBuild,\n  sort,\n  rsort,\n  gt,\n  lt,\n  eq,\n  neq,\n  gte,\n  lte,\n  cmp,\n  coerce,\n  Comparator,\n  Range,\n  satisfies,\n  toComparators,\n  maxSatisfying,\n  minSatisfying,\n  minVersion,\n  validRange,\n  outside,\n  gtr,\n  ltr,\n  intersects,\n  simplifyRange,\n  subset,\n  SemVer,\n  re: internalRe.re,\n  src: internalRe.src,\n  tokens: internalRe.t,\n  SEMVER_SPEC_VERSION: constants.SEMVER_SPEC_VERSION,\n  RELEASE_TYPES: constants.RELEASE_TYPES,\n  compareIdentifiers: identifiers.compareIdentifiers,\n  rcompareIdentifiers: identifiers.rcompareIdentifiers,\n}\n","'use strict'\n\nconst parse = require('./parse')\nconst valid = (version, options) => {\n  const v = parse(version, options)\n  return v ? v.version : null\n}\nmodule.exports = valid\n","'use strict'\n\nconst parse = require('./parse')\nconst clean = (version, options) => {\n  const s = parse(version.trim().replace(/^[=v]+/, ''), options)\n  return s ? s.version : null\n}\nmodule.exports = clean\n","'use strict'\n\nconst SemVer = require('../classes/semver')\n\nconst inc = (version, release, options, identifier, identifierBase) => {\n  if (typeof (options) === 'string') {\n    identifierBase = identifier\n    identifier = options\n    options = undefined\n  }\n\n  try {\n    return new SemVer(\n      version instanceof SemVer ? version.version : version,\n      options\n    ).inc(release, identifier, identifierBase).version\n  } catch (er) {\n    return null\n  }\n}\nmodule.exports = inc\n","'use strict'\n\nconst parse = require('./parse.js')\n\nconst diff = (version1, version2) => {\n  const v1 = parse(version1, null, true)\n  const v2 = parse(version2, null, true)\n  const comparison = v1.compare(v2)\n\n  if (comparison === 0) {\n    return null\n  }\n\n  const v1Higher = comparison > 0\n  const highVersion = v1Higher ? v1 : v2\n  const lowVersion = v1Higher ? v2 : v1\n  const highHasPre = !!highVersion.prerelease.length\n  const lowHasPre = !!lowVersion.prerelease.length\n\n  if (lowHasPre && !highHasPre) {\n    // Going from prerelease -> no prerelease requires some special casing\n\n    // If the low version has only a major, then it will always be a major\n    // Some examples:\n    // 1.0.0-1 -> 1.0.0\n    // 1.0.0-1 -> 1.1.1\n    // 1.0.0-1 -> 2.0.0\n    if (!lowVersion.patch && !lowVersion.minor) {\n      return 'major'\n    }\n\n    // If the main part has no difference\n    if (lowVersion.compareMain(highVersion) === 0) {\n      if (lowVersion.minor && !lowVersion.patch) {\n        return 'minor'\n      }\n      return 'patch'\n    }\n  }\n\n  // add the `pre` prefix if we are going to a prerelease version\n  const prefix = highHasPre ? 'pre' : ''\n\n  if (v1.major !== v2.major) {\n    return prefix + 'major'\n  }\n\n  if (v1.minor !== v2.minor) {\n    return prefix + 'minor'\n  }\n\n  if (v1.patch !== v2.patch) {\n    return prefix + 'patch'\n  }\n\n  // high and low are preleases\n  return 'prerelease'\n}\n\nmodule.exports = diff\n","'use strict'\n\nconst SemVer = require('../classes/semver')\nconst major = (a, loose) => new SemVer(a, loose).major\nmodule.exports = major\n","'use strict'\n\nconst SemVer = require('../classes/semver')\nconst minor = (a, loose) => new SemVer(a, loose).minor\nmodule.exports = minor\n","'use strict'\n\nconst SemVer = require('../classes/semver')\nconst patch = (a, loose) => new SemVer(a, loose).patch\nmodule.exports = patch\n","'use strict'\n\nconst parse = require('./parse')\nconst prerelease = (version, options) => {\n  const parsed = parse(version, options)\n  return (parsed && parsed.prerelease.length) ? parsed.prerelease : null\n}\nmodule.exports = prerelease\n","'use strict'\n\nconst compare = require('./compare')\nconst rcompare = (a, b, loose) => compare(b, a, loose)\nmodule.exports = rcompare\n","'use strict'\n\nconst compare = require('./compare')\nconst compareLoose = (a, b) => compare(a, b, true)\nmodule.exports = compareLoose\n","'use strict'\n\nconst compareBuild = require('./compare-build')\nconst sort = (list, loose) => list.sort((a, b) => compareBuild(a, b, loose))\nmodule.exports = sort\n","'use strict'\n\nconst compareBuild = require('./compare-build')\nconst rsort = (list, loose) => list.sort((a, b) => compareBuild(b, a, loose))\nmodule.exports = rsort\n","'use strict'\n\nconst SemVer = require('../classes/semver')\nconst parse = require('./parse')\nconst { safeRe: re, t } = require('../internal/re')\n\nconst coerce = (version, options) => {\n  if (version instanceof SemVer) {\n    return version\n  }\n\n  if (typeof version === 'number') {\n    version = String(version)\n  }\n\n  if (typeof version !== 'string') {\n    return null\n  }\n\n  options = options || {}\n\n  let match = null\n  if (!options.rtl) {\n    match = version.match(options.includePrerelease ? re[t.COERCEFULL] : re[t.COERCE])\n  } else {\n    // Find the right-most coercible string that does not share\n    // a terminus with a more left-ward coercible string.\n    // Eg, '1.2.3.4' wants to coerce '2.3.4', not '3.4' or '4'\n    // With includePrerelease option set, '1.2.3.4-rc' wants to coerce '2.3.4-rc', not '2.3.4'\n    //\n    // Walk through the string checking with a /g regexp\n    // Manually set the index so as to pick up overlapping matches.\n    // Stop when we get a match that ends at the string end, since no\n    // coercible string can be more right-ward without the same terminus.\n    const coerceRtlRegex = options.includePrerelease ? re[t.COERCERTLFULL] : re[t.COERCERTL]\n    let next\n    while ((next = coerceRtlRegex.exec(version)) &&\n        (!match || match.index + match[0].length !== version.length)\n    ) {\n      if (!match ||\n            next.index + next[0].length !== match.index + match[0].length) {\n        match = next\n      }\n      coerceRtlRegex.lastIndex = next.index + next[1].length + next[2].length\n    }\n    // leave it in a clean state\n    coerceRtlRegex.lastIndex = -1\n  }\n\n  if (match === null) {\n    return null\n  }\n\n  const major = match[2]\n  const minor = match[3] || '0'\n  const patch = match[4] || '0'\n  const prerelease = options.includePrerelease && match[5] ? `-${match[5]}` : ''\n  const build = options.includePrerelease && match[6] ? `+${match[6]}` : ''\n\n  return parse(`${major}.${minor}.${patch}${prerelease}${build}`, options)\n}\nmodule.exports = coerce\n","'use strict'\n\nconst Range = require('../classes/range')\n\n// Mostly just for testing and legacy API reasons\nconst toComparators = (range, options) =>\n  new Range(range, options).set\n    .map(comp => comp.map(c => c.value).join(' ').trim().split(' '))\n\nmodule.exports = toComparators\n","'use strict'\n\nconst SemVer = require('../classes/semver')\nconst Range = require('../classes/range')\n\nconst maxSatisfying = (versions, range, options) => {\n  let max = null\n  let maxSV = null\n  let rangeObj = null\n  try {\n    rangeObj = new Range(range, options)\n  } catch (er) {\n    return null\n  }\n  versions.forEach((v) => {\n    if (rangeObj.test(v)) {\n      // satisfies(v, range, options)\n      if (!max || maxSV.compare(v) === -1) {\n        // compare(max, v, true)\n        max = v\n        maxSV = new SemVer(max, options)\n      }\n    }\n  })\n  return max\n}\nmodule.exports = maxSatisfying\n","'use strict'\n\nconst SemVer = require('../classes/semver')\nconst Range = require('../classes/range')\nconst minSatisfying = (versions, range, options) => {\n  let min = null\n  let minSV = null\n  let rangeObj = null\n  try {\n    rangeObj = new Range(range, options)\n  } catch (er) {\n    return null\n  }\n  versions.forEach((v) => {\n    if (rangeObj.test(v)) {\n      // satisfies(v, range, options)\n      if (!min || minSV.compare(v) === 1) {\n        // compare(min, v, true)\n        min = v\n        minSV = new SemVer(min, options)\n      }\n    }\n  })\n  return min\n}\nmodule.exports = minSatisfying\n","'use strict'\n\nconst SemVer = require('../classes/semver')\nconst Range = require('../classes/range')\nconst gt = require('../functions/gt')\n\nconst minVersion = (range, loose) => {\n  range = new Range(range, loose)\n\n  let minver = new SemVer('0.0.0')\n  if (range.test(minver)) {\n    return minver\n  }\n\n  minver = new SemVer('0.0.0-0')\n  if (range.test(minver)) {\n    return minver\n  }\n\n  minver = null\n  for (let i = 0; i < range.set.length; ++i) {\n    const comparators = range.set[i]\n\n    let setMin = null\n    comparators.forEach((comparator) => {\n      // Clone to avoid manipulating the comparator's semver object.\n      const compver = new SemVer(comparator.semver.version)\n      switch (comparator.operator) {\n        case '>':\n          if (compver.prerelease.length === 0) {\n            compver.patch++\n          } else {\n            compver.prerelease.push(0)\n          }\n          compver.raw = compver.format()\n          /* fallthrough */\n        case '':\n        case '>=':\n          if (!setMin || gt(compver, setMin)) {\n            setMin = compver\n          }\n          break\n        case '<':\n        case '<=':\n          /* Ignore maximum versions */\n          break\n        /* istanbul ignore next */\n        default:\n          throw new Error(`Unexpected operation: ${comparator.operator}`)\n      }\n    })\n    if (setMin && (!minver || gt(minver, setMin))) {\n      minver = setMin\n    }\n  }\n\n  if (minver && range.test(minver)) {\n    return minver\n  }\n\n  return null\n}\nmodule.exports = minVersion\n","'use strict'\n\n// Determine if version is greater than all the versions possible in the range.\nconst outside = require('./outside')\nconst gtr = (version, range, options) => outside(version, range, '>', options)\nmodule.exports = gtr\n","'use strict'\n\nconst outside = require('./outside')\n// Determine if version is less than all the versions possible in the range\nconst ltr = (version, range, options) => outside(version, range, '<', options)\nmodule.exports = ltr\n","'use strict'\n\nconst Range = require('../classes/range')\nconst intersects = (r1, r2, options) => {\n  r1 = new Range(r1, options)\n  r2 = new Range(r2, options)\n  return r1.intersects(r2, options)\n}\nmodule.exports = intersects\n","'use strict'\n\n// given a set of versions and a range, create a \"simplified\" range\n// that includes the same versions that the original range does\n// If the original range is shorter than the simplified one, return that.\nconst satisfies = require('../functions/satisfies.js')\nconst compare = require('../functions/compare.js')\nmodule.exports = (versions, range, options) => {\n  const set = []\n  let first = null\n  let prev = null\n  const v = versions.sort((a, b) => compare(a, b, options))\n  for (const version of v) {\n    const included = satisfies(version, range, options)\n    if (included) {\n      prev = version\n      if (!first) {\n        first = version\n      }\n    } else {\n      if (prev) {\n        set.push([first, prev])\n      }\n      prev = null\n      first = null\n    }\n  }\n  if (first) {\n    set.push([first, null])\n  }\n\n  const ranges = []\n  for (const [min, max] of set) {\n    if (min === max) {\n      ranges.push(min)\n    } else if (!max && min === v[0]) {\n      ranges.push('*')\n    } else if (!max) {\n      ranges.push(`>=${min}`)\n    } else if (min === v[0]) {\n      ranges.push(`<=${max}`)\n    } else {\n      ranges.push(`${min} - ${max}`)\n    }\n  }\n  const simplified = ranges.join(' || ')\n  const original = typeof range.raw === 'string' ? range.raw : String(range)\n  return simplified.length < original.length ? simplified : range\n}\n","'use strict'\n\nconst Range = require('../classes/range.js')\nconst Comparator = require('../classes/comparator.js')\nconst { ANY } = Comparator\nconst satisfies = require('../functions/satisfies.js')\nconst compare = require('../functions/compare.js')\n\n// Complex range `r1 || r2 || ...` is a subset of `R1 || R2 || ...` iff:\n// - Every simple range `r1, r2, ...` is a null set, OR\n// - Every simple range `r1, r2, ...` which is not a null set is a subset of\n//   some `R1, R2, ...`\n//\n// Simple range `c1 c2 ...` is a subset of simple range `C1 C2 ...` iff:\n// - If c is only the ANY comparator\n//   - If C is only the ANY comparator, return true\n//   - Else if in prerelease mode, return false\n//   - else replace c with `[>=0.0.0]`\n// - If C is only the ANY comparator\n//   - if in prerelease mode, return true\n//   - else replace C with `[>=0.0.0]`\n// - Let EQ be the set of = comparators in c\n// - If EQ is more than one, return true (null set)\n// - Let GT be the highest > or >= comparator in c\n// - Let LT be the lowest < or <= comparator in c\n// - If GT and LT, and GT.semver > LT.semver, return true (null set)\n// - If any C is a = range, and GT or LT are set, return false\n// - If EQ\n//   - If GT, and EQ does not satisfy GT, return true (null set)\n//   - If LT, and EQ does not satisfy LT, return true (null set)\n//   - If EQ satisfies every C, return true\n//   - Else return false\n// - If GT\n//   - If GT.semver is lower than any > or >= comp in C, return false\n//   - If GT is >=, and GT.semver does not satisfy every C, return false\n//   - If GT.semver has a prerelease, and not in prerelease mode\n//     - If no C has a prerelease and the GT.semver tuple, return false\n// - If LT\n//   - If LT.semver is greater than any < or <= comp in C, return false\n//   - If LT is <=, and LT.semver does not satisfy every C, return false\n//   - If GT.semver has a prerelease, and not in prerelease mode\n//     - If no C has a prerelease and the LT.semver tuple, return false\n// - Else return true\n\nconst subset = (sub, dom, options = {}) => {\n  if (sub === dom) {\n    return true\n  }\n\n  sub = new Range(sub, options)\n  dom = new Range(dom, options)\n  let sawNonNull = false\n\n  OUTER: for (const simpleSub of sub.set) {\n    for (const simpleDom of dom.set) {\n      const isSub = simpleSubset(simpleSub, simpleDom, options)\n      sawNonNull = sawNonNull || isSub !== null\n      if (isSub) {\n        continue OUTER\n      }\n    }\n    // the null set is a subset of everything, but null simple ranges in\n    // a complex range should be ignored.  so if we saw a non-null range,\n    // then we know this isn't a subset, but if EVERY simple range was null,\n    // then it is a subset.\n    if (sawNonNull) {\n      return false\n    }\n  }\n  return true\n}\n\nconst minimumVersionWithPreRelease = [new Comparator('>=0.0.0-0')]\nconst minimumVersion = [new Comparator('>=0.0.0')]\n\nconst simpleSubset = (sub, dom, options) => {\n  if (sub === dom) {\n    return true\n  }\n\n  if (sub.length === 1 && sub[0].semver === ANY) {\n    if (dom.length === 1 && dom[0].semver === ANY) {\n      return true\n    } else if (options.includePrerelease) {\n      sub = minimumVersionWithPreRelease\n    } else {\n      sub = minimumVersion\n    }\n  }\n\n  if (dom.length === 1 && dom[0].semver === ANY) {\n    if (options.includePrerelease) {\n      return true\n    } else {\n      dom = minimumVersion\n    }\n  }\n\n  const eqSet = new Set()\n  let gt, lt\n  for (const c of sub) {\n    if (c.operator === '>' || c.operator === '>=') {\n      gt = higherGT(gt, c, options)\n    } else if (c.operator === '<' || c.operator === '<=') {\n      lt = lowerLT(lt, c, options)\n    } else {\n      eqSet.add(c.semver)\n    }\n  }\n\n  if (eqSet.size > 1) {\n    return null\n  }\n\n  let gtltComp\n  if (gt && lt) {\n    gtltComp = compare(gt.semver, lt.semver, options)\n    if (gtltComp > 0) {\n      return null\n    } else if (gtltComp === 0 && (gt.operator !== '>=' || lt.operator !== '<=')) {\n      return null\n    }\n  }\n\n  // will iterate one or zero times\n  for (const eq of eqSet) {\n    if (gt && !satisfies(eq, String(gt), options)) {\n      return null\n    }\n\n    if (lt && !satisfies(eq, String(lt), options)) {\n      return null\n    }\n\n    for (const c of dom) {\n      if (!satisfies(eq, String(c), options)) {\n        return false\n      }\n    }\n\n    return true\n  }\n\n  let higher, lower\n  let hasDomLT, hasDomGT\n  // if the subset has a prerelease, we need a comparator in the superset\n  // with the same tuple and a prerelease, or it's not a subset\n  let needDomLTPre = lt &&\n    !options.includePrerelease &&\n    lt.semver.prerelease.length ? lt.semver : false\n  let needDomGTPre = gt &&\n    !options.includePrerelease &&\n    gt.semver.prerelease.length ? gt.semver : false\n  // exception: <1.2.3-0 is the same as <1.2.3\n  if (needDomLTPre && needDomLTPre.prerelease.length === 1 &&\n      lt.operator === '<' && needDomLTPre.prerelease[0] === 0) {\n    needDomLTPre = false\n  }\n\n  for (const c of dom) {\n    hasDomGT = hasDomGT || c.operator === '>' || c.operator === '>='\n    hasDomLT = hasDomLT || c.operator === '<' || c.operator === '<='\n    if (gt) {\n      if (needDomGTPre) {\n        if (c.semver.prerelease && c.semver.prerelease.length &&\n            c.semver.major === needDomGTPre.major &&\n            c.semver.minor === needDomGTPre.minor &&\n            c.semver.patch === needDomGTPre.patch) {\n          needDomGTPre = false\n        }\n      }\n      if (c.operator === '>' || c.operator === '>=') {\n        higher = higherGT(gt, c, options)\n        if (higher === c && higher !== gt) {\n          return false\n        }\n      } else if (gt.operator === '>=' && !satisfies(gt.semver, String(c), options)) {\n        return false\n      }\n    }\n    if (lt) {\n      if (needDomLTPre) {\n        if (c.semver.prerelease && c.semver.prerelease.length &&\n            c.semver.major === needDomLTPre.major &&\n            c.semver.minor === needDomLTPre.minor &&\n            c.semver.patch === needDomLTPre.patch) {\n          needDomLTPre = false\n        }\n      }\n      if (c.operator === '<' || c.operator === '<=') {\n        lower = lowerLT(lt, c, options)\n        if (lower === c && lower !== lt) {\n          return false\n        }\n      } else if (lt.operator === '<=' && !satisfies(lt.semver, String(c), options)) {\n        return false\n      }\n    }\n    if (!c.operator && (lt || gt) && gtltComp !== 0) {\n      return false\n    }\n  }\n\n  // if there was a < or >, and nothing in the dom, then must be false\n  // UNLESS it was limited by another range in the other direction.\n  // Eg, >1.0.0 <1.0.1 is still a subset of <2.0.0\n  if (gt && hasDomLT && !lt && gtltComp !== 0) {\n    return false\n  }\n\n  if (lt && hasDomGT && !gt && gtltComp !== 0) {\n    return false\n  }\n\n  // we needed a prerelease range in a specific tuple, but didn't get one\n  // then this isn't a subset.  eg >=1.2.3-pre is not a subset of >=1.0.0,\n  // because it includes prereleases in the 1.2.3 tuple\n  if (needDomGTPre || needDomLTPre) {\n    return false\n  }\n\n  return true\n}\n\n// >=1.2.3 is lower than >1.2.3\nconst higherGT = (a, b, options) => {\n  if (!a) {\n    return b\n  }\n  const comp = compare(a.semver, b.semver, options)\n  return comp > 0 ? a\n    : comp < 0 ? b\n    : b.operator === '>' && a.operator === '>=' ? b\n    : a\n}\n\n// <=1.2.3 is higher than <1.2.3\nconst lowerLT = (a, b, options) => {\n  if (!a) {\n    return b\n  }\n  const comp = compare(a.semver, b.semver, options)\n  return comp < 0 ? a\n    : comp > 0 ? b\n    : b.operator === '<' && a.operator === '<=' ? b\n    : a\n}\n\nmodule.exports = subset\n","const ASYMMETRIC_KEY_DETAILS_SUPPORTED = require('./asymmetricKeyDetailsSupported');\nconst RSA_PSS_KEY_DETAILS_SUPPORTED = require('./rsaPssKeyDetailsSupported');\n\nconst allowedAlgorithmsForKeys = {\n  'ec': ['ES256', 'ES384', 'ES512'],\n  'rsa': ['RS256', 'PS256', 'RS384', 'PS384', 'RS512', 'PS512'],\n  'rsa-pss': ['PS256', 'PS384', 'PS512']\n};\n\nconst allowedCurves = {\n  ES256: 'prime256v1',\n  ES384: 'secp384r1',\n  ES512: 'secp521r1',\n};\n\nmodule.exports = function(algorithm, key) {\n  if (!algorithm || !key) return;\n\n  const keyType = key.asymmetricKeyType;\n  if (!keyType) return;\n\n  const allowedAlgorithms = allowedAlgorithmsForKeys[keyType];\n\n  if (!allowedAlgorithms) {\n    throw new Error(`Unknown key type \"${keyType}\".`);\n  }\n\n  if (!allowedAlgorithms.includes(algorithm)) {\n    throw new Error(`\"alg\" parameter for \"${keyType}\" key type must be one of: ${allowedAlgorithms.join(', ')}.`)\n  }\n\n  /*\n   * Ignore the next block from test coverage because it gets executed\n   * conditionally depending on the Node version. Not ignoring it would\n   * prevent us from reaching the target % of coverage for versions of\n   * Node under 15.7.0.\n   */\n  /* istanbul ignore next */\n  if (ASYMMETRIC_KEY_DETAILS_SUPPORTED) {\n    switch (keyType) {\n    case 'ec':\n      const keyCurve = key.asymmetricKeyDetails.namedCurve;\n      const allowedCurve = allowedCurves[algorithm];\n\n      if (keyCurve !== allowedCurve) {\n        throw new Error(`\"alg\" parameter \"${algorithm}\" requires curve \"${allowedCurve}\".`);\n      }\n      break;\n\n    case 'rsa-pss':\n      if (RSA_PSS_KEY_DETAILS_SUPPORTED) {\n        const length = parseInt(algorithm.slice(-3), 10);\n        const { hashAlgorithm, mgf1HashAlgorithm, saltLength } = key.asymmetricKeyDetails;\n\n        if (hashAlgorithm !== `sha${length}` || mgf1HashAlgorithm !== hashAlgorithm) {\n          throw new Error(`Invalid key for this operation, its RSA-PSS parameters do not meet the requirements of \"alg\" ${algorithm}.`);\n        }\n\n        if (saltLength !== undefined && saltLength > length >> 3) {\n          throw new Error(`Invalid key for this operation, its RSA-PSS parameter saltLength does not meet the requirements of \"alg\" ${algorithm}.`)\n        }\n      }\n      break;\n    }\n  }\n}\n","const semver = require('semver');\n\nmodule.exports = semver.satisfies(process.version, '>=15.7.0');\n","const semver = require('semver');\n\nmodule.exports = semver.satisfies(process.version, '>=16.9.0');\n","var semver = require('semver');\n\nmodule.exports = semver.satisfies(process.version, '^6.12.0 || >=8.0.0');\n","const JsonWebTokenError = require('./lib/JsonWebTokenError');\nconst NotBeforeError = require('./lib/NotBeforeError');\nconst TokenExpiredError = require('./lib/TokenExpiredError');\nconst decode = require('./decode');\nconst timespan = require('./lib/timespan');\nconst validateAsymmetricKey = require('./lib/validateAsymmetricKey');\nconst PS_SUPPORTED = require('./lib/psSupported');\nconst jws = require('jws');\nconst {KeyObject, createSecretKey, createPublicKey} = require(\"crypto\");\n\nconst PUB_KEY_ALGS = ['RS256', 'RS384', 'RS512'];\nconst EC_KEY_ALGS = ['ES256', 'ES384', 'ES512'];\nconst RSA_KEY_ALGS = ['RS256', 'RS384', 'RS512'];\nconst HS_ALGS = ['HS256', 'HS384', 'HS512'];\n\nif (PS_SUPPORTED) {\n  PUB_KEY_ALGS.splice(PUB_KEY_ALGS.length, 0, 'PS256', 'PS384', 'PS512');\n  RSA_KEY_ALGS.splice(RSA_KEY_ALGS.length, 0, 'PS256', 'PS384', 'PS512');\n}\n\nmodule.exports = function (jwtString, secretOrPublicKey, options, callback) {\n  if ((typeof options === 'function') && !callback) {\n    callback = options;\n    options = {};\n  }\n\n  if (!options) {\n    options = {};\n  }\n\n  //clone this object since we are going to mutate it.\n  options = Object.assign({}, options);\n\n  let done;\n\n  if (callback) {\n    done = callback;\n  } else {\n    done = function(err, data) {\n      if (err) throw err;\n      return data;\n    };\n  }\n\n  if (options.clockTimestamp && typeof options.clockTimestamp !== 'number') {\n    return done(new JsonWebTokenError('clockTimestamp must be a number'));\n  }\n\n  if (options.nonce !== undefined && (typeof options.nonce !== 'string' || options.nonce.trim() === '')) {\n    return done(new JsonWebTokenError('nonce must be a non-empty string'));\n  }\n\n  if (options.allowInvalidAsymmetricKeyTypes !== undefined && typeof options.allowInvalidAsymmetricKeyTypes !== 'boolean') {\n    return done(new JsonWebTokenError('allowInvalidAsymmetricKeyTypes must be a boolean'));\n  }\n\n  const clockTimestamp = options.clockTimestamp || Math.floor(Date.now() / 1000);\n\n  if (!jwtString){\n    return done(new JsonWebTokenError('jwt must be provided'));\n  }\n\n  if (typeof jwtString !== 'string') {\n    return done(new JsonWebTokenError('jwt must be a string'));\n  }\n\n  const parts = jwtString.split('.');\n\n  if (parts.length !== 3){\n    return done(new JsonWebTokenError('jwt malformed'));\n  }\n\n  let decodedToken;\n\n  try {\n    decodedToken = decode(jwtString, { complete: true });\n  } catch(err) {\n    return done(err);\n  }\n\n  if (!decodedToken) {\n    return done(new JsonWebTokenError('invalid token'));\n  }\n\n  const header = decodedToken.header;\n  let getSecret;\n\n  if(typeof secretOrPublicKey === 'function') {\n    if(!callback) {\n      return done(new JsonWebTokenError('verify must be called asynchronous if secret or public key is provided as a callback'));\n    }\n\n    getSecret = secretOrPublicKey;\n  }\n  else {\n    getSecret = function(header, secretCallback) {\n      return secretCallback(null, secretOrPublicKey);\n    };\n  }\n\n  return getSecret(header, function(err, secretOrPublicKey) {\n    if(err) {\n      return done(new JsonWebTokenError('error in secret or public key callback: ' + err.message));\n    }\n\n    const hasSignature = parts[2].trim() !== '';\n\n    if (!hasSignature && secretOrPublicKey){\n      return done(new JsonWebTokenError('jwt signature is required'));\n    }\n\n    if (hasSignature && !secretOrPublicKey) {\n      return done(new JsonWebTokenError('secret or public key must be provided'));\n    }\n\n    if (!hasSignature && !options.algorithms) {\n      return done(new JsonWebTokenError('please specify \"none\" in \"algorithms\" to verify unsigned tokens'));\n    }\n\n    if (secretOrPublicKey != null && !(secretOrPublicKey instanceof KeyObject)) {\n      try {\n        secretOrPublicKey = createPublicKey(secretOrPublicKey);\n      } catch (_) {\n        try {\n          secretOrPublicKey = createSecretKey(typeof secretOrPublicKey === 'string' ? Buffer.from(secretOrPublicKey) : secretOrPublicKey);\n        } catch (_) {\n          return done(new JsonWebTokenError('secretOrPublicKey is not valid key material'))\n        }\n      }\n    }\n\n    if (!options.algorithms) {\n      if (secretOrPublicKey.type === 'secret') {\n        options.algorithms = HS_ALGS;\n      } else if (['rsa', 'rsa-pss'].includes(secretOrPublicKey.asymmetricKeyType)) {\n        options.algorithms = RSA_KEY_ALGS\n      } else if (secretOrPublicKey.asymmetricKeyType === 'ec') {\n        options.algorithms = EC_KEY_ALGS\n      } else {\n        options.algorithms = PUB_KEY_ALGS\n      }\n    }\n\n    if (options.algorithms.indexOf(decodedToken.header.alg) === -1) {\n      return done(new JsonWebTokenError('invalid algorithm'));\n    }\n\n    if (header.alg.startsWith('HS') && secretOrPublicKey.type !== 'secret') {\n      return done(new JsonWebTokenError((`secretOrPublicKey must be a symmetric key when using ${header.alg}`)))\n    } else if (/^(?:RS|PS|ES)/.test(header.alg) && secretOrPublicKey.type !== 'public') {\n      return done(new JsonWebTokenError((`secretOrPublicKey must be an asymmetric key when using ${header.alg}`)))\n    }\n\n    if (!options.allowInvalidAsymmetricKeyTypes) {\n      try {\n        validateAsymmetricKey(header.alg, secretOrPublicKey);\n      } catch (e) {\n        return done(e);\n      }\n    }\n\n    let valid;\n\n    try {\n      valid = jws.verify(jwtString, decodedToken.header.alg, secretOrPublicKey);\n    } catch (e) {\n      return done(e);\n    }\n\n    if (!valid) {\n      return done(new JsonWebTokenError('invalid signature'));\n    }\n\n    const payload = decodedToken.payload;\n\n    if (typeof payload.nbf !== 'undefined' && !options.ignoreNotBefore) {\n      if (typeof payload.nbf !== 'number') {\n        return done(new JsonWebTokenError('invalid nbf value'));\n      }\n      if (payload.nbf > clockTimestamp + (options.clockTolerance || 0)) {\n        return done(new NotBeforeError('jwt not active', new Date(payload.nbf * 1000)));\n      }\n    }\n\n    if (typeof payload.exp !== 'undefined' && !options.ignoreExpiration) {\n      if (typeof payload.exp !== 'number') {\n        return done(new JsonWebTokenError('invalid exp value'));\n      }\n      if (clockTimestamp >= payload.exp + (options.clockTolerance || 0)) {\n        return done(new TokenExpiredError('jwt expired', new Date(payload.exp * 1000)));\n      }\n    }\n\n    if (options.audience) {\n      const audiences = Array.isArray(options.audience) ? options.audience : [options.audience];\n      const target = Array.isArray(payload.aud) ? payload.aud : [payload.aud];\n\n      const match = target.some(function (targetAudience) {\n        return audiences.some(function (audience) {\n          return audience instanceof RegExp ? audience.test(targetAudience) : audience === targetAudience;\n        });\n      });\n\n      if (!match) {\n        return done(new JsonWebTokenError('jwt audience invalid. expected: ' + audiences.join(' or ')));\n      }\n    }\n\n    if (options.issuer) {\n      const invalid_issuer =\n              (typeof options.issuer === 'string' && payload.iss !== options.issuer) ||\n              (Array.isArray(options.issuer) && options.issuer.indexOf(payload.iss) === -1);\n\n      if (invalid_issuer) {\n        return done(new JsonWebTokenError('jwt issuer invalid. expected: ' + options.issuer));\n      }\n    }\n\n    if (options.subject) {\n      if (payload.sub !== options.subject) {\n        return done(new JsonWebTokenError('jwt subject invalid. expected: ' + options.subject));\n      }\n    }\n\n    if (options.jwtid) {\n      if (payload.jti !== options.jwtid) {\n        return done(new JsonWebTokenError('jwt jwtid invalid. expected: ' + options.jwtid));\n      }\n    }\n\n    if (options.nonce) {\n      if (payload.nonce !== options.nonce) {\n        return done(new JsonWebTokenError('jwt nonce invalid. expected: ' + options.nonce));\n      }\n    }\n\n    if (options.maxAge) {\n      if (typeof payload.iat !== 'number') {\n        return done(new JsonWebTokenError('iat required when maxAge is specified'));\n      }\n\n      const maxAgeTimestamp = timespan(options.maxAge, payload.iat);\n      if (typeof maxAgeTimestamp === 'undefined') {\n        return done(new JsonWebTokenError('\"maxAge\" should be a number of seconds or string representing a timespan eg: \"1d\", \"20h\", 60'));\n      }\n      if (clockTimestamp >= maxAgeTimestamp + (options.clockTolerance || 0)) {\n        return done(new TokenExpiredError('maxAge exceeded', new Date(maxAgeTimestamp * 1000)));\n      }\n    }\n\n    if (options.complete === true) {\n      const signature = decodedToken.signature;\n\n      return done(null, {\n        header: header,\n        payload: payload,\n        signature: signature\n      });\n    }\n\n    return done(null, payload);\n  });\n};\n","/**\n * lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright jQuery Foundation and other contributors <https://jquery.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0,\n    MAX_SAFE_INTEGER = 9007199254740991,\n    MAX_INTEGER = 1.7976931348623157e+308,\n    NAN = 0 / 0;\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    stringTag = '[object String]',\n    symbolTag = '[object Symbol]';\n\n/** Used to match leading and trailing whitespace. */\nvar reTrim = /^\\s+|\\s+$/g;\n\n/** Used to detect bad signed hexadecimal string values. */\nvar reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n/** Used to detect binary string values. */\nvar reIsBinary = /^0b[01]+$/i;\n\n/** Used to detect octal string values. */\nvar reIsOctal = /^0o[0-7]+$/i;\n\n/** Used to detect unsigned integer values. */\nvar reIsUint = /^(?:0|[1-9]\\d*)$/;\n\n/** Built-in method references without a dependency on `root`. */\nvar freeParseInt = parseInt;\n\n/**\n * A specialized version of `_.map` for arrays without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the new mapped array.\n */\nfunction arrayMap(array, iteratee) {\n  var index = -1,\n      length = array ? array.length : 0,\n      result = Array(length);\n\n  while (++index < length) {\n    result[index] = iteratee(array[index], index, array);\n  }\n  return result;\n}\n\n/**\n * The base implementation of `_.findIndex` and `_.findLastIndex` without\n * support for iteratee shorthands.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {Function} predicate The function invoked per iteration.\n * @param {number} fromIndex The index to search from.\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction baseFindIndex(array, predicate, fromIndex, fromRight) {\n  var length = array.length,\n      index = fromIndex + (fromRight ? 1 : -1);\n\n  while ((fromRight ? index-- : ++index < length)) {\n    if (predicate(array[index], index, array)) {\n      return index;\n    }\n  }\n  return -1;\n}\n\n/**\n * The base implementation of `_.indexOf` without `fromIndex` bounds checks.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} value The value to search for.\n * @param {number} fromIndex The index to search from.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction baseIndexOf(array, value, fromIndex) {\n  if (value !== value) {\n    return baseFindIndex(array, baseIsNaN, fromIndex);\n  }\n  var index = fromIndex - 1,\n      length = array.length;\n\n  while (++index < length) {\n    if (array[index] === value) {\n      return index;\n    }\n  }\n  return -1;\n}\n\n/**\n * The base implementation of `_.isNaN` without support for number objects.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\n */\nfunction baseIsNaN(value) {\n  return value !== value;\n}\n\n/**\n * The base implementation of `_.times` without support for iteratee shorthands\n * or max array length checks.\n *\n * @private\n * @param {number} n The number of times to invoke `iteratee`.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the array of results.\n */\nfunction baseTimes(n, iteratee) {\n  var index = -1,\n      result = Array(n);\n\n  while (++index < n) {\n    result[index] = iteratee(index);\n  }\n  return result;\n}\n\n/**\n * The base implementation of `_.values` and `_.valuesIn` which creates an\n * array of `object` property values corresponding to the property names\n * of `props`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array} props The property names to get values for.\n * @returns {Object} Returns the array of property values.\n */\nfunction baseValues(object, props) {\n  return arrayMap(props, function(key) {\n    return object[key];\n  });\n}\n\n/**\n * Creates a unary function that invokes `func` with its argument transformed.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {Function} transform The argument transform.\n * @returns {Function} Returns the new function.\n */\nfunction overArg(func, transform) {\n  return function(arg) {\n    return func(transform(arg));\n  };\n}\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/** Built-in value references. */\nvar propertyIsEnumerable = objectProto.propertyIsEnumerable;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeKeys = overArg(Object.keys, Object),\n    nativeMax = Math.max;\n\n/**\n * Creates an array of the enumerable property names of the array-like `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @param {boolean} inherited Specify returning inherited property names.\n * @returns {Array} Returns the array of property names.\n */\nfunction arrayLikeKeys(value, inherited) {\n  // Safari 8.1 makes `arguments.callee` enumerable in strict mode.\n  // Safari 9 makes `arguments.length` enumerable in strict mode.\n  var result = (isArray(value) || isArguments(value))\n    ? baseTimes(value.length, String)\n    : [];\n\n  var length = result.length,\n      skipIndexes = !!length;\n\n  for (var key in value) {\n    if ((inherited || hasOwnProperty.call(value, key)) &&\n        !(skipIndexes && (key == 'length' || isIndex(key, length)))) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\n/**\n * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction baseKeys(object) {\n  if (!isPrototype(object)) {\n    return nativeKeys(object);\n  }\n  var result = [];\n  for (var key in Object(object)) {\n    if (hasOwnProperty.call(object, key) && key != 'constructor') {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\n/**\n * Checks if `value` is a valid array-like index.\n *\n * @private\n * @param {*} value The value to check.\n * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n */\nfunction isIndex(value, length) {\n  length = length == null ? MAX_SAFE_INTEGER : length;\n  return !!length &&\n    (typeof value == 'number' || reIsUint.test(value)) &&\n    (value > -1 && value % 1 == 0 && value < length);\n}\n\n/**\n * Checks if `value` is likely a prototype object.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n */\nfunction isPrototype(value) {\n  var Ctor = value && value.constructor,\n      proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;\n\n  return value === proto;\n}\n\n/**\n * Checks if `value` is in `collection`. If `collection` is a string, it's\n * checked for a substring of `value`, otherwise\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * is used for equality comparisons. If `fromIndex` is negative, it's used as\n * the offset from the end of `collection`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object|string} collection The collection to inspect.\n * @param {*} value The value to search for.\n * @param {number} [fromIndex=0] The index to search from.\n * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.\n * @returns {boolean} Returns `true` if `value` is found, else `false`.\n * @example\n *\n * _.includes([1, 2, 3], 1);\n * // => true\n *\n * _.includes([1, 2, 3], 1, 2);\n * // => false\n *\n * _.includes({ 'a': 1, 'b': 2 }, 1);\n * // => true\n *\n * _.includes('abcd', 'bc');\n * // => true\n */\nfunction includes(collection, value, fromIndex, guard) {\n  collection = isArrayLike(collection) ? collection : values(collection);\n  fromIndex = (fromIndex && !guard) ? toInteger(fromIndex) : 0;\n\n  var length = collection.length;\n  if (fromIndex < 0) {\n    fromIndex = nativeMax(length + fromIndex, 0);\n  }\n  return isString(collection)\n    ? (fromIndex <= length && collection.indexOf(value, fromIndex) > -1)\n    : (!!length && baseIndexOf(collection, value, fromIndex) > -1);\n}\n\n/**\n * Checks if `value` is likely an `arguments` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n *  else `false`.\n * @example\n *\n * _.isArguments(function() { return arguments; }());\n * // => true\n *\n * _.isArguments([1, 2, 3]);\n * // => false\n */\nfunction isArguments(value) {\n  // Safari 8.1 makes `arguments.callee` enumerable in strict mode.\n  return isArrayLikeObject(value) && hasOwnProperty.call(value, 'callee') &&\n    (!propertyIsEnumerable.call(value, 'callee') || objectToString.call(value) == argsTag);\n}\n\n/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\n\n/**\n * Checks if `value` is array-like. A value is considered array-like if it's\n * not a function and has a `value.length` that's an integer greater than or\n * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n * @example\n *\n * _.isArrayLike([1, 2, 3]);\n * // => true\n *\n * _.isArrayLike(document.body.children);\n * // => true\n *\n * _.isArrayLike('abc');\n * // => true\n *\n * _.isArrayLike(_.noop);\n * // => false\n */\nfunction isArrayLike(value) {\n  return value != null && isLength(value.length) && !isFunction(value);\n}\n\n/**\n * This method is like `_.isArrayLike` except that it also checks if `value`\n * is an object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array-like object,\n *  else `false`.\n * @example\n *\n * _.isArrayLikeObject([1, 2, 3]);\n * // => true\n *\n * _.isArrayLikeObject(document.body.children);\n * // => true\n *\n * _.isArrayLikeObject('abc');\n * // => false\n *\n * _.isArrayLikeObject(_.noop);\n * // => false\n */\nfunction isArrayLikeObject(value) {\n  return isObjectLike(value) && isArrayLike(value);\n}\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\nfunction isFunction(value) {\n  // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 8-9 which returns 'object' for typed array and other constructors.\n  var tag = isObject(value) ? objectToString.call(value) : '';\n  return tag == funcTag || tag == genTag;\n}\n\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This method is loosely based on\n * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n * @example\n *\n * _.isLength(3);\n * // => true\n *\n * _.isLength(Number.MIN_VALUE);\n * // => false\n *\n * _.isLength(Infinity);\n * // => false\n *\n * _.isLength('3');\n * // => false\n */\nfunction isLength(value) {\n  return typeof value == 'number' &&\n    value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\n\n/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return !!value && (type == 'object' || type == 'function');\n}\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n\n/**\n * Checks if `value` is classified as a `String` primitive or object.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a string, else `false`.\n * @example\n *\n * _.isString('abc');\n * // => true\n *\n * _.isString(1);\n * // => false\n */\nfunction isString(value) {\n  return typeof value == 'string' ||\n    (!isArray(value) && isObjectLike(value) && objectToString.call(value) == stringTag);\n}\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (isObjectLike(value) && objectToString.call(value) == symbolTag);\n}\n\n/**\n * Converts `value` to a finite number.\n *\n * @static\n * @memberOf _\n * @since 4.12.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {number} Returns the converted number.\n * @example\n *\n * _.toFinite(3.2);\n * // => 3.2\n *\n * _.toFinite(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toFinite(Infinity);\n * // => 1.7976931348623157e+308\n *\n * _.toFinite('3.2');\n * // => 3.2\n */\nfunction toFinite(value) {\n  if (!value) {\n    return value === 0 ? value : 0;\n  }\n  value = toNumber(value);\n  if (value === INFINITY || value === -INFINITY) {\n    var sign = (value < 0 ? -1 : 1);\n    return sign * MAX_INTEGER;\n  }\n  return value === value ? value : 0;\n}\n\n/**\n * Converts `value` to an integer.\n *\n * **Note:** This method is loosely based on\n * [`ToInteger`](http://www.ecma-international.org/ecma-262/7.0/#sec-tointeger).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {number} Returns the converted integer.\n * @example\n *\n * _.toInteger(3.2);\n * // => 3\n *\n * _.toInteger(Number.MIN_VALUE);\n * // => 0\n *\n * _.toInteger(Infinity);\n * // => 1.7976931348623157e+308\n *\n * _.toInteger('3.2');\n * // => 3\n */\nfunction toInteger(value) {\n  var result = toFinite(value),\n      remainder = result % 1;\n\n  return result === result ? (remainder ? result - remainder : result) : 0;\n}\n\n/**\n * Converts `value` to a number.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {number} Returns the number.\n * @example\n *\n * _.toNumber(3.2);\n * // => 3.2\n *\n * _.toNumber(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toNumber(Infinity);\n * // => Infinity\n *\n * _.toNumber('3.2');\n * // => 3.2\n */\nfunction toNumber(value) {\n  if (typeof value == 'number') {\n    return value;\n  }\n  if (isSymbol(value)) {\n    return NAN;\n  }\n  if (isObject(value)) {\n    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n    value = isObject(other) ? (other + '') : other;\n  }\n  if (typeof value != 'string') {\n    return value === 0 ? value : +value;\n  }\n  value = value.replace(reTrim, '');\n  var isBinary = reIsBinary.test(value);\n  return (isBinary || reIsOctal.test(value))\n    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n    : (reIsBadHex.test(value) ? NAN : +value);\n}\n\n/**\n * Creates an array of the own enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects. See the\n * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n * for more details.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keys(new Foo);\n * // => ['a', 'b'] (iteration order is not guaranteed)\n *\n * _.keys('hi');\n * // => ['0', '1']\n */\nfunction keys(object) {\n  return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);\n}\n\n/**\n * Creates an array of the own enumerable string keyed property values of `object`.\n *\n * **Note:** Non-object values are coerced to objects.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property values.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.values(new Foo);\n * // => [1, 2] (iteration order is not guaranteed)\n *\n * _.values('hi');\n * // => ['h', 'i']\n */\nfunction values(object) {\n  return object ? baseValues(object, keys(object)) : [];\n}\n\nmodule.exports = includes;\n","/**\n * lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright jQuery Foundation and other contributors <https://jquery.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0,\n    MAX_INTEGER = 1.7976931348623157e+308,\n    NAN = 0 / 0;\n\n/** `Object#toString` result references. */\nvar symbolTag = '[object Symbol]';\n\n/** Used to match leading and trailing whitespace. */\nvar reTrim = /^\\s+|\\s+$/g;\n\n/** Used to detect bad signed hexadecimal string values. */\nvar reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n/** Used to detect binary string values. */\nvar reIsBinary = /^0b[01]+$/i;\n\n/** Used to detect octal string values. */\nvar reIsOctal = /^0o[0-7]+$/i;\n\n/** Built-in method references without a dependency on `root`. */\nvar freeParseInt = parseInt;\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/**\n * Checks if `value` is an integer.\n *\n * **Note:** This method is based on\n * [`Number.isInteger`](https://mdn.io/Number/isInteger).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an integer, else `false`.\n * @example\n *\n * _.isInteger(3);\n * // => true\n *\n * _.isInteger(Number.MIN_VALUE);\n * // => false\n *\n * _.isInteger(Infinity);\n * // => false\n *\n * _.isInteger('3');\n * // => false\n */\nfunction isInteger(value) {\n  return typeof value == 'number' && value == toInteger(value);\n}\n\n/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return !!value && (type == 'object' || type == 'function');\n}\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (isObjectLike(value) && objectToString.call(value) == symbolTag);\n}\n\n/**\n * Converts `value` to a finite number.\n *\n * @static\n * @memberOf _\n * @since 4.12.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {number} Returns the converted number.\n * @example\n *\n * _.toFinite(3.2);\n * // => 3.2\n *\n * _.toFinite(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toFinite(Infinity);\n * // => 1.7976931348623157e+308\n *\n * _.toFinite('3.2');\n * // => 3.2\n */\nfunction toFinite(value) {\n  if (!value) {\n    return value === 0 ? value : 0;\n  }\n  value = toNumber(value);\n  if (value === INFINITY || value === -INFINITY) {\n    var sign = (value < 0 ? -1 : 1);\n    return sign * MAX_INTEGER;\n  }\n  return value === value ? value : 0;\n}\n\n/**\n * Converts `value` to an integer.\n *\n * **Note:** This method is loosely based on\n * [`ToInteger`](http://www.ecma-international.org/ecma-262/7.0/#sec-tointeger).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {number} Returns the converted integer.\n * @example\n *\n * _.toInteger(3.2);\n * // => 3\n *\n * _.toInteger(Number.MIN_VALUE);\n * // => 0\n *\n * _.toInteger(Infinity);\n * // => 1.7976931348623157e+308\n *\n * _.toInteger('3.2');\n * // => 3\n */\nfunction toInteger(value) {\n  var result = toFinite(value),\n      remainder = result % 1;\n\n  return result === result ? (remainder ? result - remainder : result) : 0;\n}\n\n/**\n * Converts `value` to a number.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {number} Returns the number.\n * @example\n *\n * _.toNumber(3.2);\n * // => 3.2\n *\n * _.toNumber(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toNumber(Infinity);\n * // => Infinity\n *\n * _.toNumber('3.2');\n * // => 3.2\n */\nfunction toNumber(value) {\n  if (typeof value == 'number') {\n    return value;\n  }\n  if (isSymbol(value)) {\n    return NAN;\n  }\n  if (isObject(value)) {\n    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n    value = isObject(other) ? (other + '') : other;\n  }\n  if (typeof value != 'string') {\n    return value === 0 ? value : +value;\n  }\n  value = value.replace(reTrim, '');\n  var isBinary = reIsBinary.test(value);\n  return (isBinary || reIsOctal.test(value))\n    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n    : (reIsBadHex.test(value) ? NAN : +value);\n}\n\nmodule.exports = isInteger;\n","/**\n * lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright jQuery Foundation and other contributors <https://jquery.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n\n/** Used as the `TypeError` message for \"Functions\" methods. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0,\n    MAX_INTEGER = 1.7976931348623157e+308,\n    NAN = 0 / 0;\n\n/** `Object#toString` result references. */\nvar symbolTag = '[object Symbol]';\n\n/** Used to match leading and trailing whitespace. */\nvar reTrim = /^\\s+|\\s+$/g;\n\n/** Used to detect bad signed hexadecimal string values. */\nvar reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n/** Used to detect binary string values. */\nvar reIsBinary = /^0b[01]+$/i;\n\n/** Used to detect octal string values. */\nvar reIsOctal = /^0o[0-7]+$/i;\n\n/** Built-in method references without a dependency on `root`. */\nvar freeParseInt = parseInt;\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/**\n * Creates a function that invokes `func`, with the `this` binding and arguments\n * of the created function, while it's called less than `n` times. Subsequent\n * calls to the created function return the result of the last `func` invocation.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Function\n * @param {number} n The number of calls at which `func` is no longer invoked.\n * @param {Function} func The function to restrict.\n * @returns {Function} Returns the new restricted function.\n * @example\n *\n * jQuery(element).on('click', _.before(5, addContactToList));\n * // => Allows adding up to 4 contacts to the list.\n */\nfunction before(n, func) {\n  var result;\n  if (typeof func != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  n = toInteger(n);\n  return function() {\n    if (--n > 0) {\n      result = func.apply(this, arguments);\n    }\n    if (n <= 1) {\n      func = undefined;\n    }\n    return result;\n  };\n}\n\n/**\n * Creates a function that is restricted to invoking `func` once. Repeat calls\n * to the function return the value of the first invocation. The `func` is\n * invoked with the `this` binding and arguments of the created function.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to restrict.\n * @returns {Function} Returns the new restricted function.\n * @example\n *\n * var initialize = _.once(createApplication);\n * initialize();\n * initialize();\n * // => `createApplication` is invoked once\n */\nfunction once(func) {\n  return before(2, func);\n}\n\n/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return !!value && (type == 'object' || type == 'function');\n}\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (isObjectLike(value) && objectToString.call(value) == symbolTag);\n}\n\n/**\n * Converts `value` to a finite number.\n *\n * @static\n * @memberOf _\n * @since 4.12.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {number} Returns the converted number.\n * @example\n *\n * _.toFinite(3.2);\n * // => 3.2\n *\n * _.toFinite(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toFinite(Infinity);\n * // => 1.7976931348623157e+308\n *\n * _.toFinite('3.2');\n * // => 3.2\n */\nfunction toFinite(value) {\n  if (!value) {\n    return value === 0 ? value : 0;\n  }\n  value = toNumber(value);\n  if (value === INFINITY || value === -INFINITY) {\n    var sign = (value < 0 ? -1 : 1);\n    return sign * MAX_INTEGER;\n  }\n  return value === value ? value : 0;\n}\n\n/**\n * Converts `value` to an integer.\n *\n * **Note:** This method is loosely based on\n * [`ToInteger`](http://www.ecma-international.org/ecma-262/7.0/#sec-tointeger).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {number} Returns the converted integer.\n * @example\n *\n * _.toInteger(3.2);\n * // => 3\n *\n * _.toInteger(Number.MIN_VALUE);\n * // => 0\n *\n * _.toInteger(Infinity);\n * // => 1.7976931348623157e+308\n *\n * _.toInteger('3.2');\n * // => 3\n */\nfunction toInteger(value) {\n  var result = toFinite(value),\n      remainder = result % 1;\n\n  return result === result ? (remainder ? result - remainder : result) : 0;\n}\n\n/**\n * Converts `value` to a number.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {number} Returns the number.\n * @example\n *\n * _.toNumber(3.2);\n * // => 3.2\n *\n * _.toNumber(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toNumber(Infinity);\n * // => Infinity\n *\n * _.toNumber('3.2');\n * // => 3.2\n */\nfunction toNumber(value) {\n  if (typeof value == 'number') {\n    return value;\n  }\n  if (isSymbol(value)) {\n    return NAN;\n  }\n  if (isObject(value)) {\n    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n    value = isObject(other) ? (other + '') : other;\n  }\n  if (typeof value != 'string') {\n    return value === 0 ? value : +value;\n  }\n  value = value.replace(reTrim, '');\n  var isBinary = reIsBinary.test(value);\n  return (isBinary || reIsOctal.test(value))\n    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n    : (reIsBadHex.test(value) ? NAN : +value);\n}\n\nmodule.exports = once;\n","const timespan = require('./lib/timespan');\nconst PS_SUPPORTED = require('./lib/psSupported');\nconst validateAsymmetricKey = require('./lib/validateAsymmetricKey');\nconst jws = require('jws');\nconst includes = require('lodash.includes');\nconst isBoolean = require('lodash.isboolean');\nconst isInteger = require('lodash.isinteger');\nconst isNumber = require('lodash.isnumber');\nconst isPlainObject = require('lodash.isplainobject');\nconst isString = require('lodash.isstring');\nconst once = require('lodash.once');\nconst { KeyObject, createSecretKey, createPrivateKey } = require('crypto')\n\nconst SUPPORTED_ALGS = ['RS256', 'RS384', 'RS512', 'ES256', 'ES384', 'ES512', 'HS256', 'HS384', 'HS512', 'none'];\nif (PS_SUPPORTED) {\n  SUPPORTED_ALGS.splice(3, 0, 'PS256', 'PS384', 'PS512');\n}\n\nconst sign_options_schema = {\n  expiresIn: { isValid: function(value) { return isInteger(value) || (isString(value) && value); }, message: '\"expiresIn\" should be a number of seconds or string representing a timespan' },\n  notBefore: { isValid: function(value) { return isInteger(value) || (isString(value) && value); }, message: '\"notBefore\" should be a number of seconds or string representing a timespan' },\n  audience: { isValid: function(value) { return isString(value) || Array.isArray(value); }, message: '\"audience\" must be a string or array' },\n  algorithm: { isValid: includes.bind(null, SUPPORTED_ALGS), message: '\"algorithm\" must be a valid string enum value' },\n  header: { isValid: isPlainObject, message: '\"header\" must be an object' },\n  encoding: { isValid: isString, message: '\"encoding\" must be a string' },\n  issuer: { isValid: isString, message: '\"issuer\" must be a string' },\n  subject: { isValid: isString, message: '\"subject\" must be a string' },\n  jwtid: { isValid: isString, message: '\"jwtid\" must be a string' },\n  noTimestamp: { isValid: isBoolean, message: '\"noTimestamp\" must be a boolean' },\n  keyid: { isValid: isString, message: '\"keyid\" must be a string' },\n  mutatePayload: { isValid: isBoolean, message: '\"mutatePayload\" must be a boolean' },\n  allowInsecureKeySizes: { isValid: isBoolean, message: '\"allowInsecureKeySizes\" must be a boolean'},\n  allowInvalidAsymmetricKeyTypes: { isValid: isBoolean, message: '\"allowInvalidAsymmetricKeyTypes\" must be a boolean'}\n};\n\nconst registered_claims_schema = {\n  iat: { isValid: isNumber, message: '\"iat\" should be a number of seconds' },\n  exp: { isValid: isNumber, message: '\"exp\" should be a number of seconds' },\n  nbf: { isValid: isNumber, message: '\"nbf\" should be a number of seconds' }\n};\n\nfunction validate(schema, allowUnknown, object, parameterName) {\n  if (!isPlainObject(object)) {\n    throw new Error('Expected \"' + parameterName + '\" to be a plain object.');\n  }\n  Object.keys(object)\n    .forEach(function(key) {\n      const validator = schema[key];\n      if (!validator) {\n        if (!allowUnknown) {\n          throw new Error('\"' + key + '\" is not allowed in \"' + parameterName + '\"');\n        }\n        return;\n      }\n      if (!validator.isValid(object[key])) {\n        throw new Error(validator.message);\n      }\n    });\n}\n\nfunction validateOptions(options) {\n  return validate(sign_options_schema, false, options, 'options');\n}\n\nfunction validatePayload(payload) {\n  return validate(registered_claims_schema, true, payload, 'payload');\n}\n\nconst options_to_payload = {\n  'audience': 'aud',\n  'issuer': 'iss',\n  'subject': 'sub',\n  'jwtid': 'jti'\n};\n\nconst options_for_objects = [\n  'expiresIn',\n  'notBefore',\n  'noTimestamp',\n  'audience',\n  'issuer',\n  'subject',\n  'jwtid',\n];\n\nmodule.exports = function (payload, secretOrPrivateKey, options, callback) {\n  if (typeof options === 'function') {\n    callback = options;\n    options = {};\n  } else {\n    options = options || {};\n  }\n\n  const isObjectPayload = typeof payload === 'object' &&\n                        !Buffer.isBuffer(payload);\n\n  const header = Object.assign({\n    alg: options.algorithm || 'HS256',\n    typ: isObjectPayload ? 'JWT' : undefined,\n    kid: options.keyid\n  }, options.header);\n\n  function failure(err) {\n    if (callback) {\n      return callback(err);\n    }\n    throw err;\n  }\n\n  if (!secretOrPrivateKey && options.algorithm !== 'none') {\n    return failure(new Error('secretOrPrivateKey must have a value'));\n  }\n\n  if (secretOrPrivateKey != null && !(secretOrPrivateKey instanceof KeyObject)) {\n    try {\n      secretOrPrivateKey = createPrivateKey(secretOrPrivateKey)\n    } catch (_) {\n      try {\n        secretOrPrivateKey = createSecretKey(typeof secretOrPrivateKey === 'string' ? Buffer.from(secretOrPrivateKey) : secretOrPrivateKey)\n      } catch (_) {\n        return failure(new Error('secretOrPrivateKey is not valid key material'));\n      }\n    }\n  }\n\n  if (header.alg.startsWith('HS') && secretOrPrivateKey.type !== 'secret') {\n    return failure(new Error((`secretOrPrivateKey must be a symmetric key when using ${header.alg}`)))\n  } else if (/^(?:RS|PS|ES)/.test(header.alg)) {\n    if (secretOrPrivateKey.type !== 'private') {\n      return failure(new Error((`secretOrPrivateKey must be an asymmetric key when using ${header.alg}`)))\n    }\n    if (!options.allowInsecureKeySizes &&\n      !header.alg.startsWith('ES') &&\n      secretOrPrivateKey.asymmetricKeyDetails !== undefined && //KeyObject.asymmetricKeyDetails is supported in Node 15+\n      secretOrPrivateKey.asymmetricKeyDetails.modulusLength < 2048) {\n      return failure(new Error(`secretOrPrivateKey has a minimum key size of 2048 bits for ${header.alg}`));\n    }\n  }\n\n  if (typeof payload === 'undefined') {\n    return failure(new Error('payload is required'));\n  } else if (isObjectPayload) {\n    try {\n      validatePayload(payload);\n    }\n    catch (error) {\n      return failure(error);\n    }\n    if (!options.mutatePayload) {\n      payload = Object.assign({},payload);\n    }\n  } else {\n    const invalid_options = options_for_objects.filter(function (opt) {\n      return typeof options[opt] !== 'undefined';\n    });\n\n    if (invalid_options.length > 0) {\n      return failure(new Error('invalid ' + invalid_options.join(',') + ' option for ' + (typeof payload ) + ' payload'));\n    }\n  }\n\n  if (typeof payload.exp !== 'undefined' && typeof options.expiresIn !== 'undefined') {\n    return failure(new Error('Bad \"options.expiresIn\" option the payload already has an \"exp\" property.'));\n  }\n\n  if (typeof payload.nbf !== 'undefined' && typeof options.notBefore !== 'undefined') {\n    return failure(new Error('Bad \"options.notBefore\" option the payload already has an \"nbf\" property.'));\n  }\n\n  try {\n    validateOptions(options);\n  }\n  catch (error) {\n    return failure(error);\n  }\n\n  if (!options.allowInvalidAsymmetricKeyTypes) {\n    try {\n      validateAsymmetricKey(header.alg, secretOrPrivateKey);\n    } catch (error) {\n      return failure(error);\n    }\n  }\n\n  const timestamp = payload.iat || Math.floor(Date.now() / 1000);\n\n  if (options.noTimestamp) {\n    delete payload.iat;\n  } else if (isObjectPayload) {\n    payload.iat = timestamp;\n  }\n\n  if (typeof options.notBefore !== 'undefined') {\n    try {\n      payload.nbf = timespan(options.notBefore, timestamp);\n    }\n    catch (err) {\n      return failure(err);\n    }\n    if (typeof payload.nbf === 'undefined') {\n      return failure(new Error('\"notBefore\" should be a number of seconds or string representing a timespan eg: \"1d\", \"20h\", 60'));\n    }\n  }\n\n  if (typeof options.expiresIn !== 'undefined' && typeof payload === 'object') {\n    try {\n      payload.exp = timespan(options.expiresIn, timestamp);\n    }\n    catch (err) {\n      return failure(err);\n    }\n    if (typeof payload.exp === 'undefined') {\n      return failure(new Error('\"expiresIn\" should be a number of seconds or string representing a timespan eg: \"1d\", \"20h\", 60'));\n    }\n  }\n\n  Object.keys(options_to_payload).forEach(function (key) {\n    const claim = options_to_payload[key];\n    if (typeof options[key] !== 'undefined') {\n      if (typeof payload[claim] !== 'undefined') {\n        return failure(new Error('Bad \"options.' + key + '\" option. The payload already has an \"' + claim + '\" property.'));\n      }\n      payload[claim] = options[key];\n    }\n  });\n\n  const encoding = options.encoding || 'utf8';\n\n  if (typeof callback === 'function') {\n    callback = callback && once(callback);\n\n    jws.createSign({\n      header: header,\n      privateKey: secretOrPrivateKey,\n      payload: payload,\n      encoding: encoding\n    }).once('error', callback)\n      .once('done', function (signature) {\n        // TODO: Remove in favor of the modulus length check before signing once node 15+ is the minimum supported version\n        if(!options.allowInsecureKeySizes && /^(?:RS|PS)/.test(header.alg) && signature.length < 256) {\n          return callback(new Error(`secretOrPrivateKey has a minimum key size of 2048 bits for ${header.alg}`))\n        }\n        callback(null, signature);\n      });\n  } else {\n    let signature = jws.sign({header: header, payload: payload, secret: secretOrPrivateKey, encoding: encoding});\n    // TODO: Remove in favor of the modulus length check before signing once node 15+ is the minimum supported version\n    if(!options.allowInsecureKeySizes && /^(?:RS|PS)/.test(header.alg) && signature.length < 256) {\n      throw new Error(`secretOrPrivateKey has a minimum key size of 2048 bits for ${header.alg}`)\n    }\n    return signature\n  }\n};\n","/**\n * lodash 3.0.3 (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright 2012-2016 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2016 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <https://lodash.com/license>\n */\n\n/** `Object#toString` result references. */\nvar boolTag = '[object Boolean]';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/**\n * Checks if `value` is classified as a boolean primitive or object.\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n * @example\n *\n * _.isBoolean(false);\n * // => true\n *\n * _.isBoolean(null);\n * // => false\n */\nfunction isBoolean(value) {\n  return value === true || value === false ||\n    (isObjectLike(value) && objectToString.call(value) == boolTag);\n}\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n\nmodule.exports = isBoolean;\n","/**\n * lodash 3.0.3 (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright 2012-2016 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2016 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <https://lodash.com/license>\n */\n\n/** `Object#toString` result references. */\nvar numberTag = '[object Number]';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n\n/**\n * Checks if `value` is classified as a `Number` primitive or object.\n *\n * **Note:** To exclude `Infinity`, `-Infinity`, and `NaN`, which are classified\n * as numbers, use the `_.isFinite` method.\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n * @example\n *\n * _.isNumber(3);\n * // => true\n *\n * _.isNumber(Number.MIN_VALUE);\n * // => true\n *\n * _.isNumber(Infinity);\n * // => true\n *\n * _.isNumber('3');\n * // => false\n */\nfunction isNumber(value) {\n  return typeof value == 'number' ||\n    (isObjectLike(value) && objectToString.call(value) == numberTag);\n}\n\nmodule.exports = isNumber;\n","/**\n * lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright jQuery Foundation and other contributors <https://jquery.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n\n/** `Object#toString` result references. */\nvar objectTag = '[object Object]';\n\n/**\n * Checks if `value` is a host object in IE < 9.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a host object, else `false`.\n */\nfunction isHostObject(value) {\n  // Many host objects are `Object` objects that can coerce to strings\n  // despite having improperly defined `toString` methods.\n  var result = false;\n  if (value != null && typeof value.toString != 'function') {\n    try {\n      result = !!(value + '');\n    } catch (e) {}\n  }\n  return result;\n}\n\n/**\n * Creates a unary function that invokes `func` with its argument transformed.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {Function} transform The argument transform.\n * @returns {Function} Returns the new function.\n */\nfunction overArg(func, transform) {\n  return function(arg) {\n    return func(transform(arg));\n  };\n}\n\n/** Used for built-in method references. */\nvar funcProto = Function.prototype,\n    objectProto = Object.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Used to infer the `Object` constructor. */\nvar objectCtorString = funcToString.call(Object);\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/** Built-in value references. */\nvar getPrototype = overArg(Object.getPrototypeOf, Object);\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n\n/**\n * Checks if `value` is a plain object, that is, an object created by the\n * `Object` constructor or one with a `[[Prototype]]` of `null`.\n *\n * @static\n * @memberOf _\n * @since 0.8.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n * }\n *\n * _.isPlainObject(new Foo);\n * // => false\n *\n * _.isPlainObject([1, 2, 3]);\n * // => false\n *\n * _.isPlainObject({ 'x': 0, 'y': 0 });\n * // => true\n *\n * _.isPlainObject(Object.create(null));\n * // => true\n */\nfunction isPlainObject(value) {\n  if (!isObjectLike(value) ||\n      objectToString.call(value) != objectTag || isHostObject(value)) {\n    return false;\n  }\n  var proto = getPrototype(value);\n  if (proto === null) {\n    return true;\n  }\n  var Ctor = hasOwnProperty.call(proto, 'constructor') && proto.constructor;\n  return (typeof Ctor == 'function' &&\n    Ctor instanceof Ctor && funcToString.call(Ctor) == objectCtorString);\n}\n\nmodule.exports = isPlainObject;\n","/**\n * lodash 4.0.1 (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright 2012-2016 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2016 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <https://lodash.com/license>\n */\n\n/** `Object#toString` result references. */\nvar stringTag = '[object String]';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @type Function\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n\n/**\n * Checks if `value` is classified as a `String` primitive or object.\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n * @example\n *\n * _.isString('abc');\n * // => true\n *\n * _.isString(1);\n * // => false\n */\nfunction isString(value) {\n  return typeof value == 'string' ||\n    (!isArray(value) && isObjectLike(value) && objectToString.call(value) == stringTag);\n}\n\nmodule.exports = isString;\n","module.exports = {\n  decode: require('./decode'),\n  verify: require('./verify'),\n  sign: require('./sign'),\n  JsonWebTokenError: require('./lib/JsonWebTokenError'),\n  NotBeforeError: require('./lib/NotBeforeError'),\n  TokenExpiredError: require('./lib/TokenExpiredError'),\n};\n","/*! @azure/msal-node v3.7.3 2025-08-27 */\n'use strict';\nimport jwt from 'jsonwebtoken';\nimport { createClientAuthError, ClientAuthErrorCodes, TimeUtils, EncodingTypes, Constants } from '@azure/msal-common/node';\nimport { EncodingUtils } from '../utils/EncodingUtils.mjs';\nimport { JwtConstants } from '../utils/Constants.mjs';\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * Client assertion of type jwt-bearer used in confidential client flows\r\n * @public\r\n */\r\nclass ClientAssertion {\r\n    /**\r\n     * Initialize the ClientAssertion class from the clientAssertion passed by the user\r\n     * @param assertion - refer https://tools.ietf.org/html/rfc7521\r\n     */\r\n    static fromAssertion(assertion) {\r\n        const clientAssertion = new ClientAssertion();\r\n        clientAssertion.jwt = assertion;\r\n        return clientAssertion;\r\n    }\r\n    /**\r\n     * @deprecated Use fromCertificateWithSha256Thumbprint instead, with a SHA-256 thumprint\r\n     * Initialize the ClientAssertion class from the certificate passed by the user\r\n     * @param thumbprint - identifier of a certificate\r\n     * @param privateKey - secret key\r\n     * @param publicCertificate - electronic document provided to prove the ownership of the public key\r\n     */\r\n    static fromCertificate(thumbprint, privateKey, publicCertificate) {\r\n        const clientAssertion = new ClientAssertion();\r\n        clientAssertion.privateKey = privateKey;\r\n        clientAssertion.thumbprint = thumbprint;\r\n        clientAssertion.useSha256 = false;\r\n        if (publicCertificate) {\r\n            clientAssertion.publicCertificate =\r\n                this.parseCertificate(publicCertificate);\r\n        }\r\n        return clientAssertion;\r\n    }\r\n    /**\r\n     * Initialize the ClientAssertion class from the certificate passed by the user\r\n     * @param thumbprint - identifier of a certificate\r\n     * @param privateKey - secret key\r\n     * @param publicCertificate - electronic document provided to prove the ownership of the public key\r\n     */\r\n    static fromCertificateWithSha256Thumbprint(thumbprint, privateKey, publicCertificate) {\r\n        const clientAssertion = new ClientAssertion();\r\n        clientAssertion.privateKey = privateKey;\r\n        clientAssertion.thumbprint = thumbprint;\r\n        clientAssertion.useSha256 = true;\r\n        if (publicCertificate) {\r\n            clientAssertion.publicCertificate =\r\n                this.parseCertificate(publicCertificate);\r\n        }\r\n        return clientAssertion;\r\n    }\r\n    /**\r\n     * Update JWT for certificate based clientAssertion, if passed by the user, uses it as is\r\n     * @param cryptoProvider - library's crypto helper\r\n     * @param issuer - iss claim\r\n     * @param jwtAudience - aud claim\r\n     */\r\n    getJwt(cryptoProvider, issuer, jwtAudience) {\r\n        // if assertion was created from certificate, check if jwt is expired and create new one.\r\n        if (this.privateKey && this.thumbprint) {\r\n            if (this.jwt &&\r\n                !this.isExpired() &&\r\n                issuer === this.issuer &&\r\n                jwtAudience === this.jwtAudience) {\r\n                return this.jwt;\r\n            }\r\n            return this.createJwt(cryptoProvider, issuer, jwtAudience);\r\n        }\r\n        /*\r\n         * if assertion was created by caller, then we just append it. It is up to the caller to\r\n         * ensure that it contains necessary claims and that it is not expired.\r\n         */\r\n        if (this.jwt) {\r\n            return this.jwt;\r\n        }\r\n        throw createClientAuthError(ClientAuthErrorCodes.invalidAssertion);\r\n    }\r\n    /**\r\n     * JWT format and required claims specified: https://tools.ietf.org/html/rfc7523#section-3\r\n     */\r\n    createJwt(cryptoProvider, issuer, jwtAudience) {\r\n        this.issuer = issuer;\r\n        this.jwtAudience = jwtAudience;\r\n        const issuedAt = TimeUtils.nowSeconds();\r\n        this.expirationTime = issuedAt + 600;\r\n        const algorithm = this.useSha256\r\n            ? JwtConstants.PSS_256\r\n            : JwtConstants.RSA_256;\r\n        const header = {\r\n            alg: algorithm,\r\n        };\r\n        const thumbprintHeader = this.useSha256\r\n            ? JwtConstants.X5T_256\r\n            : JwtConstants.X5T;\r\n        Object.assign(header, {\r\n            [thumbprintHeader]: EncodingUtils.base64EncodeUrl(this.thumbprint, EncodingTypes.HEX),\r\n        });\r\n        if (this.publicCertificate) {\r\n            Object.assign(header, {\r\n                [JwtConstants.X5C]: this.publicCertificate,\r\n            });\r\n        }\r\n        const payload = {\r\n            [JwtConstants.AUDIENCE]: this.jwtAudience,\r\n            [JwtConstants.EXPIRATION_TIME]: this.expirationTime,\r\n            [JwtConstants.ISSUER]: this.issuer,\r\n            [JwtConstants.SUBJECT]: this.issuer,\r\n            [JwtConstants.NOT_BEFORE]: issuedAt,\r\n            [JwtConstants.JWT_ID]: cryptoProvider.createNewGuid(),\r\n        };\r\n        this.jwt = jwt.sign(payload, this.privateKey, { header });\r\n        return this.jwt;\r\n    }\r\n    /**\r\n     * Utility API to check expiration\r\n     */\r\n    isExpired() {\r\n        return this.expirationTime < TimeUtils.nowSeconds();\r\n    }\r\n    /**\r\n     * Extracts the raw certs from a given certificate string and returns them in an array.\r\n     * @param publicCertificate - electronic document provided to prove the ownership of the public key\r\n     */\r\n    static parseCertificate(publicCertificate) {\r\n        /**\r\n         * This is regex to identify the certs in a given certificate string.\r\n         * We want to look for the contents between the BEGIN and END certificate strings, without the associated newlines.\r\n         * The information in parens \"(.+?)\" is the capture group to represent the cert we want isolated.\r\n         * \".\" means any string character, \"+\" means match 1 or more times, and \"?\" means the shortest match.\r\n         * The \"g\" at the end of the regex means search the string globally, and the \"s\" enables the \".\" to match newlines.\r\n         */\r\n        const regexToFindCerts = /-----BEGIN CERTIFICATE-----\\r*\\n(.+?)\\r*\\n-----END CERTIFICATE-----/gs;\r\n        const certs = [];\r\n        let matches;\r\n        while ((matches = regexToFindCerts.exec(publicCertificate)) !== null) {\r\n            // matches[1] represents the first parens capture group in the regex.\r\n            certs.push(matches[1].replace(/\\r*\\n/g, Constants.EMPTY_STRING));\r\n        }\r\n        return certs;\r\n    }\r\n}\n\nexport { ClientAssertion };\n//# sourceMappingURL=ClientAssertion.mjs.map\n","/*! @azure/msal-node v3.7.3 2025-08-27 */\n'use strict';\n/* eslint-disable header/header */\r\nconst name = \"@azure/msal-node\";\r\nconst version = \"3.7.3\";\n\nexport { name, version };\n//# sourceMappingURL=packageMetadata.mjs.map\n","/*! @azure/msal-node v3.7.3 2025-08-27 */\n'use strict';\nimport { BaseClient, TimeUtils, ResponseHandler, UrlString, CcsCredentialType, RequestParameterBuilder, OAuthResponseType, GrantType, getClientAssertion, StringUtils, UrlUtils } from '@azure/msal-common/node';\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * Oauth2.0 Password grant client\r\n * Note: We are only supporting public clients for password grant and for purely testing purposes\r\n * @public\r\n * @deprecated - Use a more secure flow instead\r\n */\r\nclass UsernamePasswordClient extends BaseClient {\r\n    constructor(configuration) {\r\n        super(configuration);\r\n    }\r\n    /**\r\n     * API to acquire a token by passing the username and password to the service in exchage of credentials\r\n     * password_grant\r\n     * @param request - CommonUsernamePasswordRequest\r\n     */\r\n    async acquireToken(request) {\r\n        this.logger.info(\"in acquireToken call in username-password client\");\r\n        const reqTimestamp = TimeUtils.nowSeconds();\r\n        const response = await this.executeTokenRequest(this.authority, request);\r\n        const responseHandler = new ResponseHandler(this.config.authOptions.clientId, this.cacheManager, this.cryptoUtils, this.logger, this.config.serializableCache, this.config.persistencePlugin);\r\n        // Validate response. This function throws a server error if an error is returned by the server.\r\n        responseHandler.validateTokenResponse(response.body);\r\n        const tokenResponse = responseHandler.handleServerTokenResponse(response.body, this.authority, reqTimestamp, request);\r\n        return tokenResponse;\r\n    }\r\n    /**\r\n     * Executes POST request to token endpoint\r\n     * @param authority - authority object\r\n     * @param request - CommonUsernamePasswordRequest provided by the developer\r\n     */\r\n    async executeTokenRequest(authority, request) {\r\n        const queryParametersString = this.createTokenQueryParameters(request);\r\n        const endpoint = UrlString.appendQueryString(authority.tokenEndpoint, queryParametersString);\r\n        const requestBody = await this.createTokenRequestBody(request);\r\n        const headers = this.createTokenRequestHeaders({\r\n            credential: request.username,\r\n            type: CcsCredentialType.UPN,\r\n        });\r\n        const thumbprint = {\r\n            clientId: this.config.authOptions.clientId,\r\n            authority: authority.canonicalAuthority,\r\n            scopes: request.scopes,\r\n            claims: request.claims,\r\n            authenticationScheme: request.authenticationScheme,\r\n            resourceRequestMethod: request.resourceRequestMethod,\r\n            resourceRequestUri: request.resourceRequestUri,\r\n            shrClaims: request.shrClaims,\r\n            sshKid: request.sshKid,\r\n        };\r\n        return this.executePostToTokenEndpoint(endpoint, requestBody, headers, thumbprint, request.correlationId);\r\n    }\r\n    /**\r\n     * Generates a map for all the params to be sent to the service\r\n     * @param request - CommonUsernamePasswordRequest provided by the developer\r\n     */\r\n    async createTokenRequestBody(request) {\r\n        const parameters = new Map();\r\n        RequestParameterBuilder.addClientId(parameters, this.config.authOptions.clientId);\r\n        RequestParameterBuilder.addUsername(parameters, request.username);\r\n        RequestParameterBuilder.addPassword(parameters, request.password);\r\n        RequestParameterBuilder.addScopes(parameters, request.scopes);\r\n        RequestParameterBuilder.addResponseType(parameters, OAuthResponseType.IDTOKEN_TOKEN);\r\n        RequestParameterBuilder.addGrantType(parameters, GrantType.RESOURCE_OWNER_PASSWORD_GRANT);\r\n        RequestParameterBuilder.addClientInfo(parameters);\r\n        RequestParameterBuilder.addLibraryInfo(parameters, this.config.libraryInfo);\r\n        RequestParameterBuilder.addApplicationTelemetry(parameters, this.config.telemetry.application);\r\n        RequestParameterBuilder.addThrottling(parameters);\r\n        if (this.serverTelemetryManager) {\r\n            RequestParameterBuilder.addServerTelemetry(parameters, this.serverTelemetryManager);\r\n        }\r\n        const correlationId = request.correlationId ||\r\n            this.config.cryptoInterface.createNewGuid();\r\n        RequestParameterBuilder.addCorrelationId(parameters, correlationId);\r\n        if (this.config.clientCredentials.clientSecret) {\r\n            RequestParameterBuilder.addClientSecret(parameters, this.config.clientCredentials.clientSecret);\r\n        }\r\n        const clientAssertion = this.config.clientCredentials.clientAssertion;\r\n        if (clientAssertion) {\r\n            RequestParameterBuilder.addClientAssertion(parameters, await getClientAssertion(clientAssertion.assertion, this.config.authOptions.clientId, request.resourceRequestUri));\r\n            RequestParameterBuilder.addClientAssertionType(parameters, clientAssertion.assertionType);\r\n        }\r\n        if (!StringUtils.isEmptyObj(request.claims) ||\r\n            (this.config.authOptions.clientCapabilities &&\r\n                this.config.authOptions.clientCapabilities.length > 0)) {\r\n            RequestParameterBuilder.addClaims(parameters, request.claims, this.config.authOptions.clientCapabilities);\r\n        }\r\n        if (this.config.systemOptions.preventCorsPreflight &&\r\n            request.username) {\r\n            RequestParameterBuilder.addCcsUpn(parameters, request.username);\r\n        }\r\n        return UrlUtils.mapToQueryString(parameters);\r\n    }\r\n}\n\nexport { UsernamePasswordClient };\n//# sourceMappingURL=UsernamePasswordClient.mjs.map\n","/*! @azure/msal-node v3.7.3 2025-08-27 */\n'use strict';\nimport { AuthorizeProtocol, RequestParameterBuilder, ProtocolMode, OAuthResponseType } from '@azure/msal-common/node';\nimport { Constants } from '../utils/Constants.mjs';\nimport { version } from '../packageMetadata.mjs';\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * Constructs the full /authorize URL with request parameters\r\n * @param config\r\n * @param authority\r\n * @param request\r\n * @param logger\r\n * @returns\r\n */\r\nfunction getAuthCodeRequestUrl(config, authority, request, logger) {\r\n    const parameters = AuthorizeProtocol.getStandardAuthorizeRequestParameters({\r\n        ...config.auth,\r\n        authority: authority,\r\n        redirectUri: request.redirectUri || \"\",\r\n    }, request, logger);\r\n    RequestParameterBuilder.addLibraryInfo(parameters, {\r\n        sku: Constants.MSAL_SKU,\r\n        version: version,\r\n        cpu: process.arch || \"\",\r\n        os: process.platform || \"\",\r\n    });\r\n    if (config.auth.protocolMode !== ProtocolMode.OIDC) {\r\n        RequestParameterBuilder.addApplicationTelemetry(parameters, config.telemetry.application);\r\n    }\r\n    RequestParameterBuilder.addResponseType(parameters, OAuthResponseType.CODE);\r\n    if (request.codeChallenge && request.codeChallengeMethod) {\r\n        RequestParameterBuilder.addCodeChallengeParams(parameters, request.codeChallenge, request.codeChallengeMethod);\r\n    }\r\n    RequestParameterBuilder.addExtraQueryParameters(parameters, request.extraQueryParameters || {});\r\n    return AuthorizeProtocol.getAuthorizeUrl(authority, parameters, config.auth.encodeExtraQueryParams, request.extraQueryParameters);\r\n}\n\nexport { getAuthCodeRequestUrl };\n//# sourceMappingURL=Authorize.mjs.map\n","/*! @azure/msal-node v3.7.3 2025-08-27 */\n'use strict';\nimport { Logger, buildStaticAuthorityOptions, AuthenticationScheme, AuthorizationCodeClient, AuthError, RefreshTokenClient, SilentFlowClient, ClientAuthError, ClientAuthErrorCodes, OIDC_DEFAULT_SCOPES, CacheOutcome, createClientAuthError, Constants, getClientAssertion, StringUtils, ServerTelemetryManager, Authority, AuthorityFactory, ResponseMode } from '@azure/msal-common/node';\nimport { buildAppConfiguration } from '../config/Configuration.mjs';\nimport { CryptoProvider } from '../crypto/CryptoProvider.mjs';\nimport { NodeStorage } from '../cache/NodeStorage.mjs';\nimport { ApiId, Constants as Constants$1 } from '../utils/Constants.mjs';\nimport { TokenCache } from '../cache/TokenCache.mjs';\nimport { ClientAssertion } from './ClientAssertion.mjs';\nimport { name, version } from '../packageMetadata.mjs';\nimport { NodeAuthError } from '../error/NodeAuthError.mjs';\nimport { UsernamePasswordClient } from './UsernamePasswordClient.mjs';\nimport { getAuthCodeRequestUrl } from '../protocol/Authorize.mjs';\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * Base abstract class for all ClientApplications - public and confidential\r\n * @public\r\n */\r\nclass ClientApplication {\r\n    /**\r\n     * Constructor for the ClientApplication\r\n     */\r\n    constructor(configuration) {\r\n        this.config = buildAppConfiguration(configuration);\r\n        this.cryptoProvider = new CryptoProvider();\r\n        this.logger = new Logger(this.config.system.loggerOptions, name, version);\r\n        this.storage = new NodeStorage(this.logger, this.config.auth.clientId, this.cryptoProvider, buildStaticAuthorityOptions(this.config.auth));\r\n        this.tokenCache = new TokenCache(this.storage, this.logger, this.config.cache.cachePlugin);\r\n    }\r\n    /**\r\n     * Creates the URL of the authorization request, letting the user input credentials and consent to the\r\n     * application. The URL targets the /authorize endpoint of the authority configured in the\r\n     * application object.\r\n     *\r\n     * Once the user inputs their credentials and consents, the authority will send a response to the redirect URI\r\n     * sent in the request and should contain an authorization code, which can then be used to acquire tokens via\r\n     * `acquireTokenByCode(AuthorizationCodeRequest)`.\r\n     */\r\n    async getAuthCodeUrl(request) {\r\n        this.logger.info(\"getAuthCodeUrl called\", request.correlationId);\r\n        const validRequest = {\r\n            ...request,\r\n            ...(await this.initializeBaseRequest(request)),\r\n            responseMode: request.responseMode || ResponseMode.QUERY,\r\n            authenticationScheme: AuthenticationScheme.BEARER,\r\n            state: request.state || \"\",\r\n            nonce: request.nonce || \"\",\r\n        };\r\n        const discoveredAuthority = await this.createAuthority(validRequest.authority, validRequest.correlationId, undefined, request.azureCloudOptions);\r\n        return getAuthCodeRequestUrl(this.config, discoveredAuthority, validRequest, this.logger);\r\n    }\r\n    /**\r\n     * Acquires a token by exchanging the Authorization Code received from the first step of OAuth2.0\r\n     * Authorization Code flow.\r\n     *\r\n     * `getAuthCodeUrl(AuthorizationCodeUrlRequest)` can be used to create the URL for the first step of OAuth2.0\r\n     * Authorization Code flow. Ensure that values for redirectUri and scopes in AuthorizationCodeUrlRequest and\r\n     * AuthorizationCodeRequest are the same.\r\n     */\r\n    async acquireTokenByCode(request, authCodePayLoad) {\r\n        this.logger.info(\"acquireTokenByCode called\");\r\n        if (request.state && authCodePayLoad) {\r\n            this.logger.info(\"acquireTokenByCode - validating state\");\r\n            this.validateState(request.state, authCodePayLoad.state || \"\");\r\n            // eslint-disable-next-line no-param-reassign\r\n            authCodePayLoad = { ...authCodePayLoad, state: \"\" };\r\n        }\r\n        const validRequest = {\r\n            ...request,\r\n            ...(await this.initializeBaseRequest(request)),\r\n            authenticationScheme: AuthenticationScheme.BEARER,\r\n        };\r\n        const serverTelemetryManager = this.initializeServerTelemetryManager(ApiId.acquireTokenByCode, validRequest.correlationId);\r\n        try {\r\n            const discoveredAuthority = await this.createAuthority(validRequest.authority, validRequest.correlationId, undefined, request.azureCloudOptions);\r\n            const authClientConfig = await this.buildOauthClientConfiguration(discoveredAuthority, validRequest.correlationId, validRequest.redirectUri, serverTelemetryManager);\r\n            const authorizationCodeClient = new AuthorizationCodeClient(authClientConfig);\r\n            this.logger.verbose(\"Auth code client created\", validRequest.correlationId);\r\n            return await authorizationCodeClient.acquireToken(validRequest, authCodePayLoad);\r\n        }\r\n        catch (e) {\r\n            if (e instanceof AuthError) {\r\n                e.setCorrelationId(validRequest.correlationId);\r\n            }\r\n            serverTelemetryManager.cacheFailedRequest(e);\r\n            throw e;\r\n        }\r\n    }\r\n    /**\r\n     * Acquires a token by exchanging the refresh token provided for a new set of tokens.\r\n     *\r\n     * This API is provided only for scenarios where you would like to migrate from ADAL to MSAL. Otherwise, it is\r\n     * recommended that you use `acquireTokenSilent()` for silent scenarios. When using `acquireTokenSilent()`, MSAL will\r\n     * handle the caching and refreshing of tokens automatically.\r\n     */\r\n    async acquireTokenByRefreshToken(request) {\r\n        this.logger.info(\"acquireTokenByRefreshToken called\", request.correlationId);\r\n        const validRequest = {\r\n            ...request,\r\n            ...(await this.initializeBaseRequest(request)),\r\n            authenticationScheme: AuthenticationScheme.BEARER,\r\n        };\r\n        const serverTelemetryManager = this.initializeServerTelemetryManager(ApiId.acquireTokenByRefreshToken, validRequest.correlationId);\r\n        try {\r\n            const discoveredAuthority = await this.createAuthority(validRequest.authority, validRequest.correlationId, undefined, request.azureCloudOptions);\r\n            const refreshTokenClientConfig = await this.buildOauthClientConfiguration(discoveredAuthority, validRequest.correlationId, validRequest.redirectUri || \"\", serverTelemetryManager);\r\n            const refreshTokenClient = new RefreshTokenClient(refreshTokenClientConfig);\r\n            this.logger.verbose(\"Refresh token client created\", validRequest.correlationId);\r\n            return await refreshTokenClient.acquireToken(validRequest);\r\n        }\r\n        catch (e) {\r\n            if (e instanceof AuthError) {\r\n                e.setCorrelationId(validRequest.correlationId);\r\n            }\r\n            serverTelemetryManager.cacheFailedRequest(e);\r\n            throw e;\r\n        }\r\n    }\r\n    /**\r\n     * Acquires a token silently when a user specifies the account the token is requested for.\r\n     *\r\n     * This API expects the user to provide an account object and looks into the cache to retrieve the token if present.\r\n     * There is also an optional \"forceRefresh\" boolean the user can send to bypass the cache for access_token and id_token.\r\n     * In case the refresh_token is expired or not found, an error is thrown\r\n     * and the guidance is for the user to call any interactive token acquisition API (eg: `acquireTokenByCode()`).\r\n     */\r\n    async acquireTokenSilent(request) {\r\n        const validRequest = {\r\n            ...request,\r\n            ...(await this.initializeBaseRequest(request)),\r\n            forceRefresh: request.forceRefresh || false,\r\n        };\r\n        const serverTelemetryManager = this.initializeServerTelemetryManager(ApiId.acquireTokenSilent, validRequest.correlationId, validRequest.forceRefresh);\r\n        try {\r\n            const discoveredAuthority = await this.createAuthority(validRequest.authority, validRequest.correlationId, undefined, request.azureCloudOptions);\r\n            const clientConfiguration = await this.buildOauthClientConfiguration(discoveredAuthority, validRequest.correlationId, validRequest.redirectUri || \"\", serverTelemetryManager);\r\n            const silentFlowClient = new SilentFlowClient(clientConfiguration);\r\n            this.logger.verbose(\"Silent flow client created\", validRequest.correlationId);\r\n            try {\r\n                // always overwrite the in-memory cache with the persistence cache (if it exists) before a cache lookup\r\n                await this.tokenCache.overwriteCache();\r\n                return await this.acquireCachedTokenSilent(validRequest, silentFlowClient, clientConfiguration);\r\n            }\r\n            catch (error) {\r\n                if (error instanceof ClientAuthError &&\r\n                    error.errorCode ===\r\n                        ClientAuthErrorCodes.tokenRefreshRequired) {\r\n                    const refreshTokenClient = new RefreshTokenClient(clientConfiguration);\r\n                    return refreshTokenClient.acquireTokenByRefreshToken(validRequest);\r\n                }\r\n                throw error;\r\n            }\r\n        }\r\n        catch (error) {\r\n            if (error instanceof AuthError) {\r\n                error.setCorrelationId(validRequest.correlationId);\r\n            }\r\n            serverTelemetryManager.cacheFailedRequest(error);\r\n            throw error;\r\n        }\r\n    }\r\n    async acquireCachedTokenSilent(validRequest, silentFlowClient, clientConfiguration) {\r\n        const [authResponse, cacheOutcome] = await silentFlowClient.acquireCachedToken({\r\n            ...validRequest,\r\n            scopes: validRequest.scopes?.length\r\n                ? validRequest.scopes\r\n                : [...OIDC_DEFAULT_SCOPES],\r\n        });\r\n        if (cacheOutcome === CacheOutcome.PROACTIVELY_REFRESHED) {\r\n            this.logger.info(\"ClientApplication:acquireCachedTokenSilent - Cached access token's refreshOn property has been exceeded'. It's not expired, but must be refreshed.\");\r\n            // refresh the access token in the background\r\n            const refreshTokenClient = new RefreshTokenClient(clientConfiguration);\r\n            try {\r\n                await refreshTokenClient.acquireTokenByRefreshToken(validRequest);\r\n            }\r\n            catch {\r\n                // do nothing, this is running in the background and no action is to be taken upon success or failure\r\n            }\r\n        }\r\n        // return the cached token\r\n        return authResponse;\r\n    }\r\n    /**\r\n     * Acquires tokens with password grant by exchanging client applications username and password for credentials\r\n     *\r\n     * The latest OAuth 2.0 Security Best Current Practice disallows the password grant entirely.\r\n     * More details on this recommendation at https://tools.ietf.org/html/draft-ietf-oauth-security-topics-13#section-3.4\r\n     * Microsoft's documentation and recommendations are at:\r\n     * https://docs.microsoft.com/en-us/azure/active-directory/develop/msal-authentication-flows#usernamepassword\r\n     *\r\n     * @param request - UsenamePasswordRequest\r\n     * @deprecated - Use a more secure flow instead\r\n     */\r\n    async acquireTokenByUsernamePassword(request) {\r\n        this.logger.info(\"acquireTokenByUsernamePassword called\", request.correlationId);\r\n        const validRequest = {\r\n            ...request,\r\n            ...(await this.initializeBaseRequest(request)),\r\n        };\r\n        const serverTelemetryManager = this.initializeServerTelemetryManager(ApiId.acquireTokenByUsernamePassword, validRequest.correlationId);\r\n        try {\r\n            const discoveredAuthority = await this.createAuthority(validRequest.authority, validRequest.correlationId, undefined, request.azureCloudOptions);\r\n            const usernamePasswordClientConfig = await this.buildOauthClientConfiguration(discoveredAuthority, validRequest.correlationId, \"\", serverTelemetryManager);\r\n            const usernamePasswordClient = new UsernamePasswordClient(usernamePasswordClientConfig);\r\n            this.logger.verbose(\"Username password client created\", validRequest.correlationId);\r\n            return await usernamePasswordClient.acquireToken(validRequest);\r\n        }\r\n        catch (e) {\r\n            if (e instanceof AuthError) {\r\n                e.setCorrelationId(validRequest.correlationId);\r\n            }\r\n            serverTelemetryManager.cacheFailedRequest(e);\r\n            throw e;\r\n        }\r\n    }\r\n    /**\r\n     * Gets the token cache for the application.\r\n     */\r\n    getTokenCache() {\r\n        this.logger.info(\"getTokenCache called\");\r\n        return this.tokenCache;\r\n    }\r\n    /**\r\n     * Validates OIDC state by comparing the user cached state with the state received from the server.\r\n     *\r\n     * This API is provided for scenarios where you would use OAuth2.0 state parameter to mitigate against\r\n     * CSRF attacks.\r\n     * For more information about state, visit https://datatracker.ietf.org/doc/html/rfc6819#section-3.6.\r\n     * @param state - Unique GUID generated by the user that is cached by the user and sent to the server during the first leg of the flow\r\n     * @param cachedState - This string is sent back by the server with the authorization code\r\n     */\r\n    validateState(state, cachedState) {\r\n        if (!state) {\r\n            throw NodeAuthError.createStateNotFoundError();\r\n        }\r\n        if (state !== cachedState) {\r\n            throw createClientAuthError(ClientAuthErrorCodes.stateMismatch);\r\n        }\r\n    }\r\n    /**\r\n     * Returns the logger instance\r\n     */\r\n    getLogger() {\r\n        return this.logger;\r\n    }\r\n    /**\r\n     * Replaces the default logger set in configurations with new Logger with new configurations\r\n     * @param logger - Logger instance\r\n     */\r\n    setLogger(logger) {\r\n        this.logger = logger;\r\n    }\r\n    /**\r\n     * Builds the common configuration to be passed to the common component based on the platform configurarion\r\n     * @param authority - user passed authority in configuration\r\n     * @param serverTelemetryManager - initializes servertelemetry if passed\r\n     */\r\n    async buildOauthClientConfiguration(discoveredAuthority, requestCorrelationId, redirectUri, serverTelemetryManager) {\r\n        this.logger.verbose(\"buildOauthClientConfiguration called\", requestCorrelationId);\r\n        this.logger.info(`Building oauth client configuration with the following authority: ${discoveredAuthority.tokenEndpoint}.`, requestCorrelationId);\r\n        serverTelemetryManager?.updateRegionDiscoveryMetadata(discoveredAuthority.regionDiscoveryMetadata);\r\n        const clientConfiguration = {\r\n            authOptions: {\r\n                clientId: this.config.auth.clientId,\r\n                authority: discoveredAuthority,\r\n                clientCapabilities: this.config.auth.clientCapabilities,\r\n                redirectUri,\r\n            },\r\n            loggerOptions: {\r\n                logLevel: this.config.system.loggerOptions.logLevel,\r\n                loggerCallback: this.config.system.loggerOptions.loggerCallback,\r\n                piiLoggingEnabled: this.config.system.loggerOptions.piiLoggingEnabled,\r\n                correlationId: requestCorrelationId,\r\n            },\r\n            cacheOptions: {\r\n                claimsBasedCachingEnabled: this.config.cache.claimsBasedCachingEnabled,\r\n            },\r\n            cryptoInterface: this.cryptoProvider,\r\n            networkInterface: this.config.system.networkClient,\r\n            storageInterface: this.storage,\r\n            serverTelemetryManager: serverTelemetryManager,\r\n            clientCredentials: {\r\n                clientSecret: this.clientSecret,\r\n                clientAssertion: await this.getClientAssertion(discoveredAuthority),\r\n            },\r\n            libraryInfo: {\r\n                sku: Constants$1.MSAL_SKU,\r\n                version: version,\r\n                cpu: process.arch || Constants.EMPTY_STRING,\r\n                os: process.platform || Constants.EMPTY_STRING,\r\n            },\r\n            telemetry: this.config.telemetry,\r\n            persistencePlugin: this.config.cache.cachePlugin,\r\n            serializableCache: this.tokenCache,\r\n        };\r\n        return clientConfiguration;\r\n    }\r\n    async getClientAssertion(authority) {\r\n        if (this.developerProvidedClientAssertion) {\r\n            this.clientAssertion = ClientAssertion.fromAssertion(await getClientAssertion(this.developerProvidedClientAssertion, this.config.auth.clientId, authority.tokenEndpoint));\r\n        }\r\n        return (this.clientAssertion && {\r\n            assertion: this.clientAssertion.getJwt(this.cryptoProvider, this.config.auth.clientId, authority.tokenEndpoint),\r\n            assertionType: Constants$1.JWT_BEARER_ASSERTION_TYPE,\r\n        });\r\n    }\r\n    /**\r\n     * Generates a request with the default scopes & generates a correlationId.\r\n     * @param authRequest - BaseAuthRequest for initialization\r\n     */\r\n    async initializeBaseRequest(authRequest) {\r\n        this.logger.verbose(\"initializeRequestScopes called\", authRequest.correlationId);\r\n        // Default authenticationScheme to Bearer, log that POP isn't supported yet\r\n        if (authRequest.authenticationScheme &&\r\n            authRequest.authenticationScheme === AuthenticationScheme.POP) {\r\n            this.logger.verbose(\"Authentication Scheme 'pop' is not supported yet, setting Authentication Scheme to 'Bearer' for request\", authRequest.correlationId);\r\n        }\r\n        authRequest.authenticationScheme = AuthenticationScheme.BEARER;\r\n        // Set requested claims hash if claims-based caching is enabled and claims were requested\r\n        if (this.config.cache.claimsBasedCachingEnabled &&\r\n            authRequest.claims &&\r\n            // Checks for empty stringified object \"{}\" which doesn't qualify as requested claims\r\n            !StringUtils.isEmptyObj(authRequest.claims)) {\r\n            authRequest.requestedClaimsHash =\r\n                await this.cryptoProvider.hashString(authRequest.claims);\r\n        }\r\n        return {\r\n            ...authRequest,\r\n            scopes: [\r\n                ...((authRequest && authRequest.scopes) || []),\r\n                ...OIDC_DEFAULT_SCOPES,\r\n            ],\r\n            correlationId: (authRequest && authRequest.correlationId) ||\r\n                this.cryptoProvider.createNewGuid(),\r\n            authority: authRequest.authority || this.config.auth.authority,\r\n        };\r\n    }\r\n    /**\r\n     * Initializes the server telemetry payload\r\n     * @param apiId - Id for a specific request\r\n     * @param correlationId - GUID\r\n     * @param forceRefresh - boolean to indicate network call\r\n     */\r\n    initializeServerTelemetryManager(apiId, correlationId, forceRefresh) {\r\n        const telemetryPayload = {\r\n            clientId: this.config.auth.clientId,\r\n            correlationId: correlationId,\r\n            apiId: apiId,\r\n            forceRefresh: forceRefresh || false,\r\n        };\r\n        return new ServerTelemetryManager(telemetryPayload, this.storage);\r\n    }\r\n    /**\r\n     * Create authority instance. If authority not passed in request, default to authority set on the application\r\n     * object. If no authority set in application object, then default to common authority.\r\n     * @param authorityString - authority from user configuration\r\n     */\r\n    async createAuthority(authorityString, requestCorrelationId, azureRegionConfiguration, azureCloudOptions) {\r\n        this.logger.verbose(\"createAuthority called\", requestCorrelationId);\r\n        // build authority string based on auth params - azureCloudInstance is prioritized if provided\r\n        const authorityUrl = Authority.generateAuthority(authorityString, azureCloudOptions || this.config.auth.azureCloudOptions);\r\n        const authorityOptions = {\r\n            protocolMode: this.config.auth.protocolMode,\r\n            knownAuthorities: this.config.auth.knownAuthorities,\r\n            cloudDiscoveryMetadata: this.config.auth.cloudDiscoveryMetadata,\r\n            authorityMetadata: this.config.auth.authorityMetadata,\r\n            azureRegionConfiguration,\r\n            skipAuthorityMetadataCache: this.config.auth.skipAuthorityMetadataCache,\r\n        };\r\n        return AuthorityFactory.createDiscoveredInstance(authorityUrl, this.config.system.networkClient, this.storage, authorityOptions, this.logger, requestCorrelationId);\r\n    }\r\n    /**\r\n     * Clear the cache\r\n     */\r\n    clearCache() {\r\n        this.storage.clear();\r\n    }\r\n}\n\nexport { ClientApplication };\n//# sourceMappingURL=ClientApplication.mjs.map\n","/*! @azure/msal-node v3.7.3 2025-08-27 */\n'use strict';\nimport { Constants, UrlUtils, HttpStatus } from '@azure/msal-common/node';\nimport http from 'http';\nimport { NodeAuthError } from '../error/NodeAuthError.mjs';\nimport { Constants as Constants$1 } from '../utils/Constants.mjs';\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nclass LoopbackClient {\r\n    /**\r\n     * Spins up a loopback server which returns the server response when the localhost redirectUri is hit\r\n     * @param successTemplate\r\n     * @param errorTemplate\r\n     * @returns\r\n     */\r\n    async listenForAuthCode(successTemplate, errorTemplate) {\r\n        if (this.server) {\r\n            throw NodeAuthError.createLoopbackServerAlreadyExistsError();\r\n        }\r\n        return new Promise((resolve, reject) => {\r\n            this.server = http.createServer((req, res) => {\r\n                const url = req.url;\r\n                if (!url) {\r\n                    res.end(errorTemplate ||\r\n                        \"Error occurred loading redirectUrl\");\r\n                    reject(NodeAuthError.createUnableToLoadRedirectUrlError());\r\n                    return;\r\n                }\r\n                else if (url === Constants.FORWARD_SLASH) {\r\n                    res.end(successTemplate ||\r\n                        \"Auth code was successfully acquired. You can close this window now.\");\r\n                    return;\r\n                }\r\n                const redirectUri = this.getRedirectUri();\r\n                const parsedUrl = new URL(url, redirectUri);\r\n                const authCodeResponse = UrlUtils.getDeserializedResponse(parsedUrl.search) ||\r\n                    {};\r\n                if (authCodeResponse.code) {\r\n                    res.writeHead(HttpStatus.REDIRECT, {\r\n                        location: redirectUri,\r\n                    }); // Prevent auth code from being saved in the browser history\r\n                    res.end();\r\n                }\r\n                if (authCodeResponse.error) {\r\n                    res.end(errorTemplate ||\r\n                        `Error occurred: ${authCodeResponse.error}`);\r\n                }\r\n                resolve(authCodeResponse);\r\n            });\r\n            this.server.listen(0, \"127.0.0.1\"); // Listen on any available port\r\n        });\r\n    }\r\n    /**\r\n     * Get the port that the loopback server is running on\r\n     * @returns\r\n     */\r\n    getRedirectUri() {\r\n        if (!this.server || !this.server.listening) {\r\n            throw NodeAuthError.createNoLoopbackServerExistsError();\r\n        }\r\n        const address = this.server.address();\r\n        if (!address || typeof address === \"string\" || !address.port) {\r\n            this.closeServer();\r\n            throw NodeAuthError.createInvalidLoopbackAddressTypeError();\r\n        }\r\n        const port = address && address.port;\r\n        return `${Constants$1.HTTP_PROTOCOL}${Constants$1.LOCALHOST}:${port}`;\r\n    }\r\n    /**\r\n     * Close the loopback server\r\n     */\r\n    closeServer() {\r\n        if (this.server) {\r\n            // Only stops accepting new connections, server will close once open/idle connections are closed.\r\n            this.server.close();\r\n            if (typeof this.server.closeAllConnections === \"function\") {\r\n                /*\r\n                 * Close open/idle connections. This API is available in Node versions 18.2 and higher\r\n                 */\r\n                this.server.closeAllConnections();\r\n            }\r\n            this.server.unref();\r\n            this.server = undefined;\r\n        }\r\n    }\r\n}\n\nexport { LoopbackClient };\n//# sourceMappingURL=LoopbackClient.mjs.map\n","/*! @azure/msal-node v3.7.3 2025-08-27 */\n'use strict';\nimport { BaseClient, TimeUtils, ResponseHandler, UrlString, RequestParameterBuilder, UrlUtils, createClientAuthError, ClientAuthErrorCodes, Constants, createAuthError, AuthErrorCodes, GrantType, StringUtils } from '@azure/msal-common/node';\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * OAuth2.0 Device code client\r\n * @public\r\n */\r\nclass DeviceCodeClient extends BaseClient {\r\n    constructor(configuration) {\r\n        super(configuration);\r\n    }\r\n    /**\r\n     * Gets device code from device code endpoint, calls back to with device code response, and\r\n     * polls token endpoint to exchange device code for tokens\r\n     * @param request - developer provided CommonDeviceCodeRequest\r\n     */\r\n    async acquireToken(request) {\r\n        const deviceCodeResponse = await this.getDeviceCode(request);\r\n        request.deviceCodeCallback(deviceCodeResponse);\r\n        const reqTimestamp = TimeUtils.nowSeconds();\r\n        const response = await this.acquireTokenWithDeviceCode(request, deviceCodeResponse);\r\n        const responseHandler = new ResponseHandler(this.config.authOptions.clientId, this.cacheManager, this.cryptoUtils, this.logger, this.config.serializableCache, this.config.persistencePlugin);\r\n        // Validate response. This function throws a server error if an error is returned by the server.\r\n        responseHandler.validateTokenResponse(response);\r\n        return responseHandler.handleServerTokenResponse(response, this.authority, reqTimestamp, request);\r\n    }\r\n    /**\r\n     * Creates device code request and executes http GET\r\n     * @param request - developer provided CommonDeviceCodeRequest\r\n     */\r\n    async getDeviceCode(request) {\r\n        const queryParametersString = this.createExtraQueryParameters(request);\r\n        const endpoint = UrlString.appendQueryString(this.authority.deviceCodeEndpoint, queryParametersString);\r\n        const queryString = this.createQueryString(request);\r\n        const headers = this.createTokenRequestHeaders();\r\n        const thumbprint = {\r\n            clientId: this.config.authOptions.clientId,\r\n            authority: request.authority,\r\n            scopes: request.scopes,\r\n            claims: request.claims,\r\n            authenticationScheme: request.authenticationScheme,\r\n            resourceRequestMethod: request.resourceRequestMethod,\r\n            resourceRequestUri: request.resourceRequestUri,\r\n            shrClaims: request.shrClaims,\r\n            sshKid: request.sshKid,\r\n        };\r\n        return this.executePostRequestToDeviceCodeEndpoint(endpoint, queryString, headers, thumbprint, request.correlationId);\r\n    }\r\n    /**\r\n     * Creates query string for the device code request\r\n     * @param request - developer provided CommonDeviceCodeRequest\r\n     */\r\n    createExtraQueryParameters(request) {\r\n        const parameters = new Map();\r\n        if (request.extraQueryParameters) {\r\n            RequestParameterBuilder.addExtraQueryParameters(parameters, request.extraQueryParameters);\r\n        }\r\n        return UrlUtils.mapToQueryString(parameters);\r\n    }\r\n    /**\r\n     * Executes POST request to device code endpoint\r\n     * @param deviceCodeEndpoint - token endpoint\r\n     * @param queryString - string to be used in the body of the request\r\n     * @param headers - headers for the request\r\n     * @param thumbprint - unique request thumbprint\r\n     * @param correlationId - correlation id to be used in the request\r\n     */\r\n    async executePostRequestToDeviceCodeEndpoint(deviceCodeEndpoint, queryString, headers, thumbprint, correlationId) {\r\n        const { body: { user_code: userCode, device_code: deviceCode, verification_uri: verificationUri, expires_in: expiresIn, interval, message, }, } = await this.sendPostRequest(thumbprint, deviceCodeEndpoint, {\r\n            body: queryString,\r\n            headers: headers,\r\n        }, correlationId);\r\n        return {\r\n            userCode,\r\n            deviceCode,\r\n            verificationUri,\r\n            expiresIn,\r\n            interval,\r\n            message,\r\n        };\r\n    }\r\n    /**\r\n     * Create device code endpoint query parameters and returns string\r\n     * @param request - developer provided CommonDeviceCodeRequest\r\n     */\r\n    createQueryString(request) {\r\n        const parameters = new Map();\r\n        RequestParameterBuilder.addScopes(parameters, request.scopes);\r\n        RequestParameterBuilder.addClientId(parameters, this.config.authOptions.clientId);\r\n        if (request.extraQueryParameters) {\r\n            RequestParameterBuilder.addExtraQueryParameters(parameters, request.extraQueryParameters);\r\n        }\r\n        if (request.claims ||\r\n            (this.config.authOptions.clientCapabilities &&\r\n                this.config.authOptions.clientCapabilities.length > 0)) {\r\n            RequestParameterBuilder.addClaims(parameters, request.claims, this.config.authOptions.clientCapabilities);\r\n        }\r\n        return UrlUtils.mapToQueryString(parameters);\r\n    }\r\n    /**\r\n     * Breaks the polling with specific conditions\r\n     * @param deviceCodeExpirationTime - expiration time for the device code request\r\n     * @param userSpecifiedTimeout - developer provided timeout, to be compared against deviceCodeExpirationTime\r\n     * @param userSpecifiedCancelFlag - boolean indicating the developer would like to cancel the request\r\n     */\r\n    continuePolling(deviceCodeExpirationTime, userSpecifiedTimeout, userSpecifiedCancelFlag) {\r\n        if (userSpecifiedCancelFlag) {\r\n            this.logger.error(\"Token request cancelled by setting DeviceCodeRequest.cancel = true\");\r\n            throw createClientAuthError(ClientAuthErrorCodes.deviceCodePollingCancelled);\r\n        }\r\n        else if (userSpecifiedTimeout &&\r\n            userSpecifiedTimeout < deviceCodeExpirationTime &&\r\n            TimeUtils.nowSeconds() > userSpecifiedTimeout) {\r\n            this.logger.error(`User defined timeout for device code polling reached. The timeout was set for ${userSpecifiedTimeout}`);\r\n            throw createClientAuthError(ClientAuthErrorCodes.userTimeoutReached);\r\n        }\r\n        else if (TimeUtils.nowSeconds() > deviceCodeExpirationTime) {\r\n            if (userSpecifiedTimeout) {\r\n                this.logger.verbose(`User specified timeout ignored as the device code has expired before the timeout elapsed. The user specified timeout was set for ${userSpecifiedTimeout}`);\r\n            }\r\n            this.logger.error(`Device code expired. Expiration time of device code was ${deviceCodeExpirationTime}`);\r\n            throw createClientAuthError(ClientAuthErrorCodes.deviceCodeExpired);\r\n        }\r\n        return true;\r\n    }\r\n    /**\r\n     * Creates token request with device code response and polls token endpoint at interval set by the device code response\r\n     * @param request - developer provided CommonDeviceCodeRequest\r\n     * @param deviceCodeResponse - DeviceCodeResponse returned by the security token service device code endpoint\r\n     */\r\n    async acquireTokenWithDeviceCode(request, deviceCodeResponse) {\r\n        const queryParametersString = this.createTokenQueryParameters(request);\r\n        const endpoint = UrlString.appendQueryString(this.authority.tokenEndpoint, queryParametersString);\r\n        const requestBody = this.createTokenRequestBody(request, deviceCodeResponse);\r\n        const headers = this.createTokenRequestHeaders();\r\n        const userSpecifiedTimeout = request.timeout\r\n            ? TimeUtils.nowSeconds() + request.timeout\r\n            : undefined;\r\n        const deviceCodeExpirationTime = TimeUtils.nowSeconds() + deviceCodeResponse.expiresIn;\r\n        const pollingIntervalMilli = deviceCodeResponse.interval * 1000;\r\n        /*\r\n         * Poll token endpoint while (device code is not expired AND operation has not been cancelled by\r\n         * setting CancellationToken.cancel = true). POST request is sent at interval set by pollingIntervalMilli\r\n         */\r\n        while (this.continuePolling(deviceCodeExpirationTime, userSpecifiedTimeout, request.cancel)) {\r\n            const thumbprint = {\r\n                clientId: this.config.authOptions.clientId,\r\n                authority: request.authority,\r\n                scopes: request.scopes,\r\n                claims: request.claims,\r\n                authenticationScheme: request.authenticationScheme,\r\n                resourceRequestMethod: request.resourceRequestMethod,\r\n                resourceRequestUri: request.resourceRequestUri,\r\n                shrClaims: request.shrClaims,\r\n                sshKid: request.sshKid,\r\n            };\r\n            const response = await this.executePostToTokenEndpoint(endpoint, requestBody, headers, thumbprint, request.correlationId);\r\n            if (response.body && response.body.error) {\r\n                // user authorization is pending. Sleep for polling interval and try again\r\n                if (response.body.error === Constants.AUTHORIZATION_PENDING) {\r\n                    this.logger.info(\"Authorization pending. Continue polling.\");\r\n                    await TimeUtils.delay(pollingIntervalMilli);\r\n                }\r\n                else {\r\n                    // for any other error, throw\r\n                    this.logger.info(\"Unexpected error in polling from the server\");\r\n                    throw createAuthError(AuthErrorCodes.postRequestFailed, response.body.error);\r\n                }\r\n            }\r\n            else {\r\n                this.logger.verbose(\"Authorization completed successfully. Polling stopped.\");\r\n                return response.body;\r\n            }\r\n        }\r\n        /*\r\n         * The above code should've thrown by this point, but to satisfy TypeScript,\r\n         * and in the rare case the conditionals in continuePolling() may not catch everything...\r\n         */\r\n        this.logger.error(\"Polling stopped for unknown reasons.\");\r\n        throw createClientAuthError(ClientAuthErrorCodes.deviceCodeUnknownError);\r\n    }\r\n    /**\r\n     * Creates query parameters and converts to string.\r\n     * @param request - developer provided CommonDeviceCodeRequest\r\n     * @param deviceCodeResponse - DeviceCodeResponse returned by the security token service device code endpoint\r\n     */\r\n    createTokenRequestBody(request, deviceCodeResponse) {\r\n        const parameters = new Map();\r\n        RequestParameterBuilder.addScopes(parameters, request.scopes);\r\n        RequestParameterBuilder.addClientId(parameters, this.config.authOptions.clientId);\r\n        RequestParameterBuilder.addGrantType(parameters, GrantType.DEVICE_CODE_GRANT);\r\n        RequestParameterBuilder.addDeviceCode(parameters, deviceCodeResponse.deviceCode);\r\n        const correlationId = request.correlationId ||\r\n            this.config.cryptoInterface.createNewGuid();\r\n        RequestParameterBuilder.addCorrelationId(parameters, correlationId);\r\n        RequestParameterBuilder.addClientInfo(parameters);\r\n        RequestParameterBuilder.addLibraryInfo(parameters, this.config.libraryInfo);\r\n        RequestParameterBuilder.addApplicationTelemetry(parameters, this.config.telemetry.application);\r\n        RequestParameterBuilder.addThrottling(parameters);\r\n        if (this.serverTelemetryManager) {\r\n            RequestParameterBuilder.addServerTelemetry(parameters, this.serverTelemetryManager);\r\n        }\r\n        if (!StringUtils.isEmptyObj(request.claims) ||\r\n            (this.config.authOptions.clientCapabilities &&\r\n                this.config.authOptions.clientCapabilities.length > 0)) {\r\n            RequestParameterBuilder.addClaims(parameters, request.claims, this.config.authOptions.clientCapabilities);\r\n        }\r\n        return UrlUtils.mapToQueryString(parameters);\r\n    }\r\n}\n\nexport { DeviceCodeClient };\n//# sourceMappingURL=DeviceCodeClient.mjs.map\n","/*! @azure/msal-node v3.7.3 2025-08-27 */\n'use strict';\nimport { Constants, ApiId, LOOPBACK_SERVER_CONSTANTS } from '../utils/Constants.mjs';\nimport { ServerTelemetryManager, AuthError, OIDC_DEFAULT_SCOPES, CodeChallengeMethodValues, ResponseMode, ServerError, Constants as Constants$1, AADServerParamKeys } from '@azure/msal-common/node';\nimport { ClientApplication } from './ClientApplication.mjs';\nimport { NodeAuthError, NodeAuthErrorMessage } from '../error/NodeAuthError.mjs';\nimport { LoopbackClient } from '../network/LoopbackClient.mjs';\nimport { DeviceCodeClient } from './DeviceCodeClient.mjs';\nimport { version } from '../packageMetadata.mjs';\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * This class is to be used to acquire tokens for public client applications (desktop, mobile). Public client applications\r\n * are not trusted to safely store application secrets, and therefore can only request tokens in the name of an user.\r\n * @public\r\n */\r\nclass PublicClientApplication extends ClientApplication {\r\n    /**\r\n     * Important attributes in the Configuration object for auth are:\r\n     * - clientID: the application ID of your application. You can obtain one by registering your application with our Application registration portal.\r\n     * - authority: the authority URL for your application.\r\n     *\r\n     * AAD authorities are of the form https://login.microsoftonline.com/\\{Enter_the_Tenant_Info_Here\\}.\r\n     * - If your application supports Accounts in one organizational directory, replace \"Enter_the_Tenant_Info_Here\" value with the Tenant Id or Tenant name (for example, contoso.microsoft.com).\r\n     * - If your application supports Accounts in any organizational directory, replace \"Enter_the_Tenant_Info_Here\" value with organizations.\r\n     * - If your application supports Accounts in any organizational directory and personal Microsoft accounts, replace \"Enter_the_Tenant_Info_Here\" value with common.\r\n     * - To restrict support to Personal Microsoft accounts only, replace \"Enter_the_Tenant_Info_Here\" value with consumers.\r\n     *\r\n     * Azure B2C authorities are of the form https://\\{instance\\}/\\{tenant\\}/\\{policy\\}. Each policy is considered\r\n     * its own authority. You will have to set the all of the knownAuthorities at the time of the client application\r\n     * construction.\r\n     *\r\n     * ADFS authorities are of the form https://\\{instance\\}/adfs.\r\n     */\r\n    constructor(configuration) {\r\n        super(configuration);\r\n        if (this.config.broker.nativeBrokerPlugin) {\r\n            if (this.config.broker.nativeBrokerPlugin.isBrokerAvailable) {\r\n                this.nativeBrokerPlugin = this.config.broker.nativeBrokerPlugin;\r\n                this.nativeBrokerPlugin.setLogger(this.config.system.loggerOptions);\r\n            }\r\n            else {\r\n                this.logger.warning(\"NativeBroker implementation was provided but the broker is unavailable.\");\r\n            }\r\n        }\r\n        this.skus = ServerTelemetryManager.makeExtraSkuString({\r\n            libraryName: Constants.MSAL_SKU,\r\n            libraryVersion: version,\r\n        });\r\n    }\r\n    /**\r\n     * Acquires a token from the authority using OAuth2.0 device code flow.\r\n     * This flow is designed for devices that do not have access to a browser or have input constraints.\r\n     * The authorization server issues a DeviceCode object with a verification code, an end-user code,\r\n     * and the end-user verification URI. The DeviceCode object is provided through a callback, and the end-user should be\r\n     * instructed to use another device to navigate to the verification URI to input credentials.\r\n     * Since the client cannot receive incoming requests, it polls the authorization server repeatedly\r\n     * until the end-user completes input of credentials.\r\n     */\r\n    async acquireTokenByDeviceCode(request) {\r\n        this.logger.info(\"acquireTokenByDeviceCode called\", request.correlationId);\r\n        const validRequest = Object.assign(request, await this.initializeBaseRequest(request));\r\n        const serverTelemetryManager = this.initializeServerTelemetryManager(ApiId.acquireTokenByDeviceCode, validRequest.correlationId);\r\n        try {\r\n            const discoveredAuthority = await this.createAuthority(validRequest.authority, validRequest.correlationId, undefined, request.azureCloudOptions);\r\n            const deviceCodeConfig = await this.buildOauthClientConfiguration(discoveredAuthority, validRequest.correlationId, \"\", serverTelemetryManager);\r\n            const deviceCodeClient = new DeviceCodeClient(deviceCodeConfig);\r\n            this.logger.verbose(\"Device code client created\", validRequest.correlationId);\r\n            return await deviceCodeClient.acquireToken(validRequest);\r\n        }\r\n        catch (e) {\r\n            if (e instanceof AuthError) {\r\n                e.setCorrelationId(validRequest.correlationId);\r\n            }\r\n            serverTelemetryManager.cacheFailedRequest(e);\r\n            throw e;\r\n        }\r\n    }\r\n    /**\r\n     * Acquires a token interactively via the browser by requesting an authorization code then exchanging it for a token.\r\n     */\r\n    async acquireTokenInteractive(request) {\r\n        const correlationId = request.correlationId || this.cryptoProvider.createNewGuid();\r\n        this.logger.trace(\"acquireTokenInteractive called\", correlationId);\r\n        const { openBrowser, successTemplate, errorTemplate, windowHandle, loopbackClient: customLoopbackClient, ...remainingProperties } = request;\r\n        if (this.nativeBrokerPlugin) {\r\n            const brokerRequest = {\r\n                ...remainingProperties,\r\n                clientId: this.config.auth.clientId,\r\n                scopes: request.scopes || OIDC_DEFAULT_SCOPES,\r\n                redirectUri: request.redirectUri || \"\",\r\n                authority: request.authority || this.config.auth.authority,\r\n                correlationId: correlationId,\r\n                extraParameters: {\r\n                    ...remainingProperties.extraQueryParameters,\r\n                    ...remainingProperties.tokenQueryParameters,\r\n                    [AADServerParamKeys.X_CLIENT_EXTRA_SKU]: this.skus,\r\n                },\r\n                accountId: remainingProperties.account?.nativeAccountId,\r\n            };\r\n            return this.nativeBrokerPlugin.acquireTokenInteractive(brokerRequest, windowHandle);\r\n        }\r\n        if (request.redirectUri) {\r\n            throw NodeAuthError.createRedirectUriNotSupportedError();\r\n        }\r\n        const { verifier, challenge } = await this.cryptoProvider.generatePkceCodes();\r\n        const loopbackClient = customLoopbackClient || new LoopbackClient();\r\n        let authCodeResponse = {};\r\n        let authCodeListenerError = null;\r\n        try {\r\n            const authCodeListener = loopbackClient\r\n                .listenForAuthCode(successTemplate, errorTemplate)\r\n                .then((response) => {\r\n                authCodeResponse = response;\r\n            })\r\n                .catch((e) => {\r\n                // Store the promise instead of throwing so we can control when its thrown\r\n                authCodeListenerError = e;\r\n            });\r\n            // Wait for server to be listening\r\n            const redirectUri = await this.waitForRedirectUri(loopbackClient);\r\n            const validRequest = {\r\n                ...remainingProperties,\r\n                correlationId: correlationId,\r\n                scopes: request.scopes || OIDC_DEFAULT_SCOPES,\r\n                redirectUri: redirectUri,\r\n                responseMode: ResponseMode.QUERY,\r\n                codeChallenge: challenge,\r\n                codeChallengeMethod: CodeChallengeMethodValues.S256,\r\n            };\r\n            const authCodeUrl = await this.getAuthCodeUrl(validRequest);\r\n            await openBrowser(authCodeUrl);\r\n            await authCodeListener;\r\n            if (authCodeListenerError) {\r\n                throw authCodeListenerError;\r\n            }\r\n            if (authCodeResponse.error) {\r\n                throw new ServerError(authCodeResponse.error, authCodeResponse.error_description, authCodeResponse.suberror);\r\n            }\r\n            else if (!authCodeResponse.code) {\r\n                throw NodeAuthError.createNoAuthCodeInResponseError();\r\n            }\r\n            const clientInfo = authCodeResponse.client_info;\r\n            const tokenRequest = {\r\n                code: authCodeResponse.code,\r\n                codeVerifier: verifier,\r\n                clientInfo: clientInfo || Constants$1.EMPTY_STRING,\r\n                ...validRequest,\r\n            };\r\n            return await this.acquireTokenByCode(tokenRequest); // Await this so the server doesn't close prematurely\r\n        }\r\n        finally {\r\n            loopbackClient.closeServer();\r\n        }\r\n    }\r\n    /**\r\n     * Returns a token retrieved either from the cache or by exchanging the refresh token for a fresh access token. If brokering is enabled the token request will be serviced by the broker.\r\n     * @param request - developer provided SilentFlowRequest\r\n     * @returns\r\n     */\r\n    async acquireTokenSilent(request) {\r\n        const correlationId = request.correlationId || this.cryptoProvider.createNewGuid();\r\n        this.logger.trace(\"acquireTokenSilent called\", correlationId);\r\n        if (this.nativeBrokerPlugin) {\r\n            const brokerRequest = {\r\n                ...request,\r\n                clientId: this.config.auth.clientId,\r\n                scopes: request.scopes || OIDC_DEFAULT_SCOPES,\r\n                redirectUri: request.redirectUri || \"\",\r\n                authority: request.authority || this.config.auth.authority,\r\n                correlationId: correlationId,\r\n                extraParameters: {\r\n                    ...request.tokenQueryParameters,\r\n                    [AADServerParamKeys.X_CLIENT_EXTRA_SKU]: this.skus,\r\n                },\r\n                accountId: request.account.nativeAccountId,\r\n                forceRefresh: request.forceRefresh || false,\r\n            };\r\n            return this.nativeBrokerPlugin.acquireTokenSilent(brokerRequest);\r\n        }\r\n        if (request.redirectUri) {\r\n            throw NodeAuthError.createRedirectUriNotSupportedError();\r\n        }\r\n        return super.acquireTokenSilent(request);\r\n    }\r\n    /**\r\n     * Removes cache artifacts associated with the given account\r\n     * @param request - developer provided SignOutRequest\r\n     * @returns\r\n     */\r\n    async signOut(request) {\r\n        if (this.nativeBrokerPlugin && request.account.nativeAccountId) {\r\n            const signoutRequest = {\r\n                clientId: this.config.auth.clientId,\r\n                accountId: request.account.nativeAccountId,\r\n                correlationId: request.correlationId ||\r\n                    this.cryptoProvider.createNewGuid(),\r\n            };\r\n            await this.nativeBrokerPlugin.signOut(signoutRequest);\r\n        }\r\n        await this.getTokenCache().removeAccount(request.account, request.correlationId);\r\n    }\r\n    /**\r\n     * Returns all cached accounts for this application. If brokering is enabled this request will be serviced by the broker.\r\n     * @returns\r\n     */\r\n    async getAllAccounts() {\r\n        if (this.nativeBrokerPlugin) {\r\n            const correlationId = this.cryptoProvider.createNewGuid();\r\n            return this.nativeBrokerPlugin.getAllAccounts(this.config.auth.clientId, correlationId);\r\n        }\r\n        return this.getTokenCache().getAllAccounts();\r\n    }\r\n    /**\r\n     * Attempts to retrieve the redirectUri from the loopback server. If the loopback server does not start listening for requests within the timeout this will throw.\r\n     * @param loopbackClient - developer provided custom loopback server implementation\r\n     * @returns\r\n     */\r\n    async waitForRedirectUri(loopbackClient) {\r\n        return new Promise((resolve, reject) => {\r\n            let ticks = 0;\r\n            const id = setInterval(() => {\r\n                if (LOOPBACK_SERVER_CONSTANTS.TIMEOUT_MS /\r\n                    LOOPBACK_SERVER_CONSTANTS.INTERVAL_MS <\r\n                    ticks) {\r\n                    clearInterval(id);\r\n                    reject(NodeAuthError.createLoopbackServerTimeoutError());\r\n                    return;\r\n                }\r\n                try {\r\n                    const r = loopbackClient.getRedirectUri();\r\n                    clearInterval(id);\r\n                    resolve(r);\r\n                    return;\r\n                }\r\n                catch (e) {\r\n                    if (e instanceof AuthError &&\r\n                        e.errorCode ===\r\n                            NodeAuthErrorMessage.noLoopbackServerExists.code) {\r\n                        // Loopback server is not listening yet\r\n                        ticks++;\r\n                        return;\r\n                    }\r\n                    clearInterval(id);\r\n                    reject(e);\r\n                    return;\r\n                }\r\n            }, LOOPBACK_SERVER_CONSTANTS.INTERVAL_MS);\r\n        });\r\n    }\r\n}\n\nexport { PublicClientApplication };\n//# sourceMappingURL=PublicClientApplication.mjs.map\n","/*! @azure/msal-node v3.7.3 2025-08-27 */\n'use strict';\nimport { BaseClient, CacheOutcome, TokenCacheContext, ScopeSet, TimeUtils, DEFAULT_TOKEN_RENEWAL_OFFSET_SEC, ResponseHandler, CredentialType, Constants, createClientAuthError, ClientAuthErrorCodes, UrlString, RequestParameterBuilder, GrantType, getClientAssertion, StringUtils, UrlUtils, AuthenticationScheme } from '@azure/msal-common/node';\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * OAuth2.0 client credential grant\r\n * @public\r\n */\r\nclass ClientCredentialClient extends BaseClient {\r\n    constructor(configuration, appTokenProvider) {\r\n        super(configuration);\r\n        this.appTokenProvider = appTokenProvider;\r\n    }\r\n    /**\r\n     * Public API to acquire a token with ClientCredential Flow for Confidential clients\r\n     * @param request - CommonClientCredentialRequest provided by the developer\r\n     */\r\n    async acquireToken(request) {\r\n        if (request.skipCache || request.claims) {\r\n            return this.executeTokenRequest(request, this.authority);\r\n        }\r\n        const [cachedAuthenticationResult, lastCacheOutcome] = await this.getCachedAuthenticationResult(request, this.config, this.cryptoUtils, this.authority, this.cacheManager, this.serverTelemetryManager);\r\n        if (cachedAuthenticationResult) {\r\n            // if the token is not expired but must be refreshed; get a new one in the background\r\n            if (lastCacheOutcome === CacheOutcome.PROACTIVELY_REFRESHED) {\r\n                this.logger.info(\"ClientCredentialClient:getCachedAuthenticationResult - Cached access token's refreshOn property has been exceeded'. It's not expired, but must be refreshed.\");\r\n                // refresh the access token in the background\r\n                const refreshAccessToken = true;\r\n                await this.executeTokenRequest(request, this.authority, refreshAccessToken);\r\n            }\r\n            // return the cached token\r\n            return cachedAuthenticationResult;\r\n        }\r\n        else {\r\n            return this.executeTokenRequest(request, this.authority);\r\n        }\r\n    }\r\n    /**\r\n     * looks up cache if the tokens are cached already\r\n     */\r\n    async getCachedAuthenticationResult(request, config, cryptoUtils, authority, cacheManager, serverTelemetryManager) {\r\n        const clientConfiguration = config;\r\n        const managedIdentityConfiguration = config;\r\n        let lastCacheOutcome = CacheOutcome.NOT_APPLICABLE;\r\n        // read the user-supplied cache into memory, if applicable\r\n        let cacheContext;\r\n        if (clientConfiguration.serializableCache &&\r\n            clientConfiguration.persistencePlugin) {\r\n            cacheContext = new TokenCacheContext(clientConfiguration.serializableCache, false);\r\n            await clientConfiguration.persistencePlugin.beforeCacheAccess(cacheContext);\r\n        }\r\n        const cachedAccessToken = this.readAccessTokenFromCache(authority, managedIdentityConfiguration.managedIdentityId?.id ||\r\n            clientConfiguration.authOptions.clientId, new ScopeSet(request.scopes || []), cacheManager, request.correlationId);\r\n        if (clientConfiguration.serializableCache &&\r\n            clientConfiguration.persistencePlugin &&\r\n            cacheContext) {\r\n            await clientConfiguration.persistencePlugin.afterCacheAccess(cacheContext);\r\n        }\r\n        // must refresh due to non-existent access_token\r\n        if (!cachedAccessToken) {\r\n            serverTelemetryManager?.setCacheOutcome(CacheOutcome.NO_CACHED_ACCESS_TOKEN);\r\n            return [null, CacheOutcome.NO_CACHED_ACCESS_TOKEN];\r\n        }\r\n        // must refresh due to the expires_in value\r\n        if (TimeUtils.isTokenExpired(cachedAccessToken.expiresOn, clientConfiguration.systemOptions?.tokenRenewalOffsetSeconds ||\r\n            DEFAULT_TOKEN_RENEWAL_OFFSET_SEC)) {\r\n            serverTelemetryManager?.setCacheOutcome(CacheOutcome.CACHED_ACCESS_TOKEN_EXPIRED);\r\n            return [null, CacheOutcome.CACHED_ACCESS_TOKEN_EXPIRED];\r\n        }\r\n        // must refresh (in the background) due to the refresh_in value\r\n        if (cachedAccessToken.refreshOn &&\r\n            TimeUtils.isTokenExpired(cachedAccessToken.refreshOn.toString(), 0)) {\r\n            lastCacheOutcome = CacheOutcome.PROACTIVELY_REFRESHED;\r\n            serverTelemetryManager?.setCacheOutcome(CacheOutcome.PROACTIVELY_REFRESHED);\r\n        }\r\n        return [\r\n            await ResponseHandler.generateAuthenticationResult(cryptoUtils, authority, {\r\n                account: null,\r\n                idToken: null,\r\n                accessToken: cachedAccessToken,\r\n                refreshToken: null,\r\n                appMetadata: null,\r\n            }, true, request),\r\n            lastCacheOutcome,\r\n        ];\r\n    }\r\n    /**\r\n     * Reads access token from the cache\r\n     */\r\n    readAccessTokenFromCache(authority, id, scopeSet, cacheManager, correlationId) {\r\n        const accessTokenFilter = {\r\n            homeAccountId: Constants.EMPTY_STRING,\r\n            environment: authority.canonicalAuthorityUrlComponents.HostNameAndPort,\r\n            credentialType: CredentialType.ACCESS_TOKEN,\r\n            clientId: id,\r\n            realm: authority.tenant,\r\n            target: ScopeSet.createSearchScopes(scopeSet.asArray()),\r\n        };\r\n        const accessTokens = cacheManager.getAccessTokensByFilter(accessTokenFilter, correlationId);\r\n        if (accessTokens.length < 1) {\r\n            return null;\r\n        }\r\n        else if (accessTokens.length > 1) {\r\n            throw createClientAuthError(ClientAuthErrorCodes.multipleMatchingTokens);\r\n        }\r\n        return accessTokens[0];\r\n    }\r\n    /**\r\n     * Makes a network call to request the token from the service\r\n     * @param request - CommonClientCredentialRequest provided by the developer\r\n     * @param authority - authority object\r\n     */\r\n    async executeTokenRequest(request, authority, refreshAccessToken) {\r\n        let serverTokenResponse;\r\n        let reqTimestamp;\r\n        if (this.appTokenProvider) {\r\n            this.logger.info(\"Using appTokenProvider extensibility.\");\r\n            const appTokenPropviderParameters = {\r\n                correlationId: request.correlationId,\r\n                tenantId: this.config.authOptions.authority.tenant,\r\n                scopes: request.scopes,\r\n                claims: request.claims,\r\n            };\r\n            reqTimestamp = TimeUtils.nowSeconds();\r\n            const appTokenProviderResult = await this.appTokenProvider(appTokenPropviderParameters);\r\n            serverTokenResponse = {\r\n                access_token: appTokenProviderResult.accessToken,\r\n                expires_in: appTokenProviderResult.expiresInSeconds,\r\n                refresh_in: appTokenProviderResult.refreshInSeconds,\r\n                token_type: AuthenticationScheme.BEARER,\r\n            };\r\n        }\r\n        else {\r\n            const queryParametersString = this.createTokenQueryParameters(request);\r\n            const endpoint = UrlString.appendQueryString(authority.tokenEndpoint, queryParametersString);\r\n            const requestBody = await this.createTokenRequestBody(request);\r\n            const headers = this.createTokenRequestHeaders();\r\n            const thumbprint = {\r\n                clientId: this.config.authOptions.clientId,\r\n                authority: request.authority,\r\n                scopes: request.scopes,\r\n                claims: request.claims,\r\n                authenticationScheme: request.authenticationScheme,\r\n                resourceRequestMethod: request.resourceRequestMethod,\r\n                resourceRequestUri: request.resourceRequestUri,\r\n                shrClaims: request.shrClaims,\r\n                sshKid: request.sshKid,\r\n            };\r\n            this.logger.info(\"Sending token request to endpoint: \" + authority.tokenEndpoint);\r\n            reqTimestamp = TimeUtils.nowSeconds();\r\n            const response = await this.executePostToTokenEndpoint(endpoint, requestBody, headers, thumbprint, request.correlationId);\r\n            serverTokenResponse = response.body;\r\n            serverTokenResponse.status = response.status;\r\n        }\r\n        const responseHandler = new ResponseHandler(this.config.authOptions.clientId, this.cacheManager, this.cryptoUtils, this.logger, this.config.serializableCache, this.config.persistencePlugin);\r\n        responseHandler.validateTokenResponse(serverTokenResponse, refreshAccessToken);\r\n        const tokenResponse = await responseHandler.handleServerTokenResponse(serverTokenResponse, this.authority, reqTimestamp, request);\r\n        return tokenResponse;\r\n    }\r\n    /**\r\n     * generate the request to the server in the acceptable format\r\n     * @param request - CommonClientCredentialRequest provided by the developer\r\n     */\r\n    async createTokenRequestBody(request) {\r\n        const parameters = new Map();\r\n        RequestParameterBuilder.addClientId(parameters, this.config.authOptions.clientId);\r\n        RequestParameterBuilder.addScopes(parameters, request.scopes, false);\r\n        RequestParameterBuilder.addGrantType(parameters, GrantType.CLIENT_CREDENTIALS_GRANT);\r\n        RequestParameterBuilder.addLibraryInfo(parameters, this.config.libraryInfo);\r\n        RequestParameterBuilder.addApplicationTelemetry(parameters, this.config.telemetry.application);\r\n        RequestParameterBuilder.addThrottling(parameters);\r\n        if (this.serverTelemetryManager) {\r\n            RequestParameterBuilder.addServerTelemetry(parameters, this.serverTelemetryManager);\r\n        }\r\n        const correlationId = request.correlationId ||\r\n            this.config.cryptoInterface.createNewGuid();\r\n        RequestParameterBuilder.addCorrelationId(parameters, correlationId);\r\n        if (this.config.clientCredentials.clientSecret) {\r\n            RequestParameterBuilder.addClientSecret(parameters, this.config.clientCredentials.clientSecret);\r\n        }\r\n        // Use clientAssertion from request, fallback to client assertion in base configuration\r\n        const clientAssertion = request.clientAssertion ||\r\n            this.config.clientCredentials.clientAssertion;\r\n        if (clientAssertion) {\r\n            RequestParameterBuilder.addClientAssertion(parameters, await getClientAssertion(clientAssertion.assertion, this.config.authOptions.clientId, request.resourceRequestUri));\r\n            RequestParameterBuilder.addClientAssertionType(parameters, clientAssertion.assertionType);\r\n        }\r\n        if (!StringUtils.isEmptyObj(request.claims) ||\r\n            (this.config.authOptions.clientCapabilities &&\r\n                this.config.authOptions.clientCapabilities.length > 0)) {\r\n            RequestParameterBuilder.addClaims(parameters, request.claims, this.config.authOptions.clientCapabilities);\r\n        }\r\n        return UrlUtils.mapToQueryString(parameters);\r\n    }\r\n}\n\nexport { ClientCredentialClient };\n//# sourceMappingURL=ClientCredentialClient.mjs.map\n","/*! @azure/msal-node v3.7.3 2025-08-27 */\n'use strict';\nimport { BaseClient, ScopeSet, CacheOutcome, createClientAuthError, ClientAuthErrorCodes, TimeUtils, AuthToken, Constants, ResponseHandler, CredentialType, AuthenticationScheme, UrlString, RequestParameterBuilder, GrantType, AADServerParamKeys, getClientAssertion, UrlUtils } from '@azure/msal-common/node';\nimport { EncodingUtils } from '../utils/EncodingUtils.mjs';\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * On-Behalf-Of client\r\n * @public\r\n */\r\nclass OnBehalfOfClient extends BaseClient {\r\n    constructor(configuration) {\r\n        super(configuration);\r\n    }\r\n    /**\r\n     * Public API to acquire tokens with on behalf of flow\r\n     * @param request - developer provided CommonOnBehalfOfRequest\r\n     */\r\n    async acquireToken(request) {\r\n        this.scopeSet = new ScopeSet(request.scopes || []);\r\n        // generate the user_assertion_hash for OBOAssertion\r\n        this.userAssertionHash = await this.cryptoUtils.hashString(request.oboAssertion);\r\n        if (request.skipCache || request.claims) {\r\n            return this.executeTokenRequest(request, this.authority, this.userAssertionHash);\r\n        }\r\n        try {\r\n            return await this.getCachedAuthenticationResult(request);\r\n        }\r\n        catch (e) {\r\n            // Any failure falls back to interactive request, once we implement distributed cache, we plan to handle `createRefreshRequiredError` to refresh using the RT\r\n            return await this.executeTokenRequest(request, this.authority, this.userAssertionHash);\r\n        }\r\n    }\r\n    /**\r\n     * look up cache for tokens\r\n     * Find idtoken in the cache\r\n     * Find accessToken based on user assertion and account info in the cache\r\n     * Please note we are not yet supported OBO tokens refreshed with long lived RT. User will have to send a new assertion if the current access token expires\r\n     * This is to prevent security issues when the assertion changes over time, however, longlived RT helps retaining the session\r\n     * @param request - developer provided CommonOnBehalfOfRequest\r\n     */\r\n    async getCachedAuthenticationResult(request) {\r\n        // look in the cache for the access_token which matches the incoming_assertion\r\n        const cachedAccessToken = this.readAccessTokenFromCacheForOBO(this.config.authOptions.clientId, request);\r\n        if (!cachedAccessToken) {\r\n            // Must refresh due to non-existent access_token.\r\n            this.serverTelemetryManager?.setCacheOutcome(CacheOutcome.NO_CACHED_ACCESS_TOKEN);\r\n            this.logger.info(\"SilentFlowClient:acquireCachedToken - No access token found in cache for the given properties.\");\r\n            throw createClientAuthError(ClientAuthErrorCodes.tokenRefreshRequired);\r\n        }\r\n        else if (TimeUtils.isTokenExpired(cachedAccessToken.expiresOn, this.config.systemOptions.tokenRenewalOffsetSeconds)) {\r\n            // Access token expired, will need to renewed\r\n            this.serverTelemetryManager?.setCacheOutcome(CacheOutcome.CACHED_ACCESS_TOKEN_EXPIRED);\r\n            this.logger.info(`OnbehalfofFlow:getCachedAuthenticationResult - Cached access token is expired or will expire within ${this.config.systemOptions.tokenRenewalOffsetSeconds} seconds.`);\r\n            throw createClientAuthError(ClientAuthErrorCodes.tokenRefreshRequired);\r\n        }\r\n        // fetch the idToken from cache\r\n        const cachedIdToken = this.readIdTokenFromCacheForOBO(cachedAccessToken.homeAccountId, request.correlationId);\r\n        let idTokenClaims;\r\n        let cachedAccount = null;\r\n        if (cachedIdToken) {\r\n            idTokenClaims = AuthToken.extractTokenClaims(cachedIdToken.secret, EncodingUtils.base64Decode);\r\n            const localAccountId = idTokenClaims.oid || idTokenClaims.sub;\r\n            const accountInfo = {\r\n                homeAccountId: cachedIdToken.homeAccountId,\r\n                environment: cachedIdToken.environment,\r\n                tenantId: cachedIdToken.realm,\r\n                username: Constants.EMPTY_STRING,\r\n                localAccountId: localAccountId || Constants.EMPTY_STRING,\r\n            };\r\n            cachedAccount = this.cacheManager.getAccount(this.cacheManager.generateAccountKey(accountInfo), request.correlationId);\r\n        }\r\n        // increment telemetry cache hit counter\r\n        if (this.config.serverTelemetryManager) {\r\n            this.config.serverTelemetryManager.incrementCacheHits();\r\n        }\r\n        return ResponseHandler.generateAuthenticationResult(this.cryptoUtils, this.authority, {\r\n            account: cachedAccount,\r\n            accessToken: cachedAccessToken,\r\n            idToken: cachedIdToken,\r\n            refreshToken: null,\r\n            appMetadata: null,\r\n        }, true, request, idTokenClaims);\r\n    }\r\n    /**\r\n     * read idtoken from cache, this is a specific implementation for OBO as the requirements differ from a generic lookup in the cacheManager\r\n     * Certain use cases of OBO flow do not expect an idToken in the cache/or from the service\r\n     * @param atHomeAccountId - account id\r\n     */\r\n    readIdTokenFromCacheForOBO(atHomeAccountId, correlationId) {\r\n        const idTokenFilter = {\r\n            homeAccountId: atHomeAccountId,\r\n            environment: this.authority.canonicalAuthorityUrlComponents.HostNameAndPort,\r\n            credentialType: CredentialType.ID_TOKEN,\r\n            clientId: this.config.authOptions.clientId,\r\n            realm: this.authority.tenant,\r\n        };\r\n        const idTokenMap = this.cacheManager.getIdTokensByFilter(idTokenFilter, correlationId);\r\n        // When acquiring a token on behalf of an application, there might not be an id token in the cache\r\n        if (Object.values(idTokenMap).length < 1) {\r\n            return null;\r\n        }\r\n        return Object.values(idTokenMap)[0];\r\n    }\r\n    /**\r\n     * Fetches the cached access token based on incoming assertion\r\n     * @param clientId - client id\r\n     * @param request - developer provided CommonOnBehalfOfRequest\r\n     */\r\n    readAccessTokenFromCacheForOBO(clientId, request) {\r\n        const authScheme = request.authenticationScheme || AuthenticationScheme.BEARER;\r\n        /*\r\n         * Distinguish between Bearer and PoP/SSH token cache types\r\n         * Cast to lowercase to handle \"bearer\" from ADFS\r\n         */\r\n        const credentialType = authScheme &&\r\n            authScheme.toLowerCase() !==\r\n                AuthenticationScheme.BEARER.toLowerCase()\r\n            ? CredentialType.ACCESS_TOKEN_WITH_AUTH_SCHEME\r\n            : CredentialType.ACCESS_TOKEN;\r\n        const accessTokenFilter = {\r\n            credentialType: credentialType,\r\n            clientId,\r\n            target: ScopeSet.createSearchScopes(this.scopeSet.asArray()),\r\n            tokenType: authScheme,\r\n            keyId: request.sshKid,\r\n            requestedClaimsHash: request.requestedClaimsHash,\r\n            userAssertionHash: this.userAssertionHash,\r\n        };\r\n        const accessTokens = this.cacheManager.getAccessTokensByFilter(accessTokenFilter, request.correlationId);\r\n        const numAccessTokens = accessTokens.length;\r\n        if (numAccessTokens < 1) {\r\n            return null;\r\n        }\r\n        else if (numAccessTokens > 1) {\r\n            throw createClientAuthError(ClientAuthErrorCodes.multipleMatchingTokens);\r\n        }\r\n        return accessTokens[0];\r\n    }\r\n    /**\r\n     * Make a network call to the server requesting credentials\r\n     * @param request - developer provided CommonOnBehalfOfRequest\r\n     * @param authority - authority object\r\n     */\r\n    async executeTokenRequest(request, authority, userAssertionHash) {\r\n        const queryParametersString = this.createTokenQueryParameters(request);\r\n        const endpoint = UrlString.appendQueryString(authority.tokenEndpoint, queryParametersString);\r\n        const requestBody = await this.createTokenRequestBody(request);\r\n        const headers = this.createTokenRequestHeaders();\r\n        const thumbprint = {\r\n            clientId: this.config.authOptions.clientId,\r\n            authority: request.authority,\r\n            scopes: request.scopes,\r\n            claims: request.claims,\r\n            authenticationScheme: request.authenticationScheme,\r\n            resourceRequestMethod: request.resourceRequestMethod,\r\n            resourceRequestUri: request.resourceRequestUri,\r\n            shrClaims: request.shrClaims,\r\n            sshKid: request.sshKid,\r\n        };\r\n        const reqTimestamp = TimeUtils.nowSeconds();\r\n        const response = await this.executePostToTokenEndpoint(endpoint, requestBody, headers, thumbprint, request.correlationId);\r\n        const responseHandler = new ResponseHandler(this.config.authOptions.clientId, this.cacheManager, this.cryptoUtils, this.logger, this.config.serializableCache, this.config.persistencePlugin);\r\n        responseHandler.validateTokenResponse(response.body);\r\n        const tokenResponse = await responseHandler.handleServerTokenResponse(response.body, this.authority, reqTimestamp, request, undefined, userAssertionHash);\r\n        return tokenResponse;\r\n    }\r\n    /**\r\n     * generate a server request in accepable format\r\n     * @param request - developer provided CommonOnBehalfOfRequest\r\n     */\r\n    async createTokenRequestBody(request) {\r\n        const parameters = new Map();\r\n        RequestParameterBuilder.addClientId(parameters, this.config.authOptions.clientId);\r\n        RequestParameterBuilder.addScopes(parameters, request.scopes);\r\n        RequestParameterBuilder.addGrantType(parameters, GrantType.JWT_BEARER);\r\n        RequestParameterBuilder.addClientInfo(parameters);\r\n        RequestParameterBuilder.addLibraryInfo(parameters, this.config.libraryInfo);\r\n        RequestParameterBuilder.addApplicationTelemetry(parameters, this.config.telemetry.application);\r\n        RequestParameterBuilder.addThrottling(parameters);\r\n        if (this.serverTelemetryManager) {\r\n            RequestParameterBuilder.addServerTelemetry(parameters, this.serverTelemetryManager);\r\n        }\r\n        const correlationId = request.correlationId ||\r\n            this.config.cryptoInterface.createNewGuid();\r\n        RequestParameterBuilder.addCorrelationId(parameters, correlationId);\r\n        RequestParameterBuilder.addRequestTokenUse(parameters, AADServerParamKeys.ON_BEHALF_OF);\r\n        RequestParameterBuilder.addOboAssertion(parameters, request.oboAssertion);\r\n        if (this.config.clientCredentials.clientSecret) {\r\n            RequestParameterBuilder.addClientSecret(parameters, this.config.clientCredentials.clientSecret);\r\n        }\r\n        const clientAssertion = this.config.clientCredentials.clientAssertion;\r\n        if (clientAssertion) {\r\n            RequestParameterBuilder.addClientAssertion(parameters, await getClientAssertion(clientAssertion.assertion, this.config.authOptions.clientId, request.resourceRequestUri));\r\n            RequestParameterBuilder.addClientAssertionType(parameters, clientAssertion.assertionType);\r\n        }\r\n        if (request.claims ||\r\n            (this.config.authOptions.clientCapabilities &&\r\n                this.config.authOptions.clientCapabilities.length > 0)) {\r\n            RequestParameterBuilder.addClaims(parameters, request.claims, this.config.authOptions.clientCapabilities);\r\n        }\r\n        return UrlUtils.mapToQueryString(parameters);\r\n    }\r\n}\n\nexport { OnBehalfOfClient };\n//# sourceMappingURL=OnBehalfOfClient.mjs.map\n","/*! @azure/msal-node v3.7.3 2025-08-27 */\n'use strict';\nimport { ClientApplication } from './ClientApplication.mjs';\nimport { ClientAssertion } from './ClientAssertion.mjs';\nimport { Constants, MSAL_FORCE_REGION, REGION_ENVIRONMENT_VARIABLE, ApiId } from '../utils/Constants.mjs';\nimport { createClientAuthError, ClientAuthErrorCodes, getClientAssertion, OIDC_DEFAULT_SCOPES, UrlString, AADAuthorityConstants, AuthError } from '@azure/msal-common/node';\nimport { ClientCredentialClient } from './ClientCredentialClient.mjs';\nimport { OnBehalfOfClient } from './OnBehalfOfClient.mjs';\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n// AADAuthorityConstants\r\n/**\r\n *  This class is to be used to acquire tokens for confidential client applications (webApp, webAPI). Confidential client applications\r\n *  will configure application secrets, client certificates/assertions as applicable\r\n * @public\r\n */\r\nclass ConfidentialClientApplication extends ClientApplication {\r\n    /**\r\n     * Constructor for the ConfidentialClientApplication\r\n     *\r\n     * Required attributes in the Configuration object are:\r\n     * - clientID: the application ID of your application. You can obtain one by registering your application with our application registration portal\r\n     * - authority: the authority URL for your application.\r\n     * - client credential: Must set either client secret, certificate, or assertion for confidential clients. You can obtain a client secret from the application registration portal.\r\n     *\r\n     * In Azure AD, authority is a URL indicating of the form https://login.microsoftonline.com/\\{Enter_the_Tenant_Info_Here\\}.\r\n     * If your application supports Accounts in one organizational directory, replace \"Enter_the_Tenant_Info_Here\" value with the Tenant Id or Tenant name (for example, contoso.microsoft.com).\r\n     * If your application supports Accounts in any organizational directory, replace \"Enter_the_Tenant_Info_Here\" value with organizations.\r\n     * If your application supports Accounts in any organizational directory and personal Microsoft accounts, replace \"Enter_the_Tenant_Info_Here\" value with common.\r\n     * To restrict support to Personal Microsoft accounts only, replace \"Enter_the_Tenant_Info_Here\" value with consumers.\r\n     *\r\n     * In Azure B2C, authority is of the form https://\\{instance\\}/tfp/\\{tenant\\}/\\{policyName\\}/\r\n     * Full B2C functionality will be available in this library in future versions.\r\n     *\r\n     * @param Configuration - configuration object for the MSAL ConfidentialClientApplication instance\r\n     */\r\n    constructor(configuration) {\r\n        super(configuration);\r\n        const clientSecretNotEmpty = !!this.config.auth.clientSecret;\r\n        const clientAssertionNotEmpty = !!this.config.auth.clientAssertion;\r\n        const certificateNotEmpty = (!!this.config.auth.clientCertificate?.thumbprint ||\r\n            !!this.config.auth.clientCertificate?.thumbprintSha256) &&\r\n            !!this.config.auth.clientCertificate?.privateKey;\r\n        /*\r\n         * If app developer configures this callback, they don't need a credential\r\n         * i.e. AzureSDK can get token from Managed Identity without a cert / secret\r\n         */\r\n        if (this.appTokenProvider) {\r\n            return;\r\n        }\r\n        // Check that at most one credential is set on the application\r\n        if ((clientSecretNotEmpty && clientAssertionNotEmpty) ||\r\n            (clientAssertionNotEmpty && certificateNotEmpty) ||\r\n            (clientSecretNotEmpty && certificateNotEmpty)) {\r\n            throw createClientAuthError(ClientAuthErrorCodes.invalidClientCredential);\r\n        }\r\n        if (this.config.auth.clientSecret) {\r\n            this.clientSecret = this.config.auth.clientSecret;\r\n            return;\r\n        }\r\n        if (this.config.auth.clientAssertion) {\r\n            this.developerProvidedClientAssertion =\r\n                this.config.auth.clientAssertion;\r\n            return;\r\n        }\r\n        if (!certificateNotEmpty) {\r\n            throw createClientAuthError(ClientAuthErrorCodes.invalidClientCredential);\r\n        }\r\n        else {\r\n            this.clientAssertion = !!this.config.auth.clientCertificate\r\n                .thumbprintSha256\r\n                ? ClientAssertion.fromCertificateWithSha256Thumbprint(this.config.auth.clientCertificate.thumbprintSha256, this.config.auth.clientCertificate.privateKey, this.config.auth.clientCertificate.x5c)\r\n                : ClientAssertion.fromCertificate(\r\n                // guaranteed to be a string, due to prior error checking in this function\r\n                this.config.auth.clientCertificate.thumbprint, this.config.auth.clientCertificate.privateKey, this.config.auth.clientCertificate.x5c);\r\n        }\r\n        this.appTokenProvider = undefined;\r\n    }\r\n    /**\r\n     * This extensibility point only works for the client_credential flow, i.e. acquireTokenByClientCredential and\r\n     * is meant for Azure SDK to enhance Managed Identity support.\r\n     *\r\n     * @param IAppTokenProvider  - Extensibility interface, which allows the app developer to return a token from a custom source.\r\n     */\r\n    SetAppTokenProvider(provider) {\r\n        this.appTokenProvider = provider;\r\n    }\r\n    /**\r\n     * Acquires tokens from the authority for the application (not for an end user).\r\n     */\r\n    async acquireTokenByClientCredential(request) {\r\n        this.logger.info(\"acquireTokenByClientCredential called\", request.correlationId);\r\n        // If there is a client assertion present in the request, it overrides the one present in the client configuration\r\n        let clientAssertion;\r\n        if (request.clientAssertion) {\r\n            clientAssertion = {\r\n                assertion: await getClientAssertion(request.clientAssertion, this.config.auth.clientId\r\n                // tokenEndpoint will be undefined. resourceRequestUri is omitted in ClientCredentialRequest\r\n                ),\r\n                assertionType: Constants.JWT_BEARER_ASSERTION_TYPE,\r\n            };\r\n        }\r\n        const baseRequest = await this.initializeBaseRequest(request);\r\n        // valid base request should not contain oidc scopes in this grant type\r\n        const validBaseRequest = {\r\n            ...baseRequest,\r\n            scopes: baseRequest.scopes.filter((scope) => !OIDC_DEFAULT_SCOPES.includes(scope)),\r\n        };\r\n        const validRequest = {\r\n            ...request,\r\n            ...validBaseRequest,\r\n            clientAssertion,\r\n        };\r\n        /*\r\n         * valid request should not have \"common\" or \"organizations\" in lieu of the tenant_id in the authority in the auth configuration\r\n         * example authority: \"https://login.microsoftonline.com/TenantId\",\r\n         */\r\n        const authority = new UrlString(validRequest.authority);\r\n        const tenantId = authority.getUrlComponents().PathSegments[0];\r\n        if (Object.values(AADAuthorityConstants).includes(tenantId)) {\r\n            throw createClientAuthError(ClientAuthErrorCodes.missingTenantIdError);\r\n        }\r\n        /*\r\n         * if this env variable is set, and the developer provided region isn't defined and isn't \"DisableMsalForceRegion\",\r\n         * MSAL shall opt-in to ESTS-R with the value of this variable\r\n         */\r\n        const ENV_MSAL_FORCE_REGION = process.env[MSAL_FORCE_REGION];\r\n        let region;\r\n        if (validRequest.azureRegion !== \"DisableMsalForceRegion\") {\r\n            if (!validRequest.azureRegion && ENV_MSAL_FORCE_REGION) {\r\n                region = ENV_MSAL_FORCE_REGION;\r\n            }\r\n            else {\r\n                region = validRequest.azureRegion;\r\n            }\r\n        }\r\n        const azureRegionConfiguration = {\r\n            azureRegion: region,\r\n            environmentRegion: process.env[REGION_ENVIRONMENT_VARIABLE],\r\n        };\r\n        const serverTelemetryManager = this.initializeServerTelemetryManager(ApiId.acquireTokenByClientCredential, validRequest.correlationId, validRequest.skipCache);\r\n        try {\r\n            const discoveredAuthority = await this.createAuthority(validRequest.authority, validRequest.correlationId, azureRegionConfiguration, request.azureCloudOptions);\r\n            const clientCredentialConfig = await this.buildOauthClientConfiguration(discoveredAuthority, validRequest.correlationId, \"\", serverTelemetryManager);\r\n            const clientCredentialClient = new ClientCredentialClient(clientCredentialConfig, this.appTokenProvider);\r\n            this.logger.verbose(\"Client credential client created\", validRequest.correlationId);\r\n            return await clientCredentialClient.acquireToken(validRequest);\r\n        }\r\n        catch (e) {\r\n            if (e instanceof AuthError) {\r\n                e.setCorrelationId(validRequest.correlationId);\r\n            }\r\n            serverTelemetryManager.cacheFailedRequest(e);\r\n            throw e;\r\n        }\r\n    }\r\n    /**\r\n     * Acquires tokens from the authority for the application.\r\n     *\r\n     * Used in scenarios where the current app is a middle-tier service which was called with a token\r\n     * representing an end user. The current app can use the token (oboAssertion) to request another\r\n     * token to access downstream web API, on behalf of that user.\r\n     *\r\n     * The current middle-tier app has no user interaction to obtain consent.\r\n     * See how to gain consent upfront for your middle-tier app from this article.\r\n     * https://docs.microsoft.com/en-us/azure/active-directory/develop/v2-oauth2-on-behalf-of-flow#gaining-consent-for-the-middle-tier-application\r\n     */\r\n    async acquireTokenOnBehalfOf(request) {\r\n        this.logger.info(\"acquireTokenOnBehalfOf called\", request.correlationId);\r\n        const validRequest = {\r\n            ...request,\r\n            ...(await this.initializeBaseRequest(request)),\r\n        };\r\n        try {\r\n            const discoveredAuthority = await this.createAuthority(validRequest.authority, validRequest.correlationId, undefined, request.azureCloudOptions);\r\n            const onBehalfOfConfig = await this.buildOauthClientConfiguration(discoveredAuthority, validRequest.correlationId, \"\", undefined);\r\n            const oboClient = new OnBehalfOfClient(onBehalfOfConfig);\r\n            this.logger.verbose(\"On behalf of client created\", validRequest.correlationId);\r\n            return await oboClient.acquireToken(validRequest);\r\n        }\r\n        catch (e) {\r\n            if (e instanceof AuthError) {\r\n                e.setCorrelationId(validRequest.correlationId);\r\n            }\r\n            throw e;\r\n        }\r\n    }\r\n}\n\nexport { ConfidentialClientApplication };\n//# sourceMappingURL=ConfidentialClientApplication.mjs.map\n","/*! @azure/msal-node v3.7.3 2025-08-27 */\n'use strict';\nimport { HeaderNames } from '@azure/msal-common/node';\nimport { HttpMethod } from '../utils/Constants.mjs';\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nclass HttpClientWithRetries {\r\n    constructor(httpClientNoRetries, retryPolicy, logger) {\r\n        this.httpClientNoRetries = httpClientNoRetries;\r\n        this.retryPolicy = retryPolicy;\r\n        this.logger = logger;\r\n    }\r\n    async sendNetworkRequestAsyncHelper(httpMethod, url, options) {\r\n        if (httpMethod === HttpMethod.GET) {\r\n            return this.httpClientNoRetries.sendGetRequestAsync(url, options);\r\n        }\r\n        else {\r\n            return this.httpClientNoRetries.sendPostRequestAsync(url, options);\r\n        }\r\n    }\r\n    async sendNetworkRequestAsync(httpMethod, url, options) {\r\n        // the underlying network module (custom or HttpClient) will make the call\r\n        let response = await this.sendNetworkRequestAsyncHelper(httpMethod, url, options);\r\n        if (\"isNewRequest\" in this.retryPolicy) {\r\n            this.retryPolicy.isNewRequest = true;\r\n        }\r\n        let currentRetry = 0;\r\n        while (await this.retryPolicy.pauseForRetry(response.status, currentRetry, this.logger, response.headers[HeaderNames.RETRY_AFTER])) {\r\n            response = await this.sendNetworkRequestAsyncHelper(httpMethod, url, options);\r\n            currentRetry++;\r\n        }\r\n        return response;\r\n    }\r\n    async sendGetRequestAsync(url, options) {\r\n        return this.sendNetworkRequestAsync(HttpMethod.GET, url, options);\r\n    }\r\n    async sendPostRequestAsync(url, options) {\r\n        return this.sendNetworkRequestAsync(HttpMethod.POST, url, options);\r\n    }\r\n}\n\nexport { HttpClientWithRetries };\n//# sourceMappingURL=HttpClientWithRetries.mjs.map\n","/*! @azure/msal-node v3.7.3 2025-08-27 */\n'use strict';\nimport { TimeUtils, Constants, HeaderNames, AuthError, createClientAuthError, ClientAuthErrorCodes, ResponseHandler, UrlString } from '@azure/msal-common/node';\nimport { ManagedIdentityQueryParameters, HttpMethod, ManagedIdentityIdType } from '../../utils/Constants.mjs';\nimport { createManagedIdentityError } from '../../error/ManagedIdentityError.mjs';\nimport { isIso8601 } from '../../utils/TimeUtils.mjs';\nimport { HttpClientWithRetries } from '../../network/HttpClientWithRetries.mjs';\nimport { invalidManagedIdentityIdType, MsiEnvironmentVariableUrlMalformedErrorCodes } from '../../error/ManagedIdentityErrorCodes.mjs';\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * Managed Identity User Assigned Id Query Parameter Names\r\n */\r\nconst ManagedIdentityUserAssignedIdQueryParameterNames = {\r\n    MANAGED_IDENTITY_CLIENT_ID_2017: \"clientid\",\r\n    MANAGED_IDENTITY_CLIENT_ID: \"client_id\",\r\n    MANAGED_IDENTITY_OBJECT_ID: \"object_id\",\r\n    MANAGED_IDENTITY_RESOURCE_ID_IMDS: \"msi_res_id\",\r\n    MANAGED_IDENTITY_RESOURCE_ID_NON_IMDS: \"mi_res_id\",\r\n};\r\nclass BaseManagedIdentitySource {\r\n    constructor(logger, nodeStorage, networkClient, cryptoProvider, disableInternalRetries) {\r\n        this.logger = logger;\r\n        this.nodeStorage = nodeStorage;\r\n        this.networkClient = networkClient;\r\n        this.cryptoProvider = cryptoProvider;\r\n        this.disableInternalRetries = disableInternalRetries;\r\n    }\r\n    async getServerTokenResponseAsync(response, \r\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n    _networkClient, \r\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n    _networkRequest, \r\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n    _networkRequestOptions) {\r\n        return this.getServerTokenResponse(response);\r\n    }\r\n    getServerTokenResponse(response) {\r\n        let refreshIn, expiresIn;\r\n        if (response.body.expires_on) {\r\n            // if the expires_on field in the response body is a string and in ISO 8601 format, convert it to a Unix timestamp (seconds since epoch)\r\n            if (isIso8601(response.body.expires_on)) {\r\n                response.body.expires_on =\r\n                    new Date(response.body.expires_on).getTime() / 1000;\r\n            }\r\n            expiresIn = response.body.expires_on - TimeUtils.nowSeconds();\r\n            // compute refresh_in as 1/2 of expires_in, but only if expires_in > 2h\r\n            if (expiresIn > 2 * 3600) {\r\n                refreshIn = expiresIn / 2;\r\n            }\r\n        }\r\n        const serverTokenResponse = {\r\n            status: response.status,\r\n            // success\r\n            access_token: response.body.access_token,\r\n            expires_in: expiresIn,\r\n            scope: response.body.resource,\r\n            token_type: response.body.token_type,\r\n            refresh_in: refreshIn,\r\n            // error\r\n            correlation_id: response.body.correlation_id || response.body.correlationId,\r\n            error: typeof response.body.error === \"string\"\r\n                ? response.body.error\r\n                : response.body.error?.code,\r\n            error_description: response.body.message ||\r\n                (typeof response.body.error === \"string\"\r\n                    ? response.body.error_description\r\n                    : response.body.error?.message),\r\n            error_codes: response.body.error_codes,\r\n            timestamp: response.body.timestamp,\r\n            trace_id: response.body.trace_id,\r\n        };\r\n        return serverTokenResponse;\r\n    }\r\n    async acquireTokenWithManagedIdentity(managedIdentityRequest, managedIdentityId, fakeAuthority, refreshAccessToken) {\r\n        const networkRequest = this.createRequest(managedIdentityRequest.resource, managedIdentityId);\r\n        if (managedIdentityRequest.revokedTokenSha256Hash) {\r\n            this.logger.info(`[Managed Identity] The following claims are present in the request: ${managedIdentityRequest.claims}`);\r\n            networkRequest.queryParameters[ManagedIdentityQueryParameters.SHA256_TOKEN_TO_REFRESH] = managedIdentityRequest.revokedTokenSha256Hash;\r\n        }\r\n        if (managedIdentityRequest.clientCapabilities?.length) {\r\n            const clientCapabilities = managedIdentityRequest.clientCapabilities.toString();\r\n            this.logger.info(`[Managed Identity] The following client capabilities are present in the request: ${clientCapabilities}`);\r\n            networkRequest.queryParameters[ManagedIdentityQueryParameters.XMS_CC] = clientCapabilities;\r\n        }\r\n        const headers = networkRequest.headers;\r\n        headers[HeaderNames.CONTENT_TYPE] = Constants.URL_FORM_CONTENT_TYPE;\r\n        const networkRequestOptions = { headers };\r\n        if (Object.keys(networkRequest.bodyParameters).length) {\r\n            networkRequestOptions.body =\r\n                networkRequest.computeParametersBodyString();\r\n        }\r\n        /**\r\n         * Initializes the network client helper based on the retry policy configuration.\r\n         * If internal retries are disabled, it uses the provided network client directly.\r\n         * Otherwise, it wraps the network client with an HTTP client that supports retries.\r\n         */\r\n        const networkClientHelper = this.disableInternalRetries\r\n            ? this.networkClient\r\n            : new HttpClientWithRetries(this.networkClient, networkRequest.retryPolicy, this.logger);\r\n        const reqTimestamp = TimeUtils.nowSeconds();\r\n        let response;\r\n        try {\r\n            // Sources that send POST requests: Cloud Shell\r\n            if (networkRequest.httpMethod === HttpMethod.POST) {\r\n                response =\r\n                    await networkClientHelper.sendPostRequestAsync(networkRequest.computeUri(), networkRequestOptions);\r\n                // Sources that send GET requests: App Service, Azure Arc, IMDS, Service Fabric\r\n            }\r\n            else {\r\n                response =\r\n                    await networkClientHelper.sendGetRequestAsync(networkRequest.computeUri(), networkRequestOptions);\r\n            }\r\n        }\r\n        catch (error) {\r\n            if (error instanceof AuthError) {\r\n                throw error;\r\n            }\r\n            else {\r\n                throw createClientAuthError(ClientAuthErrorCodes.networkError);\r\n            }\r\n        }\r\n        const responseHandler = new ResponseHandler(managedIdentityId.id, this.nodeStorage, this.cryptoProvider, this.logger, null, null);\r\n        const serverTokenResponse = await this.getServerTokenResponseAsync(response, networkClientHelper, networkRequest, networkRequestOptions);\r\n        responseHandler.validateTokenResponse(serverTokenResponse, refreshAccessToken);\r\n        // caches the token\r\n        return responseHandler.handleServerTokenResponse(serverTokenResponse, fakeAuthority, reqTimestamp, managedIdentityRequest);\r\n    }\r\n    getManagedIdentityUserAssignedIdQueryParameterKey(managedIdentityIdType, isImds, usesApi2017) {\r\n        switch (managedIdentityIdType) {\r\n            case ManagedIdentityIdType.USER_ASSIGNED_CLIENT_ID:\r\n                this.logger.info(`[Managed Identity] [API version ${usesApi2017 ? \"2017+\" : \"2019+\"}] Adding user assigned client id to the request.`);\r\n                // The Machine Learning source uses the 2017-09-01 API version, which uses \"clientid\" instead of \"client_id\"\r\n                return usesApi2017\r\n                    ? ManagedIdentityUserAssignedIdQueryParameterNames.MANAGED_IDENTITY_CLIENT_ID_2017\r\n                    : ManagedIdentityUserAssignedIdQueryParameterNames.MANAGED_IDENTITY_CLIENT_ID;\r\n            case ManagedIdentityIdType.USER_ASSIGNED_RESOURCE_ID:\r\n                this.logger.info(\"[Managed Identity] Adding user assigned resource id to the request.\");\r\n                return isImds\r\n                    ? ManagedIdentityUserAssignedIdQueryParameterNames.MANAGED_IDENTITY_RESOURCE_ID_IMDS\r\n                    : ManagedIdentityUserAssignedIdQueryParameterNames.MANAGED_IDENTITY_RESOURCE_ID_NON_IMDS;\r\n            case ManagedIdentityIdType.USER_ASSIGNED_OBJECT_ID:\r\n                this.logger.info(\"[Managed Identity] Adding user assigned object id to the request.\");\r\n                return ManagedIdentityUserAssignedIdQueryParameterNames.MANAGED_IDENTITY_OBJECT_ID;\r\n            default:\r\n                throw createManagedIdentityError(invalidManagedIdentityIdType);\r\n        }\r\n    }\r\n}\r\nBaseManagedIdentitySource.getValidatedEnvVariableUrlString = (envVariableStringName, envVariable, sourceName, logger) => {\r\n    try {\r\n        return new UrlString(envVariable).urlString;\r\n    }\r\n    catch (error) {\r\n        logger.info(`[Managed Identity] ${sourceName} managed identity is unavailable because the '${envVariableStringName}' environment variable is malformed.`);\r\n        throw createManagedIdentityError(MsiEnvironmentVariableUrlMalformedErrorCodes[envVariableStringName]);\r\n    }\r\n};\n\nexport { BaseManagedIdentitySource, ManagedIdentityUserAssignedIdQueryParameterNames };\n//# sourceMappingURL=BaseManagedIdentitySource.mjs.map\n","/*! @azure/msal-node v3.7.3 2025-08-27 */\n'use strict';\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * @internal\r\n * Checks if a given date string is in ISO 8601 format.\r\n *\r\n * @param dateString - The date string to be checked.\r\n * @returns boolean - Returns true if the date string is in ISO 8601 format, otherwise false.\r\n */\r\nfunction isIso8601(dateString) {\r\n    if (typeof dateString !== \"string\") {\r\n        return false;\r\n    }\r\n    const date = new Date(dateString);\r\n    return !isNaN(date.getTime()) && date.toISOString() === dateString;\r\n}\n\nexport { isIso8601 };\n//# sourceMappingURL=TimeUtils.mjs.map\n","/*! @azure/msal-node v3.7.3 2025-08-27 */\n'use strict';\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nclass LinearRetryStrategy {\r\n    /**\r\n     * Calculates the number of milliseconds to sleep based on the `retry-after` HTTP header.\r\n     *\r\n     * @param retryHeader - The value of the `retry-after` HTTP header. This can be either a number of seconds\r\n     *                      or an HTTP date string.\r\n     * @returns The number of milliseconds to sleep before retrying the request. If the `retry-after` header is not\r\n     *          present or cannot be parsed, returns 0.\r\n     */\r\n    calculateDelay(retryHeader, minimumDelay) {\r\n        if (!retryHeader) {\r\n            return minimumDelay;\r\n        }\r\n        // retry-after header is in seconds\r\n        let millisToSleep = Math.round(parseFloat(retryHeader) * 1000);\r\n        /*\r\n         * retry-after header is in HTTP Date format\r\n         * <day-name>, <day> <month> <year> <hour>:<minute>:<second> GMT\r\n         */\r\n        if (isNaN(millisToSleep)) {\r\n            // .valueOf() is needed to subtract dates in TypeScript\r\n            millisToSleep =\r\n                new Date(retryHeader).valueOf() - new Date().valueOf();\r\n        }\r\n        return Math.max(minimumDelay, millisToSleep);\r\n    }\r\n}\n\nexport { LinearRetryStrategy };\n//# sourceMappingURL=LinearRetryStrategy.mjs.map\n","/*! @azure/msal-node v3.7.3 2025-08-27 */\n'use strict';\nimport { HttpStatus } from '@azure/msal-common';\nimport { LinearRetryStrategy } from './LinearRetryStrategy.mjs';\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nconst DEFAULT_MANAGED_IDENTITY_MAX_RETRIES = 3; // referenced in unit test\r\nconst DEFAULT_MANAGED_IDENTITY_RETRY_DELAY_MS = 1000;\r\nconst DEFAULT_MANAGED_IDENTITY_HTTP_STATUS_CODES_TO_RETRY_ON = [\r\n    HttpStatus.NOT_FOUND,\r\n    HttpStatus.REQUEST_TIMEOUT,\r\n    HttpStatus.TOO_MANY_REQUESTS,\r\n    HttpStatus.SERVER_ERROR,\r\n    HttpStatus.SERVICE_UNAVAILABLE,\r\n    HttpStatus.GATEWAY_TIMEOUT,\r\n];\r\nclass DefaultManagedIdentityRetryPolicy {\r\n    constructor() {\r\n        this.linearRetryStrategy = new LinearRetryStrategy();\r\n    }\r\n    /*\r\n     * this is defined here as a static variable despite being defined as a constant outside of the\r\n     * class because it needs to be overridden in the unit tests so that the unit tests run faster\r\n     */\r\n    static get DEFAULT_MANAGED_IDENTITY_RETRY_DELAY_MS() {\r\n        return DEFAULT_MANAGED_IDENTITY_RETRY_DELAY_MS;\r\n    }\r\n    async pauseForRetry(httpStatusCode, currentRetry, logger, retryAfterHeader) {\r\n        if (DEFAULT_MANAGED_IDENTITY_HTTP_STATUS_CODES_TO_RETRY_ON.includes(httpStatusCode) &&\r\n            currentRetry < DEFAULT_MANAGED_IDENTITY_MAX_RETRIES) {\r\n            const retryAfterDelay = this.linearRetryStrategy.calculateDelay(retryAfterHeader, DefaultManagedIdentityRetryPolicy.DEFAULT_MANAGED_IDENTITY_RETRY_DELAY_MS);\r\n            logger.verbose(`Retrying request in ${retryAfterDelay}ms (retry attempt: ${currentRetry + 1})`);\r\n            // pause execution for the calculated delay\r\n            await new Promise((resolve) => {\r\n                // retryAfterHeader value of 0 evaluates to false, and DEFAULT_MANAGED_IDENTITY_RETRY_DELAY_MS will be used\r\n                return setTimeout(resolve, retryAfterDelay);\r\n            });\r\n            return true;\r\n        }\r\n        // if the status code is not retriable or max retries have been reached, do not retry\r\n        return false;\r\n    }\r\n}\n\nexport { DEFAULT_MANAGED_IDENTITY_MAX_RETRIES, DefaultManagedIdentityRetryPolicy };\n//# sourceMappingURL=DefaultManagedIdentityRetryPolicy.mjs.map\n","/*! @azure/msal-node v3.7.3 2025-08-27 */\n'use strict';\nimport { RequestParameterBuilder, UrlUtils, UrlString } from '@azure/msal-common/node';\nimport { DefaultManagedIdentityRetryPolicy } from '../retry/DefaultManagedIdentityRetryPolicy.mjs';\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nclass ManagedIdentityRequestParameters {\r\n    constructor(httpMethod, endpoint, retryPolicy) {\r\n        this.httpMethod = httpMethod;\r\n        this._baseEndpoint = endpoint;\r\n        this.headers = {};\r\n        this.bodyParameters = {};\r\n        this.queryParameters = {};\r\n        this.retryPolicy =\r\n            retryPolicy || new DefaultManagedIdentityRetryPolicy();\r\n    }\r\n    computeUri() {\r\n        const parameters = new Map();\r\n        if (this.queryParameters) {\r\n            RequestParameterBuilder.addExtraQueryParameters(parameters, this.queryParameters);\r\n        }\r\n        const queryParametersString = UrlUtils.mapToQueryString(parameters);\r\n        return UrlString.appendQueryString(this._baseEndpoint, queryParametersString);\r\n    }\r\n    computeParametersBodyString() {\r\n        const parameters = new Map();\r\n        if (this.bodyParameters) {\r\n            RequestParameterBuilder.addExtraQueryParameters(parameters, this.bodyParameters);\r\n        }\r\n        return UrlUtils.mapToQueryString(parameters);\r\n    }\r\n}\n\nexport { ManagedIdentityRequestParameters };\n//# sourceMappingURL=ManagedIdentityRequestParameters.mjs.map\n","/*! @azure/msal-node v3.7.3 2025-08-27 */\n'use strict';\nimport { BaseManagedIdentitySource } from './BaseManagedIdentitySource.mjs';\nimport { ManagedIdentityEnvironmentVariableNames, ManagedIdentitySourceNames, ManagedIdentityHeaders, ManagedIdentityQueryParameters, ManagedIdentityIdType, HttpMethod } from '../../utils/Constants.mjs';\nimport { ManagedIdentityRequestParameters } from '../../config/ManagedIdentityRequestParameters.mjs';\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n// MSI Constants. Docs for MSI are available here https://docs.microsoft.com/azure/app-service/overview-managed-identity\r\nconst APP_SERVICE_MSI_API_VERSION = \"2019-08-01\";\r\n/**\r\n * Original source of code: https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/identity/Azure.Identity/src/AppServiceManagedIdentitySource.cs\r\n */\r\nclass AppService extends BaseManagedIdentitySource {\r\n    constructor(logger, nodeStorage, networkClient, cryptoProvider, disableInternalRetries, identityEndpoint, identityHeader) {\r\n        super(logger, nodeStorage, networkClient, cryptoProvider, disableInternalRetries);\r\n        this.identityEndpoint = identityEndpoint;\r\n        this.identityHeader = identityHeader;\r\n    }\r\n    static getEnvironmentVariables() {\r\n        const identityEndpoint = process.env[ManagedIdentityEnvironmentVariableNames.IDENTITY_ENDPOINT];\r\n        const identityHeader = process.env[ManagedIdentityEnvironmentVariableNames.IDENTITY_HEADER];\r\n        return [identityEndpoint, identityHeader];\r\n    }\r\n    static tryCreate(logger, nodeStorage, networkClient, cryptoProvider, disableInternalRetries) {\r\n        const [identityEndpoint, identityHeader] = AppService.getEnvironmentVariables();\r\n        // if either of the identity endpoint or identity header variables are undefined, this MSI provider is unavailable.\r\n        if (!identityEndpoint || !identityHeader) {\r\n            logger.info(`[Managed Identity] ${ManagedIdentitySourceNames.APP_SERVICE} managed identity is unavailable because one or both of the '${ManagedIdentityEnvironmentVariableNames.IDENTITY_HEADER}' and '${ManagedIdentityEnvironmentVariableNames.IDENTITY_ENDPOINT}' environment variables are not defined.`);\r\n            return null;\r\n        }\r\n        const validatedIdentityEndpoint = AppService.getValidatedEnvVariableUrlString(ManagedIdentityEnvironmentVariableNames.IDENTITY_ENDPOINT, identityEndpoint, ManagedIdentitySourceNames.APP_SERVICE, logger);\r\n        logger.info(`[Managed Identity] Environment variables validation passed for ${ManagedIdentitySourceNames.APP_SERVICE} managed identity. Endpoint URI: ${validatedIdentityEndpoint}. Creating ${ManagedIdentitySourceNames.APP_SERVICE} managed identity.`);\r\n        return new AppService(logger, nodeStorage, networkClient, cryptoProvider, disableInternalRetries, identityEndpoint, identityHeader);\r\n    }\r\n    createRequest(resource, managedIdentityId) {\r\n        const request = new ManagedIdentityRequestParameters(HttpMethod.GET, this.identityEndpoint);\r\n        request.headers[ManagedIdentityHeaders.APP_SERVICE_SECRET_HEADER_NAME] =\r\n            this.identityHeader;\r\n        request.queryParameters[ManagedIdentityQueryParameters.API_VERSION] =\r\n            APP_SERVICE_MSI_API_VERSION;\r\n        request.queryParameters[ManagedIdentityQueryParameters.RESOURCE] =\r\n            resource;\r\n        if (managedIdentityId.idType !== ManagedIdentityIdType.SYSTEM_ASSIGNED) {\r\n            request.queryParameters[this.getManagedIdentityUserAssignedIdQueryParameterKey(managedIdentityId.idType)] = managedIdentityId.id;\r\n        }\r\n        // bodyParameters calculated in BaseManagedIdentity.acquireTokenWithManagedIdentity\r\n        return request;\r\n    }\r\n}\n\nexport { AppService };\n//# sourceMappingURL=AppService.mjs.map\n","/*! @azure/msal-node v3.7.3 2025-08-27 */\n'use strict';\nimport { HttpStatus, EncodingTypes, AuthError, createClientAuthError, ClientAuthErrorCodes } from '@azure/msal-common/node';\nimport { ManagedIdentityRequestParameters } from '../../config/ManagedIdentityRequestParameters.mjs';\nimport { BaseManagedIdentitySource } from './BaseManagedIdentitySource.mjs';\nimport { createManagedIdentityError } from '../../error/ManagedIdentityError.mjs';\nimport { ManagedIdentityEnvironmentVariableNames, ManagedIdentitySourceNames, ManagedIdentityIdType, HttpMethod, ManagedIdentityHeaders, ManagedIdentityQueryParameters, AZURE_ARC_SECRET_FILE_MAX_SIZE_BYTES } from '../../utils/Constants.mjs';\nimport { accessSync, constants, statSync, readFileSync } from 'fs';\nimport path from 'path';\nimport { unableToCreateAzureArc, wwwAuthenticateHeaderMissing, wwwAuthenticateHeaderUnsupportedFormat, platformNotSupported, invalidFileExtension, invalidFilePath, unableToReadSecretFile, invalidSecret } from '../../error/ManagedIdentityErrorCodes.mjs';\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nconst ARC_API_VERSION = \"2019-11-01\";\r\nconst DEFAULT_AZURE_ARC_IDENTITY_ENDPOINT = \"http://127.0.0.1:40342/metadata/identity/oauth2/token\";\r\nconst HIMDS_EXECUTABLE_HELPER_STRING = \"N/A: himds executable exists\";\r\nconst SUPPORTED_AZURE_ARC_PLATFORMS = {\r\n    win32: `${process.env[\"ProgramData\"]}\\\\AzureConnectedMachineAgent\\\\Tokens\\\\`,\r\n    linux: \"/var/opt/azcmagent/tokens/\",\r\n};\r\nconst AZURE_ARC_FILE_DETECTION = {\r\n    win32: `${process.env[\"ProgramFiles\"]}\\\\AzureConnectedMachineAgent\\\\himds.exe`,\r\n    linux: \"/opt/azcmagent/bin/himds\",\r\n};\r\n/**\r\n * Original source of code: https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/identity/Azure.Identity/src/AzureArcManagedIdentitySource.cs\r\n */\r\nclass AzureArc extends BaseManagedIdentitySource {\r\n    constructor(logger, nodeStorage, networkClient, cryptoProvider, disableInternalRetries, identityEndpoint) {\r\n        super(logger, nodeStorage, networkClient, cryptoProvider, disableInternalRetries);\r\n        this.identityEndpoint = identityEndpoint;\r\n    }\r\n    static getEnvironmentVariables() {\r\n        let identityEndpoint = process.env[ManagedIdentityEnvironmentVariableNames.IDENTITY_ENDPOINT];\r\n        let imdsEndpoint = process.env[ManagedIdentityEnvironmentVariableNames.IMDS_ENDPOINT];\r\n        // if either of the identity or imds endpoints are undefined, check if the himds executable exists\r\n        if (!identityEndpoint || !imdsEndpoint) {\r\n            // get the expected Windows or Linux file path of the himds executable\r\n            const fileDetectionPath = AZURE_ARC_FILE_DETECTION[process.platform];\r\n            try {\r\n                /*\r\n                 * check if the himds executable exists and its permissions allow it to be read\r\n                 * returns undefined if true, throws an error otherwise\r\n                 */\r\n                accessSync(fileDetectionPath, constants.F_OK | constants.R_OK);\r\n                identityEndpoint = DEFAULT_AZURE_ARC_IDENTITY_ENDPOINT;\r\n                imdsEndpoint = HIMDS_EXECUTABLE_HELPER_STRING;\r\n            }\r\n            catch (err) {\r\n                /*\r\n                 * do nothing\r\n                 * accessSync returns undefined on success, and throws an error on failure\r\n                 */\r\n            }\r\n        }\r\n        return [identityEndpoint, imdsEndpoint];\r\n    }\r\n    static tryCreate(logger, nodeStorage, networkClient, cryptoProvider, disableInternalRetries, managedIdentityId) {\r\n        const [identityEndpoint, imdsEndpoint] = AzureArc.getEnvironmentVariables();\r\n        // if either of the identity or imds endpoints are undefined (even after himds file detection)\r\n        if (!identityEndpoint || !imdsEndpoint) {\r\n            logger.info(`[Managed Identity] ${ManagedIdentitySourceNames.AZURE_ARC} managed identity is unavailable through environment variables because one or both of '${ManagedIdentityEnvironmentVariableNames.IDENTITY_ENDPOINT}' and '${ManagedIdentityEnvironmentVariableNames.IMDS_ENDPOINT}' are not defined. ${ManagedIdentitySourceNames.AZURE_ARC} managed identity is also unavailable through file detection.`);\r\n            return null;\r\n        }\r\n        // check if the imds endpoint is set to the default for file detection\r\n        if (imdsEndpoint === HIMDS_EXECUTABLE_HELPER_STRING) {\r\n            logger.info(`[Managed Identity] ${ManagedIdentitySourceNames.AZURE_ARC} managed identity is available through file detection. Defaulting to known ${ManagedIdentitySourceNames.AZURE_ARC} endpoint: ${DEFAULT_AZURE_ARC_IDENTITY_ENDPOINT}. Creating ${ManagedIdentitySourceNames.AZURE_ARC} managed identity.`);\r\n        }\r\n        else {\r\n            // otherwise, both the identity and imds endpoints are defined without file detection; validate them\r\n            const validatedIdentityEndpoint = AzureArc.getValidatedEnvVariableUrlString(ManagedIdentityEnvironmentVariableNames.IDENTITY_ENDPOINT, identityEndpoint, ManagedIdentitySourceNames.AZURE_ARC, logger);\r\n            // remove trailing slash\r\n            validatedIdentityEndpoint.endsWith(\"/\")\r\n                ? validatedIdentityEndpoint.slice(0, -1)\r\n                : validatedIdentityEndpoint;\r\n            AzureArc.getValidatedEnvVariableUrlString(ManagedIdentityEnvironmentVariableNames.IMDS_ENDPOINT, imdsEndpoint, ManagedIdentitySourceNames.AZURE_ARC, logger);\r\n            logger.info(`[Managed Identity] Environment variables validation passed for ${ManagedIdentitySourceNames.AZURE_ARC} managed identity. Endpoint URI: ${validatedIdentityEndpoint}. Creating ${ManagedIdentitySourceNames.AZURE_ARC} managed identity.`);\r\n        }\r\n        if (managedIdentityId.idType !== ManagedIdentityIdType.SYSTEM_ASSIGNED) {\r\n            throw createManagedIdentityError(unableToCreateAzureArc);\r\n        }\r\n        return new AzureArc(logger, nodeStorage, networkClient, cryptoProvider, disableInternalRetries, identityEndpoint);\r\n    }\r\n    createRequest(resource) {\r\n        const request = new ManagedIdentityRequestParameters(HttpMethod.GET, this.identityEndpoint.replace(\"localhost\", \"127.0.0.1\"));\r\n        request.headers[ManagedIdentityHeaders.METADATA_HEADER_NAME] = \"true\";\r\n        request.queryParameters[ManagedIdentityQueryParameters.API_VERSION] =\r\n            ARC_API_VERSION;\r\n        request.queryParameters[ManagedIdentityQueryParameters.RESOURCE] =\r\n            resource;\r\n        // bodyParameters calculated in BaseManagedIdentity.acquireTokenWithManagedIdentity\r\n        return request;\r\n    }\r\n    async getServerTokenResponseAsync(originalResponse, networkClient, networkRequest, networkRequestOptions) {\r\n        let retryResponse;\r\n        if (originalResponse.status === HttpStatus.UNAUTHORIZED) {\r\n            const wwwAuthHeader = originalResponse.headers[\"www-authenticate\"];\r\n            if (!wwwAuthHeader) {\r\n                throw createManagedIdentityError(wwwAuthenticateHeaderMissing);\r\n            }\r\n            if (!wwwAuthHeader.includes(\"Basic realm=\")) {\r\n                throw createManagedIdentityError(wwwAuthenticateHeaderUnsupportedFormat);\r\n            }\r\n            const secretFilePath = wwwAuthHeader.split(\"Basic realm=\")[1];\r\n            // throw an error if the managed identity application is not being run on Windows or Linux\r\n            if (!SUPPORTED_AZURE_ARC_PLATFORMS.hasOwnProperty(process.platform)) {\r\n                throw createManagedIdentityError(platformNotSupported);\r\n            }\r\n            // get the expected Windows or Linux file path\r\n            const expectedSecretFilePath = SUPPORTED_AZURE_ARC_PLATFORMS[process.platform];\r\n            // throw an error if the file in the file path is not a .key file\r\n            const fileName = path.basename(secretFilePath);\r\n            if (!fileName.endsWith(\".key\")) {\r\n                throw createManagedIdentityError(invalidFileExtension);\r\n            }\r\n            /*\r\n             * throw an error if the file path from the www-authenticate header does not match the\r\n             * expected file path for the platform (Windows or Linux) the managed identity application\r\n             * is running on\r\n             */\r\n            if (expectedSecretFilePath + fileName !== secretFilePath) {\r\n                throw createManagedIdentityError(invalidFilePath);\r\n            }\r\n            let secretFileSize;\r\n            // attempt to get the secret file's size, in bytes\r\n            try {\r\n                secretFileSize = await statSync(secretFilePath).size;\r\n            }\r\n            catch (e) {\r\n                throw createManagedIdentityError(unableToReadSecretFile);\r\n            }\r\n            // throw an error if the secret file's size is greater than 4096 bytes\r\n            if (secretFileSize > AZURE_ARC_SECRET_FILE_MAX_SIZE_BYTES) {\r\n                throw createManagedIdentityError(invalidSecret);\r\n            }\r\n            // attempt to read the contents of the secret file\r\n            let secret;\r\n            try {\r\n                secret = readFileSync(secretFilePath, EncodingTypes.UTF8);\r\n            }\r\n            catch (e) {\r\n                throw createManagedIdentityError(unableToReadSecretFile);\r\n            }\r\n            const authHeaderValue = `Basic ${secret}`;\r\n            this.logger.info(`[Managed Identity] Adding authorization header to the request.`);\r\n            networkRequest.headers[ManagedIdentityHeaders.AUTHORIZATION_HEADER_NAME] = authHeaderValue;\r\n            try {\r\n                retryResponse =\r\n                    await networkClient.sendGetRequestAsync(networkRequest.computeUri(), networkRequestOptions);\r\n            }\r\n            catch (error) {\r\n                if (error instanceof AuthError) {\r\n                    throw error;\r\n                }\r\n                else {\r\n                    throw createClientAuthError(ClientAuthErrorCodes.networkError);\r\n                }\r\n            }\r\n        }\r\n        return this.getServerTokenResponse(retryResponse || originalResponse);\r\n    }\r\n}\n\nexport { ARC_API_VERSION, AZURE_ARC_FILE_DETECTION, AzureArc, DEFAULT_AZURE_ARC_IDENTITY_ENDPOINT, SUPPORTED_AZURE_ARC_PLATFORMS };\n//# sourceMappingURL=AzureArc.mjs.map\n","/*! @azure/msal-node v3.7.3 2025-08-27 */\n'use strict';\nimport { ManagedIdentityRequestParameters } from '../../config/ManagedIdentityRequestParameters.mjs';\nimport { BaseManagedIdentitySource } from './BaseManagedIdentitySource.mjs';\nimport { ManagedIdentityEnvironmentVariableNames, ManagedIdentitySourceNames, ManagedIdentityIdType, ManagedIdentityHeaders, ManagedIdentityQueryParameters, HttpMethod } from '../../utils/Constants.mjs';\nimport { createManagedIdentityError } from '../../error/ManagedIdentityError.mjs';\nimport { unableToCreateCloudShell } from '../../error/ManagedIdentityErrorCodes.mjs';\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * Original source of code: https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/identity/Azure.Identity/src/CloudShellManagedIdentitySource.cs\r\n */\r\nclass CloudShell extends BaseManagedIdentitySource {\r\n    constructor(logger, nodeStorage, networkClient, cryptoProvider, disableInternalRetries, msiEndpoint) {\r\n        super(logger, nodeStorage, networkClient, cryptoProvider, disableInternalRetries);\r\n        this.msiEndpoint = msiEndpoint;\r\n    }\r\n    static getEnvironmentVariables() {\r\n        const msiEndpoint = process.env[ManagedIdentityEnvironmentVariableNames.MSI_ENDPOINT];\r\n        return [msiEndpoint];\r\n    }\r\n    static tryCreate(logger, nodeStorage, networkClient, cryptoProvider, disableInternalRetries, managedIdentityId) {\r\n        const [msiEndpoint] = CloudShell.getEnvironmentVariables();\r\n        // if the msi endpoint environment variable is undefined, this MSI provider is unavailable.\r\n        if (!msiEndpoint) {\r\n            logger.info(`[Managed Identity] ${ManagedIdentitySourceNames.CLOUD_SHELL} managed identity is unavailable because the '${ManagedIdentityEnvironmentVariableNames.MSI_ENDPOINT} environment variable is not defined.`);\r\n            return null;\r\n        }\r\n        const validatedMsiEndpoint = CloudShell.getValidatedEnvVariableUrlString(ManagedIdentityEnvironmentVariableNames.MSI_ENDPOINT, msiEndpoint, ManagedIdentitySourceNames.CLOUD_SHELL, logger);\r\n        logger.info(`[Managed Identity] Environment variable validation passed for ${ManagedIdentitySourceNames.CLOUD_SHELL} managed identity. Endpoint URI: ${validatedMsiEndpoint}. Creating ${ManagedIdentitySourceNames.CLOUD_SHELL} managed identity.`);\r\n        if (managedIdentityId.idType !== ManagedIdentityIdType.SYSTEM_ASSIGNED) {\r\n            throw createManagedIdentityError(unableToCreateCloudShell);\r\n        }\r\n        return new CloudShell(logger, nodeStorage, networkClient, cryptoProvider, disableInternalRetries, msiEndpoint);\r\n    }\r\n    createRequest(resource) {\r\n        const request = new ManagedIdentityRequestParameters(HttpMethod.POST, this.msiEndpoint);\r\n        request.headers[ManagedIdentityHeaders.METADATA_HEADER_NAME] = \"true\";\r\n        request.bodyParameters[ManagedIdentityQueryParameters.RESOURCE] =\r\n            resource;\r\n        return request;\r\n    }\r\n}\n\nexport { CloudShell };\n//# sourceMappingURL=CloudShell.mjs.map\n","/*! @azure/msal-node v3.7.3 2025-08-27 */\n'use strict';\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nclass ExponentialRetryStrategy {\r\n    constructor(minExponentialBackoff, maxExponentialBackoff, exponentialDeltaBackoff) {\r\n        this.minExponentialBackoff = minExponentialBackoff;\r\n        this.maxExponentialBackoff = maxExponentialBackoff;\r\n        this.exponentialDeltaBackoff = exponentialDeltaBackoff;\r\n    }\r\n    /**\r\n     * Calculates the exponential delay based on the current retry attempt.\r\n     *\r\n     * @param {number} currentRetry - The current retry attempt number.\r\n     * @returns {number} - The calculated exponential delay in milliseconds.\r\n     *\r\n     * The delay is calculated using the formula:\r\n     * - If `currentRetry` is 0, it returns the minimum backoff time.\r\n     * - Otherwise, it calculates the delay as the minimum of:\r\n     *   - `(2^(currentRetry - 1)) * deltaBackoff`\r\n     *   - `maxBackoff`\r\n     *\r\n     * This ensures that the delay increases exponentially with each retry attempt,\r\n     * but does not exceed the maximum backoff time.\r\n     */\r\n    calculateDelay(currentRetry) {\r\n        // Attempt 1\r\n        if (currentRetry === 0) {\r\n            return this.minExponentialBackoff;\r\n        }\r\n        // Attempt 2+\r\n        const exponentialDelay = Math.min(Math.pow(2, currentRetry - 1) * this.exponentialDeltaBackoff, this.maxExponentialBackoff);\r\n        return exponentialDelay;\r\n    }\r\n}\n\nexport { ExponentialRetryStrategy };\n//# sourceMappingURL=ExponentialRetryStrategy.mjs.map\n","/*! @azure/msal-node v3.7.3 2025-08-27 */\n'use strict';\nimport { HttpStatus } from '@azure/msal-common';\nimport { ExponentialRetryStrategy } from './ExponentialRetryStrategy.mjs';\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nconst HTTP_STATUS_400_CODES_FOR_EXPONENTIAL_STRATEGY = [\r\n    HttpStatus.NOT_FOUND,\r\n    HttpStatus.REQUEST_TIMEOUT,\r\n    HttpStatus.GONE,\r\n    HttpStatus.TOO_MANY_REQUESTS,\r\n];\r\nconst EXPONENTIAL_STRATEGY_NUM_RETRIES = 3;\r\nconst LINEAR_STRATEGY_NUM_RETRIES = 7;\r\nconst MIN_EXPONENTIAL_BACKOFF_MS = 1000;\r\nconst MAX_EXPONENTIAL_BACKOFF_MS = 4000;\r\nconst EXPONENTIAL_DELTA_BACKOFF_MS = 2000;\r\nconst HTTP_STATUS_GONE_RETRY_AFTER_MS = 10 * 1000; // 10 seconds\r\nclass ImdsRetryPolicy {\r\n    constructor() {\r\n        this.exponentialRetryStrategy = new ExponentialRetryStrategy(ImdsRetryPolicy.MIN_EXPONENTIAL_BACKOFF_MS, ImdsRetryPolicy.MAX_EXPONENTIAL_BACKOFF_MS, ImdsRetryPolicy.EXPONENTIAL_DELTA_BACKOFF_MS);\r\n    }\r\n    /*\r\n     * these are defined here as static variables despite being defined as constants outside of the\r\n     * class because they need to be overridden in the unit tests so that the unit tests run faster\r\n     */\r\n    static get MIN_EXPONENTIAL_BACKOFF_MS() {\r\n        return MIN_EXPONENTIAL_BACKOFF_MS;\r\n    }\r\n    static get MAX_EXPONENTIAL_BACKOFF_MS() {\r\n        return MAX_EXPONENTIAL_BACKOFF_MS;\r\n    }\r\n    static get EXPONENTIAL_DELTA_BACKOFF_MS() {\r\n        return EXPONENTIAL_DELTA_BACKOFF_MS;\r\n    }\r\n    static get HTTP_STATUS_GONE_RETRY_AFTER_MS() {\r\n        return HTTP_STATUS_GONE_RETRY_AFTER_MS;\r\n    }\r\n    set isNewRequest(value) {\r\n        this._isNewRequest = value;\r\n    }\r\n    /**\r\n     * Pauses execution for a calculated delay before retrying a request.\r\n     *\r\n     * @param httpStatusCode - The HTTP status code of the response.\r\n     * @param currentRetry - The current retry attempt number.\r\n     * @param retryAfterHeader - The value of the \"retry-after\" header from the response.\r\n     * @returns A promise that resolves to a boolean indicating whether a retry should be attempted.\r\n     */\r\n    async pauseForRetry(httpStatusCode, currentRetry, logger) {\r\n        if (this._isNewRequest) {\r\n            this._isNewRequest = false;\r\n            // calculate the maxRetries based on the status code, once per request\r\n            this.maxRetries =\r\n                httpStatusCode === HttpStatus.GONE\r\n                    ? LINEAR_STRATEGY_NUM_RETRIES\r\n                    : EXPONENTIAL_STRATEGY_NUM_RETRIES;\r\n        }\r\n        /**\r\n         * (status code is one of the retriable 400 status code\r\n         * or\r\n         * status code is >= 500 and <= 599)\r\n         * and\r\n         * current count of retries is less than the max number of retries\r\n         */\r\n        if ((HTTP_STATUS_400_CODES_FOR_EXPONENTIAL_STRATEGY.includes(httpStatusCode) ||\r\n            (httpStatusCode >= HttpStatus.SERVER_ERROR_RANGE_START &&\r\n                httpStatusCode <= HttpStatus.SERVER_ERROR_RANGE_END &&\r\n                currentRetry < this.maxRetries)) &&\r\n            currentRetry < this.maxRetries) {\r\n            const retryAfterDelay = httpStatusCode === HttpStatus.GONE\r\n                ? ImdsRetryPolicy.HTTP_STATUS_GONE_RETRY_AFTER_MS\r\n                : this.exponentialRetryStrategy.calculateDelay(currentRetry);\r\n            logger.verbose(`Retrying request in ${retryAfterDelay}ms (retry attempt: ${currentRetry + 1})`);\r\n            // pause execution for the calculated delay\r\n            await new Promise((resolve) => {\r\n                return setTimeout(resolve, retryAfterDelay);\r\n            });\r\n            return true;\r\n        }\r\n        // if the status code is not retriable or max retries have been reached, do not retry\r\n        return false;\r\n    }\r\n}\n\nexport { ImdsRetryPolicy };\n//# sourceMappingURL=ImdsRetryPolicy.mjs.map\n","/*! @azure/msal-node v3.7.3 2025-08-27 */\n'use strict';\nimport { ManagedIdentityRequestParameters } from '../../config/ManagedIdentityRequestParameters.mjs';\nimport { BaseManagedIdentitySource } from './BaseManagedIdentitySource.mjs';\nimport { ManagedIdentityEnvironmentVariableNames, ManagedIdentitySourceNames, ManagedIdentityHeaders, ManagedIdentityQueryParameters, ManagedIdentityIdType, HttpMethod } from '../../utils/Constants.mjs';\nimport { ImdsRetryPolicy } from '../../retry/ImdsRetryPolicy.mjs';\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n// Documentation for IMDS is available at https://docs.microsoft.com/azure/active-directory/managed-identities-azure-resources/how-to-use-vm-token#get-a-token-using-http\r\nconst IMDS_TOKEN_PATH = \"/metadata/identity/oauth2/token\";\r\nconst DEFAULT_IMDS_ENDPOINT = `http://169.254.169.254${IMDS_TOKEN_PATH}`;\r\nconst IMDS_API_VERSION = \"2018-02-01\";\r\n/**\r\n * Original source of code: https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/identity/Azure.Identity/src/ImdsManagedIdentitySource.cs\r\n */\r\nclass Imds extends BaseManagedIdentitySource {\r\n    /**\r\n     * Constructs an Imds instance.\r\n     * @param logger - Logger instance for logging.\r\n     * @param nodeStorage - NodeStorage instance for caching.\r\n     * @param networkClient - Network client for HTTP requests.\r\n     * @param cryptoProvider - CryptoProvider for cryptographic operations.\r\n     * @param disableInternalRetries - Whether to disable internal retry logic.\r\n     * @param identityEndpoint - The IMDS endpoint to use.\r\n     */\r\n    constructor(logger, nodeStorage, networkClient, cryptoProvider, disableInternalRetries, identityEndpoint) {\r\n        super(logger, nodeStorage, networkClient, cryptoProvider, disableInternalRetries);\r\n        this.identityEndpoint = identityEndpoint;\r\n    }\r\n    /**\r\n     * Attempts to create an Imds instance by determining the correct endpoint.\r\n     * If the AZURE_POD_IDENTITY_AUTHORITY_HOST environment variable is set, it uses that as the endpoint.\r\n     * Otherwise, it falls back to the default IMDS endpoint.\r\n     *\r\n     * @param logger - Logger instance for logging.\r\n     * @param nodeStorage - NodeStorage instance for caching.\r\n     * @param networkClient - Network client for HTTP requests.\r\n     * @param cryptoProvider - CryptoProvider for cryptographic operations.\r\n     * @param disableInternalRetries - Whether to disable internal retry logic.\r\n     * @returns An instance of Imds configured with the appropriate endpoint.\r\n     */\r\n    static tryCreate(logger, nodeStorage, networkClient, cryptoProvider, disableInternalRetries) {\r\n        let validatedIdentityEndpoint;\r\n        if (process.env[ManagedIdentityEnvironmentVariableNames\r\n            .AZURE_POD_IDENTITY_AUTHORITY_HOST]) {\r\n            logger.info(`[Managed Identity] Environment variable ${ManagedIdentityEnvironmentVariableNames.AZURE_POD_IDENTITY_AUTHORITY_HOST} for ${ManagedIdentitySourceNames.IMDS} returned endpoint: ${process.env[ManagedIdentityEnvironmentVariableNames\r\n                .AZURE_POD_IDENTITY_AUTHORITY_HOST]}`);\r\n            validatedIdentityEndpoint = Imds.getValidatedEnvVariableUrlString(ManagedIdentityEnvironmentVariableNames.AZURE_POD_IDENTITY_AUTHORITY_HOST, `${process.env[ManagedIdentityEnvironmentVariableNames\r\n                .AZURE_POD_IDENTITY_AUTHORITY_HOST]}${IMDS_TOKEN_PATH}`, ManagedIdentitySourceNames.IMDS, logger);\r\n        }\r\n        else {\r\n            logger.info(`[Managed Identity] Unable to find ${ManagedIdentityEnvironmentVariableNames.AZURE_POD_IDENTITY_AUTHORITY_HOST} environment variable for ${ManagedIdentitySourceNames.IMDS}, using the default endpoint.`);\r\n            validatedIdentityEndpoint = DEFAULT_IMDS_ENDPOINT;\r\n        }\r\n        return new Imds(logger, nodeStorage, networkClient, cryptoProvider, disableInternalRetries, validatedIdentityEndpoint);\r\n    }\r\n    /**\r\n     * Creates a ManagedIdentityRequestParameters object for acquiring a token from IMDS.\r\n     * Sets the required headers and query parameters for the IMDS token request.\r\n     *\r\n     * @param resource - The resource URI for which the token is requested.\r\n     * @param managedIdentityId - The managed identity ID (system-assigned or user-assigned).\r\n     * @returns A ManagedIdentityRequestParameters object configured for IMDS.\r\n     */\r\n    createRequest(resource, managedIdentityId) {\r\n        const request = new ManagedIdentityRequestParameters(HttpMethod.GET, this.identityEndpoint);\r\n        request.headers[ManagedIdentityHeaders.METADATA_HEADER_NAME] = \"true\";\r\n        request.queryParameters[ManagedIdentityQueryParameters.API_VERSION] =\r\n            IMDS_API_VERSION;\r\n        request.queryParameters[ManagedIdentityQueryParameters.RESOURCE] =\r\n            resource;\r\n        if (managedIdentityId.idType !== ManagedIdentityIdType.SYSTEM_ASSIGNED) {\r\n            request.queryParameters[this.getManagedIdentityUserAssignedIdQueryParameterKey(managedIdentityId.idType, true // indicates source is IMDS\r\n            )] = managedIdentityId.id;\r\n        }\r\n        // The bodyParameters are calculated in BaseManagedIdentity.acquireTokenWithManagedIdentity.\r\n        request.retryPolicy = new ImdsRetryPolicy();\r\n        return request;\r\n    }\r\n}\n\nexport { Imds };\n//# sourceMappingURL=Imds.mjs.map\n","/*! @azure/msal-node v3.7.3 2025-08-27 */\n'use strict';\nimport { ManagedIdentityRequestParameters } from '../../config/ManagedIdentityRequestParameters.mjs';\nimport { BaseManagedIdentitySource } from './BaseManagedIdentitySource.mjs';\nimport { ManagedIdentityEnvironmentVariableNames, ManagedIdentitySourceNames, ManagedIdentityIdType, ManagedIdentityHeaders, ManagedIdentityQueryParameters, HttpMethod } from '../../utils/Constants.mjs';\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nconst SERVICE_FABRIC_MSI_API_VERSION = \"2019-07-01-preview\";\r\n/**\r\n * Original source of code: https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/identity/Azure.Identity/src/ServiceFabricManagedIdentitySource.cs\r\n */\r\nclass ServiceFabric extends BaseManagedIdentitySource {\r\n    /**\r\n     * Constructs a new ServiceFabric managed identity source.\r\n     * @param logger Logger instance for logging\r\n     * @param nodeStorage NodeStorage instance for caching\r\n     * @param networkClient Network client for HTTP requests\r\n     * @param cryptoProvider Crypto provider for cryptographic operations\r\n     * @param disableInternalRetries Whether to disable internal retry logic\r\n     * @param identityEndpoint The Service Fabric managed identity endpoint\r\n     * @param identityHeader The Service Fabric managed identity secret header\r\n     */\r\n    constructor(logger, nodeStorage, networkClient, cryptoProvider, disableInternalRetries, identityEndpoint, identityHeader) {\r\n        super(logger, nodeStorage, networkClient, cryptoProvider, disableInternalRetries);\r\n        this.identityEndpoint = identityEndpoint;\r\n        this.identityHeader = identityHeader;\r\n    }\r\n    /**\r\n     * Retrieves the environment variables required for Service Fabric managed identity.\r\n     * @returns An array containing the identity endpoint, identity header, and identity server thumbprint.\r\n     */\r\n    static getEnvironmentVariables() {\r\n        const identityEndpoint = process.env[ManagedIdentityEnvironmentVariableNames.IDENTITY_ENDPOINT];\r\n        const identityHeader = process.env[ManagedIdentityEnvironmentVariableNames.IDENTITY_HEADER];\r\n        const identityServerThumbprint = process.env[ManagedIdentityEnvironmentVariableNames\r\n            .IDENTITY_SERVER_THUMBPRINT];\r\n        return [identityEndpoint, identityHeader, identityServerThumbprint];\r\n    }\r\n    /**\r\n     * Attempts to create a ServiceFabric managed identity source if all required environment variables are present.\r\n     * @param logger Logger instance for logging\r\n     * @param nodeStorage NodeStorage instance for caching\r\n     * @param networkClient Network client for HTTP requests\r\n     * @param cryptoProvider Crypto provider for cryptographic operations\r\n     * @param disableInternalRetries Whether to disable internal retry logic\r\n     * @param managedIdentityId Managed identity identifier\r\n     * @returns A ServiceFabric instance if environment variables are set, otherwise null\r\n     */\r\n    static tryCreate(logger, nodeStorage, networkClient, cryptoProvider, disableInternalRetries, managedIdentityId) {\r\n        const [identityEndpoint, identityHeader, identityServerThumbprint] = ServiceFabric.getEnvironmentVariables();\r\n        if (!identityEndpoint || !identityHeader || !identityServerThumbprint) {\r\n            logger.info(`[Managed Identity] ${ManagedIdentitySourceNames.SERVICE_FABRIC} managed identity is unavailable because one or all of the '${ManagedIdentityEnvironmentVariableNames.IDENTITY_HEADER}', '${ManagedIdentityEnvironmentVariableNames.IDENTITY_ENDPOINT}' or '${ManagedIdentityEnvironmentVariableNames.IDENTITY_SERVER_THUMBPRINT}' environment variables are not defined.`);\r\n            return null;\r\n        }\r\n        const validatedIdentityEndpoint = ServiceFabric.getValidatedEnvVariableUrlString(ManagedIdentityEnvironmentVariableNames.IDENTITY_ENDPOINT, identityEndpoint, ManagedIdentitySourceNames.SERVICE_FABRIC, logger);\r\n        logger.info(`[Managed Identity] Environment variables validation passed for ${ManagedIdentitySourceNames.SERVICE_FABRIC} managed identity. Endpoint URI: ${validatedIdentityEndpoint}. Creating ${ManagedIdentitySourceNames.SERVICE_FABRIC} managed identity.`);\r\n        if (managedIdentityId.idType !== ManagedIdentityIdType.SYSTEM_ASSIGNED) {\r\n            logger.warning(`[Managed Identity] ${ManagedIdentitySourceNames.SERVICE_FABRIC} user assigned managed identity is configured in the cluster, not during runtime. See also: https://learn.microsoft.com/en-us/azure/service-fabric/configure-existing-cluster-enable-managed-identity-token-service.`);\r\n        }\r\n        return new ServiceFabric(logger, nodeStorage, networkClient, cryptoProvider, disableInternalRetries, identityEndpoint, identityHeader);\r\n    }\r\n    /**\r\n     * Creates the request parameters for acquiring a token from the Service Fabric cluster.\r\n     * @param resource - The resource URI for which the token is requested.\r\n     * @param managedIdentityId - The managed identity ID (system-assigned or user-assigned).\r\n     * @returns A ManagedIdentityRequestParameters object configured for Service Fabric.\r\n     */\r\n    createRequest(resource, managedIdentityId) {\r\n        const request = new ManagedIdentityRequestParameters(HttpMethod.GET, this.identityEndpoint);\r\n        request.headers[ManagedIdentityHeaders.ML_AND_SF_SECRET_HEADER_NAME] =\r\n            this.identityHeader;\r\n        request.queryParameters[ManagedIdentityQueryParameters.API_VERSION] =\r\n            SERVICE_FABRIC_MSI_API_VERSION;\r\n        request.queryParameters[ManagedIdentityQueryParameters.RESOURCE] =\r\n            resource;\r\n        if (managedIdentityId.idType !== ManagedIdentityIdType.SYSTEM_ASSIGNED) {\r\n            request.queryParameters[this.getManagedIdentityUserAssignedIdQueryParameterKey(managedIdentityId.idType)] = managedIdentityId.id;\r\n        }\r\n        // bodyParameters calculated in BaseManagedIdentity.acquireTokenWithManagedIdentity\r\n        return request;\r\n    }\r\n}\n\nexport { ServiceFabric };\n//# sourceMappingURL=ServiceFabric.mjs.map\n","/*! @azure/msal-node v3.7.3 2025-08-27 */\n'use strict';\nimport { BaseManagedIdentitySource, ManagedIdentityUserAssignedIdQueryParameterNames } from './BaseManagedIdentitySource.mjs';\nimport { ManagedIdentityEnvironmentVariableNames, ManagedIdentitySourceNames, ManagedIdentityHeaders, ManagedIdentityQueryParameters, ManagedIdentityIdType, HttpMethod } from '../../utils/Constants.mjs';\nimport { ManagedIdentityRequestParameters } from '../../config/ManagedIdentityRequestParameters.mjs';\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nconst MACHINE_LEARNING_MSI_API_VERSION = \"2017-09-01\";\r\nconst MANAGED_IDENTITY_MACHINE_LEARNING_UNSUPPORTED_ID_TYPE_ERROR = `Only client id is supported for user-assigned managed identity in ${ManagedIdentitySourceNames.MACHINE_LEARNING}.`; // referenced in unit test\r\nclass MachineLearning extends BaseManagedIdentitySource {\r\n    constructor(logger, nodeStorage, networkClient, cryptoProvider, disableInternalRetries, msiEndpoint, secret) {\r\n        super(logger, nodeStorage, networkClient, cryptoProvider, disableInternalRetries);\r\n        this.msiEndpoint = msiEndpoint;\r\n        this.secret = secret;\r\n    }\r\n    static getEnvironmentVariables() {\r\n        const msiEndpoint = process.env[ManagedIdentityEnvironmentVariableNames.MSI_ENDPOINT];\r\n        const secret = process.env[ManagedIdentityEnvironmentVariableNames.MSI_SECRET];\r\n        return [msiEndpoint, secret];\r\n    }\r\n    static tryCreate(logger, nodeStorage, networkClient, cryptoProvider, disableInternalRetries) {\r\n        const [msiEndpoint, secret] = MachineLearning.getEnvironmentVariables();\r\n        // if either of the MSI endpoint or MSI secret variables are undefined, this MSI provider is unavailable.\r\n        if (!msiEndpoint || !secret) {\r\n            logger.info(`[Managed Identity] ${ManagedIdentitySourceNames.MACHINE_LEARNING} managed identity is unavailable because one or both of the '${ManagedIdentityEnvironmentVariableNames.MSI_ENDPOINT}' and '${ManagedIdentityEnvironmentVariableNames.MSI_SECRET}' environment variables are not defined.`);\r\n            return null;\r\n        }\r\n        const validatedMsiEndpoint = MachineLearning.getValidatedEnvVariableUrlString(ManagedIdentityEnvironmentVariableNames.MSI_ENDPOINT, msiEndpoint, ManagedIdentitySourceNames.MACHINE_LEARNING, logger);\r\n        logger.info(`[Managed Identity] Environment variables validation passed for ${ManagedIdentitySourceNames.MACHINE_LEARNING} managed identity. Endpoint URI: ${validatedMsiEndpoint}. Creating ${ManagedIdentitySourceNames.MACHINE_LEARNING} managed identity.`);\r\n        return new MachineLearning(logger, nodeStorage, networkClient, cryptoProvider, disableInternalRetries, msiEndpoint, secret);\r\n    }\r\n    createRequest(resource, managedIdentityId) {\r\n        const request = new ManagedIdentityRequestParameters(HttpMethod.GET, this.msiEndpoint);\r\n        request.headers[ManagedIdentityHeaders.METADATA_HEADER_NAME] = \"true\";\r\n        request.headers[ManagedIdentityHeaders.ML_AND_SF_SECRET_HEADER_NAME] =\r\n            this.secret;\r\n        request.queryParameters[ManagedIdentityQueryParameters.API_VERSION] =\r\n            MACHINE_LEARNING_MSI_API_VERSION;\r\n        request.queryParameters[ManagedIdentityQueryParameters.RESOURCE] =\r\n            resource;\r\n        if (managedIdentityId.idType === ManagedIdentityIdType.SYSTEM_ASSIGNED) {\r\n            request.queryParameters[ManagedIdentityUserAssignedIdQueryParameterNames.MANAGED_IDENTITY_CLIENT_ID_2017] = process.env[ManagedIdentityEnvironmentVariableNames\r\n                .DEFAULT_IDENTITY_CLIENT_ID]; // this environment variable is always set in an Azure Machine Learning source\r\n        }\r\n        else if (managedIdentityId.idType ===\r\n            ManagedIdentityIdType.USER_ASSIGNED_CLIENT_ID) {\r\n            request.queryParameters[this.getManagedIdentityUserAssignedIdQueryParameterKey(managedIdentityId.idType, false, // isIMDS\r\n            true // uses2017API\r\n            )] = managedIdentityId.id;\r\n        }\r\n        else {\r\n            throw new Error(MANAGED_IDENTITY_MACHINE_LEARNING_UNSUPPORTED_ID_TYPE_ERROR);\r\n        }\r\n        // bodyParameters calculated in BaseManagedIdentity.acquireTokenWithManagedIdentity\r\n        return request;\r\n    }\r\n}\n\nexport { MANAGED_IDENTITY_MACHINE_LEARNING_UNSUPPORTED_ID_TYPE_ERROR, MachineLearning };\n//# sourceMappingURL=MachineLearning.mjs.map\n","/*! @azure/msal-node v3.7.3 2025-08-27 */\n'use strict';\nimport { AppService } from './ManagedIdentitySources/AppService.mjs';\nimport { AzureArc } from './ManagedIdentitySources/AzureArc.mjs';\nimport { CloudShell } from './ManagedIdentitySources/CloudShell.mjs';\nimport { Imds } from './ManagedIdentitySources/Imds.mjs';\nimport { ServiceFabric } from './ManagedIdentitySources/ServiceFabric.mjs';\nimport { createManagedIdentityError } from '../error/ManagedIdentityError.mjs';\nimport { ManagedIdentitySourceNames } from '../utils/Constants.mjs';\nimport { MachineLearning } from './ManagedIdentitySources/MachineLearning.mjs';\nimport { unableToCreateSource } from '../error/ManagedIdentityErrorCodes.mjs';\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/*\r\n * Class to initialize a managed identity and identify the service.\r\n * Original source of code: https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/identity/Azure.Identity/src/ManagedIdentityClient.cs\r\n */\r\nclass ManagedIdentityClient {\r\n    constructor(logger, nodeStorage, networkClient, cryptoProvider, disableInternalRetries) {\r\n        this.logger = logger;\r\n        this.nodeStorage = nodeStorage;\r\n        this.networkClient = networkClient;\r\n        this.cryptoProvider = cryptoProvider;\r\n        this.disableInternalRetries = disableInternalRetries;\r\n    }\r\n    async sendManagedIdentityTokenRequest(managedIdentityRequest, managedIdentityId, fakeAuthority, refreshAccessToken) {\r\n        if (!ManagedIdentityClient.identitySource) {\r\n            ManagedIdentityClient.identitySource =\r\n                this.selectManagedIdentitySource(this.logger, this.nodeStorage, this.networkClient, this.cryptoProvider, this.disableInternalRetries, managedIdentityId);\r\n        }\r\n        return ManagedIdentityClient.identitySource.acquireTokenWithManagedIdentity(managedIdentityRequest, managedIdentityId, fakeAuthority, refreshAccessToken);\r\n    }\r\n    allEnvironmentVariablesAreDefined(environmentVariables) {\r\n        return Object.values(environmentVariables).every((environmentVariable) => {\r\n            return environmentVariable !== undefined;\r\n        });\r\n    }\r\n    /**\r\n     * Determine the Managed Identity Source based on available environment variables. This API is consumed by ManagedIdentityApplication's getManagedIdentitySource.\r\n     * @returns ManagedIdentitySourceNames - The Managed Identity source's name\r\n     */\r\n    getManagedIdentitySource() {\r\n        ManagedIdentityClient.sourceName =\r\n            this.allEnvironmentVariablesAreDefined(ServiceFabric.getEnvironmentVariables())\r\n                ? ManagedIdentitySourceNames.SERVICE_FABRIC\r\n                : this.allEnvironmentVariablesAreDefined(AppService.getEnvironmentVariables())\r\n                    ? ManagedIdentitySourceNames.APP_SERVICE\r\n                    : this.allEnvironmentVariablesAreDefined(MachineLearning.getEnvironmentVariables())\r\n                        ? ManagedIdentitySourceNames.MACHINE_LEARNING\r\n                        : this.allEnvironmentVariablesAreDefined(CloudShell.getEnvironmentVariables())\r\n                            ? ManagedIdentitySourceNames.CLOUD_SHELL\r\n                            : this.allEnvironmentVariablesAreDefined(AzureArc.getEnvironmentVariables())\r\n                                ? ManagedIdentitySourceNames.AZURE_ARC\r\n                                : ManagedIdentitySourceNames.DEFAULT_TO_IMDS;\r\n        return ManagedIdentityClient.sourceName;\r\n    }\r\n    /**\r\n     * Tries to create a managed identity source for all sources\r\n     * @returns the managed identity Source\r\n     */\r\n    selectManagedIdentitySource(logger, nodeStorage, networkClient, cryptoProvider, disableInternalRetries, managedIdentityId) {\r\n        const source = ServiceFabric.tryCreate(logger, nodeStorage, networkClient, cryptoProvider, disableInternalRetries, managedIdentityId) ||\r\n            AppService.tryCreate(logger, nodeStorage, networkClient, cryptoProvider, disableInternalRetries) ||\r\n            MachineLearning.tryCreate(logger, nodeStorage, networkClient, cryptoProvider, disableInternalRetries) ||\r\n            CloudShell.tryCreate(logger, nodeStorage, networkClient, cryptoProvider, disableInternalRetries, managedIdentityId) ||\r\n            AzureArc.tryCreate(logger, nodeStorage, networkClient, cryptoProvider, disableInternalRetries, managedIdentityId) ||\r\n            Imds.tryCreate(logger, nodeStorage, networkClient, cryptoProvider, disableInternalRetries);\r\n        if (!source) {\r\n            throw createManagedIdentityError(unableToCreateSource);\r\n        }\r\n        return source;\r\n    }\r\n}\n\nexport { ManagedIdentityClient };\n//# sourceMappingURL=ManagedIdentityClient.mjs.map\n","/*! @azure/msal-node v3.7.3 2025-08-27 */\n'use strict';\nimport { Logger, DEFAULT_CRYPTO_IMPLEMENTATION, Constants, Authority, ProtocolMode, createClientConfigurationError, ClientConfigurationErrorCodes, EncodingTypes, CacheOutcome } from '@azure/msal-common/node';\nimport { buildManagedIdentityConfiguration } from '../config/Configuration.mjs';\nimport { name, version } from '../packageMetadata.mjs';\nimport { CryptoProvider } from '../crypto/CryptoProvider.mjs';\nimport { ClientCredentialClient } from './ClientCredentialClient.mjs';\nimport { ManagedIdentityClient } from './ManagedIdentityClient.mjs';\nimport { NodeStorage } from '../cache/NodeStorage.mjs';\nimport { DEFAULT_AUTHORITY_FOR_MANAGED_IDENTITY, ManagedIdentitySourceNames } from '../utils/Constants.mjs';\nimport { HashUtils } from '../crypto/HashUtils.mjs';\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nconst SOURCES_THAT_SUPPORT_TOKEN_REVOCATION = [ManagedIdentitySourceNames.SERVICE_FABRIC];\r\n/**\r\n * Class to initialize a managed identity and identify the service\r\n * @public\r\n */\r\nclass ManagedIdentityApplication {\r\n    constructor(configuration) {\r\n        // undefined config means the managed identity is system-assigned\r\n        this.config = buildManagedIdentityConfiguration(configuration || {});\r\n        this.logger = new Logger(this.config.system.loggerOptions, name, version);\r\n        const fakeStatusAuthorityOptions = {\r\n            canonicalAuthority: Constants.DEFAULT_AUTHORITY,\r\n        };\r\n        if (!ManagedIdentityApplication.nodeStorage) {\r\n            ManagedIdentityApplication.nodeStorage = new NodeStorage(this.logger, this.config.managedIdentityId.id, DEFAULT_CRYPTO_IMPLEMENTATION, fakeStatusAuthorityOptions);\r\n        }\r\n        this.networkClient = this.config.system.networkClient;\r\n        this.cryptoProvider = new CryptoProvider();\r\n        const fakeAuthorityOptions = {\r\n            protocolMode: ProtocolMode.AAD,\r\n            knownAuthorities: [DEFAULT_AUTHORITY_FOR_MANAGED_IDENTITY],\r\n            cloudDiscoveryMetadata: \"\",\r\n            authorityMetadata: \"\",\r\n        };\r\n        this.fakeAuthority = new Authority(DEFAULT_AUTHORITY_FOR_MANAGED_IDENTITY, this.networkClient, ManagedIdentityApplication.nodeStorage, fakeAuthorityOptions, this.logger, this.cryptoProvider.createNewGuid(), // correlationID\r\n        undefined, true);\r\n        this.fakeClientCredentialClient = new ClientCredentialClient({\r\n            authOptions: {\r\n                clientId: this.config.managedIdentityId.id,\r\n                authority: this.fakeAuthority,\r\n            },\r\n        });\r\n        this.managedIdentityClient = new ManagedIdentityClient(this.logger, ManagedIdentityApplication.nodeStorage, this.networkClient, this.cryptoProvider, this.config.disableInternalRetries);\r\n        this.hashUtils = new HashUtils();\r\n    }\r\n    /**\r\n     * Acquire an access token from the cache or the managed identity\r\n     * @param managedIdentityRequest - the ManagedIdentityRequestParams object passed in by the developer\r\n     * @returns the access token\r\n     */\r\n    async acquireToken(managedIdentityRequestParams) {\r\n        if (!managedIdentityRequestParams.resource) {\r\n            throw createClientConfigurationError(ClientConfigurationErrorCodes.urlEmptyError);\r\n        }\r\n        const managedIdentityRequest = {\r\n            forceRefresh: managedIdentityRequestParams.forceRefresh,\r\n            resource: managedIdentityRequestParams.resource.replace(\"/.default\", \"\"),\r\n            scopes: [\r\n                managedIdentityRequestParams.resource.replace(\"/.default\", \"\"),\r\n            ],\r\n            authority: this.fakeAuthority.canonicalAuthority,\r\n            correlationId: this.cryptoProvider.createNewGuid(),\r\n            claims: managedIdentityRequestParams.claims,\r\n            clientCapabilities: this.config.clientCapabilities,\r\n        };\r\n        if (managedIdentityRequest.forceRefresh) {\r\n            return this.acquireTokenFromManagedIdentity(managedIdentityRequest, this.config.managedIdentityId, this.fakeAuthority);\r\n        }\r\n        const [cachedAuthenticationResult, lastCacheOutcome] = await this.fakeClientCredentialClient.getCachedAuthenticationResult(managedIdentityRequest, this.config, this.cryptoProvider, this.fakeAuthority, ManagedIdentityApplication.nodeStorage);\r\n        /*\r\n         * Check if claims are present in the managed identity request.\r\n         * If so, the cached token will not be used.\r\n         */\r\n        if (managedIdentityRequest.claims) {\r\n            const sourceName = this.managedIdentityClient.getManagedIdentitySource();\r\n            /*\r\n             * Check if there is a cached token and if the Managed Identity source supports token revocation.\r\n             * If so, hash the cached access token and add it to the request.\r\n             */\r\n            if (cachedAuthenticationResult &&\r\n                SOURCES_THAT_SUPPORT_TOKEN_REVOCATION.includes(sourceName)) {\r\n                const revokedTokenSha256Hash = this.hashUtils\r\n                    .sha256(cachedAuthenticationResult.accessToken)\r\n                    .toString(EncodingTypes.HEX);\r\n                managedIdentityRequest.revokedTokenSha256Hash =\r\n                    revokedTokenSha256Hash;\r\n            }\r\n            return this.acquireTokenFromManagedIdentity(managedIdentityRequest, this.config.managedIdentityId, this.fakeAuthority);\r\n        }\r\n        if (cachedAuthenticationResult) {\r\n            // if the token is not expired but must be refreshed; get a new one in the background\r\n            if (lastCacheOutcome === CacheOutcome.PROACTIVELY_REFRESHED) {\r\n                this.logger.info(\"ClientCredentialClient:getCachedAuthenticationResult - Cached access token's refreshOn property has been exceeded'. It's not expired, but must be refreshed.\");\r\n                // force refresh; will run in the background\r\n                const refreshAccessToken = true;\r\n                await this.acquireTokenFromManagedIdentity(managedIdentityRequest, this.config.managedIdentityId, this.fakeAuthority, refreshAccessToken);\r\n            }\r\n            return cachedAuthenticationResult;\r\n        }\r\n        else {\r\n            return this.acquireTokenFromManagedIdentity(managedIdentityRequest, this.config.managedIdentityId, this.fakeAuthority);\r\n        }\r\n    }\r\n    /**\r\n     * Acquires a token from a managed identity endpoint.\r\n     *\r\n     * @param managedIdentityRequest - The request object containing parameters for the managed identity token request.\r\n     * @param managedIdentityId - The identifier for the managed identity (e.g., client ID or resource ID).\r\n     * @param fakeAuthority - A placeholder authority used for the token request.\r\n     * @param refreshAccessToken - Optional flag indicating whether to force a refresh of the access token.\r\n     * @returns A promise that resolves to an AuthenticationResult containing the acquired token and related information.\r\n     */\r\n    async acquireTokenFromManagedIdentity(managedIdentityRequest, managedIdentityId, fakeAuthority, refreshAccessToken) {\r\n        // make a network call to the managed identity\r\n        return this.managedIdentityClient.sendManagedIdentityTokenRequest(managedIdentityRequest, managedIdentityId, fakeAuthority, refreshAccessToken);\r\n    }\r\n    /**\r\n     * Determine the Managed Identity Source based on available environment variables. This API is consumed by Azure Identity SDK.\r\n     * @returns ManagedIdentitySourceNames - The Managed Identity source's name\r\n     */\r\n    getManagedIdentitySource() {\r\n        return (ManagedIdentityClient.sourceName ||\r\n            this.managedIdentityClient.getManagedIdentitySource());\r\n    }\r\n}\n\nexport { ManagedIdentityApplication };\n//# sourceMappingURL=ManagedIdentityApplication.mjs.map\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nimport { getRandomIntegerInclusive } from \"./random.js\";\n/**\n * Calculates the delay interval for retry attempts using exponential delay with jitter.\n * @param retryAttempt - The current retry attempt number.\n * @param config - The exponential retry configuration.\n * @returns An object containing the calculated retry delay.\n */\nexport function calculateRetryDelay(retryAttempt, config) {\n    // Exponentially increase the delay each time\n    const exponentialDelay = config.retryDelayInMs * Math.pow(2, retryAttempt);\n    // Don't let the delay exceed the maximum\n    const clampedDelay = Math.min(config.maxRetryDelayInMs, exponentialDelay);\n    // Allow the final value to have some \"jitter\" (within 50% of the delay size) so\n    // that retries across multiple clients don't occur simultaneously.\n    const retryAfterInMs = clampedDelay / 2 + getRandomIntegerInclusive(0, clampedDelay / 2);\n    return { retryAfterInMs };\n}\n//# sourceMappingURL=delay.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n/**\n * Returns a random integer value between a lower and upper bound,\n * inclusive of both bounds.\n * Note that this uses Math.random and isn't secure. If you need to use\n * this for any kind of security purpose, find a better source of random.\n * @param min - The smallest integer value allowed.\n * @param max - The largest integer value allowed.\n */\nexport function getRandomIntegerInclusive(min, max) {\n    // Make sure inputs are integers.\n    min = Math.ceil(min);\n    max = Math.floor(max);\n    // Pick a random offset from zero to the size of the range.\n    // Since Math.random() can never return 1, we have to make the range one larger\n    // in order to be inclusive of the maximum value after we take the floor.\n    const offset = Math.floor(Math.random() * (max - min + 1));\n    return offset + min;\n}\n//# sourceMappingURL=random.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n/**\n * Helper to determine when an input is a generic JS object.\n * @returns true when input is an object type that is not null, Array, RegExp, or Date.\n */\nexport function isObject(input) {\n    return (typeof input === \"object\" &&\n        input !== null &&\n        !Array.isArray(input) &&\n        !(input instanceof RegExp) &&\n        !(input instanceof Date));\n}\n//# sourceMappingURL=object.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nimport { isObject } from \"./object.js\";\n/**\n * Typeguard for an error object shape (has name and message)\n * @param e - Something caught by a catch clause.\n */\nexport function isError(e) {\n    if (isObject(e)) {\n        const hasName = typeof e.name === \"string\";\n        const hasMessage = typeof e.message === \"string\";\n        return hasName && hasMessage;\n    }\n    return false;\n}\n//# sourceMappingURL=error.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nvar _a;\nimport { randomUUID as v4RandomUUID } from \"node:crypto\";\n// NOTE: This is a workaround until we can use `globalThis.crypto.randomUUID` in Node.js 19+.\nconst uuidFunction = typeof ((_a = globalThis === null || globalThis === void 0 ? void 0 : globalThis.crypto) === null || _a === void 0 ? void 0 : _a.randomUUID) === \"function\"\n    ? globalThis.crypto.randomUUID.bind(globalThis.crypto)\n    : v4RandomUUID;\n/**\n * Generated Universally Unique Identifier\n *\n * @returns RFC4122 v4 UUID.\n */\nexport function randomUUID() {\n    return uuidFunction();\n}\n//# sourceMappingURL=uuidUtils.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nvar _a, _b, _c, _d;\n/**\n * A constant that indicates whether the environment the code is running is a Web Browser.\n */\n// eslint-disable-next-line @azure/azure-sdk/ts-no-window\nexport const isBrowser = typeof window !== \"undefined\" && typeof window.document !== \"undefined\";\n/**\n * A constant that indicates whether the environment the code is running is a Web Worker.\n */\nexport const isWebWorker = typeof self === \"object\" &&\n    typeof (self === null || self === void 0 ? void 0 : self.importScripts) === \"function\" &&\n    (((_a = self.constructor) === null || _a === void 0 ? void 0 : _a.name) === \"DedicatedWorkerGlobalScope\" ||\n        ((_b = self.constructor) === null || _b === void 0 ? void 0 : _b.name) === \"ServiceWorkerGlobalScope\" ||\n        ((_c = self.constructor) === null || _c === void 0 ? void 0 : _c.name) === \"SharedWorkerGlobalScope\");\n/**\n * A constant that indicates whether the environment the code is running is Deno.\n */\nexport const isDeno = typeof Deno !== \"undefined\" &&\n    typeof Deno.version !== \"undefined\" &&\n    typeof Deno.version.deno !== \"undefined\";\n/**\n * A constant that indicates whether the environment the code is running is Bun.sh.\n */\nexport const isBun = typeof Bun !== \"undefined\" && typeof Bun.version !== \"undefined\";\n/**\n * A constant that indicates whether the environment the code is running is a Node.js compatible environment.\n */\nexport const isNodeLike = typeof globalThis.process !== \"undefined\" &&\n    Boolean(globalThis.process.version) &&\n    Boolean((_d = globalThis.process.versions) === null || _d === void 0 ? void 0 : _d.node);\n/**\n * A constant that indicates whether the environment the code is running is Node.JS.\n */\nexport const isNodeRuntime = isNodeLike && !isBun && !isDeno;\n/**\n * A constant that indicates whether the environment the code is running is in React-Native.\n */\n// https://github.com/facebook/react-native/blob/main/packages/react-native/Libraries/Core/setUpNavigator.js\nexport const isReactNative = typeof navigator !== \"undefined\" && (navigator === null || navigator === void 0 ? void 0 : navigator.product) === \"ReactNative\";\n//# sourceMappingURL=checkEnvironment.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n/**\n * The helper that transforms bytes with specific character encoding into string\n * @param bytes - the uint8array bytes\n * @param format - the format we use to encode the byte\n * @returns a string of the encoded string\n */\nexport function uint8ArrayToString(bytes, format) {\n    return Buffer.from(bytes).toString(format);\n}\n/**\n * The helper that transforms string to specific character encoded bytes array.\n * @param value - the string to be converted\n * @param format - the format we use to decode the value\n * @returns a uint8array\n */\nexport function stringToUint8Array(value, format) {\n    return Buffer.from(value, format);\n}\n//# sourceMappingURL=bytesEncoding.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nimport { isObject } from \"./object.js\";\nconst RedactedString = \"REDACTED\";\n// Make sure this list is up-to-date with the one under core/logger/Readme#Keyconcepts\nconst defaultAllowedHeaderNames = [\n    \"x-ms-client-request-id\",\n    \"x-ms-return-client-request-id\",\n    \"x-ms-useragent\",\n    \"x-ms-correlation-request-id\",\n    \"x-ms-request-id\",\n    \"client-request-id\",\n    \"ms-cv\",\n    \"return-client-request-id\",\n    \"traceparent\",\n    \"Access-Control-Allow-Credentials\",\n    \"Access-Control-Allow-Headers\",\n    \"Access-Control-Allow-Methods\",\n    \"Access-Control-Allow-Origin\",\n    \"Access-Control-Expose-Headers\",\n    \"Access-Control-Max-Age\",\n    \"Access-Control-Request-Headers\",\n    \"Access-Control-Request-Method\",\n    \"Origin\",\n    \"Accept\",\n    \"Accept-Encoding\",\n    \"Cache-Control\",\n    \"Connection\",\n    \"Content-Length\",\n    \"Content-Type\",\n    \"Date\",\n    \"ETag\",\n    \"Expires\",\n    \"If-Match\",\n    \"If-Modified-Since\",\n    \"If-None-Match\",\n    \"If-Unmodified-Since\",\n    \"Last-Modified\",\n    \"Pragma\",\n    \"Request-Id\",\n    \"Retry-After\",\n    \"Server\",\n    \"Transfer-Encoding\",\n    \"User-Agent\",\n    \"WWW-Authenticate\",\n];\nconst defaultAllowedQueryParameters = [\"api-version\"];\n/**\n * A utility class to sanitize objects for logging.\n */\nexport class Sanitizer {\n    constructor({ additionalAllowedHeaderNames: allowedHeaderNames = [], additionalAllowedQueryParameters: allowedQueryParameters = [], } = {}) {\n        allowedHeaderNames = defaultAllowedHeaderNames.concat(allowedHeaderNames);\n        allowedQueryParameters = defaultAllowedQueryParameters.concat(allowedQueryParameters);\n        this.allowedHeaderNames = new Set(allowedHeaderNames.map((n) => n.toLowerCase()));\n        this.allowedQueryParameters = new Set(allowedQueryParameters.map((p) => p.toLowerCase()));\n    }\n    /**\n     * Sanitizes an object for logging.\n     * @param obj - The object to sanitize\n     * @returns - The sanitized object as a string\n     */\n    sanitize(obj) {\n        const seen = new Set();\n        return JSON.stringify(obj, (key, value) => {\n            // Ensure Errors include their interesting non-enumerable members\n            if (value instanceof Error) {\n                return Object.assign(Object.assign({}, value), { name: value.name, message: value.message });\n            }\n            if (key === \"headers\") {\n                return this.sanitizeHeaders(value);\n            }\n            else if (key === \"url\") {\n                return this.sanitizeUrl(value);\n            }\n            else if (key === \"query\") {\n                return this.sanitizeQuery(value);\n            }\n            else if (key === \"body\") {\n                // Don't log the request body\n                return undefined;\n            }\n            else if (key === \"response\") {\n                // Don't log response again\n                return undefined;\n            }\n            else if (key === \"operationSpec\") {\n                // When using sendOperationRequest, the request carries a massive\n                // field with the autorest spec. No need to log it.\n                return undefined;\n            }\n            else if (Array.isArray(value) || isObject(value)) {\n                if (seen.has(value)) {\n                    return \"[Circular]\";\n                }\n                seen.add(value);\n            }\n            return value;\n        }, 2);\n    }\n    /**\n     * Sanitizes a URL for logging.\n     * @param value - The URL to sanitize\n     * @returns - The sanitized URL as a string\n     */\n    sanitizeUrl(value) {\n        if (typeof value !== \"string\" || value === null || value === \"\") {\n            return value;\n        }\n        const url = new URL(value);\n        if (!url.search) {\n            return value;\n        }\n        for (const [key] of url.searchParams) {\n            if (!this.allowedQueryParameters.has(key.toLowerCase())) {\n                url.searchParams.set(key, RedactedString);\n            }\n        }\n        return url.toString();\n    }\n    sanitizeHeaders(obj) {\n        const sanitized = {};\n        for (const key of Object.keys(obj)) {\n            if (this.allowedHeaderNames.has(key.toLowerCase())) {\n                sanitized[key] = obj[key];\n            }\n            else {\n                sanitized[key] = RedactedString;\n            }\n        }\n        return sanitized;\n    }\n    sanitizeQuery(value) {\n        if (typeof value !== \"object\" || value === null) {\n            return value;\n        }\n        const sanitized = {};\n        for (const k of Object.keys(value)) {\n            if (this.allowedQueryParameters.has(k.toLowerCase())) {\n                sanitized[k] = value[k];\n            }\n            else {\n                sanitized[k] = RedactedString;\n            }\n        }\n        return sanitized;\n    }\n}\n//# sourceMappingURL=sanitizer.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n/**\n * This error is thrown when an asynchronous operation has been aborted.\n * Check for this error by testing the `name` that the name property of the\n * error matches `\"AbortError\"`.\n *\n * @example\n * ```ts\n * const controller = new AbortController();\n * controller.abort();\n * try {\n *   doAsyncWork(controller.signal)\n * } catch (e) {\n *   if (e.name === 'AbortError') {\n *     // handle abort error here.\n *   }\n * }\n * ```\n */\nexport class AbortError extends Error {\n    constructor(message) {\n        super(message);\n        this.name = \"AbortError\";\n    }\n}\n//# sourceMappingURL=AbortError.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nimport { createAbortablePromise } from \"./createAbortablePromise.js\";\nimport { getRandomIntegerInclusive } from \"@typespec/ts-http-runtime/internal/util\";\nconst StandardAbortMessage = \"The delay was aborted.\";\n/**\n * A wrapper for setTimeout that resolves a promise after timeInMs milliseconds.\n * @param timeInMs - The number of milliseconds to be delayed.\n * @param options - The options for delay - currently abort options\n * @returns Promise that is resolved after timeInMs\n */\nexport function delay(timeInMs, options) {\n    let token;\n    const { abortSignal, abortErrorMsg } = options !== null && options !== void 0 ? options : {};\n    return createAbortablePromise((resolve) => {\n        token = setTimeout(resolve, timeInMs);\n    }, {\n        cleanupBeforeAbort: () => clearTimeout(token),\n        abortSignal,\n        abortErrorMsg: abortErrorMsg !== null && abortErrorMsg !== void 0 ? abortErrorMsg : StandardAbortMessage,\n    });\n}\n/**\n * Calculates the delay interval for retry attempts using exponential delay with jitter.\n * @param retryAttempt - The current retry attempt number.\n * @param config - The exponential retry configuration.\n * @returns An object containing the calculated retry delay.\n */\nexport function calculateRetryDelay(retryAttempt, config) {\n    // Exponentially increase the delay each time\n    const exponentialDelay = config.retryDelayInMs * Math.pow(2, retryAttempt);\n    // Don't let the delay exceed the maximum\n    const clampedDelay = Math.min(config.maxRetryDelayInMs, exponentialDelay);\n    // Allow the final value to have some \"jitter\" (within 50% of the delay size) so\n    // that retries across multiple clients don't occur simultaneously.\n    const retryAfterInMs = clampedDelay / 2 + getRandomIntegerInclusive(0, clampedDelay / 2);\n    return { retryAfterInMs };\n}\n//# sourceMappingURL=delay.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nimport { AbortError } from \"@azure/abort-controller\";\n/**\n * Creates an abortable promise.\n * @param buildPromise - A function that takes the resolve and reject functions as parameters.\n * @param options - The options for the abortable promise.\n * @returns A promise that can be aborted.\n */\nexport function createAbortablePromise(buildPromise, options) {\n    const { cleanupBeforeAbort, abortSignal, abortErrorMsg } = options !== null && options !== void 0 ? options : {};\n    return new Promise((resolve, reject) => {\n        function rejectOnAbort() {\n            reject(new AbortError(abortErrorMsg !== null && abortErrorMsg !== void 0 ? abortErrorMsg : \"The operation was aborted.\"));\n        }\n        function removeListeners() {\n            abortSignal === null || abortSignal === void 0 ? void 0 : abortSignal.removeEventListener(\"abort\", onAbort);\n        }\n        function onAbort() {\n            cleanupBeforeAbort === null || cleanupBeforeAbort === void 0 ? void 0 : cleanupBeforeAbort();\n            removeListeners();\n            rejectOnAbort();\n        }\n        if (abortSignal === null || abortSignal === void 0 ? void 0 : abortSignal.aborted) {\n            return rejectOnAbort();\n        }\n        try {\n            buildPromise((x) => {\n                removeListeners();\n                resolve(x);\n            }, (x) => {\n                removeListeners();\n                reject(x);\n            });\n        }\n        catch (err) {\n            reject(err);\n        }\n        abortSignal === null || abortSignal === void 0 ? void 0 : abortSignal.addEventListener(\"abort\", onAbort);\n    });\n}\n//# sourceMappingURL=createAbortablePromise.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nimport { isError } from \"@typespec/ts-http-runtime/internal/util\";\n/**\n * Given what is thought to be an error object, return the message if possible.\n * If the message is missing, returns a stringified version of the input.\n * @param e - Something thrown from a try block\n * @returns The error message or a string of the input\n */\nexport function getErrorMessage(e) {\n    if (isError(e)) {\n        return e.message;\n    }\n    else {\n        let stringified;\n        try {\n            if (typeof e === \"object\" && e) {\n                stringified = JSON.stringify(e);\n            }\n            else {\n                stringified = String(e);\n            }\n        }\n        catch (err) {\n            stringified = \"[unable to stringify input]\";\n        }\n        return `Unknown error ${stringified}`;\n    }\n}\n//# sourceMappingURL=error.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n/**\n * Helper TypeGuard that checks if something is defined or not.\n * @param thing - Anything\n */\nexport function isDefined(thing) {\n    return typeof thing !== \"undefined\" && thing !== null;\n}\n/**\n * Helper TypeGuard that checks if the input is an object with the specified properties.\n * @param thing - Anything.\n * @param properties - The name of the properties that should appear in the object.\n */\nexport function isObjectWithProperties(thing, properties) {\n    if (!isDefined(thing) || typeof thing !== \"object\") {\n        return false;\n    }\n    for (const property of properties) {\n        if (!objectHasProperty(thing, property)) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * Helper TypeGuard that checks if the input is an object with the specified property.\n * @param thing - Any object.\n * @param property - The name of the property that should appear in the object.\n */\nexport function objectHasProperty(thing, property) {\n    return (isDefined(thing) && typeof thing === \"object\" && property in thing);\n}\n//# sourceMappingURL=typeGuards.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nimport * as tspRuntime from \"@typespec/ts-http-runtime/internal/util\";\nexport { cancelablePromiseRace, } from \"./aborterUtils.js\";\nexport { createAbortablePromise, } from \"./createAbortablePromise.js\";\nexport { delay } from \"./delay.js\";\nexport { getErrorMessage } from \"./error.js\";\nexport { isDefined, isObjectWithProperties, objectHasProperty } from \"./typeGuards.js\";\n/**\n * Calculates the delay interval for retry attempts using exponential delay with jitter.\n *\n * @param retryAttempt - The current retry attempt number.\n *\n * @param config - The exponential retry configuration.\n *\n * @returns An object containing the calculated retry delay.\n */\nexport function calculateRetryDelay(retryAttempt, config) {\n    return tspRuntime.calculateRetryDelay(retryAttempt, config);\n}\n/**\n * Generates a SHA-256 hash.\n *\n * @param content - The data to be included in the hash.\n *\n * @param encoding - The textual encoding to use for the returned hash.\n */\nexport function computeSha256Hash(content, encoding) {\n    return tspRuntime.computeSha256Hash(content, encoding);\n}\n/**\n * Generates a SHA-256 HMAC signature.\n *\n * @param key - The HMAC key represented as a base64 string, used to generate the cryptographic HMAC hash.\n *\n * @param stringToSign - The data to be signed.\n *\n * @param encoding - The textual encoding to use for the returned HMAC digest.\n */\nexport function computeSha256Hmac(key, stringToSign, encoding) {\n    return tspRuntime.computeSha256Hmac(key, stringToSign, encoding);\n}\n/**\n * Returns a random integer value between a lower and upper bound, inclusive of both bounds. Note that this uses Math.random and isn't secure. If you need to use this for any kind of security purpose, find a better source of random.\n *\n * @param min - The smallest integer value allowed.\n *\n * @param max - The largest integer value allowed.\n */\nexport function getRandomIntegerInclusive(min, max) {\n    return tspRuntime.getRandomIntegerInclusive(min, max);\n}\n/**\n * Typeguard for an error object shape (has name and message)\n *\n * @param e - Something caught by a catch clause.\n */\nexport function isError(e) {\n    return tspRuntime.isError(e);\n}\n/**\n * Helper to determine when an input is a generic JS object.\n *\n * @returns true when input is an object type that is not null, Array, RegExp, or Date.\n */\nexport function isObject(input) {\n    return tspRuntime.isObject(input);\n}\n/**\n * Generated Universally Unique Identifier\n *\n * @returns RFC4122 v4 UUID.\n */\nexport function randomUUID() {\n    return tspRuntime.randomUUID();\n}\n/**\n * A constant that indicates whether the environment the code is running is a Web Browser.\n */\nexport const isBrowser = tspRuntime.isBrowser;\n/**\n * A constant that indicates whether the environment the code is running is Bun.sh.\n */\nexport const isBun = tspRuntime.isBun;\n/**\n * A constant that indicates whether the environment the code is running is Deno.\n */\nexport const isDeno = tspRuntime.isDeno;\n/**\n * A constant that indicates whether the environment the code is running is a Node.js compatible environment.\n *\n * @deprecated\n *\n * Use `isNodeLike` instead.\n */\nexport const isNode = tspRuntime.isNodeLike;\n/**\n * A constant that indicates whether the environment the code is running is a Node.js compatible environment.\n */\nexport const isNodeLike = tspRuntime.isNodeLike;\n/**\n * A constant that indicates whether the environment the code is running is Node.JS.\n */\nexport const isNodeRuntime = tspRuntime.isNodeRuntime;\n/**\n * A constant that indicates whether the environment the code is running is in React-Native.\n */\nexport const isReactNative = tspRuntime.isReactNative;\n/**\n * A constant that indicates whether the environment the code is running is a Web Worker.\n */\nexport const isWebWorker = tspRuntime.isWebWorker;\n/**\n * The helper that transforms bytes with specific character encoding into string\n * @param bytes - the uint8array bytes\n * @param format - the format we use to encode the byte\n * @returns a string of the encoded string\n */\nexport function uint8ArrayToString(bytes, format) {\n    return tspRuntime.uint8ArrayToString(bytes, format);\n}\n/**\n * The helper that transforms string to specific character encoded bytes array.\n * @param value - the string to be converted\n * @param format - the format we use to decode the value\n * @returns a uint8array\n */\nexport function stringToUint8Array(value, format) {\n    return tspRuntime.stringToUint8Array(value, format);\n}\n//# sourceMappingURL=index.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nimport { AuthenticationRequiredError, CredentialUnavailableError } from \"../errors.js\";\nimport { credentialLogger, formatError } from \"../util/logging.js\";\nimport { DefaultAuthority, DefaultAuthorityHost, DefaultTenantId } from \"../constants.js\";\nimport { randomUUID as coreRandomUUID, isNode, isNodeLike } from \"@azure/core-util\";\nimport { AbortError } from \"@azure/abort-controller\";\nimport { msalCommon } from \"./msal.js\";\n/**\n * @internal\n */\nconst logger = credentialLogger(\"IdentityUtils\");\n/**\n * Latest AuthenticationRecord version\n * @internal\n */\nconst LatestAuthenticationRecordVersion = \"1.0\";\n/**\n * Ensures the validity of the MSAL token\n * @internal\n */\nexport function ensureValidMsalToken(scopes, msalToken, getTokenOptions) {\n    const error = (message) => {\n        logger.getToken.info(message);\n        return new AuthenticationRequiredError({\n            scopes: Array.isArray(scopes) ? scopes : [scopes],\n            getTokenOptions,\n            message,\n        });\n    };\n    if (!msalToken) {\n        throw error(\"No response\");\n    }\n    if (!msalToken.expiresOn) {\n        throw error(`Response had no \"expiresOn\" property.`);\n    }\n    if (!msalToken.accessToken) {\n        throw error(`Response had no \"accessToken\" property.`);\n    }\n}\n/**\n * Returns the authority host from either the options bag or the AZURE_AUTHORITY_HOST environment variable.\n *\n * Defaults to {@link DefaultAuthorityHost}.\n * @internal\n */\nexport function getAuthorityHost(options) {\n    let authorityHost = options?.authorityHost;\n    if (!authorityHost && isNodeLike) {\n        authorityHost = process.env.AZURE_AUTHORITY_HOST;\n    }\n    return authorityHost ?? DefaultAuthorityHost;\n}\n/**\n * Generates a valid authority by combining a host with a tenantId.\n * @internal\n */\nexport function getAuthority(tenantId, host) {\n    if (!host) {\n        host = DefaultAuthorityHost;\n    }\n    if (new RegExp(`${tenantId}/?$`).test(host)) {\n        return host;\n    }\n    if (host.endsWith(\"/\")) {\n        return host + tenantId;\n    }\n    else {\n        return `${host}/${tenantId}`;\n    }\n}\n/**\n * Generates the known authorities.\n * If the Tenant Id is `adfs`, the authority can't be validated since the format won't match the expected one.\n * For that reason, we have to force MSAL to disable validating the authority\n * by sending it within the known authorities in the MSAL configuration.\n * @internal\n */\nexport function getKnownAuthorities(tenantId, authorityHost, disableInstanceDiscovery) {\n    if ((tenantId === \"adfs\" && authorityHost) || disableInstanceDiscovery) {\n        return [authorityHost];\n    }\n    return [];\n}\n/**\n * Generates a logger that can be passed to the MSAL clients.\n * @param credLogger - The logger of the credential.\n * @internal\n */\nexport const defaultLoggerCallback = (credLogger, platform = isNode ? \"Node\" : \"Browser\") => (level, message, containsPii) => {\n    if (containsPii) {\n        return;\n    }\n    switch (level) {\n        case msalCommon.LogLevel.Error:\n            credLogger.info(`MSAL ${platform} V2 error: ${message}`);\n            return;\n        case msalCommon.LogLevel.Info:\n            credLogger.info(`MSAL ${platform} V2 info message: ${message}`);\n            return;\n        case msalCommon.LogLevel.Verbose:\n            credLogger.info(`MSAL ${platform} V2 verbose message: ${message}`);\n            return;\n        case msalCommon.LogLevel.Warning:\n            credLogger.info(`MSAL ${platform} V2 warning: ${message}`);\n            return;\n    }\n};\n/**\n * @internal\n */\nexport function getMSALLogLevel(logLevel) {\n    switch (logLevel) {\n        case \"error\":\n            return msalCommon.LogLevel.Error;\n        case \"info\":\n            return msalCommon.LogLevel.Info;\n        case \"verbose\":\n            return msalCommon.LogLevel.Verbose;\n        case \"warning\":\n            return msalCommon.LogLevel.Warning;\n        default:\n            // default msal logging level should be Info\n            return msalCommon.LogLevel.Info;\n    }\n}\n/**\n * Wraps core-util's randomUUID in order to allow for mocking in tests.\n * This prepares the library for the upcoming core-util update to ESM.\n *\n * @internal\n * @returns A string containing a random UUID\n */\nexport function randomUUID() {\n    return coreRandomUUID();\n}\n/**\n * Handles MSAL errors.\n */\nexport function handleMsalError(scopes, error, getTokenOptions) {\n    if (error.name === \"AuthError\" ||\n        error.name === \"ClientAuthError\" ||\n        error.name === \"BrowserAuthError\") {\n        const msalError = error;\n        switch (msalError.errorCode) {\n            case \"endpoints_resolution_error\":\n                logger.info(formatError(scopes, error.message));\n                return new CredentialUnavailableError(error.message);\n            case \"device_code_polling_cancelled\":\n                return new AbortError(\"The authentication has been aborted by the caller.\");\n            case \"consent_required\":\n            case \"interaction_required\":\n            case \"login_required\":\n                logger.info(formatError(scopes, `Authentication returned errorCode ${msalError.errorCode}`));\n                break;\n            default:\n                logger.info(formatError(scopes, `Failed to acquire token: ${error.message}`));\n                break;\n        }\n    }\n    if (error.name === \"ClientConfigurationError\" ||\n        error.name === \"BrowserConfigurationAuthError\" ||\n        error.name === \"AbortError\" ||\n        error.name === \"AuthenticationError\") {\n        return error;\n    }\n    if (error.name === \"NativeAuthError\") {\n        logger.info(formatError(scopes, `Error from the native broker: ${error.message} with status code: ${error.statusCode}`));\n        return error;\n    }\n    return new AuthenticationRequiredError({ scopes, getTokenOptions, message: error.message });\n}\n// transformations\nexport function publicToMsal(account) {\n    return {\n        localAccountId: account.homeAccountId,\n        environment: account.authority,\n        username: account.username,\n        homeAccountId: account.homeAccountId,\n        tenantId: account.tenantId,\n    };\n}\nexport function msalToPublic(clientId, account) {\n    const record = {\n        authority: account.environment ?? DefaultAuthority,\n        homeAccountId: account.homeAccountId,\n        tenantId: account.tenantId || DefaultTenantId,\n        username: account.username,\n        clientId,\n        version: LatestAuthenticationRecordVersion,\n    };\n    return record;\n}\n/**\n * Serializes an `AuthenticationRecord` into a string.\n *\n * The output of a serialized authentication record will contain the following properties:\n *\n * - \"authority\"\n * - \"homeAccountId\"\n * - \"clientId\"\n * - \"tenantId\"\n * - \"username\"\n * - \"version\"\n *\n * To later convert this string to a serialized `AuthenticationRecord`, please use the exported function `deserializeAuthenticationRecord()`.\n */\nexport function serializeAuthenticationRecord(record) {\n    return JSON.stringify(record);\n}\n/**\n * Deserializes a previously serialized authentication record from a string into an object.\n *\n * The input string must contain the following properties:\n *\n * - \"authority\"\n * - \"homeAccountId\"\n * - \"clientId\"\n * - \"tenantId\"\n * - \"username\"\n * - \"version\"\n *\n * If the version we receive is unsupported, an error will be thrown.\n *\n * At the moment, the only available version is: \"1.0\", which is always set when the authentication record is serialized.\n *\n * @param serializedRecord - Authentication record previously serialized into string.\n * @returns AuthenticationRecord.\n */\nexport function deserializeAuthenticationRecord(serializedRecord) {\n    const parsed = JSON.parse(serializedRecord);\n    if (parsed.version && parsed.version !== LatestAuthenticationRecordVersion) {\n        throw Error(\"Unsupported AuthenticationRecord version\");\n    }\n    return parsed;\n}\n//# sourceMappingURL=utils.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n/**\n * Default key used to access the XML attributes.\n */\nexport const XML_ATTRKEY = \"$\";\n/**\n * Default key used to access the XML value content.\n */\nexport const XML_CHARKEY = \"_\";\n//# sourceMappingURL=interfaces.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n/**\n * A type guard for a primitive response body.\n * @param value - Value to test\n *\n * @internal\n */\nexport function isPrimitiveBody(value, mapperTypeName) {\n    return (mapperTypeName !== \"Composite\" &&\n        mapperTypeName !== \"Dictionary\" &&\n        (typeof value === \"string\" ||\n            typeof value === \"number\" ||\n            typeof value === \"boolean\" ||\n            (mapperTypeName === null || mapperTypeName === void 0 ? void 0 : mapperTypeName.match(/^(Date|DateTime|DateTimeRfc1123|UnixTime|ByteArray|Base64Url)$/i)) !==\n                null ||\n            value === undefined ||\n            value === null));\n}\nconst validateISODuration = /^(-|\\+)?P(?:([-+]?[0-9,.]*)Y)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)W)?(?:([-+]?[0-9,.]*)D)?(?:T(?:([-+]?[0-9,.]*)H)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)S)?)?$/;\n/**\n * Returns true if the given string is in ISO 8601 format.\n * @param value - The value to be validated for ISO 8601 duration format.\n * @internal\n */\nexport function isDuration(value) {\n    return validateISODuration.test(value);\n}\nconst validUuidRegex = /^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$/i;\n/**\n * Returns true if the provided uuid is valid.\n *\n * @param uuid - The uuid that needs to be validated.\n *\n * @internal\n */\nexport function isValidUuid(uuid) {\n    return validUuidRegex.test(uuid);\n}\n/**\n * Maps the response as follows:\n * - wraps the response body if needed (typically if its type is primitive).\n * - returns null if the combination of the headers and the body is empty.\n * - otherwise, returns the combination of the headers and the body.\n *\n * @param responseObject - a representation of the parsed response\n * @returns the response that will be returned to the user which can be null and/or wrapped\n *\n * @internal\n */\nfunction handleNullableResponseAndWrappableBody(responseObject) {\n    const combinedHeadersAndBody = Object.assign(Object.assign({}, responseObject.headers), responseObject.body);\n    if (responseObject.hasNullableType &&\n        Object.getOwnPropertyNames(combinedHeadersAndBody).length === 0) {\n        return responseObject.shouldWrapBody ? { body: null } : null;\n    }\n    else {\n        return responseObject.shouldWrapBody\n            ? Object.assign(Object.assign({}, responseObject.headers), { body: responseObject.body }) : combinedHeadersAndBody;\n    }\n}\n/**\n * Take a `FullOperationResponse` and turn it into a flat\n * response object to hand back to the consumer.\n * @param fullResponse - The processed response from the operation request\n * @param responseSpec - The response map from the OperationSpec\n *\n * @internal\n */\nexport function flattenResponse(fullResponse, responseSpec) {\n    var _a, _b;\n    const parsedHeaders = fullResponse.parsedHeaders;\n    // head methods never have a body, but we return a boolean set to body property\n    // to indicate presence/absence of the resource\n    if (fullResponse.request.method === \"HEAD\") {\n        return Object.assign(Object.assign({}, parsedHeaders), { body: fullResponse.parsedBody });\n    }\n    const bodyMapper = responseSpec && responseSpec.bodyMapper;\n    const isNullable = Boolean(bodyMapper === null || bodyMapper === void 0 ? void 0 : bodyMapper.nullable);\n    const expectedBodyTypeName = bodyMapper === null || bodyMapper === void 0 ? void 0 : bodyMapper.type.name;\n    /** If the body is asked for, we look at the expected body type to handle it */\n    if (expectedBodyTypeName === \"Stream\") {\n        return Object.assign(Object.assign({}, parsedHeaders), { blobBody: fullResponse.blobBody, readableStreamBody: fullResponse.readableStreamBody });\n    }\n    const modelProperties = (expectedBodyTypeName === \"Composite\" &&\n        bodyMapper.type.modelProperties) ||\n        {};\n    const isPageableResponse = Object.keys(modelProperties).some((k) => modelProperties[k].serializedName === \"\");\n    if (expectedBodyTypeName === \"Sequence\" || isPageableResponse) {\n        const arrayResponse = (_a = fullResponse.parsedBody) !== null && _a !== void 0 ? _a : [];\n        for (const key of Object.keys(modelProperties)) {\n            if (modelProperties[key].serializedName) {\n                arrayResponse[key] = (_b = fullResponse.parsedBody) === null || _b === void 0 ? void 0 : _b[key];\n            }\n        }\n        if (parsedHeaders) {\n            for (const key of Object.keys(parsedHeaders)) {\n                arrayResponse[key] = parsedHeaders[key];\n            }\n        }\n        return isNullable &&\n            !fullResponse.parsedBody &&\n            !parsedHeaders &&\n            Object.getOwnPropertyNames(modelProperties).length === 0\n            ? null\n            : arrayResponse;\n    }\n    return handleNullableResponseAndWrappableBody({\n        body: fullResponse.parsedBody,\n        headers: parsedHeaders,\n        hasNullableType: isNullable,\n        shouldWrapBody: isPrimitiveBody(fullResponse.parsedBody, expectedBodyTypeName),\n    });\n}\n//# sourceMappingURL=utils.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nimport * as base64 from \"./base64.js\";\nimport { XML_ATTRKEY, XML_CHARKEY } from \"./interfaces.js\";\nimport { isDuration, isValidUuid } from \"./utils.js\";\nclass SerializerImpl {\n    constructor(modelMappers = {}, isXML = false) {\n        this.modelMappers = modelMappers;\n        this.isXML = isXML;\n    }\n    /**\n     * @deprecated Removing the constraints validation on client side.\n     */\n    validateConstraints(mapper, value, objectName) {\n        const failValidation = (constraintName, constraintValue) => {\n            throw new Error(`\"${objectName}\" with value \"${value}\" should satisfy the constraint \"${constraintName}\": ${constraintValue}.`);\n        };\n        if (mapper.constraints && value !== undefined && value !== null) {\n            const { ExclusiveMaximum, ExclusiveMinimum, InclusiveMaximum, InclusiveMinimum, MaxItems, MaxLength, MinItems, MinLength, MultipleOf, Pattern, UniqueItems, } = mapper.constraints;\n            if (ExclusiveMaximum !== undefined && value >= ExclusiveMaximum) {\n                failValidation(\"ExclusiveMaximum\", ExclusiveMaximum);\n            }\n            if (ExclusiveMinimum !== undefined && value <= ExclusiveMinimum) {\n                failValidation(\"ExclusiveMinimum\", ExclusiveMinimum);\n            }\n            if (InclusiveMaximum !== undefined && value > InclusiveMaximum) {\n                failValidation(\"InclusiveMaximum\", InclusiveMaximum);\n            }\n            if (InclusiveMinimum !== undefined && value < InclusiveMinimum) {\n                failValidation(\"InclusiveMinimum\", InclusiveMinimum);\n            }\n            if (MaxItems !== undefined && value.length > MaxItems) {\n                failValidation(\"MaxItems\", MaxItems);\n            }\n            if (MaxLength !== undefined && value.length > MaxLength) {\n                failValidation(\"MaxLength\", MaxLength);\n            }\n            if (MinItems !== undefined && value.length < MinItems) {\n                failValidation(\"MinItems\", MinItems);\n            }\n            if (MinLength !== undefined && value.length < MinLength) {\n                failValidation(\"MinLength\", MinLength);\n            }\n            if (MultipleOf !== undefined && value % MultipleOf !== 0) {\n                failValidation(\"MultipleOf\", MultipleOf);\n            }\n            if (Pattern) {\n                const pattern = typeof Pattern === \"string\" ? new RegExp(Pattern) : Pattern;\n                if (typeof value !== \"string\" || value.match(pattern) === null) {\n                    failValidation(\"Pattern\", Pattern);\n                }\n            }\n            if (UniqueItems &&\n                value.some((item, i, ar) => ar.indexOf(item) !== i)) {\n                failValidation(\"UniqueItems\", UniqueItems);\n            }\n        }\n    }\n    /**\n     * Serialize the given object based on its metadata defined in the mapper\n     *\n     * @param mapper - The mapper which defines the metadata of the serializable object\n     *\n     * @param object - A valid Javascript object to be serialized\n     *\n     * @param objectName - Name of the serialized object\n     *\n     * @param options - additional options to serialization\n     *\n     * @returns A valid serialized Javascript object\n     */\n    serialize(mapper, object, objectName, options = { xml: {} }) {\n        var _a, _b, _c;\n        const updatedOptions = {\n            xml: {\n                rootName: (_a = options.xml.rootName) !== null && _a !== void 0 ? _a : \"\",\n                includeRoot: (_b = options.xml.includeRoot) !== null && _b !== void 0 ? _b : false,\n                xmlCharKey: (_c = options.xml.xmlCharKey) !== null && _c !== void 0 ? _c : XML_CHARKEY,\n            },\n        };\n        let payload = {};\n        const mapperType = mapper.type.name;\n        if (!objectName) {\n            objectName = mapper.serializedName;\n        }\n        if (mapperType.match(/^Sequence$/i) !== null) {\n            payload = [];\n        }\n        if (mapper.isConstant) {\n            object = mapper.defaultValue;\n        }\n        // This table of allowed values should help explain\n        // the mapper.required and mapper.nullable properties.\n        // X means \"neither undefined or null are allowed\".\n        //           || required\n        //           || true      | false\n        //  nullable || ==========================\n        //      true || null      | undefined/null\n        //     false || X         | undefined\n        // undefined || X         | undefined/null\n        const { required, nullable } = mapper;\n        if (required && nullable && object === undefined) {\n            throw new Error(`${objectName} cannot be undefined.`);\n        }\n        if (required && !nullable && (object === undefined || object === null)) {\n            throw new Error(`${objectName} cannot be null or undefined.`);\n        }\n        if (!required && nullable === false && object === null) {\n            throw new Error(`${objectName} cannot be null.`);\n        }\n        if (object === undefined || object === null) {\n            payload = object;\n        }\n        else {\n            if (mapperType.match(/^any$/i) !== null) {\n                payload = object;\n            }\n            else if (mapperType.match(/^(Number|String|Boolean|Object|Stream|Uuid)$/i) !== null) {\n                payload = serializeBasicTypes(mapperType, objectName, object);\n            }\n            else if (mapperType.match(/^Enum$/i) !== null) {\n                const enumMapper = mapper;\n                payload = serializeEnumType(objectName, enumMapper.type.allowedValues, object);\n            }\n            else if (mapperType.match(/^(Date|DateTime|TimeSpan|DateTimeRfc1123|UnixTime)$/i) !== null) {\n                payload = serializeDateTypes(mapperType, object, objectName);\n            }\n            else if (mapperType.match(/^ByteArray$/i) !== null) {\n                payload = serializeByteArrayType(objectName, object);\n            }\n            else if (mapperType.match(/^Base64Url$/i) !== null) {\n                payload = serializeBase64UrlType(objectName, object);\n            }\n            else if (mapperType.match(/^Sequence$/i) !== null) {\n                payload = serializeSequenceType(this, mapper, object, objectName, Boolean(this.isXML), updatedOptions);\n            }\n            else if (mapperType.match(/^Dictionary$/i) !== null) {\n                payload = serializeDictionaryType(this, mapper, object, objectName, Boolean(this.isXML), updatedOptions);\n            }\n            else if (mapperType.match(/^Composite$/i) !== null) {\n                payload = serializeCompositeType(this, mapper, object, objectName, Boolean(this.isXML), updatedOptions);\n            }\n        }\n        return payload;\n    }\n    /**\n     * Deserialize the given object based on its metadata defined in the mapper\n     *\n     * @param mapper - The mapper which defines the metadata of the serializable object\n     *\n     * @param responseBody - A valid Javascript entity to be deserialized\n     *\n     * @param objectName - Name of the deserialized object\n     *\n     * @param options - Controls behavior of XML parser and builder.\n     *\n     * @returns A valid deserialized Javascript object\n     */\n    deserialize(mapper, responseBody, objectName, options = { xml: {} }) {\n        var _a, _b, _c, _d;\n        const updatedOptions = {\n            xml: {\n                rootName: (_a = options.xml.rootName) !== null && _a !== void 0 ? _a : \"\",\n                includeRoot: (_b = options.xml.includeRoot) !== null && _b !== void 0 ? _b : false,\n                xmlCharKey: (_c = options.xml.xmlCharKey) !== null && _c !== void 0 ? _c : XML_CHARKEY,\n            },\n            ignoreUnknownProperties: (_d = options.ignoreUnknownProperties) !== null && _d !== void 0 ? _d : false,\n        };\n        if (responseBody === undefined || responseBody === null) {\n            if (this.isXML && mapper.type.name === \"Sequence\" && !mapper.xmlIsWrapped) {\n                // Edge case for empty XML non-wrapped lists. xml2js can't distinguish\n                // between the list being empty versus being missing,\n                // so let's do the more user-friendly thing and return an empty list.\n                responseBody = [];\n            }\n            // specifically check for undefined as default value can be a falsey value `0, \"\", false, null`\n            if (mapper.defaultValue !== undefined) {\n                responseBody = mapper.defaultValue;\n            }\n            return responseBody;\n        }\n        let payload;\n        const mapperType = mapper.type.name;\n        if (!objectName) {\n            objectName = mapper.serializedName;\n        }\n        if (mapperType.match(/^Composite$/i) !== null) {\n            payload = deserializeCompositeType(this, mapper, responseBody, objectName, updatedOptions);\n        }\n        else {\n            if (this.isXML) {\n                const xmlCharKey = updatedOptions.xml.xmlCharKey;\n                /**\n                 * If the mapper specifies this as a non-composite type value but the responseBody contains\n                 * both header (\"$\" i.e., XML_ATTRKEY) and body (\"#\" i.e., XML_CHARKEY) properties,\n                 * then just reduce the responseBody value to the body (\"#\" i.e., XML_CHARKEY) property.\n                 */\n                if (responseBody[XML_ATTRKEY] !== undefined && responseBody[xmlCharKey] !== undefined) {\n                    responseBody = responseBody[xmlCharKey];\n                }\n            }\n            if (mapperType.match(/^Number$/i) !== null) {\n                payload = parseFloat(responseBody);\n                if (isNaN(payload)) {\n                    payload = responseBody;\n                }\n            }\n            else if (mapperType.match(/^Boolean$/i) !== null) {\n                if (responseBody === \"true\") {\n                    payload = true;\n                }\n                else if (responseBody === \"false\") {\n                    payload = false;\n                }\n                else {\n                    payload = responseBody;\n                }\n            }\n            else if (mapperType.match(/^(String|Enum|Object|Stream|Uuid|TimeSpan|any)$/i) !== null) {\n                payload = responseBody;\n            }\n            else if (mapperType.match(/^(Date|DateTime|DateTimeRfc1123)$/i) !== null) {\n                payload = new Date(responseBody);\n            }\n            else if (mapperType.match(/^UnixTime$/i) !== null) {\n                payload = unixTimeToDate(responseBody);\n            }\n            else if (mapperType.match(/^ByteArray$/i) !== null) {\n                payload = base64.decodeString(responseBody);\n            }\n            else if (mapperType.match(/^Base64Url$/i) !== null) {\n                payload = base64UrlToByteArray(responseBody);\n            }\n            else if (mapperType.match(/^Sequence$/i) !== null) {\n                payload = deserializeSequenceType(this, mapper, responseBody, objectName, updatedOptions);\n            }\n            else if (mapperType.match(/^Dictionary$/i) !== null) {\n                payload = deserializeDictionaryType(this, mapper, responseBody, objectName, updatedOptions);\n            }\n        }\n        if (mapper.isConstant) {\n            payload = mapper.defaultValue;\n        }\n        return payload;\n    }\n}\n/**\n * Method that creates and returns a Serializer.\n * @param modelMappers - Known models to map\n * @param isXML - If XML should be supported\n */\nexport function createSerializer(modelMappers = {}, isXML = false) {\n    return new SerializerImpl(modelMappers, isXML);\n}\nfunction trimEnd(str, ch) {\n    let len = str.length;\n    while (len - 1 >= 0 && str[len - 1] === ch) {\n        --len;\n    }\n    return str.substr(0, len);\n}\nfunction bufferToBase64Url(buffer) {\n    if (!buffer) {\n        return undefined;\n    }\n    if (!(buffer instanceof Uint8Array)) {\n        throw new Error(`Please provide an input of type Uint8Array for converting to Base64Url.`);\n    }\n    // Uint8Array to Base64.\n    const str = base64.encodeByteArray(buffer);\n    // Base64 to Base64Url.\n    return trimEnd(str, \"=\").replace(/\\+/g, \"-\").replace(/\\//g, \"_\");\n}\nfunction base64UrlToByteArray(str) {\n    if (!str) {\n        return undefined;\n    }\n    if (str && typeof str.valueOf() !== \"string\") {\n        throw new Error(\"Please provide an input of type string for converting to Uint8Array\");\n    }\n    // Base64Url to Base64.\n    str = str.replace(/-/g, \"+\").replace(/_/g, \"/\");\n    // Base64 to Uint8Array.\n    return base64.decodeString(str);\n}\nfunction splitSerializeName(prop) {\n    const classes = [];\n    let partialclass = \"\";\n    if (prop) {\n        const subwords = prop.split(\".\");\n        for (const item of subwords) {\n            if (item.charAt(item.length - 1) === \"\\\\\") {\n                partialclass += item.substr(0, item.length - 1) + \".\";\n            }\n            else {\n                partialclass += item;\n                classes.push(partialclass);\n                partialclass = \"\";\n            }\n        }\n    }\n    return classes;\n}\nfunction dateToUnixTime(d) {\n    if (!d) {\n        return undefined;\n    }\n    if (typeof d.valueOf() === \"string\") {\n        d = new Date(d);\n    }\n    return Math.floor(d.getTime() / 1000);\n}\nfunction unixTimeToDate(n) {\n    if (!n) {\n        return undefined;\n    }\n    return new Date(n * 1000);\n}\nfunction serializeBasicTypes(typeName, objectName, value) {\n    if (value !== null && value !== undefined) {\n        if (typeName.match(/^Number$/i) !== null) {\n            if (typeof value !== \"number\") {\n                throw new Error(`${objectName} with value ${value} must be of type number.`);\n            }\n        }\n        else if (typeName.match(/^String$/i) !== null) {\n            if (typeof value.valueOf() !== \"string\") {\n                throw new Error(`${objectName} with value \"${value}\" must be of type string.`);\n            }\n        }\n        else if (typeName.match(/^Uuid$/i) !== null) {\n            if (!(typeof value.valueOf() === \"string\" && isValidUuid(value))) {\n                throw new Error(`${objectName} with value \"${value}\" must be of type string and a valid uuid.`);\n            }\n        }\n        else if (typeName.match(/^Boolean$/i) !== null) {\n            if (typeof value !== \"boolean\") {\n                throw new Error(`${objectName} with value ${value} must be of type boolean.`);\n            }\n        }\n        else if (typeName.match(/^Stream$/i) !== null) {\n            const objectType = typeof value;\n            if (objectType !== \"string\" &&\n                typeof value.pipe !== \"function\" && // NodeJS.ReadableStream\n                typeof value.tee !== \"function\" && // browser ReadableStream\n                !(value instanceof ArrayBuffer) &&\n                !ArrayBuffer.isView(value) &&\n                // File objects count as a type of Blob, so we want to use instanceof explicitly\n                !((typeof Blob === \"function\" || typeof Blob === \"object\") && value instanceof Blob) &&\n                objectType !== \"function\") {\n                throw new Error(`${objectName} must be a string, Blob, ArrayBuffer, ArrayBufferView, ReadableStream, or () => ReadableStream.`);\n            }\n        }\n    }\n    return value;\n}\nfunction serializeEnumType(objectName, allowedValues, value) {\n    if (!allowedValues) {\n        throw new Error(`Please provide a set of allowedValues to validate ${objectName} as an Enum Type.`);\n    }\n    const isPresent = allowedValues.some((item) => {\n        if (typeof item.valueOf() === \"string\") {\n            return item.toLowerCase() === value.toLowerCase();\n        }\n        return item === value;\n    });\n    if (!isPresent) {\n        throw new Error(`${value} is not a valid value for ${objectName}. The valid values are: ${JSON.stringify(allowedValues)}.`);\n    }\n    return value;\n}\nfunction serializeByteArrayType(objectName, value) {\n    if (value !== undefined && value !== null) {\n        if (!(value instanceof Uint8Array)) {\n            throw new Error(`${objectName} must be of type Uint8Array.`);\n        }\n        value = base64.encodeByteArray(value);\n    }\n    return value;\n}\nfunction serializeBase64UrlType(objectName, value) {\n    if (value !== undefined && value !== null) {\n        if (!(value instanceof Uint8Array)) {\n            throw new Error(`${objectName} must be of type Uint8Array.`);\n        }\n        value = bufferToBase64Url(value);\n    }\n    return value;\n}\nfunction serializeDateTypes(typeName, value, objectName) {\n    if (value !== undefined && value !== null) {\n        if (typeName.match(/^Date$/i) !== null) {\n            if (!(value instanceof Date ||\n                (typeof value.valueOf() === \"string\" && !isNaN(Date.parse(value))))) {\n                throw new Error(`${objectName} must be an instanceof Date or a string in ISO8601 format.`);\n            }\n            value =\n                value instanceof Date\n                    ? value.toISOString().substring(0, 10)\n                    : new Date(value).toISOString().substring(0, 10);\n        }\n        else if (typeName.match(/^DateTime$/i) !== null) {\n            if (!(value instanceof Date ||\n                (typeof value.valueOf() === \"string\" && !isNaN(Date.parse(value))))) {\n                throw new Error(`${objectName} must be an instanceof Date or a string in ISO8601 format.`);\n            }\n            value = value instanceof Date ? value.toISOString() : new Date(value).toISOString();\n        }\n        else if (typeName.match(/^DateTimeRfc1123$/i) !== null) {\n            if (!(value instanceof Date ||\n                (typeof value.valueOf() === \"string\" && !isNaN(Date.parse(value))))) {\n                throw new Error(`${objectName} must be an instanceof Date or a string in RFC-1123 format.`);\n            }\n            value = value instanceof Date ? value.toUTCString() : new Date(value).toUTCString();\n        }\n        else if (typeName.match(/^UnixTime$/i) !== null) {\n            if (!(value instanceof Date ||\n                (typeof value.valueOf() === \"string\" && !isNaN(Date.parse(value))))) {\n                throw new Error(`${objectName} must be an instanceof Date or a string in RFC-1123/ISO8601 format ` +\n                    `for it to be serialized in UnixTime/Epoch format.`);\n            }\n            value = dateToUnixTime(value);\n        }\n        else if (typeName.match(/^TimeSpan$/i) !== null) {\n            if (!isDuration(value)) {\n                throw new Error(`${objectName} must be a string in ISO 8601 format. Instead was \"${value}\".`);\n            }\n        }\n    }\n    return value;\n}\nfunction serializeSequenceType(serializer, mapper, object, objectName, isXml, options) {\n    var _a;\n    if (!Array.isArray(object)) {\n        throw new Error(`${objectName} must be of type Array.`);\n    }\n    let elementType = mapper.type.element;\n    if (!elementType || typeof elementType !== \"object\") {\n        throw new Error(`element\" metadata for an Array must be defined in the ` +\n            `mapper and it must of type \"object\" in ${objectName}.`);\n    }\n    // Quirk: Composite mappers referenced by `element` might\n    // not have *all* properties declared (like uberParent),\n    // so let's try to look up the full definition by name.\n    if (elementType.type.name === \"Composite\" && elementType.type.className) {\n        elementType = (_a = serializer.modelMappers[elementType.type.className]) !== null && _a !== void 0 ? _a : elementType;\n    }\n    const tempArray = [];\n    for (let i = 0; i < object.length; i++) {\n        const serializedValue = serializer.serialize(elementType, object[i], objectName, options);\n        if (isXml && elementType.xmlNamespace) {\n            const xmlnsKey = elementType.xmlNamespacePrefix\n                ? `xmlns:${elementType.xmlNamespacePrefix}`\n                : \"xmlns\";\n            if (elementType.type.name === \"Composite\") {\n                tempArray[i] = Object.assign({}, serializedValue);\n                tempArray[i][XML_ATTRKEY] = { [xmlnsKey]: elementType.xmlNamespace };\n            }\n            else {\n                tempArray[i] = {};\n                tempArray[i][options.xml.xmlCharKey] = serializedValue;\n                tempArray[i][XML_ATTRKEY] = { [xmlnsKey]: elementType.xmlNamespace };\n            }\n        }\n        else {\n            tempArray[i] = serializedValue;\n        }\n    }\n    return tempArray;\n}\nfunction serializeDictionaryType(serializer, mapper, object, objectName, isXml, options) {\n    if (typeof object !== \"object\") {\n        throw new Error(`${objectName} must be of type object.`);\n    }\n    const valueType = mapper.type.value;\n    if (!valueType || typeof valueType !== \"object\") {\n        throw new Error(`\"value\" metadata for a Dictionary must be defined in the ` +\n            `mapper and it must of type \"object\" in ${objectName}.`);\n    }\n    const tempDictionary = {};\n    for (const key of Object.keys(object)) {\n        const serializedValue = serializer.serialize(valueType, object[key], objectName, options);\n        // If the element needs an XML namespace we need to add it within the $ property\n        tempDictionary[key] = getXmlObjectValue(valueType, serializedValue, isXml, options);\n    }\n    // Add the namespace to the root element if needed\n    if (isXml && mapper.xmlNamespace) {\n        const xmlnsKey = mapper.xmlNamespacePrefix ? `xmlns:${mapper.xmlNamespacePrefix}` : \"xmlns\";\n        const result = tempDictionary;\n        result[XML_ATTRKEY] = { [xmlnsKey]: mapper.xmlNamespace };\n        return result;\n    }\n    return tempDictionary;\n}\n/**\n * Resolves the additionalProperties property from a referenced mapper\n * @param serializer - the serializer containing the entire set of mappers\n * @param mapper - the composite mapper to resolve\n * @param objectName - name of the object being serialized\n */\nfunction resolveAdditionalProperties(serializer, mapper, objectName) {\n    const additionalProperties = mapper.type.additionalProperties;\n    if (!additionalProperties && mapper.type.className) {\n        const modelMapper = resolveReferencedMapper(serializer, mapper, objectName);\n        return modelMapper === null || modelMapper === void 0 ? void 0 : modelMapper.type.additionalProperties;\n    }\n    return additionalProperties;\n}\n/**\n * Finds the mapper referenced by className\n * @param serializer - the serializer containing the entire set of mappers\n * @param mapper - the composite mapper to resolve\n * @param objectName - name of the object being serialized\n */\nfunction resolveReferencedMapper(serializer, mapper, objectName) {\n    const className = mapper.type.className;\n    if (!className) {\n        throw new Error(`Class name for model \"${objectName}\" is not provided in the mapper \"${JSON.stringify(mapper, undefined, 2)}\".`);\n    }\n    return serializer.modelMappers[className];\n}\n/**\n * Resolves a composite mapper's modelProperties.\n * @param serializer - the serializer containing the entire set of mappers\n * @param mapper - the composite mapper to resolve\n */\nfunction resolveModelProperties(serializer, mapper, objectName) {\n    let modelProps = mapper.type.modelProperties;\n    if (!modelProps) {\n        const modelMapper = resolveReferencedMapper(serializer, mapper, objectName);\n        if (!modelMapper) {\n            throw new Error(`mapper() cannot be null or undefined for model \"${mapper.type.className}\".`);\n        }\n        modelProps = modelMapper === null || modelMapper === void 0 ? void 0 : modelMapper.type.modelProperties;\n        if (!modelProps) {\n            throw new Error(`modelProperties cannot be null or undefined in the ` +\n                `mapper \"${JSON.stringify(modelMapper)}\" of type \"${mapper.type.className}\" for object \"${objectName}\".`);\n        }\n    }\n    return modelProps;\n}\nfunction serializeCompositeType(serializer, mapper, object, objectName, isXml, options) {\n    if (getPolymorphicDiscriminatorRecursively(serializer, mapper)) {\n        mapper = getPolymorphicMapper(serializer, mapper, object, \"clientName\");\n    }\n    if (object !== undefined && object !== null) {\n        const payload = {};\n        const modelProps = resolveModelProperties(serializer, mapper, objectName);\n        for (const key of Object.keys(modelProps)) {\n            const propertyMapper = modelProps[key];\n            if (propertyMapper.readOnly) {\n                continue;\n            }\n            let propName;\n            let parentObject = payload;\n            if (serializer.isXML) {\n                if (propertyMapper.xmlIsWrapped) {\n                    propName = propertyMapper.xmlName;\n                }\n                else {\n                    propName = propertyMapper.xmlElementName || propertyMapper.xmlName;\n                }\n            }\n            else {\n                const paths = splitSerializeName(propertyMapper.serializedName);\n                propName = paths.pop();\n                for (const pathName of paths) {\n                    const childObject = parentObject[pathName];\n                    if ((childObject === undefined || childObject === null) &&\n                        ((object[key] !== undefined && object[key] !== null) ||\n                            propertyMapper.defaultValue !== undefined)) {\n                        parentObject[pathName] = {};\n                    }\n                    parentObject = parentObject[pathName];\n                }\n            }\n            if (parentObject !== undefined && parentObject !== null) {\n                if (isXml && mapper.xmlNamespace) {\n                    const xmlnsKey = mapper.xmlNamespacePrefix\n                        ? `xmlns:${mapper.xmlNamespacePrefix}`\n                        : \"xmlns\";\n                    parentObject[XML_ATTRKEY] = Object.assign(Object.assign({}, parentObject[XML_ATTRKEY]), { [xmlnsKey]: mapper.xmlNamespace });\n                }\n                const propertyObjectName = propertyMapper.serializedName !== \"\"\n                    ? objectName + \".\" + propertyMapper.serializedName\n                    : objectName;\n                let toSerialize = object[key];\n                const polymorphicDiscriminator = getPolymorphicDiscriminatorRecursively(serializer, mapper);\n                if (polymorphicDiscriminator &&\n                    polymorphicDiscriminator.clientName === key &&\n                    (toSerialize === undefined || toSerialize === null)) {\n                    toSerialize = mapper.serializedName;\n                }\n                const serializedValue = serializer.serialize(propertyMapper, toSerialize, propertyObjectName, options);\n                if (serializedValue !== undefined && propName !== undefined && propName !== null) {\n                    const value = getXmlObjectValue(propertyMapper, serializedValue, isXml, options);\n                    if (isXml && propertyMapper.xmlIsAttribute) {\n                        // XML_ATTRKEY, i.e., $ is the key attributes are kept under in xml2js.\n                        // This keeps things simple while preventing name collision\n                        // with names in user documents.\n                        parentObject[XML_ATTRKEY] = parentObject[XML_ATTRKEY] || {};\n                        parentObject[XML_ATTRKEY][propName] = serializedValue;\n                    }\n                    else if (isXml && propertyMapper.xmlIsWrapped) {\n                        parentObject[propName] = { [propertyMapper.xmlElementName]: value };\n                    }\n                    else {\n                        parentObject[propName] = value;\n                    }\n                }\n            }\n        }\n        const additionalPropertiesMapper = resolveAdditionalProperties(serializer, mapper, objectName);\n        if (additionalPropertiesMapper) {\n            const propNames = Object.keys(modelProps);\n            for (const clientPropName in object) {\n                const isAdditionalProperty = propNames.every((pn) => pn !== clientPropName);\n                if (isAdditionalProperty) {\n                    payload[clientPropName] = serializer.serialize(additionalPropertiesMapper, object[clientPropName], objectName + '[\"' + clientPropName + '\"]', options);\n                }\n            }\n        }\n        return payload;\n    }\n    return object;\n}\nfunction getXmlObjectValue(propertyMapper, serializedValue, isXml, options) {\n    if (!isXml || !propertyMapper.xmlNamespace) {\n        return serializedValue;\n    }\n    const xmlnsKey = propertyMapper.xmlNamespacePrefix\n        ? `xmlns:${propertyMapper.xmlNamespacePrefix}`\n        : \"xmlns\";\n    const xmlNamespace = { [xmlnsKey]: propertyMapper.xmlNamespace };\n    if ([\"Composite\"].includes(propertyMapper.type.name)) {\n        if (serializedValue[XML_ATTRKEY]) {\n            return serializedValue;\n        }\n        else {\n            const result = Object.assign({}, serializedValue);\n            result[XML_ATTRKEY] = xmlNamespace;\n            return result;\n        }\n    }\n    const result = {};\n    result[options.xml.xmlCharKey] = serializedValue;\n    result[XML_ATTRKEY] = xmlNamespace;\n    return result;\n}\nfunction isSpecialXmlProperty(propertyName, options) {\n    return [XML_ATTRKEY, options.xml.xmlCharKey].includes(propertyName);\n}\nfunction deserializeCompositeType(serializer, mapper, responseBody, objectName, options) {\n    var _a, _b;\n    const xmlCharKey = (_a = options.xml.xmlCharKey) !== null && _a !== void 0 ? _a : XML_CHARKEY;\n    if (getPolymorphicDiscriminatorRecursively(serializer, mapper)) {\n        mapper = getPolymorphicMapper(serializer, mapper, responseBody, \"serializedName\");\n    }\n    const modelProps = resolveModelProperties(serializer, mapper, objectName);\n    let instance = {};\n    const handledPropertyNames = [];\n    for (const key of Object.keys(modelProps)) {\n        const propertyMapper = modelProps[key];\n        const paths = splitSerializeName(modelProps[key].serializedName);\n        handledPropertyNames.push(paths[0]);\n        const { serializedName, xmlName, xmlElementName } = propertyMapper;\n        let propertyObjectName = objectName;\n        if (serializedName !== \"\" && serializedName !== undefined) {\n            propertyObjectName = objectName + \".\" + serializedName;\n        }\n        const headerCollectionPrefix = propertyMapper.headerCollectionPrefix;\n        if (headerCollectionPrefix) {\n            const dictionary = {};\n            for (const headerKey of Object.keys(responseBody)) {\n                if (headerKey.startsWith(headerCollectionPrefix)) {\n                    dictionary[headerKey.substring(headerCollectionPrefix.length)] = serializer.deserialize(propertyMapper.type.value, responseBody[headerKey], propertyObjectName, options);\n                }\n                handledPropertyNames.push(headerKey);\n            }\n            instance[key] = dictionary;\n        }\n        else if (serializer.isXML) {\n            if (propertyMapper.xmlIsAttribute && responseBody[XML_ATTRKEY]) {\n                instance[key] = serializer.deserialize(propertyMapper, responseBody[XML_ATTRKEY][xmlName], propertyObjectName, options);\n            }\n            else if (propertyMapper.xmlIsMsText) {\n                if (responseBody[xmlCharKey] !== undefined) {\n                    instance[key] = responseBody[xmlCharKey];\n                }\n                else if (typeof responseBody === \"string\") {\n                    // The special case where xml parser parses \"<Name>content</Name>\" into JSON of\n                    //   `{ name: \"content\"}` instead of `{ name: { \"_\": \"content\" }}`\n                    instance[key] = responseBody;\n                }\n            }\n            else {\n                const propertyName = xmlElementName || xmlName || serializedName;\n                if (propertyMapper.xmlIsWrapped) {\n                    /* a list of <xmlElementName> wrapped by <xmlName>\n                      For the xml example below\n                        <Cors>\n                          <CorsRule>...</CorsRule>\n                          <CorsRule>...</CorsRule>\n                        </Cors>\n                      the responseBody has\n                        {\n                          Cors: {\n                            CorsRule: [{...}, {...}]\n                          }\n                        }\n                      xmlName is \"Cors\" and xmlElementName is\"CorsRule\".\n                    */\n                    const wrapped = responseBody[xmlName];\n                    const elementList = (_b = wrapped === null || wrapped === void 0 ? void 0 : wrapped[xmlElementName]) !== null && _b !== void 0 ? _b : [];\n                    instance[key] = serializer.deserialize(propertyMapper, elementList, propertyObjectName, options);\n                    handledPropertyNames.push(xmlName);\n                }\n                else {\n                    const property = responseBody[propertyName];\n                    instance[key] = serializer.deserialize(propertyMapper, property, propertyObjectName, options);\n                    handledPropertyNames.push(propertyName);\n                }\n            }\n        }\n        else {\n            // deserialize the property if it is present in the provided responseBody instance\n            let propertyInstance;\n            let res = responseBody;\n            // traversing the object step by step.\n            let steps = 0;\n            for (const item of paths) {\n                if (!res)\n                    break;\n                steps++;\n                res = res[item];\n            }\n            // only accept null when reaching the last position of object otherwise it would be undefined\n            if (res === null && steps < paths.length) {\n                res = undefined;\n            }\n            propertyInstance = res;\n            const polymorphicDiscriminator = mapper.type.polymorphicDiscriminator;\n            // checking that the model property name (key)(ex: \"fishtype\") and the\n            // clientName of the polymorphicDiscriminator {metadata} (ex: \"fishtype\")\n            // instead of the serializedName of the polymorphicDiscriminator (ex: \"fish.type\")\n            // is a better approach. The generator is not consistent with escaping '\\.' in the\n            // serializedName of the property (ex: \"fish\\.type\") that is marked as polymorphic discriminator\n            // and the serializedName of the metadata polymorphicDiscriminator (ex: \"fish.type\"). However,\n            // the clientName transformation of the polymorphicDiscriminator (ex: \"fishtype\") and\n            // the transformation of model property name (ex: \"fishtype\") is done consistently.\n            // Hence, it is a safer bet to rely on the clientName of the polymorphicDiscriminator.\n            if (polymorphicDiscriminator &&\n                key === polymorphicDiscriminator.clientName &&\n                (propertyInstance === undefined || propertyInstance === null)) {\n                propertyInstance = mapper.serializedName;\n            }\n            let serializedValue;\n            // paging\n            if (Array.isArray(responseBody[key]) && modelProps[key].serializedName === \"\") {\n                propertyInstance = responseBody[key];\n                const arrayInstance = serializer.deserialize(propertyMapper, propertyInstance, propertyObjectName, options);\n                // Copy over any properties that have already been added into the instance, where they do\n                // not exist on the newly de-serialized array\n                for (const [k, v] of Object.entries(instance)) {\n                    if (!Object.prototype.hasOwnProperty.call(arrayInstance, k)) {\n                        arrayInstance[k] = v;\n                    }\n                }\n                instance = arrayInstance;\n            }\n            else if (propertyInstance !== undefined || propertyMapper.defaultValue !== undefined) {\n                serializedValue = serializer.deserialize(propertyMapper, propertyInstance, propertyObjectName, options);\n                instance[key] = serializedValue;\n            }\n        }\n    }\n    const additionalPropertiesMapper = mapper.type.additionalProperties;\n    if (additionalPropertiesMapper) {\n        const isAdditionalProperty = (responsePropName) => {\n            for (const clientPropName in modelProps) {\n                const paths = splitSerializeName(modelProps[clientPropName].serializedName);\n                if (paths[0] === responsePropName) {\n                    return false;\n                }\n            }\n            return true;\n        };\n        for (const responsePropName in responseBody) {\n            if (isAdditionalProperty(responsePropName)) {\n                instance[responsePropName] = serializer.deserialize(additionalPropertiesMapper, responseBody[responsePropName], objectName + '[\"' + responsePropName + '\"]', options);\n            }\n        }\n    }\n    else if (responseBody && !options.ignoreUnknownProperties) {\n        for (const key of Object.keys(responseBody)) {\n            if (instance[key] === undefined &&\n                !handledPropertyNames.includes(key) &&\n                !isSpecialXmlProperty(key, options)) {\n                instance[key] = responseBody[key];\n            }\n        }\n    }\n    return instance;\n}\nfunction deserializeDictionaryType(serializer, mapper, responseBody, objectName, options) {\n    /* jshint validthis: true */\n    const value = mapper.type.value;\n    if (!value || typeof value !== \"object\") {\n        throw new Error(`\"value\" metadata for a Dictionary must be defined in the ` +\n            `mapper and it must of type \"object\" in ${objectName}`);\n    }\n    if (responseBody) {\n        const tempDictionary = {};\n        for (const key of Object.keys(responseBody)) {\n            tempDictionary[key] = serializer.deserialize(value, responseBody[key], objectName, options);\n        }\n        return tempDictionary;\n    }\n    return responseBody;\n}\nfunction deserializeSequenceType(serializer, mapper, responseBody, objectName, options) {\n    var _a;\n    let element = mapper.type.element;\n    if (!element || typeof element !== \"object\") {\n        throw new Error(`element\" metadata for an Array must be defined in the ` +\n            `mapper and it must of type \"object\" in ${objectName}`);\n    }\n    if (responseBody) {\n        if (!Array.isArray(responseBody)) {\n            // xml2js will interpret a single element array as just the element, so force it to be an array\n            responseBody = [responseBody];\n        }\n        // Quirk: Composite mappers referenced by `element` might\n        // not have *all* properties declared (like uberParent),\n        // so let's try to look up the full definition by name.\n        if (element.type.name === \"Composite\" && element.type.className) {\n            element = (_a = serializer.modelMappers[element.type.className]) !== null && _a !== void 0 ? _a : element;\n        }\n        const tempArray = [];\n        for (let i = 0; i < responseBody.length; i++) {\n            tempArray[i] = serializer.deserialize(element, responseBody[i], `${objectName}[${i}]`, options);\n        }\n        return tempArray;\n    }\n    return responseBody;\n}\nfunction getIndexDiscriminator(discriminators, discriminatorValue, typeName) {\n    const typeNamesToCheck = [typeName];\n    while (typeNamesToCheck.length) {\n        const currentName = typeNamesToCheck.shift();\n        const indexDiscriminator = discriminatorValue === currentName\n            ? discriminatorValue\n            : currentName + \".\" + discriminatorValue;\n        if (Object.prototype.hasOwnProperty.call(discriminators, indexDiscriminator)) {\n            return discriminators[indexDiscriminator];\n        }\n        else {\n            for (const [name, mapper] of Object.entries(discriminators)) {\n                if (name.startsWith(currentName + \".\") &&\n                    mapper.type.uberParent === currentName &&\n                    mapper.type.className) {\n                    typeNamesToCheck.push(mapper.type.className);\n                }\n            }\n        }\n    }\n    return undefined;\n}\nfunction getPolymorphicMapper(serializer, mapper, object, polymorphicPropertyName) {\n    var _a;\n    const polymorphicDiscriminator = getPolymorphicDiscriminatorRecursively(serializer, mapper);\n    if (polymorphicDiscriminator) {\n        let discriminatorName = polymorphicDiscriminator[polymorphicPropertyName];\n        if (discriminatorName) {\n            // The serializedName might have \\\\, which we just want to ignore\n            if (polymorphicPropertyName === \"serializedName\") {\n                discriminatorName = discriminatorName.replace(/\\\\/gi, \"\");\n            }\n            const discriminatorValue = object[discriminatorName];\n            const typeName = (_a = mapper.type.uberParent) !== null && _a !== void 0 ? _a : mapper.type.className;\n            if (typeof discriminatorValue === \"string\" && typeName) {\n                const polymorphicMapper = getIndexDiscriminator(serializer.modelMappers.discriminators, discriminatorValue, typeName);\n                if (polymorphicMapper) {\n                    mapper = polymorphicMapper;\n                }\n            }\n        }\n    }\n    return mapper;\n}\nfunction getPolymorphicDiscriminatorRecursively(serializer, mapper) {\n    return (mapper.type.polymorphicDiscriminator ||\n        getPolymorphicDiscriminatorSafely(serializer, mapper.type.uberParent) ||\n        getPolymorphicDiscriminatorSafely(serializer, mapper.type.className));\n}\nfunction getPolymorphicDiscriminatorSafely(serializer, typeName) {\n    return (typeName &&\n        serializer.modelMappers[typeName] &&\n        serializer.modelMappers[typeName].type.polymorphicDiscriminator);\n}\n/**\n * Known types of Mappers\n */\nexport const MapperTypeNames = {\n    Base64Url: \"Base64Url\",\n    Boolean: \"Boolean\",\n    ByteArray: \"ByteArray\",\n    Composite: \"Composite\",\n    Date: \"Date\",\n    DateTime: \"DateTime\",\n    DateTimeRfc1123: \"DateTimeRfc1123\",\n    Dictionary: \"Dictionary\",\n    Enum: \"Enum\",\n    Number: \"Number\",\n    Object: \"Object\",\n    Sequence: \"Sequence\",\n    String: \"String\",\n    Stream: \"Stream\",\n    TimeSpan: \"TimeSpan\",\n    UnixTime: \"UnixTime\",\n};\n//# sourceMappingURL=serializer.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n/**\n * This error is thrown when an asynchronous operation has been aborted.\n * Check for this error by testing the `name` that the name property of the\n * error matches `\"AbortError\"`.\n *\n * @example\n * ```ts snippet:ReadmeSampleAbortError\n * import { AbortError } from \"@typespec/ts-http-runtime\";\n *\n * async function doAsyncWork(options: { abortSignal: AbortSignal }): Promise<void> {\n *   if (options.abortSignal.aborted) {\n *     throw new AbortError();\n *   }\n *\n *   // do async work\n * }\n *\n * const controller = new AbortController();\n * controller.abort();\n *\n * try {\n *   doAsyncWork({ abortSignal: controller.signal });\n * } catch (e) {\n *   if (e instanceof Error && e.name === \"AbortError\") {\n *     // handle abort error here.\n *   }\n * }\n * ```\n */\nexport class AbortError extends Error {\n    constructor(message) {\n        super(message);\n        this.name = \"AbortError\";\n    }\n}\n//# sourceMappingURL=AbortError.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nfunction normalizeName(name) {\n    return name.toLowerCase();\n}\nfunction* headerIterator(map) {\n    for (const entry of map.values()) {\n        yield [entry.name, entry.value];\n    }\n}\nclass HttpHeadersImpl {\n    constructor(rawHeaders) {\n        this._headersMap = new Map();\n        if (rawHeaders) {\n            for (const headerName of Object.keys(rawHeaders)) {\n                this.set(headerName, rawHeaders[headerName]);\n            }\n        }\n    }\n    /**\n     * Set a header in this collection with the provided name and value. The name is\n     * case-insensitive.\n     * @param name - The name of the header to set. This value is case-insensitive.\n     * @param value - The value of the header to set.\n     */\n    set(name, value) {\n        this._headersMap.set(normalizeName(name), { name, value: String(value).trim() });\n    }\n    /**\n     * Get the header value for the provided header name, or undefined if no header exists in this\n     * collection with the provided name.\n     * @param name - The name of the header. This value is case-insensitive.\n     */\n    get(name) {\n        var _a;\n        return (_a = this._headersMap.get(normalizeName(name))) === null || _a === void 0 ? void 0 : _a.value;\n    }\n    /**\n     * Get whether or not this header collection contains a header entry for the provided header name.\n     * @param name - The name of the header to set. This value is case-insensitive.\n     */\n    has(name) {\n        return this._headersMap.has(normalizeName(name));\n    }\n    /**\n     * Remove the header with the provided headerName.\n     * @param name - The name of the header to remove.\n     */\n    delete(name) {\n        this._headersMap.delete(normalizeName(name));\n    }\n    /**\n     * Get the JSON object representation of this HTTP header collection.\n     */\n    toJSON(options = {}) {\n        const result = {};\n        if (options.preserveCase) {\n            for (const entry of this._headersMap.values()) {\n                result[entry.name] = entry.value;\n            }\n        }\n        else {\n            for (const [normalizedName, entry] of this._headersMap) {\n                result[normalizedName] = entry.value;\n            }\n        }\n        return result;\n    }\n    /**\n     * Get the string representation of this HTTP header collection.\n     */\n    toString() {\n        return JSON.stringify(this.toJSON({ preserveCase: true }));\n    }\n    /**\n     * Iterate over tuples of header [name, value] pairs.\n     */\n    [Symbol.iterator]() {\n        return headerIterator(this._headersMap);\n    }\n}\n/**\n * Creates an object that satisfies the `HttpHeaders` interface.\n * @param rawHeaders - A simple object representing initial headers\n */\nexport function createHttpHeaders(rawHeaders) {\n    return new HttpHeadersImpl(rawHeaders);\n}\n//# sourceMappingURL=httpHeaders.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nimport { createHttpHeaders } from \"./httpHeaders.js\";\nimport { randomUUID } from \"./util/uuidUtils.js\";\nclass PipelineRequestImpl {\n    constructor(options) {\n        var _a, _b, _c, _d, _e, _f, _g;\n        this.url = options.url;\n        this.body = options.body;\n        this.headers = (_a = options.headers) !== null && _a !== void 0 ? _a : createHttpHeaders();\n        this.method = (_b = options.method) !== null && _b !== void 0 ? _b : \"GET\";\n        this.timeout = (_c = options.timeout) !== null && _c !== void 0 ? _c : 0;\n        this.multipartBody = options.multipartBody;\n        this.formData = options.formData;\n        this.disableKeepAlive = (_d = options.disableKeepAlive) !== null && _d !== void 0 ? _d : false;\n        this.proxySettings = options.proxySettings;\n        this.streamResponseStatusCodes = options.streamResponseStatusCodes;\n        this.withCredentials = (_e = options.withCredentials) !== null && _e !== void 0 ? _e : false;\n        this.abortSignal = options.abortSignal;\n        this.onUploadProgress = options.onUploadProgress;\n        this.onDownloadProgress = options.onDownloadProgress;\n        this.requestId = options.requestId || randomUUID();\n        this.allowInsecureConnection = (_f = options.allowInsecureConnection) !== null && _f !== void 0 ? _f : false;\n        this.enableBrowserStreams = (_g = options.enableBrowserStreams) !== null && _g !== void 0 ? _g : false;\n        this.requestOverrides = options.requestOverrides;\n        this.authSchemes = options.authSchemes;\n    }\n}\n/**\n * Creates a new pipeline request with the given options.\n * This method is to allow for the easy setting of default values and not required.\n * @param options - The options to create the request with.\n */\nexport function createPipelineRequest(options) {\n    return new PipelineRequestImpl(options);\n}\n//# sourceMappingURL=pipelineRequest.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nconst ValidPhaseNames = new Set([\"Deserialize\", \"Serialize\", \"Retry\", \"Sign\"]);\n/**\n * A private implementation of Pipeline.\n * Do not export this class from the package.\n * @internal\n */\nclass HttpPipeline {\n    constructor(policies) {\n        var _a;\n        this._policies = [];\n        this._policies = (_a = policies === null || policies === void 0 ? void 0 : policies.slice(0)) !== null && _a !== void 0 ? _a : [];\n        this._orderedPolicies = undefined;\n    }\n    addPolicy(policy, options = {}) {\n        if (options.phase && options.afterPhase) {\n            throw new Error(\"Policies inside a phase cannot specify afterPhase.\");\n        }\n        if (options.phase && !ValidPhaseNames.has(options.phase)) {\n            throw new Error(`Invalid phase name: ${options.phase}`);\n        }\n        if (options.afterPhase && !ValidPhaseNames.has(options.afterPhase)) {\n            throw new Error(`Invalid afterPhase name: ${options.afterPhase}`);\n        }\n        this._policies.push({\n            policy,\n            options,\n        });\n        this._orderedPolicies = undefined;\n    }\n    removePolicy(options) {\n        const removedPolicies = [];\n        this._policies = this._policies.filter((policyDescriptor) => {\n            if ((options.name && policyDescriptor.policy.name === options.name) ||\n                (options.phase && policyDescriptor.options.phase === options.phase)) {\n                removedPolicies.push(policyDescriptor.policy);\n                return false;\n            }\n            else {\n                return true;\n            }\n        });\n        this._orderedPolicies = undefined;\n        return removedPolicies;\n    }\n    sendRequest(httpClient, request) {\n        const policies = this.getOrderedPolicies();\n        const pipeline = policies.reduceRight((next, policy) => {\n            return (req) => {\n                return policy.sendRequest(req, next);\n            };\n        }, (req) => httpClient.sendRequest(req));\n        return pipeline(request);\n    }\n    getOrderedPolicies() {\n        if (!this._orderedPolicies) {\n            this._orderedPolicies = this.orderPolicies();\n        }\n        return this._orderedPolicies;\n    }\n    clone() {\n        return new HttpPipeline(this._policies);\n    }\n    static create() {\n        return new HttpPipeline();\n    }\n    orderPolicies() {\n        /**\n         * The goal of this method is to reliably order pipeline policies\n         * based on their declared requirements when they were added.\n         *\n         * Order is first determined by phase:\n         *\n         * 1. Serialize Phase\n         * 2. Policies not in a phase\n         * 3. Deserialize Phase\n         * 4. Retry Phase\n         * 5. Sign Phase\n         *\n         * Within each phase, policies are executed in the order\n         * they were added unless they were specified to execute\n         * before/after other policies or after a particular phase.\n         *\n         * To determine the final order, we will walk the policy list\n         * in phase order multiple times until all dependencies are\n         * satisfied.\n         *\n         * `afterPolicies` are the set of policies that must be\n         * executed before a given policy. This requirement is\n         * considered satisfied when each of the listed policies\n         * have been scheduled.\n         *\n         * `beforePolicies` are the set of policies that must be\n         * executed after a given policy. Since this dependency\n         * can be expressed by converting it into a equivalent\n         * `afterPolicies` declarations, they are normalized\n         * into that form for simplicity.\n         *\n         * An `afterPhase` dependency is considered satisfied when all\n         * policies in that phase have scheduled.\n         *\n         */\n        const result = [];\n        // Track all policies we know about.\n        const policyMap = new Map();\n        function createPhase(name) {\n            return {\n                name,\n                policies: new Set(),\n                hasRun: false,\n                hasAfterPolicies: false,\n            };\n        }\n        // Track policies for each phase.\n        const serializePhase = createPhase(\"Serialize\");\n        const noPhase = createPhase(\"None\");\n        const deserializePhase = createPhase(\"Deserialize\");\n        const retryPhase = createPhase(\"Retry\");\n        const signPhase = createPhase(\"Sign\");\n        // a list of phases in order\n        const orderedPhases = [serializePhase, noPhase, deserializePhase, retryPhase, signPhase];\n        // Small helper function to map phase name to each Phase\n        function getPhase(phase) {\n            if (phase === \"Retry\") {\n                return retryPhase;\n            }\n            else if (phase === \"Serialize\") {\n                return serializePhase;\n            }\n            else if (phase === \"Deserialize\") {\n                return deserializePhase;\n            }\n            else if (phase === \"Sign\") {\n                return signPhase;\n            }\n            else {\n                return noPhase;\n            }\n        }\n        // First walk each policy and create a node to track metadata.\n        for (const descriptor of this._policies) {\n            const policy = descriptor.policy;\n            const options = descriptor.options;\n            const policyName = policy.name;\n            if (policyMap.has(policyName)) {\n                throw new Error(\"Duplicate policy names not allowed in pipeline\");\n            }\n            const node = {\n                policy,\n                dependsOn: new Set(),\n                dependants: new Set(),\n            };\n            if (options.afterPhase) {\n                node.afterPhase = getPhase(options.afterPhase);\n                node.afterPhase.hasAfterPolicies = true;\n            }\n            policyMap.set(policyName, node);\n            const phase = getPhase(options.phase);\n            phase.policies.add(node);\n        }\n        // Now that each policy has a node, connect dependency references.\n        for (const descriptor of this._policies) {\n            const { policy, options } = descriptor;\n            const policyName = policy.name;\n            const node = policyMap.get(policyName);\n            if (!node) {\n                throw new Error(`Missing node for policy ${policyName}`);\n            }\n            if (options.afterPolicies) {\n                for (const afterPolicyName of options.afterPolicies) {\n                    const afterNode = policyMap.get(afterPolicyName);\n                    if (afterNode) {\n                        // Linking in both directions helps later\n                        // when we want to notify dependants.\n                        node.dependsOn.add(afterNode);\n                        afterNode.dependants.add(node);\n                    }\n                }\n            }\n            if (options.beforePolicies) {\n                for (const beforePolicyName of options.beforePolicies) {\n                    const beforeNode = policyMap.get(beforePolicyName);\n                    if (beforeNode) {\n                        // To execute before another node, make it\n                        // depend on the current node.\n                        beforeNode.dependsOn.add(node);\n                        node.dependants.add(beforeNode);\n                    }\n                }\n            }\n        }\n        function walkPhase(phase) {\n            phase.hasRun = true;\n            // Sets iterate in insertion order\n            for (const node of phase.policies) {\n                if (node.afterPhase && (!node.afterPhase.hasRun || node.afterPhase.policies.size)) {\n                    // If this node is waiting on a phase to complete,\n                    // we need to skip it for now.\n                    // Even if the phase is empty, we should wait for it\n                    // to be walked to avoid re-ordering policies.\n                    continue;\n                }\n                if (node.dependsOn.size === 0) {\n                    // If there's nothing else we're waiting for, we can\n                    // add this policy to the result list.\n                    result.push(node.policy);\n                    // Notify anything that depends on this policy that\n                    // the policy has been scheduled.\n                    for (const dependant of node.dependants) {\n                        dependant.dependsOn.delete(node);\n                    }\n                    policyMap.delete(node.policy.name);\n                    phase.policies.delete(node);\n                }\n            }\n        }\n        function walkPhases() {\n            for (const phase of orderedPhases) {\n                walkPhase(phase);\n                // if the phase isn't complete\n                if (phase.policies.size > 0 && phase !== noPhase) {\n                    if (!noPhase.hasRun) {\n                        // Try running noPhase to see if that unblocks this phase next tick.\n                        // This can happen if a phase that happens before noPhase\n                        // is waiting on a noPhase policy to complete.\n                        walkPhase(noPhase);\n                    }\n                    // Don't proceed to the next phase until this phase finishes.\n                    return;\n                }\n                if (phase.hasAfterPolicies) {\n                    // Run any policies unblocked by this phase\n                    walkPhase(noPhase);\n                }\n            }\n        }\n        // Iterate until we've put every node in the result list.\n        let iteration = 0;\n        while (policyMap.size > 0) {\n            iteration++;\n            const initialResultLength = result.length;\n            // Keep walking each phase in order until we can order every node.\n            walkPhases();\n            // The result list *should* get at least one larger each time\n            // after the first full pass.\n            // Otherwise, we're going to loop forever.\n            if (result.length <= initialResultLength && iteration > 1) {\n                throw new Error(\"Cannot satisfy policy dependencies due to requirements cycle.\");\n            }\n        }\n        return result;\n    }\n}\n/**\n * Creates a totally empty pipeline.\n * Useful for testing or creating a custom one.\n */\nexport function createEmptyPipeline() {\n    return HttpPipeline.create();\n}\n//# sourceMappingURL=pipeline.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nimport { inspect } from \"node:util\";\nexport const custom = inspect.custom;\n//# sourceMappingURL=inspect.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nimport { isError } from \"./util/error.js\";\nimport { custom } from \"./util/inspect.js\";\nimport { Sanitizer } from \"./util/sanitizer.js\";\nconst errorSanitizer = new Sanitizer();\n/**\n * A custom error type for failed pipeline requests.\n */\nexport class RestError extends Error {\n    constructor(message, options = {}) {\n        super(message);\n        this.name = \"RestError\";\n        this.code = options.code;\n        this.statusCode = options.statusCode;\n        // The request and response may contain sensitive information in the headers or body.\n        // To help prevent this sensitive information being accidentally logged, the request and response\n        // properties are marked as non-enumerable here. This prevents them showing up in the output of\n        // JSON.stringify and console.log.\n        Object.defineProperty(this, \"request\", { value: options.request, enumerable: false });\n        Object.defineProperty(this, \"response\", { value: options.response, enumerable: false });\n        // Logging method for util.inspect in Node\n        Object.defineProperty(this, custom, {\n            value: () => {\n                // Extract non-enumerable properties and add them back. This is OK since in this output the request and\n                // response get sanitized.\n                return `RestError: ${this.message} \\n ${errorSanitizer.sanitize(Object.assign(Object.assign({}, this), { request: this.request, response: this.response }))}`;\n            },\n            enumerable: false,\n        });\n        Object.setPrototypeOf(this, RestError.prototype);\n    }\n}\n/**\n * Something went wrong when making the request.\n * This means the actual request failed for some reason,\n * such as a DNS issue or the connection being lost.\n */\nRestError.REQUEST_SEND_ERROR = \"REQUEST_SEND_ERROR\";\n/**\n * This means that parsing the response from the server failed.\n * It may have been malformed.\n */\nRestError.PARSE_ERROR = \"PARSE_ERROR\";\n/**\n * Typeguard for RestError\n * @param e - Something caught by a catch clause.\n */\nexport function isRestError(e) {\n    if (e instanceof RestError) {\n        return true;\n    }\n    return isError(e) && e.name === \"RestError\";\n}\n//# sourceMappingURL=restError.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nimport { createClientLogger } from \"./logger/logger.js\";\nexport const logger = createClientLogger(\"ts-http-runtime\");\n//# sourceMappingURL=log.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nimport * as http from \"node:http\";\nimport * as https from \"node:https\";\nimport * as zlib from \"node:zlib\";\nimport { Transform } from \"node:stream\";\nimport { AbortError } from \"./abort-controller/AbortError.js\";\nimport { createHttpHeaders } from \"./httpHeaders.js\";\nimport { RestError } from \"./restError.js\";\nimport { logger } from \"./log.js\";\nimport { Sanitizer } from \"./util/sanitizer.js\";\nconst DEFAULT_TLS_SETTINGS = {};\nfunction isReadableStream(body) {\n    return body && typeof body.pipe === \"function\";\n}\nfunction isStreamComplete(stream) {\n    if (stream.readable === false) {\n        return Promise.resolve();\n    }\n    return new Promise((resolve) => {\n        const handler = () => {\n            resolve();\n            stream.removeListener(\"close\", handler);\n            stream.removeListener(\"end\", handler);\n            stream.removeListener(\"error\", handler);\n        };\n        stream.on(\"close\", handler);\n        stream.on(\"end\", handler);\n        stream.on(\"error\", handler);\n    });\n}\nfunction isArrayBuffer(body) {\n    return body && typeof body.byteLength === \"number\";\n}\nclass ReportTransform extends Transform {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-function-type\n    _transform(chunk, _encoding, callback) {\n        this.push(chunk);\n        this.loadedBytes += chunk.length;\n        try {\n            this.progressCallback({ loadedBytes: this.loadedBytes });\n            callback();\n        }\n        catch (e) {\n            callback(e);\n        }\n    }\n    constructor(progressCallback) {\n        super();\n        this.loadedBytes = 0;\n        this.progressCallback = progressCallback;\n    }\n}\n/**\n * A HttpClient implementation that uses Node's \"https\" module to send HTTPS requests.\n * @internal\n */\nclass NodeHttpClient {\n    constructor() {\n        this.cachedHttpsAgents = new WeakMap();\n    }\n    /**\n     * Makes a request over an underlying transport layer and returns the response.\n     * @param request - The request to be made.\n     */\n    async sendRequest(request) {\n        var _a, _b, _c;\n        const abortController = new AbortController();\n        let abortListener;\n        if (request.abortSignal) {\n            if (request.abortSignal.aborted) {\n                throw new AbortError(\"The operation was aborted. Request has already been canceled.\");\n            }\n            abortListener = (event) => {\n                if (event.type === \"abort\") {\n                    abortController.abort();\n                }\n            };\n            request.abortSignal.addEventListener(\"abort\", abortListener);\n        }\n        let timeoutId;\n        if (request.timeout > 0) {\n            timeoutId = setTimeout(() => {\n                const sanitizer = new Sanitizer();\n                logger.info(`request to '${sanitizer.sanitizeUrl(request.url)}' timed out. canceling...`);\n                abortController.abort();\n            }, request.timeout);\n        }\n        const acceptEncoding = request.headers.get(\"Accept-Encoding\");\n        const shouldDecompress = (acceptEncoding === null || acceptEncoding === void 0 ? void 0 : acceptEncoding.includes(\"gzip\")) || (acceptEncoding === null || acceptEncoding === void 0 ? void 0 : acceptEncoding.includes(\"deflate\"));\n        let body = typeof request.body === \"function\" ? request.body() : request.body;\n        if (body && !request.headers.has(\"Content-Length\")) {\n            const bodyLength = getBodyLength(body);\n            if (bodyLength !== null) {\n                request.headers.set(\"Content-Length\", bodyLength);\n            }\n        }\n        let responseStream;\n        try {\n            if (body && request.onUploadProgress) {\n                const onUploadProgress = request.onUploadProgress;\n                const uploadReportStream = new ReportTransform(onUploadProgress);\n                uploadReportStream.on(\"error\", (e) => {\n                    logger.error(\"Error in upload progress\", e);\n                });\n                if (isReadableStream(body)) {\n                    body.pipe(uploadReportStream);\n                }\n                else {\n                    uploadReportStream.end(body);\n                }\n                body = uploadReportStream;\n            }\n            const res = await this.makeRequest(request, abortController, body);\n            if (timeoutId !== undefined) {\n                clearTimeout(timeoutId);\n            }\n            const headers = getResponseHeaders(res);\n            const status = (_a = res.statusCode) !== null && _a !== void 0 ? _a : 0;\n            const response = {\n                status,\n                headers,\n                request,\n            };\n            // Responses to HEAD must not have a body.\n            // If they do return a body, that body must be ignored.\n            if (request.method === \"HEAD\") {\n                // call resume() and not destroy() to avoid closing the socket\n                // and losing keep alive\n                res.resume();\n                return response;\n            }\n            responseStream = shouldDecompress ? getDecodedResponseStream(res, headers) : res;\n            const onDownloadProgress = request.onDownloadProgress;\n            if (onDownloadProgress) {\n                const downloadReportStream = new ReportTransform(onDownloadProgress);\n                downloadReportStream.on(\"error\", (e) => {\n                    logger.error(\"Error in download progress\", e);\n                });\n                responseStream.pipe(downloadReportStream);\n                responseStream = downloadReportStream;\n            }\n            if (\n            // Value of POSITIVE_INFINITY in streamResponseStatusCodes is considered as any status code\n            ((_b = request.streamResponseStatusCodes) === null || _b === void 0 ? void 0 : _b.has(Number.POSITIVE_INFINITY)) ||\n                ((_c = request.streamResponseStatusCodes) === null || _c === void 0 ? void 0 : _c.has(response.status))) {\n                response.readableStreamBody = responseStream;\n            }\n            else {\n                response.bodyAsText = await streamToText(responseStream);\n            }\n            return response;\n        }\n        finally {\n            // clean up event listener\n            if (request.abortSignal && abortListener) {\n                let uploadStreamDone = Promise.resolve();\n                if (isReadableStream(body)) {\n                    uploadStreamDone = isStreamComplete(body);\n                }\n                let downloadStreamDone = Promise.resolve();\n                if (isReadableStream(responseStream)) {\n                    downloadStreamDone = isStreamComplete(responseStream);\n                }\n                Promise.all([uploadStreamDone, downloadStreamDone])\n                    .then(() => {\n                    var _a;\n                    // eslint-disable-next-line promise/always-return\n                    if (abortListener) {\n                        (_a = request.abortSignal) === null || _a === void 0 ? void 0 : _a.removeEventListener(\"abort\", abortListener);\n                    }\n                })\n                    .catch((e) => {\n                    logger.warning(\"Error when cleaning up abortListener on httpRequest\", e);\n                });\n            }\n        }\n    }\n    makeRequest(request, abortController, body) {\n        var _a;\n        const url = new URL(request.url);\n        const isInsecure = url.protocol !== \"https:\";\n        if (isInsecure && !request.allowInsecureConnection) {\n            throw new Error(`Cannot connect to ${request.url} while allowInsecureConnection is false.`);\n        }\n        const agent = (_a = request.agent) !== null && _a !== void 0 ? _a : this.getOrCreateAgent(request, isInsecure);\n        const options = Object.assign({ agent, hostname: url.hostname, path: `${url.pathname}${url.search}`, port: url.port, method: request.method, headers: request.headers.toJSON({ preserveCase: true }) }, request.requestOverrides);\n        return new Promise((resolve, reject) => {\n            const req = isInsecure ? http.request(options, resolve) : https.request(options, resolve);\n            req.once(\"error\", (err) => {\n                var _a;\n                reject(new RestError(err.message, { code: (_a = err.code) !== null && _a !== void 0 ? _a : RestError.REQUEST_SEND_ERROR, request }));\n            });\n            abortController.signal.addEventListener(\"abort\", () => {\n                const abortError = new AbortError(\"The operation was aborted. Rejecting from abort signal callback while making request.\");\n                req.destroy(abortError);\n                reject(abortError);\n            });\n            if (body && isReadableStream(body)) {\n                body.pipe(req);\n            }\n            else if (body) {\n                if (typeof body === \"string\" || Buffer.isBuffer(body)) {\n                    req.end(body);\n                }\n                else if (isArrayBuffer(body)) {\n                    req.end(ArrayBuffer.isView(body) ? Buffer.from(body.buffer) : Buffer.from(body));\n                }\n                else {\n                    logger.error(\"Unrecognized body type\", body);\n                    reject(new RestError(\"Unrecognized body type\"));\n                }\n            }\n            else {\n                // streams don't like \"undefined\" being passed as data\n                req.end();\n            }\n        });\n    }\n    getOrCreateAgent(request, isInsecure) {\n        var _a;\n        const disableKeepAlive = request.disableKeepAlive;\n        // Handle Insecure requests first\n        if (isInsecure) {\n            if (disableKeepAlive) {\n                // keepAlive:false is the default so we don't need a custom Agent\n                return http.globalAgent;\n            }\n            if (!this.cachedHttpAgent) {\n                // If there is no cached agent create a new one and cache it.\n                this.cachedHttpAgent = new http.Agent({ keepAlive: true });\n            }\n            return this.cachedHttpAgent;\n        }\n        else {\n            if (disableKeepAlive && !request.tlsSettings) {\n                // When there are no tlsSettings and keepAlive is false\n                // we don't need a custom agent\n                return https.globalAgent;\n            }\n            // We use the tlsSettings to index cached clients\n            const tlsSettings = (_a = request.tlsSettings) !== null && _a !== void 0 ? _a : DEFAULT_TLS_SETTINGS;\n            // Get the cached agent or create a new one with the\n            // provided values for keepAlive and tlsSettings\n            let agent = this.cachedHttpsAgents.get(tlsSettings);\n            if (agent && agent.options.keepAlive === !disableKeepAlive) {\n                return agent;\n            }\n            logger.info(\"No cached TLS Agent exist, creating a new Agent\");\n            agent = new https.Agent(Object.assign({ \n                // keepAlive is true if disableKeepAlive is false.\n                keepAlive: !disableKeepAlive }, tlsSettings));\n            this.cachedHttpsAgents.set(tlsSettings, agent);\n            return agent;\n        }\n    }\n}\nfunction getResponseHeaders(res) {\n    const headers = createHttpHeaders();\n    for (const header of Object.keys(res.headers)) {\n        const value = res.headers[header];\n        if (Array.isArray(value)) {\n            if (value.length > 0) {\n                headers.set(header, value[0]);\n            }\n        }\n        else if (value) {\n            headers.set(header, value);\n        }\n    }\n    return headers;\n}\nfunction getDecodedResponseStream(stream, headers) {\n    const contentEncoding = headers.get(\"Content-Encoding\");\n    if (contentEncoding === \"gzip\") {\n        const unzip = zlib.createGunzip();\n        stream.pipe(unzip);\n        return unzip;\n    }\n    else if (contentEncoding === \"deflate\") {\n        const inflate = zlib.createInflate();\n        stream.pipe(inflate);\n        return inflate;\n    }\n    return stream;\n}\nfunction streamToText(stream) {\n    return new Promise((resolve, reject) => {\n        const buffer = [];\n        stream.on(\"data\", (chunk) => {\n            if (Buffer.isBuffer(chunk)) {\n                buffer.push(chunk);\n            }\n            else {\n                buffer.push(Buffer.from(chunk));\n            }\n        });\n        stream.on(\"end\", () => {\n            resolve(Buffer.concat(buffer).toString(\"utf8\"));\n        });\n        stream.on(\"error\", (e) => {\n            if (e && (e === null || e === void 0 ? void 0 : e.name) === \"AbortError\") {\n                reject(e);\n            }\n            else {\n                reject(new RestError(`Error reading response as text: ${e.message}`, {\n                    code: RestError.PARSE_ERROR,\n                }));\n            }\n        });\n    });\n}\n/** @internal */\nexport function getBodyLength(body) {\n    if (!body) {\n        return 0;\n    }\n    else if (Buffer.isBuffer(body)) {\n        return body.length;\n    }\n    else if (isReadableStream(body)) {\n        return null;\n    }\n    else if (isArrayBuffer(body)) {\n        return body.byteLength;\n    }\n    else if (typeof body === \"string\") {\n        return Buffer.from(body).length;\n    }\n    else {\n        return null;\n    }\n}\n/**\n * Create a new HttpClient instance for the NodeJS environment.\n * @internal\n */\nexport function createNodeHttpClient() {\n    return new NodeHttpClient();\n}\n//# sourceMappingURL=nodeHttpClient.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nimport { createNodeHttpClient } from \"./nodeHttpClient.js\";\n/**\n * Create the correct HttpClient for the current environment.\n */\nexport function createDefaultHttpClient() {\n    return createNodeHttpClient();\n}\n//# sourceMappingURL=defaultHttpClient.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nimport { logger as coreLogger } from \"../log.js\";\nimport { Sanitizer } from \"../util/sanitizer.js\";\n/**\n * The programmatic identifier of the logPolicy.\n */\nexport const logPolicyName = \"logPolicy\";\n/**\n * A policy that logs all requests and responses.\n * @param options - Options to configure logPolicy.\n */\nexport function logPolicy(options = {}) {\n    var _a;\n    const logger = (_a = options.logger) !== null && _a !== void 0 ? _a : coreLogger.info;\n    const sanitizer = new Sanitizer({\n        additionalAllowedHeaderNames: options.additionalAllowedHeaderNames,\n        additionalAllowedQueryParameters: options.additionalAllowedQueryParameters,\n    });\n    return {\n        name: logPolicyName,\n        async sendRequest(request, next) {\n            if (!logger.enabled) {\n                return next(request);\n            }\n            logger(`Request: ${sanitizer.sanitize(request)}`);\n            const response = await next(request);\n            logger(`Response status code: ${response.status}`);\n            logger(`Headers: ${sanitizer.sanitize(response.headers)}`);\n            return response;\n        },\n    };\n}\n//# sourceMappingURL=logPolicy.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n/**\n * The programmatic identifier of the redirectPolicy.\n */\nexport const redirectPolicyName = \"redirectPolicy\";\n/**\n * Methods that are allowed to follow redirects 301 and 302\n */\nconst allowedRedirect = [\"GET\", \"HEAD\"];\n/**\n * A policy to follow Location headers from the server in order\n * to support server-side redirection.\n * In the browser, this policy is not used.\n * @param options - Options to control policy behavior.\n */\nexport function redirectPolicy(options = {}) {\n    const { maxRetries = 20 } = options;\n    return {\n        name: redirectPolicyName,\n        async sendRequest(request, next) {\n            const response = await next(request);\n            return handleRedirect(next, response, maxRetries);\n        },\n    };\n}\nasync function handleRedirect(next, response, maxRetries, currentRetries = 0) {\n    const { request, status, headers } = response;\n    const locationHeader = headers.get(\"location\");\n    if (locationHeader &&\n        (status === 300 ||\n            (status === 301 && allowedRedirect.includes(request.method)) ||\n            (status === 302 && allowedRedirect.includes(request.method)) ||\n            (status === 303 && request.method === \"POST\") ||\n            status === 307) &&\n        currentRetries < maxRetries) {\n        const url = new URL(locationHeader, request.url);\n        request.url = url.toString();\n        // POST request with Status code 303 should be converted into a\n        // redirected GET request if the redirect url is present in the location header\n        if (status === 303) {\n            request.method = \"GET\";\n            request.headers.delete(\"Content-Length\");\n            delete request.body;\n        }\n        request.headers.delete(\"Authorization\");\n        const res = await next(request);\n        return handleRedirect(next, res, maxRetries, currentRetries + 1);\n    }\n    return response;\n}\n//# sourceMappingURL=redirectPolicy.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nimport { getHeaderName, setPlatformSpecificData } from \"./userAgentPlatform.js\";\nimport { SDK_VERSION } from \"../constants.js\";\nfunction getUserAgentString(telemetryInfo) {\n    const parts = [];\n    for (const [key, value] of telemetryInfo) {\n        const token = value ? `${key}/${value}` : key;\n        parts.push(token);\n    }\n    return parts.join(\" \");\n}\n/**\n * @internal\n */\nexport function getUserAgentHeaderName() {\n    return getHeaderName();\n}\n/**\n * @internal\n */\nexport async function getUserAgentValue(prefix) {\n    const runtimeInfo = new Map();\n    runtimeInfo.set(\"ts-http-runtime\", SDK_VERSION);\n    await setPlatformSpecificData(runtimeInfo);\n    const defaultAgent = getUserAgentString(runtimeInfo);\n    const userAgentValue = prefix ? `${prefix} ${defaultAgent}` : defaultAgent;\n    return userAgentValue;\n}\n//# sourceMappingURL=userAgent.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nexport const SDK_VERSION = \"0.3.0\";\nexport const DEFAULT_RETRY_POLICY_COUNT = 3;\n//# sourceMappingURL=constants.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nimport * as os from \"node:os\";\nimport * as process from \"node:process\";\n/**\n * @internal\n */\nexport function getHeaderName() {\n    return \"User-Agent\";\n}\n/**\n * @internal\n */\nexport async function setPlatformSpecificData(map) {\n    if (process && process.versions) {\n        const versions = process.versions;\n        if (versions.bun) {\n            map.set(\"Bun\", versions.bun);\n        }\n        else if (versions.deno) {\n            map.set(\"Deno\", versions.deno);\n        }\n        else if (versions.node) {\n            map.set(\"Node\", versions.node);\n        }\n    }\n    map.set(\"OS\", `(${os.arch()}-${os.type()}-${os.release()})`);\n}\n//# sourceMappingURL=userAgentPlatform.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nimport { getUserAgentHeaderName, getUserAgentValue } from \"../util/userAgent.js\";\nconst UserAgentHeaderName = getUserAgentHeaderName();\n/**\n * The programmatic identifier of the userAgentPolicy.\n */\nexport const userAgentPolicyName = \"userAgentPolicy\";\n/**\n * A policy that sets the User-Agent header (or equivalent) to reflect\n * the library version.\n * @param options - Options to customize the user agent value.\n */\nexport function userAgentPolicy(options = {}) {\n    const userAgentValue = getUserAgentValue(options.userAgentPrefix);\n    return {\n        name: userAgentPolicyName,\n        async sendRequest(request, next) {\n            if (!request.headers.has(UserAgentHeaderName)) {\n                request.headers.set(UserAgentHeaderName, await userAgentValue);\n            }\n            return next(request);\n        },\n    };\n}\n//# sourceMappingURL=userAgentPolicy.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n/**\n * The programmatic identifier of the decompressResponsePolicy.\n */\nexport const decompressResponsePolicyName = \"decompressResponsePolicy\";\n/**\n * A policy to enable response decompression according to Accept-Encoding header\n * https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Accept-Encoding\n */\nexport function decompressResponsePolicy() {\n    return {\n        name: decompressResponsePolicyName,\n        async sendRequest(request, next) {\n            // HEAD requests have no body\n            if (request.method !== \"HEAD\") {\n                request.headers.set(\"Accept-Encoding\", \"gzip,deflate\");\n            }\n            return next(request);\n        },\n    };\n}\n//# sourceMappingURL=decompressResponsePolicy.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nimport { AbortError } from \"../abort-controller/AbortError.js\";\nconst StandardAbortMessage = \"The operation was aborted.\";\n/**\n * A wrapper for setTimeout that resolves a promise after delayInMs milliseconds.\n * @param delayInMs - The number of milliseconds to be delayed.\n * @param value - The value to be resolved with after a timeout of t milliseconds.\n * @param options - The options for delay - currently abort options\n *                  - abortSignal - The abortSignal associated with containing operation.\n *                  - abortErrorMsg - The abort error message associated with containing operation.\n * @returns Resolved promise\n */\nexport function delay(delayInMs, value, options) {\n    return new Promise((resolve, reject) => {\n        let timer = undefined;\n        let onAborted = undefined;\n        const rejectOnAbort = () => {\n            return reject(new AbortError((options === null || options === void 0 ? void 0 : options.abortErrorMsg) ? options === null || options === void 0 ? void 0 : options.abortErrorMsg : StandardAbortMessage));\n        };\n        const removeListeners = () => {\n            if ((options === null || options === void 0 ? void 0 : options.abortSignal) && onAborted) {\n                options.abortSignal.removeEventListener(\"abort\", onAborted);\n            }\n        };\n        onAborted = () => {\n            if (timer) {\n                clearTimeout(timer);\n            }\n            removeListeners();\n            return rejectOnAbort();\n        };\n        if ((options === null || options === void 0 ? void 0 : options.abortSignal) && options.abortSignal.aborted) {\n            return rejectOnAbort();\n        }\n        timer = setTimeout(() => {\n            removeListeners();\n            resolve(value);\n        }, delayInMs);\n        if (options === null || options === void 0 ? void 0 : options.abortSignal) {\n            options.abortSignal.addEventListener(\"abort\", onAborted);\n        }\n    });\n}\n/**\n * @internal\n * @returns the parsed value or undefined if the parsed value is invalid.\n */\nexport function parseHeaderValueAsNumber(response, headerName) {\n    const value = response.headers.get(headerName);\n    if (!value)\n        return;\n    const valueAsNum = Number(value);\n    if (Number.isNaN(valueAsNum))\n        return;\n    return valueAsNum;\n}\n//# sourceMappingURL=helpers.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nimport { parseHeaderValueAsNumber } from \"../util/helpers.js\";\n/**\n * The header that comes back from services representing\n * the amount of time (minimum) to wait to retry (in seconds or timestamp after which we can retry).\n */\nconst RetryAfterHeader = \"Retry-After\";\n/**\n * The headers that come back from services representing\n * the amount of time (minimum) to wait to retry.\n *\n * \"retry-after-ms\", \"x-ms-retry-after-ms\" : milliseconds\n * \"Retry-After\" : seconds or timestamp\n */\nconst AllRetryAfterHeaders = [\"retry-after-ms\", \"x-ms-retry-after-ms\", RetryAfterHeader];\n/**\n * A response is a throttling retry response if it has a throttling status code (429 or 503),\n * as long as one of the [ \"Retry-After\" or \"retry-after-ms\" or \"x-ms-retry-after-ms\" ] headers has a valid value.\n *\n * Returns the `retryAfterInMs` value if the response is a throttling retry response.\n * If not throttling retry response, returns `undefined`.\n *\n * @internal\n */\nfunction getRetryAfterInMs(response) {\n    if (!(response && [429, 503].includes(response.status)))\n        return undefined;\n    try {\n        // Headers: \"retry-after-ms\", \"x-ms-retry-after-ms\", \"Retry-After\"\n        for (const header of AllRetryAfterHeaders) {\n            const retryAfterValue = parseHeaderValueAsNumber(response, header);\n            if (retryAfterValue === 0 || retryAfterValue) {\n                // \"Retry-After\" header ==> seconds\n                // \"retry-after-ms\", \"x-ms-retry-after-ms\" headers ==> milli-seconds\n                const multiplyingFactor = header === RetryAfterHeader ? 1000 : 1;\n                return retryAfterValue * multiplyingFactor; // in milli-seconds\n            }\n        }\n        // RetryAfterHeader (\"Retry-After\") has a special case where it might be formatted as a date instead of a number of seconds\n        const retryAfterHeader = response.headers.get(RetryAfterHeader);\n        if (!retryAfterHeader)\n            return;\n        const date = Date.parse(retryAfterHeader);\n        const diff = date - Date.now();\n        // negative diff would mean a date in the past, so retry asap with 0 milliseconds\n        return Number.isFinite(diff) ? Math.max(0, diff) : undefined;\n    }\n    catch (_a) {\n        return undefined;\n    }\n}\n/**\n * A response is a retry response if it has a throttling status code (429 or 503),\n * as long as one of the [ \"Retry-After\" or \"retry-after-ms\" or \"x-ms-retry-after-ms\" ] headers has a valid value.\n */\nexport function isThrottlingRetryResponse(response) {\n    return Number.isFinite(getRetryAfterInMs(response));\n}\nexport function throttlingRetryStrategy() {\n    return {\n        name: \"throttlingRetryStrategy\",\n        retry({ response }) {\n            const retryAfterInMs = getRetryAfterInMs(response);\n            if (!Number.isFinite(retryAfterInMs)) {\n                return { skipStrategy: true };\n            }\n            return {\n                retryAfterInMs,\n            };\n        },\n    };\n}\n//# sourceMappingURL=throttlingRetryStrategy.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nimport { calculateRetryDelay } from \"../util/delay.js\";\nimport { isThrottlingRetryResponse } from \"./throttlingRetryStrategy.js\";\n// intervals are in milliseconds\nconst DEFAULT_CLIENT_RETRY_INTERVAL = 1000;\nconst DEFAULT_CLIENT_MAX_RETRY_INTERVAL = 1000 * 64;\n/**\n * A retry strategy that retries with an exponentially increasing delay in these two cases:\n * - When there are errors in the underlying transport layer (e.g. DNS lookup failures).\n * - Or otherwise if the outgoing request fails (408, greater or equal than 500, except for 501 and 505).\n */\nexport function exponentialRetryStrategy(options = {}) {\n    var _a, _b;\n    const retryInterval = (_a = options.retryDelayInMs) !== null && _a !== void 0 ? _a : DEFAULT_CLIENT_RETRY_INTERVAL;\n    const maxRetryInterval = (_b = options.maxRetryDelayInMs) !== null && _b !== void 0 ? _b : DEFAULT_CLIENT_MAX_RETRY_INTERVAL;\n    return {\n        name: \"exponentialRetryStrategy\",\n        retry({ retryCount, response, responseError }) {\n            const matchedSystemError = isSystemError(responseError);\n            const ignoreSystemErrors = matchedSystemError && options.ignoreSystemErrors;\n            const isExponential = isExponentialRetryResponse(response);\n            const ignoreExponentialResponse = isExponential && options.ignoreHttpStatusCodes;\n            const unknownResponse = response && (isThrottlingRetryResponse(response) || !isExponential);\n            if (unknownResponse || ignoreExponentialResponse || ignoreSystemErrors) {\n                return { skipStrategy: true };\n            }\n            if (responseError && !matchedSystemError && !isExponential) {\n                return { errorToThrow: responseError };\n            }\n            return calculateRetryDelay(retryCount, {\n                retryDelayInMs: retryInterval,\n                maxRetryDelayInMs: maxRetryInterval,\n            });\n        },\n    };\n}\n/**\n * A response is a retry response if it has status codes:\n * - 408, or\n * - Greater or equal than 500, except for 501 and 505.\n */\nexport function isExponentialRetryResponse(response) {\n    return Boolean(response &&\n        response.status !== undefined &&\n        (response.status >= 500 || response.status === 408) &&\n        response.status !== 501 &&\n        response.status !== 505);\n}\n/**\n * Determines whether an error from a pipeline response was triggered in the network layer.\n */\nexport function isSystemError(err) {\n    if (!err) {\n        return false;\n    }\n    return (err.code === \"ETIMEDOUT\" ||\n        err.code === \"ESOCKETTIMEDOUT\" ||\n        err.code === \"ECONNREFUSED\" ||\n        err.code === \"ECONNRESET\" ||\n        err.code === \"ENOENT\" ||\n        err.code === \"ENOTFOUND\");\n}\n//# sourceMappingURL=exponentialRetryStrategy.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nimport { delay } from \"../util/helpers.js\";\nimport { AbortError } from \"../abort-controller/AbortError.js\";\nimport { createClientLogger } from \"../logger/logger.js\";\nimport { DEFAULT_RETRY_POLICY_COUNT } from \"../constants.js\";\nconst retryPolicyLogger = createClientLogger(\"ts-http-runtime retryPolicy\");\n/**\n * The programmatic identifier of the retryPolicy.\n */\nconst retryPolicyName = \"retryPolicy\";\n/**\n * retryPolicy is a generic policy to enable retrying requests when certain conditions are met\n */\nexport function retryPolicy(strategies, options = { maxRetries: DEFAULT_RETRY_POLICY_COUNT }) {\n    const logger = options.logger || retryPolicyLogger;\n    return {\n        name: retryPolicyName,\n        async sendRequest(request, next) {\n            var _a, _b;\n            let response;\n            let responseError;\n            let retryCount = -1;\n            retryRequest: while (true) {\n                retryCount += 1;\n                response = undefined;\n                responseError = undefined;\n                try {\n                    logger.info(`Retry ${retryCount}: Attempting to send request`, request.requestId);\n                    response = await next(request);\n                    logger.info(`Retry ${retryCount}: Received a response from request`, request.requestId);\n                }\n                catch (e) {\n                    logger.error(`Retry ${retryCount}: Received an error from request`, request.requestId);\n                    // RestErrors are valid targets for the retry strategies.\n                    // If none of the retry strategies can work with them, they will be thrown later in this policy.\n                    // If the received error is not a RestError, it is immediately thrown.\n                    responseError = e;\n                    if (!e || responseError.name !== \"RestError\") {\n                        throw e;\n                    }\n                    response = responseError.response;\n                }\n                if ((_a = request.abortSignal) === null || _a === void 0 ? void 0 : _a.aborted) {\n                    logger.error(`Retry ${retryCount}: Request aborted.`);\n                    const abortError = new AbortError();\n                    throw abortError;\n                }\n                if (retryCount >= ((_b = options.maxRetries) !== null && _b !== void 0 ? _b : DEFAULT_RETRY_POLICY_COUNT)) {\n                    logger.info(`Retry ${retryCount}: Maximum retries reached. Returning the last received response, or throwing the last received error.`);\n                    if (responseError) {\n                        throw responseError;\n                    }\n                    else if (response) {\n                        return response;\n                    }\n                    else {\n                        throw new Error(\"Maximum retries reached with no response or error to throw\");\n                    }\n                }\n                logger.info(`Retry ${retryCount}: Processing ${strategies.length} retry strategies.`);\n                strategiesLoop: for (const strategy of strategies) {\n                    const strategyLogger = strategy.logger || logger;\n                    strategyLogger.info(`Retry ${retryCount}: Processing retry strategy ${strategy.name}.`);\n                    const modifiers = strategy.retry({\n                        retryCount,\n                        response,\n                        responseError,\n                    });\n                    if (modifiers.skipStrategy) {\n                        strategyLogger.info(`Retry ${retryCount}: Skipped.`);\n                        continue strategiesLoop;\n                    }\n                    const { errorToThrow, retryAfterInMs, redirectTo } = modifiers;\n                    if (errorToThrow) {\n                        strategyLogger.error(`Retry ${retryCount}: Retry strategy ${strategy.name} throws error:`, errorToThrow);\n                        throw errorToThrow;\n                    }\n                    if (retryAfterInMs || retryAfterInMs === 0) {\n                        strategyLogger.info(`Retry ${retryCount}: Retry strategy ${strategy.name} retries after ${retryAfterInMs}`);\n                        await delay(retryAfterInMs, undefined, { abortSignal: request.abortSignal });\n                        continue retryRequest;\n                    }\n                    if (redirectTo) {\n                        strategyLogger.info(`Retry ${retryCount}: Retry strategy ${strategy.name} redirects to ${redirectTo}`);\n                        request.url = redirectTo;\n                        continue retryRequest;\n                    }\n                }\n                if (responseError) {\n                    logger.info(`None of the retry strategies could work with the received error. Throwing it.`);\n                    throw responseError;\n                }\n                if (response) {\n                    logger.info(`None of the retry strategies could work with the received response. Returning it.`);\n                    return response;\n                }\n                // If all the retries skip and there's no response,\n                // we're still in the retry loop, so a new request will be sent\n                // until `maxRetries` is reached.\n            }\n        },\n    };\n}\n//# sourceMappingURL=retryPolicy.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nimport { exponentialRetryStrategy } from \"../retryStrategies/exponentialRetryStrategy.js\";\nimport { throttlingRetryStrategy } from \"../retryStrategies/throttlingRetryStrategy.js\";\nimport { retryPolicy } from \"./retryPolicy.js\";\nimport { DEFAULT_RETRY_POLICY_COUNT } from \"../constants.js\";\n/**\n * Name of the {@link defaultRetryPolicy}\n */\nexport const defaultRetryPolicyName = \"defaultRetryPolicy\";\n/**\n * A policy that retries according to three strategies:\n * - When the server sends a 429 response with a Retry-After header.\n * - When there are errors in the underlying transport layer (e.g. DNS lookup failures).\n * - Or otherwise if the outgoing request fails, it will retry with an exponentially increasing delay.\n */\nexport function defaultRetryPolicy(options = {}) {\n    var _a;\n    return {\n        name: defaultRetryPolicyName,\n        sendRequest: retryPolicy([throttlingRetryStrategy(), exponentialRetryStrategy(options)], {\n            maxRetries: (_a = options.maxRetries) !== null && _a !== void 0 ? _a : DEFAULT_RETRY_POLICY_COUNT,\n        }).sendRequest,\n    };\n}\n//# sourceMappingURL=defaultRetryPolicy.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nimport { stringToUint8Array } from \"../util/bytesEncoding.js\";\nimport { isNodeLike } from \"../util/checkEnvironment.js\";\nimport { createHttpHeaders } from \"../httpHeaders.js\";\n/**\n * The programmatic identifier of the formDataPolicy.\n */\nexport const formDataPolicyName = \"formDataPolicy\";\nfunction formDataToFormDataMap(formData) {\n    var _a;\n    const formDataMap = {};\n    for (const [key, value] of formData.entries()) {\n        (_a = formDataMap[key]) !== null && _a !== void 0 ? _a : (formDataMap[key] = []);\n        formDataMap[key].push(value);\n    }\n    return formDataMap;\n}\n/**\n * A policy that encodes FormData on the request into the body.\n */\nexport function formDataPolicy() {\n    return {\n        name: formDataPolicyName,\n        async sendRequest(request, next) {\n            if (isNodeLike && typeof FormData !== \"undefined\" && request.body instanceof FormData) {\n                request.formData = formDataToFormDataMap(request.body);\n                request.body = undefined;\n            }\n            if (request.formData) {\n                const contentType = request.headers.get(\"Content-Type\");\n                if (contentType && contentType.indexOf(\"application/x-www-form-urlencoded\") !== -1) {\n                    request.body = wwwFormUrlEncode(request.formData);\n                }\n                else {\n                    await prepareFormData(request.formData, request);\n                }\n                request.formData = undefined;\n            }\n            return next(request);\n        },\n    };\n}\nfunction wwwFormUrlEncode(formData) {\n    const urlSearchParams = new URLSearchParams();\n    for (const [key, value] of Object.entries(formData)) {\n        if (Array.isArray(value)) {\n            for (const subValue of value) {\n                urlSearchParams.append(key, subValue.toString());\n            }\n        }\n        else {\n            urlSearchParams.append(key, value.toString());\n        }\n    }\n    return urlSearchParams.toString();\n}\nasync function prepareFormData(formData, request) {\n    // validate content type (multipart/form-data)\n    const contentType = request.headers.get(\"Content-Type\");\n    if (contentType && !contentType.startsWith(\"multipart/form-data\")) {\n        // content type is specified and is not multipart/form-data. Exit.\n        return;\n    }\n    request.headers.set(\"Content-Type\", contentType !== null && contentType !== void 0 ? contentType : \"multipart/form-data\");\n    // set body to MultipartRequestBody using content from FormDataMap\n    const parts = [];\n    for (const [fieldName, values] of Object.entries(formData)) {\n        for (const value of Array.isArray(values) ? values : [values]) {\n            if (typeof value === \"string\") {\n                parts.push({\n                    headers: createHttpHeaders({\n                        \"Content-Disposition\": `form-data; name=\"${fieldName}\"`,\n                    }),\n                    body: stringToUint8Array(value, \"utf-8\"),\n                });\n            }\n            else if (value === undefined || value === null || typeof value !== \"object\") {\n                throw new Error(`Unexpected value for key ${fieldName}: ${value}. Value should be serialized to string first.`);\n            }\n            else {\n                // using || instead of ?? here since if value.name is empty we should create a file name\n                const fileName = value.name || \"blob\";\n                const headers = createHttpHeaders();\n                headers.set(\"Content-Disposition\", `form-data; name=\"${fieldName}\"; filename=\"${fileName}\"`);\n                // again, || is used since an empty value.type means the content type is unset\n                headers.set(\"Content-Type\", value.type || \"application/octet-stream\");\n                parts.push({\n                    headers,\n                    body: value,\n                });\n            }\n        }\n    }\n    request.multipartBody = { parts };\n}\n//# sourceMappingURL=formDataPolicy.js.map","\n/**\n * This is the common logic for both the Node.js and web browser\n * implementations of `debug()`.\n */\n\nfunction setup(env) {\n\tcreateDebug.debug = createDebug;\n\tcreateDebug.default = createDebug;\n\tcreateDebug.coerce = coerce;\n\tcreateDebug.disable = disable;\n\tcreateDebug.enable = enable;\n\tcreateDebug.enabled = enabled;\n\tcreateDebug.humanize = require('ms');\n\tcreateDebug.destroy = destroy;\n\n\tObject.keys(env).forEach(key => {\n\t\tcreateDebug[key] = env[key];\n\t});\n\n\t/**\n\t* The currently active debug mode names, and names to skip.\n\t*/\n\n\tcreateDebug.names = [];\n\tcreateDebug.skips = [];\n\n\t/**\n\t* Map of special \"%n\" handling functions, for the debug \"format\" argument.\n\t*\n\t* Valid key names are a single, lower or upper-case letter, i.e. \"n\" and \"N\".\n\t*/\n\tcreateDebug.formatters = {};\n\n\t/**\n\t* Selects a color for a debug namespace\n\t* @param {String} namespace The namespace string for the debug instance to be colored\n\t* @return {Number|String} An ANSI color code for the given namespace\n\t* @api private\n\t*/\n\tfunction selectColor(namespace) {\n\t\tlet hash = 0;\n\n\t\tfor (let i = 0; i < namespace.length; i++) {\n\t\t\thash = ((hash << 5) - hash) + namespace.charCodeAt(i);\n\t\t\thash |= 0; // Convert to 32bit integer\n\t\t}\n\n\t\treturn createDebug.colors[Math.abs(hash) % createDebug.colors.length];\n\t}\n\tcreateDebug.selectColor = selectColor;\n\n\t/**\n\t* Create a debugger with the given `namespace`.\n\t*\n\t* @param {String} namespace\n\t* @return {Function}\n\t* @api public\n\t*/\n\tfunction createDebug(namespace) {\n\t\tlet prevTime;\n\t\tlet enableOverride = null;\n\t\tlet namespacesCache;\n\t\tlet enabledCache;\n\n\t\tfunction debug(...args) {\n\t\t\t// Disabled?\n\t\t\tif (!debug.enabled) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst self = debug;\n\n\t\t\t// Set `diff` timestamp\n\t\t\tconst curr = Number(new Date());\n\t\t\tconst ms = curr - (prevTime || curr);\n\t\t\tself.diff = ms;\n\t\t\tself.prev = prevTime;\n\t\t\tself.curr = curr;\n\t\t\tprevTime = curr;\n\n\t\t\targs[0] = createDebug.coerce(args[0]);\n\n\t\t\tif (typeof args[0] !== 'string') {\n\t\t\t\t// Anything else let's inspect with %O\n\t\t\t\targs.unshift('%O');\n\t\t\t}\n\n\t\t\t// Apply any `formatters` transformations\n\t\t\tlet index = 0;\n\t\t\targs[0] = args[0].replace(/%([a-zA-Z%])/g, (match, format) => {\n\t\t\t\t// If we encounter an escaped % then don't increase the array index\n\t\t\t\tif (match === '%%') {\n\t\t\t\t\treturn '%';\n\t\t\t\t}\n\t\t\t\tindex++;\n\t\t\t\tconst formatter = createDebug.formatters[format];\n\t\t\t\tif (typeof formatter === 'function') {\n\t\t\t\t\tconst val = args[index];\n\t\t\t\t\tmatch = formatter.call(self, val);\n\n\t\t\t\t\t// Now we need to remove `args[index]` since it's inlined in the `format`\n\t\t\t\t\targs.splice(index, 1);\n\t\t\t\t\tindex--;\n\t\t\t\t}\n\t\t\t\treturn match;\n\t\t\t});\n\n\t\t\t// Apply env-specific formatting (colors, etc.)\n\t\t\tcreateDebug.formatArgs.call(self, args);\n\n\t\t\tconst logFn = self.log || createDebug.log;\n\t\t\tlogFn.apply(self, args);\n\t\t}\n\n\t\tdebug.namespace = namespace;\n\t\tdebug.useColors = createDebug.useColors();\n\t\tdebug.color = createDebug.selectColor(namespace);\n\t\tdebug.extend = extend;\n\t\tdebug.destroy = createDebug.destroy; // XXX Temporary. Will be removed in the next major release.\n\n\t\tObject.defineProperty(debug, 'enabled', {\n\t\t\tenumerable: true,\n\t\t\tconfigurable: false,\n\t\t\tget: () => {\n\t\t\t\tif (enableOverride !== null) {\n\t\t\t\t\treturn enableOverride;\n\t\t\t\t}\n\t\t\t\tif (namespacesCache !== createDebug.namespaces) {\n\t\t\t\t\tnamespacesCache = createDebug.namespaces;\n\t\t\t\t\tenabledCache = createDebug.enabled(namespace);\n\t\t\t\t}\n\n\t\t\t\treturn enabledCache;\n\t\t\t},\n\t\t\tset: v => {\n\t\t\t\tenableOverride = v;\n\t\t\t}\n\t\t});\n\n\t\t// Env-specific initialization logic for debug instances\n\t\tif (typeof createDebug.init === 'function') {\n\t\t\tcreateDebug.init(debug);\n\t\t}\n\n\t\treturn debug;\n\t}\n\n\tfunction extend(namespace, delimiter) {\n\t\tconst newDebug = createDebug(this.namespace + (typeof delimiter === 'undefined' ? ':' : delimiter) + namespace);\n\t\tnewDebug.log = this.log;\n\t\treturn newDebug;\n\t}\n\n\t/**\n\t* Enables a debug mode by namespaces. This can include modes\n\t* separated by a colon and wildcards.\n\t*\n\t* @param {String} namespaces\n\t* @api public\n\t*/\n\tfunction enable(namespaces) {\n\t\tcreateDebug.save(namespaces);\n\t\tcreateDebug.namespaces = namespaces;\n\n\t\tcreateDebug.names = [];\n\t\tcreateDebug.skips = [];\n\n\t\tconst split = (typeof namespaces === 'string' ? namespaces : '')\n\t\t\t.trim()\n\t\t\t.replace(/\\s+/g, ',')\n\t\t\t.split(',')\n\t\t\t.filter(Boolean);\n\n\t\tfor (const ns of split) {\n\t\t\tif (ns[0] === '-') {\n\t\t\t\tcreateDebug.skips.push(ns.slice(1));\n\t\t\t} else {\n\t\t\t\tcreateDebug.names.push(ns);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Checks if the given string matches a namespace template, honoring\n\t * asterisks as wildcards.\n\t *\n\t * @param {String} search\n\t * @param {String} template\n\t * @return {Boolean}\n\t */\n\tfunction matchesTemplate(search, template) {\n\t\tlet searchIndex = 0;\n\t\tlet templateIndex = 0;\n\t\tlet starIndex = -1;\n\t\tlet matchIndex = 0;\n\n\t\twhile (searchIndex < search.length) {\n\t\t\tif (templateIndex < template.length && (template[templateIndex] === search[searchIndex] || template[templateIndex] === '*')) {\n\t\t\t\t// Match character or proceed with wildcard\n\t\t\t\tif (template[templateIndex] === '*') {\n\t\t\t\t\tstarIndex = templateIndex;\n\t\t\t\t\tmatchIndex = searchIndex;\n\t\t\t\t\ttemplateIndex++; // Skip the '*'\n\t\t\t\t} else {\n\t\t\t\t\tsearchIndex++;\n\t\t\t\t\ttemplateIndex++;\n\t\t\t\t}\n\t\t\t} else if (starIndex !== -1) { // eslint-disable-line no-negated-condition\n\t\t\t\t// Backtrack to the last '*' and try to match more characters\n\t\t\t\ttemplateIndex = starIndex + 1;\n\t\t\t\tmatchIndex++;\n\t\t\t\tsearchIndex = matchIndex;\n\t\t\t} else {\n\t\t\t\treturn false; // No match\n\t\t\t}\n\t\t}\n\n\t\t// Handle trailing '*' in template\n\t\twhile (templateIndex < template.length && template[templateIndex] === '*') {\n\t\t\ttemplateIndex++;\n\t\t}\n\n\t\treturn templateIndex === template.length;\n\t}\n\n\t/**\n\t* Disable debug output.\n\t*\n\t* @return {String} namespaces\n\t* @api public\n\t*/\n\tfunction disable() {\n\t\tconst namespaces = [\n\t\t\t...createDebug.names,\n\t\t\t...createDebug.skips.map(namespace => '-' + namespace)\n\t\t].join(',');\n\t\tcreateDebug.enable('');\n\t\treturn namespaces;\n\t}\n\n\t/**\n\t* Returns true if the given mode name is enabled, false otherwise.\n\t*\n\t* @param {String} name\n\t* @return {Boolean}\n\t* @api public\n\t*/\n\tfunction enabled(name) {\n\t\tfor (const skip of createDebug.skips) {\n\t\t\tif (matchesTemplate(name, skip)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\tfor (const ns of createDebug.names) {\n\t\t\tif (matchesTemplate(name, ns)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t/**\n\t* Coerce `val`.\n\t*\n\t* @param {Mixed} val\n\t* @return {Mixed}\n\t* @api private\n\t*/\n\tfunction coerce(val) {\n\t\tif (val instanceof Error) {\n\t\t\treturn val.stack || val.message;\n\t\t}\n\t\treturn val;\n\t}\n\n\t/**\n\t* XXX DO NOT USE. This is a temporary stub function.\n\t* XXX It WILL be removed in the next major release.\n\t*/\n\tfunction destroy() {\n\t\tconsole.warn('Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.');\n\t}\n\n\tcreateDebug.enable(createDebug.load());\n\n\treturn createDebug;\n}\n\nmodule.exports = setup;\n","'use strict';\n\nmodule.exports = (flag, argv = process.argv) => {\n\tconst prefix = flag.startsWith('-') ? '' : (flag.length === 1 ? '-' : '--');\n\tconst position = argv.indexOf(prefix + flag);\n\tconst terminatorPosition = argv.indexOf('--');\n\treturn position !== -1 && (terminatorPosition === -1 || position < terminatorPosition);\n};\n","/**\n * Module dependencies.\n */\n\nconst tty = require('tty');\nconst util = require('util');\n\n/**\n * This is the Node.js implementation of `debug()`.\n */\n\nexports.init = init;\nexports.log = log;\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\nexports.destroy = util.deprecate(\n\t() => {},\n\t'Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.'\n);\n\n/**\n * Colors.\n */\n\nexports.colors = [6, 2, 3, 4, 5, 1];\n\ntry {\n\t// Optional dependency (as in, doesn't need to be installed, NOT like optionalDependencies in package.json)\n\t// eslint-disable-next-line import/no-extraneous-dependencies\n\tconst supportsColor = require('supports-color');\n\n\tif (supportsColor && (supportsColor.stderr || supportsColor).level >= 2) {\n\t\texports.colors = [\n\t\t\t20,\n\t\t\t21,\n\t\t\t26,\n\t\t\t27,\n\t\t\t32,\n\t\t\t33,\n\t\t\t38,\n\t\t\t39,\n\t\t\t40,\n\t\t\t41,\n\t\t\t42,\n\t\t\t43,\n\t\t\t44,\n\t\t\t45,\n\t\t\t56,\n\t\t\t57,\n\t\t\t62,\n\t\t\t63,\n\t\t\t68,\n\t\t\t69,\n\t\t\t74,\n\t\t\t75,\n\t\t\t76,\n\t\t\t77,\n\t\t\t78,\n\t\t\t79,\n\t\t\t80,\n\t\t\t81,\n\t\t\t92,\n\t\t\t93,\n\t\t\t98,\n\t\t\t99,\n\t\t\t112,\n\t\t\t113,\n\t\t\t128,\n\t\t\t129,\n\t\t\t134,\n\t\t\t135,\n\t\t\t148,\n\t\t\t149,\n\t\t\t160,\n\t\t\t161,\n\t\t\t162,\n\t\t\t163,\n\t\t\t164,\n\t\t\t165,\n\t\t\t166,\n\t\t\t167,\n\t\t\t168,\n\t\t\t169,\n\t\t\t170,\n\t\t\t171,\n\t\t\t172,\n\t\t\t173,\n\t\t\t178,\n\t\t\t179,\n\t\t\t184,\n\t\t\t185,\n\t\t\t196,\n\t\t\t197,\n\t\t\t198,\n\t\t\t199,\n\t\t\t200,\n\t\t\t201,\n\t\t\t202,\n\t\t\t203,\n\t\t\t204,\n\t\t\t205,\n\t\t\t206,\n\t\t\t207,\n\t\t\t208,\n\t\t\t209,\n\t\t\t214,\n\t\t\t215,\n\t\t\t220,\n\t\t\t221\n\t\t];\n\t}\n} catch (error) {\n\t// Swallow - we only care if `supports-color` is available; it doesn't have to be.\n}\n\n/**\n * Build up the default `inspectOpts` object from the environment variables.\n *\n *   $ DEBUG_COLORS=no DEBUG_DEPTH=10 DEBUG_SHOW_HIDDEN=enabled node script.js\n */\n\nexports.inspectOpts = Object.keys(process.env).filter(key => {\n\treturn /^debug_/i.test(key);\n}).reduce((obj, key) => {\n\t// Camel-case\n\tconst prop = key\n\t\t.substring(6)\n\t\t.toLowerCase()\n\t\t.replace(/_([a-z])/g, (_, k) => {\n\t\t\treturn k.toUpperCase();\n\t\t});\n\n\t// Coerce string value into JS value\n\tlet val = process.env[key];\n\tif (/^(yes|on|true|enabled)$/i.test(val)) {\n\t\tval = true;\n\t} else if (/^(no|off|false|disabled)$/i.test(val)) {\n\t\tval = false;\n\t} else if (val === 'null') {\n\t\tval = null;\n\t} else {\n\t\tval = Number(val);\n\t}\n\n\tobj[prop] = val;\n\treturn obj;\n}, {});\n\n/**\n * Is stdout a TTY? Colored output is enabled when `true`.\n */\n\nfunction useColors() {\n\treturn 'colors' in exports.inspectOpts ?\n\t\tBoolean(exports.inspectOpts.colors) :\n\t\ttty.isatty(process.stderr.fd);\n}\n\n/**\n * Adds ANSI color escape codes if enabled.\n *\n * @api public\n */\n\nfunction formatArgs(args) {\n\tconst {namespace: name, useColors} = this;\n\n\tif (useColors) {\n\t\tconst c = this.color;\n\t\tconst colorCode = '\\u001B[3' + (c < 8 ? c : '8;5;' + c);\n\t\tconst prefix = `  ${colorCode};1m${name} \\u001B[0m`;\n\n\t\targs[0] = prefix + args[0].split('\\n').join('\\n' + prefix);\n\t\targs.push(colorCode + 'm+' + module.exports.humanize(this.diff) + '\\u001B[0m');\n\t} else {\n\t\targs[0] = getDate() + name + ' ' + args[0];\n\t}\n}\n\nfunction getDate() {\n\tif (exports.inspectOpts.hideDate) {\n\t\treturn '';\n\t}\n\treturn new Date().toISOString() + ' ';\n}\n\n/**\n * Invokes `util.formatWithOptions()` with the specified arguments and writes to stderr.\n */\n\nfunction log(...args) {\n\treturn process.stderr.write(util.formatWithOptions(exports.inspectOpts, ...args) + '\\n');\n}\n\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\nfunction save(namespaces) {\n\tif (namespaces) {\n\t\tprocess.env.DEBUG = namespaces;\n\t} else {\n\t\t// If you set a process.env field to null or undefined, it gets cast to the\n\t\t// string 'null' or 'undefined'. Just delete instead.\n\t\tdelete process.env.DEBUG;\n\t}\n}\n\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\n\nfunction load() {\n\treturn process.env.DEBUG;\n}\n\n/**\n * Init logic for `debug` instances.\n *\n * Create a new `inspectOpts` object in case `useColors` is set\n * differently for a particular `debug` instance.\n */\n\nfunction init(debug) {\n\tdebug.inspectOpts = {};\n\n\tconst keys = Object.keys(exports.inspectOpts);\n\tfor (let i = 0; i < keys.length; i++) {\n\t\tdebug.inspectOpts[keys[i]] = exports.inspectOpts[keys[i]];\n\t}\n}\n\nmodule.exports = require('./common')(exports);\n\nconst {formatters} = module.exports;\n\n/**\n * Map %o to `util.inspect()`, all on a single line.\n */\n\nformatters.o = function (v) {\n\tthis.inspectOpts.colors = this.useColors;\n\treturn util.inspect(v, this.inspectOpts)\n\t\t.split('\\n')\n\t\t.map(str => str.trim())\n\t\t.join(' ');\n};\n\n/**\n * Map %O to `util.inspect()`, allowing multiple lines if needed.\n */\n\nformatters.O = function (v) {\n\tthis.inspectOpts.colors = this.useColors;\n\treturn util.inspect(v, this.inspectOpts);\n};\n","'use strict';\nconst os = require('os');\nconst tty = require('tty');\nconst hasFlag = require('has-flag');\n\nconst {env} = process;\n\nlet forceColor;\nif (hasFlag('no-color') ||\n\thasFlag('no-colors') ||\n\thasFlag('color=false') ||\n\thasFlag('color=never')) {\n\tforceColor = 0;\n} else if (hasFlag('color') ||\n\thasFlag('colors') ||\n\thasFlag('color=true') ||\n\thasFlag('color=always')) {\n\tforceColor = 1;\n}\n\nif ('FORCE_COLOR' in env) {\n\tif (env.FORCE_COLOR === 'true') {\n\t\tforceColor = 1;\n\t} else if (env.FORCE_COLOR === 'false') {\n\t\tforceColor = 0;\n\t} else {\n\t\tforceColor = env.FORCE_COLOR.length === 0 ? 1 : Math.min(parseInt(env.FORCE_COLOR, 10), 3);\n\t}\n}\n\nfunction translateLevel(level) {\n\tif (level === 0) {\n\t\treturn false;\n\t}\n\n\treturn {\n\t\tlevel,\n\t\thasBasic: true,\n\t\thas256: level >= 2,\n\t\thas16m: level >= 3\n\t};\n}\n\nfunction supportsColor(haveStream, streamIsTTY) {\n\tif (forceColor === 0) {\n\t\treturn 0;\n\t}\n\n\tif (hasFlag('color=16m') ||\n\t\thasFlag('color=full') ||\n\t\thasFlag('color=truecolor')) {\n\t\treturn 3;\n\t}\n\n\tif (hasFlag('color=256')) {\n\t\treturn 2;\n\t}\n\n\tif (haveStream && !streamIsTTY && forceColor === undefined) {\n\t\treturn 0;\n\t}\n\n\tconst min = forceColor || 0;\n\n\tif (env.TERM === 'dumb') {\n\t\treturn min;\n\t}\n\n\tif (process.platform === 'win32') {\n\t\t// Windows 10 build 10586 is the first Windows release that supports 256 colors.\n\t\t// Windows 10 build 14931 is the first release that supports 16m/TrueColor.\n\t\tconst osRelease = os.release().split('.');\n\t\tif (\n\t\t\tNumber(osRelease[0]) >= 10 &&\n\t\t\tNumber(osRelease[2]) >= 10586\n\t\t) {\n\t\t\treturn Number(osRelease[2]) >= 14931 ? 3 : 2;\n\t\t}\n\n\t\treturn 1;\n\t}\n\n\tif ('CI' in env) {\n\t\tif (['TRAVIS', 'CIRCLECI', 'APPVEYOR', 'GITLAB_CI', 'GITHUB_ACTIONS', 'BUILDKITE'].some(sign => sign in env) || env.CI_NAME === 'codeship') {\n\t\t\treturn 1;\n\t\t}\n\n\t\treturn min;\n\t}\n\n\tif ('TEAMCITY_VERSION' in env) {\n\t\treturn /^(9\\.(0*[1-9]\\d*)\\.|\\d{2,}\\.)/.test(env.TEAMCITY_VERSION) ? 1 : 0;\n\t}\n\n\tif (env.COLORTERM === 'truecolor') {\n\t\treturn 3;\n\t}\n\n\tif ('TERM_PROGRAM' in env) {\n\t\tconst version = parseInt((env.TERM_PROGRAM_VERSION || '').split('.')[0], 10);\n\n\t\tswitch (env.TERM_PROGRAM) {\n\t\t\tcase 'iTerm.app':\n\t\t\t\treturn version >= 3 ? 3 : 2;\n\t\t\tcase 'Apple_Terminal':\n\t\t\t\treturn 2;\n\t\t\t// No default\n\t\t}\n\t}\n\n\tif (/-256(color)?$/i.test(env.TERM)) {\n\t\treturn 2;\n\t}\n\n\tif (/^screen|^xterm|^vt100|^vt220|^rxvt|color|ansi|cygwin|linux/i.test(env.TERM)) {\n\t\treturn 1;\n\t}\n\n\tif ('COLORTERM' in env) {\n\t\treturn 1;\n\t}\n\n\treturn min;\n}\n\nfunction getSupportLevel(stream) {\n\tconst level = supportsColor(stream, stream && stream.isTTY);\n\treturn translateLevel(level);\n}\n\nmodule.exports = {\n\tsupportsColor: getSupportLevel,\n\tstdout: translateLevel(supportsColor(true, tty.isatty(1))),\n\tstderr: translateLevel(supportsColor(true, tty.isatty(2)))\n};\n","/**\n * Detect Electron renderer / nwjs process, which is node, but we should\n * treat as a browser.\n */\n\nif (typeof process === 'undefined' || process.type === 'renderer' || process.browser === true || process.__nwjs) {\n\tmodule.exports = require('./browser.js');\n} else {\n\tmodule.exports = require('./node.js');\n}\n","/* eslint-env browser */\n\n/**\n * This is the web browser implementation of `debug()`.\n */\n\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\nexports.storage = localstorage();\nexports.destroy = (() => {\n\tlet warned = false;\n\n\treturn () => {\n\t\tif (!warned) {\n\t\t\twarned = true;\n\t\t\tconsole.warn('Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.');\n\t\t}\n\t};\n})();\n\n/**\n * Colors.\n */\n\nexports.colors = [\n\t'#0000CC',\n\t'#0000FF',\n\t'#0033CC',\n\t'#0033FF',\n\t'#0066CC',\n\t'#0066FF',\n\t'#0099CC',\n\t'#0099FF',\n\t'#00CC00',\n\t'#00CC33',\n\t'#00CC66',\n\t'#00CC99',\n\t'#00CCCC',\n\t'#00CCFF',\n\t'#3300CC',\n\t'#3300FF',\n\t'#3333CC',\n\t'#3333FF',\n\t'#3366CC',\n\t'#3366FF',\n\t'#3399CC',\n\t'#3399FF',\n\t'#33CC00',\n\t'#33CC33',\n\t'#33CC66',\n\t'#33CC99',\n\t'#33CCCC',\n\t'#33CCFF',\n\t'#6600CC',\n\t'#6600FF',\n\t'#6633CC',\n\t'#6633FF',\n\t'#66CC00',\n\t'#66CC33',\n\t'#9900CC',\n\t'#9900FF',\n\t'#9933CC',\n\t'#9933FF',\n\t'#99CC00',\n\t'#99CC33',\n\t'#CC0000',\n\t'#CC0033',\n\t'#CC0066',\n\t'#CC0099',\n\t'#CC00CC',\n\t'#CC00FF',\n\t'#CC3300',\n\t'#CC3333',\n\t'#CC3366',\n\t'#CC3399',\n\t'#CC33CC',\n\t'#CC33FF',\n\t'#CC6600',\n\t'#CC6633',\n\t'#CC9900',\n\t'#CC9933',\n\t'#CCCC00',\n\t'#CCCC33',\n\t'#FF0000',\n\t'#FF0033',\n\t'#FF0066',\n\t'#FF0099',\n\t'#FF00CC',\n\t'#FF00FF',\n\t'#FF3300',\n\t'#FF3333',\n\t'#FF3366',\n\t'#FF3399',\n\t'#FF33CC',\n\t'#FF33FF',\n\t'#FF6600',\n\t'#FF6633',\n\t'#FF9900',\n\t'#FF9933',\n\t'#FFCC00',\n\t'#FFCC33'\n];\n\n/**\n * Currently only WebKit-based Web Inspectors, Firefox >= v31,\n * and the Firebug extension (any Firefox version) are known\n * to support \"%c\" CSS customizations.\n *\n * TODO: add a `localStorage` variable to explicitly enable/disable colors\n */\n\n// eslint-disable-next-line complexity\nfunction useColors() {\n\t// NB: In an Electron preload script, document will be defined but not fully\n\t// initialized. Since we know we're in Chrome, we'll just detect this case\n\t// explicitly\n\tif (typeof window !== 'undefined' && window.process && (window.process.type === 'renderer' || window.process.__nwjs)) {\n\t\treturn true;\n\t}\n\n\t// Internet Explorer and Edge do not support colors.\n\tif (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/(edge|trident)\\/(\\d+)/)) {\n\t\treturn false;\n\t}\n\n\tlet m;\n\n\t// Is webkit? http://stackoverflow.com/a/16459606/376773\n\t// document is undefined in react-native: https://github.com/facebook/react-native/pull/1632\n\t// eslint-disable-next-line no-return-assign\n\treturn (typeof document !== 'undefined' && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance) ||\n\t\t// Is firebug? http://stackoverflow.com/a/398120/376773\n\t\t(typeof window !== 'undefined' && window.console && (window.console.firebug || (window.console.exception && window.console.table))) ||\n\t\t// Is firefox >= v31?\n\t\t// https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages\n\t\t(typeof navigator !== 'undefined' && navigator.userAgent && (m = navigator.userAgent.toLowerCase().match(/firefox\\/(\\d+)/)) && parseInt(m[1], 10) >= 31) ||\n\t\t// Double check webkit in userAgent just in case we are in a worker\n\t\t(typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\\/(\\d+)/));\n}\n\n/**\n * Colorize log arguments if enabled.\n *\n * @api public\n */\n\nfunction formatArgs(args) {\n\targs[0] = (this.useColors ? '%c' : '') +\n\t\tthis.namespace +\n\t\t(this.useColors ? ' %c' : ' ') +\n\t\targs[0] +\n\t\t(this.useColors ? '%c ' : ' ') +\n\t\t'+' + module.exports.humanize(this.diff);\n\n\tif (!this.useColors) {\n\t\treturn;\n\t}\n\n\tconst c = 'color: ' + this.color;\n\targs.splice(1, 0, c, 'color: inherit');\n\n\t// The final \"%c\" is somewhat tricky, because there could be other\n\t// arguments passed either before or after the %c, so we need to\n\t// figure out the correct index to insert the CSS into\n\tlet index = 0;\n\tlet lastC = 0;\n\targs[0].replace(/%[a-zA-Z%]/g, match => {\n\t\tif (match === '%%') {\n\t\t\treturn;\n\t\t}\n\t\tindex++;\n\t\tif (match === '%c') {\n\t\t\t// We only are interested in the *last* %c\n\t\t\t// (the user may have provided their own)\n\t\t\tlastC = index;\n\t\t}\n\t});\n\n\targs.splice(lastC, 0, c);\n}\n\n/**\n * Invokes `console.debug()` when available.\n * No-op when `console.debug` is not a \"function\".\n * If `console.debug` is not available, falls back\n * to `console.log`.\n *\n * @api public\n */\nexports.log = console.debug || console.log || (() => {});\n\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\nfunction save(namespaces) {\n\ttry {\n\t\tif (namespaces) {\n\t\t\texports.storage.setItem('debug', namespaces);\n\t\t} else {\n\t\t\texports.storage.removeItem('debug');\n\t\t}\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n}\n\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\nfunction load() {\n\tlet r;\n\ttry {\n\t\tr = exports.storage.getItem('debug') || exports.storage.getItem('DEBUG') ;\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n\n\t// If debug isn't set in LS, and we're in Electron, try to load $DEBUG\n\tif (!r && typeof process !== 'undefined' && 'env' in process) {\n\t\tr = process.env.DEBUG;\n\t}\n\n\treturn r;\n}\n\n/**\n * Localstorage attempts to return the localstorage.\n *\n * This is necessary because safari throws\n * when a user disables cookies/localstorage\n * and you attempt to access it.\n *\n * @return {LocalStorage}\n * @api private\n */\n\nfunction localstorage() {\n\ttry {\n\t\t// TVMLKit (Apple TV JS Runtime) does not have a window object, just localStorage in the global context\n\t\t// The Browser also has localStorage in the global context.\n\t\treturn localStorage;\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n}\n\nmodule.exports = require('./common')(exports);\n\nconst {formatters} = module.exports;\n\n/**\n * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.\n */\n\nformatters.j = function (v) {\n\ttry {\n\t\treturn JSON.stringify(v);\n\t} catch (error) {\n\t\treturn '[UnexpectedJSONParseError]: ' + error.message;\n\t}\n};\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Agent = void 0;\nconst net = __importStar(require(\"net\"));\nconst http = __importStar(require(\"http\"));\nconst https_1 = require(\"https\");\n__exportStar(require(\"./helpers\"), exports);\nconst INTERNAL = Symbol('AgentBaseInternalState');\nclass Agent extends http.Agent {\n    constructor(opts) {\n        super(opts);\n        this[INTERNAL] = {};\n    }\n    /**\n     * Determine whether this is an `http` or `https` request.\n     */\n    isSecureEndpoint(options) {\n        if (options) {\n            // First check the `secureEndpoint` property explicitly, since this\n            // means that a parent `Agent` is \"passing through\" to this instance.\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            if (typeof options.secureEndpoint === 'boolean') {\n                return options.secureEndpoint;\n            }\n            // If no explicit `secure` endpoint, check if `protocol` property is\n            // set. This will usually be the case since using a full string URL\n            // or `URL` instance should be the most common usage.\n            if (typeof options.protocol === 'string') {\n                return options.protocol === 'https:';\n            }\n        }\n        // Finally, if no `protocol` property was set, then fall back to\n        // checking the stack trace of the current call stack, and try to\n        // detect the \"https\" module.\n        const { stack } = new Error();\n        if (typeof stack !== 'string')\n            return false;\n        return stack\n            .split('\\n')\n            .some((l) => l.indexOf('(https.js:') !== -1 ||\n            l.indexOf('node:https:') !== -1);\n    }\n    // In order to support async signatures in `connect()` and Node's native\n    // connection pooling in `http.Agent`, the array of sockets for each origin\n    // has to be updated synchronously. This is so the length of the array is\n    // accurate when `addRequest()` is next called. We achieve this by creating a\n    // fake socket and adding it to `sockets[origin]` and incrementing\n    // `totalSocketCount`.\n    incrementSockets(name) {\n        // If `maxSockets` and `maxTotalSockets` are both Infinity then there is no\n        // need to create a fake socket because Node.js native connection pooling\n        // will never be invoked.\n        if (this.maxSockets === Infinity && this.maxTotalSockets === Infinity) {\n            return null;\n        }\n        // All instances of `sockets` are expected TypeScript errors. The\n        // alternative is to add it as a private property of this class but that\n        // will break TypeScript subclassing.\n        if (!this.sockets[name]) {\n            // @ts-expect-error `sockets` is readonly in `@types/node`\n            this.sockets[name] = [];\n        }\n        const fakeSocket = new net.Socket({ writable: false });\n        this.sockets[name].push(fakeSocket);\n        // @ts-expect-error `totalSocketCount` isn't defined in `@types/node`\n        this.totalSocketCount++;\n        return fakeSocket;\n    }\n    decrementSockets(name, socket) {\n        if (!this.sockets[name] || socket === null) {\n            return;\n        }\n        const sockets = this.sockets[name];\n        const index = sockets.indexOf(socket);\n        if (index !== -1) {\n            sockets.splice(index, 1);\n            // @ts-expect-error  `totalSocketCount` isn't defined in `@types/node`\n            this.totalSocketCount--;\n            if (sockets.length === 0) {\n                // @ts-expect-error `sockets` is readonly in `@types/node`\n                delete this.sockets[name];\n            }\n        }\n    }\n    // In order to properly update the socket pool, we need to call `getName()` on\n    // the core `https.Agent` if it is a secureEndpoint.\n    getName(options) {\n        const secureEndpoint = this.isSecureEndpoint(options);\n        if (secureEndpoint) {\n            // @ts-expect-error `getName()` isn't defined in `@types/node`\n            return https_1.Agent.prototype.getName.call(this, options);\n        }\n        // @ts-expect-error `getName()` isn't defined in `@types/node`\n        return super.getName(options);\n    }\n    createSocket(req, options, cb) {\n        const connectOpts = {\n            ...options,\n            secureEndpoint: this.isSecureEndpoint(options),\n        };\n        const name = this.getName(connectOpts);\n        const fakeSocket = this.incrementSockets(name);\n        Promise.resolve()\n            .then(() => this.connect(req, connectOpts))\n            .then((socket) => {\n            this.decrementSockets(name, fakeSocket);\n            if (socket instanceof http.Agent) {\n                try {\n                    // @ts-expect-error `addRequest()` isn't defined in `@types/node`\n                    return socket.addRequest(req, connectOpts);\n                }\n                catch (err) {\n                    return cb(err);\n                }\n            }\n            this[INTERNAL].currentSocket = socket;\n            // @ts-expect-error `createSocket()` isn't defined in `@types/node`\n            super.createSocket(req, options, cb);\n        }, (err) => {\n            this.decrementSockets(name, fakeSocket);\n            cb(err);\n        });\n    }\n    createConnection() {\n        const socket = this[INTERNAL].currentSocket;\n        this[INTERNAL].currentSocket = undefined;\n        if (!socket) {\n            throw new Error('No socket was returned in the `connect()` function');\n        }\n        return socket;\n    }\n    get defaultPort() {\n        return (this[INTERNAL].defaultPort ??\n            (this.protocol === 'https:' ? 443 : 80));\n    }\n    set defaultPort(v) {\n        if (this[INTERNAL]) {\n            this[INTERNAL].defaultPort = v;\n        }\n    }\n    get protocol() {\n        return (this[INTERNAL].protocol ??\n            (this.isSecureEndpoint() ? 'https:' : 'http:'));\n    }\n    set protocol(v) {\n        if (this[INTERNAL]) {\n            this[INTERNAL].protocol = v;\n        }\n    }\n}\nexports.Agent = Agent;\n//# sourceMappingURL=index.js.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.req = exports.json = exports.toBuffer = void 0;\nconst http = __importStar(require(\"http\"));\nconst https = __importStar(require(\"https\"));\nasync function toBuffer(stream) {\n    let length = 0;\n    const chunks = [];\n    for await (const chunk of stream) {\n        length += chunk.length;\n        chunks.push(chunk);\n    }\n    return Buffer.concat(chunks, length);\n}\nexports.toBuffer = toBuffer;\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nasync function json(stream) {\n    const buf = await toBuffer(stream);\n    const str = buf.toString('utf8');\n    try {\n        return JSON.parse(str);\n    }\n    catch (_err) {\n        const err = _err;\n        err.message += ` (input: ${str})`;\n        throw err;\n    }\n}\nexports.json = json;\nfunction req(url, opts = {}) {\n    const href = typeof url === 'string' ? url : url.href;\n    const req = (href.startsWith('https:') ? https : http).request(url, opts);\n    const promise = new Promise((resolve, reject) => {\n        req\n            .once('response', resolve)\n            .once('error', reject)\n            .end();\n    });\n    req.then = promise.then.bind(promise);\n    return req;\n}\nexports.req = req;\n//# sourceMappingURL=helpers.js.map","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.parseProxyResponse = void 0;\nconst debug_1 = __importDefault(require(\"debug\"));\nconst debug = (0, debug_1.default)('https-proxy-agent:parse-proxy-response');\nfunction parseProxyResponse(socket) {\n    return new Promise((resolve, reject) => {\n        // we need to buffer any HTTP traffic that happens with the proxy before we get\n        // the CONNECT response, so that if the response is anything other than an \"200\"\n        // response code, then we can re-play the \"data\" events on the socket once the\n        // HTTP parser is hooked up...\n        let buffersLength = 0;\n        const buffers = [];\n        function read() {\n            const b = socket.read();\n            if (b)\n                ondata(b);\n            else\n                socket.once('readable', read);\n        }\n        function cleanup() {\n            socket.removeListener('end', onend);\n            socket.removeListener('error', onerror);\n            socket.removeListener('readable', read);\n        }\n        function onend() {\n            cleanup();\n            debug('onend');\n            reject(new Error('Proxy connection ended before receiving CONNECT response'));\n        }\n        function onerror(err) {\n            cleanup();\n            debug('onerror %o', err);\n            reject(err);\n        }\n        function ondata(b) {\n            buffers.push(b);\n            buffersLength += b.length;\n            const buffered = Buffer.concat(buffers, buffersLength);\n            const endOfHeaders = buffered.indexOf('\\r\\n\\r\\n');\n            if (endOfHeaders === -1) {\n                // keep buffering\n                debug('have not received end of HTTP headers yet...');\n                read();\n                return;\n            }\n            const headerParts = buffered\n                .slice(0, endOfHeaders)\n                .toString('ascii')\n                .split('\\r\\n');\n            const firstLine = headerParts.shift();\n            if (!firstLine) {\n                socket.destroy();\n                return reject(new Error('No header received from proxy CONNECT response'));\n            }\n            const firstLineParts = firstLine.split(' ');\n            const statusCode = +firstLineParts[1];\n            const statusText = firstLineParts.slice(2).join(' ');\n            const headers = {};\n            for (const header of headerParts) {\n                if (!header)\n                    continue;\n                const firstColon = header.indexOf(':');\n                if (firstColon === -1) {\n                    socket.destroy();\n                    return reject(new Error(`Invalid header from proxy CONNECT response: \"${header}\"`));\n                }\n                const key = header.slice(0, firstColon).toLowerCase();\n                const value = header.slice(firstColon + 1).trimStart();\n                const current = headers[key];\n                if (typeof current === 'string') {\n                    headers[key] = [current, value];\n                }\n                else if (Array.isArray(current)) {\n                    current.push(value);\n                }\n                else {\n                    headers[key] = value;\n                }\n            }\n            debug('got proxy server response: %o %o', firstLine, headers);\n            cleanup();\n            resolve({\n                connect: {\n                    statusCode,\n                    statusText,\n                    headers,\n                },\n                buffered,\n            });\n        }\n        socket.on('error', onerror);\n        socket.on('end', onend);\n        read();\n    });\n}\nexports.parseProxyResponse = parseProxyResponse;\n//# sourceMappingURL=parse-proxy-response.js.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.HttpsProxyAgent = void 0;\nconst net = __importStar(require(\"net\"));\nconst tls = __importStar(require(\"tls\"));\nconst assert_1 = __importDefault(require(\"assert\"));\nconst debug_1 = __importDefault(require(\"debug\"));\nconst agent_base_1 = require(\"agent-base\");\nconst url_1 = require(\"url\");\nconst parse_proxy_response_1 = require(\"./parse-proxy-response\");\nconst debug = (0, debug_1.default)('https-proxy-agent');\nconst setServernameFromNonIpHost = (options) => {\n    if (options.servername === undefined &&\n        options.host &&\n        !net.isIP(options.host)) {\n        return {\n            ...options,\n            servername: options.host,\n        };\n    }\n    return options;\n};\n/**\n * The `HttpsProxyAgent` implements an HTTP Agent subclass that connects to\n * the specified \"HTTP(s) proxy server\" in order to proxy HTTPS requests.\n *\n * Outgoing HTTP requests are first tunneled through the proxy server using the\n * `CONNECT` HTTP request method to establish a connection to the proxy server,\n * and then the proxy server connects to the destination target and issues the\n * HTTP request from the proxy server.\n *\n * `https:` requests have their socket connection upgraded to TLS once\n * the connection to the proxy server has been established.\n */\nclass HttpsProxyAgent extends agent_base_1.Agent {\n    constructor(proxy, opts) {\n        super(opts);\n        this.options = { path: undefined };\n        this.proxy = typeof proxy === 'string' ? new url_1.URL(proxy) : proxy;\n        this.proxyHeaders = opts?.headers ?? {};\n        debug('Creating new HttpsProxyAgent instance: %o', this.proxy.href);\n        // Trim off the brackets from IPv6 addresses\n        const host = (this.proxy.hostname || this.proxy.host).replace(/^\\[|\\]$/g, '');\n        const port = this.proxy.port\n            ? parseInt(this.proxy.port, 10)\n            : this.proxy.protocol === 'https:'\n                ? 443\n                : 80;\n        this.connectOpts = {\n            // Attempt to negotiate http/1.1 for proxy servers that support http/2\n            ALPNProtocols: ['http/1.1'],\n            ...(opts ? omit(opts, 'headers') : null),\n            host,\n            port,\n        };\n    }\n    /**\n     * Called when the node-core HTTP client library is creating a\n     * new HTTP request.\n     */\n    async connect(req, opts) {\n        const { proxy } = this;\n        if (!opts.host) {\n            throw new TypeError('No \"host\" provided');\n        }\n        // Create a socket connection to the proxy server.\n        let socket;\n        if (proxy.protocol === 'https:') {\n            debug('Creating `tls.Socket`: %o', this.connectOpts);\n            socket = tls.connect(setServernameFromNonIpHost(this.connectOpts));\n        }\n        else {\n            debug('Creating `net.Socket`: %o', this.connectOpts);\n            socket = net.connect(this.connectOpts);\n        }\n        const headers = typeof this.proxyHeaders === 'function'\n            ? this.proxyHeaders()\n            : { ...this.proxyHeaders };\n        const host = net.isIPv6(opts.host) ? `[${opts.host}]` : opts.host;\n        let payload = `CONNECT ${host}:${opts.port} HTTP/1.1\\r\\n`;\n        // Inject the `Proxy-Authorization` header if necessary.\n        if (proxy.username || proxy.password) {\n            const auth = `${decodeURIComponent(proxy.username)}:${decodeURIComponent(proxy.password)}`;\n            headers['Proxy-Authorization'] = `Basic ${Buffer.from(auth).toString('base64')}`;\n        }\n        headers.Host = `${host}:${opts.port}`;\n        if (!headers['Proxy-Connection']) {\n            headers['Proxy-Connection'] = this.keepAlive\n                ? 'Keep-Alive'\n                : 'close';\n        }\n        for (const name of Object.keys(headers)) {\n            payload += `${name}: ${headers[name]}\\r\\n`;\n        }\n        const proxyResponsePromise = (0, parse_proxy_response_1.parseProxyResponse)(socket);\n        socket.write(`${payload}\\r\\n`);\n        const { connect, buffered } = await proxyResponsePromise;\n        req.emit('proxyConnect', connect);\n        this.emit('proxyConnect', connect, req);\n        if (connect.statusCode === 200) {\n            req.once('socket', resume);\n            if (opts.secureEndpoint) {\n                // The proxy is connecting to a TLS server, so upgrade\n                // this socket connection to a TLS connection.\n                debug('Upgrading socket connection to TLS');\n                return tls.connect({\n                    ...omit(setServernameFromNonIpHost(opts), 'host', 'path', 'port'),\n                    socket,\n                });\n            }\n            return socket;\n        }\n        // Some other status code that's not 200... need to re-play the HTTP\n        // header \"data\" events onto the socket once the HTTP machinery is\n        // attached so that the node core `http` can parse and handle the\n        // error status code.\n        // Close the original socket, and a new \"fake\" socket is returned\n        // instead, so that the proxy doesn't get the HTTP request\n        // written to it (which may contain `Authorization` headers or other\n        // sensitive data).\n        //\n        // See: https://hackerone.com/reports/541502\n        socket.destroy();\n        const fakeSocket = new net.Socket({ writable: false });\n        fakeSocket.readable = true;\n        // Need to wait for the \"socket\" event to re-play the \"data\" events.\n        req.once('socket', (s) => {\n            debug('Replaying proxy buffer for failed request');\n            (0, assert_1.default)(s.listenerCount('data') > 0);\n            // Replay the \"buffered\" Buffer onto the fake `socket`, since at\n            // this point the HTTP module machinery has been hooked up for\n            // the user.\n            s.push(buffered);\n            s.push(null);\n        });\n        return fakeSocket;\n    }\n}\nHttpsProxyAgent.protocols = ['http', 'https'];\nexports.HttpsProxyAgent = HttpsProxyAgent;\nfunction resume(socket) {\n    socket.resume();\n}\nfunction omit(obj, ...keys) {\n    const ret = {};\n    let key;\n    for (key in obj) {\n        if (!keys.includes(key)) {\n            ret[key] = obj[key];\n        }\n    }\n    return ret;\n}\n//# sourceMappingURL=index.js.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.HttpProxyAgent = void 0;\nconst net = __importStar(require(\"net\"));\nconst tls = __importStar(require(\"tls\"));\nconst debug_1 = __importDefault(require(\"debug\"));\nconst events_1 = require(\"events\");\nconst agent_base_1 = require(\"agent-base\");\nconst url_1 = require(\"url\");\nconst debug = (0, debug_1.default)('http-proxy-agent');\n/**\n * The `HttpProxyAgent` implements an HTTP Agent subclass that connects\n * to the specified \"HTTP proxy server\" in order to proxy HTTP requests.\n */\nclass HttpProxyAgent extends agent_base_1.Agent {\n    constructor(proxy, opts) {\n        super(opts);\n        this.proxy = typeof proxy === 'string' ? new url_1.URL(proxy) : proxy;\n        this.proxyHeaders = opts?.headers ?? {};\n        debug('Creating new HttpProxyAgent instance: %o', this.proxy.href);\n        // Trim off the brackets from IPv6 addresses\n        const host = (this.proxy.hostname || this.proxy.host).replace(/^\\[|\\]$/g, '');\n        const port = this.proxy.port\n            ? parseInt(this.proxy.port, 10)\n            : this.proxy.protocol === 'https:'\n                ? 443\n                : 80;\n        this.connectOpts = {\n            ...(opts ? omit(opts, 'headers') : null),\n            host,\n            port,\n        };\n    }\n    addRequest(req, opts) {\n        req._header = null;\n        this.setRequestProps(req, opts);\n        // @ts-expect-error `addRequest()` isn't defined in `@types/node`\n        super.addRequest(req, opts);\n    }\n    setRequestProps(req, opts) {\n        const { proxy } = this;\n        const protocol = opts.secureEndpoint ? 'https:' : 'http:';\n        const hostname = req.getHeader('host') || 'localhost';\n        const base = `${protocol}//${hostname}`;\n        const url = new url_1.URL(req.path, base);\n        if (opts.port !== 80) {\n            url.port = String(opts.port);\n        }\n        // Change the `http.ClientRequest` instance's \"path\" field\n        // to the absolute path of the URL that will be requested.\n        req.path = String(url);\n        // Inject the `Proxy-Authorization` header if necessary.\n        const headers = typeof this.proxyHeaders === 'function'\n            ? this.proxyHeaders()\n            : { ...this.proxyHeaders };\n        if (proxy.username || proxy.password) {\n            const auth = `${decodeURIComponent(proxy.username)}:${decodeURIComponent(proxy.password)}`;\n            headers['Proxy-Authorization'] = `Basic ${Buffer.from(auth).toString('base64')}`;\n        }\n        if (!headers['Proxy-Connection']) {\n            headers['Proxy-Connection'] = this.keepAlive\n                ? 'Keep-Alive'\n                : 'close';\n        }\n        for (const name of Object.keys(headers)) {\n            const value = headers[name];\n            if (value) {\n                req.setHeader(name, value);\n            }\n        }\n    }\n    async connect(req, opts) {\n        req._header = null;\n        if (!req.path.includes('://')) {\n            this.setRequestProps(req, opts);\n        }\n        // At this point, the http ClientRequest's internal `_header` field\n        // might have already been set. If this is the case then we'll need\n        // to re-generate the string since we just changed the `req.path`.\n        let first;\n        let endOfHeaders;\n        debug('Regenerating stored HTTP header string for request');\n        req._implicitHeader();\n        if (req.outputData && req.outputData.length > 0) {\n            debug('Patching connection write() output buffer with updated header');\n            first = req.outputData[0].data;\n            endOfHeaders = first.indexOf('\\r\\n\\r\\n') + 4;\n            req.outputData[0].data =\n                req._header + first.substring(endOfHeaders);\n            debug('Output buffer: %o', req.outputData[0].data);\n        }\n        // Create a socket connection to the proxy server.\n        let socket;\n        if (this.proxy.protocol === 'https:') {\n            debug('Creating `tls.Socket`: %o', this.connectOpts);\n            socket = tls.connect(this.connectOpts);\n        }\n        else {\n            debug('Creating `net.Socket`: %o', this.connectOpts);\n            socket = net.connect(this.connectOpts);\n        }\n        // Wait for the socket's `connect` event, so that this `callback()`\n        // function throws instead of the `http` request machinery. This is\n        // important for i.e. `PacProxyAgent` which determines a failed proxy\n        // connection via the `callback()` function throwing.\n        await (0, events_1.once)(socket, 'connect');\n        return socket;\n    }\n}\nHttpProxyAgent.protocols = ['http', 'https'];\nexports.HttpProxyAgent = HttpProxyAgent;\nfunction omit(obj, ...keys) {\n    const ret = {};\n    let key;\n    for (key in obj) {\n        if (!keys.includes(key)) {\n            ret[key] = obj[key];\n        }\n    }\n    return ret;\n}\n//# sourceMappingURL=index.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nimport { HttpsProxyAgent } from \"https-proxy-agent\";\nimport { HttpProxyAgent } from \"http-proxy-agent\";\nimport { logger } from \"../log.js\";\nconst HTTPS_PROXY = \"HTTPS_PROXY\";\nconst HTTP_PROXY = \"HTTP_PROXY\";\nconst ALL_PROXY = \"ALL_PROXY\";\nconst NO_PROXY = \"NO_PROXY\";\n/**\n * The programmatic identifier of the proxyPolicy.\n */\nexport const proxyPolicyName = \"proxyPolicy\";\n/**\n * Stores the patterns specified in NO_PROXY environment variable.\n * @internal\n */\nexport const globalNoProxyList = [];\nlet noProxyListLoaded = false;\n/** A cache of whether a host should bypass the proxy. */\nconst globalBypassedMap = new Map();\nfunction getEnvironmentValue(name) {\n    if (process.env[name]) {\n        return process.env[name];\n    }\n    else if (process.env[name.toLowerCase()]) {\n        return process.env[name.toLowerCase()];\n    }\n    return undefined;\n}\nfunction loadEnvironmentProxyValue() {\n    if (!process) {\n        return undefined;\n    }\n    const httpsProxy = getEnvironmentValue(HTTPS_PROXY);\n    const allProxy = getEnvironmentValue(ALL_PROXY);\n    const httpProxy = getEnvironmentValue(HTTP_PROXY);\n    return httpsProxy || allProxy || httpProxy;\n}\n/**\n * Check whether the host of a given `uri` matches any pattern in the no proxy list.\n * If there's a match, any request sent to the same host shouldn't have the proxy settings set.\n * This implementation is a port of https://github.com/Azure/azure-sdk-for-net/blob/8cca811371159e527159c7eb65602477898683e2/sdk/core/Azure.Core/src/Pipeline/Internal/HttpEnvironmentProxy.cs#L210\n */\nfunction isBypassed(uri, noProxyList, bypassedMap) {\n    if (noProxyList.length === 0) {\n        return false;\n    }\n    const host = new URL(uri).hostname;\n    if (bypassedMap === null || bypassedMap === void 0 ? void 0 : bypassedMap.has(host)) {\n        return bypassedMap.get(host);\n    }\n    let isBypassedFlag = false;\n    for (const pattern of noProxyList) {\n        if (pattern[0] === \".\") {\n            // This should match either domain it self or any subdomain or host\n            // .foo.com will match foo.com it self or *.foo.com\n            if (host.endsWith(pattern)) {\n                isBypassedFlag = true;\n            }\n            else {\n                if (host.length === pattern.length - 1 && host === pattern.slice(1)) {\n                    isBypassedFlag = true;\n                }\n            }\n        }\n        else {\n            if (host === pattern) {\n                isBypassedFlag = true;\n            }\n        }\n    }\n    bypassedMap === null || bypassedMap === void 0 ? void 0 : bypassedMap.set(host, isBypassedFlag);\n    return isBypassedFlag;\n}\nexport function loadNoProxy() {\n    const noProxy = getEnvironmentValue(NO_PROXY);\n    noProxyListLoaded = true;\n    if (noProxy) {\n        return noProxy\n            .split(\",\")\n            .map((item) => item.trim())\n            .filter((item) => item.length);\n    }\n    return [];\n}\n/**\n * This method converts a proxy url into `ProxySettings` for use with ProxyPolicy.\n * If no argument is given, it attempts to parse a proxy URL from the environment\n * variables `HTTPS_PROXY` or `HTTP_PROXY`.\n * @param proxyUrl - The url of the proxy to use. May contain authentication information.\n * @deprecated - Internally this method is no longer necessary when setting proxy information.\n */\nexport function getDefaultProxySettings(proxyUrl) {\n    if (!proxyUrl) {\n        proxyUrl = loadEnvironmentProxyValue();\n        if (!proxyUrl) {\n            return undefined;\n        }\n    }\n    const parsedUrl = new URL(proxyUrl);\n    const schema = parsedUrl.protocol ? parsedUrl.protocol + \"//\" : \"\";\n    return {\n        host: schema + parsedUrl.hostname,\n        port: Number.parseInt(parsedUrl.port || \"80\"),\n        username: parsedUrl.username,\n        password: parsedUrl.password,\n    };\n}\n/**\n * This method attempts to parse a proxy URL from the environment\n * variables `HTTPS_PROXY` or `HTTP_PROXY`.\n */\nfunction getDefaultProxySettingsInternal() {\n    const envProxy = loadEnvironmentProxyValue();\n    return envProxy ? new URL(envProxy) : undefined;\n}\nfunction getUrlFromProxySettings(settings) {\n    let parsedProxyUrl;\n    try {\n        parsedProxyUrl = new URL(settings.host);\n    }\n    catch (_a) {\n        throw new Error(`Expecting a valid host string in proxy settings, but found \"${settings.host}\".`);\n    }\n    parsedProxyUrl.port = String(settings.port);\n    if (settings.username) {\n        parsedProxyUrl.username = settings.username;\n    }\n    if (settings.password) {\n        parsedProxyUrl.password = settings.password;\n    }\n    return parsedProxyUrl;\n}\nfunction setProxyAgentOnRequest(request, cachedAgents, proxyUrl) {\n    // Custom Agent should take precedence so if one is present\n    // we should skip to avoid overwriting it.\n    if (request.agent) {\n        return;\n    }\n    const url = new URL(request.url);\n    const isInsecure = url.protocol !== \"https:\";\n    if (request.tlsSettings) {\n        logger.warning(\"TLS settings are not supported in combination with custom Proxy, certificates provided to the client will be ignored.\");\n    }\n    const headers = request.headers.toJSON();\n    if (isInsecure) {\n        if (!cachedAgents.httpProxyAgent) {\n            cachedAgents.httpProxyAgent = new HttpProxyAgent(proxyUrl, { headers });\n        }\n        request.agent = cachedAgents.httpProxyAgent;\n    }\n    else {\n        if (!cachedAgents.httpsProxyAgent) {\n            cachedAgents.httpsProxyAgent = new HttpsProxyAgent(proxyUrl, { headers });\n        }\n        request.agent = cachedAgents.httpsProxyAgent;\n    }\n}\n/**\n * A policy that allows one to apply proxy settings to all requests.\n * If not passed static settings, they will be retrieved from the HTTPS_PROXY\n * or HTTP_PROXY environment variables.\n * @param proxySettings - ProxySettings to use on each request.\n * @param options - additional settings, for example, custom NO_PROXY patterns\n */\nexport function proxyPolicy(proxySettings, options) {\n    if (!noProxyListLoaded) {\n        globalNoProxyList.push(...loadNoProxy());\n    }\n    const defaultProxy = proxySettings\n        ? getUrlFromProxySettings(proxySettings)\n        : getDefaultProxySettingsInternal();\n    const cachedAgents = {};\n    return {\n        name: proxyPolicyName,\n        async sendRequest(request, next) {\n            var _a;\n            if (!request.proxySettings &&\n                defaultProxy &&\n                !isBypassed(request.url, (_a = options === null || options === void 0 ? void 0 : options.customNoProxyList) !== null && _a !== void 0 ? _a : globalNoProxyList, (options === null || options === void 0 ? void 0 : options.customNoProxyList) ? undefined : globalBypassedMap)) {\n                setProxyAgentOnRequest(request, cachedAgents, defaultProxy);\n            }\n            else if (request.proxySettings) {\n                setProxyAgentOnRequest(request, cachedAgents, getUrlFromProxySettings(request.proxySettings));\n            }\n            return next(request);\n        },\n    };\n}\n//# sourceMappingURL=proxyPolicy.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n/**\n * Name of the Agent Policy\n */\nexport const agentPolicyName = \"agentPolicy\";\n/**\n * Gets a pipeline policy that sets http.agent\n */\nexport function agentPolicy(agent) {\n    return {\n        name: agentPolicyName,\n        sendRequest: async (req, next) => {\n            // Users may define an agent on the request, honor it over the client level one\n            if (!req.agent) {\n                req.agent = agent;\n            }\n            return next(req);\n        },\n    };\n}\n//# sourceMappingURL=agentPolicy.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n/**\n * Name of the TLS Policy\n */\nexport const tlsPolicyName = \"tlsPolicy\";\n/**\n * Gets a pipeline policy that adds the client certificate to the HttpClient agent for authentication.\n */\nexport function tlsPolicy(tlsSettings) {\n    return {\n        name: tlsPolicyName,\n        sendRequest: async (req, next) => {\n            // Users may define a request tlsSettings, honor those over the client level one\n            if (!req.tlsSettings) {\n                req.tlsSettings = tlsSettings;\n            }\n            return next(req);\n        },\n    };\n}\n//# sourceMappingURL=tlsPolicy.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nexport function isNodeReadableStream(x) {\n    return Boolean(x && typeof x[\"pipe\"] === \"function\");\n}\nexport function isWebReadableStream(x) {\n    return Boolean(x &&\n        typeof x.getReader === \"function\" &&\n        typeof x.tee === \"function\");\n}\nexport function isBinaryBody(body) {\n    return (body !== undefined &&\n        (body instanceof Uint8Array ||\n            isReadableStream(body) ||\n            typeof body === \"function\" ||\n            body instanceof Blob));\n}\nexport function isReadableStream(x) {\n    return isNodeReadableStream(x) || isWebReadableStream(x);\n}\nexport function isBlob(x) {\n    return typeof x.stream === \"function\";\n}\n//# sourceMappingURL=typeGuards.js.map","/******************************************************************************\nCopyright (c) Microsoft Corporation.\n\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\nPERFORMANCE OF THIS SOFTWARE.\n***************************************************************************** */\n/* global Reflect, Promise, SuppressedError, Symbol, Iterator */\n\nvar extendStatics = function(d, b) {\n  extendStatics = Object.setPrototypeOf ||\n      ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n      function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n  return extendStatics(d, b);\n};\n\nexport function __extends(d, b) {\n  if (typeof b !== \"function\" && b !== null)\n      throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n  extendStatics(d, b);\n  function __() { this.constructor = d; }\n  d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n}\n\nexport var __assign = function() {\n  __assign = Object.assign || function __assign(t) {\n      for (var s, i = 1, n = arguments.length; i < n; i++) {\n          s = arguments[i];\n          for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n      return t;\n  }\n  return __assign.apply(this, arguments);\n}\n\nexport function __rest(s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n      t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n      for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n          if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n              t[p[i]] = s[p[i]];\n      }\n  return t;\n}\n\nexport function __decorate(decorators, target, key, desc) {\n  var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n  else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n}\n\nexport function __param(paramIndex, decorator) {\n  return function (target, key) { decorator(target, key, paramIndex); }\n}\n\nexport function __esDecorate(ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {\n  function accept(f) { if (f !== void 0 && typeof f !== \"function\") throw new TypeError(\"Function expected\"); return f; }\n  var kind = contextIn.kind, key = kind === \"getter\" ? \"get\" : kind === \"setter\" ? \"set\" : \"value\";\n  var target = !descriptorIn && ctor ? contextIn[\"static\"] ? ctor : ctor.prototype : null;\n  var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});\n  var _, done = false;\n  for (var i = decorators.length - 1; i >= 0; i--) {\n      var context = {};\n      for (var p in contextIn) context[p] = p === \"access\" ? {} : contextIn[p];\n      for (var p in contextIn.access) context.access[p] = contextIn.access[p];\n      context.addInitializer = function (f) { if (done) throw new TypeError(\"Cannot add initializers after decoration has completed\"); extraInitializers.push(accept(f || null)); };\n      var result = (0, decorators[i])(kind === \"accessor\" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);\n      if (kind === \"accessor\") {\n          if (result === void 0) continue;\n          if (result === null || typeof result !== \"object\") throw new TypeError(\"Object expected\");\n          if (_ = accept(result.get)) descriptor.get = _;\n          if (_ = accept(result.set)) descriptor.set = _;\n          if (_ = accept(result.init)) initializers.unshift(_);\n      }\n      else if (_ = accept(result)) {\n          if (kind === \"field\") initializers.unshift(_);\n          else descriptor[key] = _;\n      }\n  }\n  if (target) Object.defineProperty(target, contextIn.name, descriptor);\n  done = true;\n};\n\nexport function __runInitializers(thisArg, initializers, value) {\n  var useValue = arguments.length > 2;\n  for (var i = 0; i < initializers.length; i++) {\n      value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);\n  }\n  return useValue ? value : void 0;\n};\n\nexport function __propKey(x) {\n  return typeof x === \"symbol\" ? x : \"\".concat(x);\n};\n\nexport function __setFunctionName(f, name, prefix) {\n  if (typeof name === \"symbol\") name = name.description ? \"[\".concat(name.description, \"]\") : \"\";\n  return Object.defineProperty(f, \"name\", { configurable: true, value: prefix ? \"\".concat(prefix, \" \", name) : name });\n};\n\nexport function __metadata(metadataKey, metadataValue) {\n  if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\n}\n\nexport function __awaiter(thisArg, _arguments, P, generator) {\n  function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n  return new (P || (P = Promise))(function (resolve, reject) {\n      function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n      function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n      function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n      step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n}\n\nexport function __generator(thisArg, body) {\n  var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g = Object.create((typeof Iterator === \"function\" ? Iterator : Object).prototype);\n  return g.next = verb(0), g[\"throw\"] = verb(1), g[\"return\"] = verb(2), typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n  function verb(n) { return function (v) { return step([n, v]); }; }\n  function step(op) {\n      if (f) throw new TypeError(\"Generator is already executing.\");\n      while (g && (g = 0, op[0] && (_ = 0)), _) try {\n          if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n          if (y = 0, t) op = [op[0] & 2, t.value];\n          switch (op[0]) {\n              case 0: case 1: t = op; break;\n              case 4: _.label++; return { value: op[1], done: false };\n              case 5: _.label++; y = op[1]; op = [0]; continue;\n              case 7: op = _.ops.pop(); _.trys.pop(); continue;\n              default:\n                  if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                  if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                  if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                  if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                  if (t[2]) _.ops.pop();\n                  _.trys.pop(); continue;\n          }\n          op = body.call(thisArg, _);\n      } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n      if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n  }\n}\n\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n  }\n  Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nexport function __exportStar(m, o) {\n  for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\n}\n\nexport function __values(o) {\n  var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n  if (m) return m.call(o);\n  if (o && typeof o.length === \"number\") return {\n      next: function () {\n          if (o && i >= o.length) o = void 0;\n          return { value: o && o[i++], done: !o };\n      }\n  };\n  throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n}\n\nexport function __read(o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o), r, ar = [], e;\n  try {\n      while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  }\n  catch (error) { e = { error: error }; }\n  finally {\n      try {\n          if (r && !r.done && (m = i[\"return\"])) m.call(i);\n      }\n      finally { if (e) throw e.error; }\n  }\n  return ar;\n}\n\n/** @deprecated */\nexport function __spread() {\n  for (var ar = [], i = 0; i < arguments.length; i++)\n      ar = ar.concat(__read(arguments[i]));\n  return ar;\n}\n\n/** @deprecated */\nexport function __spreadArrays() {\n  for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n  for (var r = Array(s), k = 0, i = 0; i < il; i++)\n      for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\n          r[k] = a[j];\n  return r;\n}\n\nexport function __spreadArray(to, from, pack) {\n  if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n      if (ar || !(i in from)) {\n          if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n          ar[i] = from[i];\n      }\n  }\n  return to.concat(ar || Array.prototype.slice.call(from));\n}\n\nexport function __await(v) {\n  return this instanceof __await ? (this.v = v, this) : new __await(v);\n}\n\nexport function __asyncGenerator(thisArg, _arguments, generator) {\n  if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n  var g = generator.apply(thisArg, _arguments || []), i, q = [];\n  return i = Object.create((typeof AsyncIterator === \"function\" ? AsyncIterator : Object).prototype), verb(\"next\"), verb(\"throw\"), verb(\"return\", awaitReturn), i[Symbol.asyncIterator] = function () { return this; }, i;\n  function awaitReturn(f) { return function (v) { return Promise.resolve(v).then(f, reject); }; }\n  function verb(n, f) { if (g[n]) { i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; if (f) i[n] = f(i[n]); } }\n  function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\n  function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\n  function fulfill(value) { resume(\"next\", value); }\n  function reject(value) { resume(\"throw\", value); }\n  function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\n}\n\nexport function __asyncDelegator(o) {\n  var i, p;\n  return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\n  function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: false } : f ? f(v) : v; } : f; }\n}\n\nexport function __asyncValues(o) {\n  if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n  var m = o[Symbol.asyncIterator], i;\n  return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\n  function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\n  function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\n}\n\nexport function __makeTemplateObject(cooked, raw) {\n  if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\n  return cooked;\n};\n\nvar __setModuleDefault = Object.create ? (function(o, v) {\n  Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n  o[\"default\"] = v;\n};\n\nvar ownKeys = function(o) {\n  ownKeys = Object.getOwnPropertyNames || function (o) {\n    var ar = [];\n    for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;\n    return ar;\n  };\n  return ownKeys(o);\n};\n\nexport function __importStar(mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== \"default\") __createBinding(result, mod, k[i]);\n  __setModuleDefault(result, mod);\n  return result;\n}\n\nexport function __importDefault(mod) {\n  return (mod && mod.__esModule) ? mod : { default: mod };\n}\n\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n  return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n}\n\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\n  if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n  return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n}\n\nexport function __classPrivateFieldIn(state, receiver) {\n  if (receiver === null || (typeof receiver !== \"object\" && typeof receiver !== \"function\")) throw new TypeError(\"Cannot use 'in' operator on non-object\");\n  return typeof state === \"function\" ? receiver === state : state.has(receiver);\n}\n\nexport function __addDisposableResource(env, value, async) {\n  if (value !== null && value !== void 0) {\n    if (typeof value !== \"object\" && typeof value !== \"function\") throw new TypeError(\"Object expected.\");\n    var dispose, inner;\n    if (async) {\n      if (!Symbol.asyncDispose) throw new TypeError(\"Symbol.asyncDispose is not defined.\");\n      dispose = value[Symbol.asyncDispose];\n    }\n    if (dispose === void 0) {\n      if (!Symbol.dispose) throw new TypeError(\"Symbol.dispose is not defined.\");\n      dispose = value[Symbol.dispose];\n      if (async) inner = dispose;\n    }\n    if (typeof dispose !== \"function\") throw new TypeError(\"Object not disposable.\");\n    if (inner) dispose = function() { try { inner.call(this); } catch (e) { return Promise.reject(e); } };\n    env.stack.push({ value: value, dispose: dispose, async: async });\n  }\n  else if (async) {\n    env.stack.push({ async: true });\n  }\n  return value;\n}\n\nvar _SuppressedError = typeof SuppressedError === \"function\" ? SuppressedError : function (error, suppressed, message) {\n  var e = new Error(message);\n  return e.name = \"SuppressedError\", e.error = error, e.suppressed = suppressed, e;\n};\n\nexport function __disposeResources(env) {\n  function fail(e) {\n    env.error = env.hasError ? new _SuppressedError(e, env.error, \"An error was suppressed during disposal.\") : e;\n    env.hasError = true;\n  }\n  var r, s = 0;\n  function next() {\n    while (r = env.stack.pop()) {\n      try {\n        if (!r.async && s === 1) return s = 0, env.stack.push(r), Promise.resolve().then(next);\n        if (r.dispose) {\n          var result = r.dispose.call(r.value);\n          if (r.async) return s |= 2, Promise.resolve(result).then(next, function(e) { fail(e); return next(); });\n        }\n        else s |= 1;\n      }\n      catch (e) {\n        fail(e);\n      }\n    }\n    if (s === 1) return env.hasError ? Promise.reject(env.error) : Promise.resolve();\n    if (env.hasError) throw env.error;\n  }\n  return next();\n}\n\nexport function __rewriteRelativeImportExtension(path, preserveJsx) {\n  if (typeof path === \"string\" && /^\\.\\.?\\//.test(path)) {\n      return path.replace(/\\.(tsx)$|((?:\\.d)?)((?:\\.[^./]+?)?)\\.([cm]?)ts$/i, function (m, tsx, d, ext, cm) {\n          return tsx ? preserveJsx ? \".jsx\" : \".js\" : d && (!ext || !cm) ? m : (d + ext + \".\" + cm.toLowerCase() + \"js\");\n      });\n  }\n  return path;\n}\n\nexport default {\n  __extends,\n  __assign,\n  __rest,\n  __decorate,\n  __param,\n  __esDecorate,\n  __runInitializers,\n  __propKey,\n  __setFunctionName,\n  __metadata,\n  __awaiter,\n  __generator,\n  __createBinding,\n  __exportStar,\n  __values,\n  __read,\n  __spread,\n  __spreadArrays,\n  __spreadArray,\n  __await,\n  __asyncGenerator,\n  __asyncDelegator,\n  __asyncValues,\n  __makeTemplateObject,\n  __importStar,\n  __importDefault,\n  __classPrivateFieldGet,\n  __classPrivateFieldSet,\n  __classPrivateFieldIn,\n  __addDisposableResource,\n  __disposeResources,\n  __rewriteRelativeImportExtension,\n};\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nimport { __asyncGenerator, __asyncValues, __await } from \"tslib\";\nimport { Readable } from \"stream\";\nimport { isBlob } from \"./typeGuards.js\";\nfunction streamAsyncIterator() {\n    return __asyncGenerator(this, arguments, function* streamAsyncIterator_1() {\n        const reader = this.getReader();\n        try {\n            while (true) {\n                const { done, value } = yield __await(reader.read());\n                if (done) {\n                    return yield __await(void 0);\n                }\n                yield yield __await(value);\n            }\n        }\n        finally {\n            reader.releaseLock();\n        }\n    });\n}\nfunction makeAsyncIterable(webStream) {\n    if (!webStream[Symbol.asyncIterator]) {\n        webStream[Symbol.asyncIterator] = streamAsyncIterator.bind(webStream);\n    }\n    if (!webStream.values) {\n        webStream.values = streamAsyncIterator.bind(webStream);\n    }\n}\nfunction ensureNodeStream(stream) {\n    if (stream instanceof ReadableStream) {\n        makeAsyncIterable(stream);\n        return Readable.fromWeb(stream);\n    }\n    else {\n        return stream;\n    }\n}\nfunction toStream(source) {\n    if (source instanceof Uint8Array) {\n        return Readable.from(Buffer.from(source));\n    }\n    else if (isBlob(source)) {\n        return ensureNodeStream(source.stream());\n    }\n    else {\n        return ensureNodeStream(source);\n    }\n}\n/**\n * Utility function that concatenates a set of binary inputs into one combined output.\n *\n * @param sources - array of sources for the concatenation\n * @returns - in Node, a (() =\\> NodeJS.ReadableStream) which, when read, produces a concatenation of all the inputs.\n *           In browser, returns a `Blob` representing all the concatenated inputs.\n *\n * @internal\n */\nexport async function concat(sources) {\n    return function () {\n        const streams = sources.map((x) => (typeof x === \"function\" ? x() : x)).map(toStream);\n        return Readable.from((function () {\n            return __asyncGenerator(this, arguments, function* () {\n                var _a, e_1, _b, _c;\n                for (const stream of streams) {\n                    try {\n                        for (var _d = true, stream_1 = (e_1 = void 0, __asyncValues(stream)), stream_1_1; stream_1_1 = yield __await(stream_1.next()), _a = stream_1_1.done, !_a; _d = true) {\n                            _c = stream_1_1.value;\n                            _d = false;\n                            const chunk = _c;\n                            yield yield __await(chunk);\n                        }\n                    }\n                    catch (e_1_1) { e_1 = { error: e_1_1 }; }\n                    finally {\n                        try {\n                            if (!_d && !_a && (_b = stream_1.return)) yield __await(_b.call(stream_1));\n                        }\n                        finally { if (e_1) throw e_1.error; }\n                    }\n                }\n            });\n        })());\n    };\n}\n//# sourceMappingURL=concat.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nimport { stringToUint8Array } from \"../util/bytesEncoding.js\";\nimport { isBlob } from \"../util/typeGuards.js\";\nimport { randomUUID } from \"../util/uuidUtils.js\";\nimport { concat } from \"../util/concat.js\";\nfunction generateBoundary() {\n    return `----AzSDKFormBoundary${randomUUID()}`;\n}\nfunction encodeHeaders(headers) {\n    let result = \"\";\n    for (const [key, value] of headers) {\n        result += `${key}: ${value}\\r\\n`;\n    }\n    return result;\n}\nfunction getLength(source) {\n    if (source instanceof Uint8Array) {\n        return source.byteLength;\n    }\n    else if (isBlob(source)) {\n        // if was created using createFile then -1 means we have an unknown size\n        return source.size === -1 ? undefined : source.size;\n    }\n    else {\n        return undefined;\n    }\n}\nfunction getTotalLength(sources) {\n    let total = 0;\n    for (const source of sources) {\n        const partLength = getLength(source);\n        if (partLength === undefined) {\n            return undefined;\n        }\n        else {\n            total += partLength;\n        }\n    }\n    return total;\n}\nasync function buildRequestBody(request, parts, boundary) {\n    const sources = [\n        stringToUint8Array(`--${boundary}`, \"utf-8\"),\n        ...parts.flatMap((part) => [\n            stringToUint8Array(\"\\r\\n\", \"utf-8\"),\n            stringToUint8Array(encodeHeaders(part.headers), \"utf-8\"),\n            stringToUint8Array(\"\\r\\n\", \"utf-8\"),\n            part.body,\n            stringToUint8Array(`\\r\\n--${boundary}`, \"utf-8\"),\n        ]),\n        stringToUint8Array(\"--\\r\\n\\r\\n\", \"utf-8\"),\n    ];\n    const contentLength = getTotalLength(sources);\n    if (contentLength) {\n        request.headers.set(\"Content-Length\", contentLength);\n    }\n    request.body = await concat(sources);\n}\n/**\n * Name of multipart policy\n */\nexport const multipartPolicyName = \"multipartPolicy\";\nconst maxBoundaryLength = 70;\nconst validBoundaryCharacters = new Set(`abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789'()+,-./:=?`);\nfunction assertValidBoundary(boundary) {\n    if (boundary.length > maxBoundaryLength) {\n        throw new Error(`Multipart boundary \"${boundary}\" exceeds maximum length of 70 characters`);\n    }\n    if (Array.from(boundary).some((x) => !validBoundaryCharacters.has(x))) {\n        throw new Error(`Multipart boundary \"${boundary}\" contains invalid characters`);\n    }\n}\n/**\n * Pipeline policy for multipart requests\n */\nexport function multipartPolicy() {\n    return {\n        name: multipartPolicyName,\n        async sendRequest(request, next) {\n            var _a;\n            if (!request.multipartBody) {\n                return next(request);\n            }\n            if (request.body) {\n                throw new Error(\"multipartBody and regular body cannot be set at the same time\");\n            }\n            let boundary = request.multipartBody.boundary;\n            const contentTypeHeader = (_a = request.headers.get(\"Content-Type\")) !== null && _a !== void 0 ? _a : \"multipart/mixed\";\n            const parsedHeader = contentTypeHeader.match(/^(multipart\\/[^ ;]+)(?:; *boundary=(.+))?$/);\n            if (!parsedHeader) {\n                throw new Error(`Got multipart request body, but content-type header was not multipart: ${contentTypeHeader}`);\n            }\n            const [, contentType, parsedBoundary] = parsedHeader;\n            if (parsedBoundary && boundary && parsedBoundary !== boundary) {\n                throw new Error(`Multipart boundary was specified as ${parsedBoundary} in the header, but got ${boundary} in the request body`);\n            }\n            boundary !== null && boundary !== void 0 ? boundary : (boundary = parsedBoundary);\n            if (boundary) {\n                assertValidBoundary(boundary);\n            }\n            else {\n                boundary = generateBoundary();\n            }\n            request.headers.set(\"Content-Type\", `${contentType}; boundary=${boundary}`);\n            await buildRequestBody(request, request.multipartBody.parts, boundary);\n            request.multipartBody = undefined;\n            return next(request);\n        },\n    };\n}\n//# sourceMappingURL=multipartPolicy.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nimport { logPolicy } from \"./policies/logPolicy.js\";\nimport { createEmptyPipeline } from \"./pipeline.js\";\nimport { redirectPolicy } from \"./policies/redirectPolicy.js\";\nimport { userAgentPolicy } from \"./policies/userAgentPolicy.js\";\nimport { decompressResponsePolicy } from \"./policies/decompressResponsePolicy.js\";\nimport { defaultRetryPolicy } from \"./policies/defaultRetryPolicy.js\";\nimport { formDataPolicy } from \"./policies/formDataPolicy.js\";\nimport { isNodeLike } from \"./util/checkEnvironment.js\";\nimport { proxyPolicy } from \"./policies/proxyPolicy.js\";\nimport { agentPolicy } from \"./policies/agentPolicy.js\";\nimport { tlsPolicy } from \"./policies/tlsPolicy.js\";\nimport { multipartPolicy, multipartPolicyName } from \"./policies/multipartPolicy.js\";\n/**\n * Create a new pipeline with a default set of customizable policies.\n * @param options - Options to configure a custom pipeline.\n */\nexport function createPipelineFromOptions(options) {\n    const pipeline = createEmptyPipeline();\n    if (isNodeLike) {\n        if (options.agent) {\n            pipeline.addPolicy(agentPolicy(options.agent));\n        }\n        if (options.tlsOptions) {\n            pipeline.addPolicy(tlsPolicy(options.tlsOptions));\n        }\n        pipeline.addPolicy(proxyPolicy(options.proxyOptions));\n        pipeline.addPolicy(decompressResponsePolicy());\n    }\n    pipeline.addPolicy(formDataPolicy(), { beforePolicies: [multipartPolicyName] });\n    pipeline.addPolicy(userAgentPolicy(options.userAgentOptions));\n    // The multipart policy is added after policies with no phase, so that\n    // policies can be added between it and formDataPolicy to modify\n    // properties (e.g., making the boundary constant in recorded tests).\n    pipeline.addPolicy(multipartPolicy(), { afterPhase: \"Deserialize\" });\n    pipeline.addPolicy(defaultRetryPolicy(options.retryOptions), { phase: \"Retry\" });\n    if (isNodeLike) {\n        // Both XHR and Fetch expect to handle redirects automatically,\n        // so only include this policy when we're in Node.\n        pipeline.addPolicy(redirectPolicy(options.redirectOptions), { afterPhase: \"Retry\" });\n    }\n    pipeline.addPolicy(logPolicy(options.loggingOptions), { afterPhase: \"Sign\" });\n    return pipeline;\n}\n//# sourceMappingURL=createPipelineFromOptions.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nimport { logger } from \"../../log.js\";\n// Ensure the warining is only emitted once\nlet insecureConnectionWarningEmmitted = false;\n/**\n * Checks if the request is allowed to be sent over an insecure connection.\n *\n * A request is allowed to be sent over an insecure connection when:\n * - The `allowInsecureConnection` option is set to `true`.\n * - The request has the `allowInsecureConnection` property set to `true`.\n * - The request is being sent to `localhost` or `127.0.0.1`\n */\nfunction allowInsecureConnection(request, options) {\n    if (options.allowInsecureConnection && request.allowInsecureConnection) {\n        const url = new URL(request.url);\n        if (url.hostname === \"localhost\" || url.hostname === \"127.0.0.1\") {\n            return true;\n        }\n    }\n    return false;\n}\n/**\n * Logs a warning about sending a token over an insecure connection.\n *\n * This function will emit a node warning once, but log the warning every time.\n */\nfunction emitInsecureConnectionWarning() {\n    const warning = \"Sending token over insecure transport. Assume any token issued is compromised.\";\n    logger.warning(warning);\n    if (typeof (process === null || process === void 0 ? void 0 : process.emitWarning) === \"function\" && !insecureConnectionWarningEmmitted) {\n        insecureConnectionWarningEmmitted = true;\n        process.emitWarning(warning);\n    }\n}\n/**\n * Ensures that authentication is only allowed over HTTPS unless explicitly allowed.\n * Throws an error if the connection is not secure and not explicitly allowed.\n */\nexport function ensureSecureConnection(request, options) {\n    if (!request.url.toLowerCase().startsWith(\"https://\")) {\n        if (allowInsecureConnection(request, options)) {\n            emitInsecureConnectionWarning();\n        }\n        else {\n            throw new Error(\"Authentication is not permitted for non-TLS protected (non-https) URLs when allowInsecureConnection is false.\");\n        }\n    }\n}\n//# sourceMappingURL=checkInsecureConnection.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nimport { createDefaultHttpClient } from \"../defaultHttpClient.js\";\nimport { createPipelineFromOptions } from \"../createPipelineFromOptions.js\";\nimport { apiVersionPolicy } from \"./apiVersionPolicy.js\";\nimport { isApiKeyCredential, isBasicCredential, isBearerTokenCredential, isOAuth2TokenCredential, } from \"../auth/credentials.js\";\nimport { apiKeyAuthenticationPolicy } from \"../policies/auth/apiKeyAuthenticationPolicy.js\";\nimport { basicAuthenticationPolicy } from \"../policies/auth/basicAuthenticationPolicy.js\";\nimport { bearerAuthenticationPolicy } from \"../policies/auth/bearerAuthenticationPolicy.js\";\nimport { oauth2AuthenticationPolicy } from \"../policies/auth/oauth2AuthenticationPolicy.js\";\nlet cachedHttpClient;\n/**\n * Creates a default rest pipeline to re-use accross Rest Level Clients\n */\nexport function createDefaultPipeline(options = {}) {\n    const pipeline = createPipelineFromOptions(options);\n    pipeline.addPolicy(apiVersionPolicy(options));\n    const { credential, authSchemes, allowInsecureConnection } = options;\n    if (credential) {\n        if (isApiKeyCredential(credential)) {\n            pipeline.addPolicy(apiKeyAuthenticationPolicy({ authSchemes, credential, allowInsecureConnection }));\n        }\n        else if (isBasicCredential(credential)) {\n            pipeline.addPolicy(basicAuthenticationPolicy({ authSchemes, credential, allowInsecureConnection }));\n        }\n        else if (isBearerTokenCredential(credential)) {\n            pipeline.addPolicy(bearerAuthenticationPolicy({ authSchemes, credential, allowInsecureConnection }));\n        }\n        else if (isOAuth2TokenCredential(credential)) {\n            pipeline.addPolicy(oauth2AuthenticationPolicy({ authSchemes, credential, allowInsecureConnection }));\n        }\n    }\n    return pipeline;\n}\nexport function getCachedDefaultHttpsClient() {\n    if (!cachedHttpClient) {\n        cachedHttpClient = createDefaultHttpClient();\n    }\n    return cachedHttpClient;\n}\n//# sourceMappingURL=clientHelpers.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nexport const apiVersionPolicyName = \"ApiVersionPolicy\";\n/**\n * Creates a policy that sets the apiVersion as a query parameter on every request\n * @param options - Client options\n * @returns Pipeline policy that sets the apiVersion as a query parameter on every request\n */\nexport function apiVersionPolicy(options) {\n    return {\n        name: apiVersionPolicyName,\n        sendRequest: (req, next) => {\n            // Use the apiVesion defined in request url directly\n            // Append one if there is no apiVesion and we have one at client options\n            const url = new URL(req.url);\n            if (!url.searchParams.get(\"api-version\") && options.apiVersion) {\n                req.url = `${req.url}${Array.from(url.searchParams.keys()).length > 0 ? \"&\" : \"?\"}api-version=${options.apiVersion}`;\n            }\n            return next(req);\n        },\n    };\n}\n//# sourceMappingURL=apiVersionPolicy.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n/**\n * Type guard to check if a credential is an OAuth2 token credential.\n */\nexport function isOAuth2TokenCredential(credential) {\n    return \"getOAuth2Token\" in credential;\n}\n/**\n * Type guard to check if a credential is a Bearer token credential.\n */\nexport function isBearerTokenCredential(credential) {\n    return \"getBearerToken\" in credential;\n}\n/**\n * Type guard to check if a credential is a Basic auth credential.\n */\nexport function isBasicCredential(credential) {\n    return \"username\" in credential && \"password\" in credential;\n}\n/**\n * Type guard to check if a credential is an API key credential.\n */\nexport function isApiKeyCredential(credential) {\n    return \"key\" in credential;\n}\n//# sourceMappingURL=credentials.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nimport { ensureSecureConnection } from \"./checkInsecureConnection.js\";\n/**\n * Name of the OAuth2 Authentication Policy\n */\nexport const oauth2AuthenticationPolicyName = \"oauth2AuthenticationPolicy\";\n/**\n * Gets a pipeline policy that adds authorization header from OAuth2 schemes\n */\nexport function oauth2AuthenticationPolicy(options) {\n    return {\n        name: oauth2AuthenticationPolicyName,\n        async sendRequest(request, next) {\n            var _a, _b;\n            // Ensure allowInsecureConnection is explicitly set when sending request to non-https URLs\n            ensureSecureConnection(request, options);\n            const scheme = (_b = ((_a = request.authSchemes) !== null && _a !== void 0 ? _a : options.authSchemes)) === null || _b === void 0 ? void 0 : _b.find((x) => x.kind === \"oauth2\");\n            // Skip adding authentication header if no OAuth2 authentication scheme is found\n            if (!scheme) {\n                return next(request);\n            }\n            const token = await options.credential.getOAuth2Token(scheme.flows, {\n                abortSignal: request.abortSignal,\n            });\n            request.headers.set(\"Authorization\", `Bearer ${token}`);\n            return next(request);\n        },\n    };\n}\n//# sourceMappingURL=oauth2AuthenticationPolicy.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nimport { ensureSecureConnection } from \"./checkInsecureConnection.js\";\n/**\n * Name of the Bearer Authentication Policy\n */\nexport const bearerAuthenticationPolicyName = \"bearerAuthenticationPolicy\";\n/**\n * Gets a pipeline policy that adds bearer token authentication to requests\n */\nexport function bearerAuthenticationPolicy(options) {\n    return {\n        name: bearerAuthenticationPolicyName,\n        async sendRequest(request, next) {\n            var _a, _b;\n            // Ensure allowInsecureConnection is explicitly set when sending request to non-https URLs\n            ensureSecureConnection(request, options);\n            const scheme = (_b = ((_a = request.authSchemes) !== null && _a !== void 0 ? _a : options.authSchemes)) === null || _b === void 0 ? void 0 : _b.find((x) => x.kind === \"http\" && x.scheme === \"bearer\");\n            // Skip adding authentication header if no bearer authentication scheme is found\n            if (!scheme) {\n                return next(request);\n            }\n            const token = await options.credential.getBearerToken({\n                abortSignal: request.abortSignal,\n            });\n            request.headers.set(\"Authorization\", `Bearer ${token}`);\n            return next(request);\n        },\n    };\n}\n//# sourceMappingURL=bearerAuthenticationPolicy.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nimport { stringToUint8Array, uint8ArrayToString } from \"../../util/bytesEncoding.js\";\nimport { ensureSecureConnection } from \"./checkInsecureConnection.js\";\n/**\n * Name of the Basic Authentication Policy\n */\nexport const basicAuthenticationPolicyName = \"bearerAuthenticationPolicy\";\n/**\n * Gets a pipeline policy that adds basic authentication to requests\n */\nexport function basicAuthenticationPolicy(options) {\n    return {\n        name: basicAuthenticationPolicyName,\n        async sendRequest(request, next) {\n            var _a, _b;\n            // Ensure allowInsecureConnection is explicitly set when sending request to non-https URLs\n            ensureSecureConnection(request, options);\n            const scheme = (_b = ((_a = request.authSchemes) !== null && _a !== void 0 ? _a : options.authSchemes)) === null || _b === void 0 ? void 0 : _b.find((x) => x.kind === \"http\" && x.scheme === \"basic\");\n            // Skip adding authentication header if no basic authentication scheme is found\n            if (!scheme) {\n                return next(request);\n            }\n            const { username, password } = options.credential;\n            const headerValue = uint8ArrayToString(stringToUint8Array(`${username}:${password}`, \"utf-8\"), \"base64\");\n            request.headers.set(\"Authorization\", `Basic ${headerValue}`);\n            return next(request);\n        },\n    };\n}\n//# sourceMappingURL=basicAuthenticationPolicy.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nimport { ensureSecureConnection } from \"./checkInsecureConnection.js\";\n/**\n * Name of the API Key Authentication Policy\n */\nexport const apiKeyAuthenticationPolicyName = \"apiKeyAuthenticationPolicy\";\n/**\n * Gets a pipeline policy that adds API key authentication to requests\n */\nexport function apiKeyAuthenticationPolicy(options) {\n    return {\n        name: apiKeyAuthenticationPolicyName,\n        async sendRequest(request, next) {\n            var _a, _b;\n            // Ensure allowInsecureConnection is explicitly set when sending request to non-https URLs\n            ensureSecureConnection(request, options);\n            const scheme = (_b = ((_a = request.authSchemes) !== null && _a !== void 0 ? _a : options.authSchemes)) === null || _b === void 0 ? void 0 : _b.find((x) => x.kind === \"apiKey\");\n            // Skip adding authentication header if no API key authentication scheme is found\n            if (!scheme) {\n                return next(request);\n            }\n            if (scheme.apiKeyLocation !== \"header\") {\n                throw new Error(`Unsupported API key location: ${scheme.apiKeyLocation}`);\n            }\n            request.headers.set(scheme.name, options.credential.key);\n            return next(request);\n        },\n    };\n}\n//# sourceMappingURL=apiKeyAuthenticationPolicy.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nimport { RestError } from \"../restError.js\";\nimport { createHttpHeaders } from \"../httpHeaders.js\";\nimport { stringToUint8Array } from \"../util/bytesEncoding.js\";\nimport { isBinaryBody } from \"../util/typeGuards.js\";\n/**\n * Get value of a header in the part descriptor ignoring case\n */\nfunction getHeaderValue(descriptor, headerName) {\n    if (descriptor.headers) {\n        const actualHeaderName = Object.keys(descriptor.headers).find((x) => x.toLowerCase() === headerName.toLowerCase());\n        if (actualHeaderName) {\n            return descriptor.headers[actualHeaderName];\n        }\n    }\n    return undefined;\n}\nfunction getPartContentType(descriptor) {\n    const contentTypeHeader = getHeaderValue(descriptor, \"content-type\");\n    if (contentTypeHeader) {\n        return contentTypeHeader;\n    }\n    // Special value of null means content type is to be omitted\n    if (descriptor.contentType === null) {\n        return undefined;\n    }\n    if (descriptor.contentType) {\n        return descriptor.contentType;\n    }\n    const { body } = descriptor;\n    if (body === null || body === undefined) {\n        return undefined;\n    }\n    if (typeof body === \"string\" || typeof body === \"number\" || typeof body === \"boolean\") {\n        return \"text/plain; charset=UTF-8\";\n    }\n    if (body instanceof Blob) {\n        return body.type || \"application/octet-stream\";\n    }\n    if (isBinaryBody(body)) {\n        return \"application/octet-stream\";\n    }\n    // arbitrary non-text object -> generic JSON content type by default. We will try to JSON.stringify the body.\n    return \"application/json\";\n}\n/**\n * Enclose value in quotes and escape special characters, for use in the Content-Disposition header\n */\nfunction escapeDispositionField(value) {\n    return JSON.stringify(value);\n}\nfunction getContentDisposition(descriptor) {\n    var _a;\n    const contentDispositionHeader = getHeaderValue(descriptor, \"content-disposition\");\n    if (contentDispositionHeader) {\n        return contentDispositionHeader;\n    }\n    if (descriptor.dispositionType === undefined &&\n        descriptor.name === undefined &&\n        descriptor.filename === undefined) {\n        return undefined;\n    }\n    const dispositionType = (_a = descriptor.dispositionType) !== null && _a !== void 0 ? _a : \"form-data\";\n    let disposition = dispositionType;\n    if (descriptor.name) {\n        disposition += `; name=${escapeDispositionField(descriptor.name)}`;\n    }\n    let filename = undefined;\n    if (descriptor.filename) {\n        filename = descriptor.filename;\n    }\n    else if (typeof File !== \"undefined\" && descriptor.body instanceof File) {\n        const filenameFromFile = descriptor.body.name;\n        if (filenameFromFile !== \"\") {\n            filename = filenameFromFile;\n        }\n    }\n    if (filename) {\n        disposition += `; filename=${escapeDispositionField(filename)}`;\n    }\n    return disposition;\n}\nfunction normalizeBody(body, contentType) {\n    if (body === undefined) {\n        // zero-length body\n        return new Uint8Array([]);\n    }\n    // binary and primitives should go straight on the wire regardless of content type\n    if (isBinaryBody(body)) {\n        return body;\n    }\n    if (typeof body === \"string\" || typeof body === \"number\" || typeof body === \"boolean\") {\n        return stringToUint8Array(String(body), \"utf-8\");\n    }\n    // stringify objects for JSON-ish content types e.g. application/json, application/merge-patch+json, application/vnd.oci.manifest.v1+json, application.json; charset=UTF-8\n    if (contentType && /application\\/(.+\\+)?json(;.+)?/i.test(String(contentType))) {\n        return stringToUint8Array(JSON.stringify(body), \"utf-8\");\n    }\n    throw new RestError(`Unsupported body/content-type combination: ${body}, ${contentType}`);\n}\nexport function buildBodyPart(descriptor) {\n    var _a;\n    const contentType = getPartContentType(descriptor);\n    const contentDisposition = getContentDisposition(descriptor);\n    const headers = createHttpHeaders((_a = descriptor.headers) !== null && _a !== void 0 ? _a : {});\n    if (contentType) {\n        headers.set(\"content-type\", contentType);\n    }\n    if (contentDisposition) {\n        headers.set(\"content-disposition\", contentDisposition);\n    }\n    const body = normalizeBody(descriptor.body, contentType);\n    return {\n        headers,\n        body,\n    };\n}\nexport function buildMultipartBody(parts) {\n    return { parts: parts.map(buildBodyPart) };\n}\n//# sourceMappingURL=multipart.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nimport { isRestError, RestError } from \"../restError.js\";\nimport { createHttpHeaders } from \"../httpHeaders.js\";\nimport { createPipelineRequest } from \"../pipelineRequest.js\";\nimport { getCachedDefaultHttpsClient } from \"./clientHelpers.js\";\nimport { isReadableStream } from \"../util/typeGuards.js\";\nimport { buildMultipartBody } from \"./multipart.js\";\n/**\n * Helper function to send request used by the client\n * @param method - method to use to send the request\n * @param url - url to send the request to\n * @param pipeline - pipeline with the policies to run when sending the request\n * @param options - request options\n * @param customHttpClient - a custom HttpClient to use when making the request\n * @returns returns and HttpResponse\n */\nexport async function sendRequest(method, url, pipeline, options = {}, customHttpClient) {\n    var _a;\n    const httpClient = customHttpClient !== null && customHttpClient !== void 0 ? customHttpClient : getCachedDefaultHttpsClient();\n    const request = buildPipelineRequest(method, url, options);\n    try {\n        const response = await pipeline.sendRequest(httpClient, request);\n        const headers = response.headers.toJSON();\n        const stream = (_a = response.readableStreamBody) !== null && _a !== void 0 ? _a : response.browserStreamBody;\n        const parsedBody = options.responseAsStream || stream !== undefined ? undefined : getResponseBody(response);\n        const body = stream !== null && stream !== void 0 ? stream : parsedBody;\n        if (options === null || options === void 0 ? void 0 : options.onResponse) {\n            options.onResponse(Object.assign(Object.assign({}, response), { request, rawHeaders: headers, parsedBody }));\n        }\n        return {\n            request,\n            headers,\n            status: `${response.status}`,\n            body,\n        };\n    }\n    catch (e) {\n        if (isRestError(e) && e.response && options.onResponse) {\n            const { response } = e;\n            const rawHeaders = response.headers.toJSON();\n            // UNBRANDED DIFFERENCE: onResponse callback does not have a second __legacyError property\n            options === null || options === void 0 ? void 0 : options.onResponse(Object.assign(Object.assign({}, response), { request, rawHeaders }), e);\n        }\n        throw e;\n    }\n}\n/**\n * Function to determine the request content type\n * @param options - request options InternalRequestParameters\n * @returns returns the content-type\n */\nfunction getRequestContentType(options = {}) {\n    var _a, _b, _c;\n    return ((_c = (_a = options.contentType) !== null && _a !== void 0 ? _a : (_b = options.headers) === null || _b === void 0 ? void 0 : _b[\"content-type\"]) !== null && _c !== void 0 ? _c : getContentType(options.body));\n}\n/**\n * Function to determine the content-type of a body\n * this is used if an explicit content-type is not provided\n * @param body - body in the request\n * @returns returns the content-type\n */\nfunction getContentType(body) {\n    if (ArrayBuffer.isView(body)) {\n        return \"application/octet-stream\";\n    }\n    if (typeof body === \"string\") {\n        try {\n            JSON.parse(body);\n            return \"application/json\";\n        }\n        catch (error) {\n            // If we fail to parse the body, it is not json\n            return undefined;\n        }\n    }\n    // By default return json\n    return \"application/json\";\n}\nfunction buildPipelineRequest(method, url, options = {}) {\n    var _a, _b, _c;\n    const requestContentType = getRequestContentType(options);\n    const { body, multipartBody } = getRequestBody(options.body, requestContentType);\n    const hasContent = body !== undefined || multipartBody !== undefined;\n    const headers = createHttpHeaders(Object.assign(Object.assign(Object.assign({}, (options.headers ? options.headers : {})), { accept: (_c = (_a = options.accept) !== null && _a !== void 0 ? _a : (_b = options.headers) === null || _b === void 0 ? void 0 : _b.accept) !== null && _c !== void 0 ? _c : \"application/json\" }), (hasContent &&\n        requestContentType && {\n        \"content-type\": requestContentType,\n    })));\n    return createPipelineRequest({\n        url,\n        method,\n        body,\n        multipartBody,\n        headers,\n        allowInsecureConnection: options.allowInsecureConnection,\n        abortSignal: options.abortSignal,\n        onUploadProgress: options.onUploadProgress,\n        onDownloadProgress: options.onDownloadProgress,\n        timeout: options.timeout,\n        enableBrowserStreams: true,\n        streamResponseStatusCodes: options.responseAsStream\n            ? new Set([Number.POSITIVE_INFINITY])\n            : undefined,\n    });\n}\n/**\n * Prepares the body before sending the request\n */\nfunction getRequestBody(body, contentType = \"\") {\n    if (body === undefined) {\n        return { body: undefined };\n    }\n    if (typeof FormData !== \"undefined\" && body instanceof FormData) {\n        return { body };\n    }\n    if (isReadableStream(body)) {\n        return { body };\n    }\n    if (ArrayBuffer.isView(body)) {\n        return { body: body instanceof Uint8Array ? body : JSON.stringify(body) };\n    }\n    const firstType = contentType.split(\";\")[0];\n    switch (firstType) {\n        case \"application/json\":\n            return { body: JSON.stringify(body) };\n        case \"multipart/form-data\":\n            if (Array.isArray(body)) {\n                return { multipartBody: buildMultipartBody(body) };\n            }\n            return { body: JSON.stringify(body) };\n        case \"text/plain\":\n            return { body: String(body) };\n        default:\n            if (typeof body === \"string\") {\n                return { body };\n            }\n            return { body: JSON.stringify(body) };\n    }\n}\n/**\n * Prepares the response body\n */\nfunction getResponseBody(response) {\n    var _a, _b;\n    // Set the default response type\n    const contentType = (_a = response.headers.get(\"content-type\")) !== null && _a !== void 0 ? _a : \"\";\n    const firstType = contentType.split(\";\")[0];\n    const bodyToParse = (_b = response.bodyAsText) !== null && _b !== void 0 ? _b : \"\";\n    if (firstType === \"text/plain\") {\n        return String(bodyToParse);\n    }\n    // Default to \"application/json\" and fallback to string;\n    try {\n        return bodyToParse ? JSON.parse(bodyToParse) : undefined;\n    }\n    catch (error) {\n        // If we were supposed to get a JSON object and failed to\n        // parse, throw a parse error\n        if (firstType === \"application/json\") {\n            throw createParseError(response, error);\n        }\n        // We are not sure how to handle the response so we return it as\n        // plain text.\n        return String(bodyToParse);\n    }\n}\nfunction createParseError(response, err) {\n    var _a;\n    const msg = `Error \"${err}\" occurred while parsing the response body - ${response.bodyAsText}.`;\n    const errCode = (_a = err.code) !== null && _a !== void 0 ? _a : RestError.PARSE_ERROR;\n    return new RestError(msg, {\n        code: errCode,\n        statusCode: response.status,\n        request: response.request,\n        response: response,\n    });\n}\n//# sourceMappingURL=sendRequest.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nfunction isQueryParameterWithOptions(x) {\n    const value = x.value;\n    return (value !== undefined && value.toString !== undefined && typeof value.toString === \"function\");\n}\n/**\n * Builds the request url, filling in query and path parameters\n * @param endpoint - base url which can be a template url\n * @param routePath - path to append to the endpoint\n * @param pathParameters - values of the path parameters\n * @param options - request parameters including query parameters\n * @returns a full url with path and query parameters\n */\nexport function buildRequestUrl(endpoint, routePath, pathParameters, options = {}) {\n    if (routePath.startsWith(\"https://\") || routePath.startsWith(\"http://\")) {\n        return routePath;\n    }\n    endpoint = buildBaseUrl(endpoint, options);\n    routePath = buildRoutePath(routePath, pathParameters, options);\n    const requestUrl = appendQueryParams(`${endpoint}/${routePath}`, options);\n    const url = new URL(requestUrl);\n    return (url\n        .toString()\n        // Remove double forward slashes\n        .replace(/([^:]\\/)\\/+/g, \"$1\"));\n}\nfunction getQueryParamValue(key, allowReserved, style, param) {\n    let separator;\n    if (style === \"pipeDelimited\") {\n        separator = \"|\";\n    }\n    else if (style === \"spaceDelimited\") {\n        separator = \"%20\";\n    }\n    else {\n        separator = \",\";\n    }\n    let paramValues;\n    if (Array.isArray(param)) {\n        paramValues = param;\n    }\n    else if (typeof param === \"object\" && param.toString === Object.prototype.toString) {\n        // If the parameter is an object without a custom toString implementation (e.g. a Date),\n        // then we should deconstruct the object into an array [key1, value1, key2, value2, ...].\n        paramValues = Object.entries(param).flat();\n    }\n    else {\n        paramValues = [param];\n    }\n    const value = paramValues\n        .map((p) => {\n        if (p === null || p === undefined) {\n            return \"\";\n        }\n        if (!p.toString || typeof p.toString !== \"function\") {\n            throw new Error(`Query parameters must be able to be represented as string, ${key} can't`);\n        }\n        const rawValue = p.toISOString !== undefined ? p.toISOString() : p.toString();\n        return allowReserved ? rawValue : encodeURIComponent(rawValue);\n    })\n        .join(separator);\n    return `${allowReserved ? key : encodeURIComponent(key)}=${value}`;\n}\nfunction appendQueryParams(url, options = {}) {\n    var _a, _b, _c, _d;\n    if (!options.queryParameters) {\n        return url;\n    }\n    const parsedUrl = new URL(url);\n    const queryParams = options.queryParameters;\n    const paramStrings = [];\n    for (const key of Object.keys(queryParams)) {\n        const param = queryParams[key];\n        if (param === undefined || param === null) {\n            continue;\n        }\n        const hasMetadata = isQueryParameterWithOptions(param);\n        const rawValue = hasMetadata ? param.value : param;\n        const explode = hasMetadata ? ((_a = param.explode) !== null && _a !== void 0 ? _a : false) : false;\n        const style = hasMetadata && param.style ? param.style : \"form\";\n        if (explode) {\n            if (Array.isArray(rawValue)) {\n                for (const item of rawValue) {\n                    paramStrings.push(getQueryParamValue(key, (_b = options.skipUrlEncoding) !== null && _b !== void 0 ? _b : false, style, item));\n                }\n            }\n            else if (typeof rawValue === \"object\") {\n                // For object explode, the name of the query parameter is ignored and we use the object key instead\n                for (const [actualKey, value] of Object.entries(rawValue)) {\n                    paramStrings.push(getQueryParamValue(actualKey, (_c = options.skipUrlEncoding) !== null && _c !== void 0 ? _c : false, style, value));\n                }\n            }\n            else {\n                // Explode doesn't really make sense for primitives\n                throw new Error(\"explode can only be set to true for objects and arrays\");\n            }\n        }\n        else {\n            paramStrings.push(getQueryParamValue(key, (_d = options.skipUrlEncoding) !== null && _d !== void 0 ? _d : false, style, rawValue));\n        }\n    }\n    if (parsedUrl.search !== \"\") {\n        parsedUrl.search += \"&\";\n    }\n    parsedUrl.search += paramStrings.join(\"&\");\n    return parsedUrl.toString();\n}\nexport function buildBaseUrl(endpoint, options) {\n    var _a;\n    if (!options.pathParameters) {\n        return endpoint;\n    }\n    const pathParams = options.pathParameters;\n    for (const [key, param] of Object.entries(pathParams)) {\n        if (param === undefined || param === null) {\n            throw new Error(`Path parameters ${key} must not be undefined or null`);\n        }\n        if (!param.toString || typeof param.toString !== \"function\") {\n            throw new Error(`Path parameters must be able to be represented as string, ${key} can't`);\n        }\n        let value = param.toISOString !== undefined ? param.toISOString() : String(param);\n        if (!options.skipUrlEncoding) {\n            value = encodeURIComponent(param);\n        }\n        endpoint = (_a = replaceAll(endpoint, `{${key}}`, value)) !== null && _a !== void 0 ? _a : \"\";\n    }\n    return endpoint;\n}\nfunction buildRoutePath(routePath, pathParameters, options = {}) {\n    var _a;\n    for (const pathParam of pathParameters) {\n        const allowReserved = typeof pathParam === \"object\" && ((_a = pathParam.allowReserved) !== null && _a !== void 0 ? _a : false);\n        let value = typeof pathParam === \"object\" ? pathParam.value : pathParam;\n        if (!options.skipUrlEncoding && !allowReserved) {\n            value = encodeURIComponent(value);\n        }\n        routePath = routePath.replace(/\\{[\\w-]+\\}/, String(value));\n    }\n    return routePath;\n}\n/**\n * Replace all of the instances of searchValue in value with the provided replaceValue.\n * @param value - The value to search and replace in.\n * @param searchValue - The value to search for in the value argument.\n * @param replaceValue - The value to replace searchValue with in the value argument.\n * @returns The value where each instance of searchValue was replaced with replacedValue.\n */\nexport function replaceAll(value, searchValue, replaceValue) {\n    return !value || !searchValue ? value : value.split(searchValue).join(replaceValue || \"\");\n}\n//# sourceMappingURL=urlHelpers.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nimport { createDefaultPipeline } from \"./clientHelpers.js\";\nimport { sendRequest } from \"./sendRequest.js\";\nimport { buildRequestUrl } from \"./urlHelpers.js\";\nimport { isNodeLike } from \"../util/checkEnvironment.js\";\n/**\n * Creates a client with a default pipeline\n * @param endpoint - Base endpoint for the client\n * @param credentials - Credentials to authenticate the requests\n * @param options - Client options\n */\nexport function getClient(endpoint, clientOptions = {}) {\n    var _a, _b, _c;\n    const pipeline = (_a = clientOptions.pipeline) !== null && _a !== void 0 ? _a : createDefaultPipeline(clientOptions);\n    if ((_b = clientOptions.additionalPolicies) === null || _b === void 0 ? void 0 : _b.length) {\n        for (const { policy, position } of clientOptions.additionalPolicies) {\n            // Sign happens after Retry and is commonly needed to occur\n            // before policies that intercept post-retry.\n            const afterPhase = position === \"perRetry\" ? \"Sign\" : undefined;\n            pipeline.addPolicy(policy, {\n                afterPhase,\n            });\n        }\n    }\n    const { allowInsecureConnection, httpClient } = clientOptions;\n    const endpointUrl = (_c = clientOptions.endpoint) !== null && _c !== void 0 ? _c : endpoint;\n    const client = (path, ...args) => {\n        const getUrl = (requestOptions) => buildRequestUrl(endpointUrl, path, args, Object.assign({ allowInsecureConnection }, requestOptions));\n        return {\n            get: (requestOptions = {}) => {\n                return buildOperation(\"GET\", getUrl(requestOptions), pipeline, requestOptions, allowInsecureConnection, httpClient);\n            },\n            post: (requestOptions = {}) => {\n                return buildOperation(\"POST\", getUrl(requestOptions), pipeline, requestOptions, allowInsecureConnection, httpClient);\n            },\n            put: (requestOptions = {}) => {\n                return buildOperation(\"PUT\", getUrl(requestOptions), pipeline, requestOptions, allowInsecureConnection, httpClient);\n            },\n            patch: (requestOptions = {}) => {\n                return buildOperation(\"PATCH\", getUrl(requestOptions), pipeline, requestOptions, allowInsecureConnection, httpClient);\n            },\n            delete: (requestOptions = {}) => {\n                return buildOperation(\"DELETE\", getUrl(requestOptions), pipeline, requestOptions, allowInsecureConnection, httpClient);\n            },\n            head: (requestOptions = {}) => {\n                return buildOperation(\"HEAD\", getUrl(requestOptions), pipeline, requestOptions, allowInsecureConnection, httpClient);\n            },\n            options: (requestOptions = {}) => {\n                return buildOperation(\"OPTIONS\", getUrl(requestOptions), pipeline, requestOptions, allowInsecureConnection, httpClient);\n            },\n            trace: (requestOptions = {}) => {\n                return buildOperation(\"TRACE\", getUrl(requestOptions), pipeline, requestOptions, allowInsecureConnection, httpClient);\n            },\n        };\n    };\n    return {\n        path: client,\n        pathUnchecked: client,\n        pipeline,\n    };\n}\nfunction buildOperation(method, url, pipeline, options, allowInsecureConnection, httpClient) {\n    var _a;\n    allowInsecureConnection = (_a = options.allowInsecureConnection) !== null && _a !== void 0 ? _a : allowInsecureConnection;\n    return {\n        then: function (onFulfilled, onrejected) {\n            return sendRequest(method, url, pipeline, Object.assign(Object.assign({}, options), { allowInsecureConnection }), httpClient).then(onFulfilled, onrejected);\n        },\n        async asBrowserStream() {\n            if (isNodeLike) {\n                throw new Error(\"`asBrowserStream` is supported only in the browser environment. Use `asNodeStream` instead to obtain the response body stream. If you require a Web stream of the response in Node, consider using `Readable.toWeb` on the result of `asNodeStream`.\");\n            }\n            else {\n                return sendRequest(method, url, pipeline, Object.assign(Object.assign({}, options), { allowInsecureConnection, responseAsStream: true }), httpClient);\n            }\n        },\n        async asNodeStream() {\n            if (isNodeLike) {\n                return sendRequest(method, url, pipeline, Object.assign(Object.assign({}, options), { allowInsecureConnection, responseAsStream: true }), httpClient);\n            }\n            else {\n                throw new Error(\"`isNodeStream` is not supported in the browser environment. Use `asBrowserStream` to obtain the response body stream.\");\n            }\n        },\n    };\n}\n//# sourceMappingURL=getClient.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nimport { RestError } from \"../restError.js\";\nimport { createHttpHeaders } from \"../httpHeaders.js\";\nexport function createRestError(messageOrResponse, response) {\n    var _a, _b, _c;\n    const resp = typeof messageOrResponse === \"string\" ? response : messageOrResponse;\n    const internalError = (_b = (_a = resp.body) === null || _a === void 0 ? void 0 : _a.error) !== null && _b !== void 0 ? _b : resp.body;\n    const message = typeof messageOrResponse === \"string\"\n        ? messageOrResponse\n        : ((_c = internalError === null || internalError === void 0 ? void 0 : internalError.message) !== null && _c !== void 0 ? _c : `Unexpected status code: ${resp.status}`);\n    return new RestError(message, {\n        statusCode: statusCodeToNumber(resp.status),\n        code: internalError === null || internalError === void 0 ? void 0 : internalError.code,\n        request: resp.request,\n        response: toPipelineResponse(resp),\n    });\n}\nfunction toPipelineResponse(response) {\n    var _a;\n    return {\n        headers: createHttpHeaders(response.headers),\n        request: response.request,\n        status: (_a = statusCodeToNumber(response.status)) !== null && _a !== void 0 ? _a : -1,\n    };\n}\nfunction statusCodeToNumber(statusCode) {\n    const status = Number.parseInt(statusCode);\n    return Number.isNaN(status) ? undefined : status;\n}\n//# sourceMappingURL=restError.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nimport { createClientLogger } from \"@azure/logger\";\nexport const logger = createClientLogger(\"core-rest-pipeline\");\n//# sourceMappingURL=log.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nexport const SDK_VERSION = \"1.22.0\";\nexport const DEFAULT_RETRY_POLICY_COUNT = 3;\n//# sourceMappingURL=constants.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nimport { getHeaderName, setPlatformSpecificData } from \"./userAgentPlatform.js\";\nimport { SDK_VERSION } from \"../constants.js\";\nfunction getUserAgentString(telemetryInfo) {\n    const parts = [];\n    for (const [key, value] of telemetryInfo) {\n        const token = value ? `${key}/${value}` : key;\n        parts.push(token);\n    }\n    return parts.join(\" \");\n}\n/**\n * @internal\n */\nexport function getUserAgentHeaderName() {\n    return getHeaderName();\n}\n/**\n * @internal\n */\nexport async function getUserAgentValue(prefix) {\n    const runtimeInfo = new Map();\n    runtimeInfo.set(\"core-rest-pipeline\", SDK_VERSION);\n    await setPlatformSpecificData(runtimeInfo);\n    const defaultAgent = getUserAgentString(runtimeInfo);\n    const userAgentValue = prefix ? `${prefix} ${defaultAgent}` : defaultAgent;\n    return userAgentValue;\n}\n//# sourceMappingURL=userAgent.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nimport * as os from \"node:os\";\nimport * as process from \"node:process\";\n/**\n * @internal\n */\nexport function getHeaderName() {\n    return \"User-Agent\";\n}\n/**\n * @internal\n */\nexport async function setPlatformSpecificData(map) {\n    if (process && process.versions) {\n        const versions = process.versions;\n        if (versions.bun) {\n            map.set(\"Bun\", versions.bun);\n        }\n        else if (versions.deno) {\n            map.set(\"Deno\", versions.deno);\n        }\n        else if (versions.node) {\n            map.set(\"Node\", versions.node);\n        }\n    }\n    map.set(\"OS\", `(${os.arch()}-${os.type()}-${os.release()})`);\n}\n//# sourceMappingURL=userAgentPlatform.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nimport { getUserAgentHeaderName, getUserAgentValue } from \"../util/userAgent.js\";\nconst UserAgentHeaderName = getUserAgentHeaderName();\n/**\n * The programmatic identifier of the userAgentPolicy.\n */\nexport const userAgentPolicyName = \"userAgentPolicy\";\n/**\n * A policy that sets the User-Agent header (or equivalent) to reflect\n * the library version.\n * @param options - Options to customize the user agent value.\n */\nexport function userAgentPolicy(options = {}) {\n    const userAgentValue = getUserAgentValue(options.userAgentPrefix);\n    return {\n        name: userAgentPolicyName,\n        async sendRequest(request, next) {\n            if (!request.headers.has(UserAgentHeaderName)) {\n                request.headers.set(UserAgentHeaderName, await userAgentValue);\n            }\n            return next(request);\n        },\n    };\n}\n//# sourceMappingURL=userAgentPolicy.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nimport { isNodeLike } from \"@azure/core-util\";\nfunction isNodeReadableStream(x) {\n    return Boolean(x && typeof x[\"pipe\"] === \"function\");\n}\nconst unimplementedMethods = {\n    arrayBuffer: () => {\n        throw new Error(\"Not implemented\");\n    },\n    bytes: () => {\n        throw new Error(\"Not implemented\");\n    },\n    slice: () => {\n        throw new Error(\"Not implemented\");\n    },\n    text: () => {\n        throw new Error(\"Not implemented\");\n    },\n};\n/**\n * Private symbol used as key on objects created using createFile containing the\n * original source of the file object.\n *\n * This is used in Node to access the original Node stream without using Blob#stream, which\n * returns a web stream. This is done to avoid a couple of bugs to do with Blob#stream and\n * Readable#to/fromWeb in Node versions we support:\n * - https://github.com/nodejs/node/issues/42694 (fixed in Node 18.14)\n * - https://github.com/nodejs/node/issues/48916 (fixed in Node 20.6)\n *\n * Once these versions are no longer supported, we may be able to stop doing this.\n *\n * @internal\n */\nconst rawContent = Symbol(\"rawContent\");\n/**\n * Type guard to check if a given object is a blob-like object with a raw content property.\n */\nexport function hasRawContent(x) {\n    return typeof x[rawContent] === \"function\";\n}\n/**\n * Extract the raw content from a given blob-like object. If the input was created using createFile\n * or createFileFromStream, the exact content passed into createFile/createFileFromStream will be used.\n * For true instances of Blob and File, returns the actual blob.\n *\n * @internal\n */\nexport function getRawContent(blob) {\n    if (hasRawContent(blob)) {\n        return blob[rawContent]();\n    }\n    else {\n        return blob;\n    }\n}\n/**\n * Create an object that implements the File interface. This object is intended to be\n * passed into RequestBodyType.formData, and is not guaranteed to work as expected in\n * other situations.\n *\n * Use this function to:\n * - Create a File object for use in RequestBodyType.formData in environments where the\n *   global File object is unavailable.\n * - Create a File-like object from a readable stream without reading the stream into memory.\n *\n * @param stream - the content of the file as a callback returning a stream. When a File object made using createFile is\n *                  passed in a request's form data map, the stream will not be read into memory\n *                  and instead will be streamed when the request is made. In the event of a retry, the\n *                  stream needs to be read again, so this callback SHOULD return a fresh stream if possible.\n * @param name - the name of the file.\n * @param options - optional metadata about the file, e.g. file name, file size, MIME type.\n */\nexport function createFileFromStream(stream, name, options = {}) {\n    var _a, _b, _c, _d;\n    return Object.assign(Object.assign({}, unimplementedMethods), { type: (_a = options.type) !== null && _a !== void 0 ? _a : \"\", lastModified: (_b = options.lastModified) !== null && _b !== void 0 ? _b : new Date().getTime(), webkitRelativePath: (_c = options.webkitRelativePath) !== null && _c !== void 0 ? _c : \"\", size: (_d = options.size) !== null && _d !== void 0 ? _d : -1, name, stream: () => {\n            const s = stream();\n            if (isNodeReadableStream(s)) {\n                throw new Error(\"Not supported: a Node stream was provided as input to createFileFromStream.\");\n            }\n            return s;\n        }, [rawContent]: stream });\n}\n/**\n * Create an object that implements the File interface. This object is intended to be\n * passed into RequestBodyType.formData, and is not guaranteed to work as expected in\n * other situations.\n *\n * Use this function create a File object for use in RequestBodyType.formData in environments where the global File object is unavailable.\n *\n * @param content - the content of the file as a Uint8Array in memory.\n * @param name - the name of the file.\n * @param options - optional metadata about the file, e.g. file name, file size, MIME type.\n */\nexport function createFile(content, name, options = {}) {\n    var _a, _b, _c;\n    if (isNodeLike) {\n        return Object.assign(Object.assign({}, unimplementedMethods), { type: (_a = options.type) !== null && _a !== void 0 ? _a : \"\", lastModified: (_b = options.lastModified) !== null && _b !== void 0 ? _b : new Date().getTime(), webkitRelativePath: (_c = options.webkitRelativePath) !== null && _c !== void 0 ? _c : \"\", size: content.byteLength, name, arrayBuffer: async () => content.buffer, stream: () => new Blob([content]).stream(), [rawContent]: () => content });\n    }\n    else {\n        return new File([content], name, options);\n    }\n}\n//# sourceMappingURL=file.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nimport { multipartPolicyName as tspMultipartPolicyName, multipartPolicy as tspMultipartPolicy, } from \"@typespec/ts-http-runtime/internal/policies\";\nimport { getRawContent, hasRawContent } from \"../util/file.js\";\n/**\n * Name of multipart policy\n */\nexport const multipartPolicyName = tspMultipartPolicyName;\n/**\n * Pipeline policy for multipart requests\n */\nexport function multipartPolicy() {\n    const tspPolicy = tspMultipartPolicy();\n    return {\n        name: multipartPolicyName,\n        sendRequest: async (request, next) => {\n            if (request.multipartBody) {\n                for (const part of request.multipartBody.parts) {\n                    if (hasRawContent(part.body)) {\n                        part.body = getRawContent(part.body);\n                    }\n                }\n            }\n            return tspPolicy.sendRequest(request, next);\n        },\n    };\n}\n//# sourceMappingURL=multipartPolicy.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nimport { RestError as TspRestError, isRestError as tspIsRestError, } from \"@typespec/ts-http-runtime\";\n/**\n * A custom error type for failed pipeline requests.\n */\n// eslint-disable-next-line @typescript-eslint/no-redeclare\nexport const RestError = TspRestError;\n/**\n * Typeguard for RestError\n * @param e - Something caught by a catch clause.\n */\nexport function isRestError(e) {\n    return tspIsRestError(e);\n}\n//# sourceMappingURL=restError.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nimport { createTracingClient, } from \"@azure/core-tracing\";\nimport { SDK_VERSION } from \"../constants.js\";\nimport { getUserAgentValue } from \"../util/userAgent.js\";\nimport { logger } from \"../log.js\";\nimport { getErrorMessage, isError } from \"@azure/core-util\";\nimport { isRestError } from \"../restError.js\";\nimport { Sanitizer } from \"@typespec/ts-http-runtime/internal/util\";\n/**\n * The programmatic identifier of the tracingPolicy.\n */\nexport const tracingPolicyName = \"tracingPolicy\";\n/**\n * A simple policy to create OpenTelemetry Spans for each request made by the pipeline\n * that has SpanOptions with a parent.\n * Requests made without a parent Span will not be recorded.\n * @param options - Options to configure the telemetry logged by the tracing policy.\n */\nexport function tracingPolicy(options = {}) {\n    const userAgentPromise = getUserAgentValue(options.userAgentPrefix);\n    const sanitizer = new Sanitizer({\n        additionalAllowedQueryParameters: options.additionalAllowedQueryParameters,\n    });\n    const tracingClient = tryCreateTracingClient();\n    return {\n        name: tracingPolicyName,\n        async sendRequest(request, next) {\n            var _a;\n            if (!tracingClient) {\n                return next(request);\n            }\n            const userAgent = await userAgentPromise;\n            const spanAttributes = {\n                \"http.url\": sanitizer.sanitizeUrl(request.url),\n                \"http.method\": request.method,\n                \"http.user_agent\": userAgent,\n                requestId: request.requestId,\n            };\n            if (userAgent) {\n                spanAttributes[\"http.user_agent\"] = userAgent;\n            }\n            const { span, tracingContext } = (_a = tryCreateSpan(tracingClient, request, spanAttributes)) !== null && _a !== void 0 ? _a : {};\n            if (!span || !tracingContext) {\n                return next(request);\n            }\n            try {\n                const response = await tracingClient.withContext(tracingContext, next, request);\n                tryProcessResponse(span, response);\n                return response;\n            }\n            catch (err) {\n                tryProcessError(span, err);\n                throw err;\n            }\n        },\n    };\n}\nfunction tryCreateTracingClient() {\n    try {\n        return createTracingClient({\n            namespace: \"\",\n            packageName: \"@azure/core-rest-pipeline\",\n            packageVersion: SDK_VERSION,\n        });\n    }\n    catch (e) {\n        logger.warning(`Error when creating the TracingClient: ${getErrorMessage(e)}`);\n        return undefined;\n    }\n}\nfunction tryCreateSpan(tracingClient, request, spanAttributes) {\n    try {\n        // As per spec, we do not need to differentiate between HTTP and HTTPS in span name.\n        const { span, updatedOptions } = tracingClient.startSpan(`HTTP ${request.method}`, { tracingOptions: request.tracingOptions }, {\n            spanKind: \"client\",\n            spanAttributes,\n        });\n        // If the span is not recording, don't do any more work.\n        if (!span.isRecording()) {\n            span.end();\n            return undefined;\n        }\n        // set headers\n        const headers = tracingClient.createRequestHeaders(updatedOptions.tracingOptions.tracingContext);\n        for (const [key, value] of Object.entries(headers)) {\n            request.headers.set(key, value);\n        }\n        return { span, tracingContext: updatedOptions.tracingOptions.tracingContext };\n    }\n    catch (e) {\n        logger.warning(`Skipping creating a tracing span due to an error: ${getErrorMessage(e)}`);\n        return undefined;\n    }\n}\nfunction tryProcessError(span, error) {\n    try {\n        span.setStatus({\n            status: \"error\",\n            error: isError(error) ? error : undefined,\n        });\n        if (isRestError(error) && error.statusCode) {\n            span.setAttribute(\"http.status_code\", error.statusCode);\n        }\n        span.end();\n    }\n    catch (e) {\n        logger.warning(`Skipping tracing span processing due to an error: ${getErrorMessage(e)}`);\n    }\n}\nfunction tryProcessResponse(span, response) {\n    try {\n        span.setAttribute(\"http.status_code\", response.status);\n        const serviceRequestId = response.headers.get(\"x-ms-request-id\");\n        if (serviceRequestId) {\n            span.setAttribute(\"serviceRequestId\", serviceRequestId);\n        }\n        // Per semantic conventions, only set the status to error if the status code is 4xx or 5xx.\n        // Otherwise, the status MUST remain unset.\n        // https://opentelemetry.io/docs/specs/semconv/http/http-spans/#status\n        if (response.status >= 400) {\n            span.setStatus({\n                status: \"error\",\n            });\n        }\n        span.end();\n    }\n    catch (e) {\n        logger.warning(`Skipping tracing span processing due to an error: ${getErrorMessage(e)}`);\n    }\n}\n//# sourceMappingURL=tracingPolicy.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n/**\n * Creates a native AbortSignal which reflects the state of the provided AbortSignalLike.\n * If the AbortSignalLike is already a native AbortSignal, it is returned as is.\n * @param abortSignalLike - The AbortSignalLike to wrap.\n * @returns - An object containing the native AbortSignal and an optional cleanup function. The cleanup function should be called when the AbortSignal is no longer needed.\n */\nexport function wrapAbortSignalLike(abortSignalLike) {\n    if (abortSignalLike instanceof AbortSignal) {\n        return { abortSignal: abortSignalLike };\n    }\n    if (abortSignalLike.aborted) {\n        return { abortSignal: AbortSignal.abort(abortSignalLike.reason) };\n    }\n    const controller = new AbortController();\n    let needsCleanup = true;\n    function cleanup() {\n        if (needsCleanup) {\n            abortSignalLike.removeEventListener(\"abort\", listener);\n            needsCleanup = false;\n        }\n    }\n    function listener() {\n        controller.abort(abortSignalLike.reason);\n        cleanup();\n    }\n    abortSignalLike.addEventListener(\"abort\", listener);\n    return { abortSignal: controller.signal, cleanup };\n}\n//# sourceMappingURL=wrapAbortSignal.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nimport { logPolicy } from \"./policies/logPolicy.js\";\nimport { createEmptyPipeline } from \"./pipeline.js\";\nimport { redirectPolicy } from \"./policies/redirectPolicy.js\";\nimport { userAgentPolicy } from \"./policies/userAgentPolicy.js\";\nimport { multipartPolicy, multipartPolicyName } from \"./policies/multipartPolicy.js\";\nimport { decompressResponsePolicy } from \"./policies/decompressResponsePolicy.js\";\nimport { defaultRetryPolicy } from \"./policies/defaultRetryPolicy.js\";\nimport { formDataPolicy } from \"./policies/formDataPolicy.js\";\nimport { isNodeLike } from \"@azure/core-util\";\nimport { proxyPolicy } from \"./policies/proxyPolicy.js\";\nimport { setClientRequestIdPolicy } from \"./policies/setClientRequestIdPolicy.js\";\nimport { agentPolicy } from \"./policies/agentPolicy.js\";\nimport { tlsPolicy } from \"./policies/tlsPolicy.js\";\nimport { tracingPolicy } from \"./policies/tracingPolicy.js\";\nimport { wrapAbortSignalLikePolicy } from \"./policies/wrapAbortSignalLikePolicy.js\";\n/**\n * Create a new pipeline with a default set of customizable policies.\n * @param options - Options to configure a custom pipeline.\n */\nexport function createPipelineFromOptions(options) {\n    var _a;\n    const pipeline = createEmptyPipeline();\n    if (isNodeLike) {\n        if (options.agent) {\n            pipeline.addPolicy(agentPolicy(options.agent));\n        }\n        if (options.tlsOptions) {\n            pipeline.addPolicy(tlsPolicy(options.tlsOptions));\n        }\n        pipeline.addPolicy(proxyPolicy(options.proxyOptions));\n        pipeline.addPolicy(decompressResponsePolicy());\n    }\n    pipeline.addPolicy(wrapAbortSignalLikePolicy());\n    pipeline.addPolicy(formDataPolicy(), { beforePolicies: [multipartPolicyName] });\n    pipeline.addPolicy(userAgentPolicy(options.userAgentOptions));\n    pipeline.addPolicy(setClientRequestIdPolicy((_a = options.telemetryOptions) === null || _a === void 0 ? void 0 : _a.clientRequestIdHeaderName));\n    // The multipart policy is added after policies with no phase, so that\n    // policies can be added between it and formDataPolicy to modify\n    // properties (e.g., making the boundary constant in recorded tests).\n    pipeline.addPolicy(multipartPolicy(), { afterPhase: \"Deserialize\" });\n    pipeline.addPolicy(defaultRetryPolicy(options.retryOptions), { phase: \"Retry\" });\n    pipeline.addPolicy(tracingPolicy(Object.assign(Object.assign({}, options.userAgentOptions), options.loggingOptions)), {\n        afterPhase: \"Retry\",\n    });\n    if (isNodeLike) {\n        // Both XHR and Fetch expect to handle redirects automatically,\n        // so only include this policy when we're in Node.\n        pipeline.addPolicy(redirectPolicy(options.redirectOptions), { afterPhase: \"Retry\" });\n    }\n    pipeline.addPolicy(logPolicy(options.loggingOptions), { afterPhase: \"Sign\" });\n    return pipeline;\n}\n//# sourceMappingURL=createPipelineFromOptions.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nimport { createEmptyPipeline as tspCreateEmptyPipeline } from \"@typespec/ts-http-runtime\";\n/**\n * Creates a totally empty pipeline.\n * Useful for testing or creating a custom one.\n */\nexport function createEmptyPipeline() {\n    return tspCreateEmptyPipeline();\n}\n//# sourceMappingURL=pipeline.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nimport { agentPolicyName as tspAgentPolicyName, agentPolicy as tspAgentPolicy, } from \"@typespec/ts-http-runtime/internal/policies\";\n/**\n * Name of the Agent Policy\n */\nexport const agentPolicyName = tspAgentPolicyName;\n/**\n * Gets a pipeline policy that sets http.agent\n */\nexport function agentPolicy(agent) {\n    return tspAgentPolicy(agent);\n}\n//# sourceMappingURL=agentPolicy.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nimport { tlsPolicy as tspTlsPolicy, tlsPolicyName as tspTlsPolicyName, } from \"@typespec/ts-http-runtime/internal/policies\";\n/**\n * Name of the TLS Policy\n */\nexport const tlsPolicyName = tspTlsPolicyName;\n/**\n * Gets a pipeline policy that adds the client certificate to the HttpClient agent for authentication.\n */\nexport function tlsPolicy(tlsSettings) {\n    return tspTlsPolicy(tlsSettings);\n}\n//# sourceMappingURL=tlsPolicy.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nimport { proxyPolicy as tspProxyPolicy, proxyPolicyName as tspProxyPolicyName, getDefaultProxySettings as tspGetDefaultProxySettings, } from \"@typespec/ts-http-runtime/internal/policies\";\n/**\n * The programmatic identifier of the proxyPolicy.\n */\nexport const proxyPolicyName = tspProxyPolicyName;\n/**\n * This method converts a proxy url into `ProxySettings` for use with ProxyPolicy.\n * If no argument is given, it attempts to parse a proxy URL from the environment\n * variables `HTTPS_PROXY` or `HTTP_PROXY`.\n * @param proxyUrl - The url of the proxy to use. May contain authentication information.\n * @deprecated - Internally this method is no longer necessary when setting proxy information.\n */\nexport function getDefaultProxySettings(proxyUrl) {\n    return tspGetDefaultProxySettings(proxyUrl);\n}\n/**\n * A policy that allows one to apply proxy settings to all requests.\n * If not passed static settings, they will be retrieved from the HTTPS_PROXY\n * or HTTP_PROXY environment variables.\n * @param proxySettings - ProxySettings to use on each request.\n * @param options - additional settings, for example, custom NO_PROXY patterns\n */\nexport function proxyPolicy(proxySettings, options) {\n    return tspProxyPolicy(proxySettings, options);\n}\n//# sourceMappingURL=proxyPolicy.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nimport { decompressResponsePolicyName as tspDecompressResponsePolicyName, decompressResponsePolicy as tspDecompressResponsePolicy, } from \"@typespec/ts-http-runtime/internal/policies\";\n/**\n * The programmatic identifier of the decompressResponsePolicy.\n */\nexport const decompressResponsePolicyName = tspDecompressResponsePolicyName;\n/**\n * A policy to enable response decompression according to Accept-Encoding header\n * https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Accept-Encoding\n */\nexport function decompressResponsePolicy() {\n    return tspDecompressResponsePolicy();\n}\n//# sourceMappingURL=decompressResponsePolicy.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nimport { wrapAbortSignalLike } from \"../util/wrapAbortSignal.js\";\nexport const wrapAbortSignalLikePolicyName = \"wrapAbortSignalLikePolicy\";\n/**\n * Policy that ensure that any AbortSignalLike is wrapped in a native AbortSignal for processing by the pipeline.\n * Since the ts-http-runtime expects a native AbortSignal, this policy is used to ensure that any AbortSignalLike is wrapped in a native AbortSignal.\n *\n * @returns - created policy\n */\nexport function wrapAbortSignalLikePolicy() {\n    return {\n        name: wrapAbortSignalLikePolicyName,\n        sendRequest: async (request, next) => {\n            if (!request.abortSignal) {\n                return next(request);\n            }\n            const { abortSignal, cleanup } = wrapAbortSignalLike(request.abortSignal);\n            // eslint-disable-next-line no-param-reassign\n            request.abortSignal = abortSignal;\n            try {\n                return await next(request);\n            }\n            finally {\n                cleanup === null || cleanup === void 0 ? void 0 : cleanup();\n            }\n        },\n    };\n}\n//# sourceMappingURL=wrapAbortSignalLikePolicy.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nimport { formDataPolicyName as tspFormDataPolicyName, formDataPolicy as tspFormDataPolicy, } from \"@typespec/ts-http-runtime/internal/policies\";\n/**\n * The programmatic identifier of the formDataPolicy.\n */\nexport const formDataPolicyName = tspFormDataPolicyName;\n/**\n * A policy that encodes FormData on the request into the body.\n */\nexport function formDataPolicy() {\n    return tspFormDataPolicy();\n}\n//# sourceMappingURL=formDataPolicy.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n/**\n * The programmatic identifier of the setClientRequestIdPolicy.\n */\nexport const setClientRequestIdPolicyName = \"setClientRequestIdPolicy\";\n/**\n * Each PipelineRequest gets a unique id upon creation.\n * This policy passes that unique id along via an HTTP header to enable better\n * telemetry and tracing.\n * @param requestIdHeaderName - The name of the header to pass the request ID to.\n */\nexport function setClientRequestIdPolicy(requestIdHeaderName = \"x-ms-client-request-id\") {\n    return {\n        name: setClientRequestIdPolicyName,\n        async sendRequest(request, next) {\n            if (!request.headers.has(requestIdHeaderName)) {\n                request.headers.set(requestIdHeaderName, request.requestId);\n            }\n            return next(request);\n        },\n    };\n}\n//# sourceMappingURL=setClientRequestIdPolicy.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nimport { defaultRetryPolicyName as tspDefaultRetryPolicyName, defaultRetryPolicy as tspDefaultRetryPolicy, } from \"@typespec/ts-http-runtime/internal/policies\";\n/**\n * Name of the {@link defaultRetryPolicy}\n */\nexport const defaultRetryPolicyName = tspDefaultRetryPolicyName;\n/**\n * A policy that retries according to three strategies:\n * - When the server sends a 429 response with a Retry-After header.\n * - When there are errors in the underlying transport layer (e.g. DNS lookup failures).\n * - Or otherwise if the outgoing request fails, it will retry with an exponentially increasing delay.\n */\nexport function defaultRetryPolicy(options = {}) {\n    return tspDefaultRetryPolicy(options);\n}\n//# sourceMappingURL=defaultRetryPolicy.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nimport { redirectPolicyName as tspRedirectPolicyName, redirectPolicy as tspRedirectPolicy, } from \"@typespec/ts-http-runtime/internal/policies\";\n/**\n * The programmatic identifier of the redirectPolicy.\n */\nexport const redirectPolicyName = tspRedirectPolicyName;\n/**\n * A policy to follow Location headers from the server in order\n * to support server-side redirection.\n * In the browser, this policy is not used.\n * @param options - Options to control policy behavior.\n */\nexport function redirectPolicy(options = {}) {\n    return tspRedirectPolicy(options);\n}\n//# sourceMappingURL=redirectPolicy.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nimport { logger as coreLogger } from \"../log.js\";\nimport { logPolicyName as tspLogPolicyName, logPolicy as tspLogPolicy, } from \"@typespec/ts-http-runtime/internal/policies\";\n/**\n * The programmatic identifier of the logPolicy.\n */\nexport const logPolicyName = tspLogPolicyName;\n/**\n * A policy that logs all requests and responses.\n * @param options - Options to configure logPolicy.\n */\nexport function logPolicy(options = {}) {\n    return tspLogPolicy(Object.assign({ logger: coreLogger.info }, options));\n}\n//# sourceMappingURL=logPolicy.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nimport { createHttpHeaders as tspCreateHttpHeaders } from \"@typespec/ts-http-runtime\";\n/**\n * Creates an object that satisfies the `HttpHeaders` interface.\n * @param rawHeaders - A simple object representing initial headers\n */\nexport function createHttpHeaders(rawHeaders) {\n    return tspCreateHttpHeaders(rawHeaders);\n}\n//# sourceMappingURL=httpHeaders.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nimport { createPipelineRequest as tspCreatePipelineRequest, } from \"@typespec/ts-http-runtime\";\n/**\n * Creates a new pipeline request with the given options.\n * This method is to allow for the easy setting of default values and not required.\n * @param options - The options to create the request with.\n */\nexport function createPipelineRequest(options) {\n    // Cast required due to difference between ts-http-runtime requiring AbortSignal while core-rest-pipeline allows\n    // the more generic AbortSignalLike. The wrapAbortSignalLike pipeline policy will take care of ensuring that any AbortSignalLike in the request\n    // is converted into a true AbortSignal.\n    return tspCreatePipelineRequest(options);\n}\n//# sourceMappingURL=pipelineRequest.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nimport { createClientLogger } from \"@azure/logger\";\nimport { DEFAULT_RETRY_POLICY_COUNT } from \"../constants.js\";\nimport { retryPolicy as tspRetryPolicy, } from \"@typespec/ts-http-runtime/internal/policies\";\nconst retryPolicyLogger = createClientLogger(\"core-rest-pipeline retryPolicy\");\n/**\n * retryPolicy is a generic policy to enable retrying requests when certain conditions are met\n */\nexport function retryPolicy(strategies, options = { maxRetries: DEFAULT_RETRY_POLICY_COUNT }) {\n    // Cast is required since the TSP runtime retry strategy type is slightly different\n    // very deep down (using real AbortSignal vs. AbortSignalLike in RestError).\n    // In practice the difference doesn't actually matter.\n    return tspRetryPolicy(strategies, Object.assign({ logger: retryPolicyLogger }, options));\n}\n//# sourceMappingURL=retryPolicy.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nimport { delay } from \"@azure/core-util\";\n// Default options for the cycler if none are provided\nexport const DEFAULT_CYCLER_OPTIONS = {\n    forcedRefreshWindowInMs: 1000, // Force waiting for a refresh 1s before the token expires\n    retryIntervalInMs: 3000, // Allow refresh attempts every 3s\n    refreshWindowInMs: 1000 * 60 * 2, // Start refreshing 2m before expiry\n};\n/**\n * Converts an an unreliable access token getter (which may resolve with null)\n * into an AccessTokenGetter by retrying the unreliable getter in a regular\n * interval.\n *\n * @param getAccessToken - A function that produces a promise of an access token that may fail by returning null.\n * @param retryIntervalInMs - The time (in milliseconds) to wait between retry attempts.\n * @param refreshTimeout - The timestamp after which the refresh attempt will fail, throwing an exception.\n * @returns - A promise that, if it resolves, will resolve with an access token.\n */\nasync function beginRefresh(getAccessToken, retryIntervalInMs, refreshTimeout) {\n    // This wrapper handles exceptions gracefully as long as we haven't exceeded\n    // the timeout.\n    async function tryGetAccessToken() {\n        if (Date.now() < refreshTimeout) {\n            try {\n                return await getAccessToken();\n            }\n            catch (_a) {\n                return null;\n            }\n        }\n        else {\n            const finalToken = await getAccessToken();\n            // Timeout is up, so throw if it's still null\n            if (finalToken === null) {\n                throw new Error(\"Failed to refresh access token.\");\n            }\n            return finalToken;\n        }\n    }\n    let token = await tryGetAccessToken();\n    while (token === null) {\n        await delay(retryIntervalInMs);\n        token = await tryGetAccessToken();\n    }\n    return token;\n}\n/**\n * Creates a token cycler from a credential, scopes, and optional settings.\n *\n * A token cycler represents a way to reliably retrieve a valid access token\n * from a TokenCredential. It will handle initializing the token, refreshing it\n * when it nears expiration, and synchronizes refresh attempts to avoid\n * concurrency hazards.\n *\n * @param credential - the underlying TokenCredential that provides the access\n * token\n * @param tokenCyclerOptions - optionally override default settings for the cycler\n *\n * @returns - a function that reliably produces a valid access token\n */\nexport function createTokenCycler(credential, tokenCyclerOptions) {\n    let refreshWorker = null;\n    let token = null;\n    let tenantId;\n    const options = Object.assign(Object.assign({}, DEFAULT_CYCLER_OPTIONS), tokenCyclerOptions);\n    /**\n     * This little holder defines several predicates that we use to construct\n     * the rules of refreshing the token.\n     */\n    const cycler = {\n        /**\n         * Produces true if a refresh job is currently in progress.\n         */\n        get isRefreshing() {\n            return refreshWorker !== null;\n        },\n        /**\n         * Produces true if the cycler SHOULD refresh (we are within the refresh\n         * window and not already refreshing)\n         */\n        get shouldRefresh() {\n            var _a;\n            if (cycler.isRefreshing) {\n                return false;\n            }\n            if ((token === null || token === void 0 ? void 0 : token.refreshAfterTimestamp) && token.refreshAfterTimestamp < Date.now()) {\n                return true;\n            }\n            return ((_a = token === null || token === void 0 ? void 0 : token.expiresOnTimestamp) !== null && _a !== void 0 ? _a : 0) - options.refreshWindowInMs < Date.now();\n        },\n        /**\n         * Produces true if the cycler MUST refresh (null or nearly-expired\n         * token).\n         */\n        get mustRefresh() {\n            return (token === null || token.expiresOnTimestamp - options.forcedRefreshWindowInMs < Date.now());\n        },\n    };\n    /**\n     * Starts a refresh job or returns the existing job if one is already\n     * running.\n     */\n    function refresh(scopes, getTokenOptions) {\n        var _a;\n        if (!cycler.isRefreshing) {\n            // We bind `scopes` here to avoid passing it around a lot\n            const tryGetAccessToken = () => credential.getToken(scopes, getTokenOptions);\n            // Take advantage of promise chaining to insert an assignment to `token`\n            // before the refresh can be considered done.\n            refreshWorker = beginRefresh(tryGetAccessToken, options.retryIntervalInMs, \n            // If we don't have a token, then we should timeout immediately\n            (_a = token === null || token === void 0 ? void 0 : token.expiresOnTimestamp) !== null && _a !== void 0 ? _a : Date.now())\n                .then((_token) => {\n                refreshWorker = null;\n                token = _token;\n                tenantId = getTokenOptions.tenantId;\n                return token;\n            })\n                .catch((reason) => {\n                // We also should reset the refresher if we enter a failed state.  All\n                // existing awaiters will throw, but subsequent requests will start a\n                // new retry chain.\n                refreshWorker = null;\n                token = null;\n                tenantId = undefined;\n                throw reason;\n            });\n        }\n        return refreshWorker;\n    }\n    return async (scopes, tokenOptions) => {\n        //\n        // Simple rules:\n        // - If we MUST refresh, then return the refresh task, blocking\n        //   the pipeline until a token is available.\n        // - If we SHOULD refresh, then run refresh but don't return it\n        //   (we can still use the cached token).\n        // - Return the token, since it's fine if we didn't return in\n        //   step 1.\n        //\n        const hasClaimChallenge = Boolean(tokenOptions.claims);\n        const tenantIdChanged = tenantId !== tokenOptions.tenantId;\n        if (hasClaimChallenge) {\n            // If we've received a claim, we know the existing token isn't valid\n            // We want to clear it so that that refresh worker won't use the old expiration time as a timeout\n            token = null;\n        }\n        // If the tenantId passed in token options is different to the one we have\n        // Or if we are in claim challenge and the token was rejected and a new access token need to be issued, we need to\n        // refresh the token with the new tenantId or token.\n        const mustRefresh = tenantIdChanged || hasClaimChallenge || cycler.mustRefresh;\n        if (mustRefresh) {\n            return refresh(scopes, tokenOptions);\n        }\n        if (cycler.shouldRefresh) {\n            refresh(scopes, tokenOptions);\n        }\n        return token;\n    };\n}\n//# sourceMappingURL=tokenCycler.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nimport { createTokenCycler } from \"../util/tokenCycler.js\";\nimport { logger as coreLogger } from \"../log.js\";\nimport { isRestError } from \"../restError.js\";\n/**\n * The programmatic identifier of the bearerTokenAuthenticationPolicy.\n */\nexport const bearerTokenAuthenticationPolicyName = \"bearerTokenAuthenticationPolicy\";\n/**\n * Try to send the given request.\n *\n * When a response is received, returns a tuple of the response received and, if the response was received\n * inside a thrown RestError, the RestError that was thrown.\n *\n * Otherwise, if an error was thrown while sending the request that did not provide an underlying response, it\n * will be rethrown.\n */\nasync function trySendRequest(request, next) {\n    try {\n        return [await next(request), undefined];\n    }\n    catch (e) {\n        if (isRestError(e) && e.response) {\n            return [e.response, e];\n        }\n        else {\n            throw e;\n        }\n    }\n}\n/**\n * Default authorize request handler\n */\nasync function defaultAuthorizeRequest(options) {\n    const { scopes, getAccessToken, request } = options;\n    // Enable CAE true by default\n    const getTokenOptions = {\n        abortSignal: request.abortSignal,\n        tracingOptions: request.tracingOptions,\n        enableCae: true,\n    };\n    const accessToken = await getAccessToken(scopes, getTokenOptions);\n    if (accessToken) {\n        options.request.headers.set(\"Authorization\", `Bearer ${accessToken.token}`);\n    }\n}\n/**\n * We will retrieve the challenge only if the response status code was 401,\n * and if the response contained the header \"WWW-Authenticate\" with a non-empty value.\n */\nfunction isChallengeResponse(response) {\n    return response.status === 401 && response.headers.has(\"WWW-Authenticate\");\n}\n/**\n * Re-authorize the request for CAE challenge.\n * The response containing the challenge is `options.response`.\n * If this method returns true, the underlying request will be sent once again.\n */\nasync function authorizeRequestOnCaeChallenge(onChallengeOptions, caeClaims) {\n    var _a;\n    const { scopes } = onChallengeOptions;\n    const accessToken = await onChallengeOptions.getAccessToken(scopes, {\n        enableCae: true,\n        claims: caeClaims,\n    });\n    if (!accessToken) {\n        return false;\n    }\n    onChallengeOptions.request.headers.set(\"Authorization\", `${(_a = accessToken.tokenType) !== null && _a !== void 0 ? _a : \"Bearer\"} ${accessToken.token}`);\n    return true;\n}\n/**\n * A policy that can request a token from a TokenCredential implementation and\n * then apply it to the Authorization header of a request as a Bearer token.\n */\nexport function bearerTokenAuthenticationPolicy(options) {\n    var _a, _b, _c;\n    const { credential, scopes, challengeCallbacks } = options;\n    const logger = options.logger || coreLogger;\n    const callbacks = {\n        authorizeRequest: (_b = (_a = challengeCallbacks === null || challengeCallbacks === void 0 ? void 0 : challengeCallbacks.authorizeRequest) === null || _a === void 0 ? void 0 : _a.bind(challengeCallbacks)) !== null && _b !== void 0 ? _b : defaultAuthorizeRequest,\n        authorizeRequestOnChallenge: (_c = challengeCallbacks === null || challengeCallbacks === void 0 ? void 0 : challengeCallbacks.authorizeRequestOnChallenge) === null || _c === void 0 ? void 0 : _c.bind(challengeCallbacks),\n    };\n    // This function encapsulates the entire process of reliably retrieving the token\n    // The options are left out of the public API until there's demand to configure this.\n    // Remember to extend `BearerTokenAuthenticationPolicyOptions` with `TokenCyclerOptions`\n    // in order to pass through the `options` object.\n    const getAccessToken = credential\n        ? createTokenCycler(credential /* , options */)\n        : () => Promise.resolve(null);\n    return {\n        name: bearerTokenAuthenticationPolicyName,\n        /**\n         * If there's no challenge parameter:\n         * - It will try to retrieve the token using the cache, or the credential's getToken.\n         * - Then it will try the next policy with or without the retrieved token.\n         *\n         * It uses the challenge parameters to:\n         * - Skip a first attempt to get the token from the credential if there's no cached token,\n         *   since it expects the token to be retrievable only after the challenge.\n         * - Prepare the outgoing request if the `prepareRequest` method has been provided.\n         * - Send an initial request to receive the challenge if it fails.\n         * - Process a challenge if the response contains it.\n         * - Retrieve a token with the challenge information, then re-send the request.\n         */\n        async sendRequest(request, next) {\n            if (!request.url.toLowerCase().startsWith(\"https://\")) {\n                throw new Error(\"Bearer token authentication is not permitted for non-TLS protected (non-https) URLs.\");\n            }\n            await callbacks.authorizeRequest({\n                scopes: Array.isArray(scopes) ? scopes : [scopes],\n                request,\n                getAccessToken,\n                logger,\n            });\n            let response;\n            let error;\n            let shouldSendRequest;\n            [response, error] = await trySendRequest(request, next);\n            if (isChallengeResponse(response)) {\n                let claims = getCaeChallengeClaims(response.headers.get(\"WWW-Authenticate\"));\n                // Handle CAE by default when receive CAE claim\n                if (claims) {\n                    let parsedClaim;\n                    // Return the response immediately if claims is not a valid base64 encoded string\n                    try {\n                        parsedClaim = atob(claims);\n                    }\n                    catch (e) {\n                        logger.warning(`The WWW-Authenticate header contains \"claims\" that cannot be parsed. Unable to perform the Continuous Access Evaluation authentication flow. Unparsable claims: ${claims}`);\n                        return response;\n                    }\n                    shouldSendRequest = await authorizeRequestOnCaeChallenge({\n                        scopes: Array.isArray(scopes) ? scopes : [scopes],\n                        response,\n                        request,\n                        getAccessToken,\n                        logger,\n                    }, parsedClaim);\n                    // Send updated request and handle response for RestError\n                    if (shouldSendRequest) {\n                        [response, error] = await trySendRequest(request, next);\n                    }\n                }\n                else if (callbacks.authorizeRequestOnChallenge) {\n                    // Handle custom challenges when client provides custom callback\n                    shouldSendRequest = await callbacks.authorizeRequestOnChallenge({\n                        scopes: Array.isArray(scopes) ? scopes : [scopes],\n                        request,\n                        response,\n                        getAccessToken,\n                        logger,\n                    });\n                    // Send updated request and handle response for RestError\n                    if (shouldSendRequest) {\n                        [response, error] = await trySendRequest(request, next);\n                    }\n                    // If we get another CAE Claim, we will handle it by default and return whatever value we receive for this\n                    if (isChallengeResponse(response)) {\n                        claims = getCaeChallengeClaims(response.headers.get(\"WWW-Authenticate\"));\n                        if (claims) {\n                            let parsedClaim;\n                            try {\n                                parsedClaim = atob(claims);\n                            }\n                            catch (e) {\n                                logger.warning(`The WWW-Authenticate header contains \"claims\" that cannot be parsed. Unable to perform the Continuous Access Evaluation authentication flow. Unparsable claims: ${claims}`);\n                                return response;\n                            }\n                            shouldSendRequest = await authorizeRequestOnCaeChallenge({\n                                scopes: Array.isArray(scopes) ? scopes : [scopes],\n                                response,\n                                request,\n                                getAccessToken,\n                                logger,\n                            }, parsedClaim);\n                            // Send updated request and handle response for RestError\n                            if (shouldSendRequest) {\n                                [response, error] = await trySendRequest(request, next);\n                            }\n                        }\n                    }\n                }\n            }\n            if (error) {\n                throw error;\n            }\n            else {\n                return response;\n            }\n        },\n    };\n}\n/**\n * Converts: `Bearer a=\"b\", c=\"d\", Pop e=\"f\", g=\"h\"`.\n * Into: `[ { scheme: 'Bearer', params: { a: 'b', c: 'd' } }, { scheme: 'Pop', params: { e: 'f', g: 'h' } } ]`.\n *\n * @internal\n */\nexport function parseChallenges(challenges) {\n    // Challenge regex seperates the string to individual challenges with different schemes in the format `Scheme a=\"b\", c=d`\n    // The challenge regex captures parameteres with either quotes values or unquoted values\n    const challengeRegex = /(\\w+)\\s+((?:\\w+=(?:\"[^\"]*\"|[^,]*),?\\s*)+)/g;\n    // Parameter regex captures the claims group removed from the scheme in the format `a=\"b\"` and `c=\"d\"`\n    // CAE challenge always have quoted parameters. For more reference, https://learn.microsoft.com/entra/identity-platform/claims-challenge\n    const paramRegex = /(\\w+)=\"([^\"]*)\"/g;\n    const parsedChallenges = [];\n    let match;\n    // Iterate over each challenge match\n    while ((match = challengeRegex.exec(challenges)) !== null) {\n        const scheme = match[1];\n        const paramsString = match[2];\n        const params = {};\n        let paramMatch;\n        // Iterate over each parameter match\n        while ((paramMatch = paramRegex.exec(paramsString)) !== null) {\n            params[paramMatch[1]] = paramMatch[2];\n        }\n        parsedChallenges.push({ scheme, params });\n    }\n    return parsedChallenges;\n}\n/**\n * Parse a pipeline response and look for a CAE challenge with \"Bearer\" scheme\n * Return the value in the header without parsing the challenge\n * @internal\n */\nfunction getCaeChallengeClaims(challenges) {\n    var _a;\n    if (!challenges) {\n        return;\n    }\n    // Find all challenges present in the header\n    const parsedChallenges = parseChallenges(challenges);\n    return (_a = parsedChallenges.find((x) => x.scheme === \"Bearer\" && x.params.claims && x.params.error === \"insufficient_claims\")) === null || _a === void 0 ? void 0 : _a.params.claims;\n}\n//# sourceMappingURL=bearerTokenAuthenticationPolicy.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n// @ts-expect-error The recommended approach to sharing module state between ESM and CJS.\n// See https://github.com/isaacs/tshy/blob/main/README.md#module-local-state for additional information.\nimport { state as cjsState } from \"../commonjs/state.js\";\n/**\n * Defines the shared state between CJS and ESM by re-exporting the CJS state.\n */\nexport const state = cjsState;\n//# sourceMappingURL=state.js.map","\"use strict\";\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.state = void 0;\n/**\n * Holds the singleton operationRequestMap, to be shared across CJS and ESM imports.\n */\nexports.state = {\n    operationRequestMap: new WeakMap(),\n};\n//# sourceMappingURL=state-cjs.cjs.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nimport { state } from \"./state.js\";\n/**\n * @internal\n * Retrieves the value to use for a given operation argument\n * @param operationArguments - The arguments passed from the generated client\n * @param parameter - The parameter description\n * @param fallbackObject - If something isn't found in the arguments bag, look here.\n *  Generally used to look at the service client properties.\n */\nexport function getOperationArgumentValueFromParameter(operationArguments, parameter, fallbackObject) {\n    let parameterPath = parameter.parameterPath;\n    const parameterMapper = parameter.mapper;\n    let value;\n    if (typeof parameterPath === \"string\") {\n        parameterPath = [parameterPath];\n    }\n    if (Array.isArray(parameterPath)) {\n        if (parameterPath.length > 0) {\n            if (parameterMapper.isConstant) {\n                value = parameterMapper.defaultValue;\n            }\n            else {\n                let propertySearchResult = getPropertyFromParameterPath(operationArguments, parameterPath);\n                if (!propertySearchResult.propertyFound && fallbackObject) {\n                    propertySearchResult = getPropertyFromParameterPath(fallbackObject, parameterPath);\n                }\n                let useDefaultValue = false;\n                if (!propertySearchResult.propertyFound) {\n                    useDefaultValue =\n                        parameterMapper.required ||\n                            (parameterPath[0] === \"options\" && parameterPath.length === 2);\n                }\n                value = useDefaultValue ? parameterMapper.defaultValue : propertySearchResult.propertyValue;\n            }\n        }\n    }\n    else {\n        if (parameterMapper.required) {\n            value = {};\n        }\n        for (const propertyName in parameterPath) {\n            const propertyMapper = parameterMapper.type.modelProperties[propertyName];\n            const propertyPath = parameterPath[propertyName];\n            const propertyValue = getOperationArgumentValueFromParameter(operationArguments, {\n                parameterPath: propertyPath,\n                mapper: propertyMapper,\n            }, fallbackObject);\n            if (propertyValue !== undefined) {\n                if (!value) {\n                    value = {};\n                }\n                value[propertyName] = propertyValue;\n            }\n        }\n    }\n    return value;\n}\nfunction getPropertyFromParameterPath(parent, parameterPath) {\n    const result = { propertyFound: false };\n    let i = 0;\n    for (; i < parameterPath.length; ++i) {\n        const parameterPathPart = parameterPath[i];\n        // Make sure to check inherited properties too, so don't use hasOwnProperty().\n        if (parent && parameterPathPart in parent) {\n            parent = parent[parameterPathPart];\n        }\n        else {\n            break;\n        }\n    }\n    if (i === parameterPath.length) {\n        result.propertyValue = parent;\n        result.propertyFound = true;\n    }\n    return result;\n}\nconst originalRequestSymbol = Symbol.for(\"@azure/core-client original request\");\nfunction hasOriginalRequest(request) {\n    return originalRequestSymbol in request;\n}\nexport function getOperationRequestInfo(request) {\n    if (hasOriginalRequest(request)) {\n        return getOperationRequestInfo(request[originalRequestSymbol]);\n    }\n    let info = state.operationRequestMap.get(request);\n    if (!info) {\n        info = {};\n        state.operationRequestMap.set(request, info);\n    }\n    return info;\n}\n//# sourceMappingURL=operationHelpers.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nimport { XML_CHARKEY } from \"./interfaces.js\";\nimport { RestError } from \"@azure/core-rest-pipeline\";\nimport { MapperTypeNames } from \"./serializer.js\";\nimport { getOperationRequestInfo } from \"./operationHelpers.js\";\nconst defaultJsonContentTypes = [\"application/json\", \"text/json\"];\nconst defaultXmlContentTypes = [\"application/xml\", \"application/atom+xml\"];\n/**\n * The programmatic identifier of the deserializationPolicy.\n */\nexport const deserializationPolicyName = \"deserializationPolicy\";\n/**\n * This policy handles parsing out responses according to OperationSpecs on the request.\n */\nexport function deserializationPolicy(options = {}) {\n    var _a, _b, _c, _d, _e, _f, _g;\n    const jsonContentTypes = (_b = (_a = options.expectedContentTypes) === null || _a === void 0 ? void 0 : _a.json) !== null && _b !== void 0 ? _b : defaultJsonContentTypes;\n    const xmlContentTypes = (_d = (_c = options.expectedContentTypes) === null || _c === void 0 ? void 0 : _c.xml) !== null && _d !== void 0 ? _d : defaultXmlContentTypes;\n    const parseXML = options.parseXML;\n    const serializerOptions = options.serializerOptions;\n    const updatedOptions = {\n        xml: {\n            rootName: (_e = serializerOptions === null || serializerOptions === void 0 ? void 0 : serializerOptions.xml.rootName) !== null && _e !== void 0 ? _e : \"\",\n            includeRoot: (_f = serializerOptions === null || serializerOptions === void 0 ? void 0 : serializerOptions.xml.includeRoot) !== null && _f !== void 0 ? _f : false,\n            xmlCharKey: (_g = serializerOptions === null || serializerOptions === void 0 ? void 0 : serializerOptions.xml.xmlCharKey) !== null && _g !== void 0 ? _g : XML_CHARKEY,\n        },\n    };\n    return {\n        name: deserializationPolicyName,\n        async sendRequest(request, next) {\n            const response = await next(request);\n            return deserializeResponseBody(jsonContentTypes, xmlContentTypes, response, updatedOptions, parseXML);\n        },\n    };\n}\nfunction getOperationResponseMap(parsedResponse) {\n    let result;\n    const request = parsedResponse.request;\n    const operationInfo = getOperationRequestInfo(request);\n    const operationSpec = operationInfo === null || operationInfo === void 0 ? void 0 : operationInfo.operationSpec;\n    if (operationSpec) {\n        if (!(operationInfo === null || operationInfo === void 0 ? void 0 : operationInfo.operationResponseGetter)) {\n            result = operationSpec.responses[parsedResponse.status];\n        }\n        else {\n            result = operationInfo === null || operationInfo === void 0 ? void 0 : operationInfo.operationResponseGetter(operationSpec, parsedResponse);\n        }\n    }\n    return result;\n}\nfunction shouldDeserializeResponse(parsedResponse) {\n    const request = parsedResponse.request;\n    const operationInfo = getOperationRequestInfo(request);\n    const shouldDeserialize = operationInfo === null || operationInfo === void 0 ? void 0 : operationInfo.shouldDeserialize;\n    let result;\n    if (shouldDeserialize === undefined) {\n        result = true;\n    }\n    else if (typeof shouldDeserialize === \"boolean\") {\n        result = shouldDeserialize;\n    }\n    else {\n        result = shouldDeserialize(parsedResponse);\n    }\n    return result;\n}\nasync function deserializeResponseBody(jsonContentTypes, xmlContentTypes, response, options, parseXML) {\n    const parsedResponse = await parse(jsonContentTypes, xmlContentTypes, response, options, parseXML);\n    if (!shouldDeserializeResponse(parsedResponse)) {\n        return parsedResponse;\n    }\n    const operationInfo = getOperationRequestInfo(parsedResponse.request);\n    const operationSpec = operationInfo === null || operationInfo === void 0 ? void 0 : operationInfo.operationSpec;\n    if (!operationSpec || !operationSpec.responses) {\n        return parsedResponse;\n    }\n    const responseSpec = getOperationResponseMap(parsedResponse);\n    const { error, shouldReturnResponse } = handleErrorResponse(parsedResponse, operationSpec, responseSpec, options);\n    if (error) {\n        throw error;\n    }\n    else if (shouldReturnResponse) {\n        return parsedResponse;\n    }\n    // An operation response spec does exist for current status code, so\n    // use it to deserialize the response.\n    if (responseSpec) {\n        if (responseSpec.bodyMapper) {\n            let valueToDeserialize = parsedResponse.parsedBody;\n            if (operationSpec.isXML && responseSpec.bodyMapper.type.name === MapperTypeNames.Sequence) {\n                valueToDeserialize =\n                    typeof valueToDeserialize === \"object\"\n                        ? valueToDeserialize[responseSpec.bodyMapper.xmlElementName]\n                        : [];\n            }\n            try {\n                parsedResponse.parsedBody = operationSpec.serializer.deserialize(responseSpec.bodyMapper, valueToDeserialize, \"operationRes.parsedBody\", options);\n            }\n            catch (deserializeError) {\n                const restError = new RestError(`Error ${deserializeError} occurred in deserializing the responseBody - ${parsedResponse.bodyAsText}`, {\n                    statusCode: parsedResponse.status,\n                    request: parsedResponse.request,\n                    response: parsedResponse,\n                });\n                throw restError;\n            }\n        }\n        else if (operationSpec.httpMethod === \"HEAD\") {\n            // head methods never have a body, but we return a boolean to indicate presence/absence of the resource\n            parsedResponse.parsedBody = response.status >= 200 && response.status < 300;\n        }\n        if (responseSpec.headersMapper) {\n            parsedResponse.parsedHeaders = operationSpec.serializer.deserialize(responseSpec.headersMapper, parsedResponse.headers.toJSON(), \"operationRes.parsedHeaders\", { xml: {}, ignoreUnknownProperties: true });\n        }\n    }\n    return parsedResponse;\n}\nfunction isOperationSpecEmpty(operationSpec) {\n    const expectedStatusCodes = Object.keys(operationSpec.responses);\n    return (expectedStatusCodes.length === 0 ||\n        (expectedStatusCodes.length === 1 && expectedStatusCodes[0] === \"default\"));\n}\nfunction handleErrorResponse(parsedResponse, operationSpec, responseSpec, options) {\n    var _a, _b, _c, _d, _e;\n    const isSuccessByStatus = 200 <= parsedResponse.status && parsedResponse.status < 300;\n    const isExpectedStatusCode = isOperationSpecEmpty(operationSpec)\n        ? isSuccessByStatus\n        : !!responseSpec;\n    if (isExpectedStatusCode) {\n        if (responseSpec) {\n            if (!responseSpec.isError) {\n                return { error: null, shouldReturnResponse: false };\n            }\n        }\n        else {\n            return { error: null, shouldReturnResponse: false };\n        }\n    }\n    const errorResponseSpec = responseSpec !== null && responseSpec !== void 0 ? responseSpec : operationSpec.responses.default;\n    const initialErrorMessage = ((_a = parsedResponse.request.streamResponseStatusCodes) === null || _a === void 0 ? void 0 : _a.has(parsedResponse.status))\n        ? `Unexpected status code: ${parsedResponse.status}`\n        : parsedResponse.bodyAsText;\n    const error = new RestError(initialErrorMessage, {\n        statusCode: parsedResponse.status,\n        request: parsedResponse.request,\n        response: parsedResponse,\n    });\n    // If the item failed but there's no error spec or default spec to deserialize the error,\n    // and the parsed body doesn't look like an error object,\n    // we should fail so we just throw the parsed response\n    if (!errorResponseSpec &&\n        !(((_c = (_b = parsedResponse.parsedBody) === null || _b === void 0 ? void 0 : _b.error) === null || _c === void 0 ? void 0 : _c.code) && ((_e = (_d = parsedResponse.parsedBody) === null || _d === void 0 ? void 0 : _d.error) === null || _e === void 0 ? void 0 : _e.message))) {\n        throw error;\n    }\n    const defaultBodyMapper = errorResponseSpec === null || errorResponseSpec === void 0 ? void 0 : errorResponseSpec.bodyMapper;\n    const defaultHeadersMapper = errorResponseSpec === null || errorResponseSpec === void 0 ? void 0 : errorResponseSpec.headersMapper;\n    try {\n        // If error response has a body, try to deserialize it using default body mapper.\n        // Then try to extract error code & message from it\n        if (parsedResponse.parsedBody) {\n            const parsedBody = parsedResponse.parsedBody;\n            let deserializedError;\n            if (defaultBodyMapper) {\n                let valueToDeserialize = parsedBody;\n                if (operationSpec.isXML && defaultBodyMapper.type.name === MapperTypeNames.Sequence) {\n                    valueToDeserialize = [];\n                    const elementName = defaultBodyMapper.xmlElementName;\n                    if (typeof parsedBody === \"object\" && elementName) {\n                        valueToDeserialize = parsedBody[elementName];\n                    }\n                }\n                deserializedError = operationSpec.serializer.deserialize(defaultBodyMapper, valueToDeserialize, \"error.response.parsedBody\", options);\n            }\n            const internalError = parsedBody.error || deserializedError || parsedBody;\n            error.code = internalError.code;\n            if (internalError.message) {\n                error.message = internalError.message;\n            }\n            if (defaultBodyMapper) {\n                error.response.parsedBody = deserializedError;\n            }\n        }\n        // If error response has headers, try to deserialize it using default header mapper\n        if (parsedResponse.headers && defaultHeadersMapper) {\n            error.response.parsedHeaders =\n                operationSpec.serializer.deserialize(defaultHeadersMapper, parsedResponse.headers.toJSON(), \"operationRes.parsedHeaders\");\n        }\n    }\n    catch (defaultError) {\n        error.message = `Error \"${defaultError.message}\" occurred in deserializing the responseBody - \"${parsedResponse.bodyAsText}\" for the default response.`;\n    }\n    return { error, shouldReturnResponse: false };\n}\nasync function parse(jsonContentTypes, xmlContentTypes, operationResponse, opts, parseXML) {\n    var _a;\n    if (!((_a = operationResponse.request.streamResponseStatusCodes) === null || _a === void 0 ? void 0 : _a.has(operationResponse.status)) &&\n        operationResponse.bodyAsText) {\n        const text = operationResponse.bodyAsText;\n        const contentType = operationResponse.headers.get(\"Content-Type\") || \"\";\n        const contentComponents = !contentType\n            ? []\n            : contentType.split(\";\").map((component) => component.toLowerCase());\n        try {\n            if (contentComponents.length === 0 ||\n                contentComponents.some((component) => jsonContentTypes.indexOf(component) !== -1)) {\n                operationResponse.parsedBody = JSON.parse(text);\n                return operationResponse;\n            }\n            else if (contentComponents.some((component) => xmlContentTypes.indexOf(component) !== -1)) {\n                if (!parseXML) {\n                    throw new Error(\"Parsing XML not supported.\");\n                }\n                const body = await parseXML(text, opts.xml);\n                operationResponse.parsedBody = body;\n                return operationResponse;\n            }\n        }\n        catch (err) {\n            const msg = `Error \"${err}\" occurred while parsing the response body - ${operationResponse.bodyAsText}.`;\n            const errCode = err.code || RestError.PARSE_ERROR;\n            const e = new RestError(msg, {\n                code: errCode,\n                statusCode: operationResponse.status,\n                request: operationResponse.request,\n                response: operationResponse,\n            });\n            throw e;\n        }\n    }\n    return operationResponse;\n}\n//# sourceMappingURL=deserializationPolicy.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nimport { MapperTypeNames } from \"./serializer.js\";\n/**\n * Gets the list of status codes for streaming responses.\n * @internal\n */\nexport function getStreamingResponseStatusCodes(operationSpec) {\n    const result = new Set();\n    for (const statusCode in operationSpec.responses) {\n        const operationResponse = operationSpec.responses[statusCode];\n        if (operationResponse.bodyMapper &&\n            operationResponse.bodyMapper.type.name === MapperTypeNames.Stream) {\n            result.add(Number(statusCode));\n        }\n    }\n    return result;\n}\n/**\n * Get the path to this parameter's value as a dotted string (a.b.c).\n * @param parameter - The parameter to get the path string for.\n * @returns The path to this parameter's value as a dotted string.\n * @internal\n */\nexport function getPathStringFromParameter(parameter) {\n    const { parameterPath, mapper } = parameter;\n    let result;\n    if (typeof parameterPath === \"string\") {\n        result = parameterPath;\n    }\n    else if (Array.isArray(parameterPath)) {\n        result = parameterPath.join(\".\");\n    }\n    else {\n        result = mapper.serializedName;\n    }\n    return result;\n}\n//# sourceMappingURL=interfaceHelpers.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nimport { XML_ATTRKEY, XML_CHARKEY } from \"./interfaces.js\";\nimport { getOperationArgumentValueFromParameter, getOperationRequestInfo, } from \"./operationHelpers.js\";\nimport { MapperTypeNames } from \"./serializer.js\";\nimport { getPathStringFromParameter } from \"./interfaceHelpers.js\";\n/**\n * The programmatic identifier of the serializationPolicy.\n */\nexport const serializationPolicyName = \"serializationPolicy\";\n/**\n * This policy handles assembling the request body and headers using\n * an OperationSpec and OperationArguments on the request.\n */\nexport function serializationPolicy(options = {}) {\n    const stringifyXML = options.stringifyXML;\n    return {\n        name: serializationPolicyName,\n        async sendRequest(request, next) {\n            const operationInfo = getOperationRequestInfo(request);\n            const operationSpec = operationInfo === null || operationInfo === void 0 ? void 0 : operationInfo.operationSpec;\n            const operationArguments = operationInfo === null || operationInfo === void 0 ? void 0 : operationInfo.operationArguments;\n            if (operationSpec && operationArguments) {\n                serializeHeaders(request, operationArguments, operationSpec);\n                serializeRequestBody(request, operationArguments, operationSpec, stringifyXML);\n            }\n            return next(request);\n        },\n    };\n}\n/**\n * @internal\n */\nexport function serializeHeaders(request, operationArguments, operationSpec) {\n    var _a, _b;\n    if (operationSpec.headerParameters) {\n        for (const headerParameter of operationSpec.headerParameters) {\n            let headerValue = getOperationArgumentValueFromParameter(operationArguments, headerParameter);\n            if ((headerValue !== null && headerValue !== undefined) || headerParameter.mapper.required) {\n                headerValue = operationSpec.serializer.serialize(headerParameter.mapper, headerValue, getPathStringFromParameter(headerParameter));\n                const headerCollectionPrefix = headerParameter.mapper\n                    .headerCollectionPrefix;\n                if (headerCollectionPrefix) {\n                    for (const key of Object.keys(headerValue)) {\n                        request.headers.set(headerCollectionPrefix + key, headerValue[key]);\n                    }\n                }\n                else {\n                    request.headers.set(headerParameter.mapper.serializedName || getPathStringFromParameter(headerParameter), headerValue);\n                }\n            }\n        }\n    }\n    const customHeaders = (_b = (_a = operationArguments.options) === null || _a === void 0 ? void 0 : _a.requestOptions) === null || _b === void 0 ? void 0 : _b.customHeaders;\n    if (customHeaders) {\n        for (const customHeaderName of Object.keys(customHeaders)) {\n            request.headers.set(customHeaderName, customHeaders[customHeaderName]);\n        }\n    }\n}\n/**\n * @internal\n */\nexport function serializeRequestBody(request, operationArguments, operationSpec, stringifyXML = function () {\n    throw new Error(\"XML serialization unsupported!\");\n}) {\n    var _a, _b, _c, _d, _e;\n    const serializerOptions = (_a = operationArguments.options) === null || _a === void 0 ? void 0 : _a.serializerOptions;\n    const updatedOptions = {\n        xml: {\n            rootName: (_b = serializerOptions === null || serializerOptions === void 0 ? void 0 : serializerOptions.xml.rootName) !== null && _b !== void 0 ? _b : \"\",\n            includeRoot: (_c = serializerOptions === null || serializerOptions === void 0 ? void 0 : serializerOptions.xml.includeRoot) !== null && _c !== void 0 ? _c : false,\n            xmlCharKey: (_d = serializerOptions === null || serializerOptions === void 0 ? void 0 : serializerOptions.xml.xmlCharKey) !== null && _d !== void 0 ? _d : XML_CHARKEY,\n        },\n    };\n    const xmlCharKey = updatedOptions.xml.xmlCharKey;\n    if (operationSpec.requestBody && operationSpec.requestBody.mapper) {\n        request.body = getOperationArgumentValueFromParameter(operationArguments, operationSpec.requestBody);\n        const bodyMapper = operationSpec.requestBody.mapper;\n        const { required, serializedName, xmlName, xmlElementName, xmlNamespace, xmlNamespacePrefix, nullable, } = bodyMapper;\n        const typeName = bodyMapper.type.name;\n        try {\n            if ((request.body !== undefined && request.body !== null) ||\n                (nullable && request.body === null) ||\n                required) {\n                const requestBodyParameterPathString = getPathStringFromParameter(operationSpec.requestBody);\n                request.body = operationSpec.serializer.serialize(bodyMapper, request.body, requestBodyParameterPathString, updatedOptions);\n                const isStream = typeName === MapperTypeNames.Stream;\n                if (operationSpec.isXML) {\n                    const xmlnsKey = xmlNamespacePrefix ? `xmlns:${xmlNamespacePrefix}` : \"xmlns\";\n                    const value = getXmlValueWithNamespace(xmlNamespace, xmlnsKey, typeName, request.body, updatedOptions);\n                    if (typeName === MapperTypeNames.Sequence) {\n                        request.body = stringifyXML(prepareXMLRootList(value, xmlElementName || xmlName || serializedName, xmlnsKey, xmlNamespace), { rootName: xmlName || serializedName, xmlCharKey });\n                    }\n                    else if (!isStream) {\n                        request.body = stringifyXML(value, {\n                            rootName: xmlName || serializedName,\n                            xmlCharKey,\n                        });\n                    }\n                }\n                else if (typeName === MapperTypeNames.String &&\n                    (((_e = operationSpec.contentType) === null || _e === void 0 ? void 0 : _e.match(\"text/plain\")) || operationSpec.mediaType === \"text\")) {\n                    // the String serializer has validated that request body is a string\n                    // so just send the string.\n                    return;\n                }\n                else if (!isStream) {\n                    request.body = JSON.stringify(request.body);\n                }\n            }\n        }\n        catch (error) {\n            throw new Error(`Error \"${error.message}\" occurred in serializing the payload - ${JSON.stringify(serializedName, undefined, \"  \")}.`);\n        }\n    }\n    else if (operationSpec.formDataParameters && operationSpec.formDataParameters.length > 0) {\n        request.formData = {};\n        for (const formDataParameter of operationSpec.formDataParameters) {\n            const formDataParameterValue = getOperationArgumentValueFromParameter(operationArguments, formDataParameter);\n            if (formDataParameterValue !== undefined && formDataParameterValue !== null) {\n                const formDataParameterPropertyName = formDataParameter.mapper.serializedName || getPathStringFromParameter(formDataParameter);\n                request.formData[formDataParameterPropertyName] = operationSpec.serializer.serialize(formDataParameter.mapper, formDataParameterValue, getPathStringFromParameter(formDataParameter), updatedOptions);\n            }\n        }\n    }\n}\n/**\n * Adds an xml namespace to the xml serialized object if needed, otherwise it just returns the value itself\n */\nfunction getXmlValueWithNamespace(xmlNamespace, xmlnsKey, typeName, serializedValue, options) {\n    // Composite and Sequence schemas already got their root namespace set during serialization\n    // We just need to add xmlns to the other schema types\n    if (xmlNamespace && ![\"Composite\", \"Sequence\", \"Dictionary\"].includes(typeName)) {\n        const result = {};\n        result[options.xml.xmlCharKey] = serializedValue;\n        result[XML_ATTRKEY] = { [xmlnsKey]: xmlNamespace };\n        return result;\n    }\n    return serializedValue;\n}\nfunction prepareXMLRootList(obj, elementName, xmlNamespaceKey, xmlNamespace) {\n    if (!Array.isArray(obj)) {\n        obj = [obj];\n    }\n    if (!xmlNamespaceKey || !xmlNamespace) {\n        return { [elementName]: obj };\n    }\n    const result = { [elementName]: obj };\n    result[XML_ATTRKEY] = { [xmlNamespaceKey]: xmlNamespace };\n    return result;\n}\n//# sourceMappingURL=serializationPolicy.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nimport { createDefaultHttpClient } from \"@azure/core-rest-pipeline\";\nlet cachedHttpClient;\nexport function getCachedDefaultHttpClient() {\n    if (!cachedHttpClient) {\n        cachedHttpClient = createDefaultHttpClient();\n    }\n    return cachedHttpClient;\n}\n//# sourceMappingURL=httpClientCache.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nimport { createDefaultHttpClient as tspCreateDefaultHttpClient } from \"@typespec/ts-http-runtime\";\nimport { wrapAbortSignalLike } from \"./util/wrapAbortSignal.js\";\n/**\n * Create the correct HttpClient for the current environment.\n */\nexport function createDefaultHttpClient() {\n    const client = tspCreateDefaultHttpClient();\n    return {\n        async sendRequest(request) {\n            // we wrap any AbortSignalLike here since the TypeSpec runtime expects a native AbortSignal.\n            // 99% of the time, this should be a no-op since a native AbortSignal is passed in.\n            const { abortSignal, cleanup } = request.abortSignal\n                ? wrapAbortSignalLike(request.abortSignal)\n                : {};\n            try {\n                // eslint-disable-next-line no-param-reassign\n                request.abortSignal = abortSignal;\n                return await client.sendRequest(request);\n            }\n            finally {\n                cleanup === null || cleanup === void 0 ? void 0 : cleanup();\n            }\n        },\n    };\n}\n//# sourceMappingURL=defaultHttpClient.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nimport { getOperationArgumentValueFromParameter } from \"./operationHelpers.js\";\nimport { getPathStringFromParameter } from \"./interfaceHelpers.js\";\nconst CollectionFormatToDelimiterMap = {\n    CSV: \",\",\n    SSV: \" \",\n    Multi: \"Multi\",\n    TSV: \"\\t\",\n    Pipes: \"|\",\n};\nexport function getRequestUrl(baseUri, operationSpec, operationArguments, fallbackObject) {\n    const urlReplacements = calculateUrlReplacements(operationSpec, operationArguments, fallbackObject);\n    let isAbsolutePath = false;\n    let requestUrl = replaceAll(baseUri, urlReplacements);\n    if (operationSpec.path) {\n        let path = replaceAll(operationSpec.path, urlReplacements);\n        // QUIRK: sometimes we get a path component like /{nextLink}\n        // which may be a fully formed URL with a leading /. In that case, we should\n        // remove the leading /\n        if (operationSpec.path === \"/{nextLink}\" && path.startsWith(\"/\")) {\n            path = path.substring(1);\n        }\n        // QUIRK: sometimes we get a path component like {nextLink}\n        // which may be a fully formed URL. In that case, we should\n        // ignore the baseUri.\n        if (isAbsoluteUrl(path)) {\n            requestUrl = path;\n            isAbsolutePath = true;\n        }\n        else {\n            requestUrl = appendPath(requestUrl, path);\n        }\n    }\n    const { queryParams, sequenceParams } = calculateQueryParameters(operationSpec, operationArguments, fallbackObject);\n    /**\n     * Notice that this call sets the `noOverwrite` parameter to true if the `requestUrl`\n     * is an absolute path. This ensures that existing query parameter values in `requestUrl`\n     * do not get overwritten. On the other hand when `requestUrl` is not absolute path, it\n     * is still being built so there is nothing to overwrite.\n     */\n    requestUrl = appendQueryParams(requestUrl, queryParams, sequenceParams, isAbsolutePath);\n    return requestUrl;\n}\nfunction replaceAll(input, replacements) {\n    let result = input;\n    for (const [searchValue, replaceValue] of replacements) {\n        result = result.split(searchValue).join(replaceValue);\n    }\n    return result;\n}\nfunction calculateUrlReplacements(operationSpec, operationArguments, fallbackObject) {\n    var _a;\n    const result = new Map();\n    if ((_a = operationSpec.urlParameters) === null || _a === void 0 ? void 0 : _a.length) {\n        for (const urlParameter of operationSpec.urlParameters) {\n            let urlParameterValue = getOperationArgumentValueFromParameter(operationArguments, urlParameter, fallbackObject);\n            const parameterPathString = getPathStringFromParameter(urlParameter);\n            urlParameterValue = operationSpec.serializer.serialize(urlParameter.mapper, urlParameterValue, parameterPathString);\n            if (!urlParameter.skipEncoding) {\n                urlParameterValue = encodeURIComponent(urlParameterValue);\n            }\n            result.set(`{${urlParameter.mapper.serializedName || parameterPathString}}`, urlParameterValue);\n        }\n    }\n    return result;\n}\nfunction isAbsoluteUrl(url) {\n    return url.includes(\"://\");\n}\nfunction appendPath(url, pathToAppend) {\n    if (!pathToAppend) {\n        return url;\n    }\n    const parsedUrl = new URL(url);\n    let newPath = parsedUrl.pathname;\n    if (!newPath.endsWith(\"/\")) {\n        newPath = `${newPath}/`;\n    }\n    if (pathToAppend.startsWith(\"/\")) {\n        pathToAppend = pathToAppend.substring(1);\n    }\n    const searchStart = pathToAppend.indexOf(\"?\");\n    if (searchStart !== -1) {\n        const path = pathToAppend.substring(0, searchStart);\n        const search = pathToAppend.substring(searchStart + 1);\n        newPath = newPath + path;\n        if (search) {\n            parsedUrl.search = parsedUrl.search ? `${parsedUrl.search}&${search}` : search;\n        }\n    }\n    else {\n        newPath = newPath + pathToAppend;\n    }\n    parsedUrl.pathname = newPath;\n    return parsedUrl.toString();\n}\nfunction calculateQueryParameters(operationSpec, operationArguments, fallbackObject) {\n    var _a;\n    const result = new Map();\n    const sequenceParams = new Set();\n    if ((_a = operationSpec.queryParameters) === null || _a === void 0 ? void 0 : _a.length) {\n        for (const queryParameter of operationSpec.queryParameters) {\n            if (queryParameter.mapper.type.name === \"Sequence\" && queryParameter.mapper.serializedName) {\n                sequenceParams.add(queryParameter.mapper.serializedName);\n            }\n            let queryParameterValue = getOperationArgumentValueFromParameter(operationArguments, queryParameter, fallbackObject);\n            if ((queryParameterValue !== undefined && queryParameterValue !== null) ||\n                queryParameter.mapper.required) {\n                queryParameterValue = operationSpec.serializer.serialize(queryParameter.mapper, queryParameterValue, getPathStringFromParameter(queryParameter));\n                const delimiter = queryParameter.collectionFormat\n                    ? CollectionFormatToDelimiterMap[queryParameter.collectionFormat]\n                    : \"\";\n                if (Array.isArray(queryParameterValue)) {\n                    // replace null and undefined\n                    queryParameterValue = queryParameterValue.map((item) => {\n                        if (item === null || item === undefined) {\n                            return \"\";\n                        }\n                        return item;\n                    });\n                }\n                if (queryParameter.collectionFormat === \"Multi\" && queryParameterValue.length === 0) {\n                    continue;\n                }\n                else if (Array.isArray(queryParameterValue) &&\n                    (queryParameter.collectionFormat === \"SSV\" || queryParameter.collectionFormat === \"TSV\")) {\n                    queryParameterValue = queryParameterValue.join(delimiter);\n                }\n                if (!queryParameter.skipEncoding) {\n                    if (Array.isArray(queryParameterValue)) {\n                        queryParameterValue = queryParameterValue.map((item) => {\n                            return encodeURIComponent(item);\n                        });\n                    }\n                    else {\n                        queryParameterValue = encodeURIComponent(queryParameterValue);\n                    }\n                }\n                // Join pipes and CSV *after* encoding, or the server will be upset.\n                if (Array.isArray(queryParameterValue) &&\n                    (queryParameter.collectionFormat === \"CSV\" || queryParameter.collectionFormat === \"Pipes\")) {\n                    queryParameterValue = queryParameterValue.join(delimiter);\n                }\n                result.set(queryParameter.mapper.serializedName || getPathStringFromParameter(queryParameter), queryParameterValue);\n            }\n        }\n    }\n    return {\n        queryParams: result,\n        sequenceParams,\n    };\n}\nfunction simpleParseQueryParams(queryString) {\n    const result = new Map();\n    if (!queryString || queryString[0] !== \"?\") {\n        return result;\n    }\n    // remove the leading ?\n    queryString = queryString.slice(1);\n    const pairs = queryString.split(\"&\");\n    for (const pair of pairs) {\n        const [name, value] = pair.split(\"=\", 2);\n        const existingValue = result.get(name);\n        if (existingValue) {\n            if (Array.isArray(existingValue)) {\n                existingValue.push(value);\n            }\n            else {\n                result.set(name, [existingValue, value]);\n            }\n        }\n        else {\n            result.set(name, value);\n        }\n    }\n    return result;\n}\n/** @internal */\nexport function appendQueryParams(url, queryParams, sequenceParams, noOverwrite = false) {\n    if (queryParams.size === 0) {\n        return url;\n    }\n    const parsedUrl = new URL(url);\n    // QUIRK: parsedUrl.searchParams will have their name/value pairs decoded, which\n    // can change their meaning to the server, such as in the case of a SAS signature.\n    // To avoid accidentally un-encoding a query param, we parse the key/values ourselves\n    const combinedParams = simpleParseQueryParams(parsedUrl.search);\n    for (const [name, value] of queryParams) {\n        const existingValue = combinedParams.get(name);\n        if (Array.isArray(existingValue)) {\n            if (Array.isArray(value)) {\n                existingValue.push(...value);\n                const valueSet = new Set(existingValue);\n                combinedParams.set(name, Array.from(valueSet));\n            }\n            else {\n                existingValue.push(value);\n            }\n        }\n        else if (existingValue) {\n            if (Array.isArray(value)) {\n                value.unshift(existingValue);\n            }\n            else if (sequenceParams.has(name)) {\n                combinedParams.set(name, [existingValue, value]);\n            }\n            if (!noOverwrite) {\n                combinedParams.set(name, value);\n            }\n        }\n        else {\n            combinedParams.set(name, value);\n        }\n    }\n    const searchPieces = [];\n    for (const [name, value] of combinedParams) {\n        if (typeof value === \"string\") {\n            searchPieces.push(`${name}=${value}`);\n        }\n        else if (Array.isArray(value)) {\n            // QUIRK: If we get an array of values, include multiple key/value pairs\n            for (const subValue of value) {\n                searchPieces.push(`${name}=${subValue}`);\n            }\n        }\n        else {\n            searchPieces.push(`${name}=${value}`);\n        }\n    }\n    // QUIRK: we have to set search manually as searchParams will encode comma when it shouldn't.\n    parsedUrl.search = searchPieces.length ? `?${searchPieces.join(\"&\")}` : \"\";\n    return parsedUrl.toString();\n}\n//# sourceMappingURL=urlHelpers.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nimport { createClientLogger } from \"@azure/logger\";\nexport const logger = createClientLogger(\"core-client\");\n//# sourceMappingURL=log.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nimport { createPipelineRequest } from \"@azure/core-rest-pipeline\";\nimport { createClientPipeline } from \"./pipeline.js\";\nimport { flattenResponse } from \"./utils.js\";\nimport { getCachedDefaultHttpClient } from \"./httpClientCache.js\";\nimport { getOperationRequestInfo } from \"./operationHelpers.js\";\nimport { getRequestUrl } from \"./urlHelpers.js\";\nimport { getStreamingResponseStatusCodes } from \"./interfaceHelpers.js\";\nimport { logger } from \"./log.js\";\n/**\n * Initializes a new instance of the ServiceClient.\n */\nexport class ServiceClient {\n    /**\n     * The ServiceClient constructor\n     * @param options - The service client options that govern the behavior of the client.\n     */\n    constructor(options = {}) {\n        var _a, _b;\n        this._requestContentType = options.requestContentType;\n        this._endpoint = (_a = options.endpoint) !== null && _a !== void 0 ? _a : options.baseUri;\n        if (options.baseUri) {\n            logger.warning(\"The baseUri option for SDK Clients has been deprecated, please use endpoint instead.\");\n        }\n        this._allowInsecureConnection = options.allowInsecureConnection;\n        this._httpClient = options.httpClient || getCachedDefaultHttpClient();\n        this.pipeline = options.pipeline || createDefaultPipeline(options);\n        if ((_b = options.additionalPolicies) === null || _b === void 0 ? void 0 : _b.length) {\n            for (const { policy, position } of options.additionalPolicies) {\n                // Sign happens after Retry and is commonly needed to occur\n                // before policies that intercept post-retry.\n                const afterPhase = position === \"perRetry\" ? \"Sign\" : undefined;\n                this.pipeline.addPolicy(policy, {\n                    afterPhase,\n                });\n            }\n        }\n    }\n    /**\n     * Send the provided httpRequest.\n     */\n    async sendRequest(request) {\n        return this.pipeline.sendRequest(this._httpClient, request);\n    }\n    /**\n     * Send an HTTP request that is populated using the provided OperationSpec.\n     * @typeParam T - The typed result of the request, based on the OperationSpec.\n     * @param operationArguments - The arguments that the HTTP request's templated values will be populated from.\n     * @param operationSpec - The OperationSpec to use to populate the httpRequest.\n     */\n    async sendOperationRequest(operationArguments, operationSpec) {\n        const endpoint = operationSpec.baseUrl || this._endpoint;\n        if (!endpoint) {\n            throw new Error(\"If operationSpec.baseUrl is not specified, then the ServiceClient must have a endpoint string property that contains the base URL to use.\");\n        }\n        // Templatized URLs sometimes reference properties on the ServiceClient child class,\n        // so we have to pass `this` below in order to search these properties if they're\n        // not part of OperationArguments\n        const url = getRequestUrl(endpoint, operationSpec, operationArguments, this);\n        const request = createPipelineRequest({\n            url,\n        });\n        request.method = operationSpec.httpMethod;\n        const operationInfo = getOperationRequestInfo(request);\n        operationInfo.operationSpec = operationSpec;\n        operationInfo.operationArguments = operationArguments;\n        const contentType = operationSpec.contentType || this._requestContentType;\n        if (contentType && operationSpec.requestBody) {\n            request.headers.set(\"Content-Type\", contentType);\n        }\n        const options = operationArguments.options;\n        if (options) {\n            const requestOptions = options.requestOptions;\n            if (requestOptions) {\n                if (requestOptions.timeout) {\n                    request.timeout = requestOptions.timeout;\n                }\n                if (requestOptions.onUploadProgress) {\n                    request.onUploadProgress = requestOptions.onUploadProgress;\n                }\n                if (requestOptions.onDownloadProgress) {\n                    request.onDownloadProgress = requestOptions.onDownloadProgress;\n                }\n                if (requestOptions.shouldDeserialize !== undefined) {\n                    operationInfo.shouldDeserialize = requestOptions.shouldDeserialize;\n                }\n                if (requestOptions.allowInsecureConnection) {\n                    request.allowInsecureConnection = true;\n                }\n            }\n            if (options.abortSignal) {\n                request.abortSignal = options.abortSignal;\n            }\n            if (options.tracingOptions) {\n                request.tracingOptions = options.tracingOptions;\n            }\n        }\n        if (this._allowInsecureConnection) {\n            request.allowInsecureConnection = true;\n        }\n        if (request.streamResponseStatusCodes === undefined) {\n            request.streamResponseStatusCodes = getStreamingResponseStatusCodes(operationSpec);\n        }\n        try {\n            const rawResponse = await this.sendRequest(request);\n            const flatResponse = flattenResponse(rawResponse, operationSpec.responses[rawResponse.status]);\n            if (options === null || options === void 0 ? void 0 : options.onResponse) {\n                options.onResponse(rawResponse, flatResponse);\n            }\n            return flatResponse;\n        }\n        catch (error) {\n            if (typeof error === \"object\" && (error === null || error === void 0 ? void 0 : error.response)) {\n                const rawResponse = error.response;\n                const flatResponse = flattenResponse(rawResponse, operationSpec.responses[error.statusCode] || operationSpec.responses[\"default\"]);\n                error.details = flatResponse;\n                if (options === null || options === void 0 ? void 0 : options.onResponse) {\n                    options.onResponse(rawResponse, flatResponse, error);\n                }\n            }\n            throw error;\n        }\n    }\n}\nfunction createDefaultPipeline(options) {\n    const credentialScopes = getCredentialScopes(options);\n    const credentialOptions = options.credential && credentialScopes\n        ? { credentialScopes, credential: options.credential }\n        : undefined;\n    return createClientPipeline(Object.assign(Object.assign({}, options), { credentialOptions }));\n}\nfunction getCredentialScopes(options) {\n    if (options.credentialScopes) {\n        return options.credentialScopes;\n    }\n    if (options.endpoint) {\n        return `${options.endpoint}/.default`;\n    }\n    if (options.baseUri) {\n        return `${options.baseUri}/.default`;\n    }\n    if (options.credential && !options.credentialScopes) {\n        throw new Error(`When using credentials, the ServiceClientOptions must contain either a endpoint or a credentialScopes. Unable to create a bearerTokenAuthenticationPolicy`);\n    }\n    return undefined;\n}\n//# sourceMappingURL=serviceClient.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nimport { deserializationPolicy } from \"./deserializationPolicy.js\";\nimport { bearerTokenAuthenticationPolicy, createPipelineFromOptions, } from \"@azure/core-rest-pipeline\";\nimport { serializationPolicy } from \"./serializationPolicy.js\";\n/**\n * Creates a new Pipeline for use with a Service Client.\n * Adds in deserializationPolicy by default.\n * Also adds in bearerTokenAuthenticationPolicy if passed a TokenCredential.\n * @param options - Options to customize the created pipeline.\n */\nexport function createClientPipeline(options = {}) {\n    const pipeline = createPipelineFromOptions(options !== null && options !== void 0 ? options : {});\n    if (options.credentialOptions) {\n        pipeline.addPolicy(bearerTokenAuthenticationPolicy({\n            credential: options.credentialOptions.credential,\n            scopes: options.credentialOptions.credentialScopes,\n        }));\n    }\n    pipeline.addPolicy(serializationPolicy(options.serializationOptions), { phase: \"Serialize\" });\n    pipeline.addPolicy(deserializationPolicy(options.deserializationOptions), {\n        phase: \"Deserialize\",\n    });\n    return pipeline;\n}\n//# sourceMappingURL=pipeline.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nconst DefaultScopeSuffix = \"/.default\";\n/**\n * Error message for Service Fabric Managed Identity environment.\n */\nexport const serviceFabricErrorMessage = \"Specifying a `clientId` or `resourceId` is not supported by the Service Fabric managed identity environment. The managed identity configuration is determined by the Service Fabric cluster resource configuration. See https://aka.ms/servicefabricmi for more information\";\n/**\n * Most MSIs send requests to the IMDS endpoint, or a similar endpoint.\n * These are GET requests that require sending a `resource` parameter on the query.\n * This resource can be derived from the scopes received through the getToken call, as long as only one scope is received.\n * Multiple scopes assume that the resulting token will have access to multiple resources, which won't be the case.\n *\n * For that reason, when we encounter multiple scopes, we return undefined.\n * It's up to the individual MSI implementations to throw the errors (which helps us provide less generic errors).\n */\nexport function mapScopesToResource(scopes) {\n    let scope = \"\";\n    if (Array.isArray(scopes)) {\n        if (scopes.length !== 1) {\n            return;\n        }\n        scope = scopes[0];\n    }\n    else if (typeof scopes === \"string\") {\n        scope = scopes;\n    }\n    if (!scope.endsWith(DefaultScopeSuffix)) {\n        return scope;\n    }\n    return scope.substr(0, scope.lastIndexOf(DefaultScopeSuffix));\n}\n/**\n * Given a token response, return the expiration timestamp as the number of milliseconds from the Unix epoch.\n * @param body - A parsed response body from the authentication endpoint.\n */\nexport function parseExpirationTimestamp(body) {\n    if (typeof body.expires_on === \"number\") {\n        return body.expires_on * 1000;\n    }\n    if (typeof body.expires_on === \"string\") {\n        const asNumber = +body.expires_on;\n        if (!isNaN(asNumber)) {\n            return asNumber * 1000;\n        }\n        const asDate = Date.parse(body.expires_on);\n        if (!isNaN(asDate)) {\n            return asDate;\n        }\n    }\n    if (typeof body.expires_in === \"number\") {\n        return Date.now() + body.expires_in * 1000;\n    }\n    throw new Error(`Failed to parse token expiration from body. expires_in=\"${body.expires_in}\", expires_on=\"${body.expires_on}\"`);\n}\n/**\n * Given a token response, return the expiration timestamp as the number of milliseconds from the Unix epoch.\n * @param body - A parsed response body from the authentication endpoint.\n */\nexport function parseRefreshTimestamp(body) {\n    if (body.refresh_on) {\n        if (typeof body.refresh_on === \"number\") {\n            return body.refresh_on * 1000;\n        }\n        if (typeof body.refresh_on === \"string\") {\n            const asNumber = +body.refresh_on;\n            if (!isNaN(asNumber)) {\n                return asNumber * 1000;\n            }\n            const asDate = Date.parse(body.refresh_on);\n            if (!isNaN(asDate)) {\n                return asDate;\n            }\n        }\n        throw new Error(`Failed to parse refresh_on from body. refresh_on=\"${body.refresh_on}\"`);\n    }\n    else {\n        return undefined;\n    }\n}\n//# sourceMappingURL=utils.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nimport { ServiceClient } from \"@azure/core-client\";\nimport { isNode } from \"@azure/core-util\";\nimport { createHttpHeaders, createPipelineRequest } from \"@azure/core-rest-pipeline\";\nimport { AuthenticationError, AuthenticationErrorName } from \"../errors.js\";\nimport { getIdentityTokenEndpointSuffix } from \"../util/identityTokenEndpoint.js\";\nimport { DefaultAuthorityHost, SDK_VERSION } from \"../constants.js\";\nimport { tracingClient } from \"../util/tracing.js\";\nimport { logger } from \"../util/logging.js\";\nimport { parseExpirationTimestamp, parseRefreshTimestamp, } from \"../credentials/managedIdentityCredential/utils.js\";\nconst noCorrelationId = \"noCorrelationId\";\n/**\n * @internal\n */\nexport function getIdentityClientAuthorityHost(options) {\n    // The authorityHost can come from options or from the AZURE_AUTHORITY_HOST environment variable.\n    let authorityHost = options?.authorityHost;\n    // The AZURE_AUTHORITY_HOST environment variable can only be provided in Node.js.\n    if (isNode) {\n        authorityHost = authorityHost ?? process.env.AZURE_AUTHORITY_HOST;\n    }\n    // If the authorityHost is not provided, we use the default one from the public cloud: https://login.microsoftonline.com\n    return authorityHost ?? DefaultAuthorityHost;\n}\n/**\n * The network module used by the Identity credentials.\n *\n * It allows for credentials to abort any pending request independently of the MSAL flow,\n * by calling to the `abortRequests()` method.\n *\n */\nexport class IdentityClient extends ServiceClient {\n    authorityHost;\n    allowLoggingAccountIdentifiers;\n    abortControllers;\n    allowInsecureConnection = false;\n    // used for WorkloadIdentity\n    tokenCredentialOptions;\n    constructor(options) {\n        const packageDetails = `azsdk-js-identity/${SDK_VERSION}`;\n        const userAgentPrefix = options?.userAgentOptions?.userAgentPrefix\n            ? `${options.userAgentOptions.userAgentPrefix} ${packageDetails}`\n            : `${packageDetails}`;\n        const baseUri = getIdentityClientAuthorityHost(options);\n        if (!baseUri.startsWith(\"https:\")) {\n            throw new Error(\"The authorityHost address must use the 'https' protocol.\");\n        }\n        super({\n            requestContentType: \"application/json; charset=utf-8\",\n            retryOptions: {\n                maxRetries: 3,\n            },\n            ...options,\n            userAgentOptions: {\n                userAgentPrefix,\n            },\n            baseUri,\n        });\n        this.authorityHost = baseUri;\n        this.abortControllers = new Map();\n        this.allowLoggingAccountIdentifiers = options?.loggingOptions?.allowLoggingAccountIdentifiers;\n        // used for WorkloadIdentity\n        this.tokenCredentialOptions = { ...options };\n        // used for ManagedIdentity\n        if (options?.allowInsecureConnection) {\n            this.allowInsecureConnection = options.allowInsecureConnection;\n        }\n    }\n    async sendTokenRequest(request) {\n        logger.info(`IdentityClient: sending token request to [${request.url}]`);\n        const response = await this.sendRequest(request);\n        if (response.bodyAsText && (response.status === 200 || response.status === 201)) {\n            const parsedBody = JSON.parse(response.bodyAsText);\n            if (!parsedBody.access_token) {\n                return null;\n            }\n            this.logIdentifiers(response);\n            const token = {\n                accessToken: {\n                    token: parsedBody.access_token,\n                    expiresOnTimestamp: parseExpirationTimestamp(parsedBody),\n                    refreshAfterTimestamp: parseRefreshTimestamp(parsedBody),\n                    tokenType: \"Bearer\",\n                },\n                refreshToken: parsedBody.refresh_token,\n            };\n            logger.info(`IdentityClient: [${request.url}] token acquired, expires on ${token.accessToken.expiresOnTimestamp}`);\n            return token;\n        }\n        else {\n            const error = new AuthenticationError(response.status, response.bodyAsText);\n            logger.warning(`IdentityClient: authentication error. HTTP status: ${response.status}, ${error.errorResponse.errorDescription}`);\n            throw error;\n        }\n    }\n    async refreshAccessToken(tenantId, clientId, scopes, refreshToken, clientSecret, options = {}) {\n        if (refreshToken === undefined) {\n            return null;\n        }\n        logger.info(`IdentityClient: refreshing access token with client ID: ${clientId}, scopes: ${scopes} started`);\n        const refreshParams = {\n            grant_type: \"refresh_token\",\n            client_id: clientId,\n            refresh_token: refreshToken,\n            scope: scopes,\n        };\n        if (clientSecret !== undefined) {\n            refreshParams.client_secret = clientSecret;\n        }\n        const query = new URLSearchParams(refreshParams);\n        return tracingClient.withSpan(\"IdentityClient.refreshAccessToken\", options, async (updatedOptions) => {\n            try {\n                const urlSuffix = getIdentityTokenEndpointSuffix(tenantId);\n                const request = createPipelineRequest({\n                    url: `${this.authorityHost}/${tenantId}/${urlSuffix}`,\n                    method: \"POST\",\n                    body: query.toString(),\n                    abortSignal: options.abortSignal,\n                    headers: createHttpHeaders({\n                        Accept: \"application/json\",\n                        \"Content-Type\": \"application/x-www-form-urlencoded\",\n                    }),\n                    tracingOptions: updatedOptions.tracingOptions,\n                });\n                const response = await this.sendTokenRequest(request);\n                logger.info(`IdentityClient: refreshed token for client ID: ${clientId}`);\n                return response;\n            }\n            catch (err) {\n                if (err.name === AuthenticationErrorName &&\n                    err.errorResponse.error === \"interaction_required\") {\n                    // It's likely that the refresh token has expired, so\n                    // return null so that the credential implementation will\n                    // initiate the authentication flow again.\n                    logger.info(`IdentityClient: interaction required for client ID: ${clientId}`);\n                    return null;\n                }\n                else {\n                    logger.warning(`IdentityClient: failed refreshing token for client ID: ${clientId}: ${err}`);\n                    throw err;\n                }\n            }\n        });\n    }\n    // Here is a custom layer that allows us to abort requests that go through MSAL,\n    // since MSAL doesn't allow us to pass options all the way through.\n    generateAbortSignal(correlationId) {\n        const controller = new AbortController();\n        const controllers = this.abortControllers.get(correlationId) || [];\n        controllers.push(controller);\n        this.abortControllers.set(correlationId, controllers);\n        const existingOnAbort = controller.signal.onabort;\n        controller.signal.onabort = (...params) => {\n            this.abortControllers.set(correlationId, undefined);\n            if (existingOnAbort) {\n                existingOnAbort.apply(controller.signal, params);\n            }\n        };\n        return controller.signal;\n    }\n    abortRequests(correlationId) {\n        const key = correlationId || noCorrelationId;\n        const controllers = [\n            ...(this.abortControllers.get(key) || []),\n            // MSAL passes no correlation ID to the get requests...\n            ...(this.abortControllers.get(noCorrelationId) || []),\n        ];\n        if (!controllers.length) {\n            return;\n        }\n        for (const controller of controllers) {\n            controller.abort();\n        }\n        this.abortControllers.set(key, undefined);\n    }\n    getCorrelationId(options) {\n        const parameter = options?.body\n            ?.split(\"&\")\n            .map((part) => part.split(\"=\"))\n            .find(([key]) => key === \"client-request-id\");\n        return parameter && parameter.length ? parameter[1] || noCorrelationId : noCorrelationId;\n    }\n    // The MSAL network module methods follow\n    async sendGetRequestAsync(url, options) {\n        const request = createPipelineRequest({\n            url,\n            method: \"GET\",\n            body: options?.body,\n            allowInsecureConnection: this.allowInsecureConnection,\n            headers: createHttpHeaders(options?.headers),\n            abortSignal: this.generateAbortSignal(noCorrelationId),\n        });\n        const response = await this.sendRequest(request);\n        this.logIdentifiers(response);\n        return {\n            body: response.bodyAsText ? JSON.parse(response.bodyAsText) : undefined,\n            headers: response.headers.toJSON(),\n            status: response.status,\n        };\n    }\n    async sendPostRequestAsync(url, options) {\n        const request = createPipelineRequest({\n            url,\n            method: \"POST\",\n            body: options?.body,\n            headers: createHttpHeaders(options?.headers),\n            allowInsecureConnection: this.allowInsecureConnection,\n            // MSAL doesn't send the correlation ID on the get requests.\n            abortSignal: this.generateAbortSignal(this.getCorrelationId(options)),\n        });\n        const response = await this.sendRequest(request);\n        this.logIdentifiers(response);\n        return {\n            body: response.bodyAsText ? JSON.parse(response.bodyAsText) : undefined,\n            headers: response.headers.toJSON(),\n            status: response.status,\n        };\n    }\n    /**\n     *\n     * @internal\n     */\n    getTokenCredentialOptions() {\n        return this.tokenCredentialOptions;\n    }\n    /**\n     * If allowLoggingAccountIdentifiers was set on the constructor options\n     * we try to log the account identifiers by parsing the received access token.\n     *\n     * The account identifiers we try to log are:\n     * - `appid`: The application or Client Identifier.\n     * - `upn`: User Principal Name.\n     *   - It might not be available in some authentication scenarios.\n     *   - If it's not available, we put a placeholder: \"No User Principal Name available\".\n     * - `tid`: Tenant Identifier.\n     * - `oid`: Object Identifier of the authenticated user.\n     */\n    logIdentifiers(response) {\n        if (!this.allowLoggingAccountIdentifiers || !response.bodyAsText) {\n            return;\n        }\n        const unavailableUpn = \"No User Principal Name available\";\n        try {\n            const parsed = response.parsedBody || JSON.parse(response.bodyAsText);\n            const accessToken = parsed.access_token;\n            if (!accessToken) {\n                // Without an access token allowLoggingAccountIdentifiers isn't useful.\n                return;\n            }\n            const base64Metadata = accessToken.split(\".\")[1];\n            const { appid, upn, tid, oid } = JSON.parse(Buffer.from(base64Metadata, \"base64\").toString(\"utf8\"));\n            logger.info(`[Authenticated account] Client ID: ${appid}. Tenant ID: ${tid}. User Principal Name: ${upn || unavailableUpn}. Object ID (user): ${oid}`);\n        }\n        catch (e) {\n            logger.warning(\"allowLoggingAccountIdentifiers was set, but we couldn't log the account information. Error:\", e.message);\n        }\n    }\n}\n//# sourceMappingURL=identityClient.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nexport function getIdentityTokenEndpointSuffix(tenantId) {\n    if (tenantId === \"adfs\") {\n        return \"oauth2/token\";\n    }\n    else {\n        return \"oauth2/v2.0/token\";\n    }\n}\n//# sourceMappingURL=identityTokenEndpoint.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n/**\n * Helps specify a regional authority, or \"AutoDiscoverRegion\" to auto-detect the region.\n */\nexport var RegionalAuthority;\n(function (RegionalAuthority) {\n    /** Instructs MSAL to attempt to discover the region */\n    RegionalAuthority[\"AutoDiscoverRegion\"] = \"AutoDiscoverRegion\";\n    /** Uses the {@link RegionalAuthority} for the Azure 'westus' region. */\n    RegionalAuthority[\"USWest\"] = \"westus\";\n    /** Uses the {@link RegionalAuthority} for the Azure 'westus2' region. */\n    RegionalAuthority[\"USWest2\"] = \"westus2\";\n    /** Uses the {@link RegionalAuthority} for the Azure 'centralus' region. */\n    RegionalAuthority[\"USCentral\"] = \"centralus\";\n    /** Uses the {@link RegionalAuthority} for the Azure 'eastus' region. */\n    RegionalAuthority[\"USEast\"] = \"eastus\";\n    /** Uses the {@link RegionalAuthority} for the Azure 'eastus2' region. */\n    RegionalAuthority[\"USEast2\"] = \"eastus2\";\n    /** Uses the {@link RegionalAuthority} for the Azure 'northcentralus' region. */\n    RegionalAuthority[\"USNorthCentral\"] = \"northcentralus\";\n    /** Uses the {@link RegionalAuthority} for the Azure 'southcentralus' region. */\n    RegionalAuthority[\"USSouthCentral\"] = \"southcentralus\";\n    /** Uses the {@link RegionalAuthority} for the Azure 'westcentralus' region. */\n    RegionalAuthority[\"USWestCentral\"] = \"westcentralus\";\n    /** Uses the {@link RegionalAuthority} for the Azure 'canadacentral' region. */\n    RegionalAuthority[\"CanadaCentral\"] = \"canadacentral\";\n    /** Uses the {@link RegionalAuthority} for the Azure 'canadaeast' region. */\n    RegionalAuthority[\"CanadaEast\"] = \"canadaeast\";\n    /** Uses the {@link RegionalAuthority} for the Azure 'brazilsouth' region. */\n    RegionalAuthority[\"BrazilSouth\"] = \"brazilsouth\";\n    /** Uses the {@link RegionalAuthority} for the Azure 'northeurope' region. */\n    RegionalAuthority[\"EuropeNorth\"] = \"northeurope\";\n    /** Uses the {@link RegionalAuthority} for the Azure 'westeurope' region. */\n    RegionalAuthority[\"EuropeWest\"] = \"westeurope\";\n    /** Uses the {@link RegionalAuthority} for the Azure 'uksouth' region. */\n    RegionalAuthority[\"UKSouth\"] = \"uksouth\";\n    /** Uses the {@link RegionalAuthority} for the Azure 'ukwest' region. */\n    RegionalAuthority[\"UKWest\"] = \"ukwest\";\n    /** Uses the {@link RegionalAuthority} for the Azure 'francecentral' region. */\n    RegionalAuthority[\"FranceCentral\"] = \"francecentral\";\n    /** Uses the {@link RegionalAuthority} for the Azure 'francesouth' region. */\n    RegionalAuthority[\"FranceSouth\"] = \"francesouth\";\n    /** Uses the {@link RegionalAuthority} for the Azure 'switzerlandnorth' region. */\n    RegionalAuthority[\"SwitzerlandNorth\"] = \"switzerlandnorth\";\n    /** Uses the {@link RegionalAuthority} for the Azure 'switzerlandwest' region. */\n    RegionalAuthority[\"SwitzerlandWest\"] = \"switzerlandwest\";\n    /** Uses the {@link RegionalAuthority} for the Azure 'germanynorth' region. */\n    RegionalAuthority[\"GermanyNorth\"] = \"germanynorth\";\n    /** Uses the {@link RegionalAuthority} for the Azure 'germanywestcentral' region. */\n    RegionalAuthority[\"GermanyWestCentral\"] = \"germanywestcentral\";\n    /** Uses the {@link RegionalAuthority} for the Azure 'norwaywest' region. */\n    RegionalAuthority[\"NorwayWest\"] = \"norwaywest\";\n    /** Uses the {@link RegionalAuthority} for the Azure 'norwayeast' region. */\n    RegionalAuthority[\"NorwayEast\"] = \"norwayeast\";\n    /** Uses the {@link RegionalAuthority} for the Azure 'eastasia' region. */\n    RegionalAuthority[\"AsiaEast\"] = \"eastasia\";\n    /** Uses the {@link RegionalAuthority} for the Azure 'southeastasia' region. */\n    RegionalAuthority[\"AsiaSouthEast\"] = \"southeastasia\";\n    /** Uses the {@link RegionalAuthority} for the Azure 'japaneast' region. */\n    RegionalAuthority[\"JapanEast\"] = \"japaneast\";\n    /** Uses the {@link RegionalAuthority} for the Azure 'japanwest' region. */\n    RegionalAuthority[\"JapanWest\"] = \"japanwest\";\n    /** Uses the {@link RegionalAuthority} for the Azure 'australiaeast' region. */\n    RegionalAuthority[\"AustraliaEast\"] = \"australiaeast\";\n    /** Uses the {@link RegionalAuthority} for the Azure 'australiasoutheast' region. */\n    RegionalAuthority[\"AustraliaSouthEast\"] = \"australiasoutheast\";\n    /** Uses the {@link RegionalAuthority} for the Azure 'australiacentral' region. */\n    RegionalAuthority[\"AustraliaCentral\"] = \"australiacentral\";\n    /** Uses the {@link RegionalAuthority} for the Azure 'australiacentral2' region. */\n    RegionalAuthority[\"AustraliaCentral2\"] = \"australiacentral2\";\n    /** Uses the {@link RegionalAuthority} for the Azure 'centralindia' region. */\n    RegionalAuthority[\"IndiaCentral\"] = \"centralindia\";\n    /** Uses the {@link RegionalAuthority} for the Azure 'southindia' region. */\n    RegionalAuthority[\"IndiaSouth\"] = \"southindia\";\n    /** Uses the {@link RegionalAuthority} for the Azure 'westindia' region. */\n    RegionalAuthority[\"IndiaWest\"] = \"westindia\";\n    /** Uses the {@link RegionalAuthority} for the Azure 'koreasouth' region. */\n    RegionalAuthority[\"KoreaSouth\"] = \"koreasouth\";\n    /** Uses the {@link RegionalAuthority} for the Azure 'koreacentral' region. */\n    RegionalAuthority[\"KoreaCentral\"] = \"koreacentral\";\n    /** Uses the {@link RegionalAuthority} for the Azure 'uaecentral' region. */\n    RegionalAuthority[\"UAECentral\"] = \"uaecentral\";\n    /** Uses the {@link RegionalAuthority} for the Azure 'uaenorth' region. */\n    RegionalAuthority[\"UAENorth\"] = \"uaenorth\";\n    /** Uses the {@link RegionalAuthority} for the Azure 'southafricanorth' region. */\n    RegionalAuthority[\"SouthAfricaNorth\"] = \"southafricanorth\";\n    /** Uses the {@link RegionalAuthority} for the Azure 'southafricawest' region. */\n    RegionalAuthority[\"SouthAfricaWest\"] = \"southafricawest\";\n    /** Uses the {@link RegionalAuthority} for the Azure 'chinanorth' region. */\n    RegionalAuthority[\"ChinaNorth\"] = \"chinanorth\";\n    /** Uses the {@link RegionalAuthority} for the Azure 'chinaeast' region. */\n    RegionalAuthority[\"ChinaEast\"] = \"chinaeast\";\n    /** Uses the {@link RegionalAuthority} for the Azure 'chinanorth2' region. */\n    RegionalAuthority[\"ChinaNorth2\"] = \"chinanorth2\";\n    /** Uses the {@link RegionalAuthority} for the Azure 'chinaeast2' region. */\n    RegionalAuthority[\"ChinaEast2\"] = \"chinaeast2\";\n    /** Uses the {@link RegionalAuthority} for the Azure 'germanycentral' region. */\n    RegionalAuthority[\"GermanyCentral\"] = \"germanycentral\";\n    /** Uses the {@link RegionalAuthority} for the Azure 'germanynortheast' region. */\n    RegionalAuthority[\"GermanyNorthEast\"] = \"germanynortheast\";\n    /** Uses the {@link RegionalAuthority} for the Azure 'usgovvirginia' region. */\n    RegionalAuthority[\"GovernmentUSVirginia\"] = \"usgovvirginia\";\n    /** Uses the {@link RegionalAuthority} for the Azure 'usgoviowa' region. */\n    RegionalAuthority[\"GovernmentUSIowa\"] = \"usgoviowa\";\n    /** Uses the {@link RegionalAuthority} for the Azure 'usgovarizona' region. */\n    RegionalAuthority[\"GovernmentUSArizona\"] = \"usgovarizona\";\n    /** Uses the {@link RegionalAuthority} for the Azure 'usgovtexas' region. */\n    RegionalAuthority[\"GovernmentUSTexas\"] = \"usgovtexas\";\n    /** Uses the {@link RegionalAuthority} for the Azure 'usdodeast' region. */\n    RegionalAuthority[\"GovernmentUSDodEast\"] = \"usdodeast\";\n    /** Uses the {@link RegionalAuthority} for the Azure 'usdodcentral' region. */\n    RegionalAuthority[\"GovernmentUSDodCentral\"] = \"usdodcentral\";\n})(RegionalAuthority || (RegionalAuthority = {}));\n/**\n * Calculates the correct regional authority based on the supplied value\n * and the AZURE_REGIONAL_AUTHORITY_NAME environment variable.\n *\n * Values will be returned verbatim, except for {@link RegionalAuthority.AutoDiscoverRegion}\n * which is mapped to a value MSAL can understand.\n *\n * @internal\n */\nexport function calculateRegionalAuthority(regionalAuthority) {\n    // Note: as of today only 3 credentials support regional authority, and the parameter\n    // is not exposed via the public API. Regional Authority is _only_ supported\n    // via the AZURE_REGIONAL_AUTHORITY_NAME env var and _only_ for: ClientSecretCredential, ClientCertificateCredential, and ClientAssertionCredential.\n    // Accepting the regionalAuthority parameter will allow us to support it in the future.\n    let azureRegion = regionalAuthority;\n    if (azureRegion === undefined &&\n        globalThis.process?.env?.AZURE_REGIONAL_AUTHORITY_NAME !== undefined) {\n        azureRegion = process.env.AZURE_REGIONAL_AUTHORITY_NAME;\n    }\n    if (azureRegion === RegionalAuthority.AutoDiscoverRegion) {\n        return \"AUTO_DISCOVER\";\n    }\n    return azureRegion;\n}\n//# sourceMappingURL=regionalAuthority.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nimport { CredentialUnavailableError } from \"../errors.js\";\nfunction createConfigurationErrorMessage(tenantId) {\n    return `The current credential is not configured to acquire tokens for tenant ${tenantId}. To enable acquiring tokens for this tenant add it to the AdditionallyAllowedTenants on the credential options, or add \"*\" to AdditionallyAllowedTenants to allow acquiring tokens for any tenant.`;\n}\n/**\n * Of getToken contains a tenantId, this functions allows picking this tenantId as the appropriate for authentication,\n * unless multitenant authentication has been disabled through the AZURE_IDENTITY_DISABLE_MULTITENANTAUTH (on Node.js),\n * or unless the original tenant Id is `adfs`.\n * @internal\n */\nexport function processMultiTenantRequest(tenantId, getTokenOptions, additionallyAllowedTenantIds = [], logger) {\n    let resolvedTenantId;\n    if (process.env.AZURE_IDENTITY_DISABLE_MULTITENANTAUTH) {\n        resolvedTenantId = tenantId;\n    }\n    else if (tenantId === \"adfs\") {\n        resolvedTenantId = tenantId;\n    }\n    else {\n        resolvedTenantId = getTokenOptions?.tenantId ?? tenantId;\n    }\n    if (tenantId &&\n        resolvedTenantId !== tenantId &&\n        !additionallyAllowedTenantIds.includes(\"*\") &&\n        !additionallyAllowedTenantIds.some((t) => t.localeCompare(resolvedTenantId) === 0)) {\n        const message = createConfigurationErrorMessage(resolvedTenantId);\n        logger?.info(message);\n        throw new CredentialUnavailableError(message);\n    }\n    return resolvedTenantId;\n}\n//# sourceMappingURL=processMultiTenantRequest.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nimport { ALL_TENANTS, DeveloperSignOnClientId } from \"../constants.js\";\nimport { formatError } from \"./logging.js\";\nexport { processMultiTenantRequest } from \"./processMultiTenantRequest.js\";\n/**\n * @internal\n */\nexport function checkTenantId(logger, tenantId) {\n    if (!tenantId.match(/^[0-9a-zA-Z-.]+$/)) {\n        const error = new Error(\"Invalid tenant id provided. You can locate your tenant id by following the instructions listed here: https://learn.microsoft.com/partner-center/find-ids-and-domain-names.\");\n        logger.info(formatError(\"\", error));\n        throw error;\n    }\n}\n/**\n * @internal\n */\nexport function resolveTenantId(logger, tenantId, clientId) {\n    if (tenantId) {\n        checkTenantId(logger, tenantId);\n        return tenantId;\n    }\n    if (!clientId) {\n        clientId = DeveloperSignOnClientId;\n    }\n    if (clientId !== DeveloperSignOnClientId) {\n        return \"common\";\n    }\n    return \"organizations\";\n}\n/**\n * @internal\n */\nexport function resolveAdditionallyAllowedTenantIds(additionallyAllowedTenants) {\n    if (!additionallyAllowedTenants || additionallyAllowedTenants.length === 0) {\n        return [];\n    }\n    if (additionallyAllowedTenants.includes(\"*\")) {\n        return ALL_TENANTS;\n    }\n    return additionallyAllowedTenants;\n}\n//# sourceMappingURL=tenantIdUtils.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nimport * as msal from \"@azure/msal-node\";\nimport { credentialLogger, formatSuccess } from \"../../util/logging.js\";\nimport { msalPlugins } from \"./msalPlugins.js\";\nimport { defaultLoggerCallback, ensureValidMsalToken, getAuthority, getAuthorityHost, getKnownAuthorities, getMSALLogLevel, handleMsalError, msalToPublic, publicToMsal, } from \"../utils.js\";\nimport { AuthenticationRequiredError } from \"../../errors.js\";\nimport { IdentityClient } from \"../../client/identityClient.js\";\nimport { calculateRegionalAuthority } from \"../../regionalAuthority.js\";\nimport { getLogLevel } from \"@azure/logger\";\nimport { resolveTenantId } from \"../../util/tenantIdUtils.js\";\n/**\n * The default logger used if no logger was passed in by the credential.\n */\nconst msalLogger = credentialLogger(\"MsalClient\");\n/**\n * Generates the configuration for MSAL (Microsoft Authentication Library).\n *\n * @param clientId - The client ID of the application.\n * @param  tenantId - The tenant ID of the Azure Active Directory.\n * @param  msalClientOptions - Optional. Additional options for creating the MSAL client.\n * @returns  The MSAL configuration object.\n */\nexport function generateMsalConfiguration(clientId, tenantId, msalClientOptions = {}) {\n    const resolvedTenant = resolveTenantId(msalClientOptions.logger ?? msalLogger, tenantId, clientId);\n    // TODO: move and reuse getIdentityClientAuthorityHost\n    const authority = getAuthority(resolvedTenant, getAuthorityHost(msalClientOptions));\n    const httpClient = new IdentityClient({\n        ...msalClientOptions.tokenCredentialOptions,\n        authorityHost: authority,\n        loggingOptions: msalClientOptions.loggingOptions,\n    });\n    const msalConfig = {\n        auth: {\n            clientId,\n            authority,\n            knownAuthorities: getKnownAuthorities(resolvedTenant, authority, msalClientOptions.disableInstanceDiscovery),\n        },\n        system: {\n            networkClient: httpClient,\n            loggerOptions: {\n                loggerCallback: defaultLoggerCallback(msalClientOptions.logger ?? msalLogger),\n                logLevel: getMSALLogLevel(getLogLevel()),\n                piiLoggingEnabled: msalClientOptions.loggingOptions?.enableUnsafeSupportLogging,\n            },\n        },\n    };\n    return msalConfig;\n}\n/**\n * Creates an instance of the MSAL (Microsoft Authentication Library) client.\n *\n * @param clientId - The client ID of the application.\n * @param tenantId - The tenant ID of the Azure Active Directory.\n * @param createMsalClientOptions - Optional. Additional options for creating the MSAL client.\n * @returns An instance of the MSAL client.\n *\n * @public\n */\nexport function createMsalClient(clientId, tenantId, createMsalClientOptions = {}) {\n    const state = {\n        msalConfig: generateMsalConfiguration(clientId, tenantId, createMsalClientOptions),\n        cachedAccount: createMsalClientOptions.authenticationRecord\n            ? publicToMsal(createMsalClientOptions.authenticationRecord)\n            : null,\n        pluginConfiguration: msalPlugins.generatePluginConfiguration(createMsalClientOptions),\n        logger: createMsalClientOptions.logger ?? msalLogger,\n    };\n    const publicApps = new Map();\n    async function getPublicApp(options = {}) {\n        const appKey = options.enableCae ? \"CAE\" : \"default\";\n        let publicClientApp = publicApps.get(appKey);\n        if (publicClientApp) {\n            state.logger.getToken.info(\"Existing PublicClientApplication found in cache, returning it.\");\n            return publicClientApp;\n        }\n        // Initialize a new app and cache it\n        state.logger.getToken.info(`Creating new PublicClientApplication with CAE ${options.enableCae ? \"enabled\" : \"disabled\"}.`);\n        const cachePlugin = options.enableCae\n            ? state.pluginConfiguration.cache.cachePluginCae\n            : state.pluginConfiguration.cache.cachePlugin;\n        state.msalConfig.auth.clientCapabilities = options.enableCae ? [\"cp1\"] : undefined;\n        publicClientApp = new msal.PublicClientApplication({\n            ...state.msalConfig,\n            broker: { nativeBrokerPlugin: state.pluginConfiguration.broker.nativeBrokerPlugin },\n            cache: { cachePlugin: await cachePlugin },\n        });\n        publicApps.set(appKey, publicClientApp);\n        return publicClientApp;\n    }\n    const confidentialApps = new Map();\n    async function getConfidentialApp(options = {}) {\n        const appKey = options.enableCae ? \"CAE\" : \"default\";\n        let confidentialClientApp = confidentialApps.get(appKey);\n        if (confidentialClientApp) {\n            state.logger.getToken.info(\"Existing ConfidentialClientApplication found in cache, returning it.\");\n            return confidentialClientApp;\n        }\n        // Initialize a new app and cache it\n        state.logger.getToken.info(`Creating new ConfidentialClientApplication with CAE ${options.enableCae ? \"enabled\" : \"disabled\"}.`);\n        const cachePlugin = options.enableCae\n            ? state.pluginConfiguration.cache.cachePluginCae\n            : state.pluginConfiguration.cache.cachePlugin;\n        state.msalConfig.auth.clientCapabilities = options.enableCae ? [\"cp1\"] : undefined;\n        confidentialClientApp = new msal.ConfidentialClientApplication({\n            ...state.msalConfig,\n            broker: { nativeBrokerPlugin: state.pluginConfiguration.broker.nativeBrokerPlugin },\n            cache: { cachePlugin: await cachePlugin },\n        });\n        confidentialApps.set(appKey, confidentialClientApp);\n        return confidentialClientApp;\n    }\n    async function getTokenSilent(app, scopes, options = {}) {\n        if (state.cachedAccount === null) {\n            state.logger.getToken.info(\"No cached account found in local state.\");\n            throw new AuthenticationRequiredError({ scopes });\n        }\n        // Keep track and reuse the claims we received across challenges\n        if (options.claims) {\n            state.cachedClaims = options.claims;\n        }\n        const silentRequest = {\n            account: state.cachedAccount,\n            scopes,\n            claims: state.cachedClaims,\n        };\n        if (state.pluginConfiguration.broker.isEnabled) {\n            silentRequest.tokenQueryParameters ||= {};\n            if (state.pluginConfiguration.broker.enableMsaPassthrough) {\n                silentRequest.tokenQueryParameters[\"msal_request_type\"] = \"consumer_passthrough\";\n            }\n        }\n        if (options.proofOfPossessionOptions) {\n            silentRequest.shrNonce = options.proofOfPossessionOptions.nonce;\n            silentRequest.authenticationScheme = \"pop\";\n            silentRequest.resourceRequestMethod = options.proofOfPossessionOptions.resourceRequestMethod;\n            silentRequest.resourceRequestUri = options.proofOfPossessionOptions.resourceRequestUrl;\n        }\n        state.logger.getToken.info(\"Attempting to acquire token silently\");\n        try {\n            return await app.acquireTokenSilent(silentRequest);\n        }\n        catch (err) {\n            throw handleMsalError(scopes, err, options);\n        }\n    }\n    /**\n     * Builds an authority URL for the given request. The authority may be different than the one used when creating the MSAL client\n     * if the user is creating cross-tenant requests\n     */\n    function calculateRequestAuthority(options) {\n        if (options?.tenantId) {\n            return getAuthority(options.tenantId, getAuthorityHost(createMsalClientOptions));\n        }\n        return state.msalConfig.auth.authority;\n    }\n    /**\n     * Performs silent authentication using MSAL to acquire an access token.\n     * If silent authentication fails, falls back to interactive authentication.\n     *\n     * @param msalApp - The MSAL application instance.\n     * @param scopes - The scopes for which to acquire the access token.\n     * @param options - The options for acquiring the access token.\n     * @param onAuthenticationRequired - A callback function to handle interactive authentication when silent authentication fails.\n     * @returns A promise that resolves to an AccessToken object containing the access token and its expiration timestamp.\n     */\n    async function withSilentAuthentication(msalApp, scopes, options, onAuthenticationRequired) {\n        let response = null;\n        try {\n            response = await getTokenSilent(msalApp, scopes, options);\n        }\n        catch (e) {\n            if (e.name !== \"AuthenticationRequiredError\") {\n                throw e;\n            }\n            if (options.disableAutomaticAuthentication) {\n                throw new AuthenticationRequiredError({\n                    scopes,\n                    getTokenOptions: options,\n                    message: \"Automatic authentication has been disabled. You may call the authentication() method.\",\n                });\n            }\n        }\n        // Silent authentication failed\n        if (response === null) {\n            try {\n                response = await onAuthenticationRequired();\n            }\n            catch (err) {\n                throw handleMsalError(scopes, err, options);\n            }\n        }\n        // At this point we should have a token, process it\n        ensureValidMsalToken(scopes, response, options);\n        state.cachedAccount = response?.account ?? null;\n        state.logger.getToken.info(formatSuccess(scopes));\n        return {\n            token: response.accessToken,\n            expiresOnTimestamp: response.expiresOn.getTime(),\n            refreshAfterTimestamp: response.refreshOn?.getTime(),\n            tokenType: response.tokenType,\n        };\n    }\n    async function getTokenByClientSecret(scopes, clientSecret, options = {}) {\n        state.logger.getToken.info(`Attempting to acquire token using client secret`);\n        state.msalConfig.auth.clientSecret = clientSecret;\n        const msalApp = await getConfidentialApp(options);\n        try {\n            const response = await msalApp.acquireTokenByClientCredential({\n                scopes,\n                authority: calculateRequestAuthority(options),\n                azureRegion: calculateRegionalAuthority(),\n                claims: options?.claims,\n            });\n            ensureValidMsalToken(scopes, response, options);\n            state.logger.getToken.info(formatSuccess(scopes));\n            return {\n                token: response.accessToken,\n                expiresOnTimestamp: response.expiresOn.getTime(),\n                refreshAfterTimestamp: response.refreshOn?.getTime(),\n                tokenType: response.tokenType,\n            };\n        }\n        catch (err) {\n            throw handleMsalError(scopes, err, options);\n        }\n    }\n    async function getTokenByClientAssertion(scopes, clientAssertion, options = {}) {\n        state.logger.getToken.info(`Attempting to acquire token using client assertion`);\n        state.msalConfig.auth.clientAssertion = clientAssertion;\n        const msalApp = await getConfidentialApp(options);\n        try {\n            const response = await msalApp.acquireTokenByClientCredential({\n                scopes,\n                authority: calculateRequestAuthority(options),\n                azureRegion: calculateRegionalAuthority(),\n                claims: options?.claims,\n                clientAssertion,\n            });\n            ensureValidMsalToken(scopes, response, options);\n            state.logger.getToken.info(formatSuccess(scopes));\n            return {\n                token: response.accessToken,\n                expiresOnTimestamp: response.expiresOn.getTime(),\n                refreshAfterTimestamp: response.refreshOn?.getTime(),\n                tokenType: response.tokenType,\n            };\n        }\n        catch (err) {\n            throw handleMsalError(scopes, err, options);\n        }\n    }\n    async function getTokenByClientCertificate(scopes, certificate, options = {}) {\n        state.logger.getToken.info(`Attempting to acquire token using client certificate`);\n        state.msalConfig.auth.clientCertificate = certificate;\n        const msalApp = await getConfidentialApp(options);\n        try {\n            const response = await msalApp.acquireTokenByClientCredential({\n                scopes,\n                authority: calculateRequestAuthority(options),\n                azureRegion: calculateRegionalAuthority(),\n                claims: options?.claims,\n            });\n            ensureValidMsalToken(scopes, response, options);\n            state.logger.getToken.info(formatSuccess(scopes));\n            return {\n                token: response.accessToken,\n                expiresOnTimestamp: response.expiresOn.getTime(),\n                refreshAfterTimestamp: response.refreshOn?.getTime(),\n                tokenType: response.tokenType,\n            };\n        }\n        catch (err) {\n            throw handleMsalError(scopes, err, options);\n        }\n    }\n    async function getTokenByDeviceCode(scopes, deviceCodeCallback, options = {}) {\n        state.logger.getToken.info(`Attempting to acquire token using device code`);\n        const msalApp = await getPublicApp(options);\n        return withSilentAuthentication(msalApp, scopes, options, () => {\n            const requestOptions = {\n                scopes,\n                cancel: options?.abortSignal?.aborted ?? false,\n                deviceCodeCallback,\n                authority: calculateRequestAuthority(options),\n                claims: options?.claims,\n            };\n            const deviceCodeRequest = msalApp.acquireTokenByDeviceCode(requestOptions);\n            if (options.abortSignal) {\n                options.abortSignal.addEventListener(\"abort\", () => {\n                    requestOptions.cancel = true;\n                });\n            }\n            return deviceCodeRequest;\n        });\n    }\n    async function getTokenByUsernamePassword(scopes, username, password, options = {}) {\n        state.logger.getToken.info(`Attempting to acquire token using username and password`);\n        const msalApp = await getPublicApp(options);\n        return withSilentAuthentication(msalApp, scopes, options, () => {\n            const requestOptions = {\n                scopes,\n                username,\n                password,\n                authority: calculateRequestAuthority(options),\n                claims: options?.claims,\n            };\n            return msalApp.acquireTokenByUsernamePassword(requestOptions);\n        });\n    }\n    function getActiveAccount() {\n        if (!state.cachedAccount) {\n            return undefined;\n        }\n        return msalToPublic(clientId, state.cachedAccount);\n    }\n    async function getTokenByAuthorizationCode(scopes, redirectUri, authorizationCode, clientSecret, options = {}) {\n        state.logger.getToken.info(`Attempting to acquire token using authorization code`);\n        let msalApp;\n        if (clientSecret) {\n            // If a client secret is provided, we need to use a confidential client application\n            // See https://learn.microsoft.com/entra/identity-platform/v2-oauth2-auth-code-flow#request-an-access-token-with-a-client_secret\n            state.msalConfig.auth.clientSecret = clientSecret;\n            msalApp = await getConfidentialApp(options);\n        }\n        else {\n            msalApp = await getPublicApp(options);\n        }\n        return withSilentAuthentication(msalApp, scopes, options, () => {\n            return msalApp.acquireTokenByCode({\n                scopes,\n                redirectUri,\n                code: authorizationCode,\n                authority: calculateRequestAuthority(options),\n                claims: options?.claims,\n            });\n        });\n    }\n    async function getTokenOnBehalfOf(scopes, userAssertionToken, clientCredentials, options = {}) {\n        msalLogger.getToken.info(`Attempting to acquire token on behalf of another user`);\n        if (typeof clientCredentials === \"string\") {\n            // Client secret\n            msalLogger.getToken.info(`Using client secret for on behalf of flow`);\n            state.msalConfig.auth.clientSecret = clientCredentials;\n        }\n        else if (typeof clientCredentials === \"function\") {\n            // Client Assertion\n            msalLogger.getToken.info(`Using client assertion callback for on behalf of flow`);\n            state.msalConfig.auth.clientAssertion = clientCredentials;\n        }\n        else {\n            // Client certificate\n            msalLogger.getToken.info(`Using client certificate for on behalf of flow`);\n            state.msalConfig.auth.clientCertificate = clientCredentials;\n        }\n        const msalApp = await getConfidentialApp(options);\n        try {\n            const response = await msalApp.acquireTokenOnBehalfOf({\n                scopes,\n                authority: calculateRequestAuthority(options),\n                claims: options.claims,\n                oboAssertion: userAssertionToken,\n            });\n            ensureValidMsalToken(scopes, response, options);\n            msalLogger.getToken.info(formatSuccess(scopes));\n            return {\n                token: response.accessToken,\n                expiresOnTimestamp: response.expiresOn.getTime(),\n                refreshAfterTimestamp: response.refreshOn?.getTime(),\n                tokenType: response.tokenType,\n            };\n        }\n        catch (err) {\n            throw handleMsalError(scopes, err, options);\n        }\n    }\n    /**\n     * Creates a base interactive request configuration for MSAL interactive authentication.\n     * This is shared between interactive and brokered authentication flows.\n     *\n     * @internal\n     */\n    function createBaseInteractiveRequest(scopes, options) {\n        return {\n            openBrowser: async (url) => {\n                const open = await import(\"open\");\n                await open.default(url, { newInstance: true });\n            },\n            scopes,\n            authority: calculateRequestAuthority(options),\n            claims: options?.claims,\n            loginHint: options?.loginHint,\n            errorTemplate: options?.browserCustomizationOptions?.errorMessage,\n            successTemplate: options?.browserCustomizationOptions?.successMessage,\n            prompt: options?.loginHint ? \"login\" : \"select_account\",\n        };\n    }\n    /**\n     * @internal\n     */\n    async function getBrokeredTokenInternal(scopes, useDefaultBrokerAccount, options = {}) {\n        msalLogger.verbose(\"Authentication will resume through the broker\");\n        const app = await getPublicApp(options);\n        const interactiveRequest = createBaseInteractiveRequest(scopes, options);\n        if (state.pluginConfiguration.broker.parentWindowHandle) {\n            interactiveRequest.windowHandle = Buffer.from(state.pluginConfiguration.broker.parentWindowHandle);\n        }\n        else {\n            // this is a bug, as the pluginConfiguration handler should validate this case.\n            msalLogger.warning(\"Parent window handle is not specified for the broker. This may cause unexpected behavior. Please provide the parentWindowHandle.\");\n        }\n        if (state.pluginConfiguration.broker.enableMsaPassthrough) {\n            (interactiveRequest.tokenQueryParameters ??= {})[\"msal_request_type\"] =\n                \"consumer_passthrough\";\n        }\n        if (useDefaultBrokerAccount) {\n            interactiveRequest.prompt = \"none\";\n            msalLogger.verbose(\"Attempting broker authentication using the default broker account\");\n        }\n        else {\n            msalLogger.verbose(\"Attempting broker authentication without the default broker account\");\n        }\n        if (options.proofOfPossessionOptions) {\n            interactiveRequest.shrNonce = options.proofOfPossessionOptions.nonce;\n            interactiveRequest.authenticationScheme = \"pop\";\n            interactiveRequest.resourceRequestMethod =\n                options.proofOfPossessionOptions.resourceRequestMethod;\n            interactiveRequest.resourceRequestUri = options.proofOfPossessionOptions.resourceRequestUrl;\n        }\n        try {\n            return await app.acquireTokenInteractive(interactiveRequest);\n        }\n        catch (e) {\n            msalLogger.verbose(`Failed to authenticate through the broker: ${e.message}`);\n            if (options.disableAutomaticAuthentication) {\n                throw new AuthenticationRequiredError({\n                    scopes,\n                    getTokenOptions: options,\n                    message: \"Cannot silently authenticate with default broker account.\",\n                });\n            }\n            // If we tried to use the default broker account and failed, fall back to interactive authentication\n            if (useDefaultBrokerAccount) {\n                return getBrokeredTokenInternal(scopes, false, options);\n            }\n            else {\n                throw e;\n            }\n        }\n    }\n    /**\n     * A helper function that supports brokered authentication through the MSAL's public application.\n     *\n     * When useDefaultBrokerAccount is true, the method will attempt to authenticate using the default broker account.\n     * If the default broker account is not available, the method will fall back to interactive authentication.\n     */\n    async function getBrokeredToken(scopes, useDefaultBrokerAccount, options = {}) {\n        msalLogger.getToken.info(`Attempting to acquire token using brokered authentication with useDefaultBrokerAccount: ${useDefaultBrokerAccount}`);\n        const response = await getBrokeredTokenInternal(scopes, useDefaultBrokerAccount, options);\n        ensureValidMsalToken(scopes, response, options);\n        state.cachedAccount = response?.account ?? null;\n        state.logger.getToken.info(formatSuccess(scopes));\n        return {\n            token: response.accessToken,\n            expiresOnTimestamp: response.expiresOn.getTime(),\n            refreshAfterTimestamp: response.refreshOn?.getTime(),\n            tokenType: response.tokenType,\n        };\n    }\n    async function getTokenByInteractiveRequest(scopes, options = {}) {\n        msalLogger.getToken.info(`Attempting to acquire token interactively`);\n        const app = await getPublicApp(options);\n        return withSilentAuthentication(app, scopes, options, async () => {\n            const interactiveRequest = createBaseInteractiveRequest(scopes, options);\n            if (state.pluginConfiguration.broker.isEnabled) {\n                return getBrokeredTokenInternal(scopes, state.pluginConfiguration.broker.useDefaultBrokerAccount ?? false, options);\n            }\n            if (options.proofOfPossessionOptions) {\n                interactiveRequest.shrNonce = options.proofOfPossessionOptions.nonce;\n                interactiveRequest.authenticationScheme = \"pop\";\n                interactiveRequest.resourceRequestMethod =\n                    options.proofOfPossessionOptions.resourceRequestMethod;\n                interactiveRequest.resourceRequestUri = options.proofOfPossessionOptions.resourceRequestUrl;\n            }\n            return app.acquireTokenInteractive(interactiveRequest);\n        });\n    }\n    return {\n        getActiveAccount,\n        getBrokeredToken,\n        getTokenByClientSecret,\n        getTokenByClientAssertion,\n        getTokenByClientCertificate,\n        getTokenByDeviceCode,\n        getTokenByUsernamePassword,\n        getTokenByAuthorizationCode,\n        getTokenOnBehalfOf,\n        getTokenByInteractiveRequest,\n    };\n}\n//# sourceMappingURL=msalClient.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nimport { createMsalClient } from \"../msal/nodeFlows/msalClient.js\";\nimport { createHash, createPrivateKey } from \"node:crypto\";\nimport { processMultiTenantRequest, resolveAdditionallyAllowedTenantIds, } from \"../util/tenantIdUtils.js\";\nimport { credentialLogger } from \"../util/logging.js\";\nimport { readFile } from \"node:fs/promises\";\nimport { tracingClient } from \"../util/tracing.js\";\nconst credentialName = \"ClientCertificateCredential\";\nconst logger = credentialLogger(credentialName);\n/**\n * Enables authentication to Microsoft Entra ID using a PEM-encoded\n * certificate that is assigned to an App Registration. More information\n * on how to configure certificate authentication can be found here:\n *\n * https://learn.microsoft.com/azure/active-directory/develop/active-directory-certificate-credentials#register-your-certificate-with-azure-ad\n *\n */\nexport class ClientCertificateCredential {\n    tenantId;\n    additionallyAllowedTenantIds;\n    certificateConfiguration;\n    sendCertificateChain;\n    msalClient;\n    constructor(tenantId, clientId, certificatePathOrConfiguration, options = {}) {\n        if (!tenantId || !clientId) {\n            throw new Error(`${credentialName}: tenantId and clientId are required parameters.`);\n        }\n        this.tenantId = tenantId;\n        this.additionallyAllowedTenantIds = resolveAdditionallyAllowedTenantIds(options?.additionallyAllowedTenants);\n        this.sendCertificateChain = options.sendCertificateChain;\n        this.certificateConfiguration = {\n            ...(typeof certificatePathOrConfiguration === \"string\"\n                ? {\n                    certificatePath: certificatePathOrConfiguration,\n                }\n                : certificatePathOrConfiguration),\n        };\n        const certificate = this.certificateConfiguration\n            .certificate;\n        const certificatePath = this.certificateConfiguration\n            .certificatePath;\n        if (!this.certificateConfiguration || !(certificate || certificatePath)) {\n            throw new Error(`${credentialName}: Provide either a PEM certificate in string form, or the path to that certificate in the filesystem. To troubleshoot, visit https://aka.ms/azsdk/js/identity/serviceprincipalauthentication/troubleshoot.`);\n        }\n        if (certificate && certificatePath) {\n            throw new Error(`${credentialName}: To avoid unexpected behaviors, providing both the contents of a PEM certificate and the path to a PEM certificate is forbidden. To troubleshoot, visit https://aka.ms/azsdk/js/identity/serviceprincipalauthentication/troubleshoot.`);\n        }\n        this.msalClient = createMsalClient(clientId, tenantId, {\n            ...options,\n            logger,\n            tokenCredentialOptions: options,\n        });\n    }\n    /**\n     * Authenticates with Microsoft Entra ID and returns an access token if successful.\n     * If authentication fails, a {@link CredentialUnavailableError} will be thrown with the details of the failure.\n     *\n     * @param scopes - The list of scopes for which the token will have access.\n     * @param options - The options used to configure any requests this\n     *                TokenCredential implementation might make.\n     */\n    async getToken(scopes, options = {}) {\n        return tracingClient.withSpan(`${credentialName}.getToken`, options, async (newOptions) => {\n            newOptions.tenantId = processMultiTenantRequest(this.tenantId, newOptions, this.additionallyAllowedTenantIds, logger);\n            const arrayScopes = Array.isArray(scopes) ? scopes : [scopes];\n            const certificate = await this.buildClientCertificate();\n            return this.msalClient.getTokenByClientCertificate(arrayScopes, certificate, newOptions);\n        });\n    }\n    async buildClientCertificate() {\n        const parts = await parseCertificate(this.certificateConfiguration, this.sendCertificateChain ?? false);\n        let privateKey;\n        if (this.certificateConfiguration.certificatePassword !== undefined) {\n            privateKey = createPrivateKey({\n                key: parts.certificateContents,\n                passphrase: this.certificateConfiguration.certificatePassword,\n                format: \"pem\",\n            })\n                .export({\n                format: \"pem\",\n                type: \"pkcs8\",\n            })\n                .toString();\n        }\n        else {\n            privateKey = parts.certificateContents;\n        }\n        return {\n            thumbprint: parts.thumbprint,\n            thumbprintSha256: parts.thumbprintSha256,\n            privateKey,\n            x5c: parts.x5c,\n        };\n    }\n}\n/**\n * Parses a certificate into its relevant parts\n *\n * @param certificateConfiguration - The certificate contents or path to the certificate\n * @param sendCertificateChain - true if the entire certificate chain should be sent for SNI, false otherwise\n * @returns The parsed certificate parts and the certificate contents\n */\nexport async function parseCertificate(certificateConfiguration, sendCertificateChain) {\n    const certificate = certificateConfiguration.certificate;\n    const certificatePath = certificateConfiguration\n        .certificatePath;\n    const certificateContents = certificate || (await readFile(certificatePath, \"utf8\"));\n    const x5c = sendCertificateChain ? certificateContents : undefined;\n    const certificatePattern = /(-+BEGIN CERTIFICATE-+)(\\n\\r?|\\r\\n?)([A-Za-z0-9+/\\n\\r]+=*)(\\n\\r?|\\r\\n?)(-+END CERTIFICATE-+)/g;\n    const publicKeys = [];\n    // Match all possible certificates, in the order they are in the file. These will form the chain that is used for x5c\n    let match;\n    do {\n        match = certificatePattern.exec(certificateContents);\n        if (match) {\n            publicKeys.push(match[3]);\n        }\n    } while (match);\n    if (publicKeys.length === 0) {\n        throw new Error(\"The file at the specified path does not contain a PEM-encoded certificate.\");\n    }\n    const thumbprint = createHash(\"sha1\") // CodeQL [SM04514] Needed for backward compatibility reason\n        .update(Buffer.from(publicKeys[0], \"base64\"))\n        .digest(\"hex\")\n        .toUpperCase();\n    const thumbprintSha256 = createHash(\"sha256\")\n        .update(Buffer.from(publicKeys[0], \"base64\"))\n        .digest(\"hex\")\n        .toUpperCase();\n    return {\n        certificateContents,\n        thumbprintSha256,\n        thumbprint,\n        x5c,\n    };\n}\n//# sourceMappingURL=clientCertificateCredential.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nimport { formatError } from \"./logging.js\";\n/**\n * Ensures the scopes value is an array.\n * @internal\n */\nexport function ensureScopes(scopes) {\n    return Array.isArray(scopes) ? scopes : [scopes];\n}\n/**\n * Throws if the received scope is not valid.\n * @internal\n */\nexport function ensureValidScopeForDevTimeCreds(scope, logger) {\n    if (!scope.match(/^[0-9a-zA-Z-_.:/]+$/)) {\n        const error = new Error(\"Invalid scope was specified by the user or calling client\");\n        logger.getToken.info(formatError(scope, error));\n        throw error;\n    }\n}\n/**\n * Returns the resource out of a scope.\n * @internal\n */\nexport function getScopeResource(scope) {\n    return scope.replace(/\\/.default$/, \"\");\n}\n//# sourceMappingURL=scopeUtils.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nimport { createMsalClient } from \"../msal/nodeFlows/msalClient.js\";\nimport { processMultiTenantRequest, resolveAdditionallyAllowedTenantIds, } from \"../util/tenantIdUtils.js\";\nimport { CredentialUnavailableError } from \"../errors.js\";\nimport { credentialLogger } from \"../util/logging.js\";\nimport { ensureScopes } from \"../util/scopeUtils.js\";\nimport { tracingClient } from \"../util/tracing.js\";\nconst logger = credentialLogger(\"ClientSecretCredential\");\n/**\n * Enables authentication to Microsoft Entra ID using a client secret\n * that was generated for an App Registration. More information on how\n * to configure a client secret can be found here:\n *\n * https://learn.microsoft.com/entra/identity-platform/quickstart-configure-app-access-web-apis#add-credentials-to-your-web-application\n *\n */\nexport class ClientSecretCredential {\n    tenantId;\n    additionallyAllowedTenantIds;\n    msalClient;\n    clientSecret;\n    /**\n     * Creates an instance of the ClientSecretCredential with the details\n     * needed to authenticate against Microsoft Entra ID with a client\n     * secret.\n     *\n     * @param tenantId - The Microsoft Entra tenant (directory) ID.\n     * @param clientId - The client (application) ID of an App Registration in the tenant.\n     * @param clientSecret - A client secret that was generated for the App Registration.\n     * @param options - Options for configuring the client which makes the authentication request.\n     */\n    constructor(tenantId, clientId, clientSecret, options = {}) {\n        if (!tenantId) {\n            throw new CredentialUnavailableError(\"ClientSecretCredential: tenantId is a required parameter. To troubleshoot, visit https://aka.ms/azsdk/js/identity/serviceprincipalauthentication/troubleshoot.\");\n        }\n        if (!clientId) {\n            throw new CredentialUnavailableError(\"ClientSecretCredential: clientId is a required parameter. To troubleshoot, visit https://aka.ms/azsdk/js/identity/serviceprincipalauthentication/troubleshoot.\");\n        }\n        if (!clientSecret) {\n            throw new CredentialUnavailableError(\"ClientSecretCredential: clientSecret is a required parameter. To troubleshoot, visit https://aka.ms/azsdk/js/identity/serviceprincipalauthentication/troubleshoot.\");\n        }\n        this.clientSecret = clientSecret;\n        this.tenantId = tenantId;\n        this.additionallyAllowedTenantIds = resolveAdditionallyAllowedTenantIds(options?.additionallyAllowedTenants);\n        this.msalClient = createMsalClient(clientId, tenantId, {\n            ...options,\n            logger,\n            tokenCredentialOptions: options,\n        });\n    }\n    /**\n     * Authenticates with Microsoft Entra ID and returns an access token if successful.\n     * If authentication fails, a {@link CredentialUnavailableError} will be thrown with the details of the failure.\n     *\n     * @param scopes - The list of scopes for which the token will have access.\n     * @param options - The options used to configure any requests this\n     *                TokenCredential implementation might make.\n     */\n    async getToken(scopes, options = {}) {\n        return tracingClient.withSpan(`${this.constructor.name}.getToken`, options, async (newOptions) => {\n            newOptions.tenantId = processMultiTenantRequest(this.tenantId, newOptions, this.additionallyAllowedTenantIds, logger);\n            const arrayScopes = ensureScopes(scopes);\n            return this.msalClient.getTokenByClientSecret(arrayScopes, this.clientSecret, newOptions);\n        });\n    }\n}\n//# sourceMappingURL=clientSecretCredential.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nimport { createMsalClient } from \"../msal/nodeFlows/msalClient.js\";\nimport { processMultiTenantRequest, resolveAdditionallyAllowedTenantIds, } from \"../util/tenantIdUtils.js\";\nimport { CredentialUnavailableError } from \"../errors.js\";\nimport { credentialLogger } from \"../util/logging.js\";\nimport { ensureScopes } from \"../util/scopeUtils.js\";\nimport { tracingClient } from \"../util/tracing.js\";\nconst logger = credentialLogger(\"UsernamePasswordCredential\");\n/**\n * Enables authentication to Microsoft Entra ID with a user's\n * username and password. This credential requires a high degree of\n * trust so you should only use it when other, more secure credential\n * types can't be used.\n * @deprecated UsernamePasswordCredential is deprecated. Use a more secure credential. See https://aka.ms/azsdk/identity/mfa for details.\n */\nexport class UsernamePasswordCredential {\n    tenantId;\n    additionallyAllowedTenantIds;\n    msalClient;\n    username;\n    password;\n    /**\n     * Creates an instance of the UsernamePasswordCredential with the details\n     * needed to authenticate against Microsoft Entra ID with a username\n     * and password.\n     *\n     * @param tenantId - The Microsoft Entra tenant (directory).\n     * @param clientId - The client (application) ID of an App Registration in the tenant.\n     * @param username - The user account's e-mail address (user name).\n     * @param password - The user account's account password\n     * @param options - Options for configuring the client which makes the authentication request.\n     */\n    constructor(tenantId, clientId, username, password, options = {}) {\n        if (!tenantId) {\n            throw new CredentialUnavailableError(\"UsernamePasswordCredential: tenantId is a required parameter. To troubleshoot, visit https://aka.ms/azsdk/js/identity/usernamepasswordcredential/troubleshoot.\");\n        }\n        if (!clientId) {\n            throw new CredentialUnavailableError(\"UsernamePasswordCredential: clientId is a required parameter. To troubleshoot, visit https://aka.ms/azsdk/js/identity/usernamepasswordcredential/troubleshoot.\");\n        }\n        if (!username) {\n            throw new CredentialUnavailableError(\"UsernamePasswordCredential: username is a required parameter. To troubleshoot, visit https://aka.ms/azsdk/js/identity/usernamepasswordcredential/troubleshoot.\");\n        }\n        if (!password) {\n            throw new CredentialUnavailableError(\"UsernamePasswordCredential: password is a required parameter. To troubleshoot, visit https://aka.ms/azsdk/js/identity/usernamepasswordcredential/troubleshoot.\");\n        }\n        this.tenantId = tenantId;\n        this.additionallyAllowedTenantIds = resolveAdditionallyAllowedTenantIds(options?.additionallyAllowedTenants);\n        this.username = username;\n        this.password = password;\n        this.msalClient = createMsalClient(clientId, this.tenantId, {\n            ...options,\n            tokenCredentialOptions: options ?? {},\n        });\n    }\n    /**\n     * Authenticates with Microsoft Entra ID and returns an access token if successful.\n     * If authentication fails, a {@link CredentialUnavailableError} will be thrown with the details of the failure.\n     *\n     * If the user provided the option `disableAutomaticAuthentication`,\n     * once the token can't be retrieved silently,\n     * this method won't attempt to request user interaction to retrieve the token.\n     *\n     * @param scopes - The list of scopes for which the token will have access.\n     * @param options - The options used to configure any requests this\n     *                TokenCredential implementation might make.\n     */\n    async getToken(scopes, options = {}) {\n        return tracingClient.withSpan(`${this.constructor.name}.getToken`, options, async (newOptions) => {\n            newOptions.tenantId = processMultiTenantRequest(this.tenantId, newOptions, this.additionallyAllowedTenantIds, logger);\n            const arrayScopes = ensureScopes(scopes);\n            return this.msalClient.getTokenByUsernamePassword(arrayScopes, this.username, this.password, newOptions);\n        });\n    }\n}\n//# sourceMappingURL=usernamePasswordCredential.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nimport { AuthenticationError, CredentialUnavailableError } from \"../errors.js\";\nimport { credentialLogger, formatError, formatSuccess, processEnvVars } from \"../util/logging.js\";\nimport { ClientCertificateCredential } from \"./clientCertificateCredential.js\";\nimport { ClientSecretCredential } from \"./clientSecretCredential.js\";\nimport { UsernamePasswordCredential } from \"./usernamePasswordCredential.js\";\nimport { checkTenantId } from \"../util/tenantIdUtils.js\";\nimport { tracingClient } from \"../util/tracing.js\";\n/**\n * Contains the list of all supported environment variable names so that an\n * appropriate error message can be generated when no credentials can be\n * configured.\n *\n * @internal\n */\nexport const AllSupportedEnvironmentVariables = [\n    \"AZURE_TENANT_ID\",\n    \"AZURE_CLIENT_ID\",\n    \"AZURE_CLIENT_SECRET\",\n    \"AZURE_CLIENT_CERTIFICATE_PATH\",\n    \"AZURE_CLIENT_CERTIFICATE_PASSWORD\",\n    \"AZURE_USERNAME\",\n    \"AZURE_PASSWORD\",\n    \"AZURE_ADDITIONALLY_ALLOWED_TENANTS\",\n    \"AZURE_CLIENT_SEND_CERTIFICATE_CHAIN\",\n];\nfunction getAdditionallyAllowedTenants() {\n    const additionallyAllowedValues = process.env.AZURE_ADDITIONALLY_ALLOWED_TENANTS ?? \"\";\n    return additionallyAllowedValues.split(\";\");\n}\nconst credentialName = \"EnvironmentCredential\";\nconst logger = credentialLogger(credentialName);\nexport function getSendCertificateChain() {\n    const sendCertificateChain = (process.env.AZURE_CLIENT_SEND_CERTIFICATE_CHAIN ?? \"\").toLowerCase();\n    const result = sendCertificateChain === \"true\" || sendCertificateChain === \"1\";\n    logger.verbose(`AZURE_CLIENT_SEND_CERTIFICATE_CHAIN: ${process.env.AZURE_CLIENT_SEND_CERTIFICATE_CHAIN}; sendCertificateChain: ${result}`);\n    return result;\n}\n/**\n * Enables authentication to Microsoft Entra ID using a client secret or certificate.\n */\nexport class EnvironmentCredential {\n    _credential = undefined;\n    /**\n     * Creates an instance of the EnvironmentCredential class and decides what credential to use depending on the available environment variables.\n     *\n     * Required environment variables:\n     * - `AZURE_TENANT_ID`: The Microsoft Entra tenant (directory) ID.\n     * - `AZURE_CLIENT_ID`: The client (application) ID of an App Registration in the tenant.\n     *\n     * If setting the AZURE_TENANT_ID, then you can also set the additionally allowed tenants\n     * - `AZURE_ADDITIONALLY_ALLOWED_TENANTS`: For multi-tenant applications, specifies additional tenants for which the credential may acquire tokens with a single semicolon delimited string. Use * to allow all tenants.\n     *\n     * Environment variables used for client credential authentication:\n     * - `AZURE_CLIENT_SECRET`: A client secret that was generated for the App Registration.\n     * - `AZURE_CLIENT_CERTIFICATE_PATH`: The path to a PEM certificate to use during the authentication, instead of the client secret.\n     * - `AZURE_CLIENT_CERTIFICATE_PASSWORD`: (optional) password for the certificate file.\n     * - `AZURE_CLIENT_SEND_CERTIFICATE_CHAIN`: (optional) indicates that the certificate chain should be set in x5c header to support subject name / issuer based authentication.\n     *\n     * Username and password authentication is deprecated, since it doesn't support multifactor authentication (MFA). See https://aka.ms/azsdk/identity/mfa for more details. Users can still provide environment variables for this authentication method:\n     * - `AZURE_USERNAME`: Username to authenticate with.\n     * - `AZURE_PASSWORD`: Password to authenticate with.\n     *\n     * If the environment variables required to perform the authentication are missing, a {@link CredentialUnavailableError} will be thrown.\n     * If the authentication fails, or if there's an unknown error, an {@link AuthenticationError} will be thrown.\n     *\n     * @param options - Options for configuring the client which makes the authentication request.\n     */\n    constructor(options) {\n        // Keep track of any missing environment variables for error details\n        const assigned = processEnvVars(AllSupportedEnvironmentVariables).assigned.join(\", \");\n        logger.info(`Found the following environment variables: ${assigned}`);\n        const tenantId = process.env.AZURE_TENANT_ID, clientId = process.env.AZURE_CLIENT_ID, clientSecret = process.env.AZURE_CLIENT_SECRET;\n        const additionallyAllowedTenantIds = getAdditionallyAllowedTenants();\n        const sendCertificateChain = getSendCertificateChain();\n        const newOptions = { ...options, additionallyAllowedTenantIds, sendCertificateChain };\n        if (tenantId) {\n            checkTenantId(logger, tenantId);\n        }\n        if (tenantId && clientId && clientSecret) {\n            logger.info(`Invoking ClientSecretCredential with tenant ID: ${tenantId}, clientId: ${clientId} and clientSecret: [REDACTED]`);\n            this._credential = new ClientSecretCredential(tenantId, clientId, clientSecret, newOptions);\n            return;\n        }\n        const certificatePath = process.env.AZURE_CLIENT_CERTIFICATE_PATH;\n        const certificatePassword = process.env.AZURE_CLIENT_CERTIFICATE_PASSWORD;\n        if (tenantId && clientId && certificatePath) {\n            logger.info(`Invoking ClientCertificateCredential with tenant ID: ${tenantId}, clientId: ${clientId} and certificatePath: ${certificatePath}`);\n            this._credential = new ClientCertificateCredential(tenantId, clientId, { certificatePath, certificatePassword }, newOptions);\n            return;\n        }\n        const username = process.env.AZURE_USERNAME;\n        const password = process.env.AZURE_PASSWORD;\n        if (tenantId && clientId && username && password) {\n            logger.info(`Invoking UsernamePasswordCredential with tenant ID: ${tenantId}, clientId: ${clientId} and username: ${username}`);\n            logger.warning(\"Environment is configured to use username and password authentication. This authentication method is deprecated, as it doesn't support multifactor authentication (MFA). Use a more secure credential. For more details, see https://aka.ms/azsdk/identity/mfa.\");\n            this._credential = new UsernamePasswordCredential(tenantId, clientId, username, password, newOptions);\n        }\n    }\n    /**\n     * Authenticates with Microsoft Entra ID and returns an access token if successful.\n     *\n     * @param scopes - The list of scopes for which the token will have access.\n     * @param options - Optional parameters. See {@link GetTokenOptions}.\n     */\n    async getToken(scopes, options = {}) {\n        return tracingClient.withSpan(`${credentialName}.getToken`, options, async (newOptions) => {\n            if (this._credential) {\n                try {\n                    const result = await this._credential.getToken(scopes, newOptions);\n                    logger.getToken.info(formatSuccess(scopes));\n                    return result;\n                }\n                catch (err) {\n                    const authenticationError = new AuthenticationError(400, {\n                        error: `${credentialName} authentication failed. To troubleshoot, visit https://aka.ms/azsdk/js/identity/environmentcredential/troubleshoot.`,\n                        error_description: err.message.toString().split(\"More details:\").join(\"\"),\n                    });\n                    logger.getToken.info(formatError(scopes, authenticationError));\n                    throw authenticationError;\n                }\n            }\n            throw new CredentialUnavailableError(`${credentialName} is unavailable. No underlying credential could be used. To troubleshoot, visit https://aka.ms/azsdk/js/identity/environmentcredential/troubleshoot.`);\n        });\n    }\n}\n//# sourceMappingURL=environmentCredential.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nimport { retryPolicy } from \"@azure/core-rest-pipeline\";\nimport { calculateRetryDelay } from \"@azure/core-util\";\n// Matches the default retry configuration in expontentialRetryStrategy.ts\nconst DEFAULT_CLIENT_MAX_RETRY_INTERVAL = 1000 * 64;\n// For 410 responses, we need at least 70 seconds total retry duration\n// With 5 retries using exponential backoff: delays of d, 2d, 4d, 8d, 16d sum to 31d\n// Accounting for jitter (which can reduce delays by 20%), we need 31d * 0.8 >= 70\n// So we need d >= 70/24.8 = 2.82 seconds. Using 3 seconds to be safe.\nconst MIN_DELAY_FOR_410_MS = 3000;\n/**\n * An additional policy that retries on 404 and 410 errors. The default retry policy does not retry on\n * 404s or 410s, but the IMDS endpoint can return these when the token is not yet available or when\n * the identity is still being set up. This policy will retry on 404s and 410s with an exponential backoff.\n * For 410 responses, it uses a minimum 3-second initial delay to ensure at least 70 seconds total duration.\n *\n * @param msiRetryConfig - The retry configuration for the MSI credential.\n * @returns - The policy that will retry on 404s and 410s.\n */\nexport function imdsRetryPolicy(msiRetryConfig) {\n    return retryPolicy([\n        {\n            name: \"imdsRetryPolicy\",\n            retry: ({ retryCount, response }) => {\n                if (response?.status !== 404 && response?.status !== 410) {\n                    return { skipStrategy: true };\n                }\n                // For 410 responses, use a minimum 3-second delay to ensure at least 70 seconds total retry duration\n                const initialDelayMs = response?.status === 410\n                    ? Math.max(MIN_DELAY_FOR_410_MS, msiRetryConfig.startDelayInMs)\n                    : msiRetryConfig.startDelayInMs;\n                return calculateRetryDelay(retryCount, {\n                    retryDelayInMs: initialDelayMs,\n                    maxRetryDelayInMs: DEFAULT_CLIENT_MAX_RETRY_INTERVAL,\n                });\n            },\n        },\n    ], {\n        maxRetries: msiRetryConfig.maxRetries,\n    });\n}\n//# sourceMappingURL=imdsRetryPolicy.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nimport { createHttpHeaders, createPipelineRequest } from \"@azure/core-rest-pipeline\";\nimport { isError } from \"@azure/core-util\";\nimport { credentialLogger } from \"../../util/logging.js\";\nimport { mapScopesToResource } from \"./utils.js\";\nimport { tracingClient } from \"../../util/tracing.js\";\nconst msiName = \"ManagedIdentityCredential - IMDS\";\nconst logger = credentialLogger(msiName);\nconst imdsHost = \"http://169.254.169.254\";\nconst imdsEndpointPath = \"/metadata/identity/oauth2/token\";\n/**\n * Generates an invalid request options to get a response quickly from IMDS endpoint.\n * The response indicates the availability of IMSD service; otherwise the request would time out.\n */\nfunction prepareInvalidRequestOptions(scopes) {\n    const resource = mapScopesToResource(scopes);\n    if (!resource) {\n        throw new Error(`${msiName}: Multiple scopes are not supported.`);\n    }\n    // Pod Identity will try to process this request even if the Metadata header is missing.\n    // We can exclude the request query to ensure no IMDS endpoint tries to process the ping request.\n    const url = new URL(imdsEndpointPath, process.env.AZURE_POD_IDENTITY_AUTHORITY_HOST ?? imdsHost);\n    const rawHeaders = {\n        Accept: \"application/json\",\n        // intentionally leave out the Metadata header to invoke an error from IMDS endpoint.\n    };\n    return {\n        // intentionally not including any query\n        url: `${url}`,\n        method: \"GET\",\n        headers: createHttpHeaders(rawHeaders),\n    };\n}\n/**\n * Defines how to determine whether the Azure IMDS MSI is available.\n *\n * Actually getting the token once we determine IMDS is available is handled by MSAL.\n */\nexport const imdsMsi = {\n    name: \"imdsMsi\",\n    async isAvailable(options) {\n        const { scopes, identityClient, getTokenOptions } = options;\n        const resource = mapScopesToResource(scopes);\n        if (!resource) {\n            logger.info(`${msiName}: Unavailable. Multiple scopes are not supported.`);\n            return false;\n        }\n        // if the PodIdentityEndpoint environment variable was set no need to probe the endpoint, it can be assumed to exist\n        if (process.env.AZURE_POD_IDENTITY_AUTHORITY_HOST) {\n            return true;\n        }\n        if (!identityClient) {\n            throw new Error(\"Missing IdentityClient\");\n        }\n        const requestOptions = prepareInvalidRequestOptions(resource);\n        return tracingClient.withSpan(\"ManagedIdentityCredential-pingImdsEndpoint\", getTokenOptions ?? {}, async (updatedOptions) => {\n            requestOptions.tracingOptions = updatedOptions.tracingOptions;\n            // Create a request with a timeout since we expect that\n            // not having a \"Metadata\" header should cause an error to be\n            // returned quickly from the endpoint, proving its availability.\n            const request = createPipelineRequest(requestOptions);\n            // Default to 1000 if the default of 0 is used.\n            // Negative values can still be used to disable the timeout.\n            request.timeout = updatedOptions.requestOptions?.timeout || 1000;\n            // This MSI uses the imdsEndpoint to get the token, which only uses http://\n            request.allowInsecureConnection = true;\n            let response;\n            try {\n                logger.info(`${msiName}: Pinging the Azure IMDS endpoint`);\n                response = await identityClient.sendRequest(request);\n            }\n            catch (err) {\n                // If the request failed, or Node.js was unable to establish a connection,\n                // or the host was down, we'll assume the IMDS endpoint isn't available.\n                if (isError(err)) {\n                    logger.verbose(`${msiName}: Caught error ${err.name}: ${err.message}`);\n                }\n                // This is a special case for Docker Desktop which responds with a 403 with a message that contains \"A socket operation was attempted to an unreachable network\" or \"A socket operation was attempted to an unreachable host\"\n                // rather than just timing out, as expected.\n                logger.info(`${msiName}: The Azure IMDS endpoint is unavailable`);\n                return false;\n            }\n            if (response.status === 403) {\n                if (response.bodyAsText?.includes(\"unreachable\")) {\n                    logger.info(`${msiName}: The Azure IMDS endpoint is unavailable`);\n                    logger.info(`${msiName}: ${response.bodyAsText}`);\n                    return false;\n                }\n            }\n            // If we received any response, the endpoint is available\n            logger.info(`${msiName}: The Azure IMDS endpoint is available`);\n            return true;\n        });\n    },\n};\n//# sourceMappingURL=imdsMsi.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nimport { createMsalClient } from \"../msal/nodeFlows/msalClient.js\";\nimport { processMultiTenantRequest, resolveAdditionallyAllowedTenantIds, } from \"../util/tenantIdUtils.js\";\nimport { CredentialUnavailableError } from \"../errors.js\";\nimport { credentialLogger } from \"../util/logging.js\";\nimport { tracingClient } from \"../util/tracing.js\";\nconst logger = credentialLogger(\"ClientAssertionCredential\");\n/**\n * Authenticates a service principal with a JWT assertion.\n */\nexport class ClientAssertionCredential {\n    msalClient;\n    tenantId;\n    additionallyAllowedTenantIds;\n    getAssertion;\n    options;\n    /**\n     * Creates an instance of the ClientAssertionCredential with the details\n     * needed to authenticate against Microsoft Entra ID with a client\n     * assertion provided by the developer through the `getAssertion` function parameter.\n     *\n     * @param tenantId - The Microsoft Entra tenant (directory) ID.\n     * @param clientId - The client (application) ID of an App Registration in the tenant.\n     * @param getAssertion - A function that retrieves the assertion for the credential to use.\n     * @param options - Options for configuring the client which makes the authentication request.\n     */\n    constructor(tenantId, clientId, getAssertion, options = {}) {\n        if (!tenantId) {\n            throw new CredentialUnavailableError(\"ClientAssertionCredential: tenantId is a required parameter.\");\n        }\n        if (!clientId) {\n            throw new CredentialUnavailableError(\"ClientAssertionCredential: clientId is a required parameter.\");\n        }\n        if (!getAssertion) {\n            throw new CredentialUnavailableError(\"ClientAssertionCredential: clientAssertion is a required parameter.\");\n        }\n        this.tenantId = tenantId;\n        this.additionallyAllowedTenantIds = resolveAdditionallyAllowedTenantIds(options?.additionallyAllowedTenants);\n        this.options = options;\n        this.getAssertion = getAssertion;\n        this.msalClient = createMsalClient(clientId, tenantId, {\n            ...options,\n            logger,\n            tokenCredentialOptions: this.options,\n        });\n    }\n    /**\n     * Authenticates with Microsoft Entra ID and returns an access token if successful.\n     * If authentication fails, a {@link CredentialUnavailableError} will be thrown with the details of the failure.\n     *\n     * @param scopes - The list of scopes for which the token will have access.\n     * @param options - The options used to configure any requests this\n     *                TokenCredential implementation might make.\n     */\n    async getToken(scopes, options = {}) {\n        return tracingClient.withSpan(`${this.constructor.name}.getToken`, options, async (newOptions) => {\n            newOptions.tenantId = processMultiTenantRequest(this.tenantId, newOptions, this.additionallyAllowedTenantIds, logger);\n            const arrayScopes = Array.isArray(scopes) ? scopes : [scopes];\n            return this.msalClient.getTokenByClientAssertion(arrayScopes, this.getAssertion, newOptions);\n        });\n    }\n}\n//# sourceMappingURL=clientAssertionCredential.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nimport { credentialLogger, processEnvVars } from \"../util/logging.js\";\nimport { ClientAssertionCredential } from \"./clientAssertionCredential.js\";\nimport { CredentialUnavailableError } from \"../errors.js\";\nimport { checkTenantId } from \"../util/tenantIdUtils.js\";\nimport { readFile } from \"node:fs/promises\";\nconst credentialName = \"WorkloadIdentityCredential\";\n/**\n * Contains the list of all supported environment variable names so that an\n * appropriate error message can be generated when no credentials can be\n * configured.\n *\n * @internal\n */\nexport const SupportedWorkloadEnvironmentVariables = [\n    \"AZURE_TENANT_ID\",\n    \"AZURE_CLIENT_ID\",\n    \"AZURE_FEDERATED_TOKEN_FILE\",\n];\nconst logger = credentialLogger(credentialName);\n/**\n * Workload Identity authentication is a feature in Azure that allows applications running on virtual machines (VMs)\n * to access other Azure resources without the need for a service principal or managed identity. With Workload Identity\n * authentication, applications authenticate themselves using their own identity, rather than using a shared service\n * principal or managed identity. Under the hood, Workload Identity authentication uses the concept of Service Account\n * Credentials (SACs), which are automatically created by Azure and stored securely in the VM. By using Workload\n * Identity authentication, you can avoid the need to manage and rotate service principals or managed identities for\n * each application on each VM. Additionally, because SACs are created automatically and managed by Azure, you don't\n * need to worry about storing and securing sensitive credentials themselves.\n * The WorkloadIdentityCredential supports Microsoft Entra Workload ID authentication on Azure Kubernetes and acquires\n * a token using the SACs available in the Azure Kubernetes environment.\n * Refer to <a href=\"https://learn.microsoft.com/azure/aks/workload-identity-overview\">Microsoft Entra\n * Workload ID</a> for more information.\n */\nexport class WorkloadIdentityCredential {\n    client;\n    azureFederatedTokenFileContent = undefined;\n    cacheDate = undefined;\n    federatedTokenFilePath;\n    /**\n     * WorkloadIdentityCredential supports Microsoft Entra Workload ID on Kubernetes.\n     *\n     * @param options - The identity client options to use for authentication.\n     */\n    constructor(options) {\n        // Logging environment variables for error details\n        const assignedEnv = processEnvVars(SupportedWorkloadEnvironmentVariables).assigned.join(\", \");\n        logger.info(`Found the following environment variables: ${assignedEnv}`);\n        const workloadIdentityCredentialOptions = options ?? {};\n        const tenantId = workloadIdentityCredentialOptions.tenantId || process.env.AZURE_TENANT_ID;\n        const clientId = workloadIdentityCredentialOptions.clientId || process.env.AZURE_CLIENT_ID;\n        this.federatedTokenFilePath =\n            workloadIdentityCredentialOptions.tokenFilePath || process.env.AZURE_FEDERATED_TOKEN_FILE;\n        if (tenantId) {\n            checkTenantId(logger, tenantId);\n        }\n        if (!clientId) {\n            throw new CredentialUnavailableError(`${credentialName}: is unavailable. clientId is a required parameter. In DefaultAzureCredential and ManagedIdentityCredential, this can be provided as an environment variable - \"AZURE_CLIENT_ID\".\n        See the troubleshooting guide for more information: https://aka.ms/azsdk/js/identity/workloadidentitycredential/troubleshoot`);\n        }\n        if (!tenantId) {\n            throw new CredentialUnavailableError(`${credentialName}: is unavailable. tenantId is a required parameter. In DefaultAzureCredential and ManagedIdentityCredential, this can be provided as an environment variable - \"AZURE_TENANT_ID\".\n        See the troubleshooting guide for more information: https://aka.ms/azsdk/js/identity/workloadidentitycredential/troubleshoot`);\n        }\n        if (!this.federatedTokenFilePath) {\n            throw new CredentialUnavailableError(`${credentialName}: is unavailable. federatedTokenFilePath is a required parameter. In DefaultAzureCredential and ManagedIdentityCredential, this can be provided as an environment variable - \"AZURE_FEDERATED_TOKEN_FILE\".\n        See the troubleshooting guide for more information: https://aka.ms/azsdk/js/identity/workloadidentitycredential/troubleshoot`);\n        }\n        logger.info(`Invoking ClientAssertionCredential with tenant ID: ${tenantId}, clientId: ${workloadIdentityCredentialOptions.clientId} and federated token path: [REDACTED]`);\n        this.client = new ClientAssertionCredential(tenantId, clientId, this.readFileContents.bind(this), options);\n    }\n    /**\n     * Authenticates with Microsoft Entra ID and returns an access token if successful.\n     * If authentication fails, a {@link CredentialUnavailableError} will be thrown with the details of the failure.\n     *\n     * @param scopes - The list of scopes for which the token will have access.\n     * @param options - The options used to configure any requests this\n     *                TokenCredential implementation might make.\n     */\n    async getToken(scopes, options) {\n        if (!this.client) {\n            const errorMessage = `${credentialName}: is unavailable. tenantId, clientId, and federatedTokenFilePath are required parameters. \n      In DefaultAzureCredential and ManagedIdentityCredential, these can be provided as environment variables - \n      \"AZURE_TENANT_ID\",\n      \"AZURE_CLIENT_ID\",\n      \"AZURE_FEDERATED_TOKEN_FILE\". See the troubleshooting guide for more information: https://aka.ms/azsdk/js/identity/workloadidentitycredential/troubleshoot`;\n            logger.info(errorMessage);\n            throw new CredentialUnavailableError(errorMessage);\n        }\n        logger.info(\"Invoking getToken() of Client Assertion Credential\");\n        return this.client.getToken(scopes, options);\n    }\n    async readFileContents() {\n        // Cached assertions expire after 5 minutes\n        if (this.cacheDate !== undefined && Date.now() - this.cacheDate >= 1000 * 60 * 5) {\n            this.azureFederatedTokenFileContent = undefined;\n        }\n        if (!this.federatedTokenFilePath) {\n            throw new CredentialUnavailableError(`${credentialName}: is unavailable. Invalid file path provided ${this.federatedTokenFilePath}.`);\n        }\n        if (!this.azureFederatedTokenFileContent) {\n            const file = await readFile(this.federatedTokenFilePath, \"utf8\");\n            const value = file.trim();\n            if (!value) {\n                throw new CredentialUnavailableError(`${credentialName}: is unavailable. No content on the file ${this.federatedTokenFilePath}.`);\n            }\n            else {\n                this.azureFederatedTokenFileContent = value;\n                this.cacheDate = Date.now();\n            }\n        }\n        return this.azureFederatedTokenFileContent;\n    }\n}\n//# sourceMappingURL=workloadIdentityCredential.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nimport { WorkloadIdentityCredential } from \"../workloadIdentityCredential.js\";\nimport { credentialLogger } from \"../../util/logging.js\";\nconst msiName = \"ManagedIdentityCredential - Token Exchange\";\nconst logger = credentialLogger(msiName);\n/**\n * Defines how to determine whether the token exchange MSI is available, and also how to retrieve a token from the token exchange MSI.\n *\n * Token exchange MSI (used by AKS) is the only MSI implementation handled entirely by Azure Identity.\n * The rest have been migrated to MSAL.\n */\nexport const tokenExchangeMsi = {\n    name: \"tokenExchangeMsi\",\n    async isAvailable(clientId) {\n        const env = process.env;\n        const result = Boolean((clientId || env.AZURE_CLIENT_ID) &&\n            env.AZURE_TENANT_ID &&\n            process.env.AZURE_FEDERATED_TOKEN_FILE);\n        if (!result) {\n            logger.info(`${msiName}: Unavailable. The environment variables needed are: AZURE_CLIENT_ID (or the client ID sent through the parameters), AZURE_TENANT_ID and AZURE_FEDERATED_TOKEN_FILE`);\n        }\n        return result;\n    },\n    async getToken(configuration, getTokenOptions = {}) {\n        const { scopes, clientId } = configuration;\n        const identityClientTokenCredentialOptions = {};\n        const workloadIdentityCredential = new WorkloadIdentityCredential({\n            clientId,\n            tenantId: process.env.AZURE_TENANT_ID,\n            tokenFilePath: process.env.AZURE_FEDERATED_TOKEN_FILE,\n            ...identityClientTokenCredentialOptions,\n            disableInstanceDiscovery: true,\n        });\n        return workloadIdentityCredential.getToken(scopes, getTokenOptions);\n    },\n};\n//# sourceMappingURL=tokenExchangeMsi.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nimport { getLogLevel } from \"@azure/logger\";\nimport { ManagedIdentityApplication } from \"@azure/msal-node\";\nimport { IdentityClient } from \"../../client/identityClient.js\";\nimport { AuthenticationRequiredError, CredentialUnavailableError } from \"../../errors.js\";\nimport { getMSALLogLevel, defaultLoggerCallback } from \"../../msal/utils.js\";\nimport { imdsRetryPolicy } from \"./imdsRetryPolicy.js\";\nimport { formatSuccess, formatError, credentialLogger } from \"../../util/logging.js\";\nimport { tracingClient } from \"../../util/tracing.js\";\nimport { imdsMsi } from \"./imdsMsi.js\";\nimport { tokenExchangeMsi } from \"./tokenExchangeMsi.js\";\nimport { mapScopesToResource, serviceFabricErrorMessage } from \"./utils.js\";\nconst logger = credentialLogger(\"ManagedIdentityCredential\");\n/**\n * Attempts authentication using a managed identity available at the deployment environment.\n * This authentication type works in Azure VMs, App Service instances, Azure Functions applications,\n * Azure Kubernetes Services, Azure Service Fabric instances and inside of the Azure Cloud Shell.\n *\n * More information about configuring managed identities can be found here:\n * https://learn.microsoft.com/azure/active-directory/managed-identities-azure-resources/overview\n */\nexport class ManagedIdentityCredential {\n    managedIdentityApp;\n    identityClient;\n    clientId;\n    resourceId;\n    objectId;\n    msiRetryConfig = {\n        maxRetries: 5,\n        startDelayInMs: 800,\n        intervalIncrement: 2,\n    };\n    isAvailableIdentityClient;\n    /**\n     * @internal\n     * @hidden\n     */\n    constructor(clientIdOrOptions, options) {\n        let _options;\n        if (typeof clientIdOrOptions === \"string\") {\n            this.clientId = clientIdOrOptions;\n            _options = options ?? {};\n        }\n        else {\n            this.clientId = clientIdOrOptions?.clientId;\n            _options = clientIdOrOptions ?? {};\n        }\n        this.resourceId = _options?.resourceId;\n        this.objectId = _options?.objectId;\n        // For JavaScript users.\n        const providedIds = [\n            { key: \"clientId\", value: this.clientId },\n            { key: \"resourceId\", value: this.resourceId },\n            { key: \"objectId\", value: this.objectId },\n        ].filter((id) => id.value);\n        if (providedIds.length > 1) {\n            throw new Error(`ManagedIdentityCredential: only one of 'clientId', 'resourceId', or 'objectId' can be provided. Received values: ${JSON.stringify({ clientId: this.clientId, resourceId: this.resourceId, objectId: this.objectId })}`);\n        }\n        // ManagedIdentity uses http for local requests\n        _options.allowInsecureConnection = true;\n        if (_options.retryOptions?.maxRetries !== undefined) {\n            this.msiRetryConfig.maxRetries = _options.retryOptions.maxRetries;\n        }\n        this.identityClient = new IdentityClient({\n            ..._options,\n            additionalPolicies: [{ policy: imdsRetryPolicy(this.msiRetryConfig), position: \"perCall\" }],\n        });\n        this.managedIdentityApp = new ManagedIdentityApplication({\n            managedIdentityIdParams: {\n                userAssignedClientId: this.clientId,\n                userAssignedResourceId: this.resourceId,\n                userAssignedObjectId: this.objectId,\n            },\n            system: {\n                disableInternalRetries: true,\n                networkClient: this.identityClient,\n                loggerOptions: {\n                    logLevel: getMSALLogLevel(getLogLevel()),\n                    piiLoggingEnabled: _options.loggingOptions?.enableUnsafeSupportLogging,\n                    loggerCallback: defaultLoggerCallback(logger),\n                },\n            },\n        });\n        this.isAvailableIdentityClient = new IdentityClient({\n            ..._options,\n            retryOptions: {\n                maxRetries: 0,\n            },\n        });\n        const managedIdentitySource = this.managedIdentityApp.getManagedIdentitySource();\n        // CloudShell MSI will ignore any user-assigned identity passed as parameters. To avoid confusion, we prevent this from happening as early as possible.\n        if (managedIdentitySource === \"CloudShell\") {\n            if (this.clientId || this.resourceId || this.objectId) {\n                logger.warning(`CloudShell MSI detected with user-provided IDs - throwing. Received values: ${JSON.stringify({\n                    clientId: this.clientId,\n                    resourceId: this.resourceId,\n                    objectId: this.objectId,\n                })}.`);\n                throw new CredentialUnavailableError(\"ManagedIdentityCredential: Specifying a user-assigned managed identity is not supported for CloudShell at runtime. When using Managed Identity in CloudShell, omit the clientId, resourceId, and objectId parameters.\");\n            }\n        }\n        // ServiceFabric does not support specifying user-assigned managed identity by client ID or resource ID. The managed identity selected is based on the resource configuration.\n        if (managedIdentitySource === \"ServiceFabric\") {\n            if (this.clientId || this.resourceId || this.objectId) {\n                logger.warning(`Service Fabric detected with user-provided IDs - throwing. Received values: ${JSON.stringify({\n                    clientId: this.clientId,\n                    resourceId: this.resourceId,\n                    objectId: this.objectId,\n                })}.`);\n                throw new CredentialUnavailableError(`ManagedIdentityCredential: ${serviceFabricErrorMessage}`);\n            }\n        }\n        logger.info(`Using ${managedIdentitySource} managed identity.`);\n        // Check if either clientId, resourceId or objectId was provided and log the value used\n        if (providedIds.length === 1) {\n            const { key, value } = providedIds[0];\n            logger.info(`${managedIdentitySource} with ${key}: ${value}`);\n        }\n    }\n    /**\n     * Authenticates with Microsoft Entra ID and returns an access token if successful.\n     * If authentication fails, a {@link CredentialUnavailableError} will be thrown with the details of the failure.\n     * If an unexpected error occurs, an {@link AuthenticationError} will be thrown with the details of the failure.\n     *\n     * @param scopes - The list of scopes for which the token will have access.\n     * @param options - The options used to configure any requests this\n     *                TokenCredential implementation might make.\n     */\n    async getToken(scopes, options = {}) {\n        logger.getToken.info(\"Using the MSAL provider for Managed Identity.\");\n        const resource = mapScopesToResource(scopes);\n        if (!resource) {\n            throw new CredentialUnavailableError(`ManagedIdentityCredential: Multiple scopes are not supported. Scopes: ${JSON.stringify(scopes)}`);\n        }\n        return tracingClient.withSpan(\"ManagedIdentityCredential.getToken\", options, async () => {\n            try {\n                const isTokenExchangeMsi = await tokenExchangeMsi.isAvailable(this.clientId);\n                // Most scenarios are handled by MSAL except for two:\n                // AKS pod identity - MSAL does not implement the token exchange flow.\n                // IMDS Endpoint probing - MSAL does not do any probing before trying to get a token.\n                // As a DefaultAzureCredential optimization we probe the IMDS endpoint with a short timeout and no retries before actually trying to get a token\n                // We will continue to implement these features in the Identity library.\n                const identitySource = this.managedIdentityApp.getManagedIdentitySource();\n                const isImdsMsi = identitySource === \"DefaultToImds\" || identitySource === \"Imds\"; // Neither actually checks that IMDS endpoint is available, just that it's the source the MSAL _would_ try to use.\n                logger.getToken.info(`MSAL Identity source: ${identitySource}`);\n                if (isTokenExchangeMsi) {\n                    // In the AKS scenario we will use the existing tokenExchangeMsi indefinitely.\n                    logger.getToken.info(\"Using the token exchange managed identity.\");\n                    const result = await tokenExchangeMsi.getToken({\n                        scopes,\n                        clientId: this.clientId,\n                        identityClient: this.identityClient,\n                        retryConfig: this.msiRetryConfig,\n                        resourceId: this.resourceId,\n                    });\n                    if (result === null) {\n                        throw new CredentialUnavailableError(\"Attempted to use the token exchange managed identity, but received a null response.\");\n                    }\n                    return result;\n                }\n                else if (isImdsMsi) {\n                    // In the IMDS scenario we will probe the IMDS endpoint to ensure it's available before trying to get a token.\n                    // If the IMDS endpoint is not available and this is the source that MSAL will use, we will fail-fast with an error that tells DAC to move to the next credential.\n                    logger.getToken.info(\"Using the IMDS endpoint to probe for availability.\");\n                    const isAvailable = await imdsMsi.isAvailable({\n                        scopes,\n                        clientId: this.clientId,\n                        getTokenOptions: options,\n                        identityClient: this.isAvailableIdentityClient,\n                        resourceId: this.resourceId,\n                    });\n                    if (!isAvailable) {\n                        throw new CredentialUnavailableError(`Attempted to use the IMDS endpoint, but it is not available.`);\n                    }\n                }\n                // If we got this far, it means:\n                // - This is not a tokenExchangeMsi,\n                // - We already probed for IMDS endpoint availability and failed-fast if it's unreachable.\n                // We can proceed normally by calling MSAL for a token.\n                logger.getToken.info(\"Calling into MSAL for managed identity token.\");\n                const token = await this.managedIdentityApp.acquireToken({\n                    resource,\n                });\n                this.ensureValidMsalToken(scopes, token, options);\n                logger.getToken.info(formatSuccess(scopes));\n                return {\n                    expiresOnTimestamp: token.expiresOn.getTime(),\n                    token: token.accessToken,\n                    refreshAfterTimestamp: token.refreshOn?.getTime(),\n                    tokenType: \"Bearer\",\n                };\n            }\n            catch (err) {\n                logger.getToken.error(formatError(scopes, err));\n                // AuthenticationRequiredError described as Error to enforce authentication after trying to retrieve a token silently.\n                // TODO: why would this _ever_ happen considering we're not trying the silent request in this flow?\n                if (err.name === \"AuthenticationRequiredError\") {\n                    throw err;\n                }\n                if (isNetworkError(err)) {\n                    throw new CredentialUnavailableError(`ManagedIdentityCredential: Network unreachable. Message: ${err.message}`, { cause: err });\n                }\n                throw new CredentialUnavailableError(`ManagedIdentityCredential: Authentication failed. Message ${err.message}`, { cause: err });\n            }\n        });\n    }\n    /**\n     * Ensures the validity of the MSAL token\n     */\n    ensureValidMsalToken(scopes, msalToken, getTokenOptions) {\n        const createError = (message) => {\n            logger.getToken.info(message);\n            return new AuthenticationRequiredError({\n                scopes: Array.isArray(scopes) ? scopes : [scopes],\n                getTokenOptions,\n                message,\n            });\n        };\n        if (!msalToken) {\n            throw createError(\"No response.\");\n        }\n        if (!msalToken.expiresOn) {\n            throw createError(`Response had no \"expiresOn\" property.`);\n        }\n        if (!msalToken.accessToken) {\n            throw createError(`Response had no \"accessToken\" property.`);\n        }\n    }\n}\nfunction isNetworkError(err) {\n    // MSAL error\n    if (err.errorCode === \"network_error\") {\n        return true;\n    }\n    // Probe errors\n    if (err.code === \"ENETUNREACH\" || err.code === \"EHOSTUNREACH\") {\n        return true;\n    }\n    // This is a special case for Docker Desktop which responds with a 403 with a message that contains \"A socket operation was attempted to an unreachable network\" or \"A socket operation was attempted to an unreachable host\"\n    // rather than just timing out, as expected.\n    if (err.statusCode === 403 || err.code === 403) {\n        if (err.message.includes(\"unreachable\")) {\n            return true;\n        }\n    }\n    return false;\n}\n//# sourceMappingURL=index.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nimport { credentialLogger, formatError, formatSuccess } from \"../util/logging.js\";\nimport { CredentialUnavailableError } from \"../errors.js\";\nimport child_process from \"child_process\";\nimport { checkTenantId, processMultiTenantRequest, resolveAdditionallyAllowedTenantIds, } from \"../util/tenantIdUtils.js\";\nimport { tracingClient } from \"../util/tracing.js\";\nimport { ensureValidScopeForDevTimeCreds } from \"../util/scopeUtils.js\";\nconst logger = credentialLogger(\"AzureDeveloperCliCredential\");\n/**\n * Mockable reference to the Developer CLI credential cliCredentialFunctions\n * @internal\n */\nexport const developerCliCredentialInternals = {\n    /**\n     * @internal\n     */\n    getSafeWorkingDir() {\n        if (process.platform === \"win32\") {\n            let systemRoot = process.env.SystemRoot || process.env[\"SYSTEMROOT\"];\n            if (!systemRoot) {\n                logger.getToken.warning(\"The SystemRoot environment variable is not set. This may cause issues when using the Azure Developer CLI credential.\");\n                systemRoot = \"C:\\\\Windows\";\n            }\n            return systemRoot;\n        }\n        else {\n            return \"/bin\";\n        }\n    },\n    /**\n     * Gets the access token from Azure Developer CLI\n     * @param scopes - The scopes to use when getting the token\n     * @internal\n     */\n    async getAzdAccessToken(scopes, tenantId, timeout) {\n        let tenantSection = [];\n        if (tenantId) {\n            tenantSection = [\"--tenant-id\", tenantId];\n        }\n        return new Promise((resolve, reject) => {\n            try {\n                const args = [\n                    \"auth\",\n                    \"token\",\n                    \"--output\",\n                    \"json\",\n                    ...scopes.reduce((previous, current) => previous.concat(\"--scope\", current), []),\n                    ...tenantSection,\n                ];\n                const command = [\"azd\", ...args].join(\" \");\n                child_process.exec(command, {\n                    cwd: developerCliCredentialInternals.getSafeWorkingDir(),\n                    timeout,\n                }, (error, stdout, stderr) => {\n                    resolve({ stdout, stderr, error });\n                });\n            }\n            catch (err) {\n                reject(err);\n            }\n        });\n    },\n};\n/**\n * Azure Developer CLI is a command-line interface tool that allows developers to create, manage, and deploy\n * resources in Azure. It's built on top of the Azure CLI and provides additional functionality specific\n * to Azure developers. It allows users to authenticate as a user and/or a service principal against\n * <a href=\"https://learn.microsoft.com/entra/fundamentals/\">Microsoft Entra ID</a>. The\n * AzureDeveloperCliCredential authenticates in a development environment and acquires a token on behalf of\n * the logged-in user or service principal in the Azure Developer CLI. It acts as the Azure Developer CLI logged in user or\n * service principal and executes an Azure CLI command underneath to authenticate the application against\n * Microsoft Entra ID.\n *\n * <h2> Configure AzureDeveloperCliCredential </h2>\n *\n * To use this credential, the developer needs to authenticate locally in Azure Developer CLI using one of the\n * commands below:\n *\n * <ol>\n *     <li>Run \"azd auth login\" in Azure Developer CLI to authenticate interactively as a user.</li>\n *     <li>Run \"azd auth login --client-id clientID --client-secret clientSecret\n *     --tenant-id tenantID\" to authenticate as a service principal.</li>\n * </ol>\n *\n * You may need to repeat this process after a certain time period, depending on the refresh token validity in your\n * organization. Generally, the refresh token validity period is a few weeks to a few months.\n * AzureDeveloperCliCredential will prompt you to sign in again.\n */\nexport class AzureDeveloperCliCredential {\n    tenantId;\n    additionallyAllowedTenantIds;\n    timeout;\n    /**\n     * Creates an instance of the {@link AzureDeveloperCliCredential}.\n     *\n     * To use this credential, ensure that you have already logged\n     * in via the 'azd' tool using the command \"azd auth login\" from the commandline.\n     *\n     * @param options - Options, to optionally allow multi-tenant requests.\n     */\n    constructor(options) {\n        if (options?.tenantId) {\n            checkTenantId(logger, options?.tenantId);\n            this.tenantId = options?.tenantId;\n        }\n        this.additionallyAllowedTenantIds = resolveAdditionallyAllowedTenantIds(options?.additionallyAllowedTenants);\n        this.timeout = options?.processTimeoutInMs;\n    }\n    /**\n     * Authenticates with Microsoft Entra ID and returns an access token if successful.\n     * If authentication fails, a {@link CredentialUnavailableError} will be thrown with the details of the failure.\n     *\n     * @param scopes - The list of scopes for which the token will have access.\n     * @param options - The options used to configure any requests this\n     *                TokenCredential implementation might make.\n     */\n    async getToken(scopes, options = {}) {\n        const tenantId = processMultiTenantRequest(this.tenantId, options, this.additionallyAllowedTenantIds);\n        if (tenantId) {\n            checkTenantId(logger, tenantId);\n        }\n        let scopeList;\n        if (typeof scopes === \"string\") {\n            scopeList = [scopes];\n        }\n        else {\n            scopeList = scopes;\n        }\n        logger.getToken.info(`Using the scopes ${scopes}`);\n        return tracingClient.withSpan(`${this.constructor.name}.getToken`, options, async () => {\n            try {\n                scopeList.forEach((scope) => {\n                    ensureValidScopeForDevTimeCreds(scope, logger);\n                });\n                const obj = await developerCliCredentialInternals.getAzdAccessToken(scopeList, tenantId, this.timeout);\n                const isNotLoggedInError = obj.stderr?.match(\"not logged in, run `azd login` to login\") ||\n                    obj.stderr?.match(\"not logged in, run `azd auth login` to login\");\n                const isNotInstallError = obj.stderr?.match(\"azd:(.*)not found\") ||\n                    obj.stderr?.startsWith(\"'azd' is not recognized\");\n                if (isNotInstallError || (obj.error && obj.error.code === \"ENOENT\")) {\n                    const error = new CredentialUnavailableError(\"Azure Developer CLI couldn't be found. To mitigate this issue, see the troubleshooting guidelines at https://aka.ms/azsdk/js/identity/azdevclicredential/troubleshoot.\");\n                    logger.getToken.info(formatError(scopes, error));\n                    throw error;\n                }\n                if (isNotLoggedInError) {\n                    const error = new CredentialUnavailableError(\"Please run 'azd auth login' from a command prompt to authenticate before using this credential. For more information, see the troubleshooting guidelines at https://aka.ms/azsdk/js/identity/azdevclicredential/troubleshoot.\");\n                    logger.getToken.info(formatError(scopes, error));\n                    throw error;\n                }\n                try {\n                    const resp = JSON.parse(obj.stdout);\n                    logger.getToken.info(formatSuccess(scopes));\n                    return {\n                        token: resp.token,\n                        expiresOnTimestamp: new Date(resp.expiresOn).getTime(),\n                        tokenType: \"Bearer\",\n                    };\n                }\n                catch (e) {\n                    if (obj.stderr) {\n                        throw new CredentialUnavailableError(obj.stderr);\n                    }\n                    throw e;\n                }\n            }\n            catch (err) {\n                const error = err.name === \"CredentialUnavailableError\"\n                    ? err\n                    : new CredentialUnavailableError(err.message || \"Unknown error while trying to retrieve the access token\");\n                logger.getToken.info(formatError(scopes, error));\n                throw error;\n            }\n        });\n    }\n}\n//# sourceMappingURL=azureDeveloperCliCredential.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nimport { formatError } from \"./logging.js\";\n/**\n * @internal\n */\nexport function checkSubscription(logger, subscription) {\n    if (!subscription.match(/^[0-9a-zA-Z-._ ]+$/)) {\n        const error = new Error(`Subscription '${subscription}' contains invalid characters. If this is the name of a subscription, use ` +\n            `its ID instead. You can locate your subscription by following the instructions listed here: ` +\n            `https://learn.microsoft.com/azure/azure-portal/get-subscription-tenant-id`);\n        logger.info(formatError(\"\", error));\n        throw error;\n    }\n}\n//# sourceMappingURL=subscriptionUtils.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nimport { checkTenantId, processMultiTenantRequest, resolveAdditionallyAllowedTenantIds, } from \"../util/tenantIdUtils.js\";\nimport { credentialLogger, formatError, formatSuccess } from \"../util/logging.js\";\nimport { ensureValidScopeForDevTimeCreds, getScopeResource } from \"../util/scopeUtils.js\";\nimport { CredentialUnavailableError } from \"../errors.js\";\nimport child_process from \"child_process\";\nimport { tracingClient } from \"../util/tracing.js\";\nimport { checkSubscription } from \"../util/subscriptionUtils.js\";\nconst logger = credentialLogger(\"AzureCliCredential\");\n/**\n * Mockable reference to the CLI credential cliCredentialFunctions\n * @internal\n */\nexport const cliCredentialInternals = {\n    /**\n     * @internal\n     */\n    getSafeWorkingDir() {\n        if (process.platform === \"win32\") {\n            let systemRoot = process.env.SystemRoot || process.env[\"SYSTEMROOT\"];\n            if (!systemRoot) {\n                logger.getToken.warning(\"The SystemRoot environment variable is not set. This may cause issues when using the Azure CLI credential.\");\n                systemRoot = \"C:\\\\Windows\";\n            }\n            return systemRoot;\n        }\n        else {\n            return \"/bin\";\n        }\n    },\n    /**\n     * Gets the access token from Azure CLI\n     * @param resource - The resource to use when getting the token\n     * @internal\n     */\n    async getAzureCliAccessToken(resource, tenantId, subscription, timeout) {\n        let tenantSection = [];\n        let subscriptionSection = [];\n        if (tenantId) {\n            tenantSection = [\"--tenant\", tenantId];\n        }\n        if (subscription) {\n            // Add quotes around the subscription to handle subscriptions with spaces\n            subscriptionSection = [\"--subscription\", `\"${subscription}\"`];\n        }\n        return new Promise((resolve, reject) => {\n            try {\n                const args = [\n                    \"account\",\n                    \"get-access-token\",\n                    \"--output\",\n                    \"json\",\n                    \"--resource\",\n                    resource,\n                    ...tenantSection,\n                    ...subscriptionSection,\n                ];\n                const command = [\"az\", ...args].join(\" \");\n                child_process.exec(command, { cwd: cliCredentialInternals.getSafeWorkingDir(), timeout }, (error, stdout, stderr) => {\n                    resolve({ stdout: stdout, stderr: stderr, error });\n                });\n            }\n            catch (err) {\n                reject(err);\n            }\n        });\n    },\n};\n/**\n * This credential will use the currently logged-in user login information\n * via the Azure CLI ('az') commandline tool.\n * To do so, it will read the user access token and expire time\n * with Azure CLI command \"az account get-access-token\".\n */\nexport class AzureCliCredential {\n    tenantId;\n    additionallyAllowedTenantIds;\n    timeout;\n    subscription;\n    /**\n     * Creates an instance of the {@link AzureCliCredential}.\n     *\n     * To use this credential, ensure that you have already logged\n     * in via the 'az' tool using the command \"az login\" from the commandline.\n     *\n     * @param options - Options, to optionally allow multi-tenant requests.\n     */\n    constructor(options) {\n        if (options?.tenantId) {\n            checkTenantId(logger, options?.tenantId);\n            this.tenantId = options?.tenantId;\n        }\n        if (options?.subscription) {\n            checkSubscription(logger, options?.subscription);\n            this.subscription = options?.subscription;\n        }\n        this.additionallyAllowedTenantIds = resolveAdditionallyAllowedTenantIds(options?.additionallyAllowedTenants);\n        this.timeout = options?.processTimeoutInMs;\n    }\n    /**\n     * Authenticates with Microsoft Entra ID and returns an access token if successful.\n     * If authentication fails, a {@link CredentialUnavailableError} will be thrown with the details of the failure.\n     *\n     * @param scopes - The list of scopes for which the token will have access.\n     * @param options - The options used to configure any requests this\n     *                TokenCredential implementation might make.\n     */\n    async getToken(scopes, options = {}) {\n        const tenantId = processMultiTenantRequest(this.tenantId, options, this.additionallyAllowedTenantIds);\n        if (tenantId) {\n            checkTenantId(logger, tenantId);\n        }\n        if (this.subscription) {\n            checkSubscription(logger, this.subscription);\n        }\n        const scope = typeof scopes === \"string\" ? scopes : scopes[0];\n        logger.getToken.info(`Using the scope ${scope}`);\n        return tracingClient.withSpan(`${this.constructor.name}.getToken`, options, async () => {\n            try {\n                ensureValidScopeForDevTimeCreds(scope, logger);\n                const resource = getScopeResource(scope);\n                const obj = await cliCredentialInternals.getAzureCliAccessToken(resource, tenantId, this.subscription, this.timeout);\n                const specificScope = obj.stderr?.match(\"(.*)az login --scope(.*)\");\n                const isLoginError = obj.stderr?.match(\"(.*)az login(.*)\") && !specificScope;\n                const isNotInstallError = obj.stderr?.match(\"az:(.*)not found\") || obj.stderr?.startsWith(\"'az' is not recognized\");\n                if (isNotInstallError) {\n                    const error = new CredentialUnavailableError(\"Azure CLI could not be found. Please visit https://aka.ms/azure-cli for installation instructions and then, once installed, authenticate to your Azure account using 'az login'.\");\n                    logger.getToken.info(formatError(scopes, error));\n                    throw error;\n                }\n                if (isLoginError) {\n                    const error = new CredentialUnavailableError(\"Please run 'az login' from a command prompt to authenticate before using this credential.\");\n                    logger.getToken.info(formatError(scopes, error));\n                    throw error;\n                }\n                try {\n                    const responseData = obj.stdout;\n                    const response = this.parseRawResponse(responseData);\n                    logger.getToken.info(formatSuccess(scopes));\n                    return response;\n                }\n                catch (e) {\n                    if (obj.stderr) {\n                        throw new CredentialUnavailableError(obj.stderr);\n                    }\n                    throw e;\n                }\n            }\n            catch (err) {\n                const error = err.name === \"CredentialUnavailableError\"\n                    ? err\n                    : new CredentialUnavailableError(err.message || \"Unknown error while trying to retrieve the access token\");\n                logger.getToken.info(formatError(scopes, error));\n                throw error;\n            }\n        });\n    }\n    /**\n     * Parses the raw JSON response from the Azure CLI into a usable AccessToken object\n     *\n     * @param rawResponse - The raw JSON response from the Azure CLI\n     * @returns An access token with the expiry time parsed from the raw response\n     *\n     * The expiryTime of the credential's access token, in milliseconds, is calculated as follows:\n     *\n     * When available, expires_on (introduced in Azure CLI v2.54.0) will be preferred. Otherwise falls back to expiresOn.\n     */\n    parseRawResponse(rawResponse) {\n        const response = JSON.parse(rawResponse);\n        const token = response.accessToken;\n        // if available, expires_on will be a number representing seconds since epoch.\n        // ensure it's a number or NaN\n        let expiresOnTimestamp = Number.parseInt(response.expires_on, 10) * 1000;\n        if (!isNaN(expiresOnTimestamp)) {\n            logger.getToken.info(\"expires_on is available and is valid, using it\");\n            return {\n                token,\n                expiresOnTimestamp,\n                tokenType: \"Bearer\",\n            };\n        }\n        // fallback to the older expiresOn - an RFC3339 date string\n        expiresOnTimestamp = new Date(response.expiresOn).getTime();\n        // ensure expiresOn is well-formatted\n        if (isNaN(expiresOnTimestamp)) {\n            throw new CredentialUnavailableError(`Unexpected response from Azure CLI when getting token. Expected \"expiresOn\" to be a RFC3339 date string. Got: \"${response.expiresOn}\"`);\n        }\n        return {\n            token,\n            expiresOnTimestamp,\n            tokenType: \"Bearer\",\n        };\n    }\n}\n//# sourceMappingURL=azureCliCredential.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nimport childProcess from \"node:child_process\";\n/**\n * Easy to mock childProcess utils.\n * @internal\n */\nexport const processUtils = {\n    /**\n     * Promisifying childProcess.execFile\n     * @internal\n     */\n    execFile(file, params, options) {\n        return new Promise((resolve, reject) => {\n            childProcess.execFile(file, params, options, (error, stdout, stderr) => {\n                if (Buffer.isBuffer(stdout)) {\n                    stdout = stdout.toString(\"utf8\");\n                }\n                if (Buffer.isBuffer(stderr)) {\n                    stderr = stderr.toString(\"utf8\");\n                }\n                if (stderr || error) {\n                    reject(stderr ? new Error(stderr) : error);\n                }\n                else {\n                    resolve(stdout);\n                }\n            });\n        });\n    },\n};\n//# sourceMappingURL=processUtils.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nimport { checkTenantId, processMultiTenantRequest, resolveAdditionallyAllowedTenantIds, } from \"../util/tenantIdUtils.js\";\nimport { credentialLogger, formatError, formatSuccess } from \"../util/logging.js\";\nimport { ensureValidScopeForDevTimeCreds, getScopeResource } from \"../util/scopeUtils.js\";\nimport { CredentialUnavailableError } from \"../errors.js\";\nimport { processUtils } from \"../util/processUtils.js\";\nimport { tracingClient } from \"../util/tracing.js\";\nconst logger = credentialLogger(\"AzurePowerShellCredential\");\nconst isWindows = process.platform === \"win32\";\n/**\n * Returns a platform-appropriate command name by appending \".exe\" on Windows.\n *\n * @internal\n */\nexport function formatCommand(commandName) {\n    if (isWindows) {\n        return `${commandName}.exe`;\n    }\n    else {\n        return commandName;\n    }\n}\n/**\n * Receives a list of commands to run, executes them, then returns the outputs.\n * If anything fails, an error is thrown.\n * @internal\n */\nasync function runCommands(commands, timeout) {\n    const results = [];\n    for (const command of commands) {\n        const [file, ...parameters] = command;\n        const result = (await processUtils.execFile(file, parameters, {\n            encoding: \"utf8\",\n            timeout,\n        }));\n        results.push(result);\n    }\n    return results;\n}\n/**\n * Known PowerShell errors\n * @internal\n */\nexport const powerShellErrors = {\n    login: \"Run Connect-AzAccount to login\",\n    installed: \"The specified module 'Az.Accounts' with version '2.2.0' was not loaded because no valid module file was found in any module directory\",\n};\n/**\n * Messages to use when throwing in this credential.\n * @internal\n */\nexport const powerShellPublicErrorMessages = {\n    login: \"Please run 'Connect-AzAccount' from PowerShell to authenticate before using this credential.\",\n    installed: `The 'Az.Account' module >= 2.2.0 is not installed. Install the Azure Az PowerShell module with: \"Install-Module -Name Az -Scope CurrentUser -Repository PSGallery -Force\".`,\n    troubleshoot: `To troubleshoot, visit https://aka.ms/azsdk/js/identity/powershellcredential/troubleshoot.`,\n};\n// PowerShell Azure User not logged in error check.\nconst isLoginError = (err) => err.message.match(`(.*)${powerShellErrors.login}(.*)`);\n// Az Module not Installed in Azure PowerShell check.\nconst isNotInstalledError = (err) => err.message.match(powerShellErrors.installed);\n/**\n * The PowerShell commands to be tried, in order.\n *\n * @internal\n */\nexport const commandStack = [formatCommand(\"pwsh\")];\nif (isWindows) {\n    commandStack.push(formatCommand(\"powershell\"));\n}\n/**\n * This credential will use the currently logged-in user information from the\n * Azure PowerShell module. To do so, it will read the user access token and\n * expire time with Azure PowerShell command `Get-AzAccessToken -ResourceUrl {ResourceScope}`\n */\nexport class AzurePowerShellCredential {\n    tenantId;\n    additionallyAllowedTenantIds;\n    timeout;\n    /**\n     * Creates an instance of the {@link AzurePowerShellCredential}.\n     *\n     * To use this credential:\n     * - Install the Azure Az PowerShell module with:\n     *   `Install-Module -Name Az -Scope CurrentUser -Repository PSGallery -Force`.\n     * - You have already logged in to Azure PowerShell using the command\n     * `Connect-AzAccount` from the command line.\n     *\n     * @param options - Options, to optionally allow multi-tenant requests.\n     */\n    constructor(options) {\n        if (options?.tenantId) {\n            checkTenantId(logger, options?.tenantId);\n            this.tenantId = options?.tenantId;\n        }\n        this.additionallyAllowedTenantIds = resolveAdditionallyAllowedTenantIds(options?.additionallyAllowedTenants);\n        this.timeout = options?.processTimeoutInMs;\n    }\n    /**\n     * Gets the access token from Azure PowerShell\n     * @param resource - The resource to use when getting the token\n     */\n    async getAzurePowerShellAccessToken(resource, tenantId, timeout) {\n        // Clone the stack to avoid mutating it while iterating\n        for (const powerShellCommand of [...commandStack]) {\n            try {\n                await runCommands([[powerShellCommand, \"/?\"]], timeout);\n            }\n            catch (e) {\n                // Remove this credential from the original stack so that we don't try it again.\n                commandStack.shift();\n                continue;\n            }\n            const results = await runCommands([\n                [\n                    powerShellCommand,\n                    \"-NoProfile\",\n                    \"-NonInteractive\",\n                    \"-Command\",\n                    `\n          $tenantId = \"${tenantId ?? \"\"}\"\n          $m = Import-Module Az.Accounts -MinimumVersion 2.2.0 -PassThru\n          $useSecureString = $m.Version -ge [version]'2.17.0' -and $m.Version -lt [version]'5.0.0'\n\n          $params = @{\n            ResourceUrl = \"${resource}\"\n          }\n\n          if ($tenantId.Length -gt 0) {\n            $params[\"TenantId\"] = $tenantId\n          }\n\n          if ($useSecureString) {\n            $params[\"AsSecureString\"] = $true\n          }\n\n          $token = Get-AzAccessToken @params\n\n          $result = New-Object -TypeName PSObject\n          $result | Add-Member -MemberType NoteProperty -Name ExpiresOn -Value $token.ExpiresOn\n\n          if ($token.Token -is [System.Security.SecureString]) {\n            if ($PSVersionTable.PSVersion.Major -lt 7) {\n              $ssPtr = [System.Runtime.InteropServices.Marshal]::SecureStringToBSTR($token.Token)\n              try {\n                $result | Add-Member -MemberType NoteProperty -Name Token -Value ([System.Runtime.InteropServices.Marshal]::PtrToStringBSTR($ssPtr))\n              }\n              finally {\n                [System.Runtime.InteropServices.Marshal]::ZeroFreeBSTR($ssPtr)\n              }\n            }\n            else {\n              $result | Add-Member -MemberType NoteProperty -Name Token -Value ($token.Token | ConvertFrom-SecureString -AsPlainText)\n            }\n          }\n          else {\n            $result | Add-Member -MemberType NoteProperty -Name Token -Value $token.Token\n          }\n\n          Write-Output (ConvertTo-Json $result)\n          `,\n                ],\n            ]);\n            const result = results[0];\n            return parseJsonToken(result);\n        }\n        throw new Error(`Unable to execute PowerShell. Ensure that it is installed in your system`);\n    }\n    /**\n     * Authenticates with Microsoft Entra ID and returns an access token if successful.\n     * If the authentication cannot be performed through PowerShell, a {@link CredentialUnavailableError} will be thrown.\n     *\n     * @param scopes - The list of scopes for which the token will have access.\n     * @param options - The options used to configure any requests this TokenCredential implementation might make.\n     */\n    async getToken(scopes, options = {}) {\n        return tracingClient.withSpan(`${this.constructor.name}.getToken`, options, async () => {\n            const tenantId = processMultiTenantRequest(this.tenantId, options, this.additionallyAllowedTenantIds);\n            const scope = typeof scopes === \"string\" ? scopes : scopes[0];\n            if (tenantId) {\n                checkTenantId(logger, tenantId);\n            }\n            try {\n                ensureValidScopeForDevTimeCreds(scope, logger);\n                logger.getToken.info(`Using the scope ${scope}`);\n                const resource = getScopeResource(scope);\n                const response = await this.getAzurePowerShellAccessToken(resource, tenantId, this.timeout);\n                logger.getToken.info(formatSuccess(scopes));\n                return {\n                    token: response.Token,\n                    expiresOnTimestamp: new Date(response.ExpiresOn).getTime(),\n                    tokenType: \"Bearer\",\n                };\n            }\n            catch (err) {\n                if (isNotInstalledError(err)) {\n                    const error = new CredentialUnavailableError(powerShellPublicErrorMessages.installed);\n                    logger.getToken.info(formatError(scope, error));\n                    throw error;\n                }\n                else if (isLoginError(err)) {\n                    const error = new CredentialUnavailableError(powerShellPublicErrorMessages.login);\n                    logger.getToken.info(formatError(scope, error));\n                    throw error;\n                }\n                const error = new CredentialUnavailableError(`${err}. ${powerShellPublicErrorMessages.troubleshoot}`);\n                logger.getToken.info(formatError(scope, error));\n                throw error;\n            }\n        });\n    }\n}\n/**\n *\n * @internal\n */\nexport async function parseJsonToken(result) {\n    const jsonRegex = /{[^{}]*}/g;\n    const matches = result.match(jsonRegex);\n    let resultWithoutToken = result;\n    if (matches) {\n        try {\n            for (const item of matches) {\n                try {\n                    const jsonContent = JSON.parse(item);\n                    if (jsonContent?.Token) {\n                        resultWithoutToken = resultWithoutToken.replace(item, \"\");\n                        if (resultWithoutToken) {\n                            logger.getToken.warning(resultWithoutToken);\n                        }\n                        return jsonContent;\n                    }\n                }\n                catch (e) {\n                    continue;\n                }\n            }\n        }\n        catch (e) {\n            throw new Error(`Unable to parse the output of PowerShell. Received output: ${result}`);\n        }\n    }\n    throw new Error(`No access token found in the output. Received output: ${result}`);\n}\n//# sourceMappingURL=azurePowerShellCredential.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nimport { credentialLogger, formatError } from \"../util/logging.js\";\nimport { processMultiTenantRequest, resolveAdditionallyAllowedTenantIds, } from \"../util/tenantIdUtils.js\";\nimport { CredentialUnavailableError } from \"../errors.js\";\nimport { checkTenantId } from \"../util/tenantIdUtils.js\";\nimport { createMsalClient } from \"../msal/nodeFlows/msalClient.js\";\nimport { ensureScopes } from \"../util/scopeUtils.js\";\nimport { hasVSCodePlugin, vsCodeAuthRecordPath } from \"../msal/nodeFlows/msalPlugins.js\";\nimport { deserializeAuthenticationRecord } from \"../msal/utils.js\";\nimport { readFile } from \"node:fs/promises\";\nconst CommonTenantId = \"common\";\nconst VSCodeClientId = \"aebc6443-996d-45c2-90f0-388ff96faa56\";\nconst logger = credentialLogger(\"VisualStudioCodeCredential\");\n// Map of unsupported Tenant IDs and the errors we will be throwing.\nconst unsupportedTenantIds = {\n    adfs: \"The VisualStudioCodeCredential does not support authentication with ADFS tenants.\",\n};\nfunction checkUnsupportedTenant(tenantId) {\n    // If the Tenant ID isn't supported, we throw.\n    const unsupportedTenantError = unsupportedTenantIds[tenantId];\n    if (unsupportedTenantError) {\n        throw new CredentialUnavailableError(unsupportedTenantError);\n    }\n}\n/**\n * Connects to Azure using the user account signed in through the Azure Resources extension in Visual Studio Code.\n * Once the user has logged in via the extension, this credential can share the same refresh token\n * that is cached by the extension.\n */\nexport class VisualStudioCodeCredential {\n    tenantId;\n    additionallyAllowedTenantIds;\n    msalClient;\n    options;\n    /**\n     * Creates an instance of VisualStudioCodeCredential to use for automatically authenticating via VSCode.\n     *\n     * **Note**: `VisualStudioCodeCredential` is provided by a plugin package:\n     * `@azure/identity-vscode`. If this package is not installed, then authentication using\n     * `VisualStudioCodeCredential` will not be available.\n     *\n     * @param options - Options for configuring the client which makes the authentication request.\n     */\n    constructor(options) {\n        this.options = options || {};\n        if (options && options.tenantId) {\n            checkTenantId(logger, options.tenantId);\n            this.tenantId = options.tenantId;\n        }\n        else {\n            this.tenantId = CommonTenantId;\n        }\n        this.additionallyAllowedTenantIds = resolveAdditionallyAllowedTenantIds(options?.additionallyAllowedTenants);\n        checkUnsupportedTenant(this.tenantId);\n    }\n    /**\n     * Runs preparations for any further getToken request:\n     *   - Validates that the plugin is available.\n     *   - Loads the authentication record from VSCode if available.\n     *   - Creates the MSAL client with the loaded plugin and authentication record.\n     */\n    async prepare(scopes) {\n        const tenantId = processMultiTenantRequest(this.tenantId, this.options, this.additionallyAllowedTenantIds, logger) || this.tenantId;\n        if (!hasVSCodePlugin() || !vsCodeAuthRecordPath) {\n            throw new CredentialUnavailableError(\"Visual Studio Code Authentication is not available.\" +\n                \" Ensure you have have Azure Resources Extension installed in VS Code,\" +\n                \" signed into Azure via VS Code, installed the @azure/identity-vscode package,\" +\n                \" and properly configured the extension.\");\n        }\n        // Load the authentication record directly from the path\n        const authenticationRecord = await this.loadAuthRecord(vsCodeAuthRecordPath, scopes);\n        this.msalClient = createMsalClient(VSCodeClientId, tenantId, {\n            ...this.options,\n            isVSCodeCredential: true,\n            brokerOptions: {\n                enabled: true,\n                parentWindowHandle: new Uint8Array(0),\n                useDefaultBrokerAccount: true,\n            },\n            authenticationRecord,\n        });\n    }\n    /**\n     * The promise of the single preparation that will be executed at the first getToken request for an instance of this class.\n     */\n    preparePromise;\n    /**\n     * Runs preparations for any further getToken, but only once.\n     */\n    prepareOnce(scopes) {\n        if (!this.preparePromise) {\n            this.preparePromise = this.prepare(scopes);\n        }\n        return this.preparePromise;\n    }\n    /**\n     * Returns the token found by searching VSCode's authentication cache or\n     * returns null if no token could be found.\n     *\n     * @param scopes - The list of scopes for which the token will have access.\n     * @param options - The options used to configure any requests this\n     *                `TokenCredential` implementation might make.\n     */\n    async getToken(scopes, options) {\n        // Load the plugin and authentication record only once\n        const scopeArray = ensureScopes(scopes);\n        await this.prepareOnce(scopeArray);\n        if (!this.msalClient) {\n            throw new CredentialUnavailableError(\"Visual Studio Code Authentication failed to initialize.\" +\n                \" Ensure you have have Azure Resources Extension installed in VS Code,\" +\n                \" signed into Azure via VS Code, installed the @azure/identity-vscode package,\" +\n                \" and properly configured the extension.\");\n        }\n        return this.msalClient.getTokenByInteractiveRequest(scopeArray, options || {});\n    }\n    /**\n     * Loads the authentication record from the specified path.\n     * @param authRecordPath - The path to the authentication record file.\n     * @param scopes - The list of scopes for which the token will have access.\n     * @returns The authentication record or undefined if loading fails.\n     */\n    async loadAuthRecord(authRecordPath, scopes) {\n        try {\n            const authRecordContent = await readFile(authRecordPath, { encoding: \"utf8\" });\n            return deserializeAuthenticationRecord(authRecordContent);\n        }\n        catch (error) {\n            logger.getToken.info(formatError(scopes, error));\n            throw new CredentialUnavailableError(\"Cannot load authentication record in Visual Studio Code.\" +\n                \" Ensure you have have Azure Resources Extension installed in VS Code,\" +\n                \" signed into Azure via VS Code, installed the @azure/identity-vscode package,\" +\n                \" and properly configured the extension.\");\n        }\n    }\n}\n//# sourceMappingURL=visualStudioCodeCredential.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nimport { processMultiTenantRequest, resolveAdditionallyAllowedTenantIds, resolveTenantId, } from \"../util/tenantIdUtils.js\";\nimport { credentialLogger, formatError } from \"../util/logging.js\";\nimport { ensureScopes } from \"../util/scopeUtils.js\";\nimport { tracingClient } from \"../util/tracing.js\";\nimport { createMsalClient } from \"../msal/nodeFlows/msalClient.js\";\nimport { DeveloperSignOnClientId } from \"../constants.js\";\nimport { CredentialUnavailableError } from \"../errors.js\";\nconst logger = credentialLogger(\"BrokerCredential\");\n/**\n * Enables authentication to Microsoft Entra ID using WAM (Web Account Manager) broker.\n * This credential extends InteractiveBrowserCredential and provides additional broker-specific functionality.\n */\nexport class BrokerCredential {\n    brokerMsalClient;\n    brokerTenantId;\n    brokerAdditionallyAllowedTenantIds;\n    /**\n     * Creates an instance of BrokerCredential with the required broker options.\n     *\n     * This credential uses WAM (Web Account Manager) for authentication, which provides\n     * better security and user experience on Windows platforms.\n     *\n     * @param options - Options for configuring the broker credential, including required broker options.\n     */\n    constructor(options) {\n        this.brokerTenantId = resolveTenantId(logger, options.tenantId);\n        this.brokerAdditionallyAllowedTenantIds = resolveAdditionallyAllowedTenantIds(options?.additionallyAllowedTenants);\n        const msalClientOptions = {\n            ...options,\n            tokenCredentialOptions: options,\n            logger,\n            brokerOptions: {\n                enabled: true,\n                parentWindowHandle: new Uint8Array(0),\n                useDefaultBrokerAccount: true,\n            },\n        };\n        this.brokerMsalClient = createMsalClient(DeveloperSignOnClientId, this.brokerTenantId, msalClientOptions);\n    }\n    /**\n     * Authenticates with Microsoft Entra ID using WAM broker and returns an access token if successful.\n     * If authentication fails, a {@link CredentialUnavailableError} will be thrown with the details of the failure.\n     *\n     * This method extends the base getToken method to support silentAuthenticationOnly option\n     * when using broker authentication.\n     *\n     * @param scopes - The list of scopes for which the token will have access.\n     * @param options - The options used to configure the token request, including silentAuthenticationOnly option.\n     */\n    async getToken(scopes, options = {}) {\n        return tracingClient.withSpan(`${this.constructor.name}.getToken`, options, async (newOptions) => {\n            newOptions.tenantId = processMultiTenantRequest(this.brokerTenantId, newOptions, this.brokerAdditionallyAllowedTenantIds, logger);\n            const arrayScopes = ensureScopes(scopes);\n            try {\n                return this.brokerMsalClient.getBrokeredToken(arrayScopes, true, {\n                    ...newOptions,\n                    disableAutomaticAuthentication: true,\n                });\n            }\n            catch (e) {\n                logger.getToken.info(formatError(arrayScopes, e));\n                throw new CredentialUnavailableError(\"Failed to acquire token using broker authentication\", { cause: e });\n            }\n        });\n    }\n}\n//# sourceMappingURL=brokerCredential.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nimport { EnvironmentCredential } from \"./environmentCredential.js\";\nimport { ManagedIdentityCredential } from \"./managedIdentityCredential/index.js\";\nimport { WorkloadIdentityCredential } from \"./workloadIdentityCredential.js\";\nimport { AzureDeveloperCliCredential } from \"./azureDeveloperCliCredential.js\";\nimport { AzureCliCredential } from \"./azureCliCredential.js\";\nimport { AzurePowerShellCredential } from \"./azurePowerShellCredential.js\";\nimport { VisualStudioCodeCredential } from \"./visualStudioCodeCredential.js\";\nimport { BrokerCredential } from \"./brokerCredential.js\";\n/**\n * Creates a {@link BrokerCredential} instance with the provided options.\n * This credential uses the Windows Authentication Manager (WAM) broker for authentication.\n * It will only attempt to authenticate silently using the default broker account\n *\n * @param options - Options for configuring the credential.\n *\n * @internal\n */\nexport function createDefaultBrokerCredential(options = {}) {\n    return new BrokerCredential(options);\n}\n/**\n * Creates a {@link VisualStudioCodeCredential} from the provided options.\n * @param options - Options to configure the credential.\n *\n * @internal\n */\nexport function createDefaultVisualStudioCodeCredential(options = {}) {\n    return new VisualStudioCodeCredential(options);\n}\n/**\n * Creates a {@link ManagedIdentityCredential} from the provided options.\n * @param options - Options to configure the credential.\n *\n * @internal\n */\nexport function createDefaultManagedIdentityCredential(options = {}) {\n    options.retryOptions ??= {\n        maxRetries: 5,\n        retryDelayInMs: 800,\n    };\n    const managedIdentityClientId = options?.managedIdentityClientId ??\n        process.env.AZURE_CLIENT_ID;\n    const workloadIdentityClientId = options?.workloadIdentityClientId ??\n        managedIdentityClientId;\n    const managedResourceId = options\n        ?.managedIdentityResourceId;\n    const workloadFile = process.env.AZURE_FEDERATED_TOKEN_FILE;\n    const tenantId = options?.tenantId ?? process.env.AZURE_TENANT_ID;\n    if (managedResourceId) {\n        const managedIdentityResourceIdOptions = {\n            ...options,\n            resourceId: managedResourceId,\n        };\n        return new ManagedIdentityCredential(managedIdentityResourceIdOptions);\n    }\n    if (workloadFile && workloadIdentityClientId) {\n        const workloadIdentityCredentialOptions = {\n            ...options,\n            tenantId: tenantId,\n        };\n        return new ManagedIdentityCredential(workloadIdentityClientId, workloadIdentityCredentialOptions);\n    }\n    if (managedIdentityClientId) {\n        const managedIdentityClientOptions = {\n            ...options,\n            clientId: managedIdentityClientId,\n        };\n        return new ManagedIdentityCredential(managedIdentityClientOptions);\n    }\n    // We may be able to return a UnavailableCredential here, but that may be a breaking change\n    return new ManagedIdentityCredential(options);\n}\n/**\n * Creates a {@link WorkloadIdentityCredential} from the provided options.\n * @param options - Options to configure the credential.\n *\n * @internal\n */\nexport function createDefaultWorkloadIdentityCredential(options) {\n    const managedIdentityClientId = options?.managedIdentityClientId ??\n        process.env.AZURE_CLIENT_ID;\n    const workloadIdentityClientId = options?.workloadIdentityClientId ??\n        managedIdentityClientId;\n    const workloadFile = process.env.AZURE_FEDERATED_TOKEN_FILE;\n    const tenantId = options?.tenantId ?? process.env.AZURE_TENANT_ID;\n    if (workloadFile && workloadIdentityClientId) {\n        const workloadIdentityCredentialOptions = {\n            ...options,\n            tenantId,\n            clientId: workloadIdentityClientId,\n            tokenFilePath: workloadFile,\n        };\n        return new WorkloadIdentityCredential(workloadIdentityCredentialOptions);\n    }\n    if (tenantId) {\n        const workloadIdentityClientTenantOptions = {\n            ...options,\n            tenantId,\n        };\n        return new WorkloadIdentityCredential(workloadIdentityClientTenantOptions);\n    }\n    // We may be able to return a UnavailableCredential here, but that may be a breaking change\n    return new WorkloadIdentityCredential(options);\n}\n/**\n * Creates a {@link AzureDeveloperCliCredential} from the provided options.\n * @param options - Options to configure the credential.\n *\n * @internal\n */\nexport function createDefaultAzureDeveloperCliCredential(options = {}) {\n    return new AzureDeveloperCliCredential(options);\n}\n/**\n * Creates a {@link AzureCliCredential} from the provided options.\n * @param options - Options to configure the credential.\n *\n * @internal\n */\nexport function createDefaultAzureCliCredential(options = {}) {\n    return new AzureCliCredential(options);\n}\n/**\n * Creates a {@link AzurePowerShellCredential} from the provided options.\n * @param options - Options to configure the credential.\n *\n * @internal\n */\nexport function createDefaultAzurePowershellCredential(options = {}) {\n    return new AzurePowerShellCredential(options);\n}\n/**\n * Creates an {@link EnvironmentCredential} from the provided options.\n * @param options - Options to configure the credential.\n *\n * @internal\n */\nexport function createDefaultEnvironmentCredential(options = {}) {\n    return new EnvironmentCredential(options);\n}\n//# sourceMappingURL=defaultAzureCredentialFunctions.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nimport { ChainedTokenCredential } from \"./chainedTokenCredential.js\";\nimport { credentialLogger } from \"../util/logging.js\";\nimport { createDefaultAzureCliCredential, createDefaultAzureDeveloperCliCredential, createDefaultAzurePowershellCredential, createDefaultBrokerCredential, createDefaultManagedIdentityCredential, createDefaultVisualStudioCodeCredential, createDefaultWorkloadIdentityCredential, createDefaultEnvironmentCredential, } from \"./defaultAzureCredentialFunctions.js\";\nconst logger = credentialLogger(\"DefaultAzureCredential\");\n/**\n * A no-op credential that logs the reason it was skipped if getToken is called.\n * @internal\n */\nexport class UnavailableDefaultCredential {\n    credentialUnavailableErrorMessage;\n    credentialName;\n    constructor(credentialName, message) {\n        this.credentialName = credentialName;\n        this.credentialUnavailableErrorMessage = message;\n    }\n    getToken() {\n        logger.getToken.info(`Skipping ${this.credentialName}, reason: ${this.credentialUnavailableErrorMessage}`);\n        return Promise.resolve(null);\n    }\n}\n/**\n * Provides a default {@link ChainedTokenCredential} configuration that works for most\n * applications that use Azure SDK client libraries. For more information, see\n * [DefaultAzureCredential overview](https://aka.ms/azsdk/js/identity/credential-chains#use-defaultazurecredential-for-flexibility).\n *\n * The following credential types will be tried, in order:\n *\n * - {@link EnvironmentCredential}\n * - {@link WorkloadIdentityCredential}\n * - {@link ManagedIdentityCredential}\n * - {@link VisualStudioCodeCredential}\n * - {@link AzureCliCredential}\n * - {@link AzurePowerShellCredential}\n * - {@link AzureDeveloperCliCredential}\n *\n * Consult the documentation of these credential types for more information\n * on how they attempt authentication.\n *\n * Selecting credentials\n *\n * Set environment variable AZURE_TOKEN_CREDENTIALS to select a subset of the credential chain.\n * DefaultAzureCredential will try only the specified credential(s), but its other behavior remains the same.\n * Valid values for AZURE_TOKEN_CREDENTIALS are the name of any single type in the above chain, for example\n * \"EnvironmentCredential\" or \"AzureCliCredential\", and these special values:\n *\n *   - \"dev\": try [VisualStudioCodeCredential], [AzureCliCredential], [AzurePowerShellCredential] and [AzureDeveloperCliCredential], in that order\n *   - \"prod\": try [EnvironmentCredential], [WorkloadIdentityCredential], and [ManagedIdentityCredential], in that order\n *\n */\nexport class DefaultAzureCredential extends ChainedTokenCredential {\n    constructor(options) {\n        // If AZURE_TOKEN_CREDENTIALS is not set, use the default credential chain.\n        const azureTokenCredentials = process.env.AZURE_TOKEN_CREDENTIALS\n            ? process.env.AZURE_TOKEN_CREDENTIALS.trim().toLowerCase()\n            : undefined;\n        const devCredentialFunctions = [\n            createDefaultVisualStudioCodeCredential,\n            createDefaultAzureCliCredential,\n            createDefaultAzurePowershellCredential,\n            createDefaultAzureDeveloperCliCredential,\n            createDefaultBrokerCredential,\n        ];\n        const prodCredentialFunctions = [\n            createDefaultEnvironmentCredential,\n            createDefaultWorkloadIdentityCredential,\n            createDefaultManagedIdentityCredential,\n        ];\n        let credentialFunctions = [];\n        const validCredentialNames = \"EnvironmentCredential, WorkloadIdentityCredential, ManagedIdentityCredential, VisualStudioCodeCredential, AzureCliCredential, AzurePowerShellCredential, AzureDeveloperCliCredential\";\n        // If AZURE_TOKEN_CREDENTIALS is set, use it to determine which credentials to use.\n        // The value of AZURE_TOKEN_CREDENTIALS should be either \"dev\" or \"prod\" or any one of these credentials - {validCredentialNames}.\n        if (azureTokenCredentials) {\n            switch (azureTokenCredentials) {\n                case \"dev\":\n                    credentialFunctions = devCredentialFunctions;\n                    break;\n                case \"prod\":\n                    credentialFunctions = prodCredentialFunctions;\n                    break;\n                case \"environmentcredential\":\n                    credentialFunctions = [createDefaultEnvironmentCredential];\n                    break;\n                case \"workloadidentitycredential\":\n                    credentialFunctions = [createDefaultWorkloadIdentityCredential];\n                    break;\n                case \"managedidentitycredential\":\n                    credentialFunctions = [createDefaultManagedIdentityCredential];\n                    break;\n                case \"visualstudiocodecredential\":\n                    credentialFunctions = [createDefaultVisualStudioCodeCredential];\n                    break;\n                case \"azureclicredential\":\n                    credentialFunctions = [createDefaultAzureCliCredential];\n                    break;\n                case \"azurepowershellcredential\":\n                    credentialFunctions = [createDefaultAzurePowershellCredential];\n                    break;\n                case \"azuredeveloperclicredential\":\n                    credentialFunctions = [createDefaultAzureDeveloperCliCredential];\n                    break;\n                default: {\n                    // If AZURE_TOKEN_CREDENTIALS is set to an unsupported value, throw an error.\n                    // This will prevent the creation of the DefaultAzureCredential.\n                    const errorMessage = `Invalid value for AZURE_TOKEN_CREDENTIALS = ${process.env.AZURE_TOKEN_CREDENTIALS}. Valid values are 'prod' or 'dev' or any of these credentials - ${validCredentialNames}.`;\n                    logger.warning(errorMessage);\n                    throw new Error(errorMessage);\n                }\n            }\n        }\n        else {\n            // If AZURE_TOKEN_CREDENTIALS is not set, use the default credential chain.\n            credentialFunctions = [...prodCredentialFunctions, ...devCredentialFunctions];\n        }\n        // Errors from individual credentials should not be thrown in the DefaultAzureCredential constructor, instead throwing on getToken() which is handled by ChainedTokenCredential.\n        // When adding new credentials to the default chain, consider:\n        // 1. Making the constructor parameters required and explicit\n        // 2. Validating any required parameters in the factory function\n        // 3. Returning a UnavailableDefaultCredential from the factory function if a credential is unavailable for any reason\n        const credentials = credentialFunctions.map((createCredentialFn) => {\n            try {\n                return createCredentialFn(options);\n            }\n            catch (err) {\n                logger.warning(`Skipped ${createCredentialFn.name} because of an error creating the credential: ${err}`);\n                return new UnavailableDefaultCredential(createCredentialFn.name, err.message);\n            }\n        });\n        super(...credentials);\n    }\n}\n//# sourceMappingURL=defaultAzureCredential.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nimport { createClientLogger } from \"@azure/logger\";\n/**\n * The \\@azure/logger configuration for this package.\n */\nexport const logger = createClientLogger(\"keyvault-secrets\");\n//# sourceMappingURL=log.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nimport { createClientLogger } from \"@azure/logger\";\nexport const logger = createClientLogger(\"keyvault-secrets\");\n//# sourceMappingURL=logger.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nimport { createRestError as tspCreateRestError, } from \"@typespec/ts-http-runtime\";\nexport function createRestError(messageOrResponse, response) {\n    if (typeof messageOrResponse === \"string\") {\n        return tspCreateRestError(messageOrResponse, response);\n    }\n    else {\n        return tspCreateRestError(messageOrResponse);\n    }\n}\n//# sourceMappingURL=restError.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nimport { isObjectWithProperties } from \"@azure/core-util\";\n/**\n * Tests an object to determine whether it implements KeyCredential.\n *\n * @param credential - The assumed KeyCredential to be tested.\n */\nexport function isKeyCredential(credential) {\n    return isObjectWithProperties(credential, [\"key\"]) && typeof credential.key === \"string\";\n}\n//# sourceMappingURL=keyCredential.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n/**\n * @internal\n * @param accessToken - Access token\n * @returns Whether a token is bearer type or not\n */\nexport function isBearerToken(accessToken) {\n    return !accessToken.tokenType || accessToken.tokenType === \"Bearer\";\n}\n/**\n * @internal\n * @param accessToken - Access token\n * @returns Whether a token is Pop token or not\n */\nexport function isPopToken(accessToken) {\n    return accessToken.tokenType === \"pop\";\n}\n/**\n * Tests an object to determine whether it implements TokenCredential.\n *\n * @param credential - The assumed TokenCredential to be tested.\n */\nexport function isTokenCredential(credential) {\n    // Check for an object with a 'getToken' function and possibly with\n    // a 'signRequest' function.  We do this check to make sure that\n    // a ServiceClientCredentials implementor (like TokenClientCredentials\n    // in ms-rest-nodeauth) doesn't get mistaken for a TokenCredential if\n    // it doesn't actually implement TokenCredential also.\n    const castCredential = credential;\n    return (castCredential &&\n        typeof castCredential.getToken === \"function\" &&\n        (castCredential.signRequest === undefined || castCredential.getToken.length > 0));\n}\n//# sourceMappingURL=tokenCredential.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nimport { bearerTokenAuthenticationPolicy, createDefaultHttpClient, createPipelineFromOptions, } from \"@azure/core-rest-pipeline\";\nimport { isTokenCredential } from \"@azure/core-auth\";\nimport { apiVersionPolicy } from \"./apiVersionPolicy.js\";\nimport { keyCredentialAuthenticationPolicy } from \"./keyCredentialAuthenticationPolicy.js\";\nlet cachedHttpClient;\n/**\n * Adds a credential policy to the pipeline if a credential is provided. If none is provided, no policy is added.\n */\nexport function addCredentialPipelinePolicy(pipeline, endpoint, options = {}) {\n    var _a, _b, _c, _d;\n    const { credential, clientOptions } = options;\n    if (!credential) {\n        return;\n    }\n    if (isTokenCredential(credential)) {\n        const tokenPolicy = bearerTokenAuthenticationPolicy({\n            credential,\n            scopes: (_b = (_a = clientOptions === null || clientOptions === void 0 ? void 0 : clientOptions.credentials) === null || _a === void 0 ? void 0 : _a.scopes) !== null && _b !== void 0 ? _b : `${endpoint}/.default`,\n        });\n        pipeline.addPolicy(tokenPolicy);\n    }\n    else if (isKeyCredential(credential)) {\n        if (!((_c = clientOptions === null || clientOptions === void 0 ? void 0 : clientOptions.credentials) === null || _c === void 0 ? void 0 : _c.apiKeyHeaderName)) {\n            throw new Error(`Missing API Key Header Name`);\n        }\n        const keyPolicy = keyCredentialAuthenticationPolicy(credential, (_d = clientOptions === null || clientOptions === void 0 ? void 0 : clientOptions.credentials) === null || _d === void 0 ? void 0 : _d.apiKeyHeaderName);\n        pipeline.addPolicy(keyPolicy);\n    }\n}\n/**\n * Creates a default rest pipeline to re-use accross Rest Level Clients\n */\nexport function createDefaultPipeline(endpoint, credential, options = {}) {\n    const pipeline = createPipelineFromOptions(options);\n    pipeline.addPolicy(apiVersionPolicy(options));\n    addCredentialPipelinePolicy(pipeline, endpoint, { credential, clientOptions: options });\n    return pipeline;\n}\nfunction isKeyCredential(credential) {\n    return credential.key !== undefined;\n}\nexport function getCachedDefaultHttpsClient() {\n    if (!cachedHttpClient) {\n        cachedHttpClient = createDefaultHttpClient();\n    }\n    return cachedHttpClient;\n}\n//# sourceMappingURL=clientHelpers.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n/**\n * The programmatic identifier of the bearerTokenAuthenticationPolicy.\n */\nexport const keyCredentialAuthenticationPolicyName = \"keyCredentialAuthenticationPolicy\";\nexport function keyCredentialAuthenticationPolicy(credential, apiKeyHeaderName) {\n    return {\n        name: keyCredentialAuthenticationPolicyName,\n        async sendRequest(request, next) {\n            request.headers.set(apiKeyHeaderName, credential.key);\n            return next(request);\n        },\n    };\n}\n//# sourceMappingURL=keyCredentialAuthenticationPolicy.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nexport const apiVersionPolicyName = \"ApiVersionPolicy\";\n/**\n * Creates a policy that sets the apiVersion as a query parameter on every request\n * @param options - Client options\n * @returns Pipeline policy that sets the apiVersion as a query parameter on every request\n */\nexport function apiVersionPolicy(options) {\n    return {\n        name: apiVersionPolicyName,\n        sendRequest: (req, next) => {\n            // Use the apiVesion defined in request url directly\n            // Append one if there is no apiVesion and we have one at client options\n            const url = new URL(req.url);\n            if (!url.searchParams.get(\"api-version\") && options.apiVersion) {\n                req.url = `${req.url}${Array.from(url.searchParams.keys()).length > 0 ? \"&\" : \"?\"}api-version=${options.apiVersion}`;\n            }\n            return next(req);\n        },\n    };\n}\n//# sourceMappingURL=apiVersionPolicy.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nimport { operationOptionsToRequestParameters as tspOperationOptionsToRequestParameters, } from \"@typespec/ts-http-runtime\";\n/**\n * Helper function to convert OperationOptions to RequestParameters\n * @param options - the options that are used by Modular layer to send the request\n * @returns the result of the conversion in RequestParameters of RLC layer\n */\nexport function operationOptionsToRequestParameters(options) {\n    return tspOperationOptionsToRequestParameters(options);\n}\n//# sourceMappingURL=operationOptionHelpers.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n/**\n * Helper function to convert OperationOptions to RequestParameters\n * @param options - the options that are used by Modular layer to send the request\n * @returns the result of the conversion in RequestParameters of RLC layer\n */\nexport function operationOptionsToRequestParameters(options) {\n    var _a, _b, _c, _d, _e, _f;\n    return {\n        allowInsecureConnection: (_a = options.requestOptions) === null || _a === void 0 ? void 0 : _a.allowInsecureConnection,\n        timeout: (_b = options.requestOptions) === null || _b === void 0 ? void 0 : _b.timeout,\n        skipUrlEncoding: (_c = options.requestOptions) === null || _c === void 0 ? void 0 : _c.skipUrlEncoding,\n        abortSignal: options.abortSignal,\n        onUploadProgress: (_d = options.requestOptions) === null || _d === void 0 ? void 0 : _d.onUploadProgress,\n        onDownloadProgress: (_e = options.requestOptions) === null || _e === void 0 ? void 0 : _e.onDownloadProgress,\n        headers: Object.assign({}, (_f = options.requestOptions) === null || _f === void 0 ? void 0 : _f.headers),\n        onResponse: options.onResponse,\n    };\n}\n//# sourceMappingURL=operationOptionHelpers.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nimport { isKeyCredential, isTokenCredential } from \"@azure/core-auth\";\nimport { createDefaultPipeline } from \"./clientHelpers.js\";\nimport { getClient as tspGetClient, } from \"@typespec/ts-http-runtime\";\n/**\n * Function to wrap RequestParameters so that we get the legacy onResponse behavior in core-client-rest\n */\nfunction wrapRequestParameters(parameters) {\n    if (parameters.onResponse) {\n        return Object.assign(Object.assign({}, parameters), { onResponse(rawResponse, error) {\n                var _a;\n                (_a = parameters.onResponse) === null || _a === void 0 ? void 0 : _a.call(parameters, rawResponse, error, error);\n            } });\n    }\n    return parameters;\n}\nexport function getClient(endpoint, credentialsOrPipelineOptions, clientOptions = {}) {\n    let credentials;\n    if (credentialsOrPipelineOptions) {\n        if (isCredential(credentialsOrPipelineOptions)) {\n            credentials = credentialsOrPipelineOptions;\n        }\n        else {\n            clientOptions = credentialsOrPipelineOptions !== null && credentialsOrPipelineOptions !== void 0 ? credentialsOrPipelineOptions : {};\n        }\n    }\n    const pipeline = createDefaultPipeline(endpoint, credentials, clientOptions);\n    const tspClient = tspGetClient(endpoint, Object.assign(Object.assign({}, clientOptions), { pipeline }));\n    const client = (path, ...args) => {\n        return {\n            get: (requestOptions = {}) => {\n                return tspClient.path(path, ...args).get(wrapRequestParameters(requestOptions));\n            },\n            post: (requestOptions = {}) => {\n                return tspClient.path(path, ...args).post(wrapRequestParameters(requestOptions));\n            },\n            put: (requestOptions = {}) => {\n                return tspClient.path(path, ...args).put(wrapRequestParameters(requestOptions));\n            },\n            patch: (requestOptions = {}) => {\n                return tspClient.path(path, ...args).patch(wrapRequestParameters(requestOptions));\n            },\n            delete: (requestOptions = {}) => {\n                return tspClient.path(path, ...args).delete(wrapRequestParameters(requestOptions));\n            },\n            head: (requestOptions = {}) => {\n                return tspClient.path(path, ...args).head(wrapRequestParameters(requestOptions));\n            },\n            options: (requestOptions = {}) => {\n                return tspClient.path(path, ...args).options(wrapRequestParameters(requestOptions));\n            },\n            trace: (requestOptions = {}) => {\n                return tspClient.path(path, ...args).trace(wrapRequestParameters(requestOptions));\n            },\n        };\n    };\n    return {\n        path: client,\n        pathUnchecked: client,\n        pipeline: tspClient.pipeline,\n    };\n}\nfunction isCredential(param) {\n    return isKeyCredential(param) || isTokenCredential(param);\n}\n//# sourceMappingURL=getClient.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nimport { uint8ArrayToString, stringToUint8Array } from \"@azure/core-util\";\nexport function secretSetParametersSerializer(item) {\n    return {\n        value: item[\"value\"],\n        tags: item[\"tags\"],\n        contentType: item[\"contentType\"],\n        attributes: !item[\"secretAttributes\"]\n            ? item[\"secretAttributes\"]\n            : secretAttributesSerializer(item[\"secretAttributes\"]),\n    };\n}\nexport function secretAttributesSerializer(item) {\n    return {\n        enabled: item[\"enabled\"],\n        nbf: !item[\"notBefore\"]\n            ? item[\"notBefore\"]\n            : (item[\"notBefore\"].getTime() / 1000) | 0,\n        exp: !item[\"expires\"]\n            ? item[\"expires\"]\n            : (item[\"expires\"].getTime() / 1000) | 0,\n    };\n}\nexport function secretAttributesDeserializer(item) {\n    return {\n        enabled: item[\"enabled\"],\n        notBefore: !item[\"nbf\"] ? item[\"nbf\"] : new Date(item[\"nbf\"] * 1000),\n        expires: !item[\"exp\"] ? item[\"exp\"] : new Date(item[\"exp\"] * 1000),\n        created: !item[\"created\"]\n            ? item[\"created\"]\n            : new Date(item[\"created\"] * 1000),\n        updated: !item[\"updated\"]\n            ? item[\"updated\"]\n            : new Date(item[\"updated\"] * 1000),\n        recoverableDays: item[\"recoverableDays\"],\n        recoveryLevel: item[\"recoveryLevel\"],\n    };\n}\n/** Reflects the deletion recovery level currently in effect for secrets in the current vault. If it contains 'Purgeable', the secret can be permanently deleted by a privileged user; otherwise, only the system can purge the secret, at the end of the retention interval. */\nexport var KnownDeletionRecoveryLevel;\n(function (KnownDeletionRecoveryLevel) {\n    /** Denotes a vault state in which deletion is an irreversible operation, without the possibility for recovery. This level corresponds to no protection being available against a Delete operation; the data is irretrievably lost upon accepting a Delete operation at the entity level or higher (vault, resource group, subscription etc.) */\n    KnownDeletionRecoveryLevel[\"Purgeable\"] = \"Purgeable\";\n    /** Denotes a vault state in which deletion is recoverable, and which also permits immediate and permanent deletion (i.e. purge). This level guarantees the recoverability of the deleted entity during the retention interval (90 days), unless a Purge operation is requested, or the subscription is cancelled. System wil permanently delete it after 90 days, if not recovered */\n    KnownDeletionRecoveryLevel[\"RecoverablePurgeable\"] = \"Recoverable+Purgeable\";\n    /** Denotes a vault state in which deletion is recoverable without the possibility for immediate and permanent deletion (i.e. purge). This level guarantees the recoverability of the deleted entity during the retention interval (90 days) and while the subscription is still available. System wil permanently delete it after 90 days, if not recovered */\n    KnownDeletionRecoveryLevel[\"Recoverable\"] = \"Recoverable\";\n    /** Denotes a vault and subscription state in which deletion is recoverable within retention interval (90 days), immediate and permanent deletion (i.e. purge) is not permitted, and in which the subscription itself  cannot be permanently canceled. System wil permanently delete it after 90 days, if not recovered */\n    KnownDeletionRecoveryLevel[\"RecoverableProtectedSubscription\"] = \"Recoverable+ProtectedSubscription\";\n    /** Denotes a vault state in which deletion is recoverable, and which also permits immediate and permanent deletion (i.e. purge when 7 <= SoftDeleteRetentionInDays < 90). This level guarantees the recoverability of the deleted entity during the retention interval, unless a Purge operation is requested, or the subscription is cancelled. */\n    KnownDeletionRecoveryLevel[\"CustomizedRecoverablePurgeable\"] = \"CustomizedRecoverable+Purgeable\";\n    /** Denotes a vault state in which deletion is recoverable without the possibility for immediate and permanent deletion (i.e. purge when 7 <= SoftDeleteRetentionInDays < 90).This level guarantees the recoverability of the deleted entity during the retention interval and while the subscription is still available. */\n    KnownDeletionRecoveryLevel[\"CustomizedRecoverable\"] = \"CustomizedRecoverable\";\n    /** Denotes a vault and subscription state in which deletion is recoverable, immediate and permanent deletion (i.e. purge) is not permitted, and in which the subscription itself cannot be permanently canceled when 7 <= SoftDeleteRetentionInDays < 90. This level guarantees the recoverability of the deleted entity during the retention interval, and also reflects the fact that the subscription itself cannot be cancelled. */\n    KnownDeletionRecoveryLevel[\"CustomizedRecoverableProtectedSubscription\"] = \"CustomizedRecoverable+ProtectedSubscription\";\n})(KnownDeletionRecoveryLevel || (KnownDeletionRecoveryLevel = {}));\nexport function secretBundleDeserializer(item) {\n    return {\n        value: item[\"value\"],\n        id: item[\"id\"],\n        contentType: item[\"contentType\"],\n        attributes: !item[\"attributes\"]\n            ? item[\"attributes\"]\n            : secretAttributesDeserializer(item[\"attributes\"]),\n        tags: item[\"tags\"],\n        kid: item[\"kid\"],\n        managed: item[\"managed\"],\n    };\n}\nexport function keyVaultErrorDeserializer(item) {\n    return {\n        error: !item[\"error\"]\n            ? item[\"error\"]\n            : _keyVaultErrorErrorDeserializer(item[\"error\"]),\n    };\n}\nexport function _keyVaultErrorErrorDeserializer(item) {\n    return {\n        code: item[\"code\"],\n        message: item[\"message\"],\n        innerError: !item[\"innererror\"]\n            ? item[\"innererror\"]\n            : _keyVaultErrorErrorDeserializer(item[\"innererror\"]),\n    };\n}\nexport function deletedSecretBundleDeserializer(item) {\n    return {\n        value: item[\"value\"],\n        id: item[\"id\"],\n        contentType: item[\"contentType\"],\n        attributes: !item[\"attributes\"]\n            ? item[\"attributes\"]\n            : secretAttributesDeserializer(item[\"attributes\"]),\n        tags: item[\"tags\"],\n        kid: item[\"kid\"],\n        managed: item[\"managed\"],\n        recoveryId: item[\"recoveryId\"],\n        scheduledPurgeDate: !item[\"scheduledPurgeDate\"]\n            ? item[\"scheduledPurgeDate\"]\n            : new Date(item[\"scheduledPurgeDate\"] * 1000),\n        deletedDate: !item[\"deletedDate\"]\n            ? item[\"deletedDate\"]\n            : new Date(item[\"deletedDate\"] * 1000),\n    };\n}\nexport function secretUpdateParametersSerializer(item) {\n    return {\n        contentType: item[\"contentType\"],\n        attributes: !item[\"secretAttributes\"]\n            ? item[\"secretAttributes\"]\n            : secretAttributesSerializer(item[\"secretAttributes\"]),\n        tags: item[\"tags\"],\n    };\n}\nexport function _secretListResultDeserializer(item) {\n    return {\n        value: !item[\"value\"]\n            ? item[\"value\"]\n            : secretItemArrayDeserializer(item[\"value\"]),\n        nextLink: item[\"nextLink\"],\n    };\n}\nexport function secretItemArrayDeserializer(result) {\n    return result.map((item) => {\n        return secretItemDeserializer(item);\n    });\n}\nexport function secretItemDeserializer(item) {\n    return {\n        id: item[\"id\"],\n        attributes: !item[\"attributes\"]\n            ? item[\"attributes\"]\n            : secretAttributesDeserializer(item[\"attributes\"]),\n        tags: item[\"tags\"],\n        contentType: item[\"contentType\"],\n        managed: item[\"managed\"],\n    };\n}\nexport function _deletedSecretListResultDeserializer(item) {\n    return {\n        value: !item[\"value\"]\n            ? item[\"value\"]\n            : deletedSecretItemArrayDeserializer(item[\"value\"]),\n        nextLink: item[\"nextLink\"],\n    };\n}\nexport function deletedSecretItemArrayDeserializer(result) {\n    return result.map((item) => {\n        return deletedSecretItemDeserializer(item);\n    });\n}\nexport function deletedSecretItemDeserializer(item) {\n    return {\n        id: item[\"id\"],\n        attributes: !item[\"attributes\"]\n            ? item[\"attributes\"]\n            : secretAttributesDeserializer(item[\"attributes\"]),\n        tags: item[\"tags\"],\n        contentType: item[\"contentType\"],\n        managed: item[\"managed\"],\n        recoveryId: item[\"recoveryId\"],\n        scheduledPurgeDate: !item[\"scheduledPurgeDate\"]\n            ? item[\"scheduledPurgeDate\"]\n            : new Date(item[\"scheduledPurgeDate\"] * 1000),\n        deletedDate: !item[\"deletedDate\"]\n            ? item[\"deletedDate\"]\n            : new Date(item[\"deletedDate\"] * 1000),\n    };\n}\nexport function backupSecretResultDeserializer(item) {\n    return {\n        value: !item[\"value\"]\n            ? item[\"value\"]\n            : typeof item[\"value\"] === \"string\"\n                ? stringToUint8Array(item[\"value\"], \"base64url\")\n                : item[\"value\"],\n    };\n}\nexport function secretRestoreParametersSerializer(item) {\n    return { value: uint8ArrayToString(item[\"secretBundleBackup\"], \"base64url\") };\n}\n/** The available API versions. */\nexport var KnownVersions;\n(function (KnownVersions) {\n    /** The 7.5 API version. */\n    KnownVersions[\"V75\"] = \"7.5\";\n    /** The 7.6-preview.2 API version. */\n    KnownVersions[\"V76Preview2\"] = \"7.6-preview.2\";\n    /** The 7.6 API version. */\n    KnownVersions[\"V76\"] = \"7.6\";\n})(KnownVersions || (KnownVersions = {}));\n//# sourceMappingURL=models.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nimport { __asyncDelegator, __asyncGenerator, __asyncValues, __await } from \"tslib\";\nimport { createRestError, } from \"@azure-rest/core-client\";\nimport { RestError } from \"@azure/core-rest-pipeline\";\n/**\n * Helper to paginate results in a generic way and return a PagedAsyncIterableIterator\n */\nexport function buildPagedAsyncIterator(client, getInitialResponse, processResponseBody, expectedStatuses, options = {}) {\n    var _a, _b;\n    const itemName = (_a = options.itemName) !== null && _a !== void 0 ? _a : \"value\";\n    const nextLinkName = (_b = options.nextLinkName) !== null && _b !== void 0 ? _b : \"nextLink\";\n    const pagedResult = {\n        getPage: async (pageLink) => {\n            const result = pageLink === undefined\n                ? await getInitialResponse()\n                : await client.pathUnchecked(pageLink).get();\n            checkPagingRequest(result, expectedStatuses);\n            const results = await processResponseBody(result);\n            const nextLink = getNextLink(results, nextLinkName);\n            const values = getElements(results, itemName);\n            return {\n                page: values,\n                nextPageLink: nextLink,\n            };\n        },\n        byPage: (settings) => {\n            const { continuationToken } = settings !== null && settings !== void 0 ? settings : {};\n            return getPageAsyncIterator(pagedResult, {\n                pageLink: continuationToken,\n            });\n        },\n    };\n    return getPagedAsyncIterator(pagedResult);\n}\n/**\n * returns an async iterator that iterates over results. It also has a `byPage`\n * method that returns pages of items at once.\n *\n * @param pagedResult - an object that specifies how to get pages.\n * @returns a paged async iterator that iterates over results.\n */\nfunction getPagedAsyncIterator(pagedResult) {\n    var _a;\n    const iter = getItemAsyncIterator(pagedResult);\n    return {\n        next() {\n            return iter.next();\n        },\n        [Symbol.asyncIterator]() {\n            return this;\n        },\n        byPage: (_a = pagedResult === null || pagedResult === void 0 ? void 0 : pagedResult.byPage) !== null && _a !== void 0 ? _a : ((settings) => {\n            const { continuationToken } = settings !== null && settings !== void 0 ? settings : {};\n            return getPageAsyncIterator(pagedResult, {\n                pageLink: continuationToken,\n            });\n        }),\n    };\n}\nfunction getItemAsyncIterator(pagedResult) {\n    return __asyncGenerator(this, arguments, function* getItemAsyncIterator_1() {\n        var _a, e_1, _b, _c;\n        const pages = getPageAsyncIterator(pagedResult);\n        try {\n            for (var _d = true, pages_1 = __asyncValues(pages), pages_1_1; pages_1_1 = yield __await(pages_1.next()), _a = pages_1_1.done, !_a; _d = true) {\n                _c = pages_1_1.value;\n                _d = false;\n                const page = _c;\n                yield __await(yield* __asyncDelegator(__asyncValues(page)));\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (!_d && !_a && (_b = pages_1.return)) yield __await(_b.call(pages_1));\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n    });\n}\nfunction getPageAsyncIterator(pagedResult_1) {\n    return __asyncGenerator(this, arguments, function* getPageAsyncIterator_1(pagedResult, options = {}) {\n        const { pageLink } = options;\n        let response = yield __await(pagedResult.getPage(pageLink !== null && pageLink !== void 0 ? pageLink : pagedResult.firstPageLink));\n        if (!response) {\n            return yield __await(void 0);\n        }\n        let result = response.page;\n        result.continuationToken = response.nextPageLink;\n        yield yield __await(result);\n        while (response.nextPageLink) {\n            response = yield __await(pagedResult.getPage(response.nextPageLink));\n            if (!response) {\n                return yield __await(void 0);\n            }\n            result = response.page;\n            result.continuationToken = response.nextPageLink;\n            yield yield __await(result);\n        }\n    });\n}\n/**\n * Gets for the value of nextLink in the body\n */\nfunction getNextLink(body, nextLinkName) {\n    if (!nextLinkName) {\n        return undefined;\n    }\n    const nextLink = body[nextLinkName];\n    if (typeof nextLink !== \"string\" &&\n        typeof nextLink !== \"undefined\" &&\n        nextLink !== null) {\n        throw new RestError(`Body Property ${nextLinkName} should be a string or undefined or null but got ${typeof nextLink}`);\n    }\n    if (nextLink === null) {\n        return undefined;\n    }\n    return nextLink;\n}\n/**\n * Gets the elements of the current request in the body.\n */\nfunction getElements(body, itemName) {\n    const value = body[itemName];\n    if (!Array.isArray(value)) {\n        throw new RestError(`Couldn't paginate response\\n Body doesn't contain an array property with name: ${itemName}`);\n    }\n    return value !== null && value !== void 0 ? value : [];\n}\n/**\n * Checks if a request failed\n */\nfunction checkPagingRequest(response, expectedStatuses) {\n    if (!expectedStatuses.includes(response.status)) {\n        throw createRestError(`Pagination failed with unexpected statusCode ${response.status}`, response);\n    }\n}\n//# sourceMappingURL=pagingHelpers.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n// ---------------------\n// helpers\n// ---------------------\nfunction encodeComponent(val, reserved, op) {\n    return (reserved !== null && reserved !== void 0 ? reserved : op === \"+\") || op === \"#\"\n        ? encodeReservedComponent(val)\n        : encodeRFC3986URIComponent(val);\n}\nfunction encodeReservedComponent(str) {\n    return str\n        .split(/(%[0-9A-Fa-f]{2})/g)\n        .map((part) => (!/%[0-9A-Fa-f]/.test(part) ? encodeURI(part) : part))\n        .join(\"\");\n}\nfunction encodeRFC3986URIComponent(str) {\n    return encodeURIComponent(str).replace(/[!'()*]/g, (c) => `%${c.charCodeAt(0).toString(16).toUpperCase()}`);\n}\nfunction isDefined(val) {\n    return val !== undefined && val !== null;\n}\nfunction getNamedAndIfEmpty(op) {\n    return [\n        !!op && [\";\", \"?\", \"&\"].includes(op),\n        !!op && [\"?\", \"&\"].includes(op) ? \"=\" : \"\",\n    ];\n}\nfunction getFirstOrSep(op, isFirst = false) {\n    if (isFirst) {\n        return !op || op === \"+\" ? \"\" : op;\n    }\n    else if (!op || op === \"+\" || op === \"#\") {\n        return \",\";\n    }\n    else if (op === \"?\") {\n        return \"&\";\n    }\n    else {\n        return op;\n    }\n}\nfunction getExpandedValue(option) {\n    let isFirst = option.isFirst;\n    const { op, varName, varValue: value, reserved } = option;\n    const vals = [];\n    const [named, ifEmpty] = getNamedAndIfEmpty(op);\n    if (Array.isArray(value)) {\n        for (const val of value.filter(isDefined)) {\n            // prepare the following parts: separator, varName, value\n            vals.push(`${getFirstOrSep(op, isFirst)}`);\n            if (named && varName) {\n                vals.push(`${encodeURIComponent(varName)}`);\n                val === \"\" ? vals.push(ifEmpty) : vals.push(\"=\");\n            }\n            vals.push(encodeComponent(val, reserved, op));\n            isFirst = false;\n        }\n    }\n    else if (typeof value === \"object\") {\n        for (const key of Object.keys(value)) {\n            const val = value[key];\n            if (!isDefined(val)) {\n                continue;\n            }\n            // prepare the following parts: separator, key, value\n            vals.push(`${getFirstOrSep(op, isFirst)}`);\n            if (key) {\n                vals.push(`${encodeURIComponent(key)}`);\n                named && val === \"\" ? vals.push(ifEmpty) : vals.push(\"=\");\n            }\n            vals.push(encodeComponent(val, reserved, op));\n            isFirst = false;\n        }\n    }\n    return vals.join(\"\");\n}\nfunction getNonExpandedValue(option) {\n    const { op, varName, varValue: value, isFirst, reserved } = option;\n    const vals = [];\n    const first = getFirstOrSep(op, isFirst);\n    const [named, ifEmpty] = getNamedAndIfEmpty(op);\n    if (named && varName) {\n        vals.push(encodeComponent(varName, reserved, op));\n        if (value === \"\") {\n            if (!ifEmpty) {\n                vals.push(ifEmpty);\n            }\n            return !vals.join(\"\") ? undefined : `${first}${vals.join(\"\")}`;\n        }\n        vals.push(\"=\");\n    }\n    const items = [];\n    if (Array.isArray(value)) {\n        for (const val of value.filter(isDefined)) {\n            items.push(encodeComponent(val, reserved, op));\n        }\n    }\n    else if (typeof value === \"object\") {\n        for (const key of Object.keys(value)) {\n            if (!isDefined(value[key])) {\n                continue;\n            }\n            items.push(encodeRFC3986URIComponent(key));\n            items.push(encodeComponent(value[key], reserved, op));\n        }\n    }\n    vals.push(items.join(\",\"));\n    return !vals.join(\",\") ? undefined : `${first}${vals.join(\"\")}`;\n}\nfunction getVarValue(option) {\n    const { op, varName, modifier, isFirst, reserved, varValue: value } = option;\n    if (!isDefined(value)) {\n        return undefined;\n    }\n    else if ([\"string\", \"number\", \"boolean\"].includes(typeof value)) {\n        let val = value.toString();\n        const [named, ifEmpty] = getNamedAndIfEmpty(op);\n        const vals = [getFirstOrSep(op, isFirst)];\n        if (named && varName) {\n            // No need to encode varName considering it is already encoded\n            vals.push(varName);\n            val === \"\" ? vals.push(ifEmpty) : vals.push(\"=\");\n        }\n        if (modifier && modifier !== \"*\") {\n            val = val.substring(0, parseInt(modifier, 10));\n        }\n        vals.push(encodeComponent(val, reserved, op));\n        return vals.join(\"\");\n    }\n    else if (modifier === \"*\") {\n        return getExpandedValue(option);\n    }\n    else {\n        return getNonExpandedValue(option);\n    }\n}\n// ---------------------------------------------------------------------------------------------------\n// This is an implementation of RFC 6570 URI Template: https://datatracker.ietf.org/doc/html/rfc6570.\n// ---------------------------------------------------------------------------------------------------\nexport function expandUrlTemplate(template, context, option) {\n    return template.replace(/\\{([^\\{\\}]+)\\}|([^\\{\\}]+)/g, (_, expr, text) => {\n        if (!expr) {\n            return encodeReservedComponent(text);\n        }\n        let op;\n        if ([\"+\", \"#\", \".\", \"/\", \";\", \"?\", \"&\"].includes(expr[0])) {\n            (op = expr[0]), (expr = expr.slice(1));\n        }\n        const varList = expr.split(/,/g);\n        const result = [];\n        for (const varSpec of varList) {\n            const varMatch = /([^:\\*]*)(?::(\\d+)|(\\*))?/.exec(varSpec);\n            if (!varMatch || !varMatch[1]) {\n                continue;\n            }\n            const varValue = getVarValue({\n                isFirst: result.length === 0,\n                op,\n                varValue: context[varMatch[1]],\n                varName: varMatch[1],\n                modifier: varMatch[2] || varMatch[3],\n                reserved: option === null || option === void 0 ? void 0 : option.allowReserved,\n            });\n            if (varValue) {\n                result.push(varValue);\n            }\n        }\n        return result.join(\"\");\n    });\n}\n//# sourceMappingURL=urlTemplate.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nimport { secretSetParametersSerializer, secretBundleDeserializer, keyVaultErrorDeserializer, deletedSecretBundleDeserializer, secretUpdateParametersSerializer, _secretListResultDeserializer, _deletedSecretListResultDeserializer, backupSecretResultDeserializer, secretRestoreParametersSerializer, } from \"../models/models.js\";\nimport { buildPagedAsyncIterator, } from \"../static-helpers/pagingHelpers.js\";\nimport { expandUrlTemplate } from \"../static-helpers/urlTemplate.js\";\nimport { createRestError, operationOptionsToRequestParameters, } from \"@azure-rest/core-client\";\nexport function _restoreSecretSend(context, parameters, options = { requestOptions: {} }) {\n    var _a, _b;\n    const path = expandUrlTemplate(\"/secrets/restore{?api%2Dversion}\", {\n        \"api%2Dversion\": context.apiVersion,\n    }, {\n        allowReserved: (_a = options === null || options === void 0 ? void 0 : options.requestOptions) === null || _a === void 0 ? void 0 : _a.skipUrlEncoding,\n    });\n    return context\n        .path(path)\n        .post(Object.assign(Object.assign({}, operationOptionsToRequestParameters(options)), { contentType: \"application/json\", headers: Object.assign({ accept: \"application/json\" }, (_b = options.requestOptions) === null || _b === void 0 ? void 0 : _b.headers), body: secretRestoreParametersSerializer(parameters) }));\n}\nexport async function _restoreSecretDeserialize(result) {\n    const expectedStatuses = [\"200\"];\n    if (!expectedStatuses.includes(result.status)) {\n        const error = createRestError(result);\n        error.details = keyVaultErrorDeserializer(result.body);\n        throw error;\n    }\n    return secretBundleDeserializer(result.body);\n}\n/** Restores a backed up secret, and all its versions, to a vault. This operation requires the secrets/restore permission. */\nexport async function restoreSecret(context, parameters, options = { requestOptions: {} }) {\n    const result = await _restoreSecretSend(context, parameters, options);\n    return _restoreSecretDeserialize(result);\n}\nexport function _backupSecretSend(context, secretName, options = { requestOptions: {} }) {\n    var _a, _b;\n    const path = expandUrlTemplate(\"/secrets/{secret-name}/backup{?api%2Dversion}\", {\n        \"secret-name\": secretName,\n        \"api%2Dversion\": context.apiVersion,\n    }, {\n        allowReserved: (_a = options === null || options === void 0 ? void 0 : options.requestOptions) === null || _a === void 0 ? void 0 : _a.skipUrlEncoding,\n    });\n    return context\n        .path(path)\n        .post(Object.assign(Object.assign({}, operationOptionsToRequestParameters(options)), { headers: Object.assign({ accept: \"application/json\" }, (_b = options.requestOptions) === null || _b === void 0 ? void 0 : _b.headers) }));\n}\nexport async function _backupSecretDeserialize(result) {\n    const expectedStatuses = [\"200\"];\n    if (!expectedStatuses.includes(result.status)) {\n        const error = createRestError(result);\n        error.details = keyVaultErrorDeserializer(result.body);\n        throw error;\n    }\n    return backupSecretResultDeserializer(result.body);\n}\n/** Requests that a backup of the specified secret be downloaded to the client. All versions of the secret will be downloaded. This operation requires the secrets/backup permission. */\nexport async function backupSecret(context, secretName, options = { requestOptions: {} }) {\n    const result = await _backupSecretSend(context, secretName, options);\n    return _backupSecretDeserialize(result);\n}\nexport function _recoverDeletedSecretSend(context, secretName, options = { requestOptions: {} }) {\n    var _a, _b;\n    const path = expandUrlTemplate(\"/deletedsecrets/{secret-name}/recover{?api%2Dversion}\", {\n        \"secret-name\": secretName,\n        \"api%2Dversion\": context.apiVersion,\n    }, {\n        allowReserved: (_a = options === null || options === void 0 ? void 0 : options.requestOptions) === null || _a === void 0 ? void 0 : _a.skipUrlEncoding,\n    });\n    return context\n        .path(path)\n        .post(Object.assign(Object.assign({}, operationOptionsToRequestParameters(options)), { headers: Object.assign({ accept: \"application/json\" }, (_b = options.requestOptions) === null || _b === void 0 ? void 0 : _b.headers) }));\n}\nexport async function _recoverDeletedSecretDeserialize(result) {\n    const expectedStatuses = [\"200\"];\n    if (!expectedStatuses.includes(result.status)) {\n        const error = createRestError(result);\n        error.details = keyVaultErrorDeserializer(result.body);\n        throw error;\n    }\n    return secretBundleDeserializer(result.body);\n}\n/** Recovers the deleted secret in the specified vault. This operation can only be performed on a soft-delete enabled vault. This operation requires the secrets/recover permission. */\nexport async function recoverDeletedSecret(context, secretName, options = { requestOptions: {} }) {\n    const result = await _recoverDeletedSecretSend(context, secretName, options);\n    return _recoverDeletedSecretDeserialize(result);\n}\nexport function _purgeDeletedSecretSend(context, secretName, options = { requestOptions: {} }) {\n    var _a, _b;\n    const path = expandUrlTemplate(\"/deletedsecrets/{secret-name}{?api%2Dversion}\", {\n        \"secret-name\": secretName,\n        \"api%2Dversion\": context.apiVersion,\n    }, {\n        allowReserved: (_a = options === null || options === void 0 ? void 0 : options.requestOptions) === null || _a === void 0 ? void 0 : _a.skipUrlEncoding,\n    });\n    return context\n        .path(path)\n        .delete(Object.assign(Object.assign({}, operationOptionsToRequestParameters(options)), { headers: Object.assign({ accept: \"application/json\" }, (_b = options.requestOptions) === null || _b === void 0 ? void 0 : _b.headers) }));\n}\nexport async function _purgeDeletedSecretDeserialize(result) {\n    const expectedStatuses = [\"204\"];\n    if (!expectedStatuses.includes(result.status)) {\n        const error = createRestError(result);\n        error.details = keyVaultErrorDeserializer(result.body);\n        throw error;\n    }\n    return;\n}\n/** The purge deleted secret operation removes the secret permanently, without the possibility of recovery. This operation can only be enabled on a soft-delete enabled vault. This operation requires the secrets/purge permission. */\nexport async function purgeDeletedSecret(context, secretName, options = { requestOptions: {} }) {\n    const result = await _purgeDeletedSecretSend(context, secretName, options);\n    return _purgeDeletedSecretDeserialize(result);\n}\nexport function _getDeletedSecretSend(context, secretName, options = { requestOptions: {} }) {\n    var _a, _b;\n    const path = expandUrlTemplate(\"/deletedsecrets/{secret-name}{?api%2Dversion}\", {\n        \"secret-name\": secretName,\n        \"api%2Dversion\": context.apiVersion,\n    }, {\n        allowReserved: (_a = options === null || options === void 0 ? void 0 : options.requestOptions) === null || _a === void 0 ? void 0 : _a.skipUrlEncoding,\n    });\n    return context\n        .path(path)\n        .get(Object.assign(Object.assign({}, operationOptionsToRequestParameters(options)), { headers: Object.assign({ accept: \"application/json\" }, (_b = options.requestOptions) === null || _b === void 0 ? void 0 : _b.headers) }));\n}\nexport async function _getDeletedSecretDeserialize(result) {\n    const expectedStatuses = [\"200\"];\n    if (!expectedStatuses.includes(result.status)) {\n        const error = createRestError(result);\n        error.details = keyVaultErrorDeserializer(result.body);\n        throw error;\n    }\n    return deletedSecretBundleDeserializer(result.body);\n}\n/** The Get Deleted Secret operation returns the specified deleted secret along with its attributes. This operation requires the secrets/get permission. */\nexport async function getDeletedSecret(context, secretName, options = { requestOptions: {} }) {\n    const result = await _getDeletedSecretSend(context, secretName, options);\n    return _getDeletedSecretDeserialize(result);\n}\nexport function _getDeletedSecretsSend(context, options = { requestOptions: {} }) {\n    var _a, _b;\n    const path = expandUrlTemplate(\"/deletedsecrets{?api%2Dversion,maxresults}\", {\n        \"api%2Dversion\": context.apiVersion,\n        maxresults: options === null || options === void 0 ? void 0 : options.maxresults,\n    }, {\n        allowReserved: (_a = options === null || options === void 0 ? void 0 : options.requestOptions) === null || _a === void 0 ? void 0 : _a.skipUrlEncoding,\n    });\n    return context\n        .path(path)\n        .get(Object.assign(Object.assign({}, operationOptionsToRequestParameters(options)), { headers: Object.assign({ accept: \"application/json\" }, (_b = options.requestOptions) === null || _b === void 0 ? void 0 : _b.headers) }));\n}\nexport async function _getDeletedSecretsDeserialize(result) {\n    const expectedStatuses = [\"200\"];\n    if (!expectedStatuses.includes(result.status)) {\n        const error = createRestError(result);\n        error.details = keyVaultErrorDeserializer(result.body);\n        throw error;\n    }\n    return _deletedSecretListResultDeserializer(result.body);\n}\n/** The Get Deleted Secrets operation returns the secrets that have been deleted for a vault enabled for soft-delete. This operation requires the secrets/list permission. */\nexport function getDeletedSecrets(context, options = { requestOptions: {} }) {\n    return buildPagedAsyncIterator(context, () => _getDeletedSecretsSend(context, options), _getDeletedSecretsDeserialize, [\"200\"], { itemName: \"value\", nextLinkName: \"nextLink\" });\n}\nexport function _getSecretVersionsSend(context, secretName, options = { requestOptions: {} }) {\n    var _a, _b;\n    const path = expandUrlTemplate(\"/secrets/{secret-name}/versions{?api%2Dversion,maxresults}\", {\n        \"secret-name\": secretName,\n        \"api%2Dversion\": context.apiVersion,\n        maxresults: options === null || options === void 0 ? void 0 : options.maxresults,\n    }, {\n        allowReserved: (_a = options === null || options === void 0 ? void 0 : options.requestOptions) === null || _a === void 0 ? void 0 : _a.skipUrlEncoding,\n    });\n    return context\n        .path(path)\n        .get(Object.assign(Object.assign({}, operationOptionsToRequestParameters(options)), { headers: Object.assign({ accept: \"application/json\" }, (_b = options.requestOptions) === null || _b === void 0 ? void 0 : _b.headers) }));\n}\nexport async function _getSecretVersionsDeserialize(result) {\n    const expectedStatuses = [\"200\"];\n    if (!expectedStatuses.includes(result.status)) {\n        const error = createRestError(result);\n        error.details = keyVaultErrorDeserializer(result.body);\n        throw error;\n    }\n    return _secretListResultDeserializer(result.body);\n}\n/** The full secret identifier and attributes are provided in the response. No values are returned for the secrets. This operations requires the secrets/list permission. */\nexport function getSecretVersions(context, secretName, options = { requestOptions: {} }) {\n    return buildPagedAsyncIterator(context, () => _getSecretVersionsSend(context, secretName, options), _getSecretVersionsDeserialize, [\"200\"], { itemName: \"value\", nextLinkName: \"nextLink\" });\n}\nexport function _getSecretsSend(context, options = { requestOptions: {} }) {\n    var _a, _b;\n    const path = expandUrlTemplate(\"/secrets{?api%2Dversion,maxresults}\", {\n        \"api%2Dversion\": context.apiVersion,\n        maxresults: options === null || options === void 0 ? void 0 : options.maxresults,\n    }, {\n        allowReserved: (_a = options === null || options === void 0 ? void 0 : options.requestOptions) === null || _a === void 0 ? void 0 : _a.skipUrlEncoding,\n    });\n    return context\n        .path(path)\n        .get(Object.assign(Object.assign({}, operationOptionsToRequestParameters(options)), { headers: Object.assign({ accept: \"application/json\" }, (_b = options.requestOptions) === null || _b === void 0 ? void 0 : _b.headers) }));\n}\nexport async function _getSecretsDeserialize(result) {\n    const expectedStatuses = [\"200\"];\n    if (!expectedStatuses.includes(result.status)) {\n        const error = createRestError(result);\n        error.details = keyVaultErrorDeserializer(result.body);\n        throw error;\n    }\n    return _secretListResultDeserializer(result.body);\n}\n/** The Get Secrets operation is applicable to the entire vault. However, only the base secret identifier and its attributes are provided in the response. Individual secret versions are not listed in the response. This operation requires the secrets/list permission. */\nexport function getSecrets(context, options = { requestOptions: {} }) {\n    return buildPagedAsyncIterator(context, () => _getSecretsSend(context, options), _getSecretsDeserialize, [\"200\"], { itemName: \"value\", nextLinkName: \"nextLink\" });\n}\nexport function _getSecretSend(context, secretName, secretVersion, options = { requestOptions: {} }) {\n    var _a, _b;\n    const path = expandUrlTemplate(\"/secrets/{secret-name}/{secret-version}{?api%2Dversion}\", {\n        \"secret-name\": secretName,\n        \"secret-version\": secretVersion,\n        \"api%2Dversion\": context.apiVersion,\n    }, {\n        allowReserved: (_a = options === null || options === void 0 ? void 0 : options.requestOptions) === null || _a === void 0 ? void 0 : _a.skipUrlEncoding,\n    });\n    return context\n        .path(path)\n        .get(Object.assign(Object.assign({}, operationOptionsToRequestParameters(options)), { headers: Object.assign({ accept: \"application/json\" }, (_b = options.requestOptions) === null || _b === void 0 ? void 0 : _b.headers) }));\n}\nexport async function _getSecretDeserialize(result) {\n    const expectedStatuses = [\"200\"];\n    if (!expectedStatuses.includes(result.status)) {\n        const error = createRestError(result);\n        error.details = keyVaultErrorDeserializer(result.body);\n        throw error;\n    }\n    return secretBundleDeserializer(result.body);\n}\n/** The GET operation is applicable to any secret stored in Azure Key Vault. This operation requires the secrets/get permission. */\nexport async function getSecret(context, secretName, secretVersion, options = { requestOptions: {} }) {\n    const result = await _getSecretSend(context, secretName, secretVersion, options);\n    return _getSecretDeserialize(result);\n}\nexport function _updateSecretSend(context, secretName, secretVersion, parameters, options = { requestOptions: {} }) {\n    var _a, _b;\n    const path = expandUrlTemplate(\"/secrets/{secret-name}/{secret-version}{?api%2Dversion}\", {\n        \"secret-name\": secretName,\n        \"secret-version\": secretVersion,\n        \"api%2Dversion\": context.apiVersion,\n    }, {\n        allowReserved: (_a = options === null || options === void 0 ? void 0 : options.requestOptions) === null || _a === void 0 ? void 0 : _a.skipUrlEncoding,\n    });\n    return context\n        .path(path)\n        .patch(Object.assign(Object.assign({}, operationOptionsToRequestParameters(options)), { contentType: \"application/json\", headers: Object.assign({ accept: \"application/json\" }, (_b = options.requestOptions) === null || _b === void 0 ? void 0 : _b.headers), body: secretUpdateParametersSerializer(parameters) }));\n}\nexport async function _updateSecretDeserialize(result) {\n    const expectedStatuses = [\"200\"];\n    if (!expectedStatuses.includes(result.status)) {\n        const error = createRestError(result);\n        error.details = keyVaultErrorDeserializer(result.body);\n        throw error;\n    }\n    return secretBundleDeserializer(result.body);\n}\n/** The UPDATE operation changes specified attributes of an existing stored secret. Attributes that are not specified in the request are left unchanged. The value of a secret itself cannot be changed. This operation requires the secrets/set permission. */\nexport async function updateSecret(context, secretName, secretVersion, parameters, options = { requestOptions: {} }) {\n    const result = await _updateSecretSend(context, secretName, secretVersion, parameters, options);\n    return _updateSecretDeserialize(result);\n}\nexport function _deleteSecretSend(context, secretName, options = { requestOptions: {} }) {\n    var _a, _b;\n    const path = expandUrlTemplate(\"/secrets/{secret-name}{?api%2Dversion}\", {\n        \"secret-name\": secretName,\n        \"api%2Dversion\": context.apiVersion,\n    }, {\n        allowReserved: (_a = options === null || options === void 0 ? void 0 : options.requestOptions) === null || _a === void 0 ? void 0 : _a.skipUrlEncoding,\n    });\n    return context\n        .path(path)\n        .delete(Object.assign(Object.assign({}, operationOptionsToRequestParameters(options)), { headers: Object.assign({ accept: \"application/json\" }, (_b = options.requestOptions) === null || _b === void 0 ? void 0 : _b.headers) }));\n}\nexport async function _deleteSecretDeserialize(result) {\n    const expectedStatuses = [\"200\"];\n    if (!expectedStatuses.includes(result.status)) {\n        const error = createRestError(result);\n        error.details = keyVaultErrorDeserializer(result.body);\n        throw error;\n    }\n    return deletedSecretBundleDeserializer(result.body);\n}\n/** The DELETE operation applies to any secret stored in Azure Key Vault. DELETE cannot be applied to an individual version of a secret. This operation requires the secrets/delete permission. */\nexport async function deleteSecret(context, secretName, options = { requestOptions: {} }) {\n    const result = await _deleteSecretSend(context, secretName, options);\n    return _deleteSecretDeserialize(result);\n}\nexport function _setSecretSend(context, secretName, parameters, options = { requestOptions: {} }) {\n    var _a, _b;\n    const path = expandUrlTemplate(\"/secrets/{secret-name}{?api%2Dversion}\", {\n        \"secret-name\": secretName,\n        \"api%2Dversion\": context.apiVersion,\n    }, {\n        allowReserved: (_a = options === null || options === void 0 ? void 0 : options.requestOptions) === null || _a === void 0 ? void 0 : _a.skipUrlEncoding,\n    });\n    return context\n        .path(path)\n        .put(Object.assign(Object.assign({}, operationOptionsToRequestParameters(options)), { contentType: \"application/json\", headers: Object.assign({ accept: \"application/json\" }, (_b = options.requestOptions) === null || _b === void 0 ? void 0 : _b.headers), body: secretSetParametersSerializer(parameters) }));\n}\nexport async function _setSecretDeserialize(result) {\n    const expectedStatuses = [\"200\"];\n    if (!expectedStatuses.includes(result.status)) {\n        const error = createRestError(result);\n        error.details = keyVaultErrorDeserializer(result.body);\n        throw error;\n    }\n    return secretBundleDeserializer(result.body);\n}\n/** The SET operation adds a secret to the Azure Key Vault. If the named secret already exists, Azure Key Vault creates a new version of that secret. This operation requires the secrets/set permission. */\nexport async function setSecret(context, secretName, parameters, options = { requestOptions: {} }) {\n    const result = await _setSecretSend(context, secretName, parameters, options);\n    return _setSecretDeserialize(result);\n}\n//# sourceMappingURL=operations.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nimport { createKeyVault, } from \"./api/index.js\";\nimport { restoreSecret, backupSecret, recoverDeletedSecret, purgeDeletedSecret, getDeletedSecret, getDeletedSecrets, getSecretVersions, getSecrets, getSecret, updateSecret, deleteSecret, setSecret, } from \"./api/operations.js\";\nexport class KeyVaultClient {\n    /** The key vault client performs cryptographic key operations and vault operations against the Key Vault service. */\n    constructor(endpointParam, credential, options = {}) {\n        var _a;\n        const prefixFromOptions = (_a = options === null || options === void 0 ? void 0 : options.userAgentOptions) === null || _a === void 0 ? void 0 : _a.userAgentPrefix;\n        const userAgentPrefix = prefixFromOptions\n            ? `${prefixFromOptions} azsdk-js-client`\n            : `azsdk-js-client`;\n        this._client = createKeyVault(endpointParam, credential, Object.assign(Object.assign({}, options), { userAgentOptions: { userAgentPrefix } }));\n        this.pipeline = this._client.pipeline;\n    }\n    /** Restores a backed up secret, and all its versions, to a vault. This operation requires the secrets/restore permission. */\n    restoreSecret(parameters, options = { requestOptions: {} }) {\n        return restoreSecret(this._client, parameters, options);\n    }\n    /** Requests that a backup of the specified secret be downloaded to the client. All versions of the secret will be downloaded. This operation requires the secrets/backup permission. */\n    backupSecret(secretName, options = { requestOptions: {} }) {\n        return backupSecret(this._client, secretName, options);\n    }\n    /** Recovers the deleted secret in the specified vault. This operation can only be performed on a soft-delete enabled vault. This operation requires the secrets/recover permission. */\n    recoverDeletedSecret(secretName, options = { requestOptions: {} }) {\n        return recoverDeletedSecret(this._client, secretName, options);\n    }\n    /** The purge deleted secret operation removes the secret permanently, without the possibility of recovery. This operation can only be enabled on a soft-delete enabled vault. This operation requires the secrets/purge permission. */\n    purgeDeletedSecret(secretName, options = { requestOptions: {} }) {\n        return purgeDeletedSecret(this._client, secretName, options);\n    }\n    /** The Get Deleted Secret operation returns the specified deleted secret along with its attributes. This operation requires the secrets/get permission. */\n    getDeletedSecret(secretName, options = { requestOptions: {} }) {\n        return getDeletedSecret(this._client, secretName, options);\n    }\n    /** The Get Deleted Secrets operation returns the secrets that have been deleted for a vault enabled for soft-delete. This operation requires the secrets/list permission. */\n    getDeletedSecrets(options = { requestOptions: {} }) {\n        return getDeletedSecrets(this._client, options);\n    }\n    /** The full secret identifier and attributes are provided in the response. No values are returned for the secrets. This operations requires the secrets/list permission. */\n    getSecretVersions(secretName, options = { requestOptions: {} }) {\n        return getSecretVersions(this._client, secretName, options);\n    }\n    /** The Get Secrets operation is applicable to the entire vault. However, only the base secret identifier and its attributes are provided in the response. Individual secret versions are not listed in the response. This operation requires the secrets/list permission. */\n    getSecrets(options = { requestOptions: {} }) {\n        return getSecrets(this._client, options);\n    }\n    /** The GET operation is applicable to any secret stored in Azure Key Vault. This operation requires the secrets/get permission. */\n    getSecret(secretName, secretVersion, options = { requestOptions: {} }) {\n        return getSecret(this._client, secretName, secretVersion, options);\n    }\n    /** The UPDATE operation changes specified attributes of an existing stored secret. Attributes that are not specified in the request are left unchanged. The value of a secret itself cannot be changed. This operation requires the secrets/set permission. */\n    updateSecret(secretName, secretVersion, parameters, options = { requestOptions: {} }) {\n        return updateSecret(this._client, secretName, secretVersion, parameters, options);\n    }\n    /** The DELETE operation applies to any secret stored in Azure Key Vault. DELETE cannot be applied to an individual version of a secret. This operation requires the secrets/delete permission. */\n    deleteSecret(secretName, options = { requestOptions: {} }) {\n        return deleteSecret(this._client, secretName, options);\n    }\n    /** The SET operation adds a secret to the Azure Key Vault. If the named secret already exists, Azure Key Vault creates a new version of that secret. This operation requires the secrets/set permission. */\n    setSecret(secretName, parameters, options = { requestOptions: {} }) {\n        return setSecret(this._client, secretName, parameters, options);\n    }\n}\n//# sourceMappingURL=keyVaultClient.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nimport { __rest } from \"tslib\";\nimport { logger } from \"../logger.js\";\nimport { getClient } from \"@azure-rest/core-client\";\n/** The key vault client performs cryptographic key operations and vault operations against the Key Vault service. */\nexport function createKeyVault(endpointParam, credential, options = {}) {\n    var _a, _b, _c, _d, _e, _f, _g, _h;\n    const endpointUrl = (_b = (_a = options.endpoint) !== null && _a !== void 0 ? _a : options.baseUrl) !== null && _b !== void 0 ? _b : String(endpointParam);\n    const prefixFromOptions = (_c = options === null || options === void 0 ? void 0 : options.userAgentOptions) === null || _c === void 0 ? void 0 : _c.userAgentPrefix;\n    const userAgentInfo = `azsdk-js-keyvault-secrets/1.0.0-beta.1`;\n    const userAgentPrefix = prefixFromOptions\n        ? `${prefixFromOptions} azsdk-js-api ${userAgentInfo}`\n        : `azsdk-js-api ${userAgentInfo}`;\n    const _j = Object.assign(Object.assign({}, options), { userAgentOptions: { userAgentPrefix }, loggingOptions: { logger: (_e = (_d = options.loggingOptions) === null || _d === void 0 ? void 0 : _d.logger) !== null && _e !== void 0 ? _e : logger.info }, credentials: {\n            scopes: (_g = (_f = options.credentials) === null || _f === void 0 ? void 0 : _f.scopes) !== null && _g !== void 0 ? _g : [\n                \"https://vault.azure.net/.default\",\n            ],\n        } }), { apiVersion: _ } = _j, updatedOptions = __rest(_j, [\"apiVersion\"]);\n    const clientContext = getClient(endpointUrl, credential, updatedOptions);\n    clientContext.pipeline.removePolicy({ name: \"ApiVersionPolicy\" });\n    const apiVersion = (_h = options.apiVersion) !== null && _h !== void 0 ? _h : \"7.6\";\n    clientContext.pipeline.addPolicy({\n        name: \"ClientApiVersionPolicy\",\n        sendRequest: (req, next) => {\n            // Use the apiVersion defined in request url directly\n            // Append one if there is no apiVersion and we have one at client options\n            const url = new URL(req.url);\n            if (!url.searchParams.get(\"api-version\")) {\n                req.url = `${req.url}${Array.from(url.searchParams.keys()).length > 0 ? \"&\" : \"?\"}api-version=${apiVersion}`;\n            }\n            return next(req);\n        },\n    });\n    return Object.assign(Object.assign({}, clientContext), { apiVersion });\n}\n//# sourceMappingURL=keyVaultContext.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nconst validWWWAuthenticateProperties = [\n    \"authorization\",\n    \"authorization_url\",\n    \"resource\",\n    \"scope\",\n    \"tenantId\",\n    \"claims\",\n    \"error\",\n];\n/**\n * Parses an WWW-Authenticate response header.\n * This transforms a string value like:\n * `Bearer authorization=\"https://some.url/tenantId\", resource=\"https://some.url\"`\n * into an object like:\n * `{ authorization: \"https://some.url/tenantId\", resource: \"https://some.url\" }`\n * @param headerValue - String value in the WWW-Authenticate header\n */\nexport function parseWWWAuthenticateHeader(headerValue) {\n    const pairDelimiter = /,? +/;\n    const parsed = headerValue.split(pairDelimiter).reduce((kvPairs, p) => {\n        if (p.match(/\\w=\"/)) {\n            // 'sampleKey=\"sample_value\"' -> [sampleKey, \"sample_value\"] -> { sampleKey: sample_value }\n            const [key, ...value] = p.split(\"=\");\n            if (validWWWAuthenticateProperties.includes(key)) {\n                // The values will be wrapped in quotes, which need to be stripped out.\n                return Object.assign(Object.assign({}, kvPairs), { [key]: value.join(\"=\").slice(1, -1) });\n            }\n        }\n        return kvPairs;\n    }, {});\n    // Finally, we pull the tenantId from the authorization header to support multi-tenant authentication.\n    if (parsed.authorization) {\n        try {\n            const tenantId = new URL(parsed.authorization).pathname.substring(1);\n            if (tenantId) {\n                parsed.tenantId = tenantId;\n            }\n        }\n        catch (_) {\n            throw new Error(`The challenge authorization URI '${parsed.authorization}' is invalid.`);\n        }\n    }\n    return parsed;\n}\n//# sourceMappingURL=parseWWWAuthenticate.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nimport { delay } from \"@azure/core-util\";\n// Default options for the cycler if none are provided\nexport const DEFAULT_CYCLER_OPTIONS = {\n    forcedRefreshWindowInMs: 1000, // Force waiting for a refresh 1s before the token expires\n    retryIntervalInMs: 3000, // Allow refresh attempts every 3s\n    refreshWindowInMs: 1000 * 60 * 2, // Start refreshing 2m before expiry\n};\n/**\n * Converts an an unreliable access token getter (which may resolve with null)\n * into an AccessTokenGetter by retrying the unreliable getter in a regular\n * interval.\n *\n * @param getAccessToken - A function that produces a promise of an access token that may fail by returning null.\n * @param retryIntervalInMs - The time (in milliseconds) to wait between retry attempts.\n * @param refreshTimeout - The timestamp after which the refresh attempt will fail, throwing an exception.\n * @returns - A promise that, if it resolves, will resolve with an access token.\n */\nasync function beginRefresh(getAccessToken, retryIntervalInMs, refreshTimeout) {\n    // This wrapper handles exceptions gracefully as long as we haven't exceeded\n    // the timeout.\n    async function tryGetAccessToken() {\n        if (Date.now() < refreshTimeout) {\n            try {\n                return await getAccessToken();\n            }\n            catch (_a) {\n                return null;\n            }\n        }\n        else {\n            const finalToken = await getAccessToken();\n            // Timeout is up, so throw if it's still null\n            if (finalToken === null) {\n                throw new Error(\"Failed to refresh access token.\");\n            }\n            return finalToken;\n        }\n    }\n    let token = await tryGetAccessToken();\n    while (token === null) {\n        await delay(retryIntervalInMs);\n        token = await tryGetAccessToken();\n    }\n    return token;\n}\n/**\n * Creates a token cycler from a credential, scopes, and optional settings.\n *\n * A token cycler represents a way to reliably retrieve a valid access token\n * from a TokenCredential. It will handle initializing the token, refreshing it\n * when it nears expiration, and synchronizes refresh attempts to avoid\n * concurrency hazards.\n *\n * @param credential - the underlying TokenCredential that provides the access\n * token\n * @param tokenCyclerOptions - optionally override default settings for the cycler\n *\n * @returns - a function that reliably produces a valid access token\n */\nexport function createTokenCycler(credential, tokenCyclerOptions) {\n    let refreshWorker = null;\n    let token = null;\n    let tenantId;\n    const options = Object.assign(Object.assign({}, DEFAULT_CYCLER_OPTIONS), tokenCyclerOptions);\n    /**\n     * This little holder defines several predicates that we use to construct\n     * the rules of refreshing the token.\n     */\n    const cycler = {\n        /**\n         * Produces true if a refresh job is currently in progress.\n         */\n        get isRefreshing() {\n            return refreshWorker !== null;\n        },\n        /**\n         * Produces true if the cycler SHOULD refresh (we are within the refresh\n         * window and not already refreshing)\n         */\n        get shouldRefresh() {\n            var _a;\n            if (cycler.isRefreshing) {\n                return false;\n            }\n            if ((token === null || token === void 0 ? void 0 : token.refreshAfterTimestamp) && token.refreshAfterTimestamp < Date.now()) {\n                return true;\n            }\n            return ((_a = token === null || token === void 0 ? void 0 : token.expiresOnTimestamp) !== null && _a !== void 0 ? _a : 0) - options.refreshWindowInMs < Date.now();\n        },\n        /**\n         * Produces true if the cycler MUST refresh (null or nearly-expired\n         * token).\n         */\n        get mustRefresh() {\n            return (token === null || token.expiresOnTimestamp - options.forcedRefreshWindowInMs < Date.now());\n        },\n    };\n    /**\n     * Starts a refresh job or returns the existing job if one is already\n     * running.\n     */\n    function refresh(scopes, getTokenOptions) {\n        var _a;\n        if (!cycler.isRefreshing) {\n            // We bind `scopes` here to avoid passing it around a lot\n            const tryGetAccessToken = () => credential.getToken(scopes, getTokenOptions);\n            // Take advantage of promise chaining to insert an assignment to `token`\n            // before the refresh can be considered done.\n            refreshWorker = beginRefresh(tryGetAccessToken, options.retryIntervalInMs, \n            // If we don't have a token, then we should timeout immediately\n            (_a = token === null || token === void 0 ? void 0 : token.expiresOnTimestamp) !== null && _a !== void 0 ? _a : Date.now())\n                .then((_token) => {\n                refreshWorker = null;\n                token = _token;\n                tenantId = getTokenOptions.tenantId;\n                return token;\n            })\n                .catch((reason) => {\n                // We also should reset the refresher if we enter a failed state.  All\n                // existing awaiters will throw, but subsequent requests will start a\n                // new retry chain.\n                refreshWorker = null;\n                token = null;\n                tenantId = undefined;\n                throw reason;\n            });\n        }\n        return refreshWorker;\n    }\n    return async (scopes, tokenOptions) => {\n        //\n        // Simple rules:\n        // - If we MUST refresh, then return the refresh task, blocking\n        //   the pipeline until a token is available.\n        // - If we SHOULD refresh, then run refresh but don't return it\n        //   (we can still use the cached token).\n        // - Return the token, since it's fine if we didn't return in\n        //   step 1.\n        //\n        const hasClaimChallenge = Boolean(tokenOptions.claims);\n        const tenantIdChanged = tenantId !== tokenOptions.tenantId;\n        if (hasClaimChallenge) {\n            // If we've received a claim, we know the existing token isn't valid\n            // We want to clear it so that that refresh worker won't use the old expiration time as a timeout\n            token = null;\n        }\n        // If the tenantId passed in token options is different to the one we have\n        // Or if we are in claim challenge and the token was rejected and a new access token need to be issued, we need to\n        // refresh the token with the new tenantId or token.\n        const mustRefresh = tenantIdChanged || hasClaimChallenge || cycler.mustRefresh;\n        if (mustRefresh) {\n            return refresh(scopes, tokenOptions);\n        }\n        if (cycler.shouldRefresh) {\n            refresh(scopes, tokenOptions);\n        }\n        return token;\n    };\n}\n//# sourceMappingURL=tokenCycler.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nimport { createClientLogger } from \"@azure/logger\";\nexport const logger = createClientLogger(\"keyvault-common\");\n//# sourceMappingURL=logger.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nimport { parseWWWAuthenticateHeader } from \"./parseWWWAuthenticate.js\";\nimport { createTokenCycler } from \"./tokenCycler.js\";\nimport { logger } from \"./logger.js\";\nfunction verifyChallengeResource(scope, request) {\n    let scopeAsUrl;\n    try {\n        scopeAsUrl = new URL(scope);\n    }\n    catch (e) {\n        throw new Error(`The challenge contains invalid scope '${scope}'`);\n    }\n    const requestUrl = new URL(request.url);\n    if (!requestUrl.hostname.endsWith(`.${scopeAsUrl.hostname}`)) {\n        throw new Error(`The challenge resource '${scopeAsUrl.hostname}' does not match the requested domain. Set disableChallengeResourceVerification to true in your client options to disable. See https://aka.ms/azsdk/blog/vault-uri for more information.`);\n    }\n}\n/**\n * Name of the Key Vault authentication policy.\n */\nexport const keyVaultAuthenticationPolicyName = \"keyVaultAuthenticationPolicy\";\n/**\n * A custom implementation of the bearer-token authentication policy that handles Key Vault and CAE challenges.\n *\n * Key Vault supports other authentication schemes, but we ensure challenge authentication\n * is used by first sending a copy of the request, without authorization or content.\n *\n * when the challenge is received, it will be authenticated and used to send the original\n * request with authorization.\n *\n * Following the first request of a client, follow-up requests will get the cached token\n * if possible.\n *\n */\nexport function keyVaultAuthenticationPolicy(credential, options = {}) {\n    const { disableChallengeResourceVerification } = options;\n    let challengeState = { status: \"none\" };\n    const getAccessToken = createTokenCycler(credential);\n    function requestToOptions(request) {\n        return {\n            abortSignal: request.abortSignal,\n            requestOptions: {\n                timeout: request.timeout > 0 ? request.timeout : undefined,\n            },\n            tracingOptions: request.tracingOptions,\n        };\n    }\n    async function authorizeRequest(request) {\n        const requestOptions = requestToOptions(request);\n        switch (challengeState.status) {\n            case \"none\":\n                challengeState = {\n                    status: \"started\",\n                    originalBody: request.body,\n                };\n                request.body = null;\n                break;\n            case \"started\":\n                break; // Retry, we should not overwrite the original body\n            case \"complete\": {\n                const token = await getAccessToken(challengeState.scopes, Object.assign(Object.assign({}, requestOptions), { enableCae: true, tenantId: challengeState.tenantId }));\n                if (token) {\n                    request.headers.set(\"authorization\", `Bearer ${token.token}`);\n                }\n                break;\n            }\n        }\n    }\n    async function handleChallenge(request, response, next) {\n        // If status is not 401, this is a no-op\n        if (response.status !== 401) {\n            return response;\n        }\n        if (request.body === null && challengeState.status === \"started\") {\n            // Reset the original body before doing anything else.\n            // Note: If successful status will be \"complete\", otherwise \"none\" will\n            // restart the process.\n            request.body = challengeState.originalBody;\n        }\n        const getTokenOptions = requestToOptions(request);\n        const challenge = response.headers.get(\"WWW-Authenticate\");\n        if (!challenge) {\n            logger.warning(\"keyVaultAuthentication policy encountered a 401 response without a corresponding WWW-Authenticate header. This is unexpected. Not handling the 401 response.\");\n            return response;\n        }\n        const parsedChallenge = parseWWWAuthenticateHeader(challenge);\n        const scope = parsedChallenge.resource\n            ? parsedChallenge.resource + \"/.default\"\n            : parsedChallenge.scope;\n        if (!scope) {\n            // Cannot handle this kind of challenge here (if scope is not present, may be a CAE challenge)\n            return response;\n        }\n        if (!disableChallengeResourceVerification) {\n            verifyChallengeResource(scope, request);\n        }\n        const accessToken = await getAccessToken([scope], Object.assign(Object.assign({}, getTokenOptions), { enableCae: true, tenantId: parsedChallenge.tenantId }));\n        if (!accessToken) {\n            // No access token provided, treat as no-op\n            return response;\n        }\n        request.headers.set(\"Authorization\", `Bearer ${accessToken.token}`);\n        challengeState = {\n            status: \"complete\",\n            scopes: [scope],\n            tenantId: parsedChallenge.tenantId,\n        };\n        // We have a token now, so try send the request again\n        return next(request);\n    }\n    async function handleCaeChallenge(request, response, next) {\n        // Cannot handle CAE challenge if a regular challenge has not been completed first\n        if (challengeState.status !== \"complete\") {\n            return response;\n        }\n        // If status is not 401, this is a no-op\n        if (response.status !== 401) {\n            return response;\n        }\n        const getTokenOptions = requestToOptions(request);\n        const challenge = response.headers.get(\"WWW-Authenticate\");\n        if (!challenge) {\n            return response;\n        }\n        const { claims: base64EncodedClaims, error } = parseWWWAuthenticateHeader(challenge);\n        if (error !== \"insufficient_claims\" || base64EncodedClaims === undefined) {\n            return response;\n        }\n        const claims = atob(base64EncodedClaims);\n        const accessToken = await getAccessToken(challengeState.scopes, Object.assign(Object.assign({}, getTokenOptions), { enableCae: true, tenantId: challengeState.tenantId, claims }));\n        request.headers.set(\"Authorization\", `Bearer ${accessToken.token}`);\n        return next(request);\n    }\n    async function sendRequest(request, next) {\n        // Add token if possible\n        await authorizeRequest(request);\n        // Try send request (first attempt)\n        let response = await next(request);\n        // Handle standard challenge if present\n        response = await handleChallenge(request, response, next);\n        // Handle CAE challenge if present\n        response = await handleCaeChallenge(request, response, next);\n        return response;\n    }\n    return {\n        name: keyVaultAuthenticationPolicyName,\n        sendRequest,\n    };\n}\n//# sourceMappingURL=keyVaultAuthenticationPolicy.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nimport { parseKeyVaultIdentifier } from \"@azure/keyvault-common\";\n/**\n * Parses the given Key Vault Secret Id. An example is:\n *\n *   https://<keyvault-name>.vault.azure.net/secrets/<secret-name>/<unique-version-id>\n *\n * On parsing the above Id, this function returns:\n *```ts snippet:ignore\n *   {\n *      sourceId: \"https://<keyvault-name>.vault.azure.net/secrets/<secret-name>/<unique-version-id>\",\n *      vaultUrl: \"https://<keyvault-name>.vault.azure.net\",\n *      version: \"<unique-version-id>\",\n *      name: \"<secret-name>\"\n *   }\n *```\n * @param id - The Id of the Key Vault Secret.\n */\nexport function parseKeyVaultSecretIdentifier(id) {\n    const urlParts = id.split(\"/\");\n    const collection = urlParts[3];\n    return Object.assign({ sourceId: id }, parseKeyVaultIdentifier(collection, id));\n}\n//# sourceMappingURL=identifier.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n/**\n * Parses a Key Vault identifier into its components.\n *\n * @param collection - The collection of the Key Vault identifier.\n * @param identifier - The Key Vault identifier to be parsed.\n */\nexport function parseKeyVaultIdentifier(collection, identifier) {\n    if (typeof collection !== \"string\" || !(collection = collection.trim())) {\n        throw new Error(\"Invalid collection argument\");\n    }\n    if (typeof identifier !== \"string\" || !(identifier = identifier.trim())) {\n        throw new Error(\"Invalid identifier argument\");\n    }\n    let baseUri;\n    try {\n        baseUri = new URL(identifier);\n    }\n    catch (e) {\n        throw new Error(`Invalid ${collection} identifier: ${identifier}. Not a valid URI`);\n    }\n    // Path is of the form '/collection/name[/version]'\n    const segments = (baseUri.pathname || \"\").split(\"/\");\n    if (segments.length !== 3 && segments.length !== 4) {\n        throw new Error(`Invalid ${collection} identifier: ${identifier}. Bad number of segments: ${segments.length}`);\n    }\n    if (collection !== segments[1]) {\n        throw new Error(`Invalid ${collection} identifier: ${identifier}. segment [1] should be \"${collection}\", found \"${segments[1]}\"`);\n    }\n    const vaultUrl = `${baseUri.protocol}//${baseUri.host}`;\n    const name = segments[2];\n    const version = segments.length === 4 ? segments[3] : undefined;\n    return {\n        vaultUrl,\n        name,\n        version,\n    };\n}\n//# sourceMappingURL=parseKeyVaultIdentifier.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nimport { __asyncGenerator, __asyncValues, __await } from \"tslib\";\nimport { parseKeyVaultSecretIdentifier } from \"./identifier.js\";\n/**\n * @internal\n * Shapes the exposed {@link KeyVaultKey} based on either a received secret bundle or deleted secret bundle.\n */\nexport function getSecretFromSecretBundle(bundle) {\n    const secretBundle = bundle;\n    const deletedSecretBundle = bundle;\n    const parsedId = parseKeyVaultSecretIdentifier(secretBundle.id);\n    const attributes = secretBundle.attributes;\n    delete secretBundle.attributes;\n    const resultObject = {\n        value: secretBundle.value,\n        name: parsedId.name,\n        properties: {\n            expiresOn: attributes === null || attributes === void 0 ? void 0 : attributes.expires,\n            createdOn: attributes === null || attributes === void 0 ? void 0 : attributes.created,\n            updatedOn: attributes === null || attributes === void 0 ? void 0 : attributes.updated,\n            enabled: attributes === null || attributes === void 0 ? void 0 : attributes.enabled,\n            notBefore: attributes === null || attributes === void 0 ? void 0 : attributes.notBefore,\n            recoverableDays: attributes === null || attributes === void 0 ? void 0 : attributes.recoverableDays,\n            recoveryLevel: attributes === null || attributes === void 0 ? void 0 : attributes.recoveryLevel,\n            id: secretBundle.id,\n            contentType: secretBundle.contentType,\n            tags: secretBundle.tags,\n            managed: secretBundle.managed,\n            vaultUrl: parsedId.vaultUrl,\n            version: parsedId.version,\n            name: parsedId.name,\n            certificateKeyId: secretBundle.kid,\n        },\n    };\n    if (deletedSecretBundle.recoveryId) {\n        resultObject.properties.recoveryId = deletedSecretBundle.recoveryId;\n        resultObject.properties.scheduledPurgeDate = deletedSecretBundle.scheduledPurgeDate;\n        resultObject.properties.deletedOn = deletedSecretBundle.deletedDate;\n        resultObject.recoveryId = deletedSecretBundle.recoveryId;\n        resultObject.scheduledPurgeDate = deletedSecretBundle.scheduledPurgeDate;\n        resultObject.deletedOn = deletedSecretBundle.deletedDate;\n    }\n    if (attributes) {\n        if (attributes.vaultUrl) {\n            delete resultObject.properties.vaultUrl;\n        }\n        if (attributes.expires) {\n            delete resultObject.properties.expires;\n        }\n        if (attributes.created) {\n            delete resultObject.properties.created;\n        }\n        if (attributes.updated) {\n            delete resultObject.properties.updated;\n        }\n    }\n    return resultObject;\n}\n/**\n * A helper supporting compatibility between modular and legacy paged async iterables.\n *\n * Provides the following compatibility:\n * 1. Maps the values of the paged async iterable using the provided mapper function.\n * 2. Supports `maxPageSize` operation on the paged async iterable.\n *\n * TODO: move this to keyvault-common once everything is merged\n */\nexport function mapPagedAsyncIterable(operation, operationOptions, mapper) {\n    let iter = undefined;\n    return {\n        async next() {\n            iter !== null && iter !== void 0 ? iter : (iter = operation(Object.assign(Object.assign({}, operationOptions), { maxresults: undefined })));\n            const result = await iter.next();\n            return Object.assign(Object.assign({}, result), { value: result.value && mapper(result.value) });\n        },\n        [Symbol.asyncIterator]() {\n            return this;\n        },\n        byPage(settings) {\n            return __asyncGenerator(this, arguments, function* byPage_1() {\n                var _a, e_1, _b, _c;\n                // Pass the maxPageSize value to the underlying page operation\n                const iteratorByPage = operation(Object.assign(Object.assign({}, operationOptions), { maxresults: settings === null || settings === void 0 ? void 0 : settings.maxPageSize })).byPage(settings);\n                try {\n                    for (var _d = true, iteratorByPage_1 = __asyncValues(iteratorByPage), iteratorByPage_1_1; iteratorByPage_1_1 = yield __await(iteratorByPage_1.next()), _a = iteratorByPage_1_1.done, !_a; _d = true) {\n                        _c = iteratorByPage_1_1.value;\n                        _d = false;\n                        const page = _c;\n                        yield yield __await(page.map(mapper));\n                    }\n                }\n                catch (e_1_1) { e_1 = { error: e_1_1 }; }\n                finally {\n                    try {\n                        if (!_d && !_a && (_b = iteratorByPage_1.return)) yield __await(_b.call(iteratorByPage_1));\n                    }\n                    finally { if (e_1) throw e_1.error; }\n                }\n            });\n        },\n    };\n}\n//# sourceMappingURL=transformations.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nexport const SDK_VERSION = \"4.10.0\";\n//# sourceMappingURL=constants.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nimport { createTracingClient } from \"@azure/core-tracing\";\nimport { SDK_VERSION } from \"./constants.js\";\nexport const tracingClient = createTracingClient({\n    namespace: \"Microsoft.KeyVault\",\n    packageName: \"@azure/keyvault-secrets\",\n    packageVersion: SDK_VERSION,\n});\n//# sourceMappingURL=tracing.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n/**\n * When a poller is manually stopped through the `stopPolling` method,\n * the poller will be rejected with an instance of the PollerStoppedError.\n */\nexport class PollerStoppedError extends Error {\n    constructor(message) {\n        super(message);\n        this.name = \"PollerStoppedError\";\n        Object.setPrototypeOf(this, PollerStoppedError.prototype);\n    }\n}\n/**\n * When the operation is cancelled, the poller will be rejected with an instance\n * of the PollerCancelledError.\n */\nexport class PollerCancelledError extends Error {\n    constructor(message) {\n        super(message);\n        this.name = \"PollerCancelledError\";\n        Object.setPrototypeOf(this, PollerCancelledError.prototype);\n    }\n}\n/**\n * A class that represents the definition of a program that polls through consecutive requests\n * until it reaches a state of completion.\n *\n * A poller can be executed manually, by polling request by request by calling to the `poll()` method repeatedly, until its operation is completed.\n * It also provides a way to wait until the operation completes, by calling `pollUntilDone()` and waiting until the operation finishes.\n * Pollers can also request the cancellation of the ongoing process to whom is providing the underlying long running operation.\n *\n * ```ts\n * const poller = new MyPoller();\n *\n * // Polling just once:\n * await poller.poll();\n *\n * // We can try to cancel the request here, by calling:\n * //\n * //     await poller.cancelOperation();\n * //\n *\n * // Getting the final result:\n * const result = await poller.pollUntilDone();\n * ```\n *\n * The Poller is defined by two types, a type representing the state of the poller, which\n * must include a basic set of properties from `PollOperationState<TResult>`,\n * and a return type defined by `TResult`, which can be anything.\n *\n * The Poller class implements the `PollerLike` interface, which allows poller implementations to avoid having\n * to export the Poller's class directly, and instead only export the already instantiated poller with the PollerLike type.\n *\n * ```ts\n * class Client {\n *   public async makePoller: PollerLike<MyOperationState, MyResult> {\n *     const poller = new MyPoller({});\n *     // It might be preferred to return the poller after the first request is made,\n *     // so that some information can be obtained right away.\n *     await poller.poll();\n *     return poller;\n *   }\n * }\n *\n * const poller: PollerLike<MyOperationState, MyResult> = myClient.makePoller();\n * ```\n *\n * A poller can be created through its constructor, then it can be polled until it's completed.\n * At any point in time, the state of the poller can be obtained without delay through the getOperationState method.\n * At any point in time, the intermediate forms of the result type can be requested without delay.\n * Once the underlying operation is marked as completed, the poller will stop and the final value will be returned.\n *\n * ```ts\n * const poller = myClient.makePoller();\n * const state: MyOperationState = poller.getOperationState();\n *\n * // The intermediate result can be obtained at any time.\n * const result: MyResult | undefined = poller.getResult();\n *\n * // The final result can only be obtained after the poller finishes.\n * const result: MyResult = await poller.pollUntilDone();\n * ```\n *\n */\n// eslint-disable-next-line no-use-before-define\nexport class Poller {\n    /**\n     * A poller needs to be initialized by passing in at least the basic properties of the `PollOperation<TState, TResult>`.\n     *\n     * When writing an implementation of a Poller, this implementation needs to deal with the initialization\n     * of any custom state beyond the basic definition of the poller. The basic poller assumes that the poller's\n     * operation has already been defined, at least its basic properties. The code below shows how to approach\n     * the definition of the constructor of a new custom poller.\n     *\n     * ```ts\n     * export class MyPoller extends Poller<MyOperationState, string> {\n     *   constructor({\n     *     // Anything you might need outside of the basics\n     *   }) {\n     *     let state: MyOperationState = {\n     *       privateProperty: private,\n     *       publicProperty: public,\n     *     };\n     *\n     *     const operation = {\n     *       state,\n     *       update,\n     *       cancel,\n     *       toString\n     *     }\n     *\n     *     // Sending the operation to the parent's constructor.\n     *     super(operation);\n     *\n     *     // You can assign more local properties here.\n     *   }\n     * }\n     * ```\n     *\n     * Inside of this constructor, a new promise is created. This will be used to\n     * tell the user when the poller finishes (see `pollUntilDone()`). The promise's\n     * resolve and reject methods are also used internally to control when to resolve\n     * or reject anyone waiting for the poller to finish.\n     *\n     * The constructor of a custom implementation of a poller is where any serialized version of\n     * a previous poller's operation should be deserialized into the operation sent to the\n     * base constructor. For example:\n     *\n     * ```ts\n     * export class MyPoller extends Poller<MyOperationState, string> {\n     *   constructor(\n     *     baseOperation: string | undefined\n     *   ) {\n     *     let state: MyOperationState = {};\n     *     if (baseOperation) {\n     *       state = {\n     *         ...JSON.parse(baseOperation).state,\n     *         ...state\n     *       };\n     *     }\n     *     const operation = {\n     *       state,\n     *       // ...\n     *     }\n     *     super(operation);\n     *   }\n     * }\n     * ```\n     *\n     * @param operation - Must contain the basic properties of `PollOperation<State, TResult>`.\n     */\n    constructor(operation) {\n        /** controls whether to throw an error if the operation failed or was canceled. */\n        this.resolveOnUnsuccessful = false;\n        this.stopped = true;\n        this.pollProgressCallbacks = [];\n        this.operation = operation;\n        this.promise = new Promise((resolve, reject) => {\n            this.resolve = resolve;\n            this.reject = reject;\n        });\n        // This prevents the UnhandledPromiseRejectionWarning in node.js from being thrown.\n        // The above warning would get thrown if `poller.poll` is called, it returns an error,\n        // and pullUntilDone did not have a .catch or await try/catch on it's return value.\n        this.promise.catch(() => {\n            /* intentionally blank */\n        });\n    }\n    /**\n     * Starts a loop that will break only if the poller is done\n     * or if the poller is stopped.\n     */\n    async startPolling(pollOptions = {}) {\n        if (this.stopped) {\n            this.stopped = false;\n        }\n        while (!this.isStopped() && !this.isDone()) {\n            await this.poll(pollOptions);\n            await this.delay();\n        }\n    }\n    /**\n     * pollOnce does one polling, by calling to the update method of the underlying\n     * poll operation to make any relevant change effective.\n     *\n     * It only optionally receives an object with an abortSignal property, from \\@azure/abort-controller's AbortSignalLike.\n     *\n     * @param options - Optional properties passed to the operation's update method.\n     */\n    async pollOnce(options = {}) {\n        if (!this.isDone()) {\n            this.operation = await this.operation.update({\n                abortSignal: options.abortSignal,\n                fireProgress: this.fireProgress.bind(this),\n            });\n        }\n        this.processUpdatedState();\n    }\n    /**\n     * fireProgress calls the functions passed in via onProgress the method of the poller.\n     *\n     * It loops over all of the callbacks received from onProgress, and executes them, sending them\n     * the current operation state.\n     *\n     * @param state - The current operation state.\n     */\n    fireProgress(state) {\n        for (const callback of this.pollProgressCallbacks) {\n            callback(state);\n        }\n    }\n    /**\n     * Invokes the underlying operation's cancel method.\n     */\n    async cancelOnce(options = {}) {\n        this.operation = await this.operation.cancel(options);\n    }\n    /**\n     * Returns a promise that will resolve once a single polling request finishes.\n     * It does this by calling the update method of the Poller's operation.\n     *\n     * It only optionally receives an object with an abortSignal property, from \\@azure/abort-controller's AbortSignalLike.\n     *\n     * @param options - Optional properties passed to the operation's update method.\n     */\n    poll(options = {}) {\n        if (!this.pollOncePromise) {\n            this.pollOncePromise = this.pollOnce(options);\n            const clearPollOncePromise = () => {\n                this.pollOncePromise = undefined;\n            };\n            this.pollOncePromise.then(clearPollOncePromise, clearPollOncePromise).catch(this.reject);\n        }\n        return this.pollOncePromise;\n    }\n    processUpdatedState() {\n        if (this.operation.state.error) {\n            this.stopped = true;\n            if (!this.resolveOnUnsuccessful) {\n                this.reject(this.operation.state.error);\n                throw this.operation.state.error;\n            }\n        }\n        if (this.operation.state.isCancelled) {\n            this.stopped = true;\n            if (!this.resolveOnUnsuccessful) {\n                const error = new PollerCancelledError(\"Operation was canceled\");\n                this.reject(error);\n                throw error;\n            }\n        }\n        if (this.isDone() && this.resolve) {\n            // If the poller has finished polling, this means we now have a result.\n            // However, it can be the case that TResult is instantiated to void, so\n            // we are not expecting a result anyway. To assert that we might not\n            // have a result eventually after finishing polling, we cast the result\n            // to TResult.\n            this.resolve(this.getResult());\n        }\n    }\n    /**\n     * Returns a promise that will resolve once the underlying operation is completed.\n     */\n    async pollUntilDone(pollOptions = {}) {\n        if (this.stopped) {\n            this.startPolling(pollOptions).catch(this.reject);\n        }\n        // This is needed because the state could have been updated by\n        // `cancelOperation`, e.g. the operation is canceled or an error occurred.\n        this.processUpdatedState();\n        return this.promise;\n    }\n    /**\n     * Invokes the provided callback after each polling is completed,\n     * sending the current state of the poller's operation.\n     *\n     * It returns a method that can be used to stop receiving updates on the given callback function.\n     */\n    onProgress(callback) {\n        this.pollProgressCallbacks.push(callback);\n        return () => {\n            this.pollProgressCallbacks = this.pollProgressCallbacks.filter((c) => c !== callback);\n        };\n    }\n    /**\n     * Returns true if the poller has finished polling.\n     */\n    isDone() {\n        const state = this.operation.state;\n        return Boolean(state.isCompleted || state.isCancelled || state.error);\n    }\n    /**\n     * Stops the poller from continuing to poll.\n     */\n    stopPolling() {\n        if (!this.stopped) {\n            this.stopped = true;\n            if (this.reject) {\n                this.reject(new PollerStoppedError(\"This poller is already stopped\"));\n            }\n        }\n    }\n    /**\n     * Returns true if the poller is stopped.\n     */\n    isStopped() {\n        return this.stopped;\n    }\n    /**\n     * Attempts to cancel the underlying operation.\n     *\n     * It only optionally receives an object with an abortSignal property, from \\@azure/abort-controller's AbortSignalLike.\n     *\n     * If it's called again before it finishes, it will throw an error.\n     *\n     * @param options - Optional properties passed to the operation's update method.\n     */\n    cancelOperation(options = {}) {\n        if (!this.cancelPromise) {\n            this.cancelPromise = this.cancelOnce(options);\n        }\n        else if (options.abortSignal) {\n            throw new Error(\"A cancel request is currently pending\");\n        }\n        return this.cancelPromise;\n    }\n    /**\n     * Returns the state of the operation.\n     *\n     * Even though TState will be the same type inside any of the methods of any extension of the Poller class,\n     * implementations of the pollers can customize what's shared with the public by writing their own\n     * version of the `getOperationState` method, and by defining two types, one representing the internal state of the poller\n     * and a public type representing a safe to share subset of the properties of the internal state.\n     * Their definition of getOperationState can then return their public type.\n     *\n     * Example:\n     *\n     * ```ts\n     * // Let's say we have our poller's operation state defined as:\n     * interface MyOperationState extends PollOperationState<ResultType> {\n     *   privateProperty?: string;\n     *   publicProperty?: string;\n     * }\n     *\n     * // To allow us to have a true separation of public and private state, we have to define another interface:\n     * interface PublicState extends PollOperationState<ResultType> {\n     *   publicProperty?: string;\n     * }\n     *\n     * // Then, we define our Poller as follows:\n     * export class MyPoller extends Poller<MyOperationState, ResultType> {\n     *   // ... More content is needed here ...\n     *\n     *   public getOperationState(): PublicState {\n     *     const state: PublicState = this.operation.state;\n     *     return {\n     *       // Properties from PollOperationState<TResult>\n     *       isStarted: state.isStarted,\n     *       isCompleted: state.isCompleted,\n     *       isCancelled: state.isCancelled,\n     *       error: state.error,\n     *       result: state.result,\n     *\n     *       // The only other property needed by PublicState.\n     *       publicProperty: state.publicProperty\n     *     }\n     *   }\n     * }\n     * ```\n     *\n     * You can see this in the tests of this repository, go to the file:\n     * `../test/utils/testPoller.ts`\n     * and look for the getOperationState implementation.\n     */\n    getOperationState() {\n        return this.operation.state;\n    }\n    /**\n     * Returns the result value of the operation,\n     * regardless of the state of the poller.\n     * It can return undefined or an incomplete form of the final TResult value\n     * depending on the implementation.\n     */\n    getResult() {\n        const state = this.operation.state;\n        return state.result;\n    }\n    /**\n     * Returns a serialized version of the poller's operation\n     * by invoking the operation's toString method.\n     */\n    toString() {\n        return this.operation.toString();\n    }\n}\n//# sourceMappingURL=poller.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nimport { Poller } from \"@azure/core-lro\";\nimport { delay } from \"@azure/core-util\";\n/**\n * Common properties and methods of the Key Vault Secret Pollers.\n */\nexport class KeyVaultSecretPoller extends Poller {\n    constructor() {\n        super(...arguments);\n        /**\n         * Defines how much time the poller is going to wait before making a new request to the service.\n         */\n        this.intervalInMs = 2000;\n    }\n    /**\n     * The method used by the poller to wait before attempting to update its operation.\n     */\n    async delay() {\n        return delay(this.intervalInMs);\n    }\n}\n/**\n * Common properties and methods of the Key Vault Secret Poller operations.\n */\n// eslint-disable-next-next no-use-before-define\nexport class KeyVaultSecretPollOperation {\n    constructor(state, options = {}) {\n        this.state = state;\n        this.cancelMessage = \"\";\n        if (options.cancelMessage) {\n            this.cancelMessage = options.cancelMessage;\n        }\n    }\n    /**\n     * Meant to reach to the service and update the Poller operation.\n     * @param options - The optional parameters, which is only an abortSignal from \\@azure/abort-controller\n     */\n    async update() {\n        throw new Error(\"Operation not supported.\");\n    }\n    /**\n     * Meant to reach to the service and cancel the Poller operation.\n     * @param options - The optional parameters, which is only an abortSignal from \\@azure/abort-controller\n     */\n    async cancel() {\n        throw new Error(this.cancelMessage);\n    }\n    /**\n     * Serializes the Poller operation.\n     */\n    toString() {\n        return JSON.stringify({\n            state: this.state,\n        });\n    }\n}\n//# sourceMappingURL=keyVaultSecretPoller.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nimport { KeyVaultSecretPollOperation } from \"../keyVaultSecretPoller.js\";\nimport { getSecretFromSecretBundle } from \"../../transformations.js\";\nimport { tracingClient } from \"../../tracing.js\";\n/**\n * An interface representing a delete secret's poll operation\n */\nexport class DeleteSecretPollOperation extends KeyVaultSecretPollOperation {\n    constructor(state, client, operationOptions = {}) {\n        super(state, { cancelMessage: \"Canceling the deletion of a secret is not supported.\" });\n        this.state = state;\n        this.client = client;\n        this.operationOptions = operationOptions;\n    }\n    /**\n     * Sends a delete request for the given Key Vault Key's name to the Key Vault service.\n     * Since the Key Vault Key won't be immediately deleted, we have {@link beginDeleteKey}.\n     */\n    deleteSecret(name, options = {}) {\n        return tracingClient.withSpan(\"DeleteSecretPoller.deleteSecret\", options, async (updatedOptions) => {\n            const response = await this.client.deleteSecret(name, updatedOptions);\n            return getSecretFromSecretBundle(response);\n        });\n    }\n    /**\n     * The getDeletedSecret method returns the specified deleted secret along with its properties.\n     * This operation requires the secrets/get permission.\n     */\n    getDeletedSecret(name, options = {}) {\n        return tracingClient.withSpan(\"DeleteSecretPoller.getDeletedSecret\", options, async (updatedOptions) => {\n            const response = await this.client.getDeletedSecret(name, updatedOptions);\n            return getSecretFromSecretBundle(response);\n        });\n    }\n    /**\n     * Reaches to the service and updates the delete secret's poll operation.\n     */\n    async update(options = {}) {\n        const state = this.state;\n        const { name } = state;\n        if (options.abortSignal) {\n            this.operationOptions.abortSignal = options.abortSignal;\n        }\n        if (!state.isStarted) {\n            const deletedSecret = await this.deleteSecret(name, this.operationOptions);\n            state.isStarted = true;\n            state.result = deletedSecret;\n            if (!deletedSecret.properties.recoveryId) {\n                state.isCompleted = true;\n            }\n        }\n        if (!state.isCompleted) {\n            try {\n                state.result = await this.getDeletedSecret(name, this.operationOptions);\n                state.isCompleted = true;\n            }\n            catch (error) {\n                if (error.statusCode === 403) {\n                    // At this point, the resource exists but the user doesn't have access to it.\n                    state.isCompleted = true;\n                }\n                else if (error.statusCode !== 404) {\n                    state.error = error;\n                    state.isCompleted = true;\n                    throw error;\n                }\n            }\n        }\n        return this;\n    }\n}\n//# sourceMappingURL=operation.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nimport { DeleteSecretPollOperation } from \"./operation.js\";\nimport { KeyVaultSecretPoller } from \"../keyVaultSecretPoller.js\";\n/**\n * Class that creates a poller that waits until a secret finishes being deleted.\n */\nexport class DeleteSecretPoller extends KeyVaultSecretPoller {\n    constructor(options) {\n        const { client, name, operationOptions, intervalInMs = 2000, resumeFrom } = options;\n        let state;\n        if (resumeFrom) {\n            state = JSON.parse(resumeFrom).state;\n        }\n        const operation = new DeleteSecretPollOperation(Object.assign(Object.assign({}, state), { name }), client, operationOptions);\n        super(operation);\n        this.intervalInMs = intervalInMs;\n    }\n}\n//# sourceMappingURL=poller.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nimport { KeyVaultSecretPollOperation } from \"../keyVaultSecretPoller.js\";\nimport { getSecretFromSecretBundle } from \"../../transformations.js\";\nimport { tracingClient } from \"../../tracing.js\";\n/**\n * An interface representing a delete secret's poll operation\n */\nexport class RecoverDeletedSecretPollOperation extends KeyVaultSecretPollOperation {\n    constructor(state, client, options = {}) {\n        super(state, { cancelMessage: \"Canceling the recovery of a deleted secret is not supported.\" });\n        this.state = state;\n        this.client = client;\n        this.options = options;\n    }\n    /**\n     * The getSecret method returns the specified secret along with its properties.\n     * This operation requires the secrets/get permission.\n     */\n    getSecret(name, options = {}) {\n        return tracingClient.withSpan(\"RecoverDeletedSecretPoller.getSecret\", options, async (updatedOptions) => {\n            const response = await this.client.getSecret(name, options && options.version ? options.version : \"\", updatedOptions);\n            return getSecretFromSecretBundle(response);\n        });\n    }\n    /**\n     * The recoverDeletedSecret method recovers the specified deleted secret along with its properties.\n     * This operation requires the secrets/recover permission.\n     */\n    recoverDeletedSecret(name, options = {}) {\n        return tracingClient.withSpan(\"RecoverDeletedSecretPoller.recoverDeletedSecret\", options, async (updatedOptions) => {\n            const response = await this.client.recoverDeletedSecret(name, updatedOptions);\n            return getSecretFromSecretBundle(response);\n        });\n    }\n    /**\n     * Reaches to the service and updates the delete secret's poll operation.\n     */\n    async update(options = {}) {\n        const state = this.state;\n        const { name } = state;\n        if (options.abortSignal) {\n            this.options.abortSignal = options.abortSignal;\n        }\n        if (!state.isStarted) {\n            try {\n                state.result = (await this.getSecret(name, this.options)).properties;\n                state.isCompleted = true;\n            }\n            catch (_a) {\n                // Nothing to do here.\n            }\n            if (!state.isCompleted) {\n                state.result = (await this.recoverDeletedSecret(name, this.options)).properties;\n                state.isStarted = true;\n            }\n        }\n        if (!state.isCompleted) {\n            try {\n                state.result = (await this.getSecret(name, this.options)).properties;\n                state.isCompleted = true;\n            }\n            catch (error) {\n                if (error.statusCode === 403) {\n                    // At this point, the resource exists but the user doesn't have access to it.\n                    state.isCompleted = true;\n                }\n                else if (error.statusCode !== 404) {\n                    state.error = error;\n                    state.isCompleted = true;\n                    throw error;\n                }\n            }\n        }\n        return this;\n    }\n}\n//# sourceMappingURL=operation.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nimport { RecoverDeletedSecretPollOperation } from \"./operation.js\";\nimport { KeyVaultSecretPoller } from \"../keyVaultSecretPoller.js\";\n/**\n * Class that deletes a poller that waits until a secret finishes being deleted\n */\nexport class RecoverDeletedSecretPoller extends KeyVaultSecretPoller {\n    constructor(options) {\n        const { client, name, operationOptions, intervalInMs = 2000, resumeFrom } = options;\n        let state;\n        if (resumeFrom) {\n            state = JSON.parse(resumeFrom).state;\n        }\n        const operation = new RecoverDeletedSecretPollOperation(Object.assign(Object.assign({}, state), { name }), client, operationOptions);\n        super(operation);\n        this.intervalInMs = intervalInMs;\n    }\n}\n//# sourceMappingURL=poller.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n/// <reference lib=\"esnext.asynciterable\" />\nimport { __rest } from \"tslib\";\nimport { logger } from \"./log.js\";\nimport { KeyVaultClient } from \"./generated/keyVaultClient.js\";\nimport { keyVaultAuthenticationPolicy } from \"@azure/keyvault-common\";\nimport { LATEST_API_VERSION, } from \"./secretsModels.js\";\nimport { KnownDeletionRecoveryLevel } from \"./generated/index.js\";\nimport { parseKeyVaultSecretIdentifier } from \"./identifier.js\";\nimport { getSecretFromSecretBundle, mapPagedAsyncIterable } from \"./transformations.js\";\nimport { tracingClient } from \"./tracing.js\";\nimport { bearerTokenAuthenticationPolicyName } from \"@azure/core-rest-pipeline\";\nimport { SDK_VERSION } from \"./constants.js\";\nimport { DeleteSecretPoller } from \"./lro/delete/poller.js\";\nimport { RecoverDeletedSecretPoller } from \"./lro/recover/poller.js\";\nexport { KnownDeletionRecoveryLevel, parseKeyVaultSecretIdentifier, logger, };\n/**\n * The SecretClient provides methods to manage {@link KeyVaultSecret} in\n * the Azure Key Vault. The client supports creating, retrieving, updating,\n * deleting, purging, backing up, restoring and listing KeyVaultSecrets. The\n * client also supports listing {@link DeletedSecret} for a soft-delete enabled Azure\n * Key Vault.\n */\nexport class SecretClient {\n    /**\n     * Creates an instance of SecretClient.\n     *\n     * Example usage:\n     * ```ts snippet:ReadmeSampleCreateClient\n     * import { DefaultAzureCredential } from \"@azure/identity\";\n     * import { SecretClient } from \"@azure/keyvault-secrets\";\n     *\n     * const credential = new DefaultAzureCredential();\n     *\n     * // Build the URL to reach your key vault\n     * const vaultName = \"<YOUR KEYVAULT NAME>\";\n     * const url = `https://${vaultName}.vault.azure.net`;\n     *\n     * // Lastly, create our keys client and connect to the service\n     * const client = new SecretClient(url, credential);\n     * ```\n     * @param vaultUrl - The base URL to the vault. You should validate that this URL references a valid Key Vault resource. See https://aka.ms/azsdk/blog/vault-uri for details.\n     * @param credential - An object that implements the `TokenCredential` interface used to authenticate requests to the service. Use the \\@azure/identity package to create a credential that suits your needs.\n     * @param pipelineOptions - Pipeline options used to configure Key Vault API requests.\n     *                          Omit this parameter to use the default pipeline configuration.\n     */\n    constructor(vaultUrl, credential, pipelineOptions = {}) {\n        var _a, _b;\n        this.vaultUrl = vaultUrl;\n        const internalPipelineOptions = Object.assign(Object.assign({}, pipelineOptions), { userAgentOptions: {\n                userAgentPrefix: `${(_b = (_a = pipelineOptions.userAgentOptions) === null || _a === void 0 ? void 0 : _a.userAgentPrefix) !== null && _b !== void 0 ? _b : \"\"} azsdk-js-keyvault-secrets/${SDK_VERSION}`,\n            }, apiVersion: pipelineOptions.serviceVersion || LATEST_API_VERSION, loggingOptions: {\n                logger: logger.info,\n                additionalAllowedHeaderNames: [\n                    \"x-ms-keyvault-region\",\n                    \"x-ms-keyvault-network-info\",\n                    \"x-ms-keyvault-service-version\",\n                ],\n            } });\n        this.client = new KeyVaultClient(this.vaultUrl, credential, internalPipelineOptions);\n        // Key vault has its own authentication policy that needs to be added to the pipeline, replacing the default bearerTokenAuthenticationPolicy.\n        this.client.pipeline.removePolicy({ name: bearerTokenAuthenticationPolicyName });\n        this.client.pipeline.addPolicy(keyVaultAuthenticationPolicy(credential, pipelineOptions), {});\n        // Workaround for: https://github.com/Azure/azure-sdk-for-js/issues/31843\n        this.client.pipeline.addPolicy({\n            name: \"ContentTypePolicy\",\n            sendRequest(request, next) {\n                var _a;\n                const contentType = (_a = request.headers.get(\"Content-Type\")) !== null && _a !== void 0 ? _a : \"\";\n                if (contentType.startsWith(\"application/json\")) {\n                    request.headers.set(\"Content-Type\", \"application/json\");\n                }\n                return next(request);\n            },\n        });\n    }\n    /**\n     * The setSecret method adds a secret or secret version to the Azure Key Vault. If the named secret\n     * already exists, Azure Key Vault creates a new version of that secret.\n     * This operation requires the secrets/set permission.\n     *\n     * Example usage:\n     * ```ts snippet:ReadmeSampleCreateSecret\n     * import { DefaultAzureCredential } from \"@azure/identity\";\n     * import { SecretClient } from \"@azure/keyvault-secrets\";\n     *\n     * const credential = new DefaultAzureCredential();\n     *\n     * const vaultName = \"<YOUR KEYVAULT NAME>\";\n     * const url = `https://${vaultName}.vault.azure.net`;\n     *\n     * const client = new SecretClient(url, credential);\n     *\n     * const secretName = \"MySecretName\";\n     *\n     * const result = await client.setSecret(secretName, \"MySecretValue\");\n     * console.log(\"result: \", result);\n     * ```\n     * Adds a secret in a specified key vault.\n     * @param secretName - The name of the secret.\n     * @param value - The value of the secret.\n     * @param options - The optional parameters.\n     */\n    setSecret(secretName, value, options = {}) {\n        const { enabled, notBefore, expiresOn: expires, tags } = options, remainingOptions = __rest(options, [\"enabled\", \"notBefore\", \"expiresOn\", \"tags\"]);\n        return tracingClient.withSpan(\"SecretClient.setSecret\", remainingOptions, async (updatedOptions) => {\n            const response = await this.client.setSecret(secretName, { value, secretAttributes: { enabled, notBefore, expires }, tags }, updatedOptions);\n            return getSecretFromSecretBundle(response);\n        });\n    }\n    /**\n     * Deletes a secret stored in Azure Key Vault.\n     * This function returns a Long Running Operation poller that allows you to wait indefinitely until the secret is deleted.\n     *\n     * This operation requires the secrets/delete permission.\n     *\n     * Example usage:\n     * ```ts snippet:ReadmeSampleDeleteSecret\n     * import { DefaultAzureCredential } from \"@azure/identity\";\n     * import { SecretClient } from \"@azure/keyvault-secrets\";\n     *\n     * const credential = new DefaultAzureCredential();\n     *\n     * const vaultName = \"<YOUR KEYVAULT NAME>\";\n     * const url = `https://${vaultName}.vault.azure.net`;\n     *\n     * const client = new SecretClient(url, credential);\n     *\n     * const secretName = \"MySecretName\";\n     *\n     * await client.beginDeleteSecret(secretName);\n     * ```\n     * Deletes a secret from a specified key vault.\n     * @param secretName - The name of the secret.\n     * @param options - The optional parameters.\n     */\n    async beginDeleteSecret(name, options = {}) {\n        const poller = new DeleteSecretPoller(Object.assign(Object.assign({ name, client: this.client }, options), { operationOptions: options }));\n        // This will initialize the poller's operation (the deletion of the secret).\n        await poller.poll();\n        return poller;\n    }\n    /**\n     * The updateSecret method changes specified attributes of an existing stored secret. Properties that\n     * are not specified in the request are left unchanged. The value of a secret itself cannot be\n     * changed. This operation requires the secrets/set permission.\n     *\n     * Example usage:\n     * ```ts snippet:ReadmeSampleUpdateSecretAttributes\n     * import { DefaultAzureCredential } from \"@azure/identity\";\n     * import { SecretClient } from \"@azure/keyvault-secrets\";\n     *\n     * const credential = new DefaultAzureCredential();\n     *\n     * const vaultName = \"<YOUR KEYVAULT NAME>\";\n     * const url = `https://${vaultName}.vault.azure.net`;\n     *\n     * const client = new SecretClient(url, credential);\n     *\n     * const secretName = \"MySecretName\";\n     *\n     * const result = await client.getSecret(secretName);\n     * await client.updateSecretProperties(secretName, result.properties.version, { enabled: false });\n     * ```\n     * Updates the attributes associated with a specified secret in a given key vault.\n     * @param secretName - The name of the secret.\n     * @param secretVersion - The version of the secret.\n     * @param options - The optional parameters.\n     */\n    async updateSecretProperties(secretName, secretVersion, options = {}) {\n        const { enabled, notBefore, expiresOn: expires, tags } = options, remainingOptions = __rest(options, [\"enabled\", \"notBefore\", \"expiresOn\", \"tags\"]);\n        return tracingClient.withSpan(\"SecretClient.updateSecretProperties\", remainingOptions, async (updatedOptions) => {\n            const response = await this.client.updateSecret(secretName, secretVersion, { secretAttributes: { enabled, notBefore, expires }, tags }, updatedOptions);\n            return getSecretFromSecretBundle(response).properties;\n        });\n    }\n    /**\n     * The getSecret method is applicable to any secret stored in Azure Key Vault. This operation requires\n     * the secrets/get permission.\n     *\n     * Example usage:\n     * ```ts snippet:ReadmeSampleGetSecret\n     * import { DefaultAzureCredential } from \"@azure/identity\";\n     * import { SecretClient } from \"@azure/keyvault-secrets\";\n     *\n     * const credential = new DefaultAzureCredential();\n     *\n     * const vaultName = \"<YOUR KEYVAULT NAME>\";\n     * const url = `https://${vaultName}.vault.azure.net`;\n     *\n     * const client = new SecretClient(url, credential);\n     *\n     * const secretName = \"MySecretName\";\n     *\n     * const latestSecret = await client.getSecret(secretName);\n     * console.log(`Latest version of the secret ${secretName}: `, latestSecret);\n     *\n     * const specificSecret = await client.getSecret(secretName, {\n     *   version: latestSecret.properties.version!,\n     * });\n     * console.log(\n     *   `The secret ${secretName} at the version ${latestSecret.properties.version!}: `,\n     *   specificSecret,\n     * );\n     * ```\n     * Get a specified secret from a given key vault.\n     * @param secretName - The name of the secret.\n     * @param options - The optional parameters.\n     */\n    getSecret(secretName, options = {}) {\n        return tracingClient.withSpan(\"SecretClient.getSecret\", options, async (updatedOptions) => {\n            const response = await this.client.getSecret(secretName, options && options.version ? options.version : \"\", updatedOptions);\n            return getSecretFromSecretBundle(response);\n        });\n    }\n    /**\n     * The getDeletedSecret method returns the specified deleted secret along with its attributes.\n     * This operation requires the secrets/get permission.\n     *\n     * Example usage:\n     * ```ts snippet:ReadmeSampleGetDeletedSecret\n     * import { DefaultAzureCredential } from \"@azure/identity\";\n     * import { SecretClient } from \"@azure/keyvault-secrets\";\n     *\n     * const credential = new DefaultAzureCredential();\n     *\n     * const vaultName = \"<YOUR KEYVAULT NAME>\";\n     * const url = `https://${vaultName}.vault.azure.net`;\n     *\n     * const client = new SecretClient(url, credential);\n     *\n     * const secretName = \"MySecretName\";\n     *\n     * const result = await client.getDeletedSecret(\"MyDeletedSecret\");\n     * ```\n     * Gets the specified deleted secret.\n     * @param secretName - The name of the secret.\n     * @param options - The optional parameters.\n     */\n    getDeletedSecret(secretName, options = {}) {\n        return tracingClient.withSpan(\"SecretClient.getDeletedSecret\", options, async (updatedOptions) => {\n            const response = await this.client.getDeletedSecret(secretName, updatedOptions);\n            return getSecretFromSecretBundle(response);\n        });\n    }\n    /**\n     * The purge deleted secret operation removes the secret permanently, without the possibility of\n     * recovery. This operation can only be enabled on a soft-delete enabled vault. This operation\n     * requires the secrets/purge permission.\n     *\n     * Example usage:\n     * ```ts snippet:ReadmeSamplePurgeDeletedSecret\n     * import { DefaultAzureCredential } from \"@azure/identity\";\n     * import { SecretClient } from \"@azure/keyvault-secrets\";\n     *\n     * const credential = new DefaultAzureCredential();\n     *\n     * const vaultName = \"<YOUR KEYVAULT NAME>\";\n     * const url = `https://${vaultName}.vault.azure.net`;\n     *\n     * const client = new SecretClient(url, credential);\n     *\n     * const secretName = \"MySecretName\";\n     *\n     * const deletePoller = await client.beginDeleteSecret(secretName);\n     * await deletePoller.pollUntilDone();\n     *\n     * await client.purgeDeletedSecret(secretName);\n     * ```\n     * Permanently deletes the specified secret.\n     * @param secretName - The name of the secret.\n     * @param options - The optional parameters.\n     */\n    purgeDeletedSecret(secretName, options = {}) {\n        return tracingClient.withSpan(\"SecretClient.purgeDeletedSecret\", options, async (updatedOptions) => {\n            await this.client.purgeDeletedSecret(secretName, updatedOptions);\n        });\n    }\n    /**\n     * Recovers the deleted secret in the specified vault.\n     * This function returns a Long Running Operation poller that allows you to wait indefinitely until the secret is recovered.\n     *\n     * This operation requires the secrets/recover permission.\n     *\n     * Example usage:\n     * ```ts snippet:ReadmeSampleRecoverDeletedSecret\n     * import { DefaultAzureCredential } from \"@azure/identity\";\n     * import { SecretClient } from \"@azure/keyvault-secrets\";\n     *\n     * const credential = new DefaultAzureCredential();\n     *\n     * const vaultName = \"<YOUR KEYVAULT NAME>\";\n     * const url = `https://${vaultName}.vault.azure.net`;\n     *\n     * const client = new SecretClient(url, credential);\n     *\n     * const secretName = \"MySecretName\";\n     *\n     * const deletePoller = await client.beginDeleteSecret(secretName);\n     * await deletePoller.pollUntilDone();\n     *\n     * const recoverPoller = await client.beginRecoverDeletedSecret(secretName);\n     * const deletedSecret = await recoverPoller.pollUntilDone();\n     * console.log(deletedSecret);\n     * ```\n     * Recovers the deleted secret to the latest version.\n     * @param secretName - The name of the deleted secret.\n     * @param options - The optional parameters.\n     */\n    async beginRecoverDeletedSecret(name, options = {}) {\n        const poller = new RecoverDeletedSecretPoller(Object.assign(Object.assign({ name, client: this.client }, options), { operationOptions: options }));\n        // This will initialize the poller's operation (the recovery of the deleted secret).\n        await poller.poll();\n        return poller;\n    }\n    /**\n     * Requests that a backup of the specified secret be downloaded to the client. All versions of the\n     * secret will be downloaded. This operation requires the secrets/backup permission.\n     *\n     * Example usage:\n     * ```ts snippet:ReadmeSampleBackupSecret\n     * import { DefaultAzureCredential } from \"@azure/identity\";\n     * import { SecretClient } from \"@azure/keyvault-secrets\";\n     *\n     * const credential = new DefaultAzureCredential();\n     *\n     * const vaultName = \"<YOUR KEYVAULT NAME>\";\n     * const url = `https://${vaultName}.vault.azure.net`;\n     *\n     * const client = new SecretClient(url, credential);\n     *\n     * const secretName = \"MySecretName\";\n     *\n     * const backupResult = await client.backupSecret(secretName);\n     * ```\n     * Backs up the specified secret.\n     * @param secretName - The name of the secret.\n     * @param options - The optional parameters.\n     */\n    backupSecret(secretName, options = {}) {\n        return tracingClient.withSpan(\"SecretClient.backupSecret\", options, async (updatedOptions) => {\n            const response = await this.client.backupSecret(secretName, updatedOptions);\n            return response.value;\n        });\n    }\n    /**\n     * Restores a backed up secret, and all its versions, to a vault. This operation requires the\n     * secrets/restore permission.\n     *\n     * Example usage:\n     * ```ts snippet:ReadmeSampleRestoreSecret\n     * import { DefaultAzureCredential } from \"@azure/identity\";\n     * import { SecretClient } from \"@azure/keyvault-secrets\";\n     *\n     * const credential = new DefaultAzureCredential();\n     *\n     * const vaultName = \"<YOUR KEYVAULT NAME>\";\n     * const url = `https://${vaultName}.vault.azure.net`;\n     *\n     * const client = new SecretClient(url, credential);\n     *\n     * const secretName = \"MySecretName\";\n     *\n     * const backupResult = await client.backupSecret(secretName);\n     *\n     * await client.restoreSecretBackup(backupResult);\n     * ```\n     * Restores a backed up secret to a vault.\n     * @param secretBundleBackup - The backup blob associated with a secret bundle.\n     * @param options - The optional parameters.\n     */\n    restoreSecretBackup(secretBundleBackup, options = {}) {\n        return tracingClient.withSpan(\"SecretClient.restoreSecretBackup\", options, async (updatedOptions) => {\n            const response = await this.client.restoreSecret({ secretBundleBackup }, updatedOptions);\n            return getSecretFromSecretBundle(response).properties;\n        });\n    }\n    /**\n     * Iterates all versions of the given secret in the vault. The full secret identifier and attributes are provided\n     * in the response. No values are returned for the secrets. This operations requires the secrets/list permission.\n     *\n     * Example usage:\n     * ```ts snippet:ReadmeSampleListSecrets\n     * import { DefaultAzureCredential } from \"@azure/identity\";\n     * import { SecretClient } from \"@azure/keyvault-secrets\";\n     *\n     * const credential = new DefaultAzureCredential();\n     *\n     * const vaultName = \"<YOUR KEYVAULT NAME>\";\n     * const url = `https://${vaultName}.vault.azure.net`;\n     *\n     * const client = new SecretClient(url, credential);\n     *\n     * const secretName = \"MySecretName\";\n     *\n     * for await (const secretProperties of client.listPropertiesOfSecrets()) {\n     *   console.log(\"Secret properties: \", secretProperties);\n     * }\n     *\n     * for await (const deletedSecret of client.listDeletedSecrets()) {\n     *   console.log(\"Deleted secret: \", deletedSecret);\n     * }\n     *\n     * for await (const versionProperties of client.listPropertiesOfSecretVersions(secretName)) {\n     *   console.log(\"Version properties: \", versionProperties);\n     * }\n     * ```\n     * @param secretName - Name of the secret to fetch versions for.\n     * @param options - The optional parameters.\n     */\n    listPropertiesOfSecretVersions(secretName, options = {}) {\n        return mapPagedAsyncIterable((updatedOptions) => this.client.getSecretVersions(secretName, updatedOptions), options, (item) => getSecretFromSecretBundle(item).properties);\n    }\n    /**\n     * Iterates the latest version of all secrets in the vault.  The full secret identifier and attributes are provided\n     * in the response. No values are returned for the secrets. This operations requires the secrets/list permission.\n     *\n     * Example usage:\n     * ```ts snippet:ReadmeSampleListSecrets\n     * import { DefaultAzureCredential } from \"@azure/identity\";\n     * import { SecretClient } from \"@azure/keyvault-secrets\";\n     *\n     * const credential = new DefaultAzureCredential();\n     *\n     * const vaultName = \"<YOUR KEYVAULT NAME>\";\n     * const url = `https://${vaultName}.vault.azure.net`;\n     *\n     * const client = new SecretClient(url, credential);\n     *\n     * const secretName = \"MySecretName\";\n     *\n     * for await (const secretProperties of client.listPropertiesOfSecrets()) {\n     *   console.log(\"Secret properties: \", secretProperties);\n     * }\n     *\n     * for await (const deletedSecret of client.listDeletedSecrets()) {\n     *   console.log(\"Deleted secret: \", deletedSecret);\n     * }\n     *\n     * for await (const versionProperties of client.listPropertiesOfSecretVersions(secretName)) {\n     *   console.log(\"Version properties: \", versionProperties);\n     * }\n     * ```\n     * List all secrets in the vault.\n     * @param options - The optional parameters.\n     */\n    listPropertiesOfSecrets(options = {}) {\n        return mapPagedAsyncIterable(this.client.getSecrets.bind(this.client), options, (item) => getSecretFromSecretBundle(item).properties);\n    }\n    /**\n     * Iterates the deleted secrets in the vault.  The full secret identifier and attributes are provided\n     * in the response. No values are returned for the secrets. This operations requires the secrets/list permission.\n     *\n     * Example usage:\n     * ```ts snippet:ReadmeSampleListSecrets\n     * import { DefaultAzureCredential } from \"@azure/identity\";\n     * import { SecretClient } from \"@azure/keyvault-secrets\";\n     *\n     * const credential = new DefaultAzureCredential();\n     *\n     * const vaultName = \"<YOUR KEYVAULT NAME>\";\n     * const url = `https://${vaultName}.vault.azure.net`;\n     *\n     * const client = new SecretClient(url, credential);\n     *\n     * const secretName = \"MySecretName\";\n     *\n     * for await (const secretProperties of client.listPropertiesOfSecrets()) {\n     *   console.log(\"Secret properties: \", secretProperties);\n     * }\n     *\n     * for await (const deletedSecret of client.listDeletedSecrets()) {\n     *   console.log(\"Deleted secret: \", deletedSecret);\n     * }\n     *\n     * for await (const versionProperties of client.listPropertiesOfSecretVersions(secretName)) {\n     *   console.log(\"Version properties: \", versionProperties);\n     * }\n     * ```\n     * List all secrets in the vault.\n     * @param options - The optional parameters.\n     */\n    listDeletedSecrets(options = {}) {\n        return mapPagedAsyncIterable(this.client.getDeletedSecrets.bind(this.client), options, getSecretFromSecretBundle);\n    }\n}\n//# sourceMappingURL=index.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n/**\n * The latest supported KeyVault service API version\n */\nexport const LATEST_API_VERSION = \"7.6\";\n//# sourceMappingURL=secretsModels.js.map","/**\n * -------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.\n * See License in the project root for license information.\n * -------------------------------------------------------------------------------------------\n */\n/**\n * @enum\n * Enum for RequestMethods\n * @property {string} GET - The get request type\n * @property {string} PATCH - The patch request type\n * @property {string} POST - The post request type\n * @property {string} PUT - The put request type\n * @property {string} DELETE - The delete request type\n */\nexport var RequestMethod;\n(function (RequestMethod) {\n    RequestMethod[\"GET\"] = \"GET\";\n    RequestMethod[\"PATCH\"] = \"PATCH\";\n    RequestMethod[\"POST\"] = \"POST\";\n    RequestMethod[\"PUT\"] = \"PUT\";\n    RequestMethod[\"DELETE\"] = \"DELETE\";\n})(RequestMethod || (RequestMethod = {}));\n//# sourceMappingURL=RequestMethod.js.map","/**\n * -------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.\n * See License in the project root for license information.\n * -------------------------------------------------------------------------------------------\n */\n/**\n * @module Constants\n */\n/**\n * @constant\n * A Default API endpoint version for a request\n */\nexport const GRAPH_API_VERSION = \"v1.0\";\n/**\n * @constant\n * A Default base url for a request\n */\nexport const GRAPH_BASE_URL = \"https://graph.microsoft.com/\";\n/**\n * To hold list of the service root endpoints for Microsoft Graph and Graph Explorer for each national cloud.\n * Set(iterable:Object) is not supported in Internet Explorer. The consumer is recommended to use a suitable polyfill.\n */\nexport const GRAPH_URLS = new Set([\"graph.microsoft.com\", \"graph.microsoft.us\", \"dod-graph.microsoft.us\", \"graph.microsoft.de\", \"microsoftgraph.chinacloudapi.cn\", \"canary.graph.microsoft.com\"]);\n//# sourceMappingURL=Constants.js.map","/**\n * -------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.\n * See License in the project root for license information.\n * -------------------------------------------------------------------------------------------\n */\n/**\n * @module GraphClientError\n */\n/**\n * @class\n * Create GraphClientError object to handle client-side errors\n * encountered within the JavaScript Client SDK.\n * Whereas GraphError Class should be used to handle errors in the response from the Graph API.\n */\nexport class GraphClientError extends Error {\n    /**\n     * @public\n     * @static\n     * @async\n     * To set the GraphClientError object\n     * @param {any} error - The error returned encountered by the Graph JavaScript Client SDK while processing request\n     * @returns GraphClientError object set to the error passed\n     */\n    static setGraphClientError(error) {\n        let graphClientError;\n        if (error instanceof Error) {\n            graphClientError = error;\n        }\n        else {\n            graphClientError = new GraphClientError();\n            graphClientError.customError = error;\n        }\n        return graphClientError;\n    }\n    /**\n     * @public\n     * @constructor\n     * Creates an instance of GraphClientError\n     * @param {string} message? - Error message\n     * @returns An instance of GraphClientError\n     */\n    constructor(message) {\n        super(message);\n        Object.setPrototypeOf(this, GraphClientError.prototype);\n    }\n}\n//# sourceMappingURL=GraphClientError.js.map","/**\n * -------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.\n * See License in the project root for license information.\n * -------------------------------------------------------------------------------------------\n */\n/**\n * @module GraphRequestUtil\n */\nimport { GRAPH_URLS } from \"./Constants\";\nimport { GraphClientError } from \"./GraphClientError\";\n/**\n * To hold list of OData query params\n */\nexport const oDataQueryNames = [\"$select\", \"$expand\", \"$orderby\", \"$filter\", \"$top\", \"$skip\", \"$skipToken\", \"$count\"];\n/**\n * To construct the URL by appending the segments with \"/\"\n * @param {string[]} urlSegments - The array of strings\n * @returns The constructed URL string\n */\nexport const urlJoin = (urlSegments) => {\n    const removePostSlash = (s) => s.replace(/\\/+$/, \"\");\n    const removePreSlash = (s) => s.replace(/^\\/+/, \"\");\n    const joiner = (pre, cur) => [removePostSlash(pre), removePreSlash(cur)].join(\"/\");\n    const parts = Array.prototype.slice.call(urlSegments);\n    return parts.reduce(joiner);\n};\n/**\n * Serializes the content\n * @param {any} content - The content value that needs to be serialized\n * @returns The serialized content\n *\n * Note:\n * This conversion is required due to the following reasons:\n * Body parameter of Request method of isomorphic-fetch only accepts Blob, ArrayBuffer, FormData, TypedArrays string.\n * Node.js platform does not support Blob, FormData. Javascript File object inherits from Blob so it is also not supported in node. Therefore content of type Blob, File, FormData will only come from browsers.\n * Parallel to ArrayBuffer in javascript, node provides Buffer interface. Node's Buffer is able to send the arbitrary binary data to the server successfully for both Browser and Node platform. Whereas sending binary data via ArrayBuffer or TypedArrays was only possible using Browser. To support both Node and Browser, `serializeContent` converts TypedArrays or ArrayBuffer to `Node Buffer`.\n * If the data received is in JSON format, `serializeContent` converts the JSON to string.\n */\nexport const serializeContent = (content) => {\n    const className = content && content.constructor && content.constructor.name;\n    if (className === \"Buffer\" || className === \"Blob\" || className === \"File\" || className === \"FormData\" || typeof content === \"string\") {\n        return content;\n    }\n    if (className === \"ArrayBuffer\") {\n        content = Buffer.from(content);\n    }\n    else if (className === \"Int8Array\" || className === \"Int16Array\" || className === \"Int32Array\" || className === \"Uint8Array\" || className === \"Uint16Array\" || className === \"Uint32Array\" || className === \"Uint8ClampedArray\" || className === \"Float32Array\" || className === \"Float64Array\" || className === \"DataView\") {\n        content = Buffer.from(content.buffer);\n    }\n    else {\n        try {\n            content = JSON.stringify(content);\n        }\n        catch (error) {\n            throw new Error(\"Unable to stringify the content\");\n        }\n    }\n    return content;\n};\n/**\n * Checks if the url is one of the service root endpoints for Microsoft Graph and Graph Explorer.\n * @param {string} url - The url to be verified\n * @returns {boolean} - Returns true if the url is a Graph URL\n */\nexport const isGraphURL = (url) => {\n    return isValidEndpoint(url);\n};\n/**\n * Checks if the url is for one of the custom hosts provided during client initialization\n * @param {string} url - The url to be verified\n * @param {Set} customHosts - The url to be verified\n * @returns {boolean} - Returns true if the url is a for a custom host\n */\nexport const isCustomHost = (url, customHosts) => {\n    customHosts.forEach((host) => isCustomHostValid(host));\n    return isValidEndpoint(url, customHosts);\n};\n/**\n * Checks if the url is for one of the provided hosts.\n * @param {string} url - The url to be verified\n * @param {Set<string>} allowedHosts - A set of hosts.\n * @returns {boolean} - Returns true is for one of the provided endpoints.\n */\nconst isValidEndpoint = (url, allowedHosts = GRAPH_URLS) => {\n    // Valid Graph URL pattern - https://graph.microsoft.com/{version}/{resource}?{query-parameters}\n    // Valid Graph URL example - https://graph.microsoft.com/v1.0/\n    url = url.toLowerCase();\n    if (url.indexOf(\"https://\") !== -1) {\n        url = url.replace(\"https://\", \"\");\n        // Find where the host ends\n        const startofPortNoPos = url.indexOf(\":\");\n        const endOfHostStrPos = url.indexOf(\"/\");\n        let hostName = \"\";\n        if (endOfHostStrPos !== -1) {\n            if (startofPortNoPos !== -1 && startofPortNoPos < endOfHostStrPos) {\n                hostName = url.substring(0, startofPortNoPos);\n                return allowedHosts.has(hostName);\n            }\n            // Parse out the host\n            hostName = url.substring(0, endOfHostStrPos);\n            return allowedHosts.has(hostName);\n        }\n    }\n    return false;\n};\n/**\n * Throws error if the string is not a valid host/hostname and contains other url parts.\n * @param {string} host - The host to be verified\n */\nconst isCustomHostValid = (host) => {\n    if (host.indexOf(\"/\") !== -1) {\n        throw new GraphClientError(\"Please add only hosts or hostnames to the CustomHosts config. If the url is `http://example.com:3000/`, host is `example:3000`\");\n    }\n};\n//# sourceMappingURL=GraphRequestUtil.js.map","/**\n * -------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.\n * See License in the project root for license information.\n * -------------------------------------------------------------------------------------------\n */\n/**\n * @class\n * Class representing MiddlewareControl\n */\nexport class MiddlewareControl {\n    /**\n     * @public\n     * @constructor\n     * Creates an instance of MiddlewareControl\n     * @param {MiddlewareOptions[]} [middlewareOptions = []] - The array of middlewareOptions\n     * @returns The instance of MiddlewareControl\n     */\n    constructor(middlewareOptions = []) {\n        this.middlewareOptions = new Map();\n        for (const option of middlewareOptions) {\n            const fn = option.constructor;\n            this.middlewareOptions.set(fn, option);\n        }\n    }\n    /**\n     * @public\n     * To get the middleware option using the class of the option\n     * @param {Function} fn - The class of the strongly typed option class\n     * @returns The middleware option\n     * @example\n     * // if you wanted to return the middleware option associated with this class (MiddlewareControl)\n     * // call this function like this:\n     * getMiddlewareOptions(MiddlewareControl)\n     */\n    getMiddlewareOptions(fn) {\n        return this.middlewareOptions.get(fn);\n    }\n    /**\n     * @public\n     * To set the middleware options using the class of the option\n     * @param {Function} fn - The class of the strongly typed option class\n     * @param {MiddlewareOptions} option - The strongly typed middleware option\n     * @returns nothing\n     */\n    setMiddlewareOptions(fn, option) {\n        this.middlewareOptions.set(fn, option);\n    }\n}\n//# sourceMappingURL=MiddlewareControl.js.map","/**\n * -------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.\n * See License in the project root for license information.\n * -------------------------------------------------------------------------------------------\n */\nimport { __awaiter } from \"tslib\";\n/**\n * @constant\n * To generate the UUID\n * @returns The UUID string\n */\nexport const generateUUID = () => {\n    let uuid = \"\";\n    for (let j = 0; j < 32; j++) {\n        if (j === 8 || j === 12 || j === 16 || j === 20) {\n            uuid += \"-\";\n        }\n        uuid += Math.floor(Math.random() * 16).toString(16);\n    }\n    return uuid;\n};\n/**\n * @constant\n * To get the request header from the request\n * @param {RequestInfo} request - The request object or the url string\n * @param {FetchOptions|undefined} options - The request options object\n * @param {string} key - The header key string\n * @returns A header value for the given key from the request\n */\nexport const getRequestHeader = (request, options, key) => {\n    let value = null;\n    if (typeof Request !== \"undefined\" && request instanceof Request) {\n        value = request.headers.get(key);\n    }\n    else if (typeof options !== \"undefined\" && options.headers !== undefined) {\n        if (typeof Headers !== \"undefined\" && options.headers instanceof Headers) {\n            value = options.headers.get(key);\n        }\n        else if (options.headers instanceof Array) {\n            const headers = options.headers;\n            for (let i = 0, l = headers.length; i < l; i++) {\n                if (headers[i][0] === key) {\n                    value = headers[i][1];\n                    break;\n                }\n            }\n        }\n        else if (options.headers[key] !== undefined) {\n            value = options.headers[key];\n        }\n    }\n    return value;\n};\n/**\n * @constant\n * To set the header value to the given request\n * @param {RequestInfo} request - The request object or the url string\n * @param {FetchOptions|undefined} options - The request options object\n * @param {string} key - The header key string\n * @param {string } value - The header value string\n * @returns Nothing\n */\nexport const setRequestHeader = (request, options, key, value) => {\n    if (typeof Request !== \"undefined\" && request instanceof Request) {\n        request.headers.set(key, value);\n    }\n    else if (typeof options !== \"undefined\") {\n        if (options.headers === undefined) {\n            options.headers = new Headers({\n                [key]: value,\n            });\n        }\n        else {\n            if (typeof Headers !== \"undefined\" && options.headers instanceof Headers) {\n                options.headers.set(key, value);\n            }\n            else if (options.headers instanceof Array) {\n                let i = 0;\n                const l = options.headers.length;\n                for (; i < l; i++) {\n                    const header = options.headers[i];\n                    if (header[0] === key) {\n                        header[1] = value;\n                        break;\n                    }\n                }\n                if (i === l) {\n                    options.headers.push([key, value]);\n                }\n            }\n            else {\n                Object.assign(options.headers, { [key]: value });\n            }\n        }\n    }\n};\n/**\n * @constant\n * To append the header value to the given request\n * @param {RequestInfo} request - The request object or the url string\n * @param {FetchOptions|undefined} options - The request options object\n * @param {string} key - The header key string\n * @param {string } value - The header value string\n * @returns Nothing\n */\nexport const appendRequestHeader = (request, options, key, value) => {\n    if (typeof Request !== \"undefined\" && request instanceof Request) {\n        request.headers.append(key, value);\n    }\n    else if (typeof options !== \"undefined\") {\n        if (options.headers === undefined) {\n            options.headers = new Headers({\n                [key]: value,\n            });\n        }\n        else {\n            if (typeof Headers !== \"undefined\" && options.headers instanceof Headers) {\n                options.headers.append(key, value);\n            }\n            else if (options.headers instanceof Array) {\n                options.headers.push([key, value]);\n            }\n            else if (options.headers === undefined) {\n                options.headers = { [key]: value };\n            }\n            else if (options.headers[key] === undefined) {\n                options.headers[key] = value;\n            }\n            else {\n                options.headers[key] += `, ${value}`;\n            }\n        }\n    }\n};\n/**\n * @constant\n * To clone the request with the new url\n * @param {string} url - The new url string\n * @param {Request} request - The request object\n * @returns A promise that resolves to request object\n */\nexport const cloneRequestWithNewUrl = (newUrl, request) => __awaiter(void 0, void 0, void 0, function* () {\n    const body = request.headers.get(\"Content-Type\") ? yield request.blob() : yield Promise.resolve(undefined);\n    const { method, headers, referrer, referrerPolicy, mode, credentials, cache, redirect, integrity, keepalive, signal } = request;\n    return new Request(newUrl, { method, headers, body, referrer, referrerPolicy, mode, credentials, cache, redirect, integrity, keepalive, signal });\n});\n//# sourceMappingURL=MiddlewareUtil.js.map","/**\n * -------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.\n * See License in the project root for license information.\n * -------------------------------------------------------------------------------------------\n */\n/**\n * @class\n * @implements MiddlewareOptions\n * Class representing AuthenticationHandlerOptions\n */\nexport class AuthenticationHandlerOptions {\n    /**\n     * @public\n     * @constructor\n     * To create an instance of AuthenticationHandlerOptions\n     * @param {AuthenticationProvider} [authenticationProvider] - The authentication provider instance\n     * @param {AuthenticationProviderOptions} [authenticationProviderOptions] - The authentication provider options instance\n     * @returns An instance of AuthenticationHandlerOptions\n     */\n    constructor(authenticationProvider, authenticationProviderOptions) {\n        this.authenticationProvider = authenticationProvider;\n        this.authenticationProviderOptions = authenticationProviderOptions;\n    }\n}\n//# sourceMappingURL=AuthenticationHandlerOptions.js.map","/**\n * -------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.\n * See License in the project root for license information.\n * -------------------------------------------------------------------------------------------\n */\nimport { MiddlewareControl } from \"../MiddlewareControl\";\n/**\n * @enum\n * @property {number} NONE - The hexadecimal flag value for nothing enabled\n * @property {number} REDIRECT_HANDLER_ENABLED - The hexadecimal flag value for redirect handler enabled\n * @property {number} RETRY_HANDLER_ENABLED - The hexadecimal flag value for retry handler enabled\n * @property {number} AUTHENTICATION_HANDLER_ENABLED - The hexadecimal flag value for the authentication handler enabled\n */\nexport var FeatureUsageFlag;\n(function (FeatureUsageFlag) {\n    /* eslint-disable  @typescript-eslint/naming-convention */\n    FeatureUsageFlag[FeatureUsageFlag[\"NONE\"] = 0] = \"NONE\";\n    FeatureUsageFlag[FeatureUsageFlag[\"REDIRECT_HANDLER_ENABLED\"] = 1] = \"REDIRECT_HANDLER_ENABLED\";\n    FeatureUsageFlag[FeatureUsageFlag[\"RETRY_HANDLER_ENABLED\"] = 2] = \"RETRY_HANDLER_ENABLED\";\n    FeatureUsageFlag[FeatureUsageFlag[\"AUTHENTICATION_HANDLER_ENABLED\"] = 4] = \"AUTHENTICATION_HANDLER_ENABLED\";\n    /* eslint-enable  @typescript-eslint/naming-convention */\n})(FeatureUsageFlag || (FeatureUsageFlag = {}));\n/**\n * @class\n * @implements MiddlewareOptions\n * Class for TelemetryHandlerOptions\n */\nexport class TelemetryHandlerOptions {\n    constructor() {\n        /**\n         * @private\n         * A member to hold the OR of feature usage flags\n         */\n        this.featureUsage = FeatureUsageFlag.NONE;\n    }\n    /**\n     * @public\n     * @static\n     * To update the feature usage in the context object\n     * @param {Context} context - The request context object containing middleware options\n     * @param {FeatureUsageFlag} flag - The flag value\n     * @returns nothing\n     */\n    static updateFeatureUsageFlag(context, flag) {\n        let options;\n        if (context.middlewareControl instanceof MiddlewareControl) {\n            options = context.middlewareControl.getMiddlewareOptions(TelemetryHandlerOptions);\n        }\n        else {\n            context.middlewareControl = new MiddlewareControl();\n        }\n        if (typeof options === \"undefined\") {\n            options = new TelemetryHandlerOptions();\n            context.middlewareControl.setMiddlewareOptions(TelemetryHandlerOptions, options);\n        }\n        options.setFeatureUsage(flag);\n    }\n    /**\n     * @private\n     * To set the feature usage flag\n     * @param {FeatureUsageFlag} flag - The flag value\n     * @returns nothing\n     */\n    setFeatureUsage(flag) {\n        this.featureUsage = this.featureUsage | flag;\n    }\n    /**\n     * @public\n     * To get the feature usage\n     * @returns A feature usage flag as hexadecimal string\n     */\n    getFeatureUsage() {\n        return this.featureUsage.toString(16);\n    }\n}\n//# sourceMappingURL=TelemetryHandlerOptions.js.map","/**\n * -------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.\n * See License in the project root for license information.\n * -------------------------------------------------------------------------------------------\n */\nimport { __awaiter } from \"tslib\";\n/**\n * @module AuthenticationHandler\n */\nimport { isCustomHost, isGraphURL } from \"../GraphRequestUtil\";\nimport { MiddlewareControl } from \"./MiddlewareControl\";\nimport { appendRequestHeader } from \"./MiddlewareUtil\";\nimport { AuthenticationHandlerOptions } from \"./options/AuthenticationHandlerOptions\";\nimport { FeatureUsageFlag, TelemetryHandlerOptions } from \"./options/TelemetryHandlerOptions\";\n/**\n * @class\n * @implements Middleware\n * Class representing AuthenticationHandler\n */\nexport class AuthenticationHandler {\n    /**\n     * @public\n     * @constructor\n     * Creates an instance of AuthenticationHandler\n     * @param {AuthenticationProvider} authenticationProvider - The authentication provider for the authentication handler\n     */\n    constructor(authenticationProvider) {\n        this.authenticationProvider = authenticationProvider;\n    }\n    /**\n     * @public\n     * @async\n     * To execute the current middleware\n     * @param {Context} context - The context object of the request\n     * @returns A Promise that resolves to nothing\n     */\n    execute(context) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const url = typeof context.request === \"string\" ? context.request : context.request.url;\n            if (isGraphURL(url) || (context.customHosts && isCustomHost(url, context.customHosts))) {\n                let options;\n                if (context.middlewareControl instanceof MiddlewareControl) {\n                    options = context.middlewareControl.getMiddlewareOptions(AuthenticationHandlerOptions);\n                }\n                let authenticationProvider;\n                let authenticationProviderOptions;\n                if (options) {\n                    authenticationProvider = options.authenticationProvider;\n                    authenticationProviderOptions = options.authenticationProviderOptions;\n                }\n                if (!authenticationProvider) {\n                    authenticationProvider = this.authenticationProvider;\n                }\n                const token = yield authenticationProvider.getAccessToken(authenticationProviderOptions);\n                const bearerKey = `Bearer ${token}`;\n                appendRequestHeader(context.request, context.options, AuthenticationHandler.AUTHORIZATION_HEADER, bearerKey);\n                TelemetryHandlerOptions.updateFeatureUsageFlag(context, FeatureUsageFlag.AUTHENTICATION_HANDLER_ENABLED);\n            }\n            else {\n                if (context.options.headers) {\n                    delete context.options.headers[AuthenticationHandler.AUTHORIZATION_HEADER];\n                }\n            }\n            return yield this.nextMiddleware.execute(context);\n        });\n    }\n    /**\n     * @public\n     * To set the next middleware in the chain\n     * @param {Middleware} next - The middleware instance\n     * @returns Nothing\n     */\n    setNext(next) {\n        this.nextMiddleware = next;\n    }\n}\n/**\n * @private\n * A member representing the authorization header name\n */\nAuthenticationHandler.AUTHORIZATION_HEADER = \"Authorization\";\n//# sourceMappingURL=AuthenticationHandler.js.map","/**\n * -------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.\n * See License in the project root for license information.\n * -------------------------------------------------------------------------------------------\n */\nimport { __awaiter } from \"tslib\";\n/**\n * @class\n * @implements Middleware\n * Class for HTTPMessageHandler\n */\nexport class HTTPMessageHandler {\n    /**\n     * @public\n     * @async\n     * To execute the current middleware\n     * @param {Context} context - The request context object\n     * @returns A promise that resolves to nothing\n     */\n    execute(context) {\n        return __awaiter(this, void 0, void 0, function* () {\n            context.response = yield fetch(context.request, context.options);\n        });\n    }\n}\n//# sourceMappingURL=HTTPMessageHandler.js.map","/**\n * -------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.\n * See License in the project root for license information.\n * -------------------------------------------------------------------------------------------\n */\n/**\n * @class\n * @implements MiddlewareOptions\n * Class for RetryHandlerOptions\n */\nexport class RetryHandlerOptions {\n    /**\n     * @public\n     * @constructor\n     * To create an instance of RetryHandlerOptions\n     * @param {number} [delay = RetryHandlerOptions.DEFAULT_DELAY] - The delay value in seconds\n     * @param {number} [maxRetries = RetryHandlerOptions.DEFAULT_MAX_RETRIES] - The maxRetries value\n     * @param {ShouldRetry} [shouldRetry = RetryHandlerOptions.DEFAULT_SHOULD_RETRY] - The shouldRetry callback function\n     * @returns An instance of RetryHandlerOptions\n     */\n    constructor(delay = RetryHandlerOptions.DEFAULT_DELAY, maxRetries = RetryHandlerOptions.DEFAULT_MAX_RETRIES, shouldRetry = RetryHandlerOptions.defaultShouldRetry) {\n        if (delay > RetryHandlerOptions.MAX_DELAY && maxRetries > RetryHandlerOptions.MAX_MAX_RETRIES) {\n            const error = new Error(`Delay and MaxRetries should not be more than ${RetryHandlerOptions.MAX_DELAY} and ${RetryHandlerOptions.MAX_MAX_RETRIES}`);\n            error.name = \"MaxLimitExceeded\";\n            throw error;\n        }\n        else if (delay > RetryHandlerOptions.MAX_DELAY) {\n            const error = new Error(`Delay should not be more than ${RetryHandlerOptions.MAX_DELAY}`);\n            error.name = \"MaxLimitExceeded\";\n            throw error;\n        }\n        else if (maxRetries > RetryHandlerOptions.MAX_MAX_RETRIES) {\n            const error = new Error(`MaxRetries should not be more than ${RetryHandlerOptions.MAX_MAX_RETRIES}`);\n            error.name = \"MaxLimitExceeded\";\n            throw error;\n        }\n        else if (delay < 0 && maxRetries < 0) {\n            const error = new Error(`Delay and MaxRetries should not be negative`);\n            error.name = \"MinExpectationNotMet\";\n            throw error;\n        }\n        else if (delay < 0) {\n            const error = new Error(`Delay should not be negative`);\n            error.name = \"MinExpectationNotMet\";\n            throw error;\n        }\n        else if (maxRetries < 0) {\n            const error = new Error(`MaxRetries should not be negative`);\n            error.name = \"MinExpectationNotMet\";\n            throw error;\n        }\n        this.delay = Math.min(delay, RetryHandlerOptions.MAX_DELAY);\n        this.maxRetries = Math.min(maxRetries, RetryHandlerOptions.MAX_MAX_RETRIES);\n        this.shouldRetry = shouldRetry;\n    }\n    /**\n     * @public\n     * To get the maximum delay\n     * @returns A maximum delay\n     */\n    getMaxDelay() {\n        return RetryHandlerOptions.MAX_DELAY;\n    }\n}\n/**\n * @private\n * @static\n * A member holding default delay value in seconds\n */\nRetryHandlerOptions.DEFAULT_DELAY = 3;\n/**\n * @private\n * @static\n * A member holding default maxRetries value\n */\nRetryHandlerOptions.DEFAULT_MAX_RETRIES = 3;\n/**\n * @private\n * @static\n * A member holding maximum delay value in seconds\n */\nRetryHandlerOptions.MAX_DELAY = 180;\n/**\n * @private\n * @static\n * A member holding maximum maxRetries value\n */\nRetryHandlerOptions.MAX_MAX_RETRIES = 10;\n/**\n * @private\n * A member holding default shouldRetry callback\n */\nRetryHandlerOptions.defaultShouldRetry = () => true;\n//# sourceMappingURL=RetryHandlerOptions.js.map","/**\n * -------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.\n * See License in the project root for license information.\n * -------------------------------------------------------------------------------------------\n */\nimport { __awaiter } from \"tslib\";\nimport { RequestMethod } from \"../RequestMethod\";\nimport { MiddlewareControl } from \"./MiddlewareControl\";\nimport { getRequestHeader, setRequestHeader } from \"./MiddlewareUtil\";\nimport { RetryHandlerOptions } from \"./options/RetryHandlerOptions\";\nimport { FeatureUsageFlag, TelemetryHandlerOptions } from \"./options/TelemetryHandlerOptions\";\n/**\n * @class\n * @implements Middleware\n * Class for RetryHandler\n */\nexport class RetryHandler {\n    /**\n     * @public\n     * @constructor\n     * To create an instance of RetryHandler\n     * @param {RetryHandlerOptions} [options = new RetryHandlerOptions()] - The retry handler options value\n     * @returns An instance of RetryHandler\n     */\n    constructor(options = new RetryHandlerOptions()) {\n        this.options = options;\n    }\n    /**\n     *\n     * @private\n     * To check whether the response has the retry status code\n     * @param {Response} response - The response object\n     * @returns Whether the response has retry status code or not\n     */\n    isRetry(response) {\n        return RetryHandler.RETRY_STATUS_CODES.indexOf(response.status) !== -1;\n    }\n    /**\n     * @private\n     * To check whether the payload is buffered or not\n     * @param {RequestInfo} request - The url string or the request object value\n     * @param {FetchOptions} options - The options of a request\n     * @returns Whether the payload is buffered or not\n     */\n    isBuffered(request, options) {\n        const method = typeof request === \"string\" ? options.method : request.method;\n        const isPutPatchOrPost = method === RequestMethod.PUT || method === RequestMethod.PATCH || method === RequestMethod.POST;\n        if (isPutPatchOrPost) {\n            const isStream = getRequestHeader(request, options, \"Content-Type\") === \"application/octet-stream\";\n            if (isStream) {\n                return false;\n            }\n        }\n        return true;\n    }\n    /**\n     * @private\n     * To get the delay for a retry\n     * @param {Response} response - The response object\n     * @param {number} retryAttempts - The current attempt count\n     * @param {number} delay - The delay value in seconds\n     * @returns A delay for a retry\n     */\n    getDelay(response, retryAttempts, delay) {\n        const getRandomness = () => Number(Math.random().toFixed(3));\n        const retryAfter = response.headers !== undefined ? response.headers.get(RetryHandler.RETRY_AFTER_HEADER) : null;\n        let newDelay;\n        if (retryAfter !== null) {\n            if (Number.isNaN(Number(retryAfter))) {\n                newDelay = Math.round((new Date(retryAfter).getTime() - Date.now()) / 1000);\n            }\n            else {\n                newDelay = Number(retryAfter);\n            }\n        }\n        else {\n            // Adding randomness to avoid retrying at a same\n            newDelay = retryAttempts >= 2 ? this.getExponentialBackOffTime(retryAttempts) + delay + getRandomness() : delay + getRandomness();\n        }\n        return Math.min(newDelay, this.options.getMaxDelay() + getRandomness());\n    }\n    /**\n     * @private\n     * To get an exponential back off value\n     * @param {number} attempts - The current attempt count\n     * @returns An exponential back off value\n     */\n    getExponentialBackOffTime(attempts) {\n        return Math.round((1 / 2) * (Math.pow(2, attempts) - 1));\n    }\n    /**\n     * @private\n     * @async\n     * To add delay for the execution\n     * @param {number} delaySeconds - The delay value in seconds\n     * @returns Nothing\n     */\n    sleep(delaySeconds) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const delayMilliseconds = delaySeconds * 1000;\n            return new Promise((resolve) => setTimeout(resolve, delayMilliseconds));\n        });\n    }\n    getOptions(context) {\n        let options;\n        if (context.middlewareControl instanceof MiddlewareControl) {\n            options = context.middlewareControl.getMiddlewareOptions(this.options.constructor);\n        }\n        if (typeof options === \"undefined\") {\n            options = Object.assign(new RetryHandlerOptions(), this.options);\n        }\n        return options;\n    }\n    /**\n     * @private\n     * @async\n     * To execute the middleware with retries\n     * @param {Context} context - The context object\n     * @param {number} retryAttempts - The current attempt count\n     * @param {RetryHandlerOptions} options - The retry middleware options instance\n     * @returns A Promise that resolves to nothing\n     */\n    executeWithRetry(context, retryAttempts, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.nextMiddleware.execute(context);\n            if (retryAttempts < options.maxRetries && this.isRetry(context.response) && this.isBuffered(context.request, context.options) && options.shouldRetry(options.delay, retryAttempts, context.request, context.options, context.response)) {\n                ++retryAttempts;\n                setRequestHeader(context.request, context.options, RetryHandler.RETRY_ATTEMPT_HEADER, retryAttempts.toString());\n                const delay = this.getDelay(context.response, retryAttempts, options.delay);\n                yield this.sleep(delay);\n                return yield this.executeWithRetry(context, retryAttempts, options);\n            }\n            else {\n                return;\n            }\n        });\n    }\n    /**\n     * @public\n     * @async\n     * To execute the current middleware\n     * @param {Context} context - The context object of the request\n     * @returns A Promise that resolves to nothing\n     */\n    execute(context) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const retryAttempts = 0;\n            const options = this.getOptions(context);\n            TelemetryHandlerOptions.updateFeatureUsageFlag(context, FeatureUsageFlag.RETRY_HANDLER_ENABLED);\n            return yield this.executeWithRetry(context, retryAttempts, options);\n        });\n    }\n    /**\n     * @public\n     * To set the next middleware in the chain\n     * @param {Middleware} next - The middleware instance\n     * @returns Nothing\n     */\n    setNext(next) {\n        this.nextMiddleware = next;\n    }\n}\n/**\n * @private\n * @static\n * A list of status codes that needs to be retried\n */\nRetryHandler.RETRY_STATUS_CODES = [\n    429,\n    503,\n    504, // Gateway timeout\n];\n/**\n * @private\n * @static\n * A member holding the name of retry attempt header\n */\nRetryHandler.RETRY_ATTEMPT_HEADER = \"Retry-Attempt\";\n/**\n * @private\n * @static\n * A member holding the name of retry after header\n */\nRetryHandler.RETRY_AFTER_HEADER = \"Retry-After\";\n//# sourceMappingURL=RetryHandler.js.map","/**\n * -------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.\n * See License in the project root for license information.\n * -------------------------------------------------------------------------------------------\n */\n/**\n * @class\n * @implements MiddlewareOptions\n * A class representing RedirectHandlerOptions\n */\nexport class RedirectHandlerOptions {\n    /**\n     * @public\n     * @constructor\n     * To create an instance of RedirectHandlerOptions\n     * @param {number} [maxRedirects = RedirectHandlerOptions.DEFAULT_MAX_REDIRECTS] - The max redirects value\n     * @param {ShouldRedirect} [shouldRedirect = RedirectHandlerOptions.DEFAULT_SHOULD_RETRY] - The should redirect callback\n     * @returns An instance of RedirectHandlerOptions\n     */\n    constructor(maxRedirects = RedirectHandlerOptions.DEFAULT_MAX_REDIRECTS, shouldRedirect = RedirectHandlerOptions.defaultShouldRedirect) {\n        if (maxRedirects > RedirectHandlerOptions.MAX_MAX_REDIRECTS) {\n            const error = new Error(`MaxRedirects should not be more than ${RedirectHandlerOptions.MAX_MAX_REDIRECTS}`);\n            error.name = \"MaxLimitExceeded\";\n            throw error;\n        }\n        if (maxRedirects < 0) {\n            const error = new Error(`MaxRedirects should not be negative`);\n            error.name = \"MinExpectationNotMet\";\n            throw error;\n        }\n        this.maxRedirects = maxRedirects;\n        this.shouldRedirect = shouldRedirect;\n    }\n}\n/**\n * @private\n * @static\n * A member holding default max redirects value\n */\nRedirectHandlerOptions.DEFAULT_MAX_REDIRECTS = 5;\n/**\n * @private\n * @static\n * A member holding maximum max redirects value\n */\nRedirectHandlerOptions.MAX_MAX_REDIRECTS = 20;\n/**\n * @private\n * A member holding default shouldRedirect callback\n */\nRedirectHandlerOptions.defaultShouldRedirect = () => true;\n//# sourceMappingURL=RedirectHandlerOptions.js.map","/**\n * -------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.\n * See License in the project root for license information.\n * -------------------------------------------------------------------------------------------\n */\nimport { __awaiter } from \"tslib\";\nimport { RequestMethod } from \"../RequestMethod\";\nimport { MiddlewareControl } from \"./MiddlewareControl\";\nimport { cloneRequestWithNewUrl } from \"./MiddlewareUtil\";\nimport { RedirectHandlerOptions } from \"./options/RedirectHandlerOptions\";\nimport { FeatureUsageFlag, TelemetryHandlerOptions } from \"./options/TelemetryHandlerOptions\";\n/**\n * @class\n * Class\n * @implements Middleware\n * Class representing RedirectHandler\n */\nexport class RedirectHandler {\n    /**\n     * @public\n     * @constructor\n     * To create an instance of RedirectHandler\n     * @param {RedirectHandlerOptions} [options = new RedirectHandlerOptions()] - The redirect handler options instance\n     * @returns An instance of RedirectHandler\n     */\n    constructor(options = new RedirectHandlerOptions()) {\n        this.options = options;\n    }\n    /**\n     * @private\n     * To check whether the response has the redirect status code or not\n     * @param {Response} response - The response object\n     * @returns A boolean representing whether the response contains the redirect status code or not\n     */\n    isRedirect(response) {\n        return RedirectHandler.REDIRECT_STATUS_CODES.indexOf(response.status) !== -1;\n    }\n    /**\n     * @private\n     * To check whether the response has location header or not\n     * @param {Response} response - The response object\n     * @returns A boolean representing the whether the response has location header or not\n     */\n    hasLocationHeader(response) {\n        return response.headers.has(RedirectHandler.LOCATION_HEADER);\n    }\n    /**\n     * @private\n     * To get the redirect url from location header in response object\n     * @param {Response} response - The response object\n     * @returns A redirect url from location header\n     */\n    getLocationHeader(response) {\n        return response.headers.get(RedirectHandler.LOCATION_HEADER);\n    }\n    /**\n     * @private\n     * To check whether the given url is a relative url or not\n     * @param {string} url - The url string value\n     * @returns A boolean representing whether the given url is a relative url or not\n     */\n    isRelativeURL(url) {\n        return url.indexOf(\"://\") === -1;\n    }\n    /**\n     * @private\n     * To check whether the authorization header in the request should be dropped for consequent redirected requests\n     * @param {string} requestUrl - The request url value\n     * @param {string} redirectUrl - The redirect url value\n     * @returns A boolean representing whether the authorization header in the request should be dropped for consequent redirected requests\n     */\n    shouldDropAuthorizationHeader(requestUrl, redirectUrl) {\n        const schemeHostRegex = /^[A-Za-z].+?:\\/\\/.+?(?=\\/|$)/;\n        const requestMatches = schemeHostRegex.exec(requestUrl);\n        let requestAuthority;\n        let redirectAuthority;\n        if (requestMatches !== null) {\n            requestAuthority = requestMatches[0];\n        }\n        const redirectMatches = schemeHostRegex.exec(redirectUrl);\n        if (redirectMatches !== null) {\n            redirectAuthority = redirectMatches[0];\n        }\n        return typeof requestAuthority !== \"undefined\" && typeof redirectAuthority !== \"undefined\" && requestAuthority !== redirectAuthority;\n    }\n    /**\n     * @private\n     * @async\n     * To update a request url with the redirect url\n     * @param {string} redirectUrl - The redirect url value\n     * @param {Context} context - The context object value\n     * @returns Nothing\n     */\n    updateRequestUrl(redirectUrl, context) {\n        return __awaiter(this, void 0, void 0, function* () {\n            context.request = typeof context.request === \"string\" ? redirectUrl : yield cloneRequestWithNewUrl(redirectUrl, context.request);\n        });\n    }\n    /**\n     * @private\n     * To get the options for execution of the middleware\n     * @param {Context} context - The context object\n     * @returns A options for middleware execution\n     */\n    getOptions(context) {\n        let options;\n        if (context.middlewareControl instanceof MiddlewareControl) {\n            options = context.middlewareControl.getMiddlewareOptions(RedirectHandlerOptions);\n        }\n        if (typeof options === \"undefined\") {\n            options = Object.assign(new RedirectHandlerOptions(), this.options);\n        }\n        return options;\n    }\n    /**\n     * @private\n     * @async\n     * To execute the next middleware and to handle in case of redirect response returned by the server\n     * @param {Context} context - The context object\n     * @param {number} redirectCount - The redirect count value\n     * @param {RedirectHandlerOptions} options - The redirect handler options instance\n     * @returns A promise that resolves to nothing\n     */\n    executeWithRedirect(context, redirectCount, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.nextMiddleware.execute(context);\n            const response = context.response;\n            if (redirectCount < options.maxRedirects && this.isRedirect(response) && this.hasLocationHeader(response) && options.shouldRedirect(response)) {\n                ++redirectCount;\n                if (response.status === RedirectHandler.STATUS_CODE_SEE_OTHER) {\n                    context.options.method = RequestMethod.GET;\n                    delete context.options.body;\n                }\n                else {\n                    const redirectUrl = this.getLocationHeader(response);\n                    if (!this.isRelativeURL(redirectUrl) && this.shouldDropAuthorizationHeader(response.url, redirectUrl)) {\n                        delete context.options.headers[RedirectHandler.AUTHORIZATION_HEADER];\n                    }\n                    yield this.updateRequestUrl(redirectUrl, context);\n                }\n                yield this.executeWithRedirect(context, redirectCount, options);\n            }\n            else {\n                return;\n            }\n        });\n    }\n    /**\n     * @public\n     * @async\n     * To execute the current middleware\n     * @param {Context} context - The context object of the request\n     * @returns A Promise that resolves to nothing\n     */\n    execute(context) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const redirectCount = 0;\n            const options = this.getOptions(context);\n            context.options.redirect = RedirectHandler.MANUAL_REDIRECT;\n            TelemetryHandlerOptions.updateFeatureUsageFlag(context, FeatureUsageFlag.REDIRECT_HANDLER_ENABLED);\n            return yield this.executeWithRedirect(context, redirectCount, options);\n        });\n    }\n    /**\n     * @public\n     * To set the next middleware in the chain\n     * @param {Middleware} next - The middleware instance\n     * @returns Nothing\n     */\n    setNext(next) {\n        this.nextMiddleware = next;\n    }\n}\n/**\n * @private\n * @static\n * A member holding the array of redirect status codes\n */\nRedirectHandler.REDIRECT_STATUS_CODES = [\n    301,\n    302,\n    303,\n    307,\n    308, // Moved Permanently\n];\n/**\n * @private\n * @static\n * A member holding SeeOther status code\n */\nRedirectHandler.STATUS_CODE_SEE_OTHER = 303;\n/**\n * @private\n * @static\n * A member holding the name of the location header\n */\nRedirectHandler.LOCATION_HEADER = \"Location\";\n/**\n * @private\n * @static\n * A member representing the authorization header name\n */\nRedirectHandler.AUTHORIZATION_HEADER = \"Authorization\";\n/**\n * @private\n * @static\n * A member holding the manual redirect value\n */\nRedirectHandler.MANUAL_REDIRECT = \"manual\";\n//# sourceMappingURL=RedirectHandler.js.map","/**\n * -------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.\n * See License in the project root for license information.\n * -------------------------------------------------------------------------------------------\n */\nimport { __awaiter } from \"tslib\";\n/**\n * @module TelemetryHandler\n */\nimport { isCustomHost, isGraphURL } from \"../GraphRequestUtil\";\nimport { PACKAGE_VERSION } from \"../Version\";\nimport { MiddlewareControl } from \"./MiddlewareControl\";\nimport { appendRequestHeader, generateUUID, getRequestHeader, setRequestHeader } from \"./MiddlewareUtil\";\nimport { TelemetryHandlerOptions } from \"./options/TelemetryHandlerOptions\";\n/**\n * @class\n * @implements Middleware\n * Class for TelemetryHandler\n */\nexport class TelemetryHandler {\n    /**\n     * @public\n     * @async\n     * To execute the current middleware\n     * @param {Context} context - The context object of the request\n     * @returns A Promise that resolves to nothing\n     */\n    execute(context) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const url = typeof context.request === \"string\" ? context.request : context.request.url;\n            if (isGraphURL(url) || (context.customHosts && isCustomHost(url, context.customHosts))) {\n                // Add telemetry only if the request url is a Graph URL.\n                // Errors are reported as in issue #265 if headers are present when redirecting to a non Graph URL\n                let clientRequestId = getRequestHeader(context.request, context.options, TelemetryHandler.CLIENT_REQUEST_ID_HEADER);\n                if (!clientRequestId) {\n                    clientRequestId = generateUUID();\n                    setRequestHeader(context.request, context.options, TelemetryHandler.CLIENT_REQUEST_ID_HEADER, clientRequestId);\n                }\n                let sdkVersionValue = `${TelemetryHandler.PRODUCT_NAME}/${PACKAGE_VERSION}`;\n                let options;\n                if (context.middlewareControl instanceof MiddlewareControl) {\n                    options = context.middlewareControl.getMiddlewareOptions(TelemetryHandlerOptions);\n                }\n                if (options) {\n                    const featureUsage = options.getFeatureUsage();\n                    sdkVersionValue += ` (${TelemetryHandler.FEATURE_USAGE_STRING}=${featureUsage})`;\n                }\n                appendRequestHeader(context.request, context.options, TelemetryHandler.SDK_VERSION_HEADER, sdkVersionValue);\n            }\n            else {\n                // Remove telemetry headers if present during redirection.\n                delete context.options.headers[TelemetryHandler.CLIENT_REQUEST_ID_HEADER];\n                delete context.options.headers[TelemetryHandler.SDK_VERSION_HEADER];\n            }\n            return yield this.nextMiddleware.execute(context);\n        });\n    }\n    /**\n     * @public\n     * To set the next middleware in the chain\n     * @param {Middleware} next - The middleware instance\n     * @returns Nothing\n     */\n    setNext(next) {\n        this.nextMiddleware = next;\n    }\n}\n/**\n * @private\n * @static\n * A member holding the name of the client request id header\n */\nTelemetryHandler.CLIENT_REQUEST_ID_HEADER = \"client-request-id\";\n/**\n * @private\n * @static\n * A member holding the name of the sdk version header\n */\nTelemetryHandler.SDK_VERSION_HEADER = \"SdkVersion\";\n/**\n * @private\n * @static\n * A member holding the language prefix for the sdk version header value\n */\nTelemetryHandler.PRODUCT_NAME = \"graph-js\";\n/**\n * @private\n * @static\n * A member holding the key for the feature usage metrics\n */\nTelemetryHandler.FEATURE_USAGE_STRING = \"featureUsage\";\n//# sourceMappingURL=TelemetryHandler.js.map","/**\n * -------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.\n * See License in the project root for license information.\n * -------------------------------------------------------------------------------------------\n */\n/**\n * @module ChaosStrategy\n */\n/**\n * Strategy used for Testing Handler\n * @enum\n */\nexport var ChaosStrategy;\n(function (ChaosStrategy) {\n    ChaosStrategy[ChaosStrategy[\"MANUAL\"] = 0] = \"MANUAL\";\n    ChaosStrategy[ChaosStrategy[\"RANDOM\"] = 1] = \"RANDOM\";\n})(ChaosStrategy || (ChaosStrategy = {}));\n//# sourceMappingURL=ChaosStrategy.js.map","/**\n * -------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.\n * See License in the project root for license information.\n * -------------------------------------------------------------------------------------------\n */\n/**\n * @enum\n * Enum for ResponseType values\n * @property {string} ARRAYBUFFER - To download response content as an [ArrayBuffer]{@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer}\n * @property {string} BLOB - To download content as a [binary/blob] {@link https://developer.mozilla.org/en-US/docs/Web/API/Blob}\n * @property {string} DOCUMENT - This downloads content as a document or stream\n * @property {string} JSON - To download response content as a json\n * @property {string} STREAM - To download response as a [stream]{@link https://nodejs.org/api/stream.html}\n * @property {string} TEXT - For downloading response as a text\n */\nexport var ResponseType;\n(function (ResponseType) {\n    ResponseType[\"ARRAYBUFFER\"] = \"arraybuffer\";\n    ResponseType[\"BLOB\"] = \"blob\";\n    ResponseType[\"DOCUMENT\"] = \"document\";\n    ResponseType[\"JSON\"] = \"json\";\n    ResponseType[\"RAW\"] = \"raw\";\n    ResponseType[\"STREAM\"] = \"stream\";\n    ResponseType[\"TEXT\"] = \"text\";\n})(ResponseType || (ResponseType = {}));\n//# sourceMappingURL=ResponseType.js.map","/**\n * -------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.\n * See License in the project root for license information.\n * -------------------------------------------------------------------------------------------\n */\nimport { __awaiter } from \"tslib\";\nimport { ResponseType } from \"./ResponseType\";\n/**\n * @enum\n * Enum for document types\n * @property {string} TEXT_HTML - The text/html content type\n * @property {string} TEXT_XML - The text/xml content type\n * @property {string} APPLICATION_XML - The application/xml content type\n * @property {string} APPLICATION_XHTML - The application/xhml+xml content type\n */\nexport var DocumentType;\n(function (DocumentType) {\n    DocumentType[\"TEXT_HTML\"] = \"text/html\";\n    DocumentType[\"TEXT_XML\"] = \"text/xml\";\n    DocumentType[\"APPLICATION_XML\"] = \"application/xml\";\n    DocumentType[\"APPLICATION_XHTML\"] = \"application/xhtml+xml\";\n})(DocumentType || (DocumentType = {}));\n/**\n * @enum\n * Enum for Content types\n * @property {string} TEXT_PLAIN - The text/plain content type\n * @property {string} APPLICATION_JSON - The application/json content type\n */\nvar ContentType;\n(function (ContentType) {\n    ContentType[\"TEXT_PLAIN\"] = \"text/plain\";\n    ContentType[\"APPLICATION_JSON\"] = \"application/json\";\n})(ContentType || (ContentType = {}));\n/**\n * @enum\n * Enum for Content type regex\n * @property {string} DOCUMENT - The regex to match document content types\n * @property {string} IMAGE - The regex to match image content types\n */\nvar ContentTypeRegexStr;\n(function (ContentTypeRegexStr) {\n    ContentTypeRegexStr[\"DOCUMENT\"] = \"^(text\\\\/(html|xml))|(application\\\\/(xml|xhtml\\\\+xml))$\";\n    ContentTypeRegexStr[\"IMAGE\"] = \"^image\\\\/.+\";\n})(ContentTypeRegexStr || (ContentTypeRegexStr = {}));\n/**\n * @class\n * Class for GraphResponseHandler\n */\nexport class GraphResponseHandler {\n    /**\n     * @private\n     * @static\n     * To parse Document response\n     * @param {Response} rawResponse - The response object\n     * @param {DocumentType} type - The type to which the document needs to be parsed\n     * @returns A promise that resolves to a document content\n     */\n    static parseDocumentResponse(rawResponse, type) {\n        if (typeof DOMParser !== \"undefined\") {\n            return new Promise((resolve, reject) => {\n                rawResponse.text().then((xmlString) => {\n                    try {\n                        const parser = new DOMParser();\n                        const xmlDoc = parser.parseFromString(xmlString, type);\n                        resolve(xmlDoc);\n                    }\n                    catch (error) {\n                        reject(error);\n                    }\n                });\n            });\n        }\n        else {\n            return Promise.resolve(rawResponse.body);\n        }\n    }\n    /**\n     * @private\n     * @static\n     * @async\n     * To convert the native Response to response content\n     * @param {Response} rawResponse - The response object\n     * @param {ResponseType} [responseType] - The response type value\n     * @returns A promise that resolves to the converted response content\n     */\n    static convertResponse(rawResponse, responseType) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (rawResponse.status === 204) {\n                // NO CONTENT\n                return Promise.resolve();\n            }\n            let responseValue;\n            const contentType = rawResponse.headers.get(\"Content-type\");\n            switch (responseType) {\n                case ResponseType.ARRAYBUFFER:\n                    responseValue = yield rawResponse.arrayBuffer();\n                    break;\n                case ResponseType.BLOB:\n                    responseValue = yield rawResponse.blob();\n                    break;\n                case ResponseType.DOCUMENT:\n                    responseValue = yield GraphResponseHandler.parseDocumentResponse(rawResponse, DocumentType.TEXT_XML);\n                    break;\n                case ResponseType.JSON:\n                    responseValue = yield rawResponse.json();\n                    break;\n                case ResponseType.STREAM:\n                    responseValue = yield Promise.resolve(rawResponse.body);\n                    break;\n                case ResponseType.TEXT:\n                    responseValue = yield rawResponse.text();\n                    break;\n                default:\n                    if (contentType !== null) {\n                        const mimeType = contentType.split(\";\")[0];\n                        if (new RegExp(ContentTypeRegexStr.DOCUMENT).test(mimeType)) {\n                            responseValue = yield GraphResponseHandler.parseDocumentResponse(rawResponse, mimeType);\n                        }\n                        else if (new RegExp(ContentTypeRegexStr.IMAGE).test(mimeType)) {\n                            responseValue = rawResponse.blob();\n                        }\n                        else if (mimeType === ContentType.TEXT_PLAIN) {\n                            responseValue = yield rawResponse.text();\n                        }\n                        else if (mimeType === ContentType.APPLICATION_JSON) {\n                            responseValue = yield rawResponse.json();\n                        }\n                        else {\n                            responseValue = Promise.resolve(rawResponse.body);\n                        }\n                    }\n                    else {\n                        /**\n                         * RFC specification {@link https://tools.ietf.org/html/rfc7231#section-3.1.1.5} says:\n                         *  A sender that generates a message containing a payload body SHOULD\n                         *  generate a Content-Type header field in that message unless the\n                         *  intended media type of the enclosed representation is unknown to the\n                         *  sender.  If a Content-Type header field is not present, the recipient\n                         *  MAY either assume a media type of \"application/octet-stream\"\n                         *  ([RFC2046], Section 4.5.1) or examine the data to determine its type.\n                         *\n                         *  So assuming it as a stream type so returning the body.\n                         */\n                        responseValue = Promise.resolve(rawResponse.body);\n                    }\n                    break;\n            }\n            return responseValue;\n        });\n    }\n    /**\n     * @public\n     * @static\n     * @async\n     * To get the parsed response\n     * @param {Response} rawResponse - The response object\n     * @param {ResponseType} [responseType] - The response type value\n     * @param {GraphRequestCallback} [callback] - The graph request callback function\n     * @returns The parsed response\n     */\n    static getResponse(rawResponse, responseType, callback) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (responseType === ResponseType.RAW) {\n                return Promise.resolve(rawResponse);\n            }\n            else {\n                const response = yield GraphResponseHandler.convertResponse(rawResponse, responseType);\n                if (rawResponse.ok) {\n                    // Status Code 2XX\n                    if (typeof callback === \"function\") {\n                        callback(null, response);\n                    }\n                    else {\n                        return response;\n                    }\n                }\n                else {\n                    // NOT OK Response\n                    throw response;\n                }\n            }\n        });\n    }\n}\n//# sourceMappingURL=GraphResponseHandler.js.map","/**\n * -------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.\n * See License in the project root for license information.\n * -------------------------------------------------------------------------------------------\n */\nimport { __awaiter } from \"tslib\";\n/**\n * @module CustomAuthenticationProvider\n */\nimport { GraphClientError } from \"./GraphClientError\";\n/**\n * @class\n * Class representing CustomAuthenticationProvider\n * @extends AuthenticationProvider\n */\nexport class CustomAuthenticationProvider {\n    /**\n     * @public\n     * @constructor\n     * Creates an instance of CustomAuthenticationProvider\n     * @param {AuthProviderCallback} provider - An authProvider function\n     * @returns An instance of CustomAuthenticationProvider\n     */\n    constructor(provider) {\n        this.provider = provider;\n    }\n    /**\n     * @public\n     * @async\n     * To get the access token\n     * @returns The promise that resolves to an access token\n     */\n    getAccessToken() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => {\n                this.provider((error, accessToken) => __awaiter(this, void 0, void 0, function* () {\n                    if (accessToken) {\n                        resolve(accessToken);\n                    }\n                    else {\n                        if (!error) {\n                            const invalidTokenMessage = \"Access token is undefined or empty.\\\n\t\t\t\t\t\tPlease provide a valid token.\\\n\t\t\t\t\t\tFor more help - https://github.com/microsoftgraph/msgraph-sdk-javascript/blob/dev/docs/CustomAuthenticationProvider.md\";\n                            error = new GraphClientError(invalidTokenMessage);\n                        }\n                        const err = yield GraphClientError.setGraphClientError(error);\n                        reject(err);\n                    }\n                }));\n            });\n        });\n    }\n}\n//# sourceMappingURL=CustomAuthenticationProvider.js.map","/**\n * -------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.\n * See License in the project root for license information.\n * -------------------------------------------------------------------------------------------\n */\n/**\n * @module GraphError\n */\n/**\n * @class\n * Class for GraphError\n * @NOTE: This is NOT what is returned from the Graph\n * GraphError is created from parsing JSON errors returned from the graph\n * Some fields are renamed ie, \"request-id\" => requestId so you can use dot notation\n */\nexport class GraphError extends Error {\n    /**\n     * @public\n     * @constructor\n     * Creates an instance of GraphError\n     * @param {number} [statusCode = -1] - The status code of the error\n     * @param {string} [message] - The message of the error\n     * @param {Error} [baseError] - The base error\n     * @returns An instance of GraphError\n     */\n    constructor(statusCode = -1, message, baseError) {\n        super(message || (baseError && baseError.message));\n        // https://github.com/Microsoft/TypeScript/wiki/Breaking-Changes#extending-built-ins-like-error-array-and-map-may-no-longer-work\n        Object.setPrototypeOf(this, GraphError.prototype);\n        this.statusCode = statusCode;\n        this.code = null;\n        this.requestId = null;\n        this.date = new Date();\n        this.body = null;\n        this.stack = baseError ? baseError.stack : this.stack;\n    }\n}\n//# sourceMappingURL=GraphError.js.map","/**\n * -------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.\n * See License in the project root for license information.\n * -------------------------------------------------------------------------------------------\n */\nimport { __awaiter } from \"tslib\";\n/**\n * @module GraphErrorHandler\n */\nimport { GraphError } from \"./GraphError\";\n/**\n * @class\n * Class for GraphErrorHandler\n */\nexport class GraphErrorHandler {\n    /**\n     * @private\n     * @static\n     * Populates the GraphError instance with Error instance values\n     * @param {Error} error - The error returned by graph service or some native error\n     * @param {number} [statusCode] - The status code of the response\n     * @returns The GraphError instance\n     */\n    static constructError(error, statusCode, rawResponse) {\n        const gError = new GraphError(statusCode, \"\", error);\n        if (error.name !== undefined) {\n            gError.code = error.name;\n        }\n        gError.body = error.toString();\n        gError.date = new Date();\n        gError.headers = rawResponse === null || rawResponse === void 0 ? void 0 : rawResponse.headers;\n        return gError;\n    }\n    /**\n     * @private\n     * @static\n     * @async\n     * Populates the GraphError instance from the Error returned by graph service\n     * @param {GraphAPIErrorResponse} graphError - The error possibly returned by graph service or some native error\n     * @param {number} statusCode - The status code of the response\n     * @returns A promise that resolves to GraphError instance\n     *\n     * Example error for https://graph.microsoft.com/v1.0/me/events?$top=3&$search=foo\n     * {\n     *      \"error\": {\n     *          \"code\": \"SearchEvents\",\n     *          \"message\": \"The parameter $search is not currently supported on the Events resource.\",\n     *          \"innerError\": {\n     *              \"request-id\": \"b31c83fd-944c-4663-aa50-5d9ceb367e19\",\n     *              \"date\": \"2016-11-17T18:37:45\"\n     *          }\n     *      }\n     *  }\n     */\n    static constructErrorFromResponse(graphError, statusCode, rawResponse) {\n        const error = graphError.error;\n        const gError = new GraphError(statusCode, error.message);\n        gError.code = error.code;\n        if (error.innerError !== undefined) {\n            gError.requestId = error.innerError[\"request-id\"];\n            gError.date = new Date(error.innerError.date);\n        }\n        gError.body = JSON.stringify(error);\n        gError.headers = rawResponse === null || rawResponse === void 0 ? void 0 : rawResponse.headers;\n        return gError;\n    }\n    /**\n     * @public\n     * @static\n     * @async\n     * To get the GraphError object\n     * Reference - https://docs.microsoft.com/en-us/graph/errors\n     * @param {any} [error = null] - The error returned by graph service or some native error\n     * @param {number} [statusCode = -1] - The status code of the response\n     * @param {GraphRequestCallback} [callback] - The graph request callback function\n     * @returns A promise that resolves to GraphError instance\n     */\n    static getError(error = null, statusCode = -1, callback, rawResponse) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let gError;\n            if (error && error.error) {\n                gError = GraphErrorHandler.constructErrorFromResponse(error, statusCode, rawResponse);\n            }\n            else if (error instanceof Error) {\n                gError = GraphErrorHandler.constructError(error, statusCode, rawResponse);\n            }\n            else {\n                gError = new GraphError(statusCode);\n                gError.body = error; // if a custom error is passed which is not instance of Error object or a graph API response\n            }\n            if (typeof callback === \"function\") {\n                callback(gError, null);\n            }\n            else {\n                return gError;\n            }\n        });\n    }\n}\n//# sourceMappingURL=GraphErrorHandler.js.map","/**\n * -------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.\n * See License in the project root for license information.\n * -------------------------------------------------------------------------------------------\n */\nimport { __awaiter } from \"tslib\";\n/**\n * @module GraphRequest\n */\nimport { GraphClientError } from \"./GraphClientError\";\nimport { GraphErrorHandler } from \"./GraphErrorHandler\";\nimport { oDataQueryNames, serializeContent, urlJoin } from \"./GraphRequestUtil\";\nimport { GraphResponseHandler } from \"./GraphResponseHandler\";\nimport { MiddlewareControl } from \"./middleware/MiddlewareControl\";\nimport { RequestMethod } from \"./RequestMethod\";\nimport { ResponseType } from \"./ResponseType\";\n/**\n * @class\n * A Class representing GraphRequest\n */\nexport class GraphRequest {\n    /**\n     * @public\n     * @constructor\n     * Creates an instance of GraphRequest\n     * @param {HTTPClient} httpClient - The HTTPClient instance\n     * @param {ClientOptions} config - The options for making request\n     * @param {string} path - A path string\n     */\n    constructor(httpClient, config, path) {\n        /**\n         * @private\n         * Parses the path string and creates URLComponents out of it\n         * @param {string} path - The request path string\n         * @returns Nothing\n         */\n        this.parsePath = (path) => {\n            // Strips out the base of the url if they passed in\n            if (path.indexOf(\"https://\") !== -1) {\n                path = path.replace(\"https://\", \"\");\n                // Find where the host ends\n                const endOfHostStrPos = path.indexOf(\"/\");\n                if (endOfHostStrPos !== -1) {\n                    // Parse out the host\n                    this.urlComponents.host = \"https://\" + path.substring(0, endOfHostStrPos);\n                    // Strip the host from path\n                    path = path.substring(endOfHostStrPos + 1, path.length);\n                }\n                // Remove the following version\n                const endOfVersionStrPos = path.indexOf(\"/\");\n                if (endOfVersionStrPos !== -1) {\n                    // Parse out the version\n                    this.urlComponents.version = path.substring(0, endOfVersionStrPos);\n                    // Strip version from path\n                    path = path.substring(endOfVersionStrPos + 1, path.length);\n                }\n            }\n            // Strip out any leading \"/\"\n            if (path.charAt(0) === \"/\") {\n                path = path.substr(1);\n            }\n            const queryStrPos = path.indexOf(\"?\");\n            if (queryStrPos === -1) {\n                // No query string\n                this.urlComponents.path = path;\n            }\n            else {\n                this.urlComponents.path = path.substr(0, queryStrPos);\n                // Capture query string into oDataQueryParams and otherURLQueryParams\n                const queryParams = path.substring(queryStrPos + 1, path.length).split(\"&\");\n                for (const queryParam of queryParams) {\n                    this.parseQueryParameter(queryParam);\n                }\n            }\n        };\n        this.httpClient = httpClient;\n        this.config = config;\n        this.urlComponents = {\n            host: this.config.baseUrl,\n            version: this.config.defaultVersion,\n            oDataQueryParams: {},\n            otherURLQueryParams: {},\n            otherURLQueryOptions: [],\n        };\n        this._headers = {};\n        this._options = {};\n        this._middlewareOptions = [];\n        this.parsePath(path);\n    }\n    /**\n     * @private\n     * Adds the query parameter as comma separated values\n     * @param {string} propertyName - The name of a property\n     * @param {string|string[]} propertyValue - The vale of a property\n     * @param {IArguments} additionalProperties - The additional properties\n     * @returns Nothing\n     */\n    addCsvQueryParameter(propertyName, propertyValue, additionalProperties) {\n        // If there are already $propertyName value there, append a \",\"\n        this.urlComponents.oDataQueryParams[propertyName] = this.urlComponents.oDataQueryParams[propertyName] ? this.urlComponents.oDataQueryParams[propertyName] + \",\" : \"\";\n        let allValues = [];\n        if (additionalProperties.length > 1 && typeof propertyValue === \"string\") {\n            allValues = Array.prototype.slice.call(additionalProperties);\n        }\n        else if (typeof propertyValue === \"string\") {\n            allValues.push(propertyValue);\n        }\n        else {\n            allValues = allValues.concat(propertyValue);\n        }\n        this.urlComponents.oDataQueryParams[propertyName] += allValues.join(\",\");\n    }\n    /**\n     * @private\n     * Builds the full url from the URLComponents to make a request\n     * @returns The URL string that is qualified to make a request to graph endpoint\n     */\n    buildFullUrl() {\n        const url = urlJoin([this.urlComponents.host, this.urlComponents.version, this.urlComponents.path]) + this.createQueryString();\n        if (this.config.debugLogging) {\n            console.log(url);\n        }\n        return url;\n    }\n    /**\n     * @private\n     * Builds the query string from the URLComponents\n     * @returns The Constructed query string\n     */\n    createQueryString() {\n        // Combining query params from oDataQueryParams and otherURLQueryParams\n        const urlComponents = this.urlComponents;\n        const query = [];\n        if (Object.keys(urlComponents.oDataQueryParams).length !== 0) {\n            for (const property in urlComponents.oDataQueryParams) {\n                if (Object.prototype.hasOwnProperty.call(urlComponents.oDataQueryParams, property)) {\n                    query.push(property + \"=\" + urlComponents.oDataQueryParams[property]);\n                }\n            }\n        }\n        if (Object.keys(urlComponents.otherURLQueryParams).length !== 0) {\n            for (const property in urlComponents.otherURLQueryParams) {\n                if (Object.prototype.hasOwnProperty.call(urlComponents.otherURLQueryParams, property)) {\n                    query.push(property + \"=\" + urlComponents.otherURLQueryParams[property]);\n                }\n            }\n        }\n        if (urlComponents.otherURLQueryOptions.length !== 0) {\n            for (const str of urlComponents.otherURLQueryOptions) {\n                query.push(str);\n            }\n        }\n        return query.length > 0 ? \"?\" + query.join(\"&\") : \"\";\n    }\n    /**\n     * @private\n     * Parses the query parameters to set the urlComponents property of the GraphRequest object\n     * @param {string|KeyValuePairObjectStringNumber} queryDictionaryOrString - The query parameter\n     * @returns The same GraphRequest instance that is being called with\n     */\n    parseQueryParameter(queryDictionaryOrString) {\n        if (typeof queryDictionaryOrString === \"string\") {\n            if (queryDictionaryOrString.charAt(0) === \"?\") {\n                queryDictionaryOrString = queryDictionaryOrString.substring(1);\n            }\n            if (queryDictionaryOrString.indexOf(\"&\") !== -1) {\n                const queryParams = queryDictionaryOrString.split(\"&\");\n                for (const str of queryParams) {\n                    this.parseQueryParamenterString(str);\n                }\n            }\n            else {\n                this.parseQueryParamenterString(queryDictionaryOrString);\n            }\n        }\n        else if (queryDictionaryOrString.constructor === Object) {\n            for (const key in queryDictionaryOrString) {\n                if (Object.prototype.hasOwnProperty.call(queryDictionaryOrString, key)) {\n                    this.setURLComponentsQueryParamater(key, queryDictionaryOrString[key]);\n                }\n            }\n        }\n        return this;\n    }\n    /**\n     * @private\n     * Parses the query parameter of string type to set the urlComponents property of the GraphRequest object\n     * @param {string} queryParameter - the query parameters\n     * returns nothing\n     */\n    parseQueryParamenterString(queryParameter) {\n        /* The query key-value pair must be split on the first equals sign to avoid errors in parsing nested query parameters.\n                 Example-> \"/me?$expand=home($select=city)\" */\n        if (this.isValidQueryKeyValuePair(queryParameter)) {\n            const indexOfFirstEquals = queryParameter.indexOf(\"=\");\n            const paramKey = queryParameter.substring(0, indexOfFirstEquals);\n            const paramValue = queryParameter.substring(indexOfFirstEquals + 1);\n            this.setURLComponentsQueryParamater(paramKey, paramValue);\n        }\n        else {\n            /* Push values which are not of key-value structure.\n            Example-> Handle an invalid input->.query(test), .query($select($select=name)) and let the Graph API respond with the error in the URL*/\n            this.urlComponents.otherURLQueryOptions.push(queryParameter);\n        }\n    }\n    /**\n     * @private\n     * Sets values into the urlComponents property of GraphRequest object.\n     * @param {string} paramKey - the query parameter key\n     * @param {string} paramValue - the query paramter value\n     * @returns nothing\n     */\n    setURLComponentsQueryParamater(paramKey, paramValue) {\n        if (oDataQueryNames.indexOf(paramKey) !== -1) {\n            const currentValue = this.urlComponents.oDataQueryParams[paramKey];\n            const isValueAppendable = currentValue && (paramKey === \"$expand\" || paramKey === \"$select\" || paramKey === \"$orderby\");\n            this.urlComponents.oDataQueryParams[paramKey] = isValueAppendable ? currentValue + \",\" + paramValue : paramValue;\n        }\n        else {\n            this.urlComponents.otherURLQueryParams[paramKey] = paramValue;\n        }\n    }\n    /**\n     * @private\n     * Check if the query parameter string has a valid key-value structure\n     * @param {string} queryString - the query parameter string. Example -> \"name=value\"\n     * #returns true if the query string has a valid key-value structure else false\n     */\n    isValidQueryKeyValuePair(queryString) {\n        const indexofFirstEquals = queryString.indexOf(\"=\");\n        if (indexofFirstEquals === -1) {\n            return false;\n        }\n        const indexofOpeningParanthesis = queryString.indexOf(\"(\");\n        if (indexofOpeningParanthesis !== -1 && queryString.indexOf(\"(\") < indexofFirstEquals) {\n            // Example -> .query($select($expand=true));\n            return false;\n        }\n        return true;\n    }\n    /**\n     * @private\n     * Updates the custom headers and options for a request\n     * @param {FetchOptions} options - The request options object\n     * @returns Nothing\n     */\n    updateRequestOptions(options) {\n        const optionsHeaders = Object.assign({}, options.headers);\n        if (this.config.fetchOptions !== undefined) {\n            const fetchOptions = Object.assign({}, this.config.fetchOptions);\n            Object.assign(options, fetchOptions);\n            if (typeof this.config.fetchOptions.headers !== undefined) {\n                options.headers = Object.assign({}, this.config.fetchOptions.headers);\n            }\n        }\n        Object.assign(options, this._options);\n        if (options.headers !== undefined) {\n            Object.assign(optionsHeaders, options.headers);\n        }\n        Object.assign(optionsHeaders, this._headers);\n        options.headers = optionsHeaders;\n    }\n    /**\n     * @private\n     * @async\n     * Adds the custom headers and options to the request and makes the HTTPClient send request call\n     * @param {RequestInfo} request - The request url string or the Request object value\n     * @param {FetchOptions} options - The options to make a request\n     * @param {GraphRequestCallback} [callback] - The callback function to be called in response with async call\n     * @returns A promise that resolves to the response content\n     */\n    send(request, options, callback) {\n        var _a;\n        return __awaiter(this, void 0, void 0, function* () {\n            let rawResponse;\n            const middlewareControl = new MiddlewareControl(this._middlewareOptions);\n            this.updateRequestOptions(options);\n            const customHosts = (_a = this.config) === null || _a === void 0 ? void 0 : _a.customHosts;\n            try {\n                const context = yield this.httpClient.sendRequest({\n                    request,\n                    options,\n                    middlewareControl,\n                    customHosts,\n                });\n                rawResponse = context.response;\n                const response = yield GraphResponseHandler.getResponse(rawResponse, this._responseType, callback);\n                return response;\n            }\n            catch (error) {\n                if (error instanceof GraphClientError) {\n                    throw error;\n                }\n                let statusCode;\n                if (rawResponse) {\n                    statusCode = rawResponse.status;\n                }\n                const gError = yield GraphErrorHandler.getError(error, statusCode, callback, rawResponse);\n                throw gError;\n            }\n        });\n    }\n    /**\n     * @private\n     * Checks if the content-type is present in the _headers property. If not present, defaults the content-type to application/json\n     * @param none\n     * @returns nothing\n     */\n    setHeaderContentType() {\n        if (!this._headers) {\n            this.header(\"Content-Type\", \"application/json\");\n            return;\n        }\n        const headerKeys = Object.keys(this._headers);\n        for (const headerKey of headerKeys) {\n            if (headerKey.toLowerCase() === \"content-type\") {\n                return;\n            }\n        }\n        // Default the content-type to application/json in case the content-type is not present in the header\n        this.header(\"Content-Type\", \"application/json\");\n    }\n    /**\n     * @public\n     * Sets the custom header for a request\n     * @param {string} headerKey - A header key\n     * @param {string} headerValue - A header value\n     * @returns The same GraphRequest instance that is being called with\n     */\n    header(headerKey, headerValue) {\n        this._headers[headerKey] = headerValue;\n        return this;\n    }\n    /**\n     * @public\n     * Sets the custom headers for a request\n     * @param {KeyValuePairObjectStringNumber | HeadersInit} headers - The request headers\n     * @returns The same GraphRequest instance that is being called with\n     */\n    headers(headers) {\n        for (const key in headers) {\n            if (Object.prototype.hasOwnProperty.call(headers, key)) {\n                this._headers[key] = headers[key];\n            }\n        }\n        return this;\n    }\n    /**\n     * @public\n     * Sets the option for making a request\n     * @param {string} key - The key value\n     * @param {any} value - The value\n     * @returns The same GraphRequest instance that is being called with\n     */\n    option(key, value) {\n        this._options[key] = value;\n        return this;\n    }\n    /**\n     * @public\n     * Sets the options for making a request\n     * @param {{ [key: string]: any }} options - The options key value pair\n     * @returns The same GraphRequest instance that is being called with\n     */\n    options(options) {\n        for (const key in options) {\n            if (Object.prototype.hasOwnProperty.call(options, key)) {\n                this._options[key] = options[key];\n            }\n        }\n        return this;\n    }\n    /**\n     * @public\n     * Sets the middleware options for a request\n     * @param {MiddlewareOptions[]} options - The array of middleware options\n     * @returns The same GraphRequest instance that is being called with\n     */\n    middlewareOptions(options) {\n        this._middlewareOptions = options;\n        return this;\n    }\n    /**\n     * @public\n     * Sets the api endpoint version for a request\n     * @param {string} version - The version value\n     * @returns The same GraphRequest instance that is being called with\n     */\n    version(version) {\n        this.urlComponents.version = version;\n        return this;\n    }\n    /**\n     * @public\n     * Sets the api endpoint version for a request\n     * @param {ResponseType} responseType - The response type value\n     * @returns The same GraphRequest instance that is being called with\n     */\n    responseType(responseType) {\n        this._responseType = responseType;\n        return this;\n    }\n    /**\n     * @public\n     * To add properties for select OData Query param\n     * @param {string|string[]} properties - The Properties value\n     * @returns The same GraphRequest instance that is being called with, after adding the properties for $select query\n     */\n    /*\n     * Accepts .select(\"displayName,birthday\")\n     *     and .select([\"displayName\", \"birthday\"])\n     *     and .select(\"displayName\", \"birthday\")\n     *\n     */\n    select(properties) {\n        this.addCsvQueryParameter(\"$select\", properties, arguments);\n        return this;\n    }\n    /**\n     * @public\n     * To add properties for expand OData Query param\n     * @param {string|string[]} properties - The Properties value\n     * @returns The same GraphRequest instance that is being called with, after adding the properties for $expand query\n     */\n    expand(properties) {\n        this.addCsvQueryParameter(\"$expand\", properties, arguments);\n        return this;\n    }\n    /**\n     * @public\n     * To add properties for orderby OData Query param\n     * @param {string|string[]} properties - The Properties value\n     * @returns The same GraphRequest instance that is being called with, after adding the properties for $orderby query\n     */\n    orderby(properties) {\n        this.addCsvQueryParameter(\"$orderby\", properties, arguments);\n        return this;\n    }\n    /**\n     * @public\n     * To add query string for filter OData Query param. The request URL accepts only one $filter Odata Query option and its value is set to the most recently passed filter query string.\n     * @param {string} filterStr - The filter query string\n     * @returns The same GraphRequest instance that is being called with, after adding the $filter query\n     */\n    filter(filterStr) {\n        this.urlComponents.oDataQueryParams.$filter = filterStr;\n        return this;\n    }\n    /**\n     * @public\n     * To add criterion for search OData Query param. The request URL accepts only one $search Odata Query option and its value is set to the most recently passed search criterion string.\n     * @param {string} searchStr - The search criterion string\n     * @returns The same GraphRequest instance that is being called with, after adding the $search query criteria\n     */\n    search(searchStr) {\n        this.urlComponents.oDataQueryParams.$search = searchStr;\n        return this;\n    }\n    /**\n     * @public\n     * To add number for top OData Query param. The request URL accepts only one $top Odata Query option and its value is set to the most recently passed number value.\n     * @param {number} n - The number value\n     * @returns The same GraphRequest instance that is being called with, after adding the number for $top query\n     */\n    top(n) {\n        this.urlComponents.oDataQueryParams.$top = n;\n        return this;\n    }\n    /**\n     * @public\n     * To add number for skip OData Query param. The request URL accepts only one $skip Odata Query option and its value is set to the most recently passed number value.\n     * @param {number} n - The number value\n     * @returns The same GraphRequest instance that is being called with, after adding the number for the $skip query\n     */\n    skip(n) {\n        this.urlComponents.oDataQueryParams.$skip = n;\n        return this;\n    }\n    /**\n     * @public\n     * To add token string for skipToken OData Query param. The request URL accepts only one $skipToken Odata Query option and its value is set to the most recently passed token value.\n     * @param {string} token - The token value\n     * @returns The same GraphRequest instance that is being called with, after adding the token string for $skipToken query option\n     */\n    skipToken(token) {\n        this.urlComponents.oDataQueryParams.$skipToken = token;\n        return this;\n    }\n    /**\n     * @public\n     * To add boolean for count OData Query param. The URL accepts only one $count Odata Query option and its value is set to the most recently passed boolean value.\n     * @param {boolean} isCount - The count boolean\n     * @returns The same GraphRequest instance that is being called with, after adding the boolean value for the $count query option\n     */\n    count(isCount = true) {\n        this.urlComponents.oDataQueryParams.$count = isCount.toString();\n        return this;\n    }\n    /**\n     * @public\n     * Appends query string to the urlComponent\n     * @param {string|KeyValuePairObjectStringNumber} queryDictionaryOrString - The query value\n     * @returns The same GraphRequest instance that is being called with, after appending the query string to the url component\n     */\n    /*\n     * Accepts .query(\"displayName=xyz\")\n     *     and .select({ name: \"value\" })\n     */\n    query(queryDictionaryOrString) {\n        return this.parseQueryParameter(queryDictionaryOrString);\n    }\n    /**\n     * @public\n     * @async\n     * Makes a http request with GET method\n     * @param {GraphRequestCallback} [callback] - The callback function to be called in response with async call\n     * @returns A promise that resolves to the get response\n     */\n    get(callback) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const url = this.buildFullUrl();\n            const options = {\n                method: RequestMethod.GET,\n            };\n            const response = yield this.send(url, options, callback);\n            return response;\n        });\n    }\n    /**\n     * @public\n     * @async\n     * Makes a http request with POST method\n     * @param {any} content - The content that needs to be sent with the request\n     * @param {GraphRequestCallback} [callback] - The callback function to be called in response with async call\n     * @returns A promise that resolves to the post response\n     */\n    post(content, callback) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const url = this.buildFullUrl();\n            const options = {\n                method: RequestMethod.POST,\n                body: serializeContent(content),\n            };\n            const className = content && content.constructor && content.constructor.name;\n            if (className === \"FormData\") {\n                // Content-Type headers should not be specified in case the of FormData type content\n                options.headers = {};\n            }\n            else {\n                this.setHeaderContentType();\n                options.headers = this._headers;\n            }\n            return yield this.send(url, options, callback);\n        });\n    }\n    /**\n     * @public\n     * @async\n     * Alias for Post request call\n     * @param {any} content - The content that needs to be sent with the request\n     * @param {GraphRequestCallback} [callback] - The callback function to be called in response with async call\n     * @returns A promise that resolves to the post response\n     */\n    create(content, callback) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return yield this.post(content, callback);\n        });\n    }\n    /**\n     * @public\n     * @async\n     * Makes http request with PUT method\n     * @param {any} content - The content that needs to be sent with the request\n     * @param {GraphRequestCallback} [callback] - The callback function to be called in response with async call\n     * @returns A promise that resolves to the put response\n     */\n    put(content, callback) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const url = this.buildFullUrl();\n            this.setHeaderContentType();\n            const options = {\n                method: RequestMethod.PUT,\n                body: serializeContent(content),\n            };\n            return yield this.send(url, options, callback);\n        });\n    }\n    /**\n     * @public\n     * @async\n     * Makes http request with PATCH method\n     * @param {any} content - The content that needs to be sent with the request\n     * @param {GraphRequestCallback} [callback] - The callback function to be called in response with async call\n     * @returns A promise that resolves to the patch response\n     */\n    patch(content, callback) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const url = this.buildFullUrl();\n            this.setHeaderContentType();\n            const options = {\n                method: RequestMethod.PATCH,\n                body: serializeContent(content),\n            };\n            return yield this.send(url, options, callback);\n        });\n    }\n    /**\n     * @public\n     * @async\n     * Alias for PATCH request\n     * @param {any} content - The content that needs to be sent with the request\n     * @param {GraphRequestCallback} [callback] - The callback function to be called in response with async call\n     * @returns A promise that resolves to the patch response\n     */\n    update(content, callback) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return yield this.patch(content, callback);\n        });\n    }\n    /**\n     * @public\n     * @async\n     * Makes http request with DELETE method\n     * @param {GraphRequestCallback} [callback] - The callback function to be called in response with async call\n     * @returns A promise that resolves to the delete response\n     */\n    delete(callback) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const url = this.buildFullUrl();\n            const options = {\n                method: RequestMethod.DELETE,\n            };\n            return yield this.send(url, options, callback);\n        });\n    }\n    /**\n     * @public\n     * @async\n     * Alias for delete request call\n     * @param {GraphRequestCallback} [callback] - The callback function to be called in response with async call\n     * @returns A promise that resolves to the delete response\n     */\n    del(callback) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return yield this.delete(callback);\n        });\n    }\n    /**\n     * @public\n     * @async\n     * Makes a http request with GET method to read response as a stream.\n     * @param {GraphRequestCallback} [callback] - The callback function to be called in response with async call\n     * @returns A promise that resolves to the getStream response\n     */\n    getStream(callback) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const url = this.buildFullUrl();\n            const options = {\n                method: RequestMethod.GET,\n            };\n            this.responseType(ResponseType.STREAM);\n            return yield this.send(url, options, callback);\n        });\n    }\n    /**\n     * @public\n     * @async\n     * Makes a http request with GET method to read response as a stream.\n     * @param {any} stream - The stream instance\n     * @param {GraphRequestCallback} [callback] - The callback function to be called in response with async call\n     * @returns A promise that resolves to the putStream response\n     */\n    putStream(stream, callback) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const url = this.buildFullUrl();\n            const options = {\n                method: RequestMethod.PUT,\n                headers: {\n                    \"Content-Type\": \"application/octet-stream\",\n                },\n                body: stream,\n            };\n            return yield this.send(url, options, callback);\n        });\n    }\n}\n//# sourceMappingURL=GraphRequest.js.map","/**\n * -------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.\n * See License in the project root for license information.\n * -------------------------------------------------------------------------------------------\n */\nimport { __awaiter } from \"tslib\";\n/**\n * @class\n * Class representing HTTPClient\n */\nexport class HTTPClient {\n    /**\n     * @public\n     * @constructor\n     * Creates an instance of a HTTPClient\n     * @param {...Middleware} middleware - The first middleware of the middleware chain or a sequence of all the Middleware handlers\n     */\n    constructor(...middleware) {\n        if (!middleware || !middleware.length) {\n            const error = new Error();\n            error.name = \"InvalidMiddlewareChain\";\n            error.message = \"Please provide a default middleware chain or custom middleware chain\";\n            throw error;\n        }\n        this.setMiddleware(...middleware);\n    }\n    /**\n     * @private\n     * Processes the middleware parameter passed to set this.middleware property\n     * The calling function should validate if middleware is not undefined or not empty.\n     * @param {...Middleware} middleware - The middleware passed\n     * @returns Nothing\n     */\n    setMiddleware(...middleware) {\n        if (middleware.length > 1) {\n            this.parseMiddleWareArray(middleware);\n        }\n        else {\n            this.middleware = middleware[0];\n        }\n    }\n    /**\n     * @private\n     * Processes the middleware array to construct the chain\n     * and sets this.middleware property to the first middleware handler of the array\n     * The calling function should validate if middleware is not undefined or not empty\n     * @param {Middleware[]} middlewareArray - The array of middleware handlers\n     * @returns Nothing\n     */\n    parseMiddleWareArray(middlewareArray) {\n        middlewareArray.forEach((element, index) => {\n            if (index < middlewareArray.length - 1) {\n                element.setNext(middlewareArray[index + 1]);\n            }\n        });\n        this.middleware = middlewareArray[0];\n    }\n    /**\n     * @public\n     * @async\n     * To send the request through the middleware chain\n     * @param {Context} context - The context of a request\n     * @returns A promise that resolves to the Context\n     */\n    sendRequest(context) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (typeof context.request === \"string\" && context.options === undefined) {\n                const error = new Error();\n                error.name = \"InvalidRequestOptions\";\n                error.message = \"Unable to execute the middleware, Please provide valid options for a request\";\n                throw error;\n            }\n            yield this.middleware.execute(context);\n            return context;\n        });\n    }\n}\n//# sourceMappingURL=HTTPClient.js.map","/**\n * -------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.\n * See License in the project root for license information.\n * -------------------------------------------------------------------------------------------\n */\n/**\n * @module HTTPClientFactory\n */\nimport { HTTPClient } from \"./HTTPClient\";\nimport { AuthenticationHandler } from \"./middleware/AuthenticationHandler\";\nimport { HTTPMessageHandler } from \"./middleware/HTTPMessageHandler\";\nimport { RedirectHandlerOptions } from \"./middleware/options/RedirectHandlerOptions\";\nimport { RetryHandlerOptions } from \"./middleware/options/RetryHandlerOptions\";\nimport { RedirectHandler } from \"./middleware/RedirectHandler\";\nimport { RetryHandler } from \"./middleware/RetryHandler\";\nimport { TelemetryHandler } from \"./middleware/TelemetryHandler\";\n/**\n * @private\n * To check whether the environment is node or not\n * @returns A boolean representing the environment is node or not\n */\nconst isNodeEnvironment = () => {\n    return typeof process === \"object\" && typeof require === \"function\";\n};\n/**\n * @class\n * Class representing HTTPClientFactory\n */\nexport class HTTPClientFactory {\n    /**\n     * @public\n     * @static\n     * Creates HTTPClient with default middleware chain\n     * @param {AuthenticationProvider} authProvider - The authentication provider instance\n     * @returns A HTTPClient instance\n     *\n     * NOTE: These are the things that we need to remember while doing modifications in the below default pipeline.\n     * \t\t* HTTPMessageHandler should be the last one in the middleware pipeline, because this makes the actual network call of the request\n     * \t\t* TelemetryHandler should be the one prior to the last middleware in the chain, because this is the one which actually collects and appends the usage flag and placing this handler \t*\t\t  before making the actual network call ensures that the usage of all features are recorded in the flag.\n     * \t\t* The best place for AuthenticationHandler is in the starting of the pipeline, because every other handler might have to work for multiple times for a request but the auth token for\n     * \t\t  them will remain same. For example, Retry and Redirect handlers might be working multiple times for a request based on the response but their auth token would remain same.\n     */\n    static createWithAuthenticationProvider(authProvider) {\n        const authenticationHandler = new AuthenticationHandler(authProvider);\n        const retryHandler = new RetryHandler(new RetryHandlerOptions());\n        const telemetryHandler = new TelemetryHandler();\n        const httpMessageHandler = new HTTPMessageHandler();\n        authenticationHandler.setNext(retryHandler);\n        if (isNodeEnvironment()) {\n            const redirectHandler = new RedirectHandler(new RedirectHandlerOptions());\n            retryHandler.setNext(redirectHandler);\n            redirectHandler.setNext(telemetryHandler);\n        }\n        else {\n            retryHandler.setNext(telemetryHandler);\n        }\n        telemetryHandler.setNext(httpMessageHandler);\n        return HTTPClientFactory.createWithMiddleware(authenticationHandler);\n    }\n    /**\n     * @public\n     * @static\n     * Creates a middleware chain with the given one\n     * @property {...Middleware} middleware - The first middleware of the middleware chain or a sequence of all the Middleware handlers\n     * @returns A HTTPClient instance\n     */\n    static createWithMiddleware(...middleware) {\n        // Middleware should not empty or undefined. This is check is present in the HTTPClient constructor.\n        return new HTTPClient(...middleware);\n    }\n}\n//# sourceMappingURL=HTTPClientFactory.js.map","/**\n * -------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.\n * See License in the project root for license information.\n * -------------------------------------------------------------------------------------------\n */\n/**\n * @module Client\n */\nimport { GRAPH_API_VERSION, GRAPH_BASE_URL } from \"./Constants\";\nimport { CustomAuthenticationProvider } from \"./CustomAuthenticationProvider\";\nimport { GraphRequest } from \"./GraphRequest\";\nimport { HTTPClient } from \"./HTTPClient\";\nimport { HTTPClientFactory } from \"./HTTPClientFactory\";\nimport { validatePolyFilling } from \"./ValidatePolyFilling\";\nexport class Client {\n    /**\n     * @public\n     * @static\n     * To create a client instance with options and initializes the default middleware chain\n     * @param {Options} options - The options for client instance\n     * @returns The Client instance\n     */\n    static init(options) {\n        const clientOptions = {};\n        for (const i in options) {\n            if (Object.prototype.hasOwnProperty.call(options, i)) {\n                clientOptions[i] = i === \"authProvider\" ? new CustomAuthenticationProvider(options[i]) : options[i];\n            }\n        }\n        return Client.initWithMiddleware(clientOptions);\n    }\n    /**\n     * @public\n     * @static\n     * To create a client instance with the Client Options\n     * @param {ClientOptions} clientOptions - The options object for initializing the client\n     * @returns The Client instance\n     */\n    static initWithMiddleware(clientOptions) {\n        return new Client(clientOptions);\n    }\n    /**\n     * @private\n     * @constructor\n     * Creates an instance of Client\n     * @param {ClientOptions} clientOptions - The options to instantiate the client object\n     */\n    constructor(clientOptions) {\n        /**\n         * @private\n         * A member which stores the Client instance options\n         */\n        this.config = {\n            baseUrl: GRAPH_BASE_URL,\n            debugLogging: false,\n            defaultVersion: GRAPH_API_VERSION,\n        };\n        validatePolyFilling();\n        for (const key in clientOptions) {\n            if (Object.prototype.hasOwnProperty.call(clientOptions, key)) {\n                this.config[key] = clientOptions[key];\n            }\n        }\n        let httpClient;\n        if (clientOptions.authProvider !== undefined && clientOptions.middleware !== undefined) {\n            const error = new Error();\n            error.name = \"AmbiguityInInitialization\";\n            error.message = \"Unable to Create Client, Please provide either authentication provider for default middleware chain or custom middleware chain not both\";\n            throw error;\n        }\n        else if (clientOptions.authProvider !== undefined) {\n            httpClient = HTTPClientFactory.createWithAuthenticationProvider(clientOptions.authProvider);\n        }\n        else if (clientOptions.middleware !== undefined) {\n            httpClient = new HTTPClient(...[].concat(clientOptions.middleware));\n        }\n        else {\n            const error = new Error();\n            error.name = \"InvalidMiddlewareChain\";\n            error.message = \"Unable to Create Client, Please provide either authentication provider for default middleware chain or custom middleware chain\";\n            throw error;\n        }\n        this.httpClient = httpClient;\n    }\n    /**\n     * @public\n     * Entry point to make requests\n     * @param {string} path - The path string value\n     * @returns The graph request instance\n     */\n    api(path) {\n        return new GraphRequest(this.httpClient, this.config, path);\n    }\n}\n//# sourceMappingURL=Client.js.map","/**\n * -------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.\n * See License in the project root for license information.\n * -------------------------------------------------------------------------------------------\n */\n/**\n * @constant\n * @function\n * Validates availability of Promise and fetch in global context\n * @returns The true in case the Promise and fetch available, otherwise throws error\n */\nexport const validatePolyFilling = () => {\n    if (typeof Promise === \"undefined\" && typeof fetch === \"undefined\") {\n        const error = new Error(\"Library cannot function without Promise and fetch. So, please provide polyfill for them.\");\n        error.name = \"PolyFillNotAvailable\";\n        throw error;\n    }\n    else if (typeof Promise === \"undefined\") {\n        const error = new Error(\"Library cannot function without Promise. So, please provide polyfill for it.\");\n        error.name = \"PolyFillNotAvailable\";\n        throw error;\n    }\n    else if (typeof fetch === \"undefined\") {\n        const error = new Error(\"Library cannot function without fetch. So, please provide polyfill for it.\");\n        error.name = \"PolyFillNotAvailable\";\n        throw error;\n    }\n    return true;\n};\n//# sourceMappingURL=ValidatePolyFilling.js.map","export const isUpKey = (key) => key.name === 'up';\nexport const isDownKey = (key) => key.name === 'down';\nexport const isSpaceKey = (key) => key.name === 'space';\nexport const isBackspaceKey = (key) => key.name === 'backspace';\nexport const isTabKey = (key) => key.name === 'tab';\nexport const isNumberKey = (key) => '1234567890'.includes(key.name);\nexport const isEnterKey = (key) => key.name === 'enter' || key.name === 'return';\n","export class AbortPromptError extends Error {\n    name = 'AbortPromptError';\n    message = 'Prompt was aborted';\n    constructor(options) {\n        super();\n        this.cause = options?.cause;\n    }\n}\nexport class CancelPromptError extends Error {\n    name = 'CancelPromptError';\n    message = 'Prompt was canceled';\n}\nexport class ExitPromptError extends Error {\n    name = 'ExitPromptError';\n}\nexport class HookError extends Error {\n    name = 'HookError';\n}\nexport class ValidationError extends Error {\n    name = 'ValidationError';\n}\n","/* eslint @typescript-eslint/no-explicit-any: [\"off\"] */\nimport { AsyncLocalStorage, AsyncResource } from 'node:async_hooks';\nimport { HookError, ValidationError } from \"./errors.js\";\nconst hookStorage = new AsyncLocalStorage();\nfunction createStore(rl) {\n    const store = {\n        rl,\n        hooks: [],\n        hooksCleanup: [],\n        hooksEffect: [],\n        index: 0,\n        handleChange() { },\n    };\n    return store;\n}\n// Run callback in with the hook engine setup.\nexport function withHooks(rl, cb) {\n    const store = createStore(rl);\n    return hookStorage.run(store, () => {\n        function cycle(render) {\n            store.handleChange = () => {\n                store.index = 0;\n                render();\n            };\n            store.handleChange();\n        }\n        return cb(cycle);\n    });\n}\n// Safe getStore utility that'll return the store or throw if undefined.\nfunction getStore() {\n    const store = hookStorage.getStore();\n    if (!store) {\n        throw new HookError('[Inquirer] Hook functions can only be called from within a prompt');\n    }\n    return store;\n}\nexport function readline() {\n    return getStore().rl;\n}\n// Merge state updates happening within the callback function to avoid multiple renders.\nexport function withUpdates(fn) {\n    const wrapped = (...args) => {\n        const store = getStore();\n        let shouldUpdate = false;\n        const oldHandleChange = store.handleChange;\n        store.handleChange = () => {\n            shouldUpdate = true;\n        };\n        const returnValue = fn(...args);\n        if (shouldUpdate) {\n            oldHandleChange();\n        }\n        store.handleChange = oldHandleChange;\n        return returnValue;\n    };\n    return AsyncResource.bind(wrapped);\n}\nexport function withPointer(cb) {\n    const store = getStore();\n    const { index } = store;\n    const pointer = {\n        get() {\n            return store.hooks[index];\n        },\n        set(value) {\n            store.hooks[index] = value;\n        },\n        initialized: index in store.hooks,\n    };\n    const returnValue = cb(pointer);\n    store.index++;\n    return returnValue;\n}\nexport function handleChange() {\n    getStore().handleChange();\n}\nexport const effectScheduler = {\n    queue(cb) {\n        const store = getStore();\n        const { index } = store;\n        store.hooksEffect.push(() => {\n            store.hooksCleanup[index]?.();\n            const cleanFn = cb(readline());\n            if (cleanFn != null && typeof cleanFn !== 'function') {\n                throw new ValidationError('useEffect return value must be a cleanup function or nothing.');\n            }\n            store.hooksCleanup[index] = cleanFn;\n        });\n    },\n    run() {\n        const store = getStore();\n        withUpdates(() => {\n            store.hooksEffect.forEach((effect) => {\n                effect();\n            });\n            // Warning: Clean the hooks before exiting the `withUpdates` block.\n            // Failure to do so means an updates would hit the same effects again.\n            store.hooksEffect.length = 0;\n        })();\n    },\n    clearAll() {\n        const store = getStore();\n        store.hooksCleanup.forEach((cleanFn) => {\n            cleanFn?.();\n        });\n        store.hooksEffect.length = 0;\n        store.hooksCleanup.length = 0;\n    },\n};\n","import { AsyncResource } from 'node:async_hooks';\nimport { withPointer, handleChange } from \"./hook-engine.js\";\nexport function useState(defaultValue) {\n    return withPointer((pointer) => {\n        const setState = AsyncResource.bind(function setState(newValue) {\n            // Noop if the value is still the same.\n            if (pointer.get() !== newValue) {\n                pointer.set(newValue);\n                // Trigger re-render\n                handleChange();\n            }\n        });\n        if (pointer.initialized) {\n            return [pointer.get(), setState];\n        }\n        const value = typeof defaultValue === 'function' ? defaultValue() : defaultValue;\n        pointer.set(value);\n        return [value, setState];\n    });\n}\n","import { withPointer, effectScheduler } from \"./hook-engine.js\";\nexport function useEffect(cb, depArray) {\n    withPointer((pointer) => {\n        const oldDeps = pointer.get();\n        const hasChanged = !Array.isArray(oldDeps) || depArray.some((dep, i) => !Object.is(dep, oldDeps[i]));\n        if (hasChanged) {\n            effectScheduler.queue(cb);\n        }\n        pointer.set(depArray);\n    });\n}\n","const tty = require('node:tty'); // eslint-disable-line unicorn/prefer-module\n\n// eslint-disable-next-line no-warning-comments\n// TODO: Use a better method when it's added to Node.js (https://github.com/nodejs/node/pull/40240)\n// Lots of optionals here to support Deno.\nconst hasColors = tty?.WriteStream?.prototype?.hasColors?.() ?? false;\n\nconst format = (open, close) => {\n\tif (!hasColors) {\n\t\treturn input => input;\n\t}\n\n\tconst openCode = `\\u001B[${open}m`;\n\tconst closeCode = `\\u001B[${close}m`;\n\n\treturn input => {\n\t\tconst string = input + ''; // eslint-disable-line no-implicit-coercion -- This is faster.\n\t\tlet index = string.indexOf(closeCode);\n\n\t\tif (index === -1) {\n\t\t\t// Note: Intentionally not using string interpolation for performance reasons.\n\t\t\treturn openCode + string + closeCode;\n\t\t}\n\n\t\t// Handle nested colors.\n\n\t\t// We could have done this, but it's too slow (as of Node.js 22).\n\t\t// return openCode + string.replaceAll(closeCode, openCode) + closeCode;\n\n\t\tlet result = openCode;\n\t\tlet lastIndex = 0;\n\n\t\t// SGR 22 resets both bold (1) and dim (2). When we encounter a nested\n\t\t// close for styles that use 22, we need to re-open the outer style.\n\t\tconst reopenOnNestedClose = close === 22;\n\t\tconst replaceCode = (reopenOnNestedClose ? closeCode : '') + openCode;\n\n\t\twhile (index !== -1) {\n\t\t\tresult += string.slice(lastIndex, index) + replaceCode;\n\t\t\tlastIndex = index + closeCode.length;\n\t\t\tindex = string.indexOf(closeCode, lastIndex);\n\t\t}\n\n\t\tresult += string.slice(lastIndex) + closeCode;\n\n\t\treturn result;\n\t};\n};\n\nconst colors = {};\n\ncolors.reset = format(0, 0);\ncolors.bold = format(1, 22);\ncolors.dim = format(2, 22);\ncolors.italic = format(3, 23);\ncolors.underline = format(4, 24);\ncolors.overline = format(53, 55);\ncolors.inverse = format(7, 27);\ncolors.hidden = format(8, 28);\ncolors.strikethrough = format(9, 29);\n\ncolors.black = format(30, 39);\ncolors.red = format(31, 39);\ncolors.green = format(32, 39);\ncolors.yellow = format(33, 39);\ncolors.blue = format(34, 39);\ncolors.magenta = format(35, 39);\ncolors.cyan = format(36, 39);\ncolors.white = format(37, 39);\ncolors.gray = format(90, 39);\n\ncolors.bgBlack = format(40, 49);\ncolors.bgRed = format(41, 49);\ncolors.bgGreen = format(42, 49);\ncolors.bgYellow = format(43, 49);\ncolors.bgBlue = format(44, 49);\ncolors.bgMagenta = format(45, 49);\ncolors.bgCyan = format(46, 49);\ncolors.bgWhite = format(47, 49);\ncolors.bgGray = format(100, 49);\n\ncolors.redBright = format(91, 39);\ncolors.greenBright = format(92, 39);\ncolors.yellowBright = format(93, 39);\ncolors.blueBright = format(94, 39);\ncolors.magentaBright = format(95, 39);\ncolors.cyanBright = format(96, 39);\ncolors.whiteBright = format(97, 39);\n\ncolors.bgRedBright = format(101, 49);\ncolors.bgGreenBright = format(102, 49);\ncolors.bgYellowBright = format(103, 49);\ncolors.bgBlueBright = format(104, 49);\ncolors.bgMagentaBright = format(105, 49);\ncolors.bgCyanBright = format(106, 49);\ncolors.bgWhiteBright = format(107, 49);\n\nmodule.exports = colors; // eslint-disable-line unicorn/prefer-module\n","// process.env dot-notation access prints:\n// Property 'TERM' comes from an index signature, so it must be accessed with ['TERM'].ts(4111)\n/* eslint dot-notation: [\"off\"] */\nimport process from 'node:process';\n// Ported from is-unicode-supported\nfunction isUnicodeSupported() {\n    if (process.platform !== 'win32') {\n        return process.env['TERM'] !== 'linux'; // Linux console (kernel)\n    }\n    return (Boolean(process.env['WT_SESSION']) || // Windows Terminal\n        Boolean(process.env['TERMINUS_SUBLIME']) || // Terminus (<0.2.27)\n        process.env['ConEmuTask'] === '{cmd::Cmder}' || // ConEmu and cmder\n        process.env['TERM_PROGRAM'] === 'Terminus-Sublime' ||\n        process.env['TERM_PROGRAM'] === 'vscode' ||\n        process.env['TERM'] === 'xterm-256color' ||\n        process.env['TERM'] === 'alacritty' ||\n        process.env['TERMINAL_EMULATOR'] === 'JetBrains-JediTerm');\n}\n// Ported from figures\nconst common = {\n    circleQuestionMark: '(?)',\n    questionMarkPrefix: '(?)',\n    square: '█',\n    squareDarkShade: '▓',\n    squareMediumShade: '▒',\n    squareLightShade: '░',\n    squareTop: '▀',\n    squareBottom: '▄',\n    squareLeft: '▌',\n    squareRight: '▐',\n    squareCenter: '■',\n    bullet: '●',\n    dot: '․',\n    ellipsis: '…',\n    pointerSmall: '›',\n    triangleUp: '▲',\n    triangleUpSmall: '▴',\n    triangleDown: '▼',\n    triangleDownSmall: '▾',\n    triangleLeftSmall: '◂',\n    triangleRightSmall: '▸',\n    home: '⌂',\n    heart: '♥',\n    musicNote: '♪',\n    musicNoteBeamed: '♫',\n    arrowUp: '↑',\n    arrowDown: '↓',\n    arrowLeft: '←',\n    arrowRight: '→',\n    arrowLeftRight: '↔',\n    arrowUpDown: '↕',\n    almostEqual: '≈',\n    notEqual: '≠',\n    lessOrEqual: '≤',\n    greaterOrEqual: '≥',\n    identical: '≡',\n    infinity: '∞',\n    subscriptZero: '₀',\n    subscriptOne: '₁',\n    subscriptTwo: '₂',\n    subscriptThree: '₃',\n    subscriptFour: '₄',\n    subscriptFive: '₅',\n    subscriptSix: '₆',\n    subscriptSeven: '₇',\n    subscriptEight: '₈',\n    subscriptNine: '₉',\n    oneHalf: '½',\n    oneThird: '⅓',\n    oneQuarter: '¼',\n    oneFifth: '⅕',\n    oneSixth: '⅙',\n    oneEighth: '⅛',\n    twoThirds: '⅔',\n    twoFifths: '⅖',\n    threeQuarters: '¾',\n    threeFifths: '⅗',\n    threeEighths: '⅜',\n    fourFifths: '⅘',\n    fiveSixths: '⅚',\n    fiveEighths: '⅝',\n    sevenEighths: '⅞',\n    line: '─',\n    lineBold: '━',\n    lineDouble: '═',\n    lineDashed0: '┄',\n    lineDashed1: '┅',\n    lineDashed2: '┈',\n    lineDashed3: '┉',\n    lineDashed4: '╌',\n    lineDashed5: '╍',\n    lineDashed6: '╴',\n    lineDashed7: '╶',\n    lineDashed8: '╸',\n    lineDashed9: '╺',\n    lineDashed10: '╼',\n    lineDashed11: '╾',\n    lineDashed12: '−',\n    lineDashed13: '–',\n    lineDashed14: '‐',\n    lineDashed15: '⁃',\n    lineVertical: '│',\n    lineVerticalBold: '┃',\n    lineVerticalDouble: '║',\n    lineVerticalDashed0: '┆',\n    lineVerticalDashed1: '┇',\n    lineVerticalDashed2: '┊',\n    lineVerticalDashed3: '┋',\n    lineVerticalDashed4: '╎',\n    lineVerticalDashed5: '╏',\n    lineVerticalDashed6: '╵',\n    lineVerticalDashed7: '╷',\n    lineVerticalDashed8: '╹',\n    lineVerticalDashed9: '╻',\n    lineVerticalDashed10: '╽',\n    lineVerticalDashed11: '╿',\n    lineDownLeft: '┐',\n    lineDownLeftArc: '╮',\n    lineDownBoldLeftBold: '┓',\n    lineDownBoldLeft: '┒',\n    lineDownLeftBold: '┑',\n    lineDownDoubleLeftDouble: '╗',\n    lineDownDoubleLeft: '╖',\n    lineDownLeftDouble: '╕',\n    lineDownRight: '┌',\n    lineDownRightArc: '╭',\n    lineDownBoldRightBold: '┏',\n    lineDownBoldRight: '┎',\n    lineDownRightBold: '┍',\n    lineDownDoubleRightDouble: '╔',\n    lineDownDoubleRight: '╓',\n    lineDownRightDouble: '╒',\n    lineUpLeft: '┘',\n    lineUpLeftArc: '╯',\n    lineUpBoldLeftBold: '┛',\n    lineUpBoldLeft: '┚',\n    lineUpLeftBold: '┙',\n    lineUpDoubleLeftDouble: '╝',\n    lineUpDoubleLeft: '╜',\n    lineUpLeftDouble: '╛',\n    lineUpRight: '└',\n    lineUpRightArc: '╰',\n    lineUpBoldRightBold: '┗',\n    lineUpBoldRight: '┖',\n    lineUpRightBold: '┕',\n    lineUpDoubleRightDouble: '╚',\n    lineUpDoubleRight: '╙',\n    lineUpRightDouble: '╘',\n    lineUpDownLeft: '┤',\n    lineUpBoldDownBoldLeftBold: '┫',\n    lineUpBoldDownBoldLeft: '┨',\n    lineUpDownLeftBold: '┥',\n    lineUpBoldDownLeftBold: '┩',\n    lineUpDownBoldLeftBold: '┪',\n    lineUpDownBoldLeft: '┧',\n    lineUpBoldDownLeft: '┦',\n    lineUpDoubleDownDoubleLeftDouble: '╣',\n    lineUpDoubleDownDoubleLeft: '╢',\n    lineUpDownLeftDouble: '╡',\n    lineUpDownRight: '├',\n    lineUpBoldDownBoldRightBold: '┣',\n    lineUpBoldDownBoldRight: '┠',\n    lineUpDownRightBold: '┝',\n    lineUpBoldDownRightBold: '┡',\n    lineUpDownBoldRightBold: '┢',\n    lineUpDownBoldRight: '┟',\n    lineUpBoldDownRight: '┞',\n    lineUpDoubleDownDoubleRightDouble: '╠',\n    lineUpDoubleDownDoubleRight: '╟',\n    lineUpDownRightDouble: '╞',\n    lineDownLeftRight: '┬',\n    lineDownBoldLeftBoldRightBold: '┳',\n    lineDownLeftBoldRightBold: '┯',\n    lineDownBoldLeftRight: '┰',\n    lineDownBoldLeftBoldRight: '┱',\n    lineDownBoldLeftRightBold: '┲',\n    lineDownLeftRightBold: '┮',\n    lineDownLeftBoldRight: '┭',\n    lineDownDoubleLeftDoubleRightDouble: '╦',\n    lineDownDoubleLeftRight: '╥',\n    lineDownLeftDoubleRightDouble: '╤',\n    lineUpLeftRight: '┴',\n    lineUpBoldLeftBoldRightBold: '┻',\n    lineUpLeftBoldRightBold: '┷',\n    lineUpBoldLeftRight: '┸',\n    lineUpBoldLeftBoldRight: '┹',\n    lineUpBoldLeftRightBold: '┺',\n    lineUpLeftRightBold: '┶',\n    lineUpLeftBoldRight: '┵',\n    lineUpDoubleLeftDoubleRightDouble: '╩',\n    lineUpDoubleLeftRight: '╨',\n    lineUpLeftDoubleRightDouble: '╧',\n    lineUpDownLeftRight: '┼',\n    lineUpBoldDownBoldLeftBoldRightBold: '╋',\n    lineUpDownBoldLeftBoldRightBold: '╈',\n    lineUpBoldDownLeftBoldRightBold: '╇',\n    lineUpBoldDownBoldLeftRightBold: '╊',\n    lineUpBoldDownBoldLeftBoldRight: '╉',\n    lineUpBoldDownLeftRight: '╀',\n    lineUpDownBoldLeftRight: '╁',\n    lineUpDownLeftBoldRight: '┽',\n    lineUpDownLeftRightBold: '┾',\n    lineUpBoldDownBoldLeftRight: '╂',\n    lineUpDownLeftBoldRightBold: '┿',\n    lineUpBoldDownLeftBoldRight: '╃',\n    lineUpBoldDownLeftRightBold: '╄',\n    lineUpDownBoldLeftBoldRight: '╅',\n    lineUpDownBoldLeftRightBold: '╆',\n    lineUpDoubleDownDoubleLeftDoubleRightDouble: '╬',\n    lineUpDoubleDownDoubleLeftRight: '╫',\n    lineUpDownLeftDoubleRightDouble: '╪',\n    lineCross: '╳',\n    lineBackslash: '╲',\n    lineSlash: '╱',\n};\nconst specialMainSymbols = {\n    tick: '✔',\n    info: 'ℹ',\n    warning: '⚠',\n    cross: '✘',\n    squareSmall: '◻',\n    squareSmallFilled: '◼',\n    circle: '◯',\n    circleFilled: '◉',\n    circleDotted: '◌',\n    circleDouble: '◎',\n    circleCircle: 'ⓞ',\n    circleCross: 'ⓧ',\n    circlePipe: 'Ⓘ',\n    radioOn: '◉',\n    radioOff: '◯',\n    checkboxOn: '☒',\n    checkboxOff: '☐',\n    checkboxCircleOn: 'ⓧ',\n    checkboxCircleOff: 'Ⓘ',\n    pointer: '❯',\n    triangleUpOutline: '△',\n    triangleLeft: '◀',\n    triangleRight: '▶',\n    lozenge: '◆',\n    lozengeOutline: '◇',\n    hamburger: '☰',\n    smiley: '㋡',\n    mustache: '෴',\n    star: '★',\n    play: '▶',\n    nodejs: '⬢',\n    oneSeventh: '⅐',\n    oneNinth: '⅑',\n    oneTenth: '⅒',\n};\nconst specialFallbackSymbols = {\n    tick: '√',\n    info: 'i',\n    warning: '‼',\n    cross: '×',\n    squareSmall: '□',\n    squareSmallFilled: '■',\n    circle: '( )',\n    circleFilled: '(*)',\n    circleDotted: '( )',\n    circleDouble: '( )',\n    circleCircle: '(○)',\n    circleCross: '(×)',\n    circlePipe: '(│)',\n    radioOn: '(*)',\n    radioOff: '( )',\n    checkboxOn: '[×]',\n    checkboxOff: '[ ]',\n    checkboxCircleOn: '(×)',\n    checkboxCircleOff: '( )',\n    pointer: '>',\n    triangleUpOutline: '∆',\n    triangleLeft: '◄',\n    triangleRight: '►',\n    lozenge: '♦',\n    lozengeOutline: '◊',\n    hamburger: '≡',\n    smiley: '☺',\n    mustache: '┌─┐',\n    star: '✶',\n    play: '►',\n    nodejs: '♦',\n    oneSeventh: '1/7',\n    oneNinth: '1/9',\n    oneTenth: '1/10',\n};\nexport const mainSymbols = { ...common, ...specialMainSymbols };\nexport const fallbackSymbols = {\n    ...common,\n    ...specialFallbackSymbols,\n};\nconst shouldUseMain = isUnicodeSupported();\nconst figures = shouldUseMain ? mainSymbols : fallbackSymbols;\nexport default figures;\nconst replacements = Object.entries(specialMainSymbols);\n// On terminals which do not support Unicode symbols, substitute them to other symbols\nexport const replaceSymbols = (string, { useFallback = !shouldUseMain } = {}) => {\n    if (useFallback) {\n        for (const [key, mainSymbol] of replacements) {\n            const fallbackSymbol = fallbackSymbols[key];\n            if (!fallbackSymbol) {\n                throw new Error(`Unable to find fallback for ${key}`);\n            }\n            string = string.replaceAll(mainSymbol, fallbackSymbol);\n        }\n    }\n    return string;\n};\n","import colors from 'yoctocolors-cjs';\nimport figures from '@inquirer/figures';\nexport const defaultTheme = {\n    prefix: {\n        idle: colors.blue('?'),\n        // TODO: use figure\n        done: colors.green(figures.tick),\n    },\n    spinner: {\n        interval: 80,\n        frames: ['⠋', '⠙', '⠹', '⠸', '⠼', '⠴', '⠦', '⠧', '⠇', '⠏'].map((frame) => colors.yellow(frame)),\n    },\n    style: {\n        answer: colors.cyan,\n        message: colors.bold,\n        error: (text) => colors.red(`> ${text}`),\n        defaultAnswer: (text) => colors.dim(`(${text})`),\n        help: colors.dim,\n        highlight: colors.cyan,\n        key: (text) => colors.cyan(colors.bold(`<${text}>`)),\n    },\n};\n","import { defaultTheme } from \"./theme.js\";\nfunction isPlainObject(value) {\n    if (typeof value !== 'object' || value === null)\n        return false;\n    let proto = value;\n    while (Object.getPrototypeOf(proto) !== null) {\n        proto = Object.getPrototypeOf(proto);\n    }\n    return Object.getPrototypeOf(value) === proto;\n}\nfunction deepMerge(...objects) {\n    const output = {};\n    for (const obj of objects) {\n        for (const [key, value] of Object.entries(obj)) {\n            const prevValue = output[key];\n            output[key] =\n                isPlainObject(prevValue) && isPlainObject(value)\n                    ? deepMerge(prevValue, value)\n                    : value;\n        }\n    }\n    return output;\n}\nexport function makeTheme(...themes) {\n    const themesToMerge = [\n        defaultTheme,\n        ...themes.filter((theme) => theme != null),\n    ];\n    return deepMerge(...themesToMerge);\n}\n","import { useState } from \"./use-state.js\";\nimport { useEffect } from \"./use-effect.js\";\nimport { makeTheme } from \"./make-theme.js\";\nexport function usePrefix({ status = 'idle', theme, }) {\n    const [showLoader, setShowLoader] = useState(false);\n    const [tick, setTick] = useState(0);\n    const { prefix, spinner } = makeTheme(theme);\n    useEffect(() => {\n        if (status === 'loading') {\n            let tickInterval;\n            let inc = -1;\n            // Delay displaying spinner by 300ms, to avoid flickering\n            const delayTimeout = setTimeout(() => {\n                setShowLoader(true);\n                tickInterval = setInterval(() => {\n                    inc = inc + 1;\n                    setTick(inc % spinner.frames.length);\n                }, spinner.interval);\n            }, 300);\n            return () => {\n                clearTimeout(delayTimeout);\n                clearInterval(tickInterval);\n            };\n        }\n        else {\n            setShowLoader(false);\n        }\n    }, [status]);\n    if (showLoader) {\n        return spinner.frames[tick];\n    }\n    // There's a delay before we show the loader. So we want to ignore `loading` here, and pass idle instead.\n    const iconName = status === 'loading' ? 'idle' : status;\n    return typeof prefix === 'string' ? prefix : (prefix[iconName] ?? prefix['idle']);\n}\n","import { withPointer } from \"./hook-engine.js\";\nexport function useMemo(fn, dependencies) {\n    return withPointer((pointer) => {\n        const prev = pointer.get();\n        if (!prev ||\n            prev.dependencies.length !== dependencies.length ||\n            prev.dependencies.some((dep, i) => dep !== dependencies[i])) {\n            const value = fn();\n            pointer.set({ value, dependencies });\n            return value;\n        }\n        return prev.value;\n    });\n}\n","import { useState } from \"./use-state.js\";\nexport function useRef(val) {\n    return useState({ current: val })[0];\n}\n","import { useRef } from \"./use-ref.js\";\nimport { useEffect } from \"./use-effect.js\";\nimport { withUpdates } from \"./hook-engine.js\";\nexport function useKeypress(userHandler) {\n    const signal = useRef(userHandler);\n    signal.current = userHandler;\n    useEffect((rl) => {\n        let ignore = false;\n        const handler = withUpdates((_input, event) => {\n            if (ignore)\n                return;\n            void signal.current(event, rl);\n        });\n        rl.input.on('keypress', handler);\n        return () => {\n            ignore = true;\n            rl.input.removeListener('keypress', handler);\n        };\n    }, []);\n}\n","'use strict';\n\nmodule.exports = cliWidth;\n\nfunction normalizeOpts(options) {\n  const defaultOpts = {\n    defaultWidth: 0,\n    output: process.stdout,\n    tty: require('tty'),\n  };\n\n  if (!options) {\n    return defaultOpts;\n  }\n\n  Object.keys(defaultOpts).forEach(function (key) {\n    if (!options[key]) {\n      options[key] = defaultOpts[key];\n    }\n  });\n\n  return options;\n}\n\nfunction cliWidth(options) {\n  const opts = normalizeOpts(options);\n\n  if (opts.output.getWindowSize) {\n    return opts.output.getWindowSize()[0] || opts.defaultWidth;\n  }\n\n  if (opts.tty.getWindowSize) {\n    return opts.tty.getWindowSize()[1] || opts.defaultWidth;\n  }\n\n  if (opts.output.columns) {\n    return opts.output.columns;\n  }\n\n  if (process.env.CLI_WIDTH) {\n    const width = parseInt(process.env.CLI_WIDTH, 10);\n\n    if (!isNaN(width) && width !== 0) {\n      return width;\n    }\n  }\n\n  return opts.defaultWidth;\n}\n","'use strict';\n\nmodule.exports = ({onlyFirst = false} = {}) => {\n\tconst pattern = [\n\t\t'[\\\\u001B\\\\u009B][[\\\\]()#;?]*(?:(?:(?:(?:;[-a-zA-Z\\\\d\\\\/#&.:=?%@~_]+)*|[a-zA-Z\\\\d]+(?:;[-a-zA-Z\\\\d\\\\/#&.:=?%@~_]*)*)?\\\\u0007)',\n\t\t'(?:(?:\\\\d{1,4}(?:;\\\\d{0,4})*)?[\\\\dA-PR-TZcf-ntqry=><~]))'\n\t].join('|');\n\n\treturn new RegExp(pattern, onlyFirst ? undefined : 'g');\n};\n","'use strict';\nconst ansiRegex = require('ansi-regex');\n\nmodule.exports = string => typeof string === 'string' ? string.replace(ansiRegex(), '') : string;\n","/* eslint-disable yoda */\n'use strict';\n\nconst isFullwidthCodePoint = codePoint => {\n\tif (Number.isNaN(codePoint)) {\n\t\treturn false;\n\t}\n\n\t// Code points are derived from:\n\t// http://www.unix.org/Public/UNIDATA/EastAsianWidth.txt\n\tif (\n\t\tcodePoint >= 0x1100 && (\n\t\t\tcodePoint <= 0x115F || // Hangul Jamo\n\t\t\tcodePoint === 0x2329 || // LEFT-POINTING ANGLE BRACKET\n\t\t\tcodePoint === 0x232A || // RIGHT-POINTING ANGLE BRACKET\n\t\t\t// CJK Radicals Supplement .. Enclosed CJK Letters and Months\n\t\t\t(0x2E80 <= codePoint && codePoint <= 0x3247 && codePoint !== 0x303F) ||\n\t\t\t// Enclosed CJK Letters and Months .. CJK Unified Ideographs Extension A\n\t\t\t(0x3250 <= codePoint && codePoint <= 0x4DBF) ||\n\t\t\t// CJK Unified Ideographs .. Yi Radicals\n\t\t\t(0x4E00 <= codePoint && codePoint <= 0xA4C6) ||\n\t\t\t// Hangul Jamo Extended-A\n\t\t\t(0xA960 <= codePoint && codePoint <= 0xA97C) ||\n\t\t\t// Hangul Syllables\n\t\t\t(0xAC00 <= codePoint && codePoint <= 0xD7A3) ||\n\t\t\t// CJK Compatibility Ideographs\n\t\t\t(0xF900 <= codePoint && codePoint <= 0xFAFF) ||\n\t\t\t// Vertical Forms\n\t\t\t(0xFE10 <= codePoint && codePoint <= 0xFE19) ||\n\t\t\t// CJK Compatibility Forms .. Small Form Variants\n\t\t\t(0xFE30 <= codePoint && codePoint <= 0xFE6B) ||\n\t\t\t// Halfwidth and Fullwidth Forms\n\t\t\t(0xFF01 <= codePoint && codePoint <= 0xFF60) ||\n\t\t\t(0xFFE0 <= codePoint && codePoint <= 0xFFE6) ||\n\t\t\t// Kana Supplement\n\t\t\t(0x1B000 <= codePoint && codePoint <= 0x1B001) ||\n\t\t\t// Enclosed Ideographic Supplement\n\t\t\t(0x1F200 <= codePoint && codePoint <= 0x1F251) ||\n\t\t\t// CJK Unified Ideographs Extension B .. Tertiary Ideographic Plane\n\t\t\t(0x20000 <= codePoint && codePoint <= 0x3FFFD)\n\t\t)\n\t) {\n\t\treturn true;\n\t}\n\n\treturn false;\n};\n\nmodule.exports = isFullwidthCodePoint;\nmodule.exports.default = isFullwidthCodePoint;\n","\"use strict\";\n\nmodule.exports = function () {\n  // https://mths.be/emoji\n  return /\\uD83C\\uDFF4\\uDB40\\uDC67\\uDB40\\uDC62(?:\\uDB40\\uDC65\\uDB40\\uDC6E\\uDB40\\uDC67|\\uDB40\\uDC73\\uDB40\\uDC63\\uDB40\\uDC74|\\uDB40\\uDC77\\uDB40\\uDC6C\\uDB40\\uDC73)\\uDB40\\uDC7F|\\uD83D\\uDC68(?:\\uD83C\\uDFFC\\u200D(?:\\uD83E\\uDD1D\\u200D\\uD83D\\uDC68\\uD83C\\uDFFB|\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\uD83C\\uDFFF\\u200D(?:\\uD83E\\uDD1D\\u200D\\uD83D\\uDC68(?:\\uD83C[\\uDFFB-\\uDFFE])|\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\uD83C\\uDFFE\\u200D(?:\\uD83E\\uDD1D\\u200D\\uD83D\\uDC68(?:\\uD83C[\\uDFFB-\\uDFFD])|\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\uD83C\\uDFFD\\u200D(?:\\uD83E\\uDD1D\\u200D\\uD83D\\uDC68(?:\\uD83C[\\uDFFB\\uDFFC])|\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\u200D(?:\\u2764\\uFE0F\\u200D(?:\\uD83D\\uDC8B\\u200D)?\\uD83D\\uDC68|(?:\\uD83D[\\uDC68\\uDC69])\\u200D(?:\\uD83D\\uDC66\\u200D\\uD83D\\uDC66|\\uD83D\\uDC67\\u200D(?:\\uD83D[\\uDC66\\uDC67]))|\\uD83D\\uDC66\\u200D\\uD83D\\uDC66|\\uD83D\\uDC67\\u200D(?:\\uD83D[\\uDC66\\uDC67])|(?:\\uD83D[\\uDC68\\uDC69])\\u200D(?:\\uD83D[\\uDC66\\uDC67])|[\\u2695\\u2696\\u2708]\\uFE0F|\\uD83D[\\uDC66\\uDC67]|\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|(?:\\uD83C\\uDFFB\\u200D[\\u2695\\u2696\\u2708]|\\uD83C\\uDFFF\\u200D[\\u2695\\u2696\\u2708]|\\uD83C\\uDFFE\\u200D[\\u2695\\u2696\\u2708]|\\uD83C\\uDFFD\\u200D[\\u2695\\u2696\\u2708]|\\uD83C\\uDFFC\\u200D[\\u2695\\u2696\\u2708])\\uFE0F|\\uD83C\\uDFFB\\u200D(?:\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\uD83C[\\uDFFB-\\uDFFF])|(?:\\uD83E\\uDDD1\\uD83C\\uDFFB\\u200D\\uD83E\\uDD1D\\u200D\\uD83E\\uDDD1|\\uD83D\\uDC69\\uD83C\\uDFFC\\u200D\\uD83E\\uDD1D\\u200D\\uD83D\\uDC69)\\uD83C\\uDFFB|\\uD83E\\uDDD1(?:\\uD83C\\uDFFF\\u200D\\uD83E\\uDD1D\\u200D\\uD83E\\uDDD1(?:\\uD83C[\\uDFFB-\\uDFFF])|\\u200D\\uD83E\\uDD1D\\u200D\\uD83E\\uDDD1)|(?:\\uD83E\\uDDD1\\uD83C\\uDFFE\\u200D\\uD83E\\uDD1D\\u200D\\uD83E\\uDDD1|\\uD83D\\uDC69\\uD83C\\uDFFF\\u200D\\uD83E\\uDD1D\\u200D(?:\\uD83D[\\uDC68\\uDC69]))(?:\\uD83C[\\uDFFB-\\uDFFE])|(?:\\uD83E\\uDDD1\\uD83C\\uDFFC\\u200D\\uD83E\\uDD1D\\u200D\\uD83E\\uDDD1|\\uD83D\\uDC69\\uD83C\\uDFFD\\u200D\\uD83E\\uDD1D\\u200D\\uD83D\\uDC69)(?:\\uD83C[\\uDFFB\\uDFFC])|\\uD83D\\uDC69(?:\\uD83C\\uDFFE\\u200D(?:\\uD83E\\uDD1D\\u200D\\uD83D\\uDC68(?:\\uD83C[\\uDFFB-\\uDFFD\\uDFFF])|\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\uD83C\\uDFFC\\u200D(?:\\uD83E\\uDD1D\\u200D\\uD83D\\uDC68(?:\\uD83C[\\uDFFB\\uDFFD-\\uDFFF])|\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\uD83C\\uDFFB\\u200D(?:\\uD83E\\uDD1D\\u200D\\uD83D\\uDC68(?:\\uD83C[\\uDFFC-\\uDFFF])|\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\uD83C\\uDFFD\\u200D(?:\\uD83E\\uDD1D\\u200D\\uD83D\\uDC68(?:\\uD83C[\\uDFFB\\uDFFC\\uDFFE\\uDFFF])|\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\u200D(?:\\u2764\\uFE0F\\u200D(?:\\uD83D\\uDC8B\\u200D(?:\\uD83D[\\uDC68\\uDC69])|\\uD83D[\\uDC68\\uDC69])|\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\uD83C\\uDFFF\\u200D(?:\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD]))|\\uD83D\\uDC69\\u200D\\uD83D\\uDC69\\u200D(?:\\uD83D\\uDC66\\u200D\\uD83D\\uDC66|\\uD83D\\uDC67\\u200D(?:\\uD83D[\\uDC66\\uDC67]))|(?:\\uD83E\\uDDD1\\uD83C\\uDFFD\\u200D\\uD83E\\uDD1D\\u200D\\uD83E\\uDDD1|\\uD83D\\uDC69\\uD83C\\uDFFE\\u200D\\uD83E\\uDD1D\\u200D\\uD83D\\uDC69)(?:\\uD83C[\\uDFFB-\\uDFFD])|\\uD83D\\uDC69\\u200D\\uD83D\\uDC66\\u200D\\uD83D\\uDC66|\\uD83D\\uDC69\\u200D\\uD83D\\uDC69\\u200D(?:\\uD83D[\\uDC66\\uDC67])|(?:\\uD83D\\uDC41\\uFE0F\\u200D\\uD83D\\uDDE8|\\uD83D\\uDC69(?:\\uD83C\\uDFFF\\u200D[\\u2695\\u2696\\u2708]|\\uD83C\\uDFFE\\u200D[\\u2695\\u2696\\u2708]|\\uD83C\\uDFFC\\u200D[\\u2695\\u2696\\u2708]|\\uD83C\\uDFFB\\u200D[\\u2695\\u2696\\u2708]|\\uD83C\\uDFFD\\u200D[\\u2695\\u2696\\u2708]|\\u200D[\\u2695\\u2696\\u2708])|(?:(?:\\u26F9|\\uD83C[\\uDFCB\\uDFCC]|\\uD83D\\uDD75)\\uFE0F|\\uD83D\\uDC6F|\\uD83E[\\uDD3C\\uDDDE\\uDDDF])\\u200D[\\u2640\\u2642]|(?:\\u26F9|\\uD83C[\\uDFCB\\uDFCC]|\\uD83D\\uDD75)(?:\\uD83C[\\uDFFB-\\uDFFF])\\u200D[\\u2640\\u2642]|(?:\\uD83C[\\uDFC3\\uDFC4\\uDFCA]|\\uD83D[\\uDC6E\\uDC71\\uDC73\\uDC77\\uDC81\\uDC82\\uDC86\\uDC87\\uDE45-\\uDE47\\uDE4B\\uDE4D\\uDE4E\\uDEA3\\uDEB4-\\uDEB6]|\\uD83E[\\uDD26\\uDD37-\\uDD39\\uDD3D\\uDD3E\\uDDB8\\uDDB9\\uDDCD-\\uDDCF\\uDDD6-\\uDDDD])(?:(?:\\uD83C[\\uDFFB-\\uDFFF])\\u200D[\\u2640\\u2642]|\\u200D[\\u2640\\u2642])|\\uD83C\\uDFF4\\u200D\\u2620)\\uFE0F|\\uD83D\\uDC69\\u200D\\uD83D\\uDC67\\u200D(?:\\uD83D[\\uDC66\\uDC67])|\\uD83C\\uDFF3\\uFE0F\\u200D\\uD83C\\uDF08|\\uD83D\\uDC15\\u200D\\uD83E\\uDDBA|\\uD83D\\uDC69\\u200D\\uD83D\\uDC66|\\uD83D\\uDC69\\u200D\\uD83D\\uDC67|\\uD83C\\uDDFD\\uD83C\\uDDF0|\\uD83C\\uDDF4\\uD83C\\uDDF2|\\uD83C\\uDDF6\\uD83C\\uDDE6|[#\\*0-9]\\uFE0F\\u20E3|\\uD83C\\uDDE7(?:\\uD83C[\\uDDE6\\uDDE7\\uDDE9-\\uDDEF\\uDDF1-\\uDDF4\\uDDF6-\\uDDF9\\uDDFB\\uDDFC\\uDDFE\\uDDFF])|\\uD83C\\uDDF9(?:\\uD83C[\\uDDE6\\uDDE8\\uDDE9\\uDDEB-\\uDDED\\uDDEF-\\uDDF4\\uDDF7\\uDDF9\\uDDFB\\uDDFC\\uDDFF])|\\uD83C\\uDDEA(?:\\uD83C[\\uDDE6\\uDDE8\\uDDEA\\uDDEC\\uDDED\\uDDF7-\\uDDFA])|\\uD83E\\uDDD1(?:\\uD83C[\\uDFFB-\\uDFFF])|\\uD83C\\uDDF7(?:\\uD83C[\\uDDEA\\uDDF4\\uDDF8\\uDDFA\\uDDFC])|\\uD83D\\uDC69(?:\\uD83C[\\uDFFB-\\uDFFF])|\\uD83C\\uDDF2(?:\\uD83C[\\uDDE6\\uDDE8-\\uDDED\\uDDF0-\\uDDFF])|\\uD83C\\uDDE6(?:\\uD83C[\\uDDE8-\\uDDEC\\uDDEE\\uDDF1\\uDDF2\\uDDF4\\uDDF6-\\uDDFA\\uDDFC\\uDDFD\\uDDFF])|\\uD83C\\uDDF0(?:\\uD83C[\\uDDEA\\uDDEC-\\uDDEE\\uDDF2\\uDDF3\\uDDF5\\uDDF7\\uDDFC\\uDDFE\\uDDFF])|\\uD83C\\uDDED(?:\\uD83C[\\uDDF0\\uDDF2\\uDDF3\\uDDF7\\uDDF9\\uDDFA])|\\uD83C\\uDDE9(?:\\uD83C[\\uDDEA\\uDDEC\\uDDEF\\uDDF0\\uDDF2\\uDDF4\\uDDFF])|\\uD83C\\uDDFE(?:\\uD83C[\\uDDEA\\uDDF9])|\\uD83C\\uDDEC(?:\\uD83C[\\uDDE6\\uDDE7\\uDDE9-\\uDDEE\\uDDF1-\\uDDF3\\uDDF5-\\uDDFA\\uDDFC\\uDDFE])|\\uD83C\\uDDF8(?:\\uD83C[\\uDDE6-\\uDDEA\\uDDEC-\\uDDF4\\uDDF7-\\uDDF9\\uDDFB\\uDDFD-\\uDDFF])|\\uD83C\\uDDEB(?:\\uD83C[\\uDDEE-\\uDDF0\\uDDF2\\uDDF4\\uDDF7])|\\uD83C\\uDDF5(?:\\uD83C[\\uDDE6\\uDDEA-\\uDDED\\uDDF0-\\uDDF3\\uDDF7-\\uDDF9\\uDDFC\\uDDFE])|\\uD83C\\uDDFB(?:\\uD83C[\\uDDE6\\uDDE8\\uDDEA\\uDDEC\\uDDEE\\uDDF3\\uDDFA])|\\uD83C\\uDDF3(?:\\uD83C[\\uDDE6\\uDDE8\\uDDEA-\\uDDEC\\uDDEE\\uDDF1\\uDDF4\\uDDF5\\uDDF7\\uDDFA\\uDDFF])|\\uD83C\\uDDE8(?:\\uD83C[\\uDDE6\\uDDE8\\uDDE9\\uDDEB-\\uDDEE\\uDDF0-\\uDDF5\\uDDF7\\uDDFA-\\uDDFF])|\\uD83C\\uDDF1(?:\\uD83C[\\uDDE6-\\uDDE8\\uDDEE\\uDDF0\\uDDF7-\\uDDFB\\uDDFE])|\\uD83C\\uDDFF(?:\\uD83C[\\uDDE6\\uDDF2\\uDDFC])|\\uD83C\\uDDFC(?:\\uD83C[\\uDDEB\\uDDF8])|\\uD83C\\uDDFA(?:\\uD83C[\\uDDE6\\uDDEC\\uDDF2\\uDDF3\\uDDF8\\uDDFE\\uDDFF])|\\uD83C\\uDDEE(?:\\uD83C[\\uDDE8-\\uDDEA\\uDDF1-\\uDDF4\\uDDF6-\\uDDF9])|\\uD83C\\uDDEF(?:\\uD83C[\\uDDEA\\uDDF2\\uDDF4\\uDDF5])|(?:\\uD83C[\\uDFC3\\uDFC4\\uDFCA]|\\uD83D[\\uDC6E\\uDC71\\uDC73\\uDC77\\uDC81\\uDC82\\uDC86\\uDC87\\uDE45-\\uDE47\\uDE4B\\uDE4D\\uDE4E\\uDEA3\\uDEB4-\\uDEB6]|\\uD83E[\\uDD26\\uDD37-\\uDD39\\uDD3D\\uDD3E\\uDDB8\\uDDB9\\uDDCD-\\uDDCF\\uDDD6-\\uDDDD])(?:\\uD83C[\\uDFFB-\\uDFFF])|(?:\\u26F9|\\uD83C[\\uDFCB\\uDFCC]|\\uD83D\\uDD75)(?:\\uD83C[\\uDFFB-\\uDFFF])|(?:[\\u261D\\u270A-\\u270D]|\\uD83C[\\uDF85\\uDFC2\\uDFC7]|\\uD83D[\\uDC42\\uDC43\\uDC46-\\uDC50\\uDC66\\uDC67\\uDC6B-\\uDC6D\\uDC70\\uDC72\\uDC74-\\uDC76\\uDC78\\uDC7C\\uDC83\\uDC85\\uDCAA\\uDD74\\uDD7A\\uDD90\\uDD95\\uDD96\\uDE4C\\uDE4F\\uDEC0\\uDECC]|\\uD83E[\\uDD0F\\uDD18-\\uDD1C\\uDD1E\\uDD1F\\uDD30-\\uDD36\\uDDB5\\uDDB6\\uDDBB\\uDDD2-\\uDDD5])(?:\\uD83C[\\uDFFB-\\uDFFF])|(?:[\\u231A\\u231B\\u23E9-\\u23EC\\u23F0\\u23F3\\u25FD\\u25FE\\u2614\\u2615\\u2648-\\u2653\\u267F\\u2693\\u26A1\\u26AA\\u26AB\\u26BD\\u26BE\\u26C4\\u26C5\\u26CE\\u26D4\\u26EA\\u26F2\\u26F3\\u26F5\\u26FA\\u26FD\\u2705\\u270A\\u270B\\u2728\\u274C\\u274E\\u2753-\\u2755\\u2757\\u2795-\\u2797\\u27B0\\u27BF\\u2B1B\\u2B1C\\u2B50\\u2B55]|\\uD83C[\\uDC04\\uDCCF\\uDD8E\\uDD91-\\uDD9A\\uDDE6-\\uDDFF\\uDE01\\uDE1A\\uDE2F\\uDE32-\\uDE36\\uDE38-\\uDE3A\\uDE50\\uDE51\\uDF00-\\uDF20\\uDF2D-\\uDF35\\uDF37-\\uDF7C\\uDF7E-\\uDF93\\uDFA0-\\uDFCA\\uDFCF-\\uDFD3\\uDFE0-\\uDFF0\\uDFF4\\uDFF8-\\uDFFF]|\\uD83D[\\uDC00-\\uDC3E\\uDC40\\uDC42-\\uDCFC\\uDCFF-\\uDD3D\\uDD4B-\\uDD4E\\uDD50-\\uDD67\\uDD7A\\uDD95\\uDD96\\uDDA4\\uDDFB-\\uDE4F\\uDE80-\\uDEC5\\uDECC\\uDED0-\\uDED2\\uDED5\\uDEEB\\uDEEC\\uDEF4-\\uDEFA\\uDFE0-\\uDFEB]|\\uD83E[\\uDD0D-\\uDD3A\\uDD3C-\\uDD45\\uDD47-\\uDD71\\uDD73-\\uDD76\\uDD7A-\\uDDA2\\uDDA5-\\uDDAA\\uDDAE-\\uDDCA\\uDDCD-\\uDDFF\\uDE70-\\uDE73\\uDE78-\\uDE7A\\uDE80-\\uDE82\\uDE90-\\uDE95])|(?:[#\\*0-9\\xA9\\xAE\\u203C\\u2049\\u2122\\u2139\\u2194-\\u2199\\u21A9\\u21AA\\u231A\\u231B\\u2328\\u23CF\\u23E9-\\u23F3\\u23F8-\\u23FA\\u24C2\\u25AA\\u25AB\\u25B6\\u25C0\\u25FB-\\u25FE\\u2600-\\u2604\\u260E\\u2611\\u2614\\u2615\\u2618\\u261D\\u2620\\u2622\\u2623\\u2626\\u262A\\u262E\\u262F\\u2638-\\u263A\\u2640\\u2642\\u2648-\\u2653\\u265F\\u2660\\u2663\\u2665\\u2666\\u2668\\u267B\\u267E\\u267F\\u2692-\\u2697\\u2699\\u269B\\u269C\\u26A0\\u26A1\\u26AA\\u26AB\\u26B0\\u26B1\\u26BD\\u26BE\\u26C4\\u26C5\\u26C8\\u26CE\\u26CF\\u26D1\\u26D3\\u26D4\\u26E9\\u26EA\\u26F0-\\u26F5\\u26F7-\\u26FA\\u26FD\\u2702\\u2705\\u2708-\\u270D\\u270F\\u2712\\u2714\\u2716\\u271D\\u2721\\u2728\\u2733\\u2734\\u2744\\u2747\\u274C\\u274E\\u2753-\\u2755\\u2757\\u2763\\u2764\\u2795-\\u2797\\u27A1\\u27B0\\u27BF\\u2934\\u2935\\u2B05-\\u2B07\\u2B1B\\u2B1C\\u2B50\\u2B55\\u3030\\u303D\\u3297\\u3299]|\\uD83C[\\uDC04\\uDCCF\\uDD70\\uDD71\\uDD7E\\uDD7F\\uDD8E\\uDD91-\\uDD9A\\uDDE6-\\uDDFF\\uDE01\\uDE02\\uDE1A\\uDE2F\\uDE32-\\uDE3A\\uDE50\\uDE51\\uDF00-\\uDF21\\uDF24-\\uDF93\\uDF96\\uDF97\\uDF99-\\uDF9B\\uDF9E-\\uDFF0\\uDFF3-\\uDFF5\\uDFF7-\\uDFFF]|\\uD83D[\\uDC00-\\uDCFD\\uDCFF-\\uDD3D\\uDD49-\\uDD4E\\uDD50-\\uDD67\\uDD6F\\uDD70\\uDD73-\\uDD7A\\uDD87\\uDD8A-\\uDD8D\\uDD90\\uDD95\\uDD96\\uDDA4\\uDDA5\\uDDA8\\uDDB1\\uDDB2\\uDDBC\\uDDC2-\\uDDC4\\uDDD1-\\uDDD3\\uDDDC-\\uDDDE\\uDDE1\\uDDE3\\uDDE8\\uDDEF\\uDDF3\\uDDFA-\\uDE4F\\uDE80-\\uDEC5\\uDECB-\\uDED2\\uDED5\\uDEE0-\\uDEE5\\uDEE9\\uDEEB\\uDEEC\\uDEF0\\uDEF3-\\uDEFA\\uDFE0-\\uDFEB]|\\uD83E[\\uDD0D-\\uDD3A\\uDD3C-\\uDD45\\uDD47-\\uDD71\\uDD73-\\uDD76\\uDD7A-\\uDDA2\\uDDA5-\\uDDAA\\uDDAE-\\uDDCA\\uDDCD-\\uDDFF\\uDE70-\\uDE73\\uDE78-\\uDE7A\\uDE80-\\uDE82\\uDE90-\\uDE95])\\uFE0F|(?:[\\u261D\\u26F9\\u270A-\\u270D]|\\uD83C[\\uDF85\\uDFC2-\\uDFC4\\uDFC7\\uDFCA-\\uDFCC]|\\uD83D[\\uDC42\\uDC43\\uDC46-\\uDC50\\uDC66-\\uDC78\\uDC7C\\uDC81-\\uDC83\\uDC85-\\uDC87\\uDC8F\\uDC91\\uDCAA\\uDD74\\uDD75\\uDD7A\\uDD90\\uDD95\\uDD96\\uDE45-\\uDE47\\uDE4B-\\uDE4F\\uDEA3\\uDEB4-\\uDEB6\\uDEC0\\uDECC]|\\uD83E[\\uDD0F\\uDD18-\\uDD1F\\uDD26\\uDD30-\\uDD39\\uDD3C-\\uDD3E\\uDDB5\\uDDB6\\uDDB8\\uDDB9\\uDDBB\\uDDCD-\\uDDCF\\uDDD1-\\uDDDD])/g;\n};\n","'use strict';\nconst stripAnsi = require('strip-ansi');\nconst isFullwidthCodePoint = require('is-fullwidth-code-point');\nconst emojiRegex = require('emoji-regex');\n\nconst stringWidth = string => {\n\tif (typeof string !== 'string' || string.length === 0) {\n\t\treturn 0;\n\t}\n\n\tstring = stripAnsi(string);\n\n\tif (string.length === 0) {\n\t\treturn 0;\n\t}\n\n\tstring = string.replace(emojiRegex(), '  ');\n\n\tlet width = 0;\n\n\tfor (let i = 0; i < string.length; i++) {\n\t\tconst code = string.codePointAt(i);\n\n\t\t// Ignore control characters\n\t\tif (code <= 0x1F || (code >= 0x7F && code <= 0x9F)) {\n\t\t\tcontinue;\n\t\t}\n\n\t\t// Ignore combining characters\n\t\tif (code >= 0x300 && code <= 0x36F) {\n\t\t\tcontinue;\n\t\t}\n\n\t\t// Surrogates\n\t\tif (code > 0xFFFF) {\n\t\t\ti++;\n\t\t}\n\n\t\twidth += isFullwidthCodePoint(code) ? 2 : 1;\n\t}\n\n\treturn width;\n};\n\nmodule.exports = stringWidth;\n// TODO: remove this in the next major version\nmodule.exports.default = stringWidth;\n","/* MIT license */\n/* eslint-disable no-mixed-operators */\nconst cssKeywords = require('color-name');\n\n// NOTE: conversions should only return primitive values (i.e. arrays, or\n//       values that give correct `typeof` results).\n//       do not use box values types (i.e. Number(), String(), etc.)\n\nconst reverseKeywords = {};\nfor (const key of Object.keys(cssKeywords)) {\n\treverseKeywords[cssKeywords[key]] = key;\n}\n\nconst convert = {\n\trgb: {channels: 3, labels: 'rgb'},\n\thsl: {channels: 3, labels: 'hsl'},\n\thsv: {channels: 3, labels: 'hsv'},\n\thwb: {channels: 3, labels: 'hwb'},\n\tcmyk: {channels: 4, labels: 'cmyk'},\n\txyz: {channels: 3, labels: 'xyz'},\n\tlab: {channels: 3, labels: 'lab'},\n\tlch: {channels: 3, labels: 'lch'},\n\thex: {channels: 1, labels: ['hex']},\n\tkeyword: {channels: 1, labels: ['keyword']},\n\tansi16: {channels: 1, labels: ['ansi16']},\n\tansi256: {channels: 1, labels: ['ansi256']},\n\thcg: {channels: 3, labels: ['h', 'c', 'g']},\n\tapple: {channels: 3, labels: ['r16', 'g16', 'b16']},\n\tgray: {channels: 1, labels: ['gray']}\n};\n\nmodule.exports = convert;\n\n// Hide .channels and .labels properties\nfor (const model of Object.keys(convert)) {\n\tif (!('channels' in convert[model])) {\n\t\tthrow new Error('missing channels property: ' + model);\n\t}\n\n\tif (!('labels' in convert[model])) {\n\t\tthrow new Error('missing channel labels property: ' + model);\n\t}\n\n\tif (convert[model].labels.length !== convert[model].channels) {\n\t\tthrow new Error('channel and label counts mismatch: ' + model);\n\t}\n\n\tconst {channels, labels} = convert[model];\n\tdelete convert[model].channels;\n\tdelete convert[model].labels;\n\tObject.defineProperty(convert[model], 'channels', {value: channels});\n\tObject.defineProperty(convert[model], 'labels', {value: labels});\n}\n\nconvert.rgb.hsl = function (rgb) {\n\tconst r = rgb[0] / 255;\n\tconst g = rgb[1] / 255;\n\tconst b = rgb[2] / 255;\n\tconst min = Math.min(r, g, b);\n\tconst max = Math.max(r, g, b);\n\tconst delta = max - min;\n\tlet h;\n\tlet s;\n\n\tif (max === min) {\n\t\th = 0;\n\t} else if (r === max) {\n\t\th = (g - b) / delta;\n\t} else if (g === max) {\n\t\th = 2 + (b - r) / delta;\n\t} else if (b === max) {\n\t\th = 4 + (r - g) / delta;\n\t}\n\n\th = Math.min(h * 60, 360);\n\n\tif (h < 0) {\n\t\th += 360;\n\t}\n\n\tconst l = (min + max) / 2;\n\n\tif (max === min) {\n\t\ts = 0;\n\t} else if (l <= 0.5) {\n\t\ts = delta / (max + min);\n\t} else {\n\t\ts = delta / (2 - max - min);\n\t}\n\n\treturn [h, s * 100, l * 100];\n};\n\nconvert.rgb.hsv = function (rgb) {\n\tlet rdif;\n\tlet gdif;\n\tlet bdif;\n\tlet h;\n\tlet s;\n\n\tconst r = rgb[0] / 255;\n\tconst g = rgb[1] / 255;\n\tconst b = rgb[2] / 255;\n\tconst v = Math.max(r, g, b);\n\tconst diff = v - Math.min(r, g, b);\n\tconst diffc = function (c) {\n\t\treturn (v - c) / 6 / diff + 1 / 2;\n\t};\n\n\tif (diff === 0) {\n\t\th = 0;\n\t\ts = 0;\n\t} else {\n\t\ts = diff / v;\n\t\trdif = diffc(r);\n\t\tgdif = diffc(g);\n\t\tbdif = diffc(b);\n\n\t\tif (r === v) {\n\t\t\th = bdif - gdif;\n\t\t} else if (g === v) {\n\t\t\th = (1 / 3) + rdif - bdif;\n\t\t} else if (b === v) {\n\t\t\th = (2 / 3) + gdif - rdif;\n\t\t}\n\n\t\tif (h < 0) {\n\t\t\th += 1;\n\t\t} else if (h > 1) {\n\t\t\th -= 1;\n\t\t}\n\t}\n\n\treturn [\n\t\th * 360,\n\t\ts * 100,\n\t\tv * 100\n\t];\n};\n\nconvert.rgb.hwb = function (rgb) {\n\tconst r = rgb[0];\n\tconst g = rgb[1];\n\tlet b = rgb[2];\n\tconst h = convert.rgb.hsl(rgb)[0];\n\tconst w = 1 / 255 * Math.min(r, Math.min(g, b));\n\n\tb = 1 - 1 / 255 * Math.max(r, Math.max(g, b));\n\n\treturn [h, w * 100, b * 100];\n};\n\nconvert.rgb.cmyk = function (rgb) {\n\tconst r = rgb[0] / 255;\n\tconst g = rgb[1] / 255;\n\tconst b = rgb[2] / 255;\n\n\tconst k = Math.min(1 - r, 1 - g, 1 - b);\n\tconst c = (1 - r - k) / (1 - k) || 0;\n\tconst m = (1 - g - k) / (1 - k) || 0;\n\tconst y = (1 - b - k) / (1 - k) || 0;\n\n\treturn [c * 100, m * 100, y * 100, k * 100];\n};\n\nfunction comparativeDistance(x, y) {\n\t/*\n\t\tSee https://en.m.wikipedia.org/wiki/Euclidean_distance#Squared_Euclidean_distance\n\t*/\n\treturn (\n\t\t((x[0] - y[0]) ** 2) +\n\t\t((x[1] - y[1]) ** 2) +\n\t\t((x[2] - y[2]) ** 2)\n\t);\n}\n\nconvert.rgb.keyword = function (rgb) {\n\tconst reversed = reverseKeywords[rgb];\n\tif (reversed) {\n\t\treturn reversed;\n\t}\n\n\tlet currentClosestDistance = Infinity;\n\tlet currentClosestKeyword;\n\n\tfor (const keyword of Object.keys(cssKeywords)) {\n\t\tconst value = cssKeywords[keyword];\n\n\t\t// Compute comparative distance\n\t\tconst distance = comparativeDistance(rgb, value);\n\n\t\t// Check if its less, if so set as closest\n\t\tif (distance < currentClosestDistance) {\n\t\t\tcurrentClosestDistance = distance;\n\t\t\tcurrentClosestKeyword = keyword;\n\t\t}\n\t}\n\n\treturn currentClosestKeyword;\n};\n\nconvert.keyword.rgb = function (keyword) {\n\treturn cssKeywords[keyword];\n};\n\nconvert.rgb.xyz = function (rgb) {\n\tlet r = rgb[0] / 255;\n\tlet g = rgb[1] / 255;\n\tlet b = rgb[2] / 255;\n\n\t// Assume sRGB\n\tr = r > 0.04045 ? (((r + 0.055) / 1.055) ** 2.4) : (r / 12.92);\n\tg = g > 0.04045 ? (((g + 0.055) / 1.055) ** 2.4) : (g / 12.92);\n\tb = b > 0.04045 ? (((b + 0.055) / 1.055) ** 2.4) : (b / 12.92);\n\n\tconst x = (r * 0.4124) + (g * 0.3576) + (b * 0.1805);\n\tconst y = (r * 0.2126) + (g * 0.7152) + (b * 0.0722);\n\tconst z = (r * 0.0193) + (g * 0.1192) + (b * 0.9505);\n\n\treturn [x * 100, y * 100, z * 100];\n};\n\nconvert.rgb.lab = function (rgb) {\n\tconst xyz = convert.rgb.xyz(rgb);\n\tlet x = xyz[0];\n\tlet y = xyz[1];\n\tlet z = xyz[2];\n\n\tx /= 95.047;\n\ty /= 100;\n\tz /= 108.883;\n\n\tx = x > 0.008856 ? (x ** (1 / 3)) : (7.787 * x) + (16 / 116);\n\ty = y > 0.008856 ? (y ** (1 / 3)) : (7.787 * y) + (16 / 116);\n\tz = z > 0.008856 ? (z ** (1 / 3)) : (7.787 * z) + (16 / 116);\n\n\tconst l = (116 * y) - 16;\n\tconst a = 500 * (x - y);\n\tconst b = 200 * (y - z);\n\n\treturn [l, a, b];\n};\n\nconvert.hsl.rgb = function (hsl) {\n\tconst h = hsl[0] / 360;\n\tconst s = hsl[1] / 100;\n\tconst l = hsl[2] / 100;\n\tlet t2;\n\tlet t3;\n\tlet val;\n\n\tif (s === 0) {\n\t\tval = l * 255;\n\t\treturn [val, val, val];\n\t}\n\n\tif (l < 0.5) {\n\t\tt2 = l * (1 + s);\n\t} else {\n\t\tt2 = l + s - l * s;\n\t}\n\n\tconst t1 = 2 * l - t2;\n\n\tconst rgb = [0, 0, 0];\n\tfor (let i = 0; i < 3; i++) {\n\t\tt3 = h + 1 / 3 * -(i - 1);\n\t\tif (t3 < 0) {\n\t\t\tt3++;\n\t\t}\n\n\t\tif (t3 > 1) {\n\t\t\tt3--;\n\t\t}\n\n\t\tif (6 * t3 < 1) {\n\t\t\tval = t1 + (t2 - t1) * 6 * t3;\n\t\t} else if (2 * t3 < 1) {\n\t\t\tval = t2;\n\t\t} else if (3 * t3 < 2) {\n\t\t\tval = t1 + (t2 - t1) * (2 / 3 - t3) * 6;\n\t\t} else {\n\t\t\tval = t1;\n\t\t}\n\n\t\trgb[i] = val * 255;\n\t}\n\n\treturn rgb;\n};\n\nconvert.hsl.hsv = function (hsl) {\n\tconst h = hsl[0];\n\tlet s = hsl[1] / 100;\n\tlet l = hsl[2] / 100;\n\tlet smin = s;\n\tconst lmin = Math.max(l, 0.01);\n\n\tl *= 2;\n\ts *= (l <= 1) ? l : 2 - l;\n\tsmin *= lmin <= 1 ? lmin : 2 - lmin;\n\tconst v = (l + s) / 2;\n\tconst sv = l === 0 ? (2 * smin) / (lmin + smin) : (2 * s) / (l + s);\n\n\treturn [h, sv * 100, v * 100];\n};\n\nconvert.hsv.rgb = function (hsv) {\n\tconst h = hsv[0] / 60;\n\tconst s = hsv[1] / 100;\n\tlet v = hsv[2] / 100;\n\tconst hi = Math.floor(h) % 6;\n\n\tconst f = h - Math.floor(h);\n\tconst p = 255 * v * (1 - s);\n\tconst q = 255 * v * (1 - (s * f));\n\tconst t = 255 * v * (1 - (s * (1 - f)));\n\tv *= 255;\n\n\tswitch (hi) {\n\t\tcase 0:\n\t\t\treturn [v, t, p];\n\t\tcase 1:\n\t\t\treturn [q, v, p];\n\t\tcase 2:\n\t\t\treturn [p, v, t];\n\t\tcase 3:\n\t\t\treturn [p, q, v];\n\t\tcase 4:\n\t\t\treturn [t, p, v];\n\t\tcase 5:\n\t\t\treturn [v, p, q];\n\t}\n};\n\nconvert.hsv.hsl = function (hsv) {\n\tconst h = hsv[0];\n\tconst s = hsv[1] / 100;\n\tconst v = hsv[2] / 100;\n\tconst vmin = Math.max(v, 0.01);\n\tlet sl;\n\tlet l;\n\n\tl = (2 - s) * v;\n\tconst lmin = (2 - s) * vmin;\n\tsl = s * vmin;\n\tsl /= (lmin <= 1) ? lmin : 2 - lmin;\n\tsl = sl || 0;\n\tl /= 2;\n\n\treturn [h, sl * 100, l * 100];\n};\n\n// http://dev.w3.org/csswg/css-color/#hwb-to-rgb\nconvert.hwb.rgb = function (hwb) {\n\tconst h = hwb[0] / 360;\n\tlet wh = hwb[1] / 100;\n\tlet bl = hwb[2] / 100;\n\tconst ratio = wh + bl;\n\tlet f;\n\n\t// Wh + bl cant be > 1\n\tif (ratio > 1) {\n\t\twh /= ratio;\n\t\tbl /= ratio;\n\t}\n\n\tconst i = Math.floor(6 * h);\n\tconst v = 1 - bl;\n\tf = 6 * h - i;\n\n\tif ((i & 0x01) !== 0) {\n\t\tf = 1 - f;\n\t}\n\n\tconst n = wh + f * (v - wh); // Linear interpolation\n\n\tlet r;\n\tlet g;\n\tlet b;\n\t/* eslint-disable max-statements-per-line,no-multi-spaces */\n\tswitch (i) {\n\t\tdefault:\n\t\tcase 6:\n\t\tcase 0: r = v;  g = n;  b = wh; break;\n\t\tcase 1: r = n;  g = v;  b = wh; break;\n\t\tcase 2: r = wh; g = v;  b = n; break;\n\t\tcase 3: r = wh; g = n;  b = v; break;\n\t\tcase 4: r = n;  g = wh; b = v; break;\n\t\tcase 5: r = v;  g = wh; b = n; break;\n\t}\n\t/* eslint-enable max-statements-per-line,no-multi-spaces */\n\n\treturn [r * 255, g * 255, b * 255];\n};\n\nconvert.cmyk.rgb = function (cmyk) {\n\tconst c = cmyk[0] / 100;\n\tconst m = cmyk[1] / 100;\n\tconst y = cmyk[2] / 100;\n\tconst k = cmyk[3] / 100;\n\n\tconst r = 1 - Math.min(1, c * (1 - k) + k);\n\tconst g = 1 - Math.min(1, m * (1 - k) + k);\n\tconst b = 1 - Math.min(1, y * (1 - k) + k);\n\n\treturn [r * 255, g * 255, b * 255];\n};\n\nconvert.xyz.rgb = function (xyz) {\n\tconst x = xyz[0] / 100;\n\tconst y = xyz[1] / 100;\n\tconst z = xyz[2] / 100;\n\tlet r;\n\tlet g;\n\tlet b;\n\n\tr = (x * 3.2406) + (y * -1.5372) + (z * -0.4986);\n\tg = (x * -0.9689) + (y * 1.8758) + (z * 0.0415);\n\tb = (x * 0.0557) + (y * -0.2040) + (z * 1.0570);\n\n\t// Assume sRGB\n\tr = r > 0.0031308\n\t\t? ((1.055 * (r ** (1.0 / 2.4))) - 0.055)\n\t\t: r * 12.92;\n\n\tg = g > 0.0031308\n\t\t? ((1.055 * (g ** (1.0 / 2.4))) - 0.055)\n\t\t: g * 12.92;\n\n\tb = b > 0.0031308\n\t\t? ((1.055 * (b ** (1.0 / 2.4))) - 0.055)\n\t\t: b * 12.92;\n\n\tr = Math.min(Math.max(0, r), 1);\n\tg = Math.min(Math.max(0, g), 1);\n\tb = Math.min(Math.max(0, b), 1);\n\n\treturn [r * 255, g * 255, b * 255];\n};\n\nconvert.xyz.lab = function (xyz) {\n\tlet x = xyz[0];\n\tlet y = xyz[1];\n\tlet z = xyz[2];\n\n\tx /= 95.047;\n\ty /= 100;\n\tz /= 108.883;\n\n\tx = x > 0.008856 ? (x ** (1 / 3)) : (7.787 * x) + (16 / 116);\n\ty = y > 0.008856 ? (y ** (1 / 3)) : (7.787 * y) + (16 / 116);\n\tz = z > 0.008856 ? (z ** (1 / 3)) : (7.787 * z) + (16 / 116);\n\n\tconst l = (116 * y) - 16;\n\tconst a = 500 * (x - y);\n\tconst b = 200 * (y - z);\n\n\treturn [l, a, b];\n};\n\nconvert.lab.xyz = function (lab) {\n\tconst l = lab[0];\n\tconst a = lab[1];\n\tconst b = lab[2];\n\tlet x;\n\tlet y;\n\tlet z;\n\n\ty = (l + 16) / 116;\n\tx = a / 500 + y;\n\tz = y - b / 200;\n\n\tconst y2 = y ** 3;\n\tconst x2 = x ** 3;\n\tconst z2 = z ** 3;\n\ty = y2 > 0.008856 ? y2 : (y - 16 / 116) / 7.787;\n\tx = x2 > 0.008856 ? x2 : (x - 16 / 116) / 7.787;\n\tz = z2 > 0.008856 ? z2 : (z - 16 / 116) / 7.787;\n\n\tx *= 95.047;\n\ty *= 100;\n\tz *= 108.883;\n\n\treturn [x, y, z];\n};\n\nconvert.lab.lch = function (lab) {\n\tconst l = lab[0];\n\tconst a = lab[1];\n\tconst b = lab[2];\n\tlet h;\n\n\tconst hr = Math.atan2(b, a);\n\th = hr * 360 / 2 / Math.PI;\n\n\tif (h < 0) {\n\t\th += 360;\n\t}\n\n\tconst c = Math.sqrt(a * a + b * b);\n\n\treturn [l, c, h];\n};\n\nconvert.lch.lab = function (lch) {\n\tconst l = lch[0];\n\tconst c = lch[1];\n\tconst h = lch[2];\n\n\tconst hr = h / 360 * 2 * Math.PI;\n\tconst a = c * Math.cos(hr);\n\tconst b = c * Math.sin(hr);\n\n\treturn [l, a, b];\n};\n\nconvert.rgb.ansi16 = function (args, saturation = null) {\n\tconst [r, g, b] = args;\n\tlet value = saturation === null ? convert.rgb.hsv(args)[2] : saturation; // Hsv -> ansi16 optimization\n\n\tvalue = Math.round(value / 50);\n\n\tif (value === 0) {\n\t\treturn 30;\n\t}\n\n\tlet ansi = 30\n\t\t+ ((Math.round(b / 255) << 2)\n\t\t| (Math.round(g / 255) << 1)\n\t\t| Math.round(r / 255));\n\n\tif (value === 2) {\n\t\tansi += 60;\n\t}\n\n\treturn ansi;\n};\n\nconvert.hsv.ansi16 = function (args) {\n\t// Optimization here; we already know the value and don't need to get\n\t// it converted for us.\n\treturn convert.rgb.ansi16(convert.hsv.rgb(args), args[2]);\n};\n\nconvert.rgb.ansi256 = function (args) {\n\tconst r = args[0];\n\tconst g = args[1];\n\tconst b = args[2];\n\n\t// We use the extended greyscale palette here, with the exception of\n\t// black and white. normal palette only has 4 greyscale shades.\n\tif (r === g && g === b) {\n\t\tif (r < 8) {\n\t\t\treturn 16;\n\t\t}\n\n\t\tif (r > 248) {\n\t\t\treturn 231;\n\t\t}\n\n\t\treturn Math.round(((r - 8) / 247) * 24) + 232;\n\t}\n\n\tconst ansi = 16\n\t\t+ (36 * Math.round(r / 255 * 5))\n\t\t+ (6 * Math.round(g / 255 * 5))\n\t\t+ Math.round(b / 255 * 5);\n\n\treturn ansi;\n};\n\nconvert.ansi16.rgb = function (args) {\n\tlet color = args % 10;\n\n\t// Handle greyscale\n\tif (color === 0 || color === 7) {\n\t\tif (args > 50) {\n\t\t\tcolor += 3.5;\n\t\t}\n\n\t\tcolor = color / 10.5 * 255;\n\n\t\treturn [color, color, color];\n\t}\n\n\tconst mult = (~~(args > 50) + 1) * 0.5;\n\tconst r = ((color & 1) * mult) * 255;\n\tconst g = (((color >> 1) & 1) * mult) * 255;\n\tconst b = (((color >> 2) & 1) * mult) * 255;\n\n\treturn [r, g, b];\n};\n\nconvert.ansi256.rgb = function (args) {\n\t// Handle greyscale\n\tif (args >= 232) {\n\t\tconst c = (args - 232) * 10 + 8;\n\t\treturn [c, c, c];\n\t}\n\n\targs -= 16;\n\n\tlet rem;\n\tconst r = Math.floor(args / 36) / 5 * 255;\n\tconst g = Math.floor((rem = args % 36) / 6) / 5 * 255;\n\tconst b = (rem % 6) / 5 * 255;\n\n\treturn [r, g, b];\n};\n\nconvert.rgb.hex = function (args) {\n\tconst integer = ((Math.round(args[0]) & 0xFF) << 16)\n\t\t+ ((Math.round(args[1]) & 0xFF) << 8)\n\t\t+ (Math.round(args[2]) & 0xFF);\n\n\tconst string = integer.toString(16).toUpperCase();\n\treturn '000000'.substring(string.length) + string;\n};\n\nconvert.hex.rgb = function (args) {\n\tconst match = args.toString(16).match(/[a-f0-9]{6}|[a-f0-9]{3}/i);\n\tif (!match) {\n\t\treturn [0, 0, 0];\n\t}\n\n\tlet colorString = match[0];\n\n\tif (match[0].length === 3) {\n\t\tcolorString = colorString.split('').map(char => {\n\t\t\treturn char + char;\n\t\t}).join('');\n\t}\n\n\tconst integer = parseInt(colorString, 16);\n\tconst r = (integer >> 16) & 0xFF;\n\tconst g = (integer >> 8) & 0xFF;\n\tconst b = integer & 0xFF;\n\n\treturn [r, g, b];\n};\n\nconvert.rgb.hcg = function (rgb) {\n\tconst r = rgb[0] / 255;\n\tconst g = rgb[1] / 255;\n\tconst b = rgb[2] / 255;\n\tconst max = Math.max(Math.max(r, g), b);\n\tconst min = Math.min(Math.min(r, g), b);\n\tconst chroma = (max - min);\n\tlet grayscale;\n\tlet hue;\n\n\tif (chroma < 1) {\n\t\tgrayscale = min / (1 - chroma);\n\t} else {\n\t\tgrayscale = 0;\n\t}\n\n\tif (chroma <= 0) {\n\t\thue = 0;\n\t} else\n\tif (max === r) {\n\t\thue = ((g - b) / chroma) % 6;\n\t} else\n\tif (max === g) {\n\t\thue = 2 + (b - r) / chroma;\n\t} else {\n\t\thue = 4 + (r - g) / chroma;\n\t}\n\n\thue /= 6;\n\thue %= 1;\n\n\treturn [hue * 360, chroma * 100, grayscale * 100];\n};\n\nconvert.hsl.hcg = function (hsl) {\n\tconst s = hsl[1] / 100;\n\tconst l = hsl[2] / 100;\n\n\tconst c = l < 0.5 ? (2.0 * s * l) : (2.0 * s * (1.0 - l));\n\n\tlet f = 0;\n\tif (c < 1.0) {\n\t\tf = (l - 0.5 * c) / (1.0 - c);\n\t}\n\n\treturn [hsl[0], c * 100, f * 100];\n};\n\nconvert.hsv.hcg = function (hsv) {\n\tconst s = hsv[1] / 100;\n\tconst v = hsv[2] / 100;\n\n\tconst c = s * v;\n\tlet f = 0;\n\n\tif (c < 1.0) {\n\t\tf = (v - c) / (1 - c);\n\t}\n\n\treturn [hsv[0], c * 100, f * 100];\n};\n\nconvert.hcg.rgb = function (hcg) {\n\tconst h = hcg[0] / 360;\n\tconst c = hcg[1] / 100;\n\tconst g = hcg[2] / 100;\n\n\tif (c === 0.0) {\n\t\treturn [g * 255, g * 255, g * 255];\n\t}\n\n\tconst pure = [0, 0, 0];\n\tconst hi = (h % 1) * 6;\n\tconst v = hi % 1;\n\tconst w = 1 - v;\n\tlet mg = 0;\n\n\t/* eslint-disable max-statements-per-line */\n\tswitch (Math.floor(hi)) {\n\t\tcase 0:\n\t\t\tpure[0] = 1; pure[1] = v; pure[2] = 0; break;\n\t\tcase 1:\n\t\t\tpure[0] = w; pure[1] = 1; pure[2] = 0; break;\n\t\tcase 2:\n\t\t\tpure[0] = 0; pure[1] = 1; pure[2] = v; break;\n\t\tcase 3:\n\t\t\tpure[0] = 0; pure[1] = w; pure[2] = 1; break;\n\t\tcase 4:\n\t\t\tpure[0] = v; pure[1] = 0; pure[2] = 1; break;\n\t\tdefault:\n\t\t\tpure[0] = 1; pure[1] = 0; pure[2] = w;\n\t}\n\t/* eslint-enable max-statements-per-line */\n\n\tmg = (1.0 - c) * g;\n\n\treturn [\n\t\t(c * pure[0] + mg) * 255,\n\t\t(c * pure[1] + mg) * 255,\n\t\t(c * pure[2] + mg) * 255\n\t];\n};\n\nconvert.hcg.hsv = function (hcg) {\n\tconst c = hcg[1] / 100;\n\tconst g = hcg[2] / 100;\n\n\tconst v = c + g * (1.0 - c);\n\tlet f = 0;\n\n\tif (v > 0.0) {\n\t\tf = c / v;\n\t}\n\n\treturn [hcg[0], f * 100, v * 100];\n};\n\nconvert.hcg.hsl = function (hcg) {\n\tconst c = hcg[1] / 100;\n\tconst g = hcg[2] / 100;\n\n\tconst l = g * (1.0 - c) + 0.5 * c;\n\tlet s = 0;\n\n\tif (l > 0.0 && l < 0.5) {\n\t\ts = c / (2 * l);\n\t} else\n\tif (l >= 0.5 && l < 1.0) {\n\t\ts = c / (2 * (1 - l));\n\t}\n\n\treturn [hcg[0], s * 100, l * 100];\n};\n\nconvert.hcg.hwb = function (hcg) {\n\tconst c = hcg[1] / 100;\n\tconst g = hcg[2] / 100;\n\tconst v = c + g * (1.0 - c);\n\treturn [hcg[0], (v - c) * 100, (1 - v) * 100];\n};\n\nconvert.hwb.hcg = function (hwb) {\n\tconst w = hwb[1] / 100;\n\tconst b = hwb[2] / 100;\n\tconst v = 1 - b;\n\tconst c = v - w;\n\tlet g = 0;\n\n\tif (c < 1) {\n\t\tg = (v - c) / (1 - c);\n\t}\n\n\treturn [hwb[0], c * 100, g * 100];\n};\n\nconvert.apple.rgb = function (apple) {\n\treturn [(apple[0] / 65535) * 255, (apple[1] / 65535) * 255, (apple[2] / 65535) * 255];\n};\n\nconvert.rgb.apple = function (rgb) {\n\treturn [(rgb[0] / 255) * 65535, (rgb[1] / 255) * 65535, (rgb[2] / 255) * 65535];\n};\n\nconvert.gray.rgb = function (args) {\n\treturn [args[0] / 100 * 255, args[0] / 100 * 255, args[0] / 100 * 255];\n};\n\nconvert.gray.hsl = function (args) {\n\treturn [0, 0, args[0]];\n};\n\nconvert.gray.hsv = convert.gray.hsl;\n\nconvert.gray.hwb = function (gray) {\n\treturn [0, 100, gray[0]];\n};\n\nconvert.gray.cmyk = function (gray) {\n\treturn [0, 0, 0, gray[0]];\n};\n\nconvert.gray.lab = function (gray) {\n\treturn [gray[0], 0, 0];\n};\n\nconvert.gray.hex = function (gray) {\n\tconst val = Math.round(gray[0] / 100 * 255) & 0xFF;\n\tconst integer = (val << 16) + (val << 8) + val;\n\n\tconst string = integer.toString(16).toUpperCase();\n\treturn '000000'.substring(string.length) + string;\n};\n\nconvert.rgb.gray = function (rgb) {\n\tconst val = (rgb[0] + rgb[1] + rgb[2]) / 3;\n\treturn [val / 255 * 100];\n};\n","'use strict'\r\n\r\nmodule.exports = {\r\n\t\"aliceblue\": [240, 248, 255],\r\n\t\"antiquewhite\": [250, 235, 215],\r\n\t\"aqua\": [0, 255, 255],\r\n\t\"aquamarine\": [127, 255, 212],\r\n\t\"azure\": [240, 255, 255],\r\n\t\"beige\": [245, 245, 220],\r\n\t\"bisque\": [255, 228, 196],\r\n\t\"black\": [0, 0, 0],\r\n\t\"blanchedalmond\": [255, 235, 205],\r\n\t\"blue\": [0, 0, 255],\r\n\t\"blueviolet\": [138, 43, 226],\r\n\t\"brown\": [165, 42, 42],\r\n\t\"burlywood\": [222, 184, 135],\r\n\t\"cadetblue\": [95, 158, 160],\r\n\t\"chartreuse\": [127, 255, 0],\r\n\t\"chocolate\": [210, 105, 30],\r\n\t\"coral\": [255, 127, 80],\r\n\t\"cornflowerblue\": [100, 149, 237],\r\n\t\"cornsilk\": [255, 248, 220],\r\n\t\"crimson\": [220, 20, 60],\r\n\t\"cyan\": [0, 255, 255],\r\n\t\"darkblue\": [0, 0, 139],\r\n\t\"darkcyan\": [0, 139, 139],\r\n\t\"darkgoldenrod\": [184, 134, 11],\r\n\t\"darkgray\": [169, 169, 169],\r\n\t\"darkgreen\": [0, 100, 0],\r\n\t\"darkgrey\": [169, 169, 169],\r\n\t\"darkkhaki\": [189, 183, 107],\r\n\t\"darkmagenta\": [139, 0, 139],\r\n\t\"darkolivegreen\": [85, 107, 47],\r\n\t\"darkorange\": [255, 140, 0],\r\n\t\"darkorchid\": [153, 50, 204],\r\n\t\"darkred\": [139, 0, 0],\r\n\t\"darksalmon\": [233, 150, 122],\r\n\t\"darkseagreen\": [143, 188, 143],\r\n\t\"darkslateblue\": [72, 61, 139],\r\n\t\"darkslategray\": [47, 79, 79],\r\n\t\"darkslategrey\": [47, 79, 79],\r\n\t\"darkturquoise\": [0, 206, 209],\r\n\t\"darkviolet\": [148, 0, 211],\r\n\t\"deeppink\": [255, 20, 147],\r\n\t\"deepskyblue\": [0, 191, 255],\r\n\t\"dimgray\": [105, 105, 105],\r\n\t\"dimgrey\": [105, 105, 105],\r\n\t\"dodgerblue\": [30, 144, 255],\r\n\t\"firebrick\": [178, 34, 34],\r\n\t\"floralwhite\": [255, 250, 240],\r\n\t\"forestgreen\": [34, 139, 34],\r\n\t\"fuchsia\": [255, 0, 255],\r\n\t\"gainsboro\": [220, 220, 220],\r\n\t\"ghostwhite\": [248, 248, 255],\r\n\t\"gold\": [255, 215, 0],\r\n\t\"goldenrod\": [218, 165, 32],\r\n\t\"gray\": [128, 128, 128],\r\n\t\"green\": [0, 128, 0],\r\n\t\"greenyellow\": [173, 255, 47],\r\n\t\"grey\": [128, 128, 128],\r\n\t\"honeydew\": [240, 255, 240],\r\n\t\"hotpink\": [255, 105, 180],\r\n\t\"indianred\": [205, 92, 92],\r\n\t\"indigo\": [75, 0, 130],\r\n\t\"ivory\": [255, 255, 240],\r\n\t\"khaki\": [240, 230, 140],\r\n\t\"lavender\": [230, 230, 250],\r\n\t\"lavenderblush\": [255, 240, 245],\r\n\t\"lawngreen\": [124, 252, 0],\r\n\t\"lemonchiffon\": [255, 250, 205],\r\n\t\"lightblue\": [173, 216, 230],\r\n\t\"lightcoral\": [240, 128, 128],\r\n\t\"lightcyan\": [224, 255, 255],\r\n\t\"lightgoldenrodyellow\": [250, 250, 210],\r\n\t\"lightgray\": [211, 211, 211],\r\n\t\"lightgreen\": [144, 238, 144],\r\n\t\"lightgrey\": [211, 211, 211],\r\n\t\"lightpink\": [255, 182, 193],\r\n\t\"lightsalmon\": [255, 160, 122],\r\n\t\"lightseagreen\": [32, 178, 170],\r\n\t\"lightskyblue\": [135, 206, 250],\r\n\t\"lightslategray\": [119, 136, 153],\r\n\t\"lightslategrey\": [119, 136, 153],\r\n\t\"lightsteelblue\": [176, 196, 222],\r\n\t\"lightyellow\": [255, 255, 224],\r\n\t\"lime\": [0, 255, 0],\r\n\t\"limegreen\": [50, 205, 50],\r\n\t\"linen\": [250, 240, 230],\r\n\t\"magenta\": [255, 0, 255],\r\n\t\"maroon\": [128, 0, 0],\r\n\t\"mediumaquamarine\": [102, 205, 170],\r\n\t\"mediumblue\": [0, 0, 205],\r\n\t\"mediumorchid\": [186, 85, 211],\r\n\t\"mediumpurple\": [147, 112, 219],\r\n\t\"mediumseagreen\": [60, 179, 113],\r\n\t\"mediumslateblue\": [123, 104, 238],\r\n\t\"mediumspringgreen\": [0, 250, 154],\r\n\t\"mediumturquoise\": [72, 209, 204],\r\n\t\"mediumvioletred\": [199, 21, 133],\r\n\t\"midnightblue\": [25, 25, 112],\r\n\t\"mintcream\": [245, 255, 250],\r\n\t\"mistyrose\": [255, 228, 225],\r\n\t\"moccasin\": [255, 228, 181],\r\n\t\"navajowhite\": [255, 222, 173],\r\n\t\"navy\": [0, 0, 128],\r\n\t\"oldlace\": [253, 245, 230],\r\n\t\"olive\": [128, 128, 0],\r\n\t\"olivedrab\": [107, 142, 35],\r\n\t\"orange\": [255, 165, 0],\r\n\t\"orangered\": [255, 69, 0],\r\n\t\"orchid\": [218, 112, 214],\r\n\t\"palegoldenrod\": [238, 232, 170],\r\n\t\"palegreen\": [152, 251, 152],\r\n\t\"paleturquoise\": [175, 238, 238],\r\n\t\"palevioletred\": [219, 112, 147],\r\n\t\"papayawhip\": [255, 239, 213],\r\n\t\"peachpuff\": [255, 218, 185],\r\n\t\"peru\": [205, 133, 63],\r\n\t\"pink\": [255, 192, 203],\r\n\t\"plum\": [221, 160, 221],\r\n\t\"powderblue\": [176, 224, 230],\r\n\t\"purple\": [128, 0, 128],\r\n\t\"rebeccapurple\": [102, 51, 153],\r\n\t\"red\": [255, 0, 0],\r\n\t\"rosybrown\": [188, 143, 143],\r\n\t\"royalblue\": [65, 105, 225],\r\n\t\"saddlebrown\": [139, 69, 19],\r\n\t\"salmon\": [250, 128, 114],\r\n\t\"sandybrown\": [244, 164, 96],\r\n\t\"seagreen\": [46, 139, 87],\r\n\t\"seashell\": [255, 245, 238],\r\n\t\"sienna\": [160, 82, 45],\r\n\t\"silver\": [192, 192, 192],\r\n\t\"skyblue\": [135, 206, 235],\r\n\t\"slateblue\": [106, 90, 205],\r\n\t\"slategray\": [112, 128, 144],\r\n\t\"slategrey\": [112, 128, 144],\r\n\t\"snow\": [255, 250, 250],\r\n\t\"springgreen\": [0, 255, 127],\r\n\t\"steelblue\": [70, 130, 180],\r\n\t\"tan\": [210, 180, 140],\r\n\t\"teal\": [0, 128, 128],\r\n\t\"thistle\": [216, 191, 216],\r\n\t\"tomato\": [255, 99, 71],\r\n\t\"turquoise\": [64, 224, 208],\r\n\t\"violet\": [238, 130, 238],\r\n\t\"wheat\": [245, 222, 179],\r\n\t\"white\": [255, 255, 255],\r\n\t\"whitesmoke\": [245, 245, 245],\r\n\t\"yellow\": [255, 255, 0],\r\n\t\"yellowgreen\": [154, 205, 50]\r\n};\r\n","const conversions = require('./conversions');\n\n/*\n\tThis function routes a model to all other models.\n\n\tall functions that are routed have a property `.conversion` attached\n\tto the returned synthetic function. This property is an array\n\tof strings, each with the steps in between the 'from' and 'to'\n\tcolor models (inclusive).\n\n\tconversions that are not possible simply are not included.\n*/\n\nfunction buildGraph() {\n\tconst graph = {};\n\t// https://jsperf.com/object-keys-vs-for-in-with-closure/3\n\tconst models = Object.keys(conversions);\n\n\tfor (let len = models.length, i = 0; i < len; i++) {\n\t\tgraph[models[i]] = {\n\t\t\t// http://jsperf.com/1-vs-infinity\n\t\t\t// micro-opt, but this is simple.\n\t\t\tdistance: -1,\n\t\t\tparent: null\n\t\t};\n\t}\n\n\treturn graph;\n}\n\n// https://en.wikipedia.org/wiki/Breadth-first_search\nfunction deriveBFS(fromModel) {\n\tconst graph = buildGraph();\n\tconst queue = [fromModel]; // Unshift -> queue -> pop\n\n\tgraph[fromModel].distance = 0;\n\n\twhile (queue.length) {\n\t\tconst current = queue.pop();\n\t\tconst adjacents = Object.keys(conversions[current]);\n\n\t\tfor (let len = adjacents.length, i = 0; i < len; i++) {\n\t\t\tconst adjacent = adjacents[i];\n\t\t\tconst node = graph[adjacent];\n\n\t\t\tif (node.distance === -1) {\n\t\t\t\tnode.distance = graph[current].distance + 1;\n\t\t\t\tnode.parent = current;\n\t\t\t\tqueue.unshift(adjacent);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn graph;\n}\n\nfunction link(from, to) {\n\treturn function (args) {\n\t\treturn to(from(args));\n\t};\n}\n\nfunction wrapConversion(toModel, graph) {\n\tconst path = [graph[toModel].parent, toModel];\n\tlet fn = conversions[graph[toModel].parent][toModel];\n\n\tlet cur = graph[toModel].parent;\n\twhile (graph[cur].parent) {\n\t\tpath.unshift(graph[cur].parent);\n\t\tfn = link(conversions[graph[cur].parent][cur], fn);\n\t\tcur = graph[cur].parent;\n\t}\n\n\tfn.conversion = path;\n\treturn fn;\n}\n\nmodule.exports = function (fromModel) {\n\tconst graph = deriveBFS(fromModel);\n\tconst conversion = {};\n\n\tconst models = Object.keys(graph);\n\tfor (let len = models.length, i = 0; i < len; i++) {\n\t\tconst toModel = models[i];\n\t\tconst node = graph[toModel];\n\n\t\tif (node.parent === null) {\n\t\t\t// No possible conversion, or this node is the source model.\n\t\t\tcontinue;\n\t\t}\n\n\t\tconversion[toModel] = wrapConversion(toModel, graph);\n\t}\n\n\treturn conversion;\n};\n\n","const conversions = require('./conversions');\nconst route = require('./route');\n\nconst convert = {};\n\nconst models = Object.keys(conversions);\n\nfunction wrapRaw(fn) {\n\tconst wrappedFn = function (...args) {\n\t\tconst arg0 = args[0];\n\t\tif (arg0 === undefined || arg0 === null) {\n\t\t\treturn arg0;\n\t\t}\n\n\t\tif (arg0.length > 1) {\n\t\t\targs = arg0;\n\t\t}\n\n\t\treturn fn(args);\n\t};\n\n\t// Preserve .conversion property if there is one\n\tif ('conversion' in fn) {\n\t\twrappedFn.conversion = fn.conversion;\n\t}\n\n\treturn wrappedFn;\n}\n\nfunction wrapRounded(fn) {\n\tconst wrappedFn = function (...args) {\n\t\tconst arg0 = args[0];\n\n\t\tif (arg0 === undefined || arg0 === null) {\n\t\t\treturn arg0;\n\t\t}\n\n\t\tif (arg0.length > 1) {\n\t\t\targs = arg0;\n\t\t}\n\n\t\tconst result = fn(args);\n\n\t\t// We're assuming the result is an array here.\n\t\t// see notice in conversions.js; don't use box types\n\t\t// in conversion functions.\n\t\tif (typeof result === 'object') {\n\t\t\tfor (let len = result.length, i = 0; i < len; i++) {\n\t\t\t\tresult[i] = Math.round(result[i]);\n\t\t\t}\n\t\t}\n\n\t\treturn result;\n\t};\n\n\t// Preserve .conversion property if there is one\n\tif ('conversion' in fn) {\n\t\twrappedFn.conversion = fn.conversion;\n\t}\n\n\treturn wrappedFn;\n}\n\nmodels.forEach(fromModel => {\n\tconvert[fromModel] = {};\n\n\tObject.defineProperty(convert[fromModel], 'channels', {value: conversions[fromModel].channels});\n\tObject.defineProperty(convert[fromModel], 'labels', {value: conversions[fromModel].labels});\n\n\tconst routes = route(fromModel);\n\tconst routeModels = Object.keys(routes);\n\n\trouteModels.forEach(toModel => {\n\t\tconst fn = routes[toModel];\n\n\t\tconvert[fromModel][toModel] = wrapRounded(fn);\n\t\tconvert[fromModel][toModel].raw = wrapRaw(fn);\n\t});\n});\n\nmodule.exports = convert;\n","'use strict';\n\nconst wrapAnsi16 = (fn, offset) => (...args) => {\n\tconst code = fn(...args);\n\treturn `\\u001B[${code + offset}m`;\n};\n\nconst wrapAnsi256 = (fn, offset) => (...args) => {\n\tconst code = fn(...args);\n\treturn `\\u001B[${38 + offset};5;${code}m`;\n};\n\nconst wrapAnsi16m = (fn, offset) => (...args) => {\n\tconst rgb = fn(...args);\n\treturn `\\u001B[${38 + offset};2;${rgb[0]};${rgb[1]};${rgb[2]}m`;\n};\n\nconst ansi2ansi = n => n;\nconst rgb2rgb = (r, g, b) => [r, g, b];\n\nconst setLazyProperty = (object, property, get) => {\n\tObject.defineProperty(object, property, {\n\t\tget: () => {\n\t\t\tconst value = get();\n\n\t\t\tObject.defineProperty(object, property, {\n\t\t\t\tvalue,\n\t\t\t\tenumerable: true,\n\t\t\t\tconfigurable: true\n\t\t\t});\n\n\t\t\treturn value;\n\t\t},\n\t\tenumerable: true,\n\t\tconfigurable: true\n\t});\n};\n\n/** @type {typeof import('color-convert')} */\nlet colorConvert;\nconst makeDynamicStyles = (wrap, targetSpace, identity, isBackground) => {\n\tif (colorConvert === undefined) {\n\t\tcolorConvert = require('color-convert');\n\t}\n\n\tconst offset = isBackground ? 10 : 0;\n\tconst styles = {};\n\n\tfor (const [sourceSpace, suite] of Object.entries(colorConvert)) {\n\t\tconst name = sourceSpace === 'ansi16' ? 'ansi' : sourceSpace;\n\t\tif (sourceSpace === targetSpace) {\n\t\t\tstyles[name] = wrap(identity, offset);\n\t\t} else if (typeof suite === 'object') {\n\t\t\tstyles[name] = wrap(suite[targetSpace], offset);\n\t\t}\n\t}\n\n\treturn styles;\n};\n\nfunction assembleStyles() {\n\tconst codes = new Map();\n\tconst styles = {\n\t\tmodifier: {\n\t\t\treset: [0, 0],\n\t\t\t// 21 isn't widely supported and 22 does the same thing\n\t\t\tbold: [1, 22],\n\t\t\tdim: [2, 22],\n\t\t\titalic: [3, 23],\n\t\t\tunderline: [4, 24],\n\t\t\tinverse: [7, 27],\n\t\t\thidden: [8, 28],\n\t\t\tstrikethrough: [9, 29]\n\t\t},\n\t\tcolor: {\n\t\t\tblack: [30, 39],\n\t\t\tred: [31, 39],\n\t\t\tgreen: [32, 39],\n\t\t\tyellow: [33, 39],\n\t\t\tblue: [34, 39],\n\t\t\tmagenta: [35, 39],\n\t\t\tcyan: [36, 39],\n\t\t\twhite: [37, 39],\n\n\t\t\t// Bright color\n\t\t\tblackBright: [90, 39],\n\t\t\tredBright: [91, 39],\n\t\t\tgreenBright: [92, 39],\n\t\t\tyellowBright: [93, 39],\n\t\t\tblueBright: [94, 39],\n\t\t\tmagentaBright: [95, 39],\n\t\t\tcyanBright: [96, 39],\n\t\t\twhiteBright: [97, 39]\n\t\t},\n\t\tbgColor: {\n\t\t\tbgBlack: [40, 49],\n\t\t\tbgRed: [41, 49],\n\t\t\tbgGreen: [42, 49],\n\t\t\tbgYellow: [43, 49],\n\t\t\tbgBlue: [44, 49],\n\t\t\tbgMagenta: [45, 49],\n\t\t\tbgCyan: [46, 49],\n\t\t\tbgWhite: [47, 49],\n\n\t\t\t// Bright color\n\t\t\tbgBlackBright: [100, 49],\n\t\t\tbgRedBright: [101, 49],\n\t\t\tbgGreenBright: [102, 49],\n\t\t\tbgYellowBright: [103, 49],\n\t\t\tbgBlueBright: [104, 49],\n\t\t\tbgMagentaBright: [105, 49],\n\t\t\tbgCyanBright: [106, 49],\n\t\t\tbgWhiteBright: [107, 49]\n\t\t}\n\t};\n\n\t// Alias bright black as gray (and grey)\n\tstyles.color.gray = styles.color.blackBright;\n\tstyles.bgColor.bgGray = styles.bgColor.bgBlackBright;\n\tstyles.color.grey = styles.color.blackBright;\n\tstyles.bgColor.bgGrey = styles.bgColor.bgBlackBright;\n\n\tfor (const [groupName, group] of Object.entries(styles)) {\n\t\tfor (const [styleName, style] of Object.entries(group)) {\n\t\t\tstyles[styleName] = {\n\t\t\t\topen: `\\u001B[${style[0]}m`,\n\t\t\t\tclose: `\\u001B[${style[1]}m`\n\t\t\t};\n\n\t\t\tgroup[styleName] = styles[styleName];\n\n\t\t\tcodes.set(style[0], style[1]);\n\t\t}\n\n\t\tObject.defineProperty(styles, groupName, {\n\t\t\tvalue: group,\n\t\t\tenumerable: false\n\t\t});\n\t}\n\n\tObject.defineProperty(styles, 'codes', {\n\t\tvalue: codes,\n\t\tenumerable: false\n\t});\n\n\tstyles.color.close = '\\u001B[39m';\n\tstyles.bgColor.close = '\\u001B[49m';\n\n\tsetLazyProperty(styles.color, 'ansi', () => makeDynamicStyles(wrapAnsi16, 'ansi16', ansi2ansi, false));\n\tsetLazyProperty(styles.color, 'ansi256', () => makeDynamicStyles(wrapAnsi256, 'ansi256', ansi2ansi, false));\n\tsetLazyProperty(styles.color, 'ansi16m', () => makeDynamicStyles(wrapAnsi16m, 'rgb', rgb2rgb, false));\n\tsetLazyProperty(styles.bgColor, 'ansi', () => makeDynamicStyles(wrapAnsi16, 'ansi16', ansi2ansi, true));\n\tsetLazyProperty(styles.bgColor, 'ansi256', () => makeDynamicStyles(wrapAnsi256, 'ansi256', ansi2ansi, true));\n\tsetLazyProperty(styles.bgColor, 'ansi16m', () => makeDynamicStyles(wrapAnsi16m, 'rgb', rgb2rgb, true));\n\n\treturn styles;\n}\n\n// Make the export immutable\nObject.defineProperty(module, 'exports', {\n\tenumerable: true,\n\tget: assembleStyles\n});\n","'use strict';\nconst stringWidth = require('string-width');\nconst stripAnsi = require('strip-ansi');\nconst ansiStyles = require('ansi-styles');\n\nconst ESCAPES = new Set([\n\t'\\u001B',\n\t'\\u009B'\n]);\n\nconst END_CODE = 39;\n\nconst wrapAnsi = code => `${ESCAPES.values().next().value}[${code}m`;\n\n// Calculate the length of words split on ' ', ignoring\n// the extra characters added by ansi escape codes\nconst wordLengths = string => string.split(' ').map(character => stringWidth(character));\n\n// Wrap a long word across multiple rows\n// Ansi escape codes do not count towards length\nconst wrapWord = (rows, word, columns) => {\n\tconst characters = [...word];\n\n\tlet isInsideEscape = false;\n\tlet visible = stringWidth(stripAnsi(rows[rows.length - 1]));\n\n\tfor (const [index, character] of characters.entries()) {\n\t\tconst characterLength = stringWidth(character);\n\n\t\tif (visible + characterLength <= columns) {\n\t\t\trows[rows.length - 1] += character;\n\t\t} else {\n\t\t\trows.push(character);\n\t\t\tvisible = 0;\n\t\t}\n\n\t\tif (ESCAPES.has(character)) {\n\t\t\tisInsideEscape = true;\n\t\t} else if (isInsideEscape && character === 'm') {\n\t\t\tisInsideEscape = false;\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (isInsideEscape) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tvisible += characterLength;\n\n\t\tif (visible === columns && index < characters.length - 1) {\n\t\t\trows.push('');\n\t\t\tvisible = 0;\n\t\t}\n\t}\n\n\t// It's possible that the last row we copy over is only\n\t// ansi escape characters, handle this edge-case\n\tif (!visible && rows[rows.length - 1].length > 0 && rows.length > 1) {\n\t\trows[rows.length - 2] += rows.pop();\n\t}\n};\n\n// Trims spaces from a string ignoring invisible sequences\nconst stringVisibleTrimSpacesRight = str => {\n\tconst words = str.split(' ');\n\tlet last = words.length;\n\n\twhile (last > 0) {\n\t\tif (stringWidth(words[last - 1]) > 0) {\n\t\t\tbreak;\n\t\t}\n\n\t\tlast--;\n\t}\n\n\tif (last === words.length) {\n\t\treturn str;\n\t}\n\n\treturn words.slice(0, last).join(' ') + words.slice(last).join('');\n};\n\n// The wrap-ansi module can be invoked in either 'hard' or 'soft' wrap mode\n//\n// 'hard' will never allow a string to take up more than columns characters\n//\n// 'soft' allows long words to expand past the column length\nconst exec = (string, columns, options = {}) => {\n\tif (options.trim !== false && string.trim() === '') {\n\t\treturn '';\n\t}\n\n\tlet pre = '';\n\tlet ret = '';\n\tlet escapeCode;\n\n\tconst lengths = wordLengths(string);\n\tlet rows = [''];\n\n\tfor (const [index, word] of string.split(' ').entries()) {\n\t\tif (options.trim !== false) {\n\t\t\trows[rows.length - 1] = rows[rows.length - 1].trimLeft();\n\t\t}\n\n\t\tlet rowLength = stringWidth(rows[rows.length - 1]);\n\n\t\tif (index !== 0) {\n\t\t\tif (rowLength >= columns && (options.wordWrap === false || options.trim === false)) {\n\t\t\t\t// If we start with a new word but the current row length equals the length of the columns, add a new row\n\t\t\t\trows.push('');\n\t\t\t\trowLength = 0;\n\t\t\t}\n\n\t\t\tif (rowLength > 0 || options.trim === false) {\n\t\t\t\trows[rows.length - 1] += ' ';\n\t\t\t\trowLength++;\n\t\t\t}\n\t\t}\n\n\t\t// In 'hard' wrap mode, the length of a line is never allowed to extend past 'columns'\n\t\tif (options.hard && lengths[index] > columns) {\n\t\t\tconst remainingColumns = (columns - rowLength);\n\t\t\tconst breaksStartingThisLine = 1 + Math.floor((lengths[index] - remainingColumns - 1) / columns);\n\t\t\tconst breaksStartingNextLine = Math.floor((lengths[index] - 1) / columns);\n\t\t\tif (breaksStartingNextLine < breaksStartingThisLine) {\n\t\t\t\trows.push('');\n\t\t\t}\n\n\t\t\twrapWord(rows, word, columns);\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (rowLength + lengths[index] > columns && rowLength > 0 && lengths[index] > 0) {\n\t\t\tif (options.wordWrap === false && rowLength < columns) {\n\t\t\t\twrapWord(rows, word, columns);\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\trows.push('');\n\t\t}\n\n\t\tif (rowLength + lengths[index] > columns && options.wordWrap === false) {\n\t\t\twrapWord(rows, word, columns);\n\t\t\tcontinue;\n\t\t}\n\n\t\trows[rows.length - 1] += word;\n\t}\n\n\tif (options.trim !== false) {\n\t\trows = rows.map(stringVisibleTrimSpacesRight);\n\t}\n\n\tpre = rows.join('\\n');\n\n\tfor (const [index, character] of [...pre].entries()) {\n\t\tret += character;\n\n\t\tif (ESCAPES.has(character)) {\n\t\t\tconst code = parseFloat(/\\d[^m]*/.exec(pre.slice(index, index + 4)));\n\t\t\tescapeCode = code === END_CODE ? null : code;\n\t\t}\n\n\t\tconst code = ansiStyles.codes.get(Number(escapeCode));\n\n\t\tif (escapeCode && code) {\n\t\t\tif (pre[index + 1] === '\\n') {\n\t\t\t\tret += wrapAnsi(code);\n\t\t\t} else if (character === '\\n') {\n\t\t\t\tret += wrapAnsi(escapeCode);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn ret;\n};\n\n// For each newline, invoke the method separately\nmodule.exports = (string, columns, options) => {\n\treturn String(string)\n\t\t.normalize()\n\t\t.replace(/\\r\\n/g, '\\n')\n\t\t.split('\\n')\n\t\t.map(line => exec(line, columns, options))\n\t\t.join('\\n');\n};\n","import cliWidth from 'cli-width';\nimport wrapAnsi from 'wrap-ansi';\nimport { readline } from \"./hook-engine.js\";\n/**\n * Force line returns at specific width. This function is ANSI code friendly and it'll\n * ignore invisible codes during width calculation.\n * @param {string} content\n * @param {number} width\n * @return {string}\n */\nexport function breakLines(content, width) {\n    return content\n        .split('\\n')\n        .flatMap((line) => wrapAnsi(line, width, { trim: false, hard: true })\n        .split('\\n')\n        .map((str) => str.trimEnd()))\n        .join('\\n');\n}\n/**\n * Returns the width of the active readline, or 80 as default value.\n * @returns {number}\n */\nexport function readlineWidth() {\n    return cliWidth({ defaultWidth: 80, output: readline().output });\n}\n","import { useRef } from \"../use-ref.js\";\nimport { readlineWidth, breakLines } from \"../utils.js\";\nfunction usePointerPosition({ active, renderedItems, pageSize, loop, }) {\n    const state = useRef({\n        lastPointer: active,\n        lastActive: undefined,\n    });\n    const { lastPointer, lastActive } = state.current;\n    const middle = Math.floor(pageSize / 2);\n    const renderedLength = renderedItems.reduce((acc, item) => acc + item.length, 0);\n    const defaultPointerPosition = renderedItems\n        .slice(0, active)\n        .reduce((acc, item) => acc + item.length, 0);\n    let pointer = defaultPointerPosition;\n    if (renderedLength > pageSize) {\n        if (loop) {\n            /**\n             * Creates the next position for the pointer considering an infinitely\n             * looping list of items to be rendered on the page.\n             *\n             * The goal is to progressively move the cursor to the middle position as the user move down, and then keep\n             * the cursor there. When the user move up, maintain the cursor position.\n             */\n            // By default, keep the cursor position as-is.\n            pointer = lastPointer;\n            if (\n            // First render, skip this logic.\n            lastActive != null &&\n                // Only move the pointer down when the user moves down.\n                lastActive < active &&\n                // Check user didn't move up across page boundary.\n                active - lastActive < pageSize) {\n                pointer = Math.min(\n                // Furthest allowed position for the pointer is the middle of the list\n                middle, Math.abs(active - lastActive) === 1\n                    ? Math.min(\n                    // Move the pointer at most the height of the last active item.\n                    lastPointer + (renderedItems[lastActive]?.length ?? 0), \n                    // If the user moved by one item, move the pointer to the natural position of the active item as\n                    // long as it doesn't move the cursor up.\n                    Math.max(defaultPointerPosition, lastPointer))\n                    : // Otherwise, move the pointer down by the difference between the active and last active item.\n                        lastPointer + active - lastActive);\n            }\n        }\n        else {\n            /**\n             * Creates the next position for the pointer considering a finite list of\n             * items to be rendered on a page.\n             *\n             * The goal is to keep the pointer in the middle of the page whenever possible, until\n             * we reach the bounds of the list (top or bottom). In which case, the cursor moves progressively\n             * to the bottom or top of the list.\n             */\n            const spaceUnderActive = renderedItems\n                .slice(active)\n                .reduce((acc, item) => acc + item.length, 0);\n            pointer =\n                spaceUnderActive < pageSize - middle\n                    ? // If the active item is near the end of the list, progressively move the cursor towards the end.\n                        pageSize - spaceUnderActive\n                    : // Otherwise, progressively move the pointer to the middle of the list.\n                        Math.min(defaultPointerPosition, middle);\n        }\n    }\n    // Save state for the next render\n    state.current.lastPointer = pointer;\n    state.current.lastActive = active;\n    return pointer;\n}\nexport function usePagination({ items, active, renderItem, pageSize, loop = true, }) {\n    const width = readlineWidth();\n    const bound = (num) => ((num % items.length) + items.length) % items.length;\n    const renderedItems = items.map((item, index) => {\n        if (item == null)\n            return [];\n        return breakLines(renderItem({ item, index, isActive: index === active }), width).split('\\n');\n    });\n    const renderedLength = renderedItems.reduce((acc, item) => acc + item.length, 0);\n    const renderItemAtIndex = (index) => renderedItems[index] ?? [];\n    const pointer = usePointerPosition({ active, renderedItems, pageSize, loop });\n    // Render the active item to decide the position.\n    // If the active item fits under the pointer, we render it there.\n    // Otherwise, we need to render it to fit at the bottom of the page; moving the pointer up.\n    const activeItem = renderItemAtIndex(active).slice(0, pageSize);\n    const activeItemPosition = pointer + activeItem.length <= pageSize ? pointer : pageSize - activeItem.length;\n    // Create an array of lines for the page, and add the lines of the active item into the page\n    const pageBuffer = Array.from({ length: pageSize });\n    pageBuffer.splice(activeItemPosition, activeItem.length, ...activeItem);\n    // Store to prevent rendering the same item twice\n    const itemVisited = new Set([active]);\n    // Fill the page under the active item\n    let bufferPointer = activeItemPosition + activeItem.length;\n    let itemPointer = bound(active + 1);\n    while (bufferPointer < pageSize &&\n        !itemVisited.has(itemPointer) &&\n        (loop && renderedLength > pageSize ? itemPointer !== active : itemPointer > active)) {\n        const lines = renderItemAtIndex(itemPointer);\n        const linesToAdd = lines.slice(0, pageSize - bufferPointer);\n        pageBuffer.splice(bufferPointer, linesToAdd.length, ...linesToAdd);\n        // Move pointers for next iteration\n        itemVisited.add(itemPointer);\n        bufferPointer += linesToAdd.length;\n        itemPointer = bound(itemPointer + 1);\n    }\n    // Fill the page over the active item\n    bufferPointer = activeItemPosition - 1;\n    itemPointer = bound(active - 1);\n    while (bufferPointer >= 0 &&\n        !itemVisited.has(itemPointer) &&\n        (loop && renderedLength > pageSize ? itemPointer !== active : itemPointer < active)) {\n        const lines = renderItemAtIndex(itemPointer);\n        const linesToAdd = lines.slice(Math.max(0, lines.length - bufferPointer - 1));\n        pageBuffer.splice(bufferPointer - linesToAdd.length + 1, linesToAdd.length, ...linesToAdd);\n        // Move pointers for next iteration\n        itemVisited.add(itemPointer);\n        bufferPointer -= linesToAdd.length;\n        itemPointer = bound(itemPointer - 1);\n    }\n    return pageBuffer.filter((line) => typeof line === 'string').join('\\n');\n}\n","const Stream = require('stream')\n\nclass MuteStream extends Stream {\n  #isTTY = null\n\n  constructor (opts = {}) {\n    super(opts)\n    this.writable = this.readable = true\n    this.muted = false\n    this.on('pipe', this._onpipe)\n    this.replace = opts.replace\n\n    // For readline-type situations\n    // This much at the start of a line being redrawn after a ctrl char\n    // is seen (such as backspace) won't be redrawn as the replacement\n    this._prompt = opts.prompt || null\n    this._hadControl = false\n  }\n\n  #destSrc (key, def) {\n    if (this._dest) {\n      return this._dest[key]\n    }\n    if (this._src) {\n      return this._src[key]\n    }\n    return def\n  }\n\n  #proxy (method, ...args) {\n    if (typeof this._dest?.[method] === 'function') {\n      this._dest[method](...args)\n    }\n    if (typeof this._src?.[method] === 'function') {\n      this._src[method](...args)\n    }\n  }\n\n  get isTTY () {\n    if (this.#isTTY !== null) {\n      return this.#isTTY\n    }\n    return this.#destSrc('isTTY', false)\n  }\n\n  // basically just get replace the getter/setter with a regular value\n  set isTTY (val) {\n    this.#isTTY = val\n  }\n\n  get rows () {\n    return this.#destSrc('rows')\n  }\n\n  get columns () {\n    return this.#destSrc('columns')\n  }\n\n  mute () {\n    this.muted = true\n  }\n\n  unmute () {\n    this.muted = false\n  }\n\n  _onpipe (src) {\n    this._src = src\n  }\n\n  pipe (dest, options) {\n    this._dest = dest\n    return super.pipe(dest, options)\n  }\n\n  pause () {\n    if (this._src) {\n      return this._src.pause()\n    }\n  }\n\n  resume () {\n    if (this._src) {\n      return this._src.resume()\n    }\n  }\n\n  write (c) {\n    if (this.muted) {\n      if (!this.replace) {\n        return true\n      }\n      // eslint-disable-next-line no-control-regex\n      if (c.match(/^\\u001b/)) {\n        if (c.indexOf(this._prompt) === 0) {\n          c = c.slice(this._prompt.length)\n          c = c.replace(/./g, this.replace)\n          c = this._prompt + c\n        }\n        this._hadControl = true\n        return this.emit('data', c)\n      } else {\n        if (this._prompt && this._hadControl &&\n          c.indexOf(this._prompt) === 0) {\n          this._hadControl = false\n          this.emit('data', this._prompt)\n          c = c.slice(this._prompt.length)\n        }\n        c = c.toString().replace(/./g, this.replace)\n      }\n    }\n    this.emit('data', c)\n  }\n\n  end (c) {\n    if (this.muted) {\n      if (c && this.replace) {\n        c = c.toString().replace(/./g, this.replace)\n      } else {\n        c = null\n      }\n    }\n    if (c) {\n      this.emit('data', c)\n    }\n    this.emit('end')\n  }\n\n  destroy (...args) {\n    return this.#proxy('destroy', ...args)\n  }\n\n  destroySoon (...args) {\n    return this.#proxy('destroySoon', ...args)\n  }\n\n  close (...args) {\n    return this.#proxy('close', ...args)\n  }\n}\n\nmodule.exports = MuteStream\n","/**\n * This is not the set of all possible signals.\n *\n * It IS, however, the set of all signals that trigger\n * an exit on either Linux or BSD systems.  Linux is a\n * superset of the signal names supported on BSD, and\n * the unknown signals just fail to register, so we can\n * catch that easily enough.\n *\n * Windows signals are a different set, since there are\n * signals that terminate Windows processes, but don't\n * terminate (or don't even exist) on Posix systems.\n *\n * Don't bother with SIGKILL.  It's uncatchable, which\n * means that we can't fire any callbacks anyway.\n *\n * If a user does happen to register a handler on a non-\n * fatal signal like SIGWINCH or something, and then\n * exit, it'll end up firing `process.emit('exit')`, so\n * the handler will be fired anyway.\n *\n * SIGBUS, SIGFPE, SIGSEGV and SIGILL, when not raised\n * artificially, inherently leave the process in a\n * state from which it is not safe to try and enter JS\n * listeners.\n */\nexport const signals = [];\nsignals.push('SIGHUP', 'SIGINT', 'SIGTERM');\nif (process.platform !== 'win32') {\n    signals.push('SIGALRM', 'SIGABRT', 'SIGVTALRM', 'SIGXCPU', 'SIGXFSZ', 'SIGUSR2', 'SIGTRAP', 'SIGSYS', 'SIGQUIT', 'SIGIOT'\n    // should detect profiler and enable/disable accordingly.\n    // see #21\n    // 'SIGPROF'\n    );\n}\nif (process.platform === 'linux') {\n    signals.push('SIGIO', 'SIGPOLL', 'SIGPWR', 'SIGSTKFLT');\n}\n//# sourceMappingURL=signals.js.map","// Note: since nyc uses this module to output coverage, any lines\n// that are in the direct sync flow of nyc's outputCoverage are\n// ignored, since we can never get coverage for them.\n// grab a reference to node's real process object right away\nimport { signals } from './signals.js';\nexport { signals };\nconst processOk = (process) => !!process &&\n    typeof process === 'object' &&\n    typeof process.removeListener === 'function' &&\n    typeof process.emit === 'function' &&\n    typeof process.reallyExit === 'function' &&\n    typeof process.listeners === 'function' &&\n    typeof process.kill === 'function' &&\n    typeof process.pid === 'number' &&\n    typeof process.on === 'function';\nconst kExitEmitter = Symbol.for('signal-exit emitter');\nconst global = globalThis;\nconst ObjectDefineProperty = Object.defineProperty.bind(Object);\n// teeny special purpose ee\nclass Emitter {\n    emitted = {\n        afterExit: false,\n        exit: false,\n    };\n    listeners = {\n        afterExit: [],\n        exit: [],\n    };\n    count = 0;\n    id = Math.random();\n    constructor() {\n        if (global[kExitEmitter]) {\n            return global[kExitEmitter];\n        }\n        ObjectDefineProperty(global, kExitEmitter, {\n            value: this,\n            writable: false,\n            enumerable: false,\n            configurable: false,\n        });\n    }\n    on(ev, fn) {\n        this.listeners[ev].push(fn);\n    }\n    removeListener(ev, fn) {\n        const list = this.listeners[ev];\n        const i = list.indexOf(fn);\n        /* c8 ignore start */\n        if (i === -1) {\n            return;\n        }\n        /* c8 ignore stop */\n        if (i === 0 && list.length === 1) {\n            list.length = 0;\n        }\n        else {\n            list.splice(i, 1);\n        }\n    }\n    emit(ev, code, signal) {\n        if (this.emitted[ev]) {\n            return false;\n        }\n        this.emitted[ev] = true;\n        let ret = false;\n        for (const fn of this.listeners[ev]) {\n            ret = fn(code, signal) === true || ret;\n        }\n        if (ev === 'exit') {\n            ret = this.emit('afterExit', code, signal) || ret;\n        }\n        return ret;\n    }\n}\nclass SignalExitBase {\n}\nconst signalExitWrap = (handler) => {\n    return {\n        onExit(cb, opts) {\n            return handler.onExit(cb, opts);\n        },\n        load() {\n            return handler.load();\n        },\n        unload() {\n            return handler.unload();\n        },\n    };\n};\nclass SignalExitFallback extends SignalExitBase {\n    onExit() {\n        return () => { };\n    }\n    load() { }\n    unload() { }\n}\nclass SignalExit extends SignalExitBase {\n    // \"SIGHUP\" throws an `ENOSYS` error on Windows,\n    // so use a supported signal instead\n    /* c8 ignore start */\n    #hupSig = process.platform === 'win32' ? 'SIGINT' : 'SIGHUP';\n    /* c8 ignore stop */\n    #emitter = new Emitter();\n    #process;\n    #originalProcessEmit;\n    #originalProcessReallyExit;\n    #sigListeners = {};\n    #loaded = false;\n    constructor(process) {\n        super();\n        this.#process = process;\n        // { <signal>: <listener fn>, ... }\n        this.#sigListeners = {};\n        for (const sig of signals) {\n            this.#sigListeners[sig] = () => {\n                // If there are no other listeners, an exit is coming!\n                // Simplest way: remove us and then re-send the signal.\n                // We know that this will kill the process, so we can\n                // safely emit now.\n                const listeners = this.#process.listeners(sig);\n                let { count } = this.#emitter;\n                // This is a workaround for the fact that signal-exit v3 and signal\n                // exit v4 are not aware of each other, and each will attempt to let\n                // the other handle it, so neither of them do. To correct this, we\n                // detect if we're the only handler *except* for previous versions\n                // of signal-exit, and increment by the count of listeners it has\n                // created.\n                /* c8 ignore start */\n                const p = process;\n                if (typeof p.__signal_exit_emitter__ === 'object' &&\n                    typeof p.__signal_exit_emitter__.count === 'number') {\n                    count += p.__signal_exit_emitter__.count;\n                }\n                /* c8 ignore stop */\n                if (listeners.length === count) {\n                    this.unload();\n                    const ret = this.#emitter.emit('exit', null, sig);\n                    /* c8 ignore start */\n                    const s = sig === 'SIGHUP' ? this.#hupSig : sig;\n                    if (!ret)\n                        process.kill(process.pid, s);\n                    /* c8 ignore stop */\n                }\n            };\n        }\n        this.#originalProcessReallyExit = process.reallyExit;\n        this.#originalProcessEmit = process.emit;\n    }\n    onExit(cb, opts) {\n        /* c8 ignore start */\n        if (!processOk(this.#process)) {\n            return () => { };\n        }\n        /* c8 ignore stop */\n        if (this.#loaded === false) {\n            this.load();\n        }\n        const ev = opts?.alwaysLast ? 'afterExit' : 'exit';\n        this.#emitter.on(ev, cb);\n        return () => {\n            this.#emitter.removeListener(ev, cb);\n            if (this.#emitter.listeners['exit'].length === 0 &&\n                this.#emitter.listeners['afterExit'].length === 0) {\n                this.unload();\n            }\n        };\n    }\n    load() {\n        if (this.#loaded) {\n            return;\n        }\n        this.#loaded = true;\n        // This is the number of onSignalExit's that are in play.\n        // It's important so that we can count the correct number of\n        // listeners on signals, and don't wait for the other one to\n        // handle it instead of us.\n        this.#emitter.count += 1;\n        for (const sig of signals) {\n            try {\n                const fn = this.#sigListeners[sig];\n                if (fn)\n                    this.#process.on(sig, fn);\n            }\n            catch (_) { }\n        }\n        this.#process.emit = (ev, ...a) => {\n            return this.#processEmit(ev, ...a);\n        };\n        this.#process.reallyExit = (code) => {\n            return this.#processReallyExit(code);\n        };\n    }\n    unload() {\n        if (!this.#loaded) {\n            return;\n        }\n        this.#loaded = false;\n        signals.forEach(sig => {\n            const listener = this.#sigListeners[sig];\n            /* c8 ignore start */\n            if (!listener) {\n                throw new Error('Listener not defined for signal: ' + sig);\n            }\n            /* c8 ignore stop */\n            try {\n                this.#process.removeListener(sig, listener);\n                /* c8 ignore start */\n            }\n            catch (_) { }\n            /* c8 ignore stop */\n        });\n        this.#process.emit = this.#originalProcessEmit;\n        this.#process.reallyExit = this.#originalProcessReallyExit;\n        this.#emitter.count -= 1;\n    }\n    #processReallyExit(code) {\n        /* c8 ignore start */\n        if (!processOk(this.#process)) {\n            return 0;\n        }\n        this.#process.exitCode = code || 0;\n        /* c8 ignore stop */\n        this.#emitter.emit('exit', this.#process.exitCode, null);\n        return this.#originalProcessReallyExit.call(this.#process, this.#process.exitCode);\n    }\n    #processEmit(ev, ...args) {\n        const og = this.#originalProcessEmit;\n        if (ev === 'exit' && processOk(this.#process)) {\n            if (typeof args[0] === 'number') {\n                this.#process.exitCode = args[0];\n                /* c8 ignore start */\n            }\n            /* c8 ignore start */\n            const ret = og.call(this.#process, ev, ...args);\n            /* c8 ignore start */\n            this.#emitter.emit('exit', this.#process.exitCode, null);\n            /* c8 ignore stop */\n            return ret;\n        }\n        else {\n            return og.call(this.#process, ev, ...args);\n        }\n    }\n}\nconst process = globalThis.process;\n// wrap so that we call the method on the actual handler, without\n// exporting it directly.\nexport const { \n/**\n * Called when the process is exiting, whether via signal, explicit\n * exit, or running out of stuff to do.\n *\n * If the global process object is not suitable for instrumentation,\n * then this will be a no-op.\n *\n * Returns a function that may be used to unload signal-exit.\n */\nonExit, \n/**\n * Load the listeners.  Likely you never need to call this, unless\n * doing a rather deep integration with signal-exit functionality.\n * Mostly exposed for the benefit of testing.\n *\n * @internal\n */\nload, \n/**\n * Unload the listeners.  Likely you never need to call this, unless\n * doing a rather deep integration with signal-exit functionality.\n * Mostly exposed for the benefit of testing.\n *\n * @internal\n */\nunload, } = signalExitWrap(processOk(process) ? new SignalExit(process) : new SignalExitFallback());\n//# sourceMappingURL=index.js.map","'use strict';\nconst ansiEscapes = module.exports;\n// TODO: remove this in the next major version\nmodule.exports.default = ansiEscapes;\n\nconst ESC = '\\u001B[';\nconst OSC = '\\u001B]';\nconst BEL = '\\u0007';\nconst SEP = ';';\nconst isTerminalApp = process.env.TERM_PROGRAM === 'Apple_Terminal';\n\nansiEscapes.cursorTo = (x, y) => {\n\tif (typeof x !== 'number') {\n\t\tthrow new TypeError('The `x` argument is required');\n\t}\n\n\tif (typeof y !== 'number') {\n\t\treturn ESC + (x + 1) + 'G';\n\t}\n\n\treturn ESC + (y + 1) + ';' + (x + 1) + 'H';\n};\n\nansiEscapes.cursorMove = (x, y) => {\n\tif (typeof x !== 'number') {\n\t\tthrow new TypeError('The `x` argument is required');\n\t}\n\n\tlet ret = '';\n\n\tif (x < 0) {\n\t\tret += ESC + (-x) + 'D';\n\t} else if (x > 0) {\n\t\tret += ESC + x + 'C';\n\t}\n\n\tif (y < 0) {\n\t\tret += ESC + (-y) + 'A';\n\t} else if (y > 0) {\n\t\tret += ESC + y + 'B';\n\t}\n\n\treturn ret;\n};\n\nansiEscapes.cursorUp = (count = 1) => ESC + count + 'A';\nansiEscapes.cursorDown = (count = 1) => ESC + count + 'B';\nansiEscapes.cursorForward = (count = 1) => ESC + count + 'C';\nansiEscapes.cursorBackward = (count = 1) => ESC + count + 'D';\n\nansiEscapes.cursorLeft = ESC + 'G';\nansiEscapes.cursorSavePosition = isTerminalApp ? '\\u001B7' : ESC + 's';\nansiEscapes.cursorRestorePosition = isTerminalApp ? '\\u001B8' : ESC + 'u';\nansiEscapes.cursorGetPosition = ESC + '6n';\nansiEscapes.cursorNextLine = ESC + 'E';\nansiEscapes.cursorPrevLine = ESC + 'F';\nansiEscapes.cursorHide = ESC + '?25l';\nansiEscapes.cursorShow = ESC + '?25h';\n\nansiEscapes.eraseLines = count => {\n\tlet clear = '';\n\n\tfor (let i = 0; i < count; i++) {\n\t\tclear += ansiEscapes.eraseLine + (i < count - 1 ? ansiEscapes.cursorUp() : '');\n\t}\n\n\tif (count) {\n\t\tclear += ansiEscapes.cursorLeft;\n\t}\n\n\treturn clear;\n};\n\nansiEscapes.eraseEndLine = ESC + 'K';\nansiEscapes.eraseStartLine = ESC + '1K';\nansiEscapes.eraseLine = ESC + '2K';\nansiEscapes.eraseDown = ESC + 'J';\nansiEscapes.eraseUp = ESC + '1J';\nansiEscapes.eraseScreen = ESC + '2J';\nansiEscapes.scrollUp = ESC + 'S';\nansiEscapes.scrollDown = ESC + 'T';\n\nansiEscapes.clearScreen = '\\u001Bc';\n\nansiEscapes.clearTerminal = process.platform === 'win32' ?\n\t`${ansiEscapes.eraseScreen}${ESC}0f` :\n\t// 1. Erases the screen (Only done in case `2` is not supported)\n\t// 2. Erases the whole screen including scrollback buffer\n\t// 3. Moves cursor to the top-left position\n\t// More info: https://www.real-world-systems.com/docs/ANSIcode.html\n\t`${ansiEscapes.eraseScreen}${ESC}3J${ESC}H`;\n\nansiEscapes.beep = BEL;\n\nansiEscapes.link = (text, url) => {\n\treturn [\n\t\tOSC,\n\t\t'8',\n\t\tSEP,\n\t\tSEP,\n\t\turl,\n\t\tBEL,\n\t\ttext,\n\t\tOSC,\n\t\t'8',\n\t\tSEP,\n\t\tSEP,\n\t\tBEL\n\t].join('');\n};\n\nansiEscapes.image = (buffer, options = {}) => {\n\tlet ret = `${OSC}1337;File=inline=1`;\n\n\tif (options.width) {\n\t\tret += `;width=${options.width}`;\n\t}\n\n\tif (options.height) {\n\t\tret += `;height=${options.height}`;\n\t}\n\n\tif (options.preserveAspectRatio === false) {\n\t\tret += ';preserveAspectRatio=0';\n\t}\n\n\treturn ret + ':' + buffer.toString('base64') + BEL;\n};\n\nansiEscapes.iTerm = {\n\tsetCwd: (cwd = process.cwd()) => `${OSC}50;CurrentDir=${cwd}${BEL}`,\n\n\tannotation: (message, options = {}) => {\n\t\tlet ret = `${OSC}1337;`;\n\n\t\tconst hasX = typeof options.x !== 'undefined';\n\t\tconst hasY = typeof options.y !== 'undefined';\n\t\tif ((hasX || hasY) && !(hasX && hasY && typeof options.length !== 'undefined')) {\n\t\t\tthrow new Error('`x`, `y` and `length` must be defined when `x` or `y` is defined');\n\t\t}\n\n\t\tmessage = message.replace(/\\|/g, '');\n\n\t\tret += options.isHidden ? 'AddHiddenAnnotation=' : 'AddAnnotation=';\n\n\t\tif (options.length > 0) {\n\t\t\tret +=\n\t\t\t\t\t(hasX ?\n\t\t\t\t\t\t[message, options.length, options.x, options.y] :\n\t\t\t\t\t\t[options.length, message]).join('|');\n\t\t} else {\n\t\t\tret += message;\n\t\t}\n\n\t\treturn ret + BEL;\n\t}\n};\n","import { stripVTControlCharacters } from 'node:util';\nimport ansiEscapes from 'ansi-escapes';\nimport { breakLines, readlineWidth } from \"./utils.js\";\nconst height = (content) => content.split('\\n').length;\nconst lastLine = (content) => content.split('\\n').pop() ?? '';\nfunction cursorDown(n) {\n    return n > 0 ? ansiEscapes.cursorDown(n) : '';\n}\nexport default class ScreenManager {\n    // These variables are keeping information to allow correct prompt re-rendering\n    height = 0;\n    extraLinesUnderPrompt = 0;\n    cursorPos;\n    rl;\n    constructor(rl) {\n        this.rl = rl;\n        this.cursorPos = rl.getCursorPos();\n    }\n    write(content) {\n        this.rl.output.unmute();\n        this.rl.output.write(content);\n        this.rl.output.mute();\n    }\n    render(content, bottomContent = '') {\n        // Write message to screen and setPrompt to control backspace\n        const promptLine = lastLine(content);\n        const rawPromptLine = stripVTControlCharacters(promptLine);\n        // Remove the rl.line from our prompt. We can't rely on the content of\n        // rl.line (mainly because of the password prompt), so just rely on it's\n        // length.\n        let prompt = rawPromptLine;\n        if (this.rl.line.length > 0) {\n            prompt = prompt.slice(0, -this.rl.line.length);\n        }\n        this.rl.setPrompt(prompt);\n        // SetPrompt will change cursor position, now we can get correct value\n        this.cursorPos = this.rl.getCursorPos();\n        const width = readlineWidth();\n        content = breakLines(content, width);\n        bottomContent = breakLines(bottomContent, width);\n        // Manually insert an extra line if we're at the end of the line.\n        // This prevent the cursor from appearing at the beginning of the\n        // current line.\n        if (rawPromptLine.length % width === 0) {\n            content += '\\n';\n        }\n        let output = content + (bottomContent ? '\\n' + bottomContent : '');\n        /**\n         * Re-adjust the cursor at the correct position.\n         */\n        // We need to consider parts of the prompt under the cursor as part of the bottom\n        // content in order to correctly cleanup and re-render.\n        const promptLineUpDiff = Math.floor(rawPromptLine.length / width) - this.cursorPos.rows;\n        const bottomContentHeight = promptLineUpDiff + (bottomContent ? height(bottomContent) : 0);\n        // Return cursor to the input position (on top of the bottomContent)\n        if (bottomContentHeight > 0)\n            output += ansiEscapes.cursorUp(bottomContentHeight);\n        // Return cursor to the initial left offset.\n        output += ansiEscapes.cursorTo(this.cursorPos.cols);\n        /**\n         * Render and store state for future re-rendering\n         */\n        this.write(cursorDown(this.extraLinesUnderPrompt) +\n            ansiEscapes.eraseLines(this.height) +\n            output);\n        this.extraLinesUnderPrompt = bottomContentHeight;\n        this.height = height(output);\n    }\n    checkCursorPos() {\n        const cursorPos = this.rl.getCursorPos();\n        if (cursorPos.cols !== this.cursorPos.cols) {\n            this.write(ansiEscapes.cursorTo(cursorPos.cols));\n            this.cursorPos = cursorPos;\n        }\n    }\n    done({ clearContent }) {\n        this.rl.setPrompt('');\n        let output = cursorDown(this.extraLinesUnderPrompt);\n        output += clearContent ? ansiEscapes.eraseLines(this.height) : '\\n';\n        output += ansiEscapes.cursorShow;\n        this.write(output);\n        this.rl.close();\n    }\n}\n","// TODO: Remove this class once Node 22 becomes the minimum supported version.\nexport class PromisePolyfill extends Promise {\n    // Available starting from Node 22\n    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise/withResolvers\n    static withResolver() {\n        let resolve;\n        let reject;\n        const promise = new Promise((res, rej) => {\n            resolve = res;\n            reject = rej;\n        });\n        return { promise, resolve: resolve, reject: reject };\n    }\n}\n","import * as readline from 'node:readline';\nimport { AsyncResource } from 'node:async_hooks';\nimport MuteStream from 'mute-stream';\nimport { onExit as onSignalExit } from 'signal-exit';\nimport ScreenManager from \"./screen-manager.js\";\nimport { PromisePolyfill } from \"./promise-polyfill.js\";\nimport { withHooks, effectScheduler } from \"./hook-engine.js\";\nimport { AbortPromptError, CancelPromptError, ExitPromptError } from \"./errors.js\";\nfunction getCallSites() {\n    // eslint-disable-next-line @typescript-eslint/unbound-method\n    const _prepareStackTrace = Error.prepareStackTrace;\n    let result = [];\n    try {\n        Error.prepareStackTrace = (_, callSites) => {\n            const callSitesWithoutCurrent = callSites.slice(1);\n            result = callSitesWithoutCurrent;\n            return callSitesWithoutCurrent;\n        };\n        // eslint-disable-next-line @typescript-eslint/no-unused-expressions\n        new Error().stack;\n    }\n    catch {\n        // An error will occur if the Node flag --frozen-intrinsics is used.\n        // https://nodejs.org/api/cli.html#--frozen-intrinsics\n        return result;\n    }\n    Error.prepareStackTrace = _prepareStackTrace;\n    return result;\n}\nexport function createPrompt(view) {\n    const callSites = getCallSites();\n    const prompt = (config, context = {}) => {\n        // Default `input` to stdin\n        const { input = process.stdin, signal } = context;\n        const cleanups = new Set();\n        // Add mute capabilities to the output\n        const output = new MuteStream();\n        output.pipe(context.output ?? process.stdout);\n        const rl = readline.createInterface({\n            terminal: true,\n            input,\n            output,\n        });\n        const screen = new ScreenManager(rl);\n        const { promise, resolve, reject } = PromisePolyfill.withResolver();\n        const cancel = () => reject(new CancelPromptError());\n        if (signal) {\n            const abort = () => reject(new AbortPromptError({ cause: signal.reason }));\n            if (signal.aborted) {\n                abort();\n                return Object.assign(promise, { cancel });\n            }\n            signal.addEventListener('abort', abort);\n            cleanups.add(() => signal.removeEventListener('abort', abort));\n        }\n        cleanups.add(onSignalExit((code, signal) => {\n            reject(new ExitPromptError(`User force closed the prompt with ${code} ${signal}`));\n        }));\n        // SIGINT must be explicitly handled by the prompt so the ExitPromptError can be handled.\n        // Otherwise, the prompt will stop and in some scenarios never resolve.\n        // Ref issue #1741\n        const sigint = () => reject(new ExitPromptError(`User force closed the prompt with SIGINT`));\n        rl.on('SIGINT', sigint);\n        cleanups.add(() => rl.removeListener('SIGINT', sigint));\n        // Re-renders only happen when the state change; but the readline cursor could change position\n        // and that also requires a re-render (and a manual one because we mute the streams).\n        // We set the listener after the initial workLoop to avoid a double render if render triggered\n        // by a state change sets the cursor to the right position.\n        const checkCursorPos = () => screen.checkCursorPos();\n        rl.input.on('keypress', checkCursorPos);\n        cleanups.add(() => rl.input.removeListener('keypress', checkCursorPos));\n        return withHooks(rl, (cycle) => {\n            // The close event triggers immediately when the user press ctrl+c. SignalExit on the other hand\n            // triggers after the process is done (which happens after timeouts are done triggering.)\n            // We triggers the hooks cleanup phase on rl `close` so active timeouts can be cleared.\n            const hooksCleanup = AsyncResource.bind(() => effectScheduler.clearAll());\n            rl.on('close', hooksCleanup);\n            cleanups.add(() => rl.removeListener('close', hooksCleanup));\n            cycle(() => {\n                try {\n                    const nextView = view(config, (value) => {\n                        setImmediate(() => resolve(value));\n                    });\n                    // Typescript won't allow this, but not all users rely on typescript.\n                    // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\n                    if (nextView === undefined) {\n                        const callerFilename = callSites[1]?.getFileName();\n                        throw new Error(`Prompt functions must return a string.\\n    at ${callerFilename}`);\n                    }\n                    const [content, bottomContent] = typeof nextView === 'string' ? [nextView] : nextView;\n                    screen.render(content, bottomContent);\n                    effectScheduler.run();\n                }\n                catch (error) {\n                    reject(error);\n                }\n            });\n            return Object.assign(promise\n                .then((answer) => {\n                effectScheduler.clearAll();\n                return answer;\n            }, (error) => {\n                effectScheduler.clearAll();\n                throw error;\n            })\n                // Wait for the promise to settle, then cleanup.\n                .finally(() => {\n                cleanups.forEach((cleanup) => cleanup());\n                screen.done({ clearContent: Boolean(context.clearPromptOnDone) });\n                output.end();\n            })\n                // Once cleanup is done, let the expose promise resolve/reject to the internal one.\n                .then(() => promise), { cancel });\n        });\n    };\n    return prompt;\n}\n","import colors from 'yoctocolors-cjs';\nimport figures from '@inquirer/figures';\n/**\n * Separator object\n * Used to space/separate choices group\n */\nexport class Separator {\n    separator = colors.dim(Array.from({ length: 15 }).join(figures.line));\n    type = 'separator';\n    constructor(separator) {\n        if (separator) {\n            this.separator = separator;\n        }\n    }\n    static isSeparator(choice) {\n        return Boolean(choice &&\n            typeof choice === 'object' &&\n            'type' in choice &&\n            choice.type === 'separator');\n    }\n}\n","import { createPrompt, useState, useKeypress, usePrefix, usePagination, useRef, useMemo, makeTheme, isUpKey, isDownKey, isSpaceKey, isNumberKey, isEnterKey, ValidationError, Separator, } from '@inquirer/core';\nimport colors from 'yoctocolors-cjs';\nimport figures from '@inquirer/figures';\nimport ansiEscapes from 'ansi-escapes';\nconst checkboxTheme = {\n    icon: {\n        checked: colors.green(figures.circleFilled),\n        unchecked: figures.circle,\n        cursor: figures.pointer,\n    },\n    style: {\n        disabledChoice: (text) => colors.dim(`- ${text}`),\n        renderSelectedChoices: (selectedChoices) => selectedChoices.map((choice) => choice.short).join(', '),\n        description: (text) => colors.cyan(text),\n    },\n    helpMode: 'auto',\n};\nfunction isSelectable(item) {\n    return !Separator.isSeparator(item) && !item.disabled;\n}\nfunction isChecked(item) {\n    return isSelectable(item) && item.checked;\n}\nfunction toggle(item) {\n    return isSelectable(item) ? { ...item, checked: !item.checked } : item;\n}\nfunction check(checked) {\n    return function (item) {\n        return isSelectable(item) ? { ...item, checked } : item;\n    };\n}\nfunction normalizeChoices(choices) {\n    return choices.map((choice) => {\n        if (Separator.isSeparator(choice))\n            return choice;\n        if (typeof choice === 'string') {\n            return {\n                value: choice,\n                name: choice,\n                short: choice,\n                disabled: false,\n                checked: false,\n            };\n        }\n        const name = choice.name ?? String(choice.value);\n        const normalizedChoice = {\n            value: choice.value,\n            name,\n            short: choice.short ?? name,\n            disabled: choice.disabled ?? false,\n            checked: choice.checked ?? false,\n        };\n        if (choice.description) {\n            normalizedChoice.description = choice.description;\n        }\n        return normalizedChoice;\n    });\n}\nexport default createPrompt((config, done) => {\n    const { instructions, pageSize = 7, loop = true, required, validate = () => true, } = config;\n    const shortcuts = { all: 'a', invert: 'i', ...config.shortcuts };\n    const theme = makeTheme(checkboxTheme, config.theme);\n    const firstRender = useRef(true);\n    const [status, setStatus] = useState('idle');\n    const prefix = usePrefix({ status, theme });\n    const [items, setItems] = useState(normalizeChoices(config.choices));\n    const bounds = useMemo(() => {\n        const first = items.findIndex(isSelectable);\n        const last = items.findLastIndex(isSelectable);\n        if (first === -1) {\n            throw new ValidationError('[checkbox prompt] No selectable choices. All choices are disabled.');\n        }\n        return { first, last };\n    }, [items]);\n    const [active, setActive] = useState(bounds.first);\n    const [showHelpTip, setShowHelpTip] = useState(true);\n    const [errorMsg, setError] = useState();\n    useKeypress(async (key) => {\n        if (isEnterKey(key)) {\n            const selection = items.filter(isChecked);\n            const isValid = await validate([...selection]);\n            if (required && !items.some(isChecked)) {\n                setError('At least one choice must be selected');\n            }\n            else if (isValid === true) {\n                setStatus('done');\n                done(selection.map((choice) => choice.value));\n            }\n            else {\n                setError(isValid || 'You must select a valid value');\n            }\n        }\n        else if (isUpKey(key) || isDownKey(key)) {\n            if (loop ||\n                (isUpKey(key) && active !== bounds.first) ||\n                (isDownKey(key) && active !== bounds.last)) {\n                const offset = isUpKey(key) ? -1 : 1;\n                let next = active;\n                do {\n                    next = (next + offset + items.length) % items.length;\n                } while (!isSelectable(items[next]));\n                setActive(next);\n            }\n        }\n        else if (isSpaceKey(key)) {\n            setError(undefined);\n            setShowHelpTip(false);\n            setItems(items.map((choice, i) => (i === active ? toggle(choice) : choice)));\n        }\n        else if (key.name === shortcuts.all) {\n            const selectAll = items.some((choice) => isSelectable(choice) && !choice.checked);\n            setItems(items.map(check(selectAll)));\n        }\n        else if (key.name === shortcuts.invert) {\n            setItems(items.map(toggle));\n        }\n        else if (isNumberKey(key)) {\n            const selectedIndex = Number(key.name) - 1;\n            // Find the nth item (ignoring separators)\n            let selectableIndex = -1;\n            const position = items.findIndex((item) => {\n                if (Separator.isSeparator(item))\n                    return false;\n                selectableIndex++;\n                return selectableIndex === selectedIndex;\n            });\n            const selectedItem = items[position];\n            if (selectedItem && isSelectable(selectedItem)) {\n                setActive(position);\n                setItems(items.map((choice, i) => (i === position ? toggle(choice) : choice)));\n            }\n        }\n    });\n    const message = theme.style.message(config.message, status);\n    let description;\n    const page = usePagination({\n        items,\n        active,\n        renderItem({ item, isActive }) {\n            if (Separator.isSeparator(item)) {\n                return ` ${item.separator}`;\n            }\n            if (item.disabled) {\n                const disabledLabel = typeof item.disabled === 'string' ? item.disabled : '(disabled)';\n                return theme.style.disabledChoice(`${item.name} ${disabledLabel}`);\n            }\n            if (isActive) {\n                description = item.description;\n            }\n            const checkbox = item.checked ? theme.icon.checked : theme.icon.unchecked;\n            const color = isActive ? theme.style.highlight : (x) => x;\n            const cursor = isActive ? theme.icon.cursor : ' ';\n            return color(`${cursor}${checkbox} ${item.name}`);\n        },\n        pageSize,\n        loop,\n    });\n    if (status === 'done') {\n        const selection = items.filter(isChecked);\n        const answer = theme.style.answer(theme.style.renderSelectedChoices(selection, items));\n        return `${prefix} ${message} ${answer}`;\n    }\n    let helpTipTop = '';\n    let helpTipBottom = '';\n    if (theme.helpMode === 'always' ||\n        (theme.helpMode === 'auto' &&\n            showHelpTip &&\n            (instructions === undefined || instructions))) {\n        if (typeof instructions === 'string') {\n            helpTipTop = instructions;\n        }\n        else {\n            const keys = [\n                `${theme.style.key('space')} to select`,\n                shortcuts.all ? `${theme.style.key(shortcuts.all)} to toggle all` : '',\n                shortcuts.invert\n                    ? `${theme.style.key(shortcuts.invert)} to invert selection`\n                    : '',\n                `and ${theme.style.key('enter')} to proceed`,\n            ];\n            helpTipTop = ` (Press ${keys.filter((key) => key !== '').join(', ')})`;\n        }\n        if (items.length > pageSize &&\n            (theme.helpMode === 'always' ||\n                // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\n                (theme.helpMode === 'auto' && firstRender.current))) {\n            helpTipBottom = `\\n${theme.style.help('(Use arrow keys to reveal more choices)')}`;\n            firstRender.current = false;\n        }\n    }\n    const choiceDescription = description\n        ? `\\n${theme.style.description(description)}`\n        : ``;\n    let error = '';\n    if (errorMsg) {\n        error = `\\n${theme.style.error(errorMsg)}`;\n    }\n    return `${prefix} ${message}${helpTipTop}\\n${page}${helpTipBottom}${choiceDescription}${error}${ansiEscapes.cursorHide}`;\n});\nexport { Separator } from '@inquirer/core';\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = (ctx, rec, confidence) => ({\n    confidence,\n    name: rec.name(ctx),\n    lang: rec.language ? rec.language() : undefined,\n});\n//# sourceMappingURL=match.js.map","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.UTF_32LE = exports.UTF_32BE = exports.UTF_16LE = exports.UTF_16BE = void 0;\nconst match_1 = __importDefault(require(\"../match\"));\nclass UTF_16BE {\n    name() {\n        return 'UTF-16BE';\n    }\n    match(det) {\n        const input = det.rawInput;\n        if (input.length >= 2 &&\n            (input[0] & 0xff) == 0xfe &&\n            (input[1] & 0xff) == 0xff) {\n            return (0, match_1.default)(det, this, 100);\n        }\n        return null;\n    }\n}\nexports.UTF_16BE = UTF_16BE;\nclass UTF_16LE {\n    name() {\n        return 'UTF-16LE';\n    }\n    match(det) {\n        const input = det.rawInput;\n        if (input.length >= 2 &&\n            (input[0] & 0xff) == 0xff &&\n            (input[1] & 0xff) == 0xfe) {\n            if (input.length >= 4 && input[2] == 0x00 && input[3] == 0x00) {\n                return null;\n            }\n            return (0, match_1.default)(det, this, 100);\n        }\n        return null;\n    }\n}\nexports.UTF_16LE = UTF_16LE;\nclass UTF_32 {\n    name() {\n        return 'UTF-32';\n    }\n    getChar(_input, _index) {\n        return -1;\n    }\n    match(det) {\n        let numValid = 0, numInvalid = 0, hasBOM = false, confidence = 0;\n        const limit = (det.rawLen / 4) * 4;\n        const input = det.rawInput;\n        if (limit == 0) {\n            return null;\n        }\n        if (this.getChar(input, 0) == 0x0000feff) {\n            hasBOM = true;\n        }\n        for (let i = 0; i < limit; i += 4) {\n            const ch = this.getChar(input, i);\n            if (ch < 0 || ch >= 0x10ffff || (ch >= 0xd800 && ch <= 0xdfff)) {\n                numInvalid += 1;\n            }\n            else {\n                numValid += 1;\n            }\n        }\n        if (hasBOM && numInvalid == 0) {\n            confidence = 100;\n        }\n        else if (hasBOM && numValid > numInvalid * 10) {\n            confidence = 80;\n        }\n        else if (numValid > 3 && numInvalid == 0) {\n            confidence = 100;\n        }\n        else if (numValid > 0 && numInvalid == 0) {\n            confidence = 80;\n        }\n        else if (numValid > numInvalid * 10) {\n            confidence = 25;\n        }\n        return confidence == 0 ? null : (0, match_1.default)(det, this, confidence);\n    }\n}\nclass UTF_32BE extends UTF_32 {\n    name() {\n        return 'UTF-32BE';\n    }\n    getChar(input, index) {\n        return (((input[index + 0] & 0xff) << 24) |\n            ((input[index + 1] & 0xff) << 16) |\n            ((input[index + 2] & 0xff) << 8) |\n            (input[index + 3] & 0xff));\n    }\n}\nexports.UTF_32BE = UTF_32BE;\nclass UTF_32LE extends UTF_32 {\n    name() {\n        return 'UTF-32LE';\n    }\n    getChar(input, index) {\n        return (((input[index + 3] & 0xff) << 24) |\n            ((input[index + 2] & 0xff) << 16) |\n            ((input[index + 1] & 0xff) << 8) |\n            (input[index + 0] & 0xff));\n    }\n}\nexports.UTF_32LE = UTF_32LE;\n//# sourceMappingURL=unicode.js.map","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.gb_18030 = exports.euc_kr = exports.euc_jp = exports.big5 = exports.sjis = void 0;\nconst match_1 = __importDefault(require(\"../match\"));\nfunction binarySearch(arr, searchValue) {\n    const find = (arr, searchValue, left, right) => {\n        if (right < left)\n            return -1;\n        const mid = Math.floor((left + right) >>> 1);\n        if (searchValue > arr[mid])\n            return find(arr, searchValue, mid + 1, right);\n        if (searchValue < arr[mid])\n            return find(arr, searchValue, left, mid - 1);\n        return mid;\n    };\n    return find(arr, searchValue, 0, arr.length - 1);\n}\nclass IteratedChar {\n    constructor() {\n        this.charValue = 0;\n        this.index = 0;\n        this.nextIndex = 0;\n        this.error = false;\n        this.done = false;\n    }\n    reset() {\n        this.charValue = 0;\n        this.index = -1;\n        this.nextIndex = 0;\n        this.error = false;\n        this.done = false;\n    }\n    nextByte(det) {\n        if (this.nextIndex >= det.rawLen) {\n            this.done = true;\n            return -1;\n        }\n        const byteValue = det.rawInput[this.nextIndex++] & 0x00ff;\n        return byteValue;\n    }\n}\nclass mbcs {\n    constructor() {\n        this.commonChars = [];\n    }\n    name() {\n        return 'mbcs';\n    }\n    match(det) {\n        let doubleByteCharCount = 0, commonCharCount = 0, badCharCount = 0, totalCharCount = 0, confidence = 0;\n        const iter = new IteratedChar();\n        detectBlock: {\n            for (iter.reset(); this.nextChar(iter, det);) {\n                totalCharCount++;\n                if (iter.error) {\n                    badCharCount++;\n                }\n                else {\n                    const cv = iter.charValue & 0xffffffff;\n                    if (cv > 0xff) {\n                        doubleByteCharCount++;\n                        if (this.commonChars != null) {\n                            if (binarySearch(this.commonChars, cv) >= 0) {\n                                commonCharCount++;\n                            }\n                        }\n                    }\n                }\n                if (badCharCount >= 2 && badCharCount * 5 >= doubleByteCharCount) {\n                    break detectBlock;\n                }\n            }\n            if (doubleByteCharCount <= 10 && badCharCount == 0) {\n                if (doubleByteCharCount == 0 && totalCharCount < 10) {\n                    confidence = 0;\n                }\n                else {\n                    confidence = 10;\n                }\n                break detectBlock;\n            }\n            if (doubleByteCharCount < 20 * badCharCount) {\n                confidence = 0;\n                break detectBlock;\n            }\n            if (this.commonChars == null) {\n                confidence = 30 + doubleByteCharCount - 20 * badCharCount;\n                if (confidence > 100) {\n                    confidence = 100;\n                }\n            }\n            else {\n                const maxVal = Math.log(doubleByteCharCount / 4);\n                const scaleFactor = 90.0 / maxVal;\n                confidence = Math.floor(Math.log(commonCharCount + 1) * scaleFactor + 10);\n                confidence = Math.min(confidence, 100);\n            }\n        }\n        return confidence == 0 ? null : (0, match_1.default)(det, this, confidence);\n    }\n    nextChar(_iter, _det) {\n        return true;\n    }\n}\nclass sjis extends mbcs {\n    constructor() {\n        super(...arguments);\n        this.commonChars = [\n            0x8140, 0x8141, 0x8142, 0x8145, 0x815b, 0x8169, 0x816a, 0x8175, 0x8176,\n            0x82a0, 0x82a2, 0x82a4, 0x82a9, 0x82aa, 0x82ab, 0x82ad, 0x82af, 0x82b1,\n            0x82b3, 0x82b5, 0x82b7, 0x82bd, 0x82be, 0x82c1, 0x82c4, 0x82c5, 0x82c6,\n            0x82c8, 0x82c9, 0x82cc, 0x82cd, 0x82dc, 0x82e0, 0x82e7, 0x82e8, 0x82e9,\n            0x82ea, 0x82f0, 0x82f1, 0x8341, 0x8343, 0x834e, 0x834f, 0x8358, 0x835e,\n            0x8362, 0x8367, 0x8375, 0x8376, 0x8389, 0x838a, 0x838b, 0x838d, 0x8393,\n            0x8e96, 0x93fa, 0x95aa,\n        ];\n    }\n    name() {\n        return 'Shift_JIS';\n    }\n    language() {\n        return 'ja';\n    }\n    nextChar(iter, det) {\n        iter.index = iter.nextIndex;\n        iter.error = false;\n        const firstByte = (iter.charValue = iter.nextByte(det));\n        if (firstByte < 0)\n            return false;\n        if (firstByte <= 0x7f || (firstByte > 0xa0 && firstByte <= 0xdf))\n            return true;\n        const secondByte = iter.nextByte(det);\n        if (secondByte < 0)\n            return false;\n        iter.charValue = (firstByte << 8) | secondByte;\n        if (!((secondByte >= 0x40 && secondByte <= 0x7f) ||\n            (secondByte >= 0x80 && secondByte <= 0xff))) {\n            iter.error = true;\n        }\n        return true;\n    }\n}\nexports.sjis = sjis;\nclass big5 extends mbcs {\n    constructor() {\n        super(...arguments);\n        this.commonChars = [\n            0xa140, 0xa141, 0xa142, 0xa143, 0xa147, 0xa149, 0xa175, 0xa176, 0xa440,\n            0xa446, 0xa447, 0xa448, 0xa451, 0xa454, 0xa457, 0xa464, 0xa46a, 0xa46c,\n            0xa477, 0xa4a3, 0xa4a4, 0xa4a7, 0xa4c1, 0xa4ce, 0xa4d1, 0xa4df, 0xa4e8,\n            0xa4fd, 0xa540, 0xa548, 0xa558, 0xa569, 0xa5cd, 0xa5e7, 0xa657, 0xa661,\n            0xa662, 0xa668, 0xa670, 0xa6a8, 0xa6b3, 0xa6b9, 0xa6d3, 0xa6db, 0xa6e6,\n            0xa6f2, 0xa740, 0xa751, 0xa759, 0xa7da, 0xa8a3, 0xa8a5, 0xa8ad, 0xa8d1,\n            0xa8d3, 0xa8e4, 0xa8fc, 0xa9c0, 0xa9d2, 0xa9f3, 0xaa6b, 0xaaba, 0xaabe,\n            0xaacc, 0xaafc, 0xac47, 0xac4f, 0xacb0, 0xacd2, 0xad59, 0xaec9, 0xafe0,\n            0xb0ea, 0xb16f, 0xb2b3, 0xb2c4, 0xb36f, 0xb44c, 0xb44e, 0xb54c, 0xb5a5,\n            0xb5bd, 0xb5d0, 0xb5d8, 0xb671, 0xb7ed, 0xb867, 0xb944, 0xbad8, 0xbb44,\n            0xbba1, 0xbdd1, 0xc2c4, 0xc3b9, 0xc440, 0xc45f,\n        ];\n    }\n    name() {\n        return 'Big5';\n    }\n    language() {\n        return 'zh';\n    }\n    nextChar(iter, det) {\n        iter.index = iter.nextIndex;\n        iter.error = false;\n        const firstByte = (iter.charValue = iter.nextByte(det));\n        if (firstByte < 0)\n            return false;\n        if (firstByte <= 0x7f || firstByte == 0xff)\n            return true;\n        const secondByte = iter.nextByte(det);\n        if (secondByte < 0)\n            return false;\n        iter.charValue = (iter.charValue << 8) | secondByte;\n        if (secondByte < 0x40 || secondByte == 0x7f || secondByte == 0xff)\n            iter.error = true;\n        return true;\n    }\n}\nexports.big5 = big5;\nfunction eucNextChar(iter, det) {\n    iter.index = iter.nextIndex;\n    iter.error = false;\n    let firstByte = 0;\n    let secondByte = 0;\n    let thirdByte = 0;\n    buildChar: {\n        firstByte = iter.charValue = iter.nextByte(det);\n        if (firstByte < 0) {\n            iter.done = true;\n            break buildChar;\n        }\n        if (firstByte <= 0x8d) {\n            break buildChar;\n        }\n        secondByte = iter.nextByte(det);\n        iter.charValue = (iter.charValue << 8) | secondByte;\n        if (firstByte >= 0xa1 && firstByte <= 0xfe) {\n            if (secondByte < 0xa1) {\n                iter.error = true;\n            }\n            break buildChar;\n        }\n        if (firstByte == 0x8e) {\n            if (secondByte < 0xa1) {\n                iter.error = true;\n            }\n            break buildChar;\n        }\n        if (firstByte == 0x8f) {\n            thirdByte = iter.nextByte(det);\n            iter.charValue = (iter.charValue << 8) | thirdByte;\n            if (thirdByte < 0xa1) {\n                iter.error = true;\n            }\n        }\n    }\n    return iter.done == false;\n}\nclass euc_jp extends mbcs {\n    constructor() {\n        super(...arguments);\n        this.commonChars = [\n            0xa1a1, 0xa1a2, 0xa1a3, 0xa1a6, 0xa1bc, 0xa1ca, 0xa1cb, 0xa1d6, 0xa1d7,\n            0xa4a2, 0xa4a4, 0xa4a6, 0xa4a8, 0xa4aa, 0xa4ab, 0xa4ac, 0xa4ad, 0xa4af,\n            0xa4b1, 0xa4b3, 0xa4b5, 0xa4b7, 0xa4b9, 0xa4bb, 0xa4bd, 0xa4bf, 0xa4c0,\n            0xa4c1, 0xa4c3, 0xa4c4, 0xa4c6, 0xa4c7, 0xa4c8, 0xa4c9, 0xa4ca, 0xa4cb,\n            0xa4ce, 0xa4cf, 0xa4d0, 0xa4de, 0xa4df, 0xa4e1, 0xa4e2, 0xa4e4, 0xa4e8,\n            0xa4e9, 0xa4ea, 0xa4eb, 0xa4ec, 0xa4ef, 0xa4f2, 0xa4f3, 0xa5a2, 0xa5a3,\n            0xa5a4, 0xa5a6, 0xa5a7, 0xa5aa, 0xa5ad, 0xa5af, 0xa5b0, 0xa5b3, 0xa5b5,\n            0xa5b7, 0xa5b8, 0xa5b9, 0xa5bf, 0xa5c3, 0xa5c6, 0xa5c7, 0xa5c8, 0xa5c9,\n            0xa5cb, 0xa5d0, 0xa5d5, 0xa5d6, 0xa5d7, 0xa5de, 0xa5e0, 0xa5e1, 0xa5e5,\n            0xa5e9, 0xa5ea, 0xa5eb, 0xa5ec, 0xa5ed, 0xa5f3, 0xb8a9, 0xb9d4, 0xbaee,\n            0xbbc8, 0xbef0, 0xbfb7, 0xc4ea, 0xc6fc, 0xc7bd, 0xcab8, 0xcaf3, 0xcbdc,\n            0xcdd1,\n        ];\n        this.nextChar = eucNextChar;\n    }\n    name() {\n        return 'EUC-JP';\n    }\n    language() {\n        return 'ja';\n    }\n}\nexports.euc_jp = euc_jp;\nclass euc_kr extends mbcs {\n    constructor() {\n        super(...arguments);\n        this.commonChars = [\n            0xb0a1, 0xb0b3, 0xb0c5, 0xb0cd, 0xb0d4, 0xb0e6, 0xb0ed, 0xb0f8, 0xb0fa,\n            0xb0fc, 0xb1b8, 0xb1b9, 0xb1c7, 0xb1d7, 0xb1e2, 0xb3aa, 0xb3bb, 0xb4c2,\n            0xb4cf, 0xb4d9, 0xb4eb, 0xb5a5, 0xb5b5, 0xb5bf, 0xb5c7, 0xb5e9, 0xb6f3,\n            0xb7af, 0xb7c2, 0xb7ce, 0xb8a6, 0xb8ae, 0xb8b6, 0xb8b8, 0xb8bb, 0xb8e9,\n            0xb9ab, 0xb9ae, 0xb9cc, 0xb9ce, 0xb9fd, 0xbab8, 0xbace, 0xbad0, 0xbaf1,\n            0xbbe7, 0xbbf3, 0xbbfd, 0xbcad, 0xbcba, 0xbcd2, 0xbcf6, 0xbdba, 0xbdc0,\n            0xbdc3, 0xbdc5, 0xbec6, 0xbec8, 0xbedf, 0xbeee, 0xbef8, 0xbefa, 0xbfa1,\n            0xbfa9, 0xbfc0, 0xbfe4, 0xbfeb, 0xbfec, 0xbff8, 0xc0a7, 0xc0af, 0xc0b8,\n            0xc0ba, 0xc0bb, 0xc0bd, 0xc0c7, 0xc0cc, 0xc0ce, 0xc0cf, 0xc0d6, 0xc0da,\n            0xc0e5, 0xc0fb, 0xc0fc, 0xc1a4, 0xc1a6, 0xc1b6, 0xc1d6, 0xc1df, 0xc1f6,\n            0xc1f8, 0xc4a1, 0xc5cd, 0xc6ae, 0xc7cf, 0xc7d1, 0xc7d2, 0xc7d8, 0xc7e5,\n            0xc8ad,\n        ];\n        this.nextChar = eucNextChar;\n    }\n    name() {\n        return 'EUC-KR';\n    }\n    language() {\n        return 'ko';\n    }\n}\nexports.euc_kr = euc_kr;\nclass gb_18030 extends mbcs {\n    constructor() {\n        super(...arguments);\n        this.commonChars = [\n            0xa1a1, 0xa1a2, 0xa1a3, 0xa1a4, 0xa1b0, 0xa1b1, 0xa1f1, 0xa1f3, 0xa3a1,\n            0xa3ac, 0xa3ba, 0xb1a8, 0xb1b8, 0xb1be, 0xb2bb, 0xb3c9, 0xb3f6, 0xb4f3,\n            0xb5bd, 0xb5c4, 0xb5e3, 0xb6af, 0xb6d4, 0xb6e0, 0xb7a2, 0xb7a8, 0xb7bd,\n            0xb7d6, 0xb7dd, 0xb8b4, 0xb8df, 0xb8f6, 0xb9ab, 0xb9c9, 0xb9d8, 0xb9fa,\n            0xb9fd, 0xbacd, 0xbba7, 0xbbd6, 0xbbe1, 0xbbfa, 0xbcbc, 0xbcdb, 0xbcfe,\n            0xbdcc, 0xbecd, 0xbedd, 0xbfb4, 0xbfc6, 0xbfc9, 0xc0b4, 0xc0ed, 0xc1cb,\n            0xc2db, 0xc3c7, 0xc4dc, 0xc4ea, 0xc5cc, 0xc6f7, 0xc7f8, 0xc8ab, 0xc8cb,\n            0xc8d5, 0xc8e7, 0xc9cf, 0xc9fa, 0xcab1, 0xcab5, 0xcac7, 0xcad0, 0xcad6,\n            0xcaf5, 0xcafd, 0xccec, 0xcdf8, 0xceaa, 0xcec4, 0xced2, 0xcee5, 0xcfb5,\n            0xcfc2, 0xcfd6, 0xd0c2, 0xd0c5, 0xd0d0, 0xd0d4, 0xd1a7, 0xd2aa, 0xd2b2,\n            0xd2b5, 0xd2bb, 0xd2d4, 0xd3c3, 0xd3d0, 0xd3fd, 0xd4c2, 0xd4da, 0xd5e2,\n            0xd6d0,\n        ];\n    }\n    name() {\n        return 'GB18030';\n    }\n    language() {\n        return 'zh';\n    }\n    nextChar(iter, det) {\n        iter.index = iter.nextIndex;\n        iter.error = false;\n        let firstByte = 0;\n        let secondByte = 0;\n        let thirdByte = 0;\n        let fourthByte = 0;\n        buildChar: {\n            firstByte = iter.charValue = iter.nextByte(det);\n            if (firstByte < 0) {\n                iter.done = true;\n                break buildChar;\n            }\n            if (firstByte <= 0x80) {\n                break buildChar;\n            }\n            secondByte = iter.nextByte(det);\n            iter.charValue = (iter.charValue << 8) | secondByte;\n            if (firstByte >= 0x81 && firstByte <= 0xfe) {\n                if ((secondByte >= 0x40 && secondByte <= 0x7e) ||\n                    (secondByte >= 80 && secondByte <= 0xfe)) {\n                    break buildChar;\n                }\n                if (secondByte >= 0x30 && secondByte <= 0x39) {\n                    thirdByte = iter.nextByte(det);\n                    if (thirdByte >= 0x81 && thirdByte <= 0xfe) {\n                        fourthByte = iter.nextByte(det);\n                        if (fourthByte >= 0x30 && fourthByte <= 0x39) {\n                            iter.charValue =\n                                (iter.charValue << 16) | (thirdByte << 8) | fourthByte;\n                            break buildChar;\n                        }\n                    }\n                }\n                iter.error = true;\n                break buildChar;\n            }\n        }\n        return iter.done == false;\n    }\n}\nexports.gb_18030 = gb_18030;\n//# sourceMappingURL=mbcs.js.map","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.KOI8_R = exports.windows_1256 = exports.windows_1251 = exports.ISO_8859_9 = exports.ISO_8859_8 = exports.ISO_8859_7 = exports.ISO_8859_6 = exports.ISO_8859_5 = exports.ISO_8859_2 = exports.ISO_8859_1 = void 0;\nconst match_1 = __importDefault(require(\"../match\"));\nconst N_GRAM_MASK = 0xffffff;\nclass NGramParser {\n    constructor(theNgramList, theByteMap) {\n        this.byteIndex = 0;\n        this.ngram = 0;\n        this.ngramCount = 0;\n        this.hitCount = 0;\n        this.spaceChar = 0x20;\n        this.ngramList = theNgramList;\n        this.byteMap = theByteMap;\n    }\n    search(table, value) {\n        let index = 0;\n        if (table[index + 32] <= value)\n            index += 32;\n        if (table[index + 16] <= value)\n            index += 16;\n        if (table[index + 8] <= value)\n            index += 8;\n        if (table[index + 4] <= value)\n            index += 4;\n        if (table[index + 2] <= value)\n            index += 2;\n        if (table[index + 1] <= value)\n            index += 1;\n        if (table[index] > value)\n            index -= 1;\n        if (index < 0 || table[index] != value)\n            return -1;\n        return index;\n    }\n    lookup(thisNgram) {\n        this.ngramCount += 1;\n        if (this.search(this.ngramList, thisNgram) >= 0) {\n            this.hitCount += 1;\n        }\n    }\n    addByte(b) {\n        this.ngram = ((this.ngram << 8) + (b & 0xff)) & N_GRAM_MASK;\n        this.lookup(this.ngram);\n    }\n    nextByte(det) {\n        if (this.byteIndex >= det.inputLen)\n            return -1;\n        return det.inputBytes[this.byteIndex++] & 0xff;\n    }\n    parse(det, spaceCh) {\n        let b, ignoreSpace = false;\n        this.spaceChar = spaceCh;\n        while ((b = this.nextByte(det)) >= 0) {\n            const mb = this.byteMap[b];\n            if (mb != 0) {\n                if (!(mb == this.spaceChar && ignoreSpace)) {\n                    this.addByte(mb);\n                }\n                ignoreSpace = mb == this.spaceChar;\n            }\n        }\n        this.addByte(this.spaceChar);\n        const rawPercent = this.hitCount / this.ngramCount;\n        if (rawPercent > 0.33)\n            return 98;\n        return Math.floor(rawPercent * 300.0);\n    }\n}\nclass NGramsPlusLang {\n    constructor(la, ng) {\n        this.fLang = la;\n        this.fNGrams = ng;\n    }\n}\nconst isFlatNgrams = (val) => Array.isArray(val) && isFinite(val[0]);\nclass sbcs {\n    constructor() {\n        this.spaceChar = 0x20;\n        this.nGramLang = undefined;\n    }\n    ngrams() {\n        return [];\n    }\n    byteMap() {\n        return [];\n    }\n    name(_input) {\n        return 'sbcs';\n    }\n    language() {\n        return this.nGramLang;\n    }\n    match(det) {\n        this.nGramLang = undefined;\n        const ngrams = this.ngrams();\n        if (isFlatNgrams(ngrams)) {\n            const parser = new NGramParser(ngrams, this.byteMap());\n            const confidence = parser.parse(det, this.spaceChar);\n            return confidence <= 0 ? null : (0, match_1.default)(det, this, confidence);\n        }\n        let bestConfidence = -1;\n        for (let i = ngrams.length - 1; i >= 0; i--) {\n            const ngl = ngrams[i];\n            const parser = new NGramParser(ngl.fNGrams, this.byteMap());\n            const confidence = parser.parse(det, this.spaceChar);\n            if (confidence > bestConfidence) {\n                bestConfidence = confidence;\n                this.nGramLang = ngl.fLang;\n            }\n        }\n        return bestConfidence <= 0 ? null : (0, match_1.default)(det, this, bestConfidence);\n    }\n}\nclass ISO_8859_1 extends sbcs {\n    byteMap() {\n        return [\n            0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n            0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n            0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n            0x20, 0x20, 0x20, 0x00, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n            0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n            0x20, 0x20, 0x20, 0x20, 0x20, 0x61, 0x62, 0x63, 0x64, 0x65, 0x66, 0x67,\n            0x68, 0x69, 0x6a, 0x6b, 0x6c, 0x6d, 0x6e, 0x6f, 0x70, 0x71, 0x72, 0x73,\n            0x74, 0x75, 0x76, 0x77, 0x78, 0x79, 0x7a, 0x20, 0x20, 0x20, 0x20, 0x20,\n            0x20, 0x61, 0x62, 0x63, 0x64, 0x65, 0x66, 0x67, 0x68, 0x69, 0x6a, 0x6b,\n            0x6c, 0x6d, 0x6e, 0x6f, 0x70, 0x71, 0x72, 0x73, 0x74, 0x75, 0x76, 0x77,\n            0x78, 0x79, 0x7a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n            0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n            0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n            0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n            0x20, 0x20, 0xaa, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n            0x20, 0xb5, 0x20, 0x20, 0x20, 0x20, 0xba, 0x20, 0x20, 0x20, 0x20, 0x20,\n            0xe0, 0xe1, 0xe2, 0xe3, 0xe4, 0xe5, 0xe6, 0xe7, 0xe8, 0xe9, 0xea, 0xeb,\n            0xec, 0xed, 0xee, 0xef, 0xf0, 0xf1, 0xf2, 0xf3, 0xf4, 0xf5, 0xf6, 0x20,\n            0xf8, 0xf9, 0xfa, 0xfb, 0xfc, 0xfd, 0xfe, 0xdf, 0xe0, 0xe1, 0xe2, 0xe3,\n            0xe4, 0xe5, 0xe6, 0xe7, 0xe8, 0xe9, 0xea, 0xeb, 0xec, 0xed, 0xee, 0xef,\n            0xf0, 0xf1, 0xf2, 0xf3, 0xf4, 0xf5, 0xf6, 0x20, 0xf8, 0xf9, 0xfa, 0xfb,\n            0xfc, 0xfd, 0xfe, 0xff,\n        ];\n    }\n    ngrams() {\n        return [\n            new NGramsPlusLang('da', [\n                0x206166, 0x206174, 0x206465, 0x20656e, 0x206572, 0x20666f, 0x206861,\n                0x206920, 0x206d65, 0x206f67, 0x2070e5, 0x207369, 0x207374, 0x207469,\n                0x207669, 0x616620, 0x616e20, 0x616e64, 0x617220, 0x617420, 0x646520,\n                0x64656e, 0x646572, 0x646574, 0x652073, 0x656420, 0x656465, 0x656e20,\n                0x656e64, 0x657220, 0x657265, 0x657320, 0x657420, 0x666f72, 0x676520,\n                0x67656e, 0x676572, 0x696765, 0x696c20, 0x696e67, 0x6b6520, 0x6b6b65,\n                0x6c6572, 0x6c6967, 0x6c6c65, 0x6d6564, 0x6e6465, 0x6e6520, 0x6e6720,\n                0x6e6765, 0x6f6720, 0x6f6d20, 0x6f7220, 0x70e520, 0x722064, 0x722065,\n                0x722073, 0x726520, 0x737465, 0x742073, 0x746520, 0x746572, 0x74696c,\n                0x766572,\n            ]),\n            new NGramsPlusLang('de', [\n                0x20616e, 0x206175, 0x206265, 0x206461, 0x206465, 0x206469, 0x206569,\n                0x206765, 0x206861, 0x20696e, 0x206d69, 0x207363, 0x207365, 0x20756e,\n                0x207665, 0x20766f, 0x207765, 0x207a75, 0x626572, 0x636820, 0x636865,\n                0x636874, 0x646173, 0x64656e, 0x646572, 0x646965, 0x652064, 0x652073,\n                0x65696e, 0x656974, 0x656e20, 0x657220, 0x657320, 0x67656e, 0x68656e,\n                0x687420, 0x696368, 0x696520, 0x696e20, 0x696e65, 0x697420, 0x6c6963,\n                0x6c6c65, 0x6e2061, 0x6e2064, 0x6e2073, 0x6e6420, 0x6e6465, 0x6e6520,\n                0x6e6720, 0x6e6765, 0x6e7465, 0x722064, 0x726465, 0x726569, 0x736368,\n                0x737465, 0x742064, 0x746520, 0x74656e, 0x746572, 0x756e64, 0x756e67,\n                0x766572,\n            ]),\n            new NGramsPlusLang('en', [\n                0x206120, 0x20616e, 0x206265, 0x20636f, 0x20666f, 0x206861, 0x206865,\n                0x20696e, 0x206d61, 0x206f66, 0x207072, 0x207265, 0x207361, 0x207374,\n                0x207468, 0x20746f, 0x207768, 0x616964, 0x616c20, 0x616e20, 0x616e64,\n                0x617320, 0x617420, 0x617465, 0x617469, 0x642061, 0x642074, 0x652061,\n                0x652073, 0x652074, 0x656420, 0x656e74, 0x657220, 0x657320, 0x666f72,\n                0x686174, 0x686520, 0x686572, 0x696420, 0x696e20, 0x696e67, 0x696f6e,\n                0x697320, 0x6e2061, 0x6e2074, 0x6e6420, 0x6e6720, 0x6e7420, 0x6f6620,\n                0x6f6e20, 0x6f7220, 0x726520, 0x727320, 0x732061, 0x732074, 0x736169,\n                0x737420, 0x742074, 0x746572, 0x746861, 0x746865, 0x74696f, 0x746f20,\n                0x747320,\n            ]),\n            new NGramsPlusLang('es', [\n                0x206120, 0x206361, 0x20636f, 0x206465, 0x20656c, 0x20656e, 0x206573,\n                0x20696e, 0x206c61, 0x206c6f, 0x207061, 0x20706f, 0x207072, 0x207175,\n                0x207265, 0x207365, 0x20756e, 0x207920, 0x612063, 0x612064, 0x612065,\n                0x61206c, 0x612070, 0x616369, 0x61646f, 0x616c20, 0x617220, 0x617320,\n                0x6369f3, 0x636f6e, 0x646520, 0x64656c, 0x646f20, 0x652064, 0x652065,\n                0x65206c, 0x656c20, 0x656e20, 0x656e74, 0x657320, 0x657374, 0x69656e,\n                0x69f36e, 0x6c6120, 0x6c6f73, 0x6e2065, 0x6e7465, 0x6f2064, 0x6f2065,\n                0x6f6e20, 0x6f7220, 0x6f7320, 0x706172, 0x717565, 0x726120, 0x726573,\n                0x732064, 0x732065, 0x732070, 0x736520, 0x746520, 0x746f20, 0x756520,\n                0xf36e20,\n            ]),\n            new NGramsPlusLang('fr', [\n                0x206175, 0x20636f, 0x206461, 0x206465, 0x206475, 0x20656e, 0x206574,\n                0x206c61, 0x206c65, 0x207061, 0x20706f, 0x207072, 0x207175, 0x207365,\n                0x20736f, 0x20756e, 0x20e020, 0x616e74, 0x617469, 0x636520, 0x636f6e,\n                0x646520, 0x646573, 0x647520, 0x652061, 0x652063, 0x652064, 0x652065,\n                0x65206c, 0x652070, 0x652073, 0x656e20, 0x656e74, 0x657220, 0x657320,\n                0x657420, 0x657572, 0x696f6e, 0x697320, 0x697420, 0x6c6120, 0x6c6520,\n                0x6c6573, 0x6d656e, 0x6e2064, 0x6e6520, 0x6e7320, 0x6e7420, 0x6f6e20,\n                0x6f6e74, 0x6f7572, 0x717565, 0x72206c, 0x726520, 0x732061, 0x732064,\n                0x732065, 0x73206c, 0x732070, 0x742064, 0x746520, 0x74696f, 0x756520,\n                0x757220,\n            ]),\n            new NGramsPlusLang('it', [\n                0x20616c, 0x206368, 0x20636f, 0x206465, 0x206469, 0x206520, 0x20696c,\n                0x20696e, 0x206c61, 0x207065, 0x207072, 0x20756e, 0x612063, 0x612064,\n                0x612070, 0x612073, 0x61746f, 0x636865, 0x636f6e, 0x64656c, 0x646920,\n                0x652061, 0x652063, 0x652064, 0x652069, 0x65206c, 0x652070, 0x652073,\n                0x656c20, 0x656c6c, 0x656e74, 0x657220, 0x686520, 0x692061, 0x692063,\n                0x692064, 0x692073, 0x696120, 0x696c20, 0x696e20, 0x696f6e, 0x6c6120,\n                0x6c6520, 0x6c6920, 0x6c6c61, 0x6e6520, 0x6e6920, 0x6e6f20, 0x6e7465,\n                0x6f2061, 0x6f2064, 0x6f2069, 0x6f2073, 0x6f6e20, 0x6f6e65, 0x706572,\n                0x726120, 0x726520, 0x736920, 0x746120, 0x746520, 0x746920, 0x746f20,\n                0x7a696f,\n            ]),\n            new NGramsPlusLang('nl', [\n                0x20616c, 0x206265, 0x206461, 0x206465, 0x206469, 0x206565, 0x20656e,\n                0x206765, 0x206865, 0x20696e, 0x206d61, 0x206d65, 0x206f70, 0x207465,\n                0x207661, 0x207665, 0x20766f, 0x207765, 0x207a69, 0x61616e, 0x616172,\n                0x616e20, 0x616e64, 0x617220, 0x617420, 0x636874, 0x646520, 0x64656e,\n                0x646572, 0x652062, 0x652076, 0x65656e, 0x656572, 0x656e20, 0x657220,\n                0x657273, 0x657420, 0x67656e, 0x686574, 0x696520, 0x696e20, 0x696e67,\n                0x697320, 0x6e2062, 0x6e2064, 0x6e2065, 0x6e2068, 0x6e206f, 0x6e2076,\n                0x6e6465, 0x6e6720, 0x6f6e64, 0x6f6f72, 0x6f7020, 0x6f7220, 0x736368,\n                0x737465, 0x742064, 0x746520, 0x74656e, 0x746572, 0x76616e, 0x766572,\n                0x766f6f,\n            ]),\n            new NGramsPlusLang('no', [\n                0x206174, 0x206176, 0x206465, 0x20656e, 0x206572, 0x20666f, 0x206861,\n                0x206920, 0x206d65, 0x206f67, 0x2070e5, 0x207365, 0x20736b, 0x20736f,\n                0x207374, 0x207469, 0x207669, 0x20e520, 0x616e64, 0x617220, 0x617420,\n                0x646520, 0x64656e, 0x646574, 0x652073, 0x656420, 0x656e20, 0x656e65,\n                0x657220, 0x657265, 0x657420, 0x657474, 0x666f72, 0x67656e, 0x696b6b,\n                0x696c20, 0x696e67, 0x6b6520, 0x6b6b65, 0x6c6520, 0x6c6c65, 0x6d6564,\n                0x6d656e, 0x6e2073, 0x6e6520, 0x6e6720, 0x6e6765, 0x6e6e65, 0x6f6720,\n                0x6f6d20, 0x6f7220, 0x70e520, 0x722073, 0x726520, 0x736f6d, 0x737465,\n                0x742073, 0x746520, 0x74656e, 0x746572, 0x74696c, 0x747420, 0x747465,\n                0x766572,\n            ]),\n            new NGramsPlusLang('pt', [\n                0x206120, 0x20636f, 0x206461, 0x206465, 0x20646f, 0x206520, 0x206573,\n                0x206d61, 0x206e6f, 0x206f20, 0x207061, 0x20706f, 0x207072, 0x207175,\n                0x207265, 0x207365, 0x20756d, 0x612061, 0x612063, 0x612064, 0x612070,\n                0x616465, 0x61646f, 0x616c20, 0x617220, 0x617261, 0x617320, 0x636f6d,\n                0x636f6e, 0x646120, 0x646520, 0x646f20, 0x646f73, 0x652061, 0x652064,\n                0x656d20, 0x656e74, 0x657320, 0x657374, 0x696120, 0x696361, 0x6d656e,\n                0x6e7465, 0x6e746f, 0x6f2061, 0x6f2063, 0x6f2064, 0x6f2065, 0x6f2070,\n                0x6f7320, 0x706172, 0x717565, 0x726120, 0x726573, 0x732061, 0x732064,\n                0x732065, 0x732070, 0x737461, 0x746520, 0x746f20, 0x756520, 0xe36f20,\n                0xe7e36f,\n            ]),\n            new NGramsPlusLang('sv', [\n                0x206174, 0x206176, 0x206465, 0x20656e, 0x2066f6, 0x206861, 0x206920,\n                0x20696e, 0x206b6f, 0x206d65, 0x206f63, 0x2070e5, 0x20736b, 0x20736f,\n                0x207374, 0x207469, 0x207661, 0x207669, 0x20e472, 0x616465, 0x616e20,\n                0x616e64, 0x617220, 0x617474, 0x636820, 0x646520, 0x64656e, 0x646572,\n                0x646574, 0x656420, 0x656e20, 0x657220, 0x657420, 0x66f672, 0x67656e,\n                0x696c6c, 0x696e67, 0x6b6120, 0x6c6c20, 0x6d6564, 0x6e2073, 0x6e6120,\n                0x6e6465, 0x6e6720, 0x6e6765, 0x6e696e, 0x6f6368, 0x6f6d20, 0x6f6e20,\n                0x70e520, 0x722061, 0x722073, 0x726120, 0x736b61, 0x736f6d, 0x742073,\n                0x746120, 0x746520, 0x746572, 0x74696c, 0x747420, 0x766172, 0xe47220,\n                0xf67220,\n            ]),\n        ];\n    }\n    name(input) {\n        return input && input.c1Bytes ? 'windows-1252' : 'ISO-8859-1';\n    }\n}\nexports.ISO_8859_1 = ISO_8859_1;\nclass ISO_8859_2 extends sbcs {\n    byteMap() {\n        return [\n            0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n            0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n            0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n            0x20, 0x20, 0x20, 0x00, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n            0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n            0x20, 0x20, 0x20, 0x20, 0x20, 0x61, 0x62, 0x63, 0x64, 0x65, 0x66, 0x67,\n            0x68, 0x69, 0x6a, 0x6b, 0x6c, 0x6d, 0x6e, 0x6f, 0x70, 0x71, 0x72, 0x73,\n            0x74, 0x75, 0x76, 0x77, 0x78, 0x79, 0x7a, 0x20, 0x20, 0x20, 0x20, 0x20,\n            0x20, 0x61, 0x62, 0x63, 0x64, 0x65, 0x66, 0x67, 0x68, 0x69, 0x6a, 0x6b,\n            0x6c, 0x6d, 0x6e, 0x6f, 0x70, 0x71, 0x72, 0x73, 0x74, 0x75, 0x76, 0x77,\n            0x78, 0x79, 0x7a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n            0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n            0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n            0x20, 0x20, 0x20, 0x20, 0x20, 0xb1, 0x20, 0xb3, 0x20, 0xb5, 0xb6, 0x20,\n            0x20, 0xb9, 0xba, 0xbb, 0xbc, 0x20, 0xbe, 0xbf, 0x20, 0xb1, 0x20, 0xb3,\n            0x20, 0xb5, 0xb6, 0xb7, 0x20, 0xb9, 0xba, 0xbb, 0xbc, 0x20, 0xbe, 0xbf,\n            0xe0, 0xe1, 0xe2, 0xe3, 0xe4, 0xe5, 0xe6, 0xe7, 0xe8, 0xe9, 0xea, 0xeb,\n            0xec, 0xed, 0xee, 0xef, 0xf0, 0xf1, 0xf2, 0xf3, 0xf4, 0xf5, 0xf6, 0x20,\n            0xf8, 0xf9, 0xfa, 0xfb, 0xfc, 0xfd, 0xfe, 0xdf, 0xe0, 0xe1, 0xe2, 0xe3,\n            0xe4, 0xe5, 0xe6, 0xe7, 0xe8, 0xe9, 0xea, 0xeb, 0xec, 0xed, 0xee, 0xef,\n            0xf0, 0xf1, 0xf2, 0xf3, 0xf4, 0xf5, 0xf6, 0x20, 0xf8, 0xf9, 0xfa, 0xfb,\n            0xfc, 0xfd, 0xfe, 0x20,\n        ];\n    }\n    ngrams() {\n        return [\n            new NGramsPlusLang('cs', [\n                0x206120, 0x206279, 0x20646f, 0x206a65, 0x206e61, 0x206e65, 0x206f20,\n                0x206f64, 0x20706f, 0x207072, 0x2070f8, 0x20726f, 0x207365, 0x20736f,\n                0x207374, 0x20746f, 0x207620, 0x207679, 0x207a61, 0x612070, 0x636520,\n                0x636820, 0x652070, 0x652073, 0x652076, 0x656d20, 0x656eed, 0x686f20,\n                0x686f64, 0x697374, 0x6a6520, 0x6b7465, 0x6c6520, 0x6c6920, 0x6e6120,\n                0x6ee920, 0x6eec20, 0x6eed20, 0x6f2070, 0x6f646e, 0x6f6a69, 0x6f7374,\n                0x6f7520, 0x6f7661, 0x706f64, 0x706f6a, 0x70726f, 0x70f865, 0x736520,\n                0x736f75, 0x737461, 0x737469, 0x73746e, 0x746572, 0x746eed, 0x746f20,\n                0x752070, 0xbe6520, 0xe16eed, 0xe9686f, 0xed2070, 0xed2073, 0xed6d20,\n                0xf86564,\n            ]),\n            new NGramsPlusLang('hu', [\n                0x206120, 0x20617a, 0x206265, 0x206567, 0x20656c, 0x206665, 0x206861,\n                0x20686f, 0x206973, 0x206b65, 0x206b69, 0x206bf6, 0x206c65, 0x206d61,\n                0x206d65, 0x206d69, 0x206e65, 0x20737a, 0x207465, 0x20e973, 0x612061,\n                0x61206b, 0x61206d, 0x612073, 0x616b20, 0x616e20, 0x617a20, 0x62616e,\n                0x62656e, 0x656779, 0x656b20, 0x656c20, 0x656c65, 0x656d20, 0x656e20,\n                0x657265, 0x657420, 0x657465, 0x657474, 0x677920, 0x686f67, 0x696e74,\n                0x697320, 0x6b2061, 0x6bf67a, 0x6d6567, 0x6d696e, 0x6e2061, 0x6e616b,\n                0x6e656b, 0x6e656d, 0x6e7420, 0x6f6779, 0x732061, 0x737a65, 0x737a74,\n                0x737ae1, 0x73e967, 0x742061, 0x747420, 0x74e173, 0x7a6572, 0xe16e20,\n                0xe97320,\n            ]),\n            new NGramsPlusLang('pl', [\n                0x20637a, 0x20646f, 0x206920, 0x206a65, 0x206b6f, 0x206d61, 0x206d69,\n                0x206e61, 0x206e69, 0x206f64, 0x20706f, 0x207072, 0x207369, 0x207720,\n                0x207769, 0x207779, 0x207a20, 0x207a61, 0x612070, 0x612077, 0x616e69,\n                0x636820, 0x637a65, 0x637a79, 0x646f20, 0x647a69, 0x652070, 0x652073,\n                0x652077, 0x65207a, 0x65676f, 0x656a20, 0x656d20, 0x656e69, 0x676f20,\n                0x696120, 0x696520, 0x69656a, 0x6b6120, 0x6b6920, 0x6b6965, 0x6d6965,\n                0x6e6120, 0x6e6961, 0x6e6965, 0x6f2070, 0x6f7761, 0x6f7769, 0x706f6c,\n                0x707261, 0x70726f, 0x70727a, 0x727a65, 0x727a79, 0x7369ea, 0x736b69,\n                0x737461, 0x776965, 0x796368, 0x796d20, 0x7a6520, 0x7a6965, 0x7a7920,\n                0xf37720,\n            ]),\n            new NGramsPlusLang('ro', [\n                0x206120, 0x206163, 0x206361, 0x206365, 0x20636f, 0x206375, 0x206465,\n                0x206469, 0x206c61, 0x206d61, 0x207065, 0x207072, 0x207365, 0x2073e3,\n                0x20756e, 0x20ba69, 0x20ee6e, 0x612063, 0x612064, 0x617265, 0x617420,\n                0x617465, 0x617520, 0x636172, 0x636f6e, 0x637520, 0x63e320, 0x646520,\n                0x652061, 0x652063, 0x652064, 0x652070, 0x652073, 0x656120, 0x656920,\n                0x656c65, 0x656e74, 0x657374, 0x692061, 0x692063, 0x692064, 0x692070,\n                0x696520, 0x696920, 0x696e20, 0x6c6120, 0x6c6520, 0x6c6f72, 0x6c7569,\n                0x6e6520, 0x6e7472, 0x6f7220, 0x70656e, 0x726520, 0x726561, 0x727520,\n                0x73e320, 0x746520, 0x747275, 0x74e320, 0x756920, 0x756c20, 0xba6920,\n                0xee6e20,\n            ]),\n        ];\n    }\n    name(det) {\n        return det && det.c1Bytes ? 'windows-1250' : 'ISO-8859-2';\n    }\n}\nexports.ISO_8859_2 = ISO_8859_2;\nclass ISO_8859_5 extends sbcs {\n    byteMap() {\n        return [\n            0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n            0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n            0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n            0x20, 0x20, 0x20, 0x00, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n            0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n            0x20, 0x20, 0x20, 0x20, 0x20, 0x61, 0x62, 0x63, 0x64, 0x65, 0x66, 0x67,\n            0x68, 0x69, 0x6a, 0x6b, 0x6c, 0x6d, 0x6e, 0x6f, 0x70, 0x71, 0x72, 0x73,\n            0x74, 0x75, 0x76, 0x77, 0x78, 0x79, 0x7a, 0x20, 0x20, 0x20, 0x20, 0x20,\n            0x20, 0x61, 0x62, 0x63, 0x64, 0x65, 0x66, 0x67, 0x68, 0x69, 0x6a, 0x6b,\n            0x6c, 0x6d, 0x6e, 0x6f, 0x70, 0x71, 0x72, 0x73, 0x74, 0x75, 0x76, 0x77,\n            0x78, 0x79, 0x7a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n            0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n            0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n            0x20, 0x20, 0x20, 0x20, 0x20, 0xf1, 0xf2, 0xf3, 0xf4, 0xf5, 0xf6, 0xf7,\n            0xf8, 0xf9, 0xfa, 0xfb, 0xfc, 0x20, 0xfe, 0xff, 0xd0, 0xd1, 0xd2, 0xd3,\n            0xd4, 0xd5, 0xd6, 0xd7, 0xd8, 0xd9, 0xda, 0xdb, 0xdc, 0xdd, 0xde, 0xdf,\n            0xe0, 0xe1, 0xe2, 0xe3, 0xe4, 0xe5, 0xe6, 0xe7, 0xe8, 0xe9, 0xea, 0xeb,\n            0xec, 0xed, 0xee, 0xef, 0xd0, 0xd1, 0xd2, 0xd3, 0xd4, 0xd5, 0xd6, 0xd7,\n            0xd8, 0xd9, 0xda, 0xdb, 0xdc, 0xdd, 0xde, 0xdf, 0xe0, 0xe1, 0xe2, 0xe3,\n            0xe4, 0xe5, 0xe6, 0xe7, 0xe8, 0xe9, 0xea, 0xeb, 0xec, 0xed, 0xee, 0xef,\n            0x20, 0xf1, 0xf2, 0xf3, 0xf4, 0xf5, 0xf6, 0xf7, 0xf8, 0xf9, 0xfa, 0xfb,\n            0xfc, 0x20, 0xfe, 0xff,\n        ];\n    }\n    ngrams() {\n        return [\n            0x20d220, 0x20d2de, 0x20d4de, 0x20d7d0, 0x20d820, 0x20dad0, 0x20dade,\n            0x20ddd0, 0x20ddd5, 0x20ded1, 0x20dfde, 0x20dfe0, 0x20e0d0, 0x20e1de,\n            0x20e1e2, 0x20e2de, 0x20e7e2, 0x20ede2, 0xd0ddd8, 0xd0e2ec, 0xd3de20,\n            0xd5dbec, 0xd5ddd8, 0xd5e1e2, 0xd5e220, 0xd820df, 0xd8d520, 0xd8d820,\n            0xd8ef20, 0xdbd5dd, 0xdbd820, 0xdbecdd, 0xddd020, 0xddd520, 0xddd8d5,\n            0xddd8ef, 0xddde20, 0xddded2, 0xde20d2, 0xde20df, 0xde20e1, 0xded220,\n            0xded2d0, 0xded3de, 0xded920, 0xdedbec, 0xdedc20, 0xdee1e2, 0xdfdedb,\n            0xdfe0d5, 0xdfe0d8, 0xdfe0de, 0xe0d0d2, 0xe0d5d4, 0xe1e2d0, 0xe1e2d2,\n            0xe1e2d8, 0xe1ef20, 0xe2d5db, 0xe2de20, 0xe2dee0, 0xe2ec20, 0xe7e2de,\n            0xebe520,\n        ];\n    }\n    name() {\n        return 'ISO-8859-5';\n    }\n    language() {\n        return 'ru';\n    }\n}\nexports.ISO_8859_5 = ISO_8859_5;\nclass ISO_8859_6 extends sbcs {\n    byteMap() {\n        return [\n            0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n            0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n            0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n            0x20, 0x20, 0x20, 0x00, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n            0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n            0x20, 0x20, 0x20, 0x20, 0x20, 0x61, 0x62, 0x63, 0x64, 0x65, 0x66, 0x67,\n            0x68, 0x69, 0x6a, 0x6b, 0x6c, 0x6d, 0x6e, 0x6f, 0x70, 0x71, 0x72, 0x73,\n            0x74, 0x75, 0x76, 0x77, 0x78, 0x79, 0x7a, 0x20, 0x20, 0x20, 0x20, 0x20,\n            0x20, 0x61, 0x62, 0x63, 0x64, 0x65, 0x66, 0x67, 0x68, 0x69, 0x6a, 0x6b,\n            0x6c, 0x6d, 0x6e, 0x6f, 0x70, 0x71, 0x72, 0x73, 0x74, 0x75, 0x76, 0x77,\n            0x78, 0x79, 0x7a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n            0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n            0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n            0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n            0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n            0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n            0x20, 0xc1, 0xc2, 0xc3, 0xc4, 0xc5, 0xc6, 0xc7, 0xc8, 0xc9, 0xca, 0xcb,\n            0xcc, 0xcd, 0xce, 0xcf, 0xd0, 0xd1, 0xd2, 0xd3, 0xd4, 0xd5, 0xd6, 0xd7,\n            0xd8, 0xd9, 0xda, 0x20, 0x20, 0x20, 0x20, 0x20, 0xe0, 0xe1, 0xe2, 0xe3,\n            0xe4, 0xe5, 0xe6, 0xe7, 0xe8, 0xe9, 0xea, 0x20, 0x20, 0x20, 0x20, 0x20,\n            0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n            0x20, 0x20, 0x20, 0x20,\n        ];\n    }\n    ngrams() {\n        return [\n            0x20c7e4, 0x20c7e6, 0x20c8c7, 0x20d9e4, 0x20e1ea, 0x20e4e4, 0x20e5e6,\n            0x20e8c7, 0xc720c7, 0xc7c120, 0xc7ca20, 0xc7d120, 0xc7e420, 0xc7e4c3,\n            0xc7e4c7, 0xc7e4c8, 0xc7e4ca, 0xc7e4cc, 0xc7e4cd, 0xc7e4cf, 0xc7e4d3,\n            0xc7e4d9, 0xc7e4e2, 0xc7e4e5, 0xc7e4e8, 0xc7e4ea, 0xc7e520, 0xc7e620,\n            0xc7e6ca, 0xc820c7, 0xc920c7, 0xc920e1, 0xc920e4, 0xc920e5, 0xc920e8,\n            0xca20c7, 0xcf20c7, 0xcfc920, 0xd120c7, 0xd1c920, 0xd320c7, 0xd920c7,\n            0xd9e4e9, 0xe1ea20, 0xe420c7, 0xe4c920, 0xe4e920, 0xe4ea20, 0xe520c7,\n            0xe5c720, 0xe5c920, 0xe5e620, 0xe620c7, 0xe720c7, 0xe7c720, 0xe8c7e4,\n            0xe8e620, 0xe920c7, 0xea20c7, 0xea20e5, 0xea20e8, 0xeac920, 0xead120,\n            0xeae620,\n        ];\n    }\n    name() {\n        return 'ISO-8859-6';\n    }\n    language() {\n        return 'ar';\n    }\n}\nexports.ISO_8859_6 = ISO_8859_6;\nclass ISO_8859_7 extends sbcs {\n    byteMap() {\n        return [\n            0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n            0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n            0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n            0x20, 0x20, 0x20, 0x00, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n            0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n            0x20, 0x20, 0x20, 0x20, 0x20, 0x61, 0x62, 0x63, 0x64, 0x65, 0x66, 0x67,\n            0x68, 0x69, 0x6a, 0x6b, 0x6c, 0x6d, 0x6e, 0x6f, 0x70, 0x71, 0x72, 0x73,\n            0x74, 0x75, 0x76, 0x77, 0x78, 0x79, 0x7a, 0x20, 0x20, 0x20, 0x20, 0x20,\n            0x20, 0x61, 0x62, 0x63, 0x64, 0x65, 0x66, 0x67, 0x68, 0x69, 0x6a, 0x6b,\n            0x6c, 0x6d, 0x6e, 0x6f, 0x70, 0x71, 0x72, 0x73, 0x74, 0x75, 0x76, 0x77,\n            0x78, 0x79, 0x7a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n            0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n            0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n            0x20, 0x20, 0x20, 0x20, 0x20, 0xa1, 0xa2, 0x20, 0x20, 0x20, 0x20, 0x20,\n            0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n            0x20, 0x20, 0xdc, 0x20, 0xdd, 0xde, 0xdf, 0x20, 0xfc, 0x20, 0xfd, 0xfe,\n            0xc0, 0xe1, 0xe2, 0xe3, 0xe4, 0xe5, 0xe6, 0xe7, 0xe8, 0xe9, 0xea, 0xeb,\n            0xec, 0xed, 0xee, 0xef, 0xf0, 0xf1, 0x20, 0xf3, 0xf4, 0xf5, 0xf6, 0xf7,\n            0xf8, 0xf9, 0xfa, 0xfb, 0xdc, 0xdd, 0xde, 0xdf, 0xe0, 0xe1, 0xe2, 0xe3,\n            0xe4, 0xe5, 0xe6, 0xe7, 0xe8, 0xe9, 0xea, 0xeb, 0xec, 0xed, 0xee, 0xef,\n            0xf0, 0xf1, 0xf2, 0xf3, 0xf4, 0xf5, 0xf6, 0xf7, 0xf8, 0xf9, 0xfa, 0xfb,\n            0xfc, 0xfd, 0xfe, 0x20,\n        ];\n    }\n    ngrams() {\n        return [\n            0x20e1ed, 0x20e1f0, 0x20e3e9, 0x20e4e9, 0x20e5f0, 0x20e720, 0x20eae1,\n            0x20ece5, 0x20ede1, 0x20ef20, 0x20f0e1, 0x20f0ef, 0x20f0f1, 0x20f3f4,\n            0x20f3f5, 0x20f4e7, 0x20f4ef, 0xdfe120, 0xe120e1, 0xe120f4, 0xe1e920,\n            0xe1ed20, 0xe1f0fc, 0xe1f220, 0xe3e9e1, 0xe5e920, 0xe5f220, 0xe720f4,\n            0xe7ed20, 0xe7f220, 0xe920f4, 0xe9e120, 0xe9eade, 0xe9f220, 0xeae1e9,\n            0xeae1f4, 0xece520, 0xed20e1, 0xed20e5, 0xed20f0, 0xede120, 0xeff220,\n            0xeff520, 0xf0eff5, 0xf0f1ef, 0xf0fc20, 0xf220e1, 0xf220e5, 0xf220ea,\n            0xf220f0, 0xf220f4, 0xf3e520, 0xf3e720, 0xf3f4ef, 0xf4e120, 0xf4e1e9,\n            0xf4e7ed, 0xf4e7f2, 0xf4e9ea, 0xf4ef20, 0xf4eff5, 0xf4f9ed, 0xf9ed20,\n            0xfeed20,\n        ];\n    }\n    name(det) {\n        return det && det.c1Bytes ? 'windows-1253' : 'ISO-8859-7';\n    }\n    language() {\n        return 'el';\n    }\n}\nexports.ISO_8859_7 = ISO_8859_7;\nclass ISO_8859_8 extends sbcs {\n    byteMap() {\n        return [\n            0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n            0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n            0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n            0x20, 0x20, 0x20, 0x00, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n            0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n            0x20, 0x20, 0x20, 0x20, 0x20, 0x61, 0x62, 0x63, 0x64, 0x65, 0x66, 0x67,\n            0x68, 0x69, 0x6a, 0x6b, 0x6c, 0x6d, 0x6e, 0x6f, 0x70, 0x71, 0x72, 0x73,\n            0x74, 0x75, 0x76, 0x77, 0x78, 0x79, 0x7a, 0x20, 0x20, 0x20, 0x20, 0x20,\n            0x20, 0x61, 0x62, 0x63, 0x64, 0x65, 0x66, 0x67, 0x68, 0x69, 0x6a, 0x6b,\n            0x6c, 0x6d, 0x6e, 0x6f, 0x70, 0x71, 0x72, 0x73, 0x74, 0x75, 0x76, 0x77,\n            0x78, 0x79, 0x7a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n            0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n            0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n            0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n            0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n            0x20, 0xb5, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n            0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n            0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n            0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0xe0, 0xe1, 0xe2, 0xe3,\n            0xe4, 0xe5, 0xe6, 0xe7, 0xe8, 0xe9, 0xea, 0xeb, 0xec, 0xed, 0xee, 0xef,\n            0xf0, 0xf1, 0xf2, 0xf3, 0xf4, 0xf5, 0xf6, 0xf7, 0xf8, 0xf9, 0xfa, 0x20,\n            0x20, 0x20, 0x20, 0x20,\n        ];\n    }\n    ngrams() {\n        return [\n            new NGramsPlusLang('he', [\n                0x20e0e5, 0x20e0e7, 0x20e0e9, 0x20e0fa, 0x20e1e9, 0x20e1ee, 0x20e4e0,\n                0x20e4e5, 0x20e4e9, 0x20e4ee, 0x20e4f2, 0x20e4f9, 0x20e4fa, 0x20ece0,\n                0x20ece4, 0x20eee0, 0x20f2ec, 0x20f9ec, 0xe0fa20, 0xe420e0, 0xe420e1,\n                0xe420e4, 0xe420ec, 0xe420ee, 0xe420f9, 0xe4e5e0, 0xe5e020, 0xe5ed20,\n                0xe5ef20, 0xe5f820, 0xe5fa20, 0xe920e4, 0xe9e420, 0xe9e5fa, 0xe9e9ed,\n                0xe9ed20, 0xe9ef20, 0xe9f820, 0xe9fa20, 0xec20e0, 0xec20e4, 0xece020,\n                0xece420, 0xed20e0, 0xed20e1, 0xed20e4, 0xed20ec, 0xed20ee, 0xed20f9,\n                0xeee420, 0xef20e4, 0xf0e420, 0xf0e920, 0xf0e9ed, 0xf2ec20, 0xf820e4,\n                0xf8e9ed, 0xf9ec20, 0xfa20e0, 0xfa20e1, 0xfa20e4, 0xfa20ec, 0xfa20ee,\n                0xfa20f9,\n            ]),\n            new NGramsPlusLang('he', [\n                0x20e0e5, 0x20e0ec, 0x20e4e9, 0x20e4ec, 0x20e4ee, 0x20e4f0, 0x20e9f0,\n                0x20ecf2, 0x20ecf9, 0x20ede5, 0x20ede9, 0x20efe5, 0x20efe9, 0x20f8e5,\n                0x20f8e9, 0x20fae0, 0x20fae5, 0x20fae9, 0xe020e4, 0xe020ec, 0xe020ed,\n                0xe020fa, 0xe0e420, 0xe0e5e4, 0xe0ec20, 0xe0ee20, 0xe120e4, 0xe120ed,\n                0xe120fa, 0xe420e4, 0xe420e9, 0xe420ec, 0xe420ed, 0xe420ef, 0xe420f8,\n                0xe420fa, 0xe4ec20, 0xe5e020, 0xe5e420, 0xe7e020, 0xe9e020, 0xe9e120,\n                0xe9e420, 0xec20e4, 0xec20ed, 0xec20fa, 0xecf220, 0xecf920, 0xede9e9,\n                0xede9f0, 0xede9f8, 0xee20e4, 0xee20ed, 0xee20fa, 0xeee120, 0xeee420,\n                0xf2e420, 0xf920e4, 0xf920ed, 0xf920fa, 0xf9e420, 0xfae020, 0xfae420,\n                0xfae5e9,\n            ]),\n        ];\n    }\n    name(det) {\n        return det && det.c1Bytes ? 'windows-1255' : 'ISO-8859-8';\n    }\n    language() {\n        return 'he';\n    }\n}\nexports.ISO_8859_8 = ISO_8859_8;\nclass ISO_8859_9 extends sbcs {\n    byteMap() {\n        return [\n            0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n            0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n            0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n            0x20, 0x20, 0x20, 0x00, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n            0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n            0x20, 0x20, 0x20, 0x20, 0x20, 0x61, 0x62, 0x63, 0x64, 0x65, 0x66, 0x67,\n            0x68, 0x69, 0x6a, 0x6b, 0x6c, 0x6d, 0x6e, 0x6f, 0x70, 0x71, 0x72, 0x73,\n            0x74, 0x75, 0x76, 0x77, 0x78, 0x79, 0x7a, 0x20, 0x20, 0x20, 0x20, 0x20,\n            0x20, 0x61, 0x62, 0x63, 0x64, 0x65, 0x66, 0x67, 0x68, 0x69, 0x6a, 0x6b,\n            0x6c, 0x6d, 0x6e, 0x6f, 0x70, 0x71, 0x72, 0x73, 0x74, 0x75, 0x76, 0x77,\n            0x78, 0x79, 0x7a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n            0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n            0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n            0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n            0x20, 0x20, 0xaa, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n            0x20, 0xb5, 0x20, 0x20, 0x20, 0x20, 0xba, 0x20, 0x20, 0x20, 0x20, 0x20,\n            0xe0, 0xe1, 0xe2, 0xe3, 0xe4, 0xe5, 0xe6, 0xe7, 0xe8, 0xe9, 0xea, 0xeb,\n            0xec, 0xed, 0xee, 0xef, 0xf0, 0xf1, 0xf2, 0xf3, 0xf4, 0xf5, 0xf6, 0x20,\n            0xf8, 0xf9, 0xfa, 0xfb, 0xfc, 0x69, 0xfe, 0xdf, 0xe0, 0xe1, 0xe2, 0xe3,\n            0xe4, 0xe5, 0xe6, 0xe7, 0xe8, 0xe9, 0xea, 0xeb, 0xec, 0xed, 0xee, 0xef,\n            0xf0, 0xf1, 0xf2, 0xf3, 0xf4, 0xf5, 0xf6, 0x20, 0xf8, 0xf9, 0xfa, 0xfb,\n            0xfc, 0xfd, 0xfe, 0xff,\n        ];\n    }\n    ngrams() {\n        return [\n            0x206261, 0x206269, 0x206275, 0x206461, 0x206465, 0x206765, 0x206861,\n            0x20696c, 0x206b61, 0x206b6f, 0x206d61, 0x206f6c, 0x207361, 0x207461,\n            0x207665, 0x207961, 0x612062, 0x616b20, 0x616c61, 0x616d61, 0x616e20,\n            0x616efd, 0x617220, 0x617261, 0x6172fd, 0x6173fd, 0x617961, 0x626972,\n            0x646120, 0x646520, 0x646920, 0x652062, 0x65206b, 0x656469, 0x656e20,\n            0x657220, 0x657269, 0x657369, 0x696c65, 0x696e20, 0x696e69, 0x697220,\n            0x6c616e, 0x6c6172, 0x6c6520, 0x6c6572, 0x6e2061, 0x6e2062, 0x6e206b,\n            0x6e6461, 0x6e6465, 0x6e6520, 0x6e6920, 0x6e696e, 0x6efd20, 0x72696e,\n            0x72fd6e, 0x766520, 0x796120, 0x796f72, 0xfd6e20, 0xfd6e64, 0xfd6efd,\n            0xfdf0fd,\n        ];\n    }\n    name(det) {\n        return det && det.c1Bytes ? 'windows-1254' : 'ISO-8859-9';\n    }\n    language() {\n        return 'tr';\n    }\n}\nexports.ISO_8859_9 = ISO_8859_9;\nclass windows_1251 extends sbcs {\n    byteMap() {\n        return [\n            0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n            0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n            0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n            0x20, 0x20, 0x20, 0x00, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n            0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n            0x20, 0x20, 0x20, 0x20, 0x20, 0x61, 0x62, 0x63, 0x64, 0x65, 0x66, 0x67,\n            0x68, 0x69, 0x6a, 0x6b, 0x6c, 0x6d, 0x6e, 0x6f, 0x70, 0x71, 0x72, 0x73,\n            0x74, 0x75, 0x76, 0x77, 0x78, 0x79, 0x7a, 0x20, 0x20, 0x20, 0x20, 0x20,\n            0x20, 0x61, 0x62, 0x63, 0x64, 0x65, 0x66, 0x67, 0x68, 0x69, 0x6a, 0x6b,\n            0x6c, 0x6d, 0x6e, 0x6f, 0x70, 0x71, 0x72, 0x73, 0x74, 0x75, 0x76, 0x77,\n            0x78, 0x79, 0x7a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x90, 0x83, 0x20, 0x83,\n            0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x9a, 0x20, 0x9c, 0x9d, 0x9e, 0x9f,\n            0x90, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x9a, 0x20,\n            0x9c, 0x9d, 0x9e, 0x9f, 0x20, 0xa2, 0xa2, 0xbc, 0x20, 0xb4, 0x20, 0x20,\n            0xb8, 0x20, 0xba, 0x20, 0x20, 0x20, 0x20, 0xbf, 0x20, 0x20, 0xb3, 0xb3,\n            0xb4, 0xb5, 0x20, 0x20, 0xb8, 0x20, 0xba, 0x20, 0xbc, 0xbe, 0xbe, 0xbf,\n            0xe0, 0xe1, 0xe2, 0xe3, 0xe4, 0xe5, 0xe6, 0xe7, 0xe8, 0xe9, 0xea, 0xeb,\n            0xec, 0xed, 0xee, 0xef, 0xf0, 0xf1, 0xf2, 0xf3, 0xf4, 0xf5, 0xf6, 0xf7,\n            0xf8, 0xf9, 0xfa, 0xfb, 0xfc, 0xfd, 0xfe, 0xff, 0xe0, 0xe1, 0xe2, 0xe3,\n            0xe4, 0xe5, 0xe6, 0xe7, 0xe8, 0xe9, 0xea, 0xeb, 0xec, 0xed, 0xee, 0xef,\n            0xf0, 0xf1, 0xf2, 0xf3, 0xf4, 0xf5, 0xf6, 0xf7, 0xf8, 0xf9, 0xfa, 0xfb,\n            0xfc, 0xfd, 0xfe, 0xff,\n        ];\n    }\n    ngrams() {\n        return [\n            0x20e220, 0x20e2ee, 0x20e4ee, 0x20e7e0, 0x20e820, 0x20eae0, 0x20eaee,\n            0x20ede0, 0x20ede5, 0x20eee1, 0x20efee, 0x20eff0, 0x20f0e0, 0x20f1ee,\n            0x20f1f2, 0x20f2ee, 0x20f7f2, 0x20fdf2, 0xe0ede8, 0xe0f2fc, 0xe3ee20,\n            0xe5ebfc, 0xe5ede8, 0xe5f1f2, 0xe5f220, 0xe820ef, 0xe8e520, 0xe8e820,\n            0xe8ff20, 0xebe5ed, 0xebe820, 0xebfced, 0xede020, 0xede520, 0xede8e5,\n            0xede8ff, 0xedee20, 0xedeee2, 0xee20e2, 0xee20ef, 0xee20f1, 0xeee220,\n            0xeee2e0, 0xeee3ee, 0xeee920, 0xeeebfc, 0xeeec20, 0xeef1f2, 0xefeeeb,\n            0xeff0e5, 0xeff0e8, 0xeff0ee, 0xf0e0e2, 0xf0e5e4, 0xf1f2e0, 0xf1f2e2,\n            0xf1f2e8, 0xf1ff20, 0xf2e5eb, 0xf2ee20, 0xf2eef0, 0xf2fc20, 0xf7f2ee,\n            0xfbf520,\n        ];\n    }\n    name() {\n        return 'windows-1251';\n    }\n    language() {\n        return 'ru';\n    }\n}\nexports.windows_1251 = windows_1251;\nclass windows_1256 extends sbcs {\n    byteMap() {\n        return [\n            0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n            0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n            0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n            0x20, 0x20, 0x20, 0x00, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n            0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n            0x20, 0x20, 0x20, 0x20, 0x20, 0x61, 0x62, 0x63, 0x64, 0x65, 0x66, 0x67,\n            0x68, 0x69, 0x6a, 0x6b, 0x6c, 0x6d, 0x6e, 0x6f, 0x70, 0x71, 0x72, 0x73,\n            0x74, 0x75, 0x76, 0x77, 0x78, 0x79, 0x7a, 0x20, 0x20, 0x20, 0x20, 0x20,\n            0x20, 0x61, 0x62, 0x63, 0x64, 0x65, 0x66, 0x67, 0x68, 0x69, 0x6a, 0x6b,\n            0x6c, 0x6d, 0x6e, 0x6f, 0x70, 0x71, 0x72, 0x73, 0x74, 0x75, 0x76, 0x77,\n            0x78, 0x79, 0x7a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x81, 0x20, 0x83,\n            0x20, 0x20, 0x20, 0x20, 0x88, 0x20, 0x8a, 0x20, 0x9c, 0x8d, 0x8e, 0x8f,\n            0x90, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x98, 0x20, 0x9a, 0x20,\n            0x9c, 0x20, 0x20, 0x9f, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n            0x20, 0x20, 0xaa, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n            0x20, 0xb5, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n            0xc0, 0xc1, 0xc2, 0xc3, 0xc4, 0xc5, 0xc6, 0xc7, 0xc8, 0xc9, 0xca, 0xcb,\n            0xcc, 0xcd, 0xce, 0xcf, 0xd0, 0xd1, 0xd2, 0xd3, 0xd4, 0xd5, 0xd6, 0x20,\n            0xd8, 0xd9, 0xda, 0xdb, 0xdc, 0xdd, 0xde, 0xdf, 0xe0, 0xe1, 0xe2, 0xe3,\n            0xe4, 0xe5, 0xe6, 0xe7, 0xe8, 0xe9, 0xea, 0xeb, 0xec, 0xed, 0xee, 0xef,\n            0x20, 0x20, 0x20, 0x20, 0xf4, 0x20, 0x20, 0x20, 0x20, 0xf9, 0x20, 0xfb,\n            0xfc, 0x20, 0x20, 0xff,\n        ];\n    }\n    ngrams() {\n        return [\n            0x20c7e1, 0x20c7e4, 0x20c8c7, 0x20dae1, 0x20dded, 0x20e1e1, 0x20e3e4,\n            0x20e6c7, 0xc720c7, 0xc7c120, 0xc7ca20, 0xc7d120, 0xc7e120, 0xc7e1c3,\n            0xc7e1c7, 0xc7e1c8, 0xc7e1ca, 0xc7e1cc, 0xc7e1cd, 0xc7e1cf, 0xc7e1d3,\n            0xc7e1da, 0xc7e1de, 0xc7e1e3, 0xc7e1e6, 0xc7e1ed, 0xc7e320, 0xc7e420,\n            0xc7e4ca, 0xc820c7, 0xc920c7, 0xc920dd, 0xc920e1, 0xc920e3, 0xc920e6,\n            0xca20c7, 0xcf20c7, 0xcfc920, 0xd120c7, 0xd1c920, 0xd320c7, 0xda20c7,\n            0xdae1ec, 0xdded20, 0xe120c7, 0xe1c920, 0xe1ec20, 0xe1ed20, 0xe320c7,\n            0xe3c720, 0xe3c920, 0xe3e420, 0xe420c7, 0xe520c7, 0xe5c720, 0xe6c7e1,\n            0xe6e420, 0xec20c7, 0xed20c7, 0xed20e3, 0xed20e6, 0xedc920, 0xedd120,\n            0xede420,\n        ];\n    }\n    name() {\n        return 'windows-1256';\n    }\n    language() {\n        return 'ar';\n    }\n}\nexports.windows_1256 = windows_1256;\nclass KOI8_R extends sbcs {\n    byteMap() {\n        return [\n            0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n            0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n            0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n            0x20, 0x20, 0x20, 0x00, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n            0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n            0x20, 0x20, 0x20, 0x20, 0x20, 0x61, 0x62, 0x63, 0x64, 0x65, 0x66, 0x67,\n            0x68, 0x69, 0x6a, 0x6b, 0x6c, 0x6d, 0x6e, 0x6f, 0x70, 0x71, 0x72, 0x73,\n            0x74, 0x75, 0x76, 0x77, 0x78, 0x79, 0x7a, 0x20, 0x20, 0x20, 0x20, 0x20,\n            0x20, 0x61, 0x62, 0x63, 0x64, 0x65, 0x66, 0x67, 0x68, 0x69, 0x6a, 0x6b,\n            0x6c, 0x6d, 0x6e, 0x6f, 0x70, 0x71, 0x72, 0x73, 0x74, 0x75, 0x76, 0x77,\n            0x78, 0x79, 0x7a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n            0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n            0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n            0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0xa3, 0x20, 0x20, 0x20, 0x20,\n            0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0xa3,\n            0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,\n            0xc0, 0xc1, 0xc2, 0xc3, 0xc4, 0xc5, 0xc6, 0xc7, 0xc8, 0xc9, 0xca, 0xcb,\n            0xcc, 0xcd, 0xce, 0xcf, 0xd0, 0xd1, 0xd2, 0xd3, 0xd4, 0xd5, 0xd6, 0xd7,\n            0xd8, 0xd9, 0xda, 0xdb, 0xdc, 0xdd, 0xde, 0xdf, 0xc0, 0xc1, 0xc2, 0xc3,\n            0xc4, 0xc5, 0xc6, 0xc7, 0xc8, 0xc9, 0xca, 0xcb, 0xcc, 0xcd, 0xce, 0xcf,\n            0xd0, 0xd1, 0xd2, 0xd3, 0xd4, 0xd5, 0xd6, 0xd7, 0xd8, 0xd9, 0xda, 0xdb,\n            0xdc, 0xdd, 0xde, 0xdf,\n        ];\n    }\n    ngrams() {\n        return [\n            0x20c4cf, 0x20c920, 0x20cbc1, 0x20cbcf, 0x20cec1, 0x20cec5, 0x20cfc2,\n            0x20d0cf, 0x20d0d2, 0x20d2c1, 0x20d3cf, 0x20d3d4, 0x20d4cf, 0x20d720,\n            0x20d7cf, 0x20dac1, 0x20dcd4, 0x20ded4, 0xc1cec9, 0xc1d4d8, 0xc5ccd8,\n            0xc5cec9, 0xc5d3d4, 0xc5d420, 0xc7cf20, 0xc920d0, 0xc9c520, 0xc9c920,\n            0xc9d120, 0xccc5ce, 0xccc920, 0xccd8ce, 0xcec120, 0xcec520, 0xcec9c5,\n            0xcec9d1, 0xcecf20, 0xcecfd7, 0xcf20d0, 0xcf20d3, 0xcf20d7, 0xcfc7cf,\n            0xcfca20, 0xcfccd8, 0xcfcd20, 0xcfd3d4, 0xcfd720, 0xcfd7c1, 0xd0cfcc,\n            0xd0d2c5, 0xd0d2c9, 0xd0d2cf, 0xd2c1d7, 0xd2c5c4, 0xd3d120, 0xd3d4c1,\n            0xd3d4c9, 0xd3d4d7, 0xd4c5cc, 0xd4cf20, 0xd4cfd2, 0xd4d820, 0xd9c820,\n            0xded4cf,\n        ];\n    }\n    name() {\n        return 'KOI8-R';\n    }\n    language() {\n        return 'ru';\n    }\n}\nexports.KOI8_R = KOI8_R;\n//# sourceMappingURL=sbcs.js.map","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ISO_2022_CN = exports.ISO_2022_KR = exports.ISO_2022_JP = void 0;\nconst match_1 = __importDefault(require(\"../match\"));\nclass ISO_2022 {\n    constructor() {\n        this.escapeSequences = [];\n    }\n    name() {\n        return 'ISO_2022';\n    }\n    match(det) {\n        let i, j;\n        let escN;\n        let hits = 0;\n        let misses = 0;\n        let shifts = 0;\n        let confidence;\n        const text = det.inputBytes;\n        const textLen = det.inputLen;\n        scanInput: for (i = 0; i < textLen; i++) {\n            if (text[i] == 0x1b) {\n                checkEscapes: for (escN = 0; escN < this.escapeSequences.length; escN++) {\n                    const seq = this.escapeSequences[escN];\n                    if (textLen - i < seq.length)\n                        continue checkEscapes;\n                    for (j = 1; j < seq.length; j++)\n                        if (seq[j] != text[i + j])\n                            continue checkEscapes;\n                    hits++;\n                    i += seq.length - 1;\n                    continue scanInput;\n                }\n                misses++;\n            }\n            if (text[i] == 0x0e || text[i] == 0x0f)\n                shifts++;\n        }\n        if (hits == 0)\n            return null;\n        confidence = (100 * hits - 100 * misses) / (hits + misses);\n        if (hits + shifts < 5)\n            confidence -= (5 - (hits + shifts)) * 10;\n        return confidence <= 0 ? null : (0, match_1.default)(det, this, confidence);\n    }\n}\nclass ISO_2022_JP extends ISO_2022 {\n    constructor() {\n        super(...arguments);\n        this.escapeSequences = [\n            [0x1b, 0x24, 0x28, 0x43],\n            [0x1b, 0x24, 0x28, 0x44],\n            [0x1b, 0x24, 0x40],\n            [0x1b, 0x24, 0x41],\n            [0x1b, 0x24, 0x42],\n            [0x1b, 0x26, 0x40],\n            [0x1b, 0x28, 0x42],\n            [0x1b, 0x28, 0x48],\n            [0x1b, 0x28, 0x49],\n            [0x1b, 0x28, 0x4a],\n            [0x1b, 0x2e, 0x41],\n            [0x1b, 0x2e, 0x46],\n        ];\n    }\n    name() {\n        return 'ISO-2022-JP';\n    }\n    language() {\n        return 'ja';\n    }\n}\nexports.ISO_2022_JP = ISO_2022_JP;\nclass ISO_2022_KR extends ISO_2022 {\n    constructor() {\n        super(...arguments);\n        this.escapeSequences = [[0x1b, 0x24, 0x29, 0x43]];\n    }\n    name() {\n        return 'ISO-2022-KR';\n    }\n    language() {\n        return 'kr';\n    }\n}\nexports.ISO_2022_KR = ISO_2022_KR;\nclass ISO_2022_CN extends ISO_2022 {\n    constructor() {\n        super(...arguments);\n        this.escapeSequences = [\n            [0x1b, 0x24, 0x29, 0x41],\n            [0x1b, 0x24, 0x29, 0x47],\n            [0x1b, 0x24, 0x2a, 0x48],\n            [0x1b, 0x24, 0x29, 0x45],\n            [0x1b, 0x24, 0x2b, 0x49],\n            [0x1b, 0x24, 0x2b, 0x4a],\n            [0x1b, 0x24, 0x2b, 0x4b],\n            [0x1b, 0x24, 0x2b, 0x4c],\n            [0x1b, 0x24, 0x2b, 0x4d],\n            [0x1b, 0x4e],\n            [0x1b, 0x4f],\n        ];\n    }\n    name() {\n        return 'ISO-2022-CN';\n    }\n    language() {\n        return 'zh';\n    }\n}\nexports.ISO_2022_CN = ISO_2022_CN;\n//# sourceMappingURL=iso2022.js.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || (function () {\n    var ownKeys = function(o) {\n        ownKeys = Object.getOwnPropertyNames || function (o) {\n            var ar = [];\n            for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;\n            return ar;\n        };\n        return ownKeys(o);\n    };\n    return function (mod) {\n        if (mod && mod.__esModule) return mod;\n        var result = {};\n        if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== \"default\") __createBinding(result, mod, k[i]);\n        __setModuleDefault(result, mod);\n        return result;\n    };\n})();\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.detectFileSync = exports.detectFile = exports.analyse = exports.detect = void 0;\nconst node_1 = __importDefault(require(\"./fs/node\"));\nconst ascii_1 = __importDefault(require(\"./encoding/ascii\"));\nconst utf8_1 = __importDefault(require(\"./encoding/utf8\"));\nconst unicode = __importStar(require(\"./encoding/unicode\"));\nconst mbcs = __importStar(require(\"./encoding/mbcs\"));\nconst sbcs = __importStar(require(\"./encoding/sbcs\"));\nconst iso2022 = __importStar(require(\"./encoding/iso2022\"));\nconst utils_1 = require(\"./utils\");\nconst recognisers = [\n    new utf8_1.default(),\n    new unicode.UTF_16BE(),\n    new unicode.UTF_16LE(),\n    new unicode.UTF_32BE(),\n    new unicode.UTF_32LE(),\n    new mbcs.sjis(),\n    new mbcs.big5(),\n    new mbcs.euc_jp(),\n    new mbcs.euc_kr(),\n    new mbcs.gb_18030(),\n    new iso2022.ISO_2022_JP(),\n    new iso2022.ISO_2022_KR(),\n    new iso2022.ISO_2022_CN(),\n    new sbcs.ISO_8859_1(),\n    new sbcs.ISO_8859_2(),\n    new sbcs.ISO_8859_5(),\n    new sbcs.ISO_8859_6(),\n    new sbcs.ISO_8859_7(),\n    new sbcs.ISO_8859_8(),\n    new sbcs.ISO_8859_9(),\n    new sbcs.windows_1251(),\n    new sbcs.windows_1256(),\n    new sbcs.KOI8_R(),\n    new ascii_1.default(),\n];\nconst detect = (buffer) => {\n    const matches = (0, exports.analyse)(buffer);\n    return matches.length > 0 ? matches[0].name : null;\n};\nexports.detect = detect;\nconst analyse = (buffer) => {\n    if (!(0, utils_1.isByteArray)(buffer)) {\n        throw new Error('Input must be a byte array, e.g. Buffer or Uint8Array');\n    }\n    const byteStats = [];\n    for (let i = 0; i < 256; i++)\n        byteStats[i] = 0;\n    for (let i = buffer.length - 1; i >= 0; i--)\n        byteStats[buffer[i] & 0x00ff]++;\n    let c1Bytes = false;\n    for (let i = 0x80; i <= 0x9f; i += 1) {\n        if (byteStats[i] !== 0) {\n            c1Bytes = true;\n            break;\n        }\n    }\n    const context = {\n        byteStats,\n        c1Bytes,\n        rawInput: buffer,\n        rawLen: buffer.length,\n        inputBytes: buffer,\n        inputLen: buffer.length,\n    };\n    const matches = recognisers\n        .map((rec) => {\n        return rec.match(context);\n    })\n        .filter((match) => {\n        return !!match;\n    })\n        .sort((a, b) => {\n        return b.confidence - a.confidence;\n    });\n    return matches;\n};\nexports.analyse = analyse;\nconst detectFile = (filepath, opts = {}) => new Promise((resolve, reject) => {\n    let fd;\n    const fs = (0, node_1.default)();\n    const handler = (err, buffer) => {\n        if (fd) {\n            fs.closeSync(fd);\n        }\n        if (err) {\n            reject(err);\n        }\n        else {\n            resolve((0, exports.detect)(buffer));\n        }\n    };\n    if (opts && opts.sampleSize) {\n        fd = fs.openSync(filepath, 'r');\n        const sample = Buffer.allocUnsafe(opts.sampleSize);\n        fs.read(fd, sample, 0, opts.sampleSize, opts.offset, (err) => {\n            handler(err, sample);\n        });\n        return;\n    }\n    fs.readFile(filepath, handler);\n});\nexports.detectFile = detectFile;\nconst detectFileSync = (filepath, opts = {}) => {\n    const fs = (0, node_1.default)();\n    if (opts && opts.sampleSize) {\n        const fd = fs.openSync(filepath, 'r');\n        const sample = Buffer.allocUnsafe(opts.sampleSize);\n        fs.readSync(fd, sample, 0, opts.sampleSize, opts.offset);\n        fs.closeSync(fd);\n        return (0, exports.detect)(sample);\n    }\n    return (0, exports.detect)(fs.readFileSync(filepath));\n};\nexports.detectFileSync = detectFileSync;\nexports.default = {\n    analyse: exports.analyse,\n    detect: exports.detect,\n    detectFileSync: exports.detectFileSync,\n    detectFile: exports.detectFile,\n};\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nlet fsModule;\nexports.default = () => {\n    if (typeof module === 'object' && typeof module.exports === 'object') {\n        fsModule = fsModule ? fsModule : require('fs');\n        return fsModule;\n    }\n    throw new Error('File system is not available');\n};\n//# sourceMappingURL=node.js.map","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst match_1 = __importDefault(require(\"../match\"));\nclass Ascii {\n    name() {\n        return 'ASCII';\n    }\n    match(det) {\n        const input = det.rawInput;\n        for (let i = 0; i < det.rawLen; i++) {\n            const b = input[i];\n            if (b < 32 || b > 126) {\n                return (0, match_1.default)(det, this, 0);\n            }\n        }\n        return (0, match_1.default)(det, this, 100);\n    }\n}\nexports.default = Ascii;\n//# sourceMappingURL=ascii.js.map","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst match_1 = __importDefault(require(\"../match\"));\nclass Utf8 {\n    name() {\n        return 'UTF-8';\n    }\n    match(det) {\n        let hasBOM = false, numValid = 0, numInvalid = 0, trailBytes = 0, confidence;\n        const input = det.rawInput;\n        if (det.rawLen >= 3 &&\n            (input[0] & 0xff) == 0xef &&\n            (input[1] & 0xff) == 0xbb &&\n            (input[2] & 0xff) == 0xbf) {\n            hasBOM = true;\n        }\n        for (let i = 0; i < det.rawLen; i++) {\n            const b = input[i];\n            if ((b & 0x80) == 0)\n                continue;\n            if ((b & 0x0e0) == 0x0c0) {\n                trailBytes = 1;\n            }\n            else if ((b & 0x0f0) == 0x0e0) {\n                trailBytes = 2;\n            }\n            else if ((b & 0x0f8) == 0xf0) {\n                trailBytes = 3;\n            }\n            else {\n                numInvalid++;\n                if (numInvalid > 5)\n                    break;\n                trailBytes = 0;\n            }\n            for (;;) {\n                i++;\n                if (i >= det.rawLen)\n                    break;\n                if ((input[i] & 0xc0) != 0x080) {\n                    numInvalid++;\n                    break;\n                }\n                if (--trailBytes == 0) {\n                    numValid++;\n                    break;\n                }\n            }\n        }\n        confidence = 0;\n        if (hasBOM && numInvalid == 0)\n            confidence = 100;\n        else if (hasBOM && numValid > numInvalid * 10)\n            confidence = 80;\n        else if (numValid > 3 && numInvalid == 0)\n            confidence = 100;\n        else if (numValid > 0 && numInvalid == 0)\n            confidence = 80;\n        else if (numValid == 0 && numInvalid == 0)\n            confidence = 10;\n        else if (numValid > numInvalid * 10)\n            confidence = 25;\n        else\n            return null;\n        return (0, match_1.default)(det, this, confidence);\n    }\n}\nexports.default = Utf8;\n//# sourceMappingURL=utf8.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isByteArray = void 0;\nconst isByteArray = (input) => {\n    if (input == null || typeof input != 'object')\n        return false;\n    return isFinite(input.length) && input.length >= 0;\n};\nexports.isByteArray = isByteArray;\n//# sourceMappingURL=utils.js.map","/* eslint-disable node/no-deprecated-api */\n\n'use strict'\n\nvar buffer = require('buffer')\nvar Buffer = buffer.Buffer\n\nvar safer = {}\n\nvar key\n\nfor (key in buffer) {\n  if (!buffer.hasOwnProperty(key)) continue\n  if (key === 'SlowBuffer' || key === 'Buffer') continue\n  safer[key] = buffer[key]\n}\n\nvar Safer = safer.Buffer = {}\nfor (key in Buffer) {\n  if (!Buffer.hasOwnProperty(key)) continue\n  if (key === 'allocUnsafe' || key === 'allocUnsafeSlow') continue\n  Safer[key] = Buffer[key]\n}\n\nsafer.Buffer.prototype = Buffer.prototype\n\nif (!Safer.from || Safer.from === Uint8Array.from) {\n  Safer.from = function (value, encodingOrOffset, length) {\n    if (typeof value === 'number') {\n      throw new TypeError('The \"value\" argument must not be of type number. Received type ' + typeof value)\n    }\n    if (value && typeof value.length === 'undefined') {\n      throw new TypeError('The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type ' + typeof value)\n    }\n    return Buffer(value, encodingOrOffset, length)\n  }\n}\n\nif (!Safer.alloc) {\n  Safer.alloc = function (size, fill, encoding) {\n    if (typeof size !== 'number') {\n      throw new TypeError('The \"size\" argument must be of type number. Received type ' + typeof size)\n    }\n    if (size < 0 || size >= 2 * (1 << 30)) {\n      throw new RangeError('The value \"' + size + '\" is invalid for option \"size\"')\n    }\n    var buf = Buffer(size)\n    if (!fill || fill.length === 0) {\n      buf.fill(0)\n    } else if (typeof encoding === 'string') {\n      buf.fill(fill, encoding)\n    } else {\n      buf.fill(fill)\n    }\n    return buf\n  }\n}\n\nif (!safer.kStringMaxLength) {\n  try {\n    safer.kStringMaxLength = process.binding('buffer').kStringMaxLength\n  } catch (e) {\n    // we can't determine kStringMaxLength in environments where process.binding\n    // is unsupported, so let's not set it\n  }\n}\n\nif (!safer.constants) {\n  safer.constants = {\n    MAX_LENGTH: safer.kMaxLength\n  }\n  if (safer.kStringMaxLength) {\n    safer.constants.MAX_STRING_LENGTH = safer.kStringMaxLength\n  }\n}\n\nmodule.exports = safer\n","\"use strict\";\n\nvar BOMChar = '\\uFEFF';\n\nexports.PrependBOM = PrependBOMWrapper\nfunction PrependBOMWrapper(encoder, options) {\n    this.encoder = encoder;\n    this.addBOM = true;\n}\n\nPrependBOMWrapper.prototype.write = function(str) {\n    if (this.addBOM) {\n        str = BOMChar + str;\n        this.addBOM = false;\n    }\n\n    return this.encoder.write(str);\n}\n\nPrependBOMWrapper.prototype.end = function() {\n    return this.encoder.end();\n}\n\n\n//------------------------------------------------------------------------------\n\nexports.StripBOM = StripBOMWrapper;\nfunction StripBOMWrapper(decoder, options) {\n    this.decoder = decoder;\n    this.pass = false;\n    this.options = options || {};\n}\n\nStripBOMWrapper.prototype.write = function(buf) {\n    var res = this.decoder.write(buf);\n    if (this.pass || !res)\n        return res;\n\n    if (res[0] === BOMChar) {\n        res = res.slice(1);\n        if (typeof this.options.stripBOM === 'function')\n            this.options.stripBOM();\n    }\n\n    this.pass = true;\n    return res;\n}\n\nStripBOMWrapper.prototype.end = function() {\n    return this.decoder.end();\n}\n\n","\"use strict\";\nvar Buffer = require(\"safer-buffer\").Buffer;\n\n// Export Node.js internal encodings.\n\nmodule.exports = {\n    // Encodings\n    utf8:   { type: \"_internal\", bomAware: true},\n    cesu8:  { type: \"_internal\", bomAware: true},\n    unicode11utf8: \"utf8\",\n\n    ucs2:   { type: \"_internal\", bomAware: true},\n    utf16le: \"ucs2\",\n\n    binary: { type: \"_internal\" },\n    base64: { type: \"_internal\" },\n    hex:    { type: \"_internal\" },\n\n    // Codec.\n    _internal: InternalCodec,\n};\n\n//------------------------------------------------------------------------------\n\nfunction InternalCodec(codecOptions, iconv) {\n    this.enc = codecOptions.encodingName;\n    this.bomAware = codecOptions.bomAware;\n\n    if (this.enc === \"base64\")\n        this.encoder = InternalEncoderBase64;\n    else if (this.enc === \"cesu8\") {\n        this.enc = \"utf8\"; // Use utf8 for decoding.\n        this.encoder = InternalEncoderCesu8;\n\n        // Add decoder for versions of Node not supporting CESU-8\n        if (Buffer.from('eda0bdedb2a9', 'hex').toString() !== '💩') {\n            this.decoder = InternalDecoderCesu8;\n            this.defaultCharUnicode = iconv.defaultCharUnicode;\n        }\n    }\n}\n\nInternalCodec.prototype.encoder = InternalEncoder;\nInternalCodec.prototype.decoder = InternalDecoder;\n\n//------------------------------------------------------------------------------\n\n// We use node.js internal decoder. Its signature is the same as ours.\nvar StringDecoder = require('string_decoder').StringDecoder;\n\nif (!StringDecoder.prototype.end) // Node v0.8 doesn't have this method.\n    StringDecoder.prototype.end = function() {};\n\n\nfunction InternalDecoder(options, codec) {\n    this.decoder = new StringDecoder(codec.enc);\n}\n\nInternalDecoder.prototype.write = function(buf) {\n    if (!Buffer.isBuffer(buf)) {\n        buf = Buffer.from(buf);\n    }\n\n    return this.decoder.write(buf);\n}\n\nInternalDecoder.prototype.end = function() {\n    return this.decoder.end();\n}\n\n\n//------------------------------------------------------------------------------\n// Encoder is mostly trivial\n\nfunction InternalEncoder(options, codec) {\n    this.enc = codec.enc;\n}\n\nInternalEncoder.prototype.write = function(str) {\n    return Buffer.from(str, this.enc);\n}\n\nInternalEncoder.prototype.end = function() {\n}\n\n\n//------------------------------------------------------------------------------\n// Except base64 encoder, which must keep its state.\n\nfunction InternalEncoderBase64(options, codec) {\n    this.prevStr = '';\n}\n\nInternalEncoderBase64.prototype.write = function(str) {\n    str = this.prevStr + str;\n    var completeQuads = str.length - (str.length % 4);\n    this.prevStr = str.slice(completeQuads);\n    str = str.slice(0, completeQuads);\n\n    return Buffer.from(str, \"base64\");\n}\n\nInternalEncoderBase64.prototype.end = function() {\n    return Buffer.from(this.prevStr, \"base64\");\n}\n\n\n//------------------------------------------------------------------------------\n// CESU-8 encoder is also special.\n\nfunction InternalEncoderCesu8(options, codec) {\n}\n\nInternalEncoderCesu8.prototype.write = function(str) {\n    var buf = Buffer.alloc(str.length * 3), bufIdx = 0;\n    for (var i = 0; i < str.length; i++) {\n        var charCode = str.charCodeAt(i);\n        // Naive implementation, but it works because CESU-8 is especially easy\n        // to convert from UTF-16 (which all JS strings are encoded in).\n        if (charCode < 0x80)\n            buf[bufIdx++] = charCode;\n        else if (charCode < 0x800) {\n            buf[bufIdx++] = 0xC0 + (charCode >>> 6);\n            buf[bufIdx++] = 0x80 + (charCode & 0x3f);\n        }\n        else { // charCode will always be < 0x10000 in javascript.\n            buf[bufIdx++] = 0xE0 + (charCode >>> 12);\n            buf[bufIdx++] = 0x80 + ((charCode >>> 6) & 0x3f);\n            buf[bufIdx++] = 0x80 + (charCode & 0x3f);\n        }\n    }\n    return buf.slice(0, bufIdx);\n}\n\nInternalEncoderCesu8.prototype.end = function() {\n}\n\n//------------------------------------------------------------------------------\n// CESU-8 decoder is not implemented in Node v4.0+\n\nfunction InternalDecoderCesu8(options, codec) {\n    this.acc = 0;\n    this.contBytes = 0;\n    this.accBytes = 0;\n    this.defaultCharUnicode = codec.defaultCharUnicode;\n}\n\nInternalDecoderCesu8.prototype.write = function(buf) {\n    var acc = this.acc, contBytes = this.contBytes, accBytes = this.accBytes, \n        res = '';\n    for (var i = 0; i < buf.length; i++) {\n        var curByte = buf[i];\n        if ((curByte & 0xC0) !== 0x80) { // Leading byte\n            if (contBytes > 0) { // Previous code is invalid\n                res += this.defaultCharUnicode;\n                contBytes = 0;\n            }\n\n            if (curByte < 0x80) { // Single-byte code\n                res += String.fromCharCode(curByte);\n            } else if (curByte < 0xE0) { // Two-byte code\n                acc = curByte & 0x1F;\n                contBytes = 1; accBytes = 1;\n            } else if (curByte < 0xF0) { // Three-byte code\n                acc = curByte & 0x0F;\n                contBytes = 2; accBytes = 1;\n            } else { // Four or more are not supported for CESU-8.\n                res += this.defaultCharUnicode;\n            }\n        } else { // Continuation byte\n            if (contBytes > 0) { // We're waiting for it.\n                acc = (acc << 6) | (curByte & 0x3f);\n                contBytes--; accBytes++;\n                if (contBytes === 0) {\n                    // Check for overlong encoding, but support Modified UTF-8 (encoding NULL as C0 80)\n                    if (accBytes === 2 && acc < 0x80 && acc > 0)\n                        res += this.defaultCharUnicode;\n                    else if (accBytes === 3 && acc < 0x800)\n                        res += this.defaultCharUnicode;\n                    else\n                        // Actually add character.\n                        res += String.fromCharCode(acc);\n                }\n            } else { // Unexpected continuation byte\n                res += this.defaultCharUnicode;\n            }\n        }\n    }\n    this.acc = acc; this.contBytes = contBytes; this.accBytes = accBytes;\n    return res;\n}\n\nInternalDecoderCesu8.prototype.end = function() {\n    var res = 0;\n    if (this.contBytes > 0)\n        res += this.defaultCharUnicode;\n    return res;\n}\n","'use strict';\n\nvar Buffer = require('safer-buffer').Buffer;\n\n// == UTF32-LE/BE codec. ==========================================================\n\nexports._utf32 = Utf32Codec;\n\nfunction Utf32Codec(codecOptions, iconv) {\n    this.iconv = iconv;\n    this.bomAware = true;\n    this.isLE = codecOptions.isLE;\n}\n\nexports.utf32le = { type: '_utf32', isLE: true };\nexports.utf32be = { type: '_utf32', isLE: false };\n\n// Aliases\nexports.ucs4le = 'utf32le';\nexports.ucs4be = 'utf32be';\n\nUtf32Codec.prototype.encoder = Utf32Encoder;\nUtf32Codec.prototype.decoder = Utf32Decoder;\n\n// -- Encoding\n\nfunction Utf32Encoder(options, codec) {\n    this.isLE = codec.isLE;\n    this.highSurrogate = 0;\n}\n\nUtf32Encoder.prototype.write = function(str) {\n    var src = Buffer.from(str, 'ucs2');\n    var dst = Buffer.alloc(src.length * 2);\n    var write32 = this.isLE ? dst.writeUInt32LE : dst.writeUInt32BE;\n    var offset = 0;\n\n    for (var i = 0; i < src.length; i += 2) {\n        var code = src.readUInt16LE(i);\n        var isHighSurrogate = (0xD800 <= code && code < 0xDC00);\n        var isLowSurrogate = (0xDC00 <= code && code < 0xE000);\n\n        if (this.highSurrogate) {\n            if (isHighSurrogate || !isLowSurrogate) {\n                // There shouldn't be two high surrogates in a row, nor a high surrogate which isn't followed by a low\n                // surrogate. If this happens, keep the pending high surrogate as a stand-alone semi-invalid character\n                // (technically wrong, but expected by some applications, like Windows file names).\n                write32.call(dst, this.highSurrogate, offset);\n                offset += 4;\n            }\n            else {\n                // Create 32-bit value from high and low surrogates;\n                var codepoint = (((this.highSurrogate - 0xD800) << 10) | (code - 0xDC00)) + 0x10000;\n\n                write32.call(dst, codepoint, offset);\n                offset += 4;\n                this.highSurrogate = 0;\n\n                continue;\n            }\n        }\n\n        if (isHighSurrogate)\n            this.highSurrogate = code;\n        else {\n            // Even if the current character is a low surrogate, with no previous high surrogate, we'll\n            // encode it as a semi-invalid stand-alone character for the same reasons expressed above for\n            // unpaired high surrogates.\n            write32.call(dst, code, offset);\n            offset += 4;\n            this.highSurrogate = 0;\n        }\n    }\n\n    if (offset < dst.length)\n        dst = dst.slice(0, offset);\n\n    return dst;\n};\n\nUtf32Encoder.prototype.end = function() {\n    // Treat any leftover high surrogate as a semi-valid independent character.\n    if (!this.highSurrogate)\n        return;\n\n    var buf = Buffer.alloc(4);\n\n    if (this.isLE)\n        buf.writeUInt32LE(this.highSurrogate, 0);\n    else\n        buf.writeUInt32BE(this.highSurrogate, 0);\n\n    this.highSurrogate = 0;\n\n    return buf;\n};\n\n// -- Decoding\n\nfunction Utf32Decoder(options, codec) {\n    this.isLE = codec.isLE;\n    this.badChar = codec.iconv.defaultCharUnicode.charCodeAt(0);\n    this.overflow = [];\n}\n\nUtf32Decoder.prototype.write = function(src) {\n    if (src.length === 0)\n        return '';\n\n    var i = 0;\n    var codepoint = 0;\n    var dst = Buffer.alloc(src.length + 4);\n    var offset = 0;\n    var isLE = this.isLE;\n    var overflow = this.overflow;\n    var badChar = this.badChar;\n\n    if (overflow.length > 0) {\n        for (; i < src.length && overflow.length < 4; i++)\n            overflow.push(src[i]);\n        \n        if (overflow.length === 4) {\n            // NOTE: codepoint is a signed int32 and can be negative.\n            // NOTE: We copied this block from below to help V8 optimize it (it works with array, not buffer).\n            if (isLE) {\n                codepoint = overflow[i] | (overflow[i+1] << 8) | (overflow[i+2] << 16) | (overflow[i+3] << 24);\n            } else {\n                codepoint = overflow[i+3] | (overflow[i+2] << 8) | (overflow[i+1] << 16) | (overflow[i] << 24);\n            }\n            overflow.length = 0;\n\n            offset = _writeCodepoint(dst, offset, codepoint, badChar);\n        }\n    }\n\n    // Main loop. Should be as optimized as possible.\n    for (; i < src.length - 3; i += 4) {\n        // NOTE: codepoint is a signed int32 and can be negative.\n        if (isLE) {\n            codepoint = src[i] | (src[i+1] << 8) | (src[i+2] << 16) | (src[i+3] << 24);\n        } else {\n            codepoint = src[i+3] | (src[i+2] << 8) | (src[i+1] << 16) | (src[i] << 24);\n        }\n        offset = _writeCodepoint(dst, offset, codepoint, badChar);\n    }\n\n    // Keep overflowing bytes.\n    for (; i < src.length; i++) {\n        overflow.push(src[i]);\n    }\n\n    return dst.slice(0, offset).toString('ucs2');\n};\n\nfunction _writeCodepoint(dst, offset, codepoint, badChar) {\n    // NOTE: codepoint is signed int32 and can be negative. We keep it that way to help V8 with optimizations.\n    if (codepoint < 0 || codepoint > 0x10FFFF) {\n        // Not a valid Unicode codepoint\n        codepoint = badChar;\n    } \n\n    // Ephemeral Planes: Write high surrogate.\n    if (codepoint >= 0x10000) {\n        codepoint -= 0x10000;\n\n        var high = 0xD800 | (codepoint >> 10);\n        dst[offset++] = high & 0xff;\n        dst[offset++] = high >> 8;\n\n        // Low surrogate is written below.\n        var codepoint = 0xDC00 | (codepoint & 0x3FF);\n    }\n\n    // Write BMP char or low surrogate.\n    dst[offset++] = codepoint & 0xff;\n    dst[offset++] = codepoint >> 8;\n\n    return offset;\n};\n\nUtf32Decoder.prototype.end = function() {\n    this.overflow.length = 0;\n};\n\n// == UTF-32 Auto codec =============================================================\n// Decoder chooses automatically from UTF-32LE and UTF-32BE using BOM and space-based heuristic.\n// Defaults to UTF-32LE. http://en.wikipedia.org/wiki/UTF-32\n// Encoder/decoder default can be changed: iconv.decode(buf, 'utf32', {defaultEncoding: 'utf-32be'});\n\n// Encoder prepends BOM (which can be overridden with (addBOM: false}).\n\nexports.utf32 = Utf32AutoCodec;\nexports.ucs4 = 'utf32';\n\nfunction Utf32AutoCodec(options, iconv) {\n    this.iconv = iconv;\n}\n\nUtf32AutoCodec.prototype.encoder = Utf32AutoEncoder;\nUtf32AutoCodec.prototype.decoder = Utf32AutoDecoder;\n\n// -- Encoding\n\nfunction Utf32AutoEncoder(options, codec) {\n    options = options || {};\n\n    if (options.addBOM === undefined)\n        options.addBOM = true;\n\n    this.encoder = codec.iconv.getEncoder(options.defaultEncoding || 'utf-32le', options);\n}\n\nUtf32AutoEncoder.prototype.write = function(str) {\n    return this.encoder.write(str);\n};\n\nUtf32AutoEncoder.prototype.end = function() {\n    return this.encoder.end();\n};\n\n// -- Decoding\n\nfunction Utf32AutoDecoder(options, codec) {\n    this.decoder = null;\n    this.initialBufs = [];\n    this.initialBufsLen = 0;\n    this.options = options || {};\n    this.iconv = codec.iconv;\n}\n\nUtf32AutoDecoder.prototype.write = function(buf) {\n    if (!this.decoder) { \n        // Codec is not chosen yet. Accumulate initial bytes.\n        this.initialBufs.push(buf);\n        this.initialBufsLen += buf.length;\n\n        if (this.initialBufsLen < 32) // We need more bytes to use space heuristic (see below)\n            return '';\n\n        // We have enough bytes -> detect endianness.\n        var encoding = detectEncoding(this.initialBufs, this.options.defaultEncoding);\n        this.decoder = this.iconv.getDecoder(encoding, this.options);\n\n        var resStr = '';\n        for (var i = 0; i < this.initialBufs.length; i++)\n            resStr += this.decoder.write(this.initialBufs[i]);\n\n        this.initialBufs.length = this.initialBufsLen = 0;\n        return resStr;\n    }\n\n    return this.decoder.write(buf);\n};\n\nUtf32AutoDecoder.prototype.end = function() {\n    if (!this.decoder) {\n        var encoding = detectEncoding(this.initialBufs, this.options.defaultEncoding);\n        this.decoder = this.iconv.getDecoder(encoding, this.options);\n\n        var resStr = '';\n        for (var i = 0; i < this.initialBufs.length; i++)\n            resStr += this.decoder.write(this.initialBufs[i]);\n\n        var trail = this.decoder.end();\n        if (trail)\n            resStr += trail;\n\n        this.initialBufs.length = this.initialBufsLen = 0;\n        return resStr;\n    }\n\n    return this.decoder.end();\n};\n\nfunction detectEncoding(bufs, defaultEncoding) {\n    var b = [];\n    var charsProcessed = 0;\n    var invalidLE = 0, invalidBE = 0;   // Number of invalid chars when decoded as LE or BE.\n    var bmpCharsLE = 0, bmpCharsBE = 0; // Number of BMP chars when decoded as LE or BE.\n\n    outer_loop:\n    for (var i = 0; i < bufs.length; i++) {\n        var buf = bufs[i];\n        for (var j = 0; j < buf.length; j++) {\n            b.push(buf[j]);\n            if (b.length === 4) {\n                if (charsProcessed === 0) {\n                    // Check BOM first.\n                    if (b[0] === 0xFF && b[1] === 0xFE && b[2] === 0 && b[3] === 0) {\n                        return 'utf-32le';\n                    }\n                    if (b[0] === 0 && b[1] === 0 && b[2] === 0xFE && b[3] === 0xFF) {\n                        return 'utf-32be';\n                    }\n                }\n\n                if (b[0] !== 0 || b[1] > 0x10) invalidBE++;\n                if (b[3] !== 0 || b[2] > 0x10) invalidLE++;\n\n                if (b[0] === 0 && b[1] === 0 && (b[2] !== 0 || b[3] !== 0)) bmpCharsBE++;\n                if ((b[0] !== 0 || b[1] !== 0) && b[2] === 0 && b[3] === 0) bmpCharsLE++;\n\n                b.length = 0;\n                charsProcessed++;\n\n                if (charsProcessed >= 100) {\n                    break outer_loop;\n                }\n            }\n        }\n    }\n\n    // Make decisions.\n    if (bmpCharsBE - invalidBE > bmpCharsLE - invalidLE)  return 'utf-32be';\n    if (bmpCharsBE - invalidBE < bmpCharsLE - invalidLE)  return 'utf-32le';\n\n    // Couldn't decide (likely all zeros or not enough data).\n    return defaultEncoding || 'utf-32le';\n}\n","\"use strict\";\nvar Buffer = require(\"safer-buffer\").Buffer;\n\n// Note: UTF16-LE (or UCS2) codec is Node.js native. See encodings/internal.js\n\n// == UTF16-BE codec. ==========================================================\n\nexports.utf16be = Utf16BECodec;\nfunction Utf16BECodec() {\n}\n\nUtf16BECodec.prototype.encoder = Utf16BEEncoder;\nUtf16BECodec.prototype.decoder = Utf16BEDecoder;\nUtf16BECodec.prototype.bomAware = true;\n\n\n// -- Encoding\n\nfunction Utf16BEEncoder() {\n}\n\nUtf16BEEncoder.prototype.write = function(str) {\n    var buf = Buffer.from(str, 'ucs2');\n    for (var i = 0; i < buf.length; i += 2) {\n        var tmp = buf[i]; buf[i] = buf[i+1]; buf[i+1] = tmp;\n    }\n    return buf;\n}\n\nUtf16BEEncoder.prototype.end = function() {\n}\n\n\n// -- Decoding\n\nfunction Utf16BEDecoder() {\n    this.overflowByte = -1;\n}\n\nUtf16BEDecoder.prototype.write = function(buf) {\n    if (buf.length == 0)\n        return '';\n\n    var buf2 = Buffer.alloc(buf.length + 1),\n        i = 0, j = 0;\n\n    if (this.overflowByte !== -1) {\n        buf2[0] = buf[0];\n        buf2[1] = this.overflowByte;\n        i = 1; j = 2;\n    }\n\n    for (; i < buf.length-1; i += 2, j+= 2) {\n        buf2[j] = buf[i+1];\n        buf2[j+1] = buf[i];\n    }\n\n    this.overflowByte = (i == buf.length-1) ? buf[buf.length-1] : -1;\n\n    return buf2.slice(0, j).toString('ucs2');\n}\n\nUtf16BEDecoder.prototype.end = function() {\n    this.overflowByte = -1;\n}\n\n\n// == UTF-16 codec =============================================================\n// Decoder chooses automatically from UTF-16LE and UTF-16BE using BOM and space-based heuristic.\n// Defaults to UTF-16LE, as it's prevalent and default in Node.\n// http://en.wikipedia.org/wiki/UTF-16 and http://encoding.spec.whatwg.org/#utf-16le\n// Decoder default can be changed: iconv.decode(buf, 'utf16', {defaultEncoding: 'utf-16be'});\n\n// Encoder uses UTF-16LE and prepends BOM (which can be overridden with addBOM: false).\n\nexports.utf16 = Utf16Codec;\nfunction Utf16Codec(codecOptions, iconv) {\n    this.iconv = iconv;\n}\n\nUtf16Codec.prototype.encoder = Utf16Encoder;\nUtf16Codec.prototype.decoder = Utf16Decoder;\n\n\n// -- Encoding (pass-through)\n\nfunction Utf16Encoder(options, codec) {\n    options = options || {};\n    if (options.addBOM === undefined)\n        options.addBOM = true;\n    this.encoder = codec.iconv.getEncoder('utf-16le', options);\n}\n\nUtf16Encoder.prototype.write = function(str) {\n    return this.encoder.write(str);\n}\n\nUtf16Encoder.prototype.end = function() {\n    return this.encoder.end();\n}\n\n\n// -- Decoding\n\nfunction Utf16Decoder(options, codec) {\n    this.decoder = null;\n    this.initialBufs = [];\n    this.initialBufsLen = 0;\n\n    this.options = options || {};\n    this.iconv = codec.iconv;\n}\n\nUtf16Decoder.prototype.write = function(buf) {\n    if (!this.decoder) {\n        // Codec is not chosen yet. Accumulate initial bytes.\n        this.initialBufs.push(buf);\n        this.initialBufsLen += buf.length;\n        \n        if (this.initialBufsLen < 16) // We need more bytes to use space heuristic (see below)\n            return '';\n\n        // We have enough bytes -> detect endianness.\n        var encoding = detectEncoding(this.initialBufs, this.options.defaultEncoding);\n        this.decoder = this.iconv.getDecoder(encoding, this.options);\n\n        var resStr = '';\n        for (var i = 0; i < this.initialBufs.length; i++)\n            resStr += this.decoder.write(this.initialBufs[i]);\n\n        this.initialBufs.length = this.initialBufsLen = 0;\n        return resStr;\n    }\n\n    return this.decoder.write(buf);\n}\n\nUtf16Decoder.prototype.end = function() {\n    if (!this.decoder) {\n        var encoding = detectEncoding(this.initialBufs, this.options.defaultEncoding);\n        this.decoder = this.iconv.getDecoder(encoding, this.options);\n\n        var resStr = '';\n        for (var i = 0; i < this.initialBufs.length; i++)\n            resStr += this.decoder.write(this.initialBufs[i]);\n\n        var trail = this.decoder.end();\n        if (trail)\n            resStr += trail;\n\n        this.initialBufs.length = this.initialBufsLen = 0;\n        return resStr;\n    }\n    return this.decoder.end();\n}\n\nfunction detectEncoding(bufs, defaultEncoding) {\n    var b = [];\n    var charsProcessed = 0;\n    var asciiCharsLE = 0, asciiCharsBE = 0; // Number of ASCII chars when decoded as LE or BE.\n\n    outer_loop:\n    for (var i = 0; i < bufs.length; i++) {\n        var buf = bufs[i];\n        for (var j = 0; j < buf.length; j++) {\n            b.push(buf[j]);\n            if (b.length === 2) {\n                if (charsProcessed === 0) {\n                    // Check BOM first.\n                    if (b[0] === 0xFF && b[1] === 0xFE) return 'utf-16le';\n                    if (b[0] === 0xFE && b[1] === 0xFF) return 'utf-16be';\n                }\n\n                if (b[0] === 0 && b[1] !== 0) asciiCharsBE++;\n                if (b[0] !== 0 && b[1] === 0) asciiCharsLE++;\n\n                b.length = 0;\n                charsProcessed++;\n\n                if (charsProcessed >= 100) {\n                    break outer_loop;\n                }\n            }\n        }\n    }\n\n    // Make decisions.\n    // Most of the time, the content has ASCII chars (U+00**), but the opposite (U+**00) is uncommon.\n    // So, we count ASCII as if it was LE or BE, and decide from that.\n    if (asciiCharsBE > asciiCharsLE) return 'utf-16be';\n    if (asciiCharsBE < asciiCharsLE) return 'utf-16le';\n\n    // Couldn't decide (likely all zeros or not enough data).\n    return defaultEncoding || 'utf-16le';\n}\n\n\n","\"use strict\";\nvar Buffer = require(\"safer-buffer\").Buffer;\n\n// UTF-7 codec, according to https://tools.ietf.org/html/rfc2152\n// See also below a UTF-7-IMAP codec, according to http://tools.ietf.org/html/rfc3501#section-5.1.3\n\nexports.utf7 = Utf7Codec;\nexports.unicode11utf7 = 'utf7'; // Alias UNICODE-1-1-UTF-7\nfunction Utf7Codec(codecOptions, iconv) {\n    this.iconv = iconv;\n};\n\nUtf7Codec.prototype.encoder = Utf7Encoder;\nUtf7Codec.prototype.decoder = Utf7Decoder;\nUtf7Codec.prototype.bomAware = true;\n\n\n// -- Encoding\n\nvar nonDirectChars = /[^A-Za-z0-9'\\(\\),-\\.\\/:\\? \\n\\r\\t]+/g;\n\nfunction Utf7Encoder(options, codec) {\n    this.iconv = codec.iconv;\n}\n\nUtf7Encoder.prototype.write = function(str) {\n    // Naive implementation.\n    // Non-direct chars are encoded as \"+<base64>-\"; single \"+\" char is encoded as \"+-\".\n    return Buffer.from(str.replace(nonDirectChars, function(chunk) {\n        return \"+\" + (chunk === '+' ? '' : \n            this.iconv.encode(chunk, 'utf16-be').toString('base64').replace(/=+$/, '')) \n            + \"-\";\n    }.bind(this)));\n}\n\nUtf7Encoder.prototype.end = function() {\n}\n\n\n// -- Decoding\n\nfunction Utf7Decoder(options, codec) {\n    this.iconv = codec.iconv;\n    this.inBase64 = false;\n    this.base64Accum = '';\n}\n\nvar base64Regex = /[A-Za-z0-9\\/+]/;\nvar base64Chars = [];\nfor (var i = 0; i < 256; i++)\n    base64Chars[i] = base64Regex.test(String.fromCharCode(i));\n\nvar plusChar = '+'.charCodeAt(0), \n    minusChar = '-'.charCodeAt(0),\n    andChar = '&'.charCodeAt(0);\n\nUtf7Decoder.prototype.write = function(buf) {\n    var res = \"\", lastI = 0,\n        inBase64 = this.inBase64,\n        base64Accum = this.base64Accum;\n\n    // The decoder is more involved as we must handle chunks in stream.\n\n    for (var i = 0; i < buf.length; i++) {\n        if (!inBase64) { // We're in direct mode.\n            // Write direct chars until '+'\n            if (buf[i] == plusChar) {\n                res += this.iconv.decode(buf.slice(lastI, i), \"ascii\"); // Write direct chars.\n                lastI = i+1;\n                inBase64 = true;\n            }\n        } else { // We decode base64.\n            if (!base64Chars[buf[i]]) { // Base64 ended.\n                if (i == lastI && buf[i] == minusChar) {// \"+-\" -> \"+\"\n                    res += \"+\";\n                } else {\n                    var b64str = base64Accum + this.iconv.decode(buf.slice(lastI, i), \"ascii\");\n                    res += this.iconv.decode(Buffer.from(b64str, 'base64'), \"utf16-be\");\n                }\n\n                if (buf[i] != minusChar) // Minus is absorbed after base64.\n                    i--;\n\n                lastI = i+1;\n                inBase64 = false;\n                base64Accum = '';\n            }\n        }\n    }\n\n    if (!inBase64) {\n        res += this.iconv.decode(buf.slice(lastI), \"ascii\"); // Write direct chars.\n    } else {\n        var b64str = base64Accum + this.iconv.decode(buf.slice(lastI), \"ascii\");\n\n        var canBeDecoded = b64str.length - (b64str.length % 8); // Minimal chunk: 2 quads -> 2x3 bytes -> 3 chars.\n        base64Accum = b64str.slice(canBeDecoded); // The rest will be decoded in future.\n        b64str = b64str.slice(0, canBeDecoded);\n\n        res += this.iconv.decode(Buffer.from(b64str, 'base64'), \"utf16-be\");\n    }\n\n    this.inBase64 = inBase64;\n    this.base64Accum = base64Accum;\n\n    return res;\n}\n\nUtf7Decoder.prototype.end = function() {\n    var res = \"\";\n    if (this.inBase64 && this.base64Accum.length > 0)\n        res = this.iconv.decode(Buffer.from(this.base64Accum, 'base64'), \"utf16-be\");\n\n    this.inBase64 = false;\n    this.base64Accum = '';\n    return res;\n}\n\n\n// UTF-7-IMAP codec.\n// RFC3501 Sec. 5.1.3 Modified UTF-7 (http://tools.ietf.org/html/rfc3501#section-5.1.3)\n// Differences:\n//  * Base64 part is started by \"&\" instead of \"+\"\n//  * Direct characters are 0x20-0x7E, except \"&\" (0x26)\n//  * In Base64, \",\" is used instead of \"/\"\n//  * Base64 must not be used to represent direct characters.\n//  * No implicit shift back from Base64 (should always end with '-')\n//  * String must end in non-shifted position.\n//  * \"-&\" while in base64 is not allowed.\n\n\nexports.utf7imap = Utf7IMAPCodec;\nfunction Utf7IMAPCodec(codecOptions, iconv) {\n    this.iconv = iconv;\n};\n\nUtf7IMAPCodec.prototype.encoder = Utf7IMAPEncoder;\nUtf7IMAPCodec.prototype.decoder = Utf7IMAPDecoder;\nUtf7IMAPCodec.prototype.bomAware = true;\n\n\n// -- Encoding\n\nfunction Utf7IMAPEncoder(options, codec) {\n    this.iconv = codec.iconv;\n    this.inBase64 = false;\n    this.base64Accum = Buffer.alloc(6);\n    this.base64AccumIdx = 0;\n}\n\nUtf7IMAPEncoder.prototype.write = function(str) {\n    var inBase64 = this.inBase64,\n        base64Accum = this.base64Accum,\n        base64AccumIdx = this.base64AccumIdx,\n        buf = Buffer.alloc(str.length*5 + 10), bufIdx = 0;\n\n    for (var i = 0; i < str.length; i++) {\n        var uChar = str.charCodeAt(i);\n        if (0x20 <= uChar && uChar <= 0x7E) { // Direct character or '&'.\n            if (inBase64) {\n                if (base64AccumIdx > 0) {\n                    bufIdx += buf.write(base64Accum.slice(0, base64AccumIdx).toString('base64').replace(/\\//g, ',').replace(/=+$/, ''), bufIdx);\n                    base64AccumIdx = 0;\n                }\n\n                buf[bufIdx++] = minusChar; // Write '-', then go to direct mode.\n                inBase64 = false;\n            }\n\n            if (!inBase64) {\n                buf[bufIdx++] = uChar; // Write direct character\n\n                if (uChar === andChar)  // Ampersand -> '&-'\n                    buf[bufIdx++] = minusChar;\n            }\n\n        } else { // Non-direct character\n            if (!inBase64) {\n                buf[bufIdx++] = andChar; // Write '&', then go to base64 mode.\n                inBase64 = true;\n            }\n            if (inBase64) {\n                base64Accum[base64AccumIdx++] = uChar >> 8;\n                base64Accum[base64AccumIdx++] = uChar & 0xFF;\n\n                if (base64AccumIdx == base64Accum.length) {\n                    bufIdx += buf.write(base64Accum.toString('base64').replace(/\\//g, ','), bufIdx);\n                    base64AccumIdx = 0;\n                }\n            }\n        }\n    }\n\n    this.inBase64 = inBase64;\n    this.base64AccumIdx = base64AccumIdx;\n\n    return buf.slice(0, bufIdx);\n}\n\nUtf7IMAPEncoder.prototype.end = function() {\n    var buf = Buffer.alloc(10), bufIdx = 0;\n    if (this.inBase64) {\n        if (this.base64AccumIdx > 0) {\n            bufIdx += buf.write(this.base64Accum.slice(0, this.base64AccumIdx).toString('base64').replace(/\\//g, ',').replace(/=+$/, ''), bufIdx);\n            this.base64AccumIdx = 0;\n        }\n\n        buf[bufIdx++] = minusChar; // Write '-', then go to direct mode.\n        this.inBase64 = false;\n    }\n\n    return buf.slice(0, bufIdx);\n}\n\n\n// -- Decoding\n\nfunction Utf7IMAPDecoder(options, codec) {\n    this.iconv = codec.iconv;\n    this.inBase64 = false;\n    this.base64Accum = '';\n}\n\nvar base64IMAPChars = base64Chars.slice();\nbase64IMAPChars[','.charCodeAt(0)] = true;\n\nUtf7IMAPDecoder.prototype.write = function(buf) {\n    var res = \"\", lastI = 0,\n        inBase64 = this.inBase64,\n        base64Accum = this.base64Accum;\n\n    // The decoder is more involved as we must handle chunks in stream.\n    // It is forgiving, closer to standard UTF-7 (for example, '-' is optional at the end).\n\n    for (var i = 0; i < buf.length; i++) {\n        if (!inBase64) { // We're in direct mode.\n            // Write direct chars until '&'\n            if (buf[i] == andChar) {\n                res += this.iconv.decode(buf.slice(lastI, i), \"ascii\"); // Write direct chars.\n                lastI = i+1;\n                inBase64 = true;\n            }\n        } else { // We decode base64.\n            if (!base64IMAPChars[buf[i]]) { // Base64 ended.\n                if (i == lastI && buf[i] == minusChar) { // \"&-\" -> \"&\"\n                    res += \"&\";\n                } else {\n                    var b64str = base64Accum + this.iconv.decode(buf.slice(lastI, i), \"ascii\").replace(/,/g, '/');\n                    res += this.iconv.decode(Buffer.from(b64str, 'base64'), \"utf16-be\");\n                }\n\n                if (buf[i] != minusChar) // Minus may be absorbed after base64.\n                    i--;\n\n                lastI = i+1;\n                inBase64 = false;\n                base64Accum = '';\n            }\n        }\n    }\n\n    if (!inBase64) {\n        res += this.iconv.decode(buf.slice(lastI), \"ascii\"); // Write direct chars.\n    } else {\n        var b64str = base64Accum + this.iconv.decode(buf.slice(lastI), \"ascii\").replace(/,/g, '/');\n\n        var canBeDecoded = b64str.length - (b64str.length % 8); // Minimal chunk: 2 quads -> 2x3 bytes -> 3 chars.\n        base64Accum = b64str.slice(canBeDecoded); // The rest will be decoded in future.\n        b64str = b64str.slice(0, canBeDecoded);\n\n        res += this.iconv.decode(Buffer.from(b64str, 'base64'), \"utf16-be\");\n    }\n\n    this.inBase64 = inBase64;\n    this.base64Accum = base64Accum;\n\n    return res;\n}\n\nUtf7IMAPDecoder.prototype.end = function() {\n    var res = \"\";\n    if (this.inBase64 && this.base64Accum.length > 0)\n        res = this.iconv.decode(Buffer.from(this.base64Accum, 'base64'), \"utf16-be\");\n\n    this.inBase64 = false;\n    this.base64Accum = '';\n    return res;\n}\n\n\n","\"use strict\";\nvar Buffer = require(\"safer-buffer\").Buffer;\n\n// Single-byte codec. Needs a 'chars' string parameter that contains 256 or 128 chars that\n// correspond to encoded bytes (if 128 - then lower half is ASCII). \n\nexports._sbcs = SBCSCodec;\nfunction SBCSCodec(codecOptions, iconv) {\n    if (!codecOptions)\n        throw new Error(\"SBCS codec is called without the data.\")\n    \n    // Prepare char buffer for decoding.\n    if (!codecOptions.chars || (codecOptions.chars.length !== 128 && codecOptions.chars.length !== 256))\n        throw new Error(\"Encoding '\"+codecOptions.type+\"' has incorrect 'chars' (must be of len 128 or 256)\");\n    \n    if (codecOptions.chars.length === 128) {\n        var asciiString = \"\";\n        for (var i = 0; i < 128; i++)\n            asciiString += String.fromCharCode(i);\n        codecOptions.chars = asciiString + codecOptions.chars;\n    }\n\n    this.decodeBuf = Buffer.from(codecOptions.chars, 'ucs2');\n    \n    // Encoding buffer.\n    var encodeBuf = Buffer.alloc(65536, iconv.defaultCharSingleByte.charCodeAt(0));\n\n    for (var i = 0; i < codecOptions.chars.length; i++)\n        encodeBuf[codecOptions.chars.charCodeAt(i)] = i;\n\n    this.encodeBuf = encodeBuf;\n}\n\nSBCSCodec.prototype.encoder = SBCSEncoder;\nSBCSCodec.prototype.decoder = SBCSDecoder;\n\n\nfunction SBCSEncoder(options, codec) {\n    this.encodeBuf = codec.encodeBuf;\n}\n\nSBCSEncoder.prototype.write = function(str) {\n    var buf = Buffer.alloc(str.length);\n    for (var i = 0; i < str.length; i++)\n        buf[i] = this.encodeBuf[str.charCodeAt(i)];\n    \n    return buf;\n}\n\nSBCSEncoder.prototype.end = function() {\n}\n\n\nfunction SBCSDecoder(options, codec) {\n    this.decodeBuf = codec.decodeBuf;\n}\n\nSBCSDecoder.prototype.write = function(buf) {\n    // Strings are immutable in JS -> we use ucs2 buffer to speed up computations.\n    var decodeBuf = this.decodeBuf;\n    var newBuf = Buffer.alloc(buf.length*2);\n    var idx1 = 0, idx2 = 0;\n    for (var i = 0; i < buf.length; i++) {\n        idx1 = buf[i]*2; idx2 = i*2;\n        newBuf[idx2] = decodeBuf[idx1];\n        newBuf[idx2+1] = decodeBuf[idx1+1];\n    }\n    return newBuf.toString('ucs2');\n}\n\nSBCSDecoder.prototype.end = function() {\n}\n","\"use strict\";\nvar Buffer = require(\"safer-buffer\").Buffer;\n\n// Multibyte codec. In this scheme, a character is represented by 1 or more bytes.\n// Our codec supports UTF-16 surrogates, extensions for GB18030 and unicode sequences.\n// To save memory and loading time, we read table files only when requested.\n\nexports._dbcs = DBCSCodec;\n\nvar UNASSIGNED = -1,\n    GB18030_CODE = -2,\n    SEQ_START  = -10,\n    NODE_START = -1000,\n    UNASSIGNED_NODE = new Array(0x100),\n    DEF_CHAR = -1;\n\nfor (var i = 0; i < 0x100; i++)\n    UNASSIGNED_NODE[i] = UNASSIGNED;\n\n\n// Class DBCSCodec reads and initializes mapping tables.\nfunction DBCSCodec(codecOptions, iconv) {\n    this.encodingName = codecOptions.encodingName;\n    if (!codecOptions)\n        throw new Error(\"DBCS codec is called without the data.\")\n    if (!codecOptions.table)\n        throw new Error(\"Encoding '\" + this.encodingName + \"' has no data.\");\n\n    // Load tables.\n    var mappingTable = codecOptions.table();\n\n\n    // Decode tables: MBCS -> Unicode.\n\n    // decodeTables is a trie, encoded as an array of arrays of integers. Internal arrays are trie nodes and all have len = 256.\n    // Trie root is decodeTables[0].\n    // Values: >=  0 -> unicode character code. can be > 0xFFFF\n    //         == UNASSIGNED -> unknown/unassigned sequence.\n    //         == GB18030_CODE -> this is the end of a GB18030 4-byte sequence.\n    //         <= NODE_START -> index of the next node in our trie to process next byte.\n    //         <= SEQ_START  -> index of the start of a character code sequence, in decodeTableSeq.\n    this.decodeTables = [];\n    this.decodeTables[0] = UNASSIGNED_NODE.slice(0); // Create root node.\n\n    // Sometimes a MBCS char corresponds to a sequence of unicode chars. We store them as arrays of integers here. \n    this.decodeTableSeq = [];\n\n    // Actual mapping tables consist of chunks. Use them to fill up decode tables.\n    for (var i = 0; i < mappingTable.length; i++)\n        this._addDecodeChunk(mappingTable[i]);\n\n    // Load & create GB18030 tables when needed.\n    if (typeof codecOptions.gb18030 === 'function') {\n        this.gb18030 = codecOptions.gb18030(); // Load GB18030 ranges.\n\n        // Add GB18030 common decode nodes.\n        var commonThirdByteNodeIdx = this.decodeTables.length;\n        this.decodeTables.push(UNASSIGNED_NODE.slice(0));\n\n        var commonFourthByteNodeIdx = this.decodeTables.length;\n        this.decodeTables.push(UNASSIGNED_NODE.slice(0));\n\n        // Fill out the tree\n        var firstByteNode = this.decodeTables[0];\n        for (var i = 0x81; i <= 0xFE; i++) {\n            var secondByteNode = this.decodeTables[NODE_START - firstByteNode[i]];\n            for (var j = 0x30; j <= 0x39; j++) {\n                if (secondByteNode[j] === UNASSIGNED) {\n                    secondByteNode[j] = NODE_START - commonThirdByteNodeIdx;\n                } else if (secondByteNode[j] > NODE_START) {\n                    throw new Error(\"gb18030 decode tables conflict at byte 2\");\n                }\n\n                var thirdByteNode = this.decodeTables[NODE_START - secondByteNode[j]];\n                for (var k = 0x81; k <= 0xFE; k++) {\n                    if (thirdByteNode[k] === UNASSIGNED) {\n                        thirdByteNode[k] = NODE_START - commonFourthByteNodeIdx;\n                    } else if (thirdByteNode[k] === NODE_START - commonFourthByteNodeIdx) {\n                        continue;\n                    } else if (thirdByteNode[k] > NODE_START) {\n                        throw new Error(\"gb18030 decode tables conflict at byte 3\");\n                    }\n\n                    var fourthByteNode = this.decodeTables[NODE_START - thirdByteNode[k]];\n                    for (var l = 0x30; l <= 0x39; l++) {\n                        if (fourthByteNode[l] === UNASSIGNED)\n                            fourthByteNode[l] = GB18030_CODE;\n                    }\n                }\n            }\n        }\n    }\n\n    this.defaultCharUnicode = iconv.defaultCharUnicode;\n\n    \n    // Encode tables: Unicode -> DBCS.\n\n    // `encodeTable` is array mapping from unicode char to encoded char. All its values are integers for performance.\n    // Because it can be sparse, it is represented as array of buckets by 256 chars each. Bucket can be null.\n    // Values: >=  0 -> it is a normal char. Write the value (if <=256 then 1 byte, if <=65536 then 2 bytes, etc.).\n    //         == UNASSIGNED -> no conversion found. Output a default char.\n    //         <= SEQ_START  -> it's an index in encodeTableSeq, see below. The character starts a sequence.\n    this.encodeTable = [];\n    \n    // `encodeTableSeq` is used when a sequence of unicode characters is encoded as a single code. We use a tree of\n    // objects where keys correspond to characters in sequence and leafs are the encoded dbcs values. A special DEF_CHAR key\n    // means end of sequence (needed when one sequence is a strict subsequence of another).\n    // Objects are kept separately from encodeTable to increase performance.\n    this.encodeTableSeq = [];\n\n    // Some chars can be decoded, but need not be encoded.\n    var skipEncodeChars = {};\n    if (codecOptions.encodeSkipVals)\n        for (var i = 0; i < codecOptions.encodeSkipVals.length; i++) {\n            var val = codecOptions.encodeSkipVals[i];\n            if (typeof val === 'number')\n                skipEncodeChars[val] = true;\n            else\n                for (var j = val.from; j <= val.to; j++)\n                    skipEncodeChars[j] = true;\n        }\n        \n    // Use decode trie to recursively fill out encode tables.\n    this._fillEncodeTable(0, 0, skipEncodeChars);\n\n    // Add more encoding pairs when needed.\n    if (codecOptions.encodeAdd) {\n        for (var uChar in codecOptions.encodeAdd)\n            if (Object.prototype.hasOwnProperty.call(codecOptions.encodeAdd, uChar))\n                this._setEncodeChar(uChar.charCodeAt(0), codecOptions.encodeAdd[uChar]);\n    }\n\n    this.defCharSB  = this.encodeTable[0][iconv.defaultCharSingleByte.charCodeAt(0)];\n    if (this.defCharSB === UNASSIGNED) this.defCharSB = this.encodeTable[0]['?'];\n    if (this.defCharSB === UNASSIGNED) this.defCharSB = \"?\".charCodeAt(0);\n}\n\nDBCSCodec.prototype.encoder = DBCSEncoder;\nDBCSCodec.prototype.decoder = DBCSDecoder;\n\n// Decoder helpers\nDBCSCodec.prototype._getDecodeTrieNode = function(addr) {\n    var bytes = [];\n    for (; addr > 0; addr >>>= 8)\n        bytes.push(addr & 0xFF);\n    if (bytes.length == 0)\n        bytes.push(0);\n\n    var node = this.decodeTables[0];\n    for (var i = bytes.length-1; i > 0; i--) { // Traverse nodes deeper into the trie.\n        var val = node[bytes[i]];\n\n        if (val == UNASSIGNED) { // Create new node.\n            node[bytes[i]] = NODE_START - this.decodeTables.length;\n            this.decodeTables.push(node = UNASSIGNED_NODE.slice(0));\n        }\n        else if (val <= NODE_START) { // Existing node.\n            node = this.decodeTables[NODE_START - val];\n        }\n        else\n            throw new Error(\"Overwrite byte in \" + this.encodingName + \", addr: \" + addr.toString(16));\n    }\n    return node;\n}\n\n\nDBCSCodec.prototype._addDecodeChunk = function(chunk) {\n    // First element of chunk is the hex mbcs code where we start.\n    var curAddr = parseInt(chunk[0], 16);\n\n    // Choose the decoding node where we'll write our chars.\n    var writeTable = this._getDecodeTrieNode(curAddr);\n    curAddr = curAddr & 0xFF;\n\n    // Write all other elements of the chunk to the table.\n    for (var k = 1; k < chunk.length; k++) {\n        var part = chunk[k];\n        if (typeof part === \"string\") { // String, write as-is.\n            for (var l = 0; l < part.length;) {\n                var code = part.charCodeAt(l++);\n                if (0xD800 <= code && code < 0xDC00) { // Decode surrogate\n                    var codeTrail = part.charCodeAt(l++);\n                    if (0xDC00 <= codeTrail && codeTrail < 0xE000)\n                        writeTable[curAddr++] = 0x10000 + (code - 0xD800) * 0x400 + (codeTrail - 0xDC00);\n                    else\n                        throw new Error(\"Incorrect surrogate pair in \"  + this.encodingName + \" at chunk \" + chunk[0]);\n                }\n                else if (0x0FF0 < code && code <= 0x0FFF) { // Character sequence (our own encoding used)\n                    var len = 0xFFF - code + 2;\n                    var seq = [];\n                    for (var m = 0; m < len; m++)\n                        seq.push(part.charCodeAt(l++)); // Simple variation: don't support surrogates or subsequences in seq.\n\n                    writeTable[curAddr++] = SEQ_START - this.decodeTableSeq.length;\n                    this.decodeTableSeq.push(seq);\n                }\n                else\n                    writeTable[curAddr++] = code; // Basic char\n            }\n        } \n        else if (typeof part === \"number\") { // Integer, meaning increasing sequence starting with prev character.\n            var charCode = writeTable[curAddr - 1] + 1;\n            for (var l = 0; l < part; l++)\n                writeTable[curAddr++] = charCode++;\n        }\n        else\n            throw new Error(\"Incorrect type '\" + typeof part + \"' given in \"  + this.encodingName + \" at chunk \" + chunk[0]);\n    }\n    if (curAddr > 0xFF)\n        throw new Error(\"Incorrect chunk in \"  + this.encodingName + \" at addr \" + chunk[0] + \": too long\" + curAddr);\n}\n\n// Encoder helpers\nDBCSCodec.prototype._getEncodeBucket = function(uCode) {\n    var high = uCode >> 8; // This could be > 0xFF because of astral characters.\n    if (this.encodeTable[high] === undefined)\n        this.encodeTable[high] = UNASSIGNED_NODE.slice(0); // Create bucket on demand.\n    return this.encodeTable[high];\n}\n\nDBCSCodec.prototype._setEncodeChar = function(uCode, dbcsCode) {\n    var bucket = this._getEncodeBucket(uCode);\n    var low = uCode & 0xFF;\n    if (bucket[low] <= SEQ_START)\n        this.encodeTableSeq[SEQ_START-bucket[low]][DEF_CHAR] = dbcsCode; // There's already a sequence, set a single-char subsequence of it.\n    else if (bucket[low] == UNASSIGNED)\n        bucket[low] = dbcsCode;\n}\n\nDBCSCodec.prototype._setEncodeSequence = function(seq, dbcsCode) {\n    \n    // Get the root of character tree according to first character of the sequence.\n    var uCode = seq[0];\n    var bucket = this._getEncodeBucket(uCode);\n    var low = uCode & 0xFF;\n\n    var node;\n    if (bucket[low] <= SEQ_START) {\n        // There's already a sequence with  - use it.\n        node = this.encodeTableSeq[SEQ_START-bucket[low]];\n    }\n    else {\n        // There was no sequence object - allocate a new one.\n        node = {};\n        if (bucket[low] !== UNASSIGNED) node[DEF_CHAR] = bucket[low]; // If a char was set before - make it a single-char subsequence.\n        bucket[low] = SEQ_START - this.encodeTableSeq.length;\n        this.encodeTableSeq.push(node);\n    }\n\n    // Traverse the character tree, allocating new nodes as needed.\n    for (var j = 1; j < seq.length-1; j++) {\n        var oldVal = node[uCode];\n        if (typeof oldVal === 'object')\n            node = oldVal;\n        else {\n            node = node[uCode] = {}\n            if (oldVal !== undefined)\n                node[DEF_CHAR] = oldVal\n        }\n    }\n\n    // Set the leaf to given dbcsCode.\n    uCode = seq[seq.length-1];\n    node[uCode] = dbcsCode;\n}\n\nDBCSCodec.prototype._fillEncodeTable = function(nodeIdx, prefix, skipEncodeChars) {\n    var node = this.decodeTables[nodeIdx];\n    var hasValues = false;\n    var subNodeEmpty = {};\n    for (var i = 0; i < 0x100; i++) {\n        var uCode = node[i];\n        var mbCode = prefix + i;\n        if (skipEncodeChars[mbCode])\n            continue;\n\n        if (uCode >= 0) {\n            this._setEncodeChar(uCode, mbCode);\n            hasValues = true;\n        } else if (uCode <= NODE_START) {\n            var subNodeIdx = NODE_START - uCode;\n            if (!subNodeEmpty[subNodeIdx]) {  // Skip empty subtrees (they are too large in gb18030).\n                var newPrefix = (mbCode << 8) >>> 0;  // NOTE: '>>> 0' keeps 32-bit num positive.\n                if (this._fillEncodeTable(subNodeIdx, newPrefix, skipEncodeChars))\n                    hasValues = true;\n                else\n                    subNodeEmpty[subNodeIdx] = true;\n            }\n        } else if (uCode <= SEQ_START) {\n            this._setEncodeSequence(this.decodeTableSeq[SEQ_START - uCode], mbCode);\n            hasValues = true;\n        }\n    }\n    return hasValues;\n}\n\n\n\n// == Encoder ==================================================================\n\nfunction DBCSEncoder(options, codec) {\n    // Encoder state\n    this.leadSurrogate = -1;\n    this.seqObj = undefined;\n    \n    // Static data\n    this.encodeTable = codec.encodeTable;\n    this.encodeTableSeq = codec.encodeTableSeq;\n    this.defaultCharSingleByte = codec.defCharSB;\n    this.gb18030 = codec.gb18030;\n}\n\nDBCSEncoder.prototype.write = function(str) {\n    var newBuf = Buffer.alloc(str.length * (this.gb18030 ? 4 : 3)),\n        leadSurrogate = this.leadSurrogate,\n        seqObj = this.seqObj, nextChar = -1,\n        i = 0, j = 0;\n\n    while (true) {\n        // 0. Get next character.\n        if (nextChar === -1) {\n            if (i == str.length) break;\n            var uCode = str.charCodeAt(i++);\n        }\n        else {\n            var uCode = nextChar;\n            nextChar = -1;    \n        }\n\n        // 1. Handle surrogates.\n        if (0xD800 <= uCode && uCode < 0xE000) { // Char is one of surrogates.\n            if (uCode < 0xDC00) { // We've got lead surrogate.\n                if (leadSurrogate === -1) {\n                    leadSurrogate = uCode;\n                    continue;\n                } else {\n                    leadSurrogate = uCode;\n                    // Double lead surrogate found.\n                    uCode = UNASSIGNED;\n                }\n            } else { // We've got trail surrogate.\n                if (leadSurrogate !== -1) {\n                    uCode = 0x10000 + (leadSurrogate - 0xD800) * 0x400 + (uCode - 0xDC00);\n                    leadSurrogate = -1;\n                } else {\n                    // Incomplete surrogate pair - only trail surrogate found.\n                    uCode = UNASSIGNED;\n                }\n                \n            }\n        }\n        else if (leadSurrogate !== -1) {\n            // Incomplete surrogate pair - only lead surrogate found.\n            nextChar = uCode; uCode = UNASSIGNED; // Write an error, then current char.\n            leadSurrogate = -1;\n        }\n\n        // 2. Convert uCode character.\n        var dbcsCode = UNASSIGNED;\n        if (seqObj !== undefined && uCode != UNASSIGNED) { // We are in the middle of the sequence\n            var resCode = seqObj[uCode];\n            if (typeof resCode === 'object') { // Sequence continues.\n                seqObj = resCode;\n                continue;\n\n            } else if (typeof resCode == 'number') { // Sequence finished. Write it.\n                dbcsCode = resCode;\n\n            } else if (resCode == undefined) { // Current character is not part of the sequence.\n\n                // Try default character for this sequence\n                resCode = seqObj[DEF_CHAR];\n                if (resCode !== undefined) {\n                    dbcsCode = resCode; // Found. Write it.\n                    nextChar = uCode; // Current character will be written too in the next iteration.\n\n                } else {\n                    // TODO: What if we have no default? (resCode == undefined)\n                    // Then, we should write first char of the sequence as-is and try the rest recursively.\n                    // Didn't do it for now because no encoding has this situation yet.\n                    // Currently, just skip the sequence and write current char.\n                }\n            }\n            seqObj = undefined;\n        }\n        else if (uCode >= 0) {  // Regular character\n            var subtable = this.encodeTable[uCode >> 8];\n            if (subtable !== undefined)\n                dbcsCode = subtable[uCode & 0xFF];\n            \n            if (dbcsCode <= SEQ_START) { // Sequence start\n                seqObj = this.encodeTableSeq[SEQ_START-dbcsCode];\n                continue;\n            }\n\n            if (dbcsCode == UNASSIGNED && this.gb18030) {\n                // Use GB18030 algorithm to find character(s) to write.\n                var idx = findIdx(this.gb18030.uChars, uCode);\n                if (idx != -1) {\n                    var dbcsCode = this.gb18030.gbChars[idx] + (uCode - this.gb18030.uChars[idx]);\n                    newBuf[j++] = 0x81 + Math.floor(dbcsCode / 12600); dbcsCode = dbcsCode % 12600;\n                    newBuf[j++] = 0x30 + Math.floor(dbcsCode / 1260); dbcsCode = dbcsCode % 1260;\n                    newBuf[j++] = 0x81 + Math.floor(dbcsCode / 10); dbcsCode = dbcsCode % 10;\n                    newBuf[j++] = 0x30 + dbcsCode;\n                    continue;\n                }\n            }\n        }\n\n        // 3. Write dbcsCode character.\n        if (dbcsCode === UNASSIGNED)\n            dbcsCode = this.defaultCharSingleByte;\n        \n        if (dbcsCode < 0x100) {\n            newBuf[j++] = dbcsCode;\n        }\n        else if (dbcsCode < 0x10000) {\n            newBuf[j++] = dbcsCode >> 8;   // high byte\n            newBuf[j++] = dbcsCode & 0xFF; // low byte\n        }\n        else if (dbcsCode < 0x1000000) {\n            newBuf[j++] = dbcsCode >> 16;\n            newBuf[j++] = (dbcsCode >> 8) & 0xFF;\n            newBuf[j++] = dbcsCode & 0xFF;\n        } else {\n            newBuf[j++] = dbcsCode >>> 24;\n            newBuf[j++] = (dbcsCode >>> 16) & 0xFF;\n            newBuf[j++] = (dbcsCode >>> 8) & 0xFF;\n            newBuf[j++] = dbcsCode & 0xFF;\n        }\n    }\n\n    this.seqObj = seqObj;\n    this.leadSurrogate = leadSurrogate;\n    return newBuf.slice(0, j);\n}\n\nDBCSEncoder.prototype.end = function() {\n    if (this.leadSurrogate === -1 && this.seqObj === undefined)\n        return; // All clean. Most often case.\n\n    var newBuf = Buffer.alloc(10), j = 0;\n\n    if (this.seqObj) { // We're in the sequence.\n        var dbcsCode = this.seqObj[DEF_CHAR];\n        if (dbcsCode !== undefined) { // Write beginning of the sequence.\n            if (dbcsCode < 0x100) {\n                newBuf[j++] = dbcsCode;\n            }\n            else {\n                newBuf[j++] = dbcsCode >> 8;   // high byte\n                newBuf[j++] = dbcsCode & 0xFF; // low byte\n            }\n        } else {\n            // See todo above.\n        }\n        this.seqObj = undefined;\n    }\n\n    if (this.leadSurrogate !== -1) {\n        // Incomplete surrogate pair - only lead surrogate found.\n        newBuf[j++] = this.defaultCharSingleByte;\n        this.leadSurrogate = -1;\n    }\n    \n    return newBuf.slice(0, j);\n}\n\n// Export for testing\nDBCSEncoder.prototype.findIdx = findIdx;\n\n\n// == Decoder ==================================================================\n\nfunction DBCSDecoder(options, codec) {\n    // Decoder state\n    this.nodeIdx = 0;\n    this.prevBytes = [];\n\n    // Static data\n    this.decodeTables = codec.decodeTables;\n    this.decodeTableSeq = codec.decodeTableSeq;\n    this.defaultCharUnicode = codec.defaultCharUnicode;\n    this.gb18030 = codec.gb18030;\n}\n\nDBCSDecoder.prototype.write = function(buf) {\n    var newBuf = Buffer.alloc(buf.length*2),\n        nodeIdx = this.nodeIdx, \n        prevBytes = this.prevBytes, prevOffset = this.prevBytes.length,\n        seqStart = -this.prevBytes.length, // idx of the start of current parsed sequence.\n        uCode;\n\n    for (var i = 0, j = 0; i < buf.length; i++) {\n        var curByte = (i >= 0) ? buf[i] : prevBytes[i + prevOffset];\n\n        // Lookup in current trie node.\n        var uCode = this.decodeTables[nodeIdx][curByte];\n\n        if (uCode >= 0) { \n            // Normal character, just use it.\n        }\n        else if (uCode === UNASSIGNED) { // Unknown char.\n            // TODO: Callback with seq.\n            uCode = this.defaultCharUnicode.charCodeAt(0);\n            i = seqStart; // Skip one byte ('i' will be incremented by the for loop) and try to parse again.\n        }\n        else if (uCode === GB18030_CODE) {\n            if (i >= 3) {\n                var ptr = (buf[i-3]-0x81)*12600 + (buf[i-2]-0x30)*1260 + (buf[i-1]-0x81)*10 + (curByte-0x30);\n            } else {\n                var ptr = (prevBytes[i-3+prevOffset]-0x81)*12600 + \n                          (((i-2 >= 0) ? buf[i-2] : prevBytes[i-2+prevOffset])-0x30)*1260 + \n                          (((i-1 >= 0) ? buf[i-1] : prevBytes[i-1+prevOffset])-0x81)*10 + \n                          (curByte-0x30);\n            }\n            var idx = findIdx(this.gb18030.gbChars, ptr);\n            uCode = this.gb18030.uChars[idx] + ptr - this.gb18030.gbChars[idx];\n        }\n        else if (uCode <= NODE_START) { // Go to next trie node.\n            nodeIdx = NODE_START - uCode;\n            continue;\n        }\n        else if (uCode <= SEQ_START) { // Output a sequence of chars.\n            var seq = this.decodeTableSeq[SEQ_START - uCode];\n            for (var k = 0; k < seq.length - 1; k++) {\n                uCode = seq[k];\n                newBuf[j++] = uCode & 0xFF;\n                newBuf[j++] = uCode >> 8;\n            }\n            uCode = seq[seq.length-1];\n        }\n        else\n            throw new Error(\"iconv-lite internal error: invalid decoding table value \" + uCode + \" at \" + nodeIdx + \"/\" + curByte);\n\n        // Write the character to buffer, handling higher planes using surrogate pair.\n        if (uCode >= 0x10000) { \n            uCode -= 0x10000;\n            var uCodeLead = 0xD800 | (uCode >> 10);\n            newBuf[j++] = uCodeLead & 0xFF;\n            newBuf[j++] = uCodeLead >> 8;\n\n            uCode = 0xDC00 | (uCode & 0x3FF);\n        }\n        newBuf[j++] = uCode & 0xFF;\n        newBuf[j++] = uCode >> 8;\n\n        // Reset trie node.\n        nodeIdx = 0; seqStart = i+1;\n    }\n\n    this.nodeIdx = nodeIdx;\n    this.prevBytes = (seqStart >= 0)\n        ? Array.prototype.slice.call(buf, seqStart)\n        : prevBytes.slice(seqStart + prevOffset).concat(Array.prototype.slice.call(buf));\n\n    return newBuf.slice(0, j).toString('ucs2');\n}\n\nDBCSDecoder.prototype.end = function() {\n    var ret = '';\n\n    // Try to parse all remaining chars.\n    while (this.prevBytes.length > 0) {\n        // Skip 1 character in the buffer.\n        ret += this.defaultCharUnicode;\n        var bytesArr = this.prevBytes.slice(1);\n\n        // Parse remaining as usual.\n        this.prevBytes = [];\n        this.nodeIdx = 0;\n        if (bytesArr.length > 0)\n            ret += this.write(bytesArr);\n    }\n\n    this.prevBytes = [];\n    this.nodeIdx = 0;\n    return ret;\n}\n\n// Binary search for GB18030. Returns largest i such that table[i] <= val.\nfunction findIdx(table, val) {\n    if (table[0] > val)\n        return -1;\n\n    var l = 0, r = table.length;\n    while (l < r-1) { // always table[l] <= val < table[r]\n        var mid = l + ((r-l+1) >> 1);\n        if (table[mid] <= val)\n            l = mid;\n        else\n            r = mid;\n    }\n    return l;\n}\n\n","\"use strict\";\n\nvar Buffer = require(\"safer-buffer\").Buffer;\n\n// NOTE: Due to 'stream' module being pretty large (~100Kb, significant in browser environments), \n// we opt to dependency-inject it instead of creating a hard dependency.\nmodule.exports = function(stream_module) {\n    var Transform = stream_module.Transform;\n\n    // == Encoder stream =======================================================\n\n    function IconvLiteEncoderStream(conv, options) {\n        this.conv = conv;\n        options = options || {};\n        options.decodeStrings = false; // We accept only strings, so we don't need to decode them.\n        Transform.call(this, options);\n    }\n\n    IconvLiteEncoderStream.prototype = Object.create(Transform.prototype, {\n        constructor: { value: IconvLiteEncoderStream }\n    });\n\n    IconvLiteEncoderStream.prototype._transform = function(chunk, encoding, done) {\n        if (typeof chunk != 'string')\n            return done(new Error(\"Iconv encoding stream needs strings as its input.\"));\n        try {\n            var res = this.conv.write(chunk);\n            if (res && res.length) this.push(res);\n            done();\n        }\n        catch (e) {\n            done(e);\n        }\n    }\n\n    IconvLiteEncoderStream.prototype._flush = function(done) {\n        try {\n            var res = this.conv.end();\n            if (res && res.length) this.push(res);\n            done();\n        }\n        catch (e) {\n            done(e);\n        }\n    }\n\n    IconvLiteEncoderStream.prototype.collect = function(cb) {\n        var chunks = [];\n        this.on('error', cb);\n        this.on('data', function(chunk) { chunks.push(chunk); });\n        this.on('end', function() {\n            cb(null, Buffer.concat(chunks));\n        });\n        return this;\n    }\n\n\n    // == Decoder stream =======================================================\n\n    function IconvLiteDecoderStream(conv, options) {\n        this.conv = conv;\n        options = options || {};\n        options.encoding = this.encoding = 'utf8'; // We output strings.\n        Transform.call(this, options);\n    }\n\n    IconvLiteDecoderStream.prototype = Object.create(Transform.prototype, {\n        constructor: { value: IconvLiteDecoderStream }\n    });\n\n    IconvLiteDecoderStream.prototype._transform = function(chunk, encoding, done) {\n        if (!Buffer.isBuffer(chunk) && !(chunk instanceof Uint8Array))\n            return done(new Error(\"Iconv decoding stream needs buffers as its input.\"));\n        try {\n            var res = this.conv.write(chunk);\n            if (res && res.length) this.push(res, this.encoding);\n            done();\n        }\n        catch (e) {\n            done(e);\n        }\n    }\n\n    IconvLiteDecoderStream.prototype._flush = function(done) {\n        try {\n            var res = this.conv.end();\n            if (res && res.length) this.push(res, this.encoding);                \n            done();\n        }\n        catch (e) {\n            done(e);\n        }\n    }\n\n    IconvLiteDecoderStream.prototype.collect = function(cb) {\n        var res = '';\n        this.on('error', cb);\n        this.on('data', function(chunk) { res += chunk; });\n        this.on('end', function() {\n            cb(null, res);\n        });\n        return this;\n    }\n\n    return {\n        IconvLiteEncoderStream: IconvLiteEncoderStream,\n        IconvLiteDecoderStream: IconvLiteDecoderStream,\n    };\n};\n","\"use strict\";\n\nvar Buffer = require(\"safer-buffer\").Buffer;\n\nvar bomHandling = require(\"./bom-handling\"),\n    iconv = module.exports;\n\n// All codecs and aliases are kept here, keyed by encoding name/alias.\n// They are lazy loaded in `iconv.getCodec` from `encodings/index.js`.\niconv.encodings = null;\n\n// Characters emitted in case of error.\niconv.defaultCharUnicode = '�';\niconv.defaultCharSingleByte = '?';\n\n// Public API.\niconv.encode = function encode(str, encoding, options) {\n    str = \"\" + (str || \"\"); // Ensure string.\n\n    var encoder = iconv.getEncoder(encoding, options);\n\n    var res = encoder.write(str);\n    var trail = encoder.end();\n    \n    return (trail && trail.length > 0) ? Buffer.concat([res, trail]) : res;\n}\n\niconv.decode = function decode(buf, encoding, options) {\n    if (typeof buf === 'string') {\n        if (!iconv.skipDecodeWarning) {\n            console.error('Iconv-lite warning: decode()-ing strings is deprecated. Refer to https://github.com/ashtuchkin/iconv-lite/wiki/Use-Buffers-when-decoding');\n            iconv.skipDecodeWarning = true;\n        }\n\n        buf = Buffer.from(\"\" + (buf || \"\"), \"binary\"); // Ensure buffer.\n    }\n\n    var decoder = iconv.getDecoder(encoding, options);\n\n    var res = decoder.write(buf);\n    var trail = decoder.end();\n\n    return trail ? (res + trail) : res;\n}\n\niconv.encodingExists = function encodingExists(enc) {\n    try {\n        iconv.getCodec(enc);\n        return true;\n    } catch (e) {\n        return false;\n    }\n}\n\n// Legacy aliases to convert functions\niconv.toEncoding = iconv.encode;\niconv.fromEncoding = iconv.decode;\n\n// Search for a codec in iconv.encodings. Cache codec data in iconv._codecDataCache.\niconv._codecDataCache = {};\niconv.getCodec = function getCodec(encoding) {\n    if (!iconv.encodings)\n        iconv.encodings = require(\"../encodings\"); // Lazy load all encoding definitions.\n    \n    // Canonicalize encoding name: strip all non-alphanumeric chars and appended year.\n    var enc = iconv._canonicalizeEncoding(encoding);\n\n    // Traverse iconv.encodings to find actual codec.\n    var codecOptions = {};\n    while (true) {\n        var codec = iconv._codecDataCache[enc];\n        if (codec)\n            return codec;\n\n        var codecDef = iconv.encodings[enc];\n\n        switch (typeof codecDef) {\n            case \"string\": // Direct alias to other encoding.\n                enc = codecDef;\n                break;\n\n            case \"object\": // Alias with options. Can be layered.\n                for (var key in codecDef)\n                    codecOptions[key] = codecDef[key];\n\n                if (!codecOptions.encodingName)\n                    codecOptions.encodingName = enc;\n                \n                enc = codecDef.type;\n                break;\n\n            case \"function\": // Codec itself.\n                if (!codecOptions.encodingName)\n                    codecOptions.encodingName = enc;\n\n                // The codec function must load all tables and return object with .encoder and .decoder methods.\n                // It'll be called only once (for each different options object).\n                codec = new codecDef(codecOptions, iconv);\n\n                iconv._codecDataCache[codecOptions.encodingName] = codec; // Save it to be reused later.\n                return codec;\n\n            default:\n                throw new Error(\"Encoding not recognized: '\" + encoding + \"' (searched as: '\"+enc+\"')\");\n        }\n    }\n}\n\niconv._canonicalizeEncoding = function(encoding) {\n    // Canonicalize encoding name: strip all non-alphanumeric chars and appended year.\n    return (''+encoding).toLowerCase().replace(/:\\d{4}$|[^0-9a-z]/g, \"\");\n}\n\niconv.getEncoder = function getEncoder(encoding, options) {\n    var codec = iconv.getCodec(encoding),\n        encoder = new codec.encoder(options, codec);\n\n    if (codec.bomAware && options && options.addBOM)\n        encoder = new bomHandling.PrependBOM(encoder, options);\n\n    return encoder;\n}\n\niconv.getDecoder = function getDecoder(encoding, options) {\n    var codec = iconv.getCodec(encoding),\n        decoder = new codec.decoder(options, codec);\n\n    if (codec.bomAware && !(options && options.stripBOM === false))\n        decoder = new bomHandling.StripBOM(decoder, options);\n\n    return decoder;\n}\n\n// Streaming API\n// NOTE: Streaming API naturally depends on 'stream' module from Node.js. Unfortunately in browser environments this module can add\n// up to 100Kb to the output bundle. To avoid unnecessary code bloat, we don't enable Streaming API in browser by default.\n// If you would like to enable it explicitly, please add the following code to your app:\n// > iconv.enableStreamingAPI(require('stream'));\niconv.enableStreamingAPI = function enableStreamingAPI(stream_module) {\n    if (iconv.supportsStreams)\n        return;\n\n    // Dependency-inject stream module to create IconvLite stream classes.\n    var streams = require(\"./streams\")(stream_module);\n\n    // Not public API yet, but expose the stream classes.\n    iconv.IconvLiteEncoderStream = streams.IconvLiteEncoderStream;\n    iconv.IconvLiteDecoderStream = streams.IconvLiteDecoderStream;\n\n    // Streaming API.\n    iconv.encodeStream = function encodeStream(encoding, options) {\n        return new iconv.IconvLiteEncoderStream(iconv.getEncoder(encoding, options), options);\n    }\n\n    iconv.decodeStream = function decodeStream(encoding, options) {\n        return new iconv.IconvLiteDecoderStream(iconv.getDecoder(encoding, options), options);\n    }\n\n    iconv.supportsStreams = true;\n}\n\n// Enable Streaming API automatically if 'stream' module is available and non-empty (the majority of environments).\nvar stream_module;\ntry {\n    stream_module = require(\"stream\");\n} catch (e) {}\n\nif (stream_module && stream_module.Transform) {\n    iconv.enableStreamingAPI(stream_module);\n\n} else {\n    // In rare cases where 'stream' module is not available by default, throw a helpful exception.\n    iconv.encodeStream = iconv.decodeStream = function() {\n        throw new Error(\"iconv-lite Streaming API is not enabled. Use iconv.enableStreamingAPI(require('stream')); to enable it.\");\n    };\n}\n\nif (\"Ā\" != \"\\u0100\") {\n    console.error(\"iconv-lite warning: js files use non-utf8 encoding. See https://github.com/ashtuchkin/iconv-lite/wiki/Javascript-source-file-encodings for more info.\");\n}\n","\"use strict\";\n\n// Update this array if you add/rename/remove files in this directory.\n// We support Browserify by skipping automatic module discovery and requiring modules directly.\nvar modules = [\n    require(\"./internal\"),\n    require(\"./utf32\"),\n    require(\"./utf16\"),\n    require(\"./utf7\"),\n    require(\"./sbcs-codec\"),\n    require(\"./sbcs-data\"),\n    require(\"./sbcs-data-generated\"),\n    require(\"./dbcs-codec\"),\n    require(\"./dbcs-data\"),\n];\n\n// Put all encoding/alias/codec definitions to single object and export it.\nfor (var i = 0; i < modules.length; i++) {\n    var module = modules[i];\n    for (var enc in module)\n        if (Object.prototype.hasOwnProperty.call(module, enc))\n            exports[enc] = module[enc];\n}\n","\"use strict\";\n\n// Manually added data to be used by sbcs codec in addition to generated one.\n\nmodule.exports = {\n    // Not supported by iconv, not sure why.\n    \"10029\": \"maccenteuro\",\n    \"maccenteuro\": {\n        \"type\": \"_sbcs\",\n        \"chars\": \"ÄĀāÉĄÖÜáąČäčĆćéŹźĎíďĒēĖóėôöõúĚěü†°Ę£§•¶ß®©™ę¨≠ģĮįĪ≤≥īĶ∂∑łĻļĽľĹĺŅņŃ¬√ńŇ∆«»… ňŐÕőŌ–—“”‘’÷◊ōŔŕŘ‹›řŖŗŠ‚„šŚśÁŤťÍŽžŪÓÔūŮÚůŰűŲųÝýķŻŁżĢˇ\"\n    },\n\n    \"808\": \"cp808\",\n    \"ibm808\": \"cp808\",\n    \"cp808\": {\n        \"type\": \"_sbcs\",\n        \"chars\": \"АБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдежзийклмноп░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀рстуфхцчшщъыьэюяЁёЄєЇїЎў°∙·√№€■ \"\n    },\n\n    \"mik\": {\n        \"type\": \"_sbcs\",\n        \"chars\": \"АБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдежзийклмнопрстуфхцчшщъыьэюя└┴┬├─┼╣║╚╔╩╦╠═╬┐░▒▓│┤№§╗╝┘┌█▄▌▐▀αßΓπΣσµτΦΘΩδ∞φε∩≡±≥≤⌠⌡÷≈°∙·√ⁿ²■ \"\n    },\n\n    \"cp720\": {\n        \"type\": \"_sbcs\",\n        \"chars\": \"\\x80\\x81éâ\\x84à\\x86çêëèïî\\x8d\\x8e\\x8f\\x90\\u0651\\u0652ô¤ـûùءآأؤ£إئابةتثجحخدذرزسشص«»░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀ضطظعغفµقكلمنهوىي≡\\u064b\\u064c\\u064d\\u064e\\u064f\\u0650≈°∙·√ⁿ²■\\u00a0\"\n    },\n\n    // Aliases of generated encodings.\n    \"ascii8bit\": \"ascii\",\n    \"usascii\": \"ascii\",\n    \"ansix34\": \"ascii\",\n    \"ansix341968\": \"ascii\",\n    \"ansix341986\": \"ascii\",\n    \"csascii\": \"ascii\",\n    \"cp367\": \"ascii\",\n    \"ibm367\": \"ascii\",\n    \"isoir6\": \"ascii\",\n    \"iso646us\": \"ascii\",\n    \"iso646irv\": \"ascii\",\n    \"us\": \"ascii\",\n\n    \"latin1\": \"iso88591\",\n    \"latin2\": \"iso88592\",\n    \"latin3\": \"iso88593\",\n    \"latin4\": \"iso88594\",\n    \"latin5\": \"iso88599\",\n    \"latin6\": \"iso885910\",\n    \"latin7\": \"iso885913\",\n    \"latin8\": \"iso885914\",\n    \"latin9\": \"iso885915\",\n    \"latin10\": \"iso885916\",\n\n    \"csisolatin1\": \"iso88591\",\n    \"csisolatin2\": \"iso88592\",\n    \"csisolatin3\": \"iso88593\",\n    \"csisolatin4\": \"iso88594\",\n    \"csisolatincyrillic\": \"iso88595\",\n    \"csisolatinarabic\": \"iso88596\",\n    \"csisolatingreek\" : \"iso88597\",\n    \"csisolatinhebrew\": \"iso88598\",\n    \"csisolatin5\": \"iso88599\",\n    \"csisolatin6\": \"iso885910\",\n\n    \"l1\": \"iso88591\",\n    \"l2\": \"iso88592\",\n    \"l3\": \"iso88593\",\n    \"l4\": \"iso88594\",\n    \"l5\": \"iso88599\",\n    \"l6\": \"iso885910\",\n    \"l7\": \"iso885913\",\n    \"l8\": \"iso885914\",\n    \"l9\": \"iso885915\",\n    \"l10\": \"iso885916\",\n\n    \"isoir14\": \"iso646jp\",\n    \"isoir57\": \"iso646cn\",\n    \"isoir100\": \"iso88591\",\n    \"isoir101\": \"iso88592\",\n    \"isoir109\": \"iso88593\",\n    \"isoir110\": \"iso88594\",\n    \"isoir144\": \"iso88595\",\n    \"isoir127\": \"iso88596\",\n    \"isoir126\": \"iso88597\",\n    \"isoir138\": \"iso88598\",\n    \"isoir148\": \"iso88599\",\n    \"isoir157\": \"iso885910\",\n    \"isoir166\": \"tis620\",\n    \"isoir179\": \"iso885913\",\n    \"isoir199\": \"iso885914\",\n    \"isoir203\": \"iso885915\",\n    \"isoir226\": \"iso885916\",\n\n    \"cp819\": \"iso88591\",\n    \"ibm819\": \"iso88591\",\n\n    \"cyrillic\": \"iso88595\",\n\n    \"arabic\": \"iso88596\",\n    \"arabic8\": \"iso88596\",\n    \"ecma114\": \"iso88596\",\n    \"asmo708\": \"iso88596\",\n\n    \"greek\" : \"iso88597\",\n    \"greek8\" : \"iso88597\",\n    \"ecma118\" : \"iso88597\",\n    \"elot928\" : \"iso88597\",\n\n    \"hebrew\": \"iso88598\",\n    \"hebrew8\": \"iso88598\",\n\n    \"turkish\": \"iso88599\",\n    \"turkish8\": \"iso88599\",\n\n    \"thai\": \"iso885911\",\n    \"thai8\": \"iso885911\",\n\n    \"celtic\": \"iso885914\",\n    \"celtic8\": \"iso885914\",\n    \"isoceltic\": \"iso885914\",\n\n    \"tis6200\": \"tis620\",\n    \"tis62025291\": \"tis620\",\n    \"tis62025330\": \"tis620\",\n\n    \"10000\": \"macroman\",\n    \"10006\": \"macgreek\",\n    \"10007\": \"maccyrillic\",\n    \"10079\": \"maciceland\",\n    \"10081\": \"macturkish\",\n\n    \"cspc8codepage437\": \"cp437\",\n    \"cspc775baltic\": \"cp775\",\n    \"cspc850multilingual\": \"cp850\",\n    \"cspcp852\": \"cp852\",\n    \"cspc862latinhebrew\": \"cp862\",\n    \"cpgr\": \"cp869\",\n\n    \"msee\": \"cp1250\",\n    \"mscyrl\": \"cp1251\",\n    \"msansi\": \"cp1252\",\n    \"msgreek\": \"cp1253\",\n    \"msturk\": \"cp1254\",\n    \"mshebr\": \"cp1255\",\n    \"msarab\": \"cp1256\",\n    \"winbaltrim\": \"cp1257\",\n\n    \"cp20866\": \"koi8r\",\n    \"20866\": \"koi8r\",\n    \"ibm878\": \"koi8r\",\n    \"cskoi8r\": \"koi8r\",\n\n    \"cp21866\": \"koi8u\",\n    \"21866\": \"koi8u\",\n    \"ibm1168\": \"koi8u\",\n\n    \"strk10482002\": \"rk1048\",\n\n    \"tcvn5712\": \"tcvn\",\n    \"tcvn57121\": \"tcvn\",\n\n    \"gb198880\": \"iso646cn\",\n    \"cn\": \"iso646cn\",\n\n    \"csiso14jisc6220ro\": \"iso646jp\",\n    \"jisc62201969ro\": \"iso646jp\",\n    \"jp\": \"iso646jp\",\n\n    \"cshproman8\": \"hproman8\",\n    \"r8\": \"hproman8\",\n    \"roman8\": \"hproman8\",\n    \"xroman8\": \"hproman8\",\n    \"ibm1051\": \"hproman8\",\n\n    \"mac\": \"macintosh\",\n    \"csmacintosh\": \"macintosh\",\n};\n\n","\"use strict\";\n\n// Generated data for sbcs codec. Don't edit manually. Regenerate using generation/gen-sbcs.js script.\nmodule.exports = {\n  \"437\": \"cp437\",\n  \"737\": \"cp737\",\n  \"775\": \"cp775\",\n  \"850\": \"cp850\",\n  \"852\": \"cp852\",\n  \"855\": \"cp855\",\n  \"856\": \"cp856\",\n  \"857\": \"cp857\",\n  \"858\": \"cp858\",\n  \"860\": \"cp860\",\n  \"861\": \"cp861\",\n  \"862\": \"cp862\",\n  \"863\": \"cp863\",\n  \"864\": \"cp864\",\n  \"865\": \"cp865\",\n  \"866\": \"cp866\",\n  \"869\": \"cp869\",\n  \"874\": \"windows874\",\n  \"922\": \"cp922\",\n  \"1046\": \"cp1046\",\n  \"1124\": \"cp1124\",\n  \"1125\": \"cp1125\",\n  \"1129\": \"cp1129\",\n  \"1133\": \"cp1133\",\n  \"1161\": \"cp1161\",\n  \"1162\": \"cp1162\",\n  \"1163\": \"cp1163\",\n  \"1250\": \"windows1250\",\n  \"1251\": \"windows1251\",\n  \"1252\": \"windows1252\",\n  \"1253\": \"windows1253\",\n  \"1254\": \"windows1254\",\n  \"1255\": \"windows1255\",\n  \"1256\": \"windows1256\",\n  \"1257\": \"windows1257\",\n  \"1258\": \"windows1258\",\n  \"28591\": \"iso88591\",\n  \"28592\": \"iso88592\",\n  \"28593\": \"iso88593\",\n  \"28594\": \"iso88594\",\n  \"28595\": \"iso88595\",\n  \"28596\": \"iso88596\",\n  \"28597\": \"iso88597\",\n  \"28598\": \"iso88598\",\n  \"28599\": \"iso88599\",\n  \"28600\": \"iso885910\",\n  \"28601\": \"iso885911\",\n  \"28603\": \"iso885913\",\n  \"28604\": \"iso885914\",\n  \"28605\": \"iso885915\",\n  \"28606\": \"iso885916\",\n  \"windows874\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"€����…�����������‘’“”•–—�������� กขฃคฅฆงจฉชซฌญฎฏฐฑฒณดตถทธนบปผฝพฟภมยรฤลฦวศษสหฬอฮฯะัาำิีึืฺุู����฿เแโใไๅๆ็่้๊๋์ํ๎๏๐๑๒๓๔๕๖๗๘๙๚๛����\"\n  },\n  \"win874\": \"windows874\",\n  \"cp874\": \"windows874\",\n  \"windows1250\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"€�‚�„…†‡�‰Š‹ŚŤŽŹ�‘’“”•–—�™š›śťžź ˇ˘Ł¤Ą¦§¨©Ş«¬­®Ż°±˛ł´µ¶·¸ąş»Ľ˝ľżŔÁÂĂÄĹĆÇČÉĘËĚÍÎĎĐŃŇÓÔŐÖ×ŘŮÚŰÜÝŢßŕáâăäĺćçčéęëěíîďđńňóôőö÷řůúűüýţ˙\"\n  },\n  \"win1250\": \"windows1250\",\n  \"cp1250\": \"windows1250\",\n  \"windows1251\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ЂЃ‚ѓ„…†‡€‰Љ‹ЊЌЋЏђ‘’“”•–—�™љ›њќћџ ЎўЈ¤Ґ¦§Ё©Є«¬­®Ї°±Ііґµ¶·ё№є»јЅѕїАБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдежзийклмнопрстуфхцчшщъыьэюя\"\n  },\n  \"win1251\": \"windows1251\",\n  \"cp1251\": \"windows1251\",\n  \"windows1252\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"€�‚ƒ„…†‡ˆ‰Š‹Œ�Ž��‘’“”•–—˜™š›œ�žŸ ¡¢£¤¥¦§¨©ª«¬­®¯°±²³´µ¶·¸¹º»¼½¾¿ÀÁÂÃÄÅÆÇÈÉÊËÌÍÎÏÐÑÒÓÔÕÖ×ØÙÚÛÜÝÞßàáâãäåæçèéêëìíîïðñòóôõö÷øùúûüýþÿ\"\n  },\n  \"win1252\": \"windows1252\",\n  \"cp1252\": \"windows1252\",\n  \"windows1253\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"€�‚ƒ„…†‡�‰�‹�����‘’“”•–—�™�›���� ΅Ά£¤¥¦§¨©�«¬­®―°±²³΄µ¶·ΈΉΊ»Ό½ΎΏΐΑΒΓΔΕΖΗΘΙΚΛΜΝΞΟΠΡ�ΣΤΥΦΧΨΩΪΫάέήίΰαβγδεζηθικλμνξοπρςστυφχψωϊϋόύώ�\"\n  },\n  \"win1253\": \"windows1253\",\n  \"cp1253\": \"windows1253\",\n  \"windows1254\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"€�‚ƒ„…†‡ˆ‰Š‹Œ����‘’“”•–—˜™š›œ��Ÿ ¡¢£¤¥¦§¨©ª«¬­®¯°±²³´µ¶·¸¹º»¼½¾¿ÀÁÂÃÄÅÆÇÈÉÊËÌÍÎÏĞÑÒÓÔÕÖ×ØÙÚÛÜİŞßàáâãäåæçèéêëìíîïğñòóôõö÷øùúûüışÿ\"\n  },\n  \"win1254\": \"windows1254\",\n  \"cp1254\": \"windows1254\",\n  \"windows1255\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"€�‚ƒ„…†‡ˆ‰�‹�����‘’“”•–—˜™�›���� ¡¢£₪¥¦§¨©×«¬­®¯°±²³´µ¶·¸¹÷»¼½¾¿ְֱֲֳִֵֶַָֹֺֻּֽ־ֿ׀ׁׂ׃װױײ׳״�������אבגדהוזחטיךכלםמןנסעףפץצקרשת��‎‏�\"\n  },\n  \"win1255\": \"windows1255\",\n  \"cp1255\": \"windows1255\",\n  \"windows1256\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"€پ‚ƒ„…†‡ˆ‰ٹ‹Œچژڈگ‘’“”•–—ک™ڑ›œ‌‍ں ،¢£¤¥¦§¨©ھ«¬­®¯°±²³´µ¶·¸¹؛»¼½¾؟ہءآأؤإئابةتثجحخدذرزسشصض×طظعغـفقكàلâمنهوçèéêëىيîïًٌٍَôُِ÷ّùْûü‎‏ے\"\n  },\n  \"win1256\": \"windows1256\",\n  \"cp1256\": \"windows1256\",\n  \"windows1257\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"€�‚�„…†‡�‰�‹�¨ˇ¸�‘’“”•–—�™�›�¯˛� �¢£¤�¦§Ø©Ŗ«¬­®Æ°±²³´µ¶·ø¹ŗ»¼½¾æĄĮĀĆÄÅĘĒČÉŹĖĢĶĪĻŠŃŅÓŌÕÖ×ŲŁŚŪÜŻŽßąįāćäåęēčéźėģķīļšńņóōõö÷ųłśūüżž˙\"\n  },\n  \"win1257\": \"windows1257\",\n  \"cp1257\": \"windows1257\",\n  \"windows1258\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"€�‚ƒ„…†‡ˆ‰�‹Œ����‘’“”•–—˜™�›œ��Ÿ ¡¢£¤¥¦§¨©ª«¬­®¯°±²³´µ¶·¸¹º»¼½¾¿ÀÁÂĂÄÅÆÇÈÉÊË̀ÍÎÏĐÑ̉ÓÔƠÖ×ØÙÚÛÜỮßàáâăäåæçèéêë́íîïđṇ̃óôơö÷øùúûüư₫ÿ\"\n  },\n  \"win1258\": \"windows1258\",\n  \"cp1258\": \"windows1258\",\n  \"iso88591\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ¡¢£¤¥¦§¨©ª«¬­®¯°±²³´µ¶·¸¹º»¼½¾¿ÀÁÂÃÄÅÆÇÈÉÊËÌÍÎÏÐÑÒÓÔÕÖ×ØÙÚÛÜÝÞßàáâãäåæçèéêëìíîïðñòóôõö÷øùúûüýþÿ\"\n  },\n  \"cp28591\": \"iso88591\",\n  \"iso88592\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" Ą˘Ł¤ĽŚ§¨ŠŞŤŹ­ŽŻ°ą˛ł´ľśˇ¸šşťź˝žżŔÁÂĂÄĹĆÇČÉĘËĚÍÎĎĐŃŇÓÔŐÖ×ŘŮÚŰÜÝŢßŕáâăäĺćçčéęëěíîďđńňóôőö÷řůúűüýţ˙\"\n  },\n  \"cp28592\": \"iso88592\",\n  \"iso88593\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" Ħ˘£¤�Ĥ§¨İŞĞĴ­�Ż°ħ²³´µĥ·¸ışğĵ½�żÀÁÂ�ÄĊĈÇÈÉÊËÌÍÎÏ�ÑÒÓÔĠÖ×ĜÙÚÛÜŬŜßàáâ�äċĉçèéêëìíîï�ñòóôġö÷ĝùúûüŭŝ˙\"\n  },\n  \"cp28593\": \"iso88593\",\n  \"iso88594\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ĄĸŖ¤ĨĻ§¨ŠĒĢŦ­Ž¯°ą˛ŗ´ĩļˇ¸šēģŧŊžŋĀÁÂÃÄÅÆĮČÉĘËĖÍÎĪĐŅŌĶÔÕÖ×ØŲÚÛÜŨŪßāáâãäåæįčéęëėíîīđņōķôõö÷øųúûüũū˙\"\n  },\n  \"cp28594\": \"iso88594\",\n  \"iso88595\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ЁЂЃЄЅІЇЈЉЊЋЌ­ЎЏАБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдежзийклмнопрстуфхцчшщъыьэюя№ёђѓєѕіїјљњћќ§ўџ\"\n  },\n  \"cp28595\": \"iso88595\",\n  \"iso88596\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ���¤�������،­�������������؛���؟�ءآأؤإئابةتثجحخدذرزسشصضطظعغ�����ـفقكلمنهوىيًٌٍَُِّْ�������������\"\n  },\n  \"cp28596\": \"iso88596\",\n  \"iso88597\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ‘’£€₯¦§¨©ͺ«¬­�―°±²³΄΅Ά·ΈΉΊ»Ό½ΎΏΐΑΒΓΔΕΖΗΘΙΚΛΜΝΞΟΠΡ�ΣΤΥΦΧΨΩΪΫάέήίΰαβγδεζηθικλμνξοπρςστυφχψωϊϋόύώ�\"\n  },\n  \"cp28597\": \"iso88597\",\n  \"iso88598\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" �¢£¤¥¦§¨©×«¬­®¯°±²³´µ¶·¸¹÷»¼½¾��������������������������������‗אבגדהוזחטיךכלםמןנסעףפץצקרשת��‎‏�\"\n  },\n  \"cp28598\": \"iso88598\",\n  \"iso88599\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ¡¢£¤¥¦§¨©ª«¬­®¯°±²³´µ¶·¸¹º»¼½¾¿ÀÁÂÃÄÅÆÇÈÉÊËÌÍÎÏĞÑÒÓÔÕÖ×ØÙÚÛÜİŞßàáâãäåæçèéêëìíîïğñòóôõö÷øùúûüışÿ\"\n  },\n  \"cp28599\": \"iso88599\",\n  \"iso885910\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ĄĒĢĪĨĶ§ĻĐŠŦŽ­ŪŊ°ąēģīĩķ·ļđšŧž―ūŋĀÁÂÃÄÅÆĮČÉĘËĖÍÎÏÐŅŌÓÔÕÖŨØŲÚÛÜÝÞßāáâãäåæįčéęëėíîïðņōóôõöũøųúûüýþĸ\"\n  },\n  \"cp28600\": \"iso885910\",\n  \"iso885911\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" กขฃคฅฆงจฉชซฌญฎฏฐฑฒณดตถทธนบปผฝพฟภมยรฤลฦวศษสหฬอฮฯะัาำิีึืฺุู����฿เแโใไๅๆ็่้๊๋์ํ๎๏๐๑๒๓๔๕๖๗๘๙๚๛����\"\n  },\n  \"cp28601\": \"iso885911\",\n  \"iso885913\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ”¢£¤„¦§Ø©Ŗ«¬­®Æ°±²³“µ¶·ø¹ŗ»¼½¾æĄĮĀĆÄÅĘĒČÉŹĖĢĶĪĻŠŃŅÓŌÕÖ×ŲŁŚŪÜŻŽßąįāćäåęēčéźėģķīļšńņóōõö÷ųłśūüżž’\"\n  },\n  \"cp28603\": \"iso885913\",\n  \"iso885914\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" Ḃḃ£ĊċḊ§Ẁ©ẂḋỲ­®ŸḞḟĠġṀṁ¶ṖẁṗẃṠỳẄẅṡÀÁÂÃÄÅÆÇÈÉÊËÌÍÎÏŴÑÒÓÔÕÖṪØÙÚÛÜÝŶßàáâãäåæçèéêëìíîïŵñòóôõöṫøùúûüýŷÿ\"\n  },\n  \"cp28604\": \"iso885914\",\n  \"iso885915\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ¡¢£€¥Š§š©ª«¬­®¯°±²³Žµ¶·ž¹º»ŒœŸ¿ÀÁÂÃÄÅÆÇÈÉÊËÌÍÎÏÐÑÒÓÔÕÖ×ØÙÚÛÜÝÞßàáâãäåæçèéêëìíîïðñòóôõö÷øùúûüýþÿ\"\n  },\n  \"cp28605\": \"iso885915\",\n  \"iso885916\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ĄąŁ€„Š§š©Ș«Ź­źŻ°±ČłŽ”¶·žčș»ŒœŸżÀÁÂĂÄĆÆÇÈÉÊËÌÍÎÏĐŃÒÓÔŐÖŚŰÙÚÛÜĘȚßàáâăäćæçèéêëìíîïđńòóôőöśűùúûüęțÿ\"\n  },\n  \"cp28606\": \"iso885916\",\n  \"cp437\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÇüéâäàåçêëèïîìÄÅÉæÆôöòûùÿÖÜ¢£¥₧ƒáíóúñÑªº¿⌐¬½¼¡«»░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀αßΓπΣσµτΦΘΩδ∞φε∩≡±≥≤⌠⌡÷≈°∙·√ⁿ²■ \"\n  },\n  \"ibm437\": \"cp437\",\n  \"csibm437\": \"cp437\",\n  \"cp737\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ΑΒΓΔΕΖΗΘΙΚΛΜΝΞΟΠΡΣΤΥΦΧΨΩαβγδεζηθικλμνξοπρσςτυφχψ░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀ωάέήϊίόύϋώΆΈΉΊΌΎΏ±≥≤ΪΫ÷≈°∙·√ⁿ²■ \"\n  },\n  \"ibm737\": \"cp737\",\n  \"csibm737\": \"cp737\",\n  \"cp775\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ĆüéāäģåćłēŖŗīŹÄÅÉæÆōöĢ¢ŚśÖÜø£Ø×¤ĀĪóŻżź”¦©®¬½¼Ł«»░▒▓│┤ĄČĘĖ╣║╗╝ĮŠ┐└┴┬├─┼ŲŪ╚╔╩╦╠═╬Žąčęėįšųūž┘┌█▄▌▐▀ÓßŌŃõÕµńĶķĻļņĒŅ’­±“¾¶§÷„°∙·¹³²■ \"\n  },\n  \"ibm775\": \"cp775\",\n  \"csibm775\": \"cp775\",\n  \"cp850\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÇüéâäàåçêëèïîìÄÅÉæÆôöòûùÿÖÜø£Ø×ƒáíóúñÑªº¿®¬½¼¡«»░▒▓│┤ÁÂÀ©╣║╗╝¢¥┐└┴┬├─┼ãÃ╚╔╩╦╠═╬¤ðÐÊËÈıÍÎÏ┘┌█▄¦Ì▀ÓßÔÒõÕµþÞÚÛÙýÝ¯´­±‗¾¶§÷¸°¨·¹³²■ \"\n  },\n  \"ibm850\": \"cp850\",\n  \"csibm850\": \"cp850\",\n  \"cp852\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÇüéâäůćçłëŐőîŹÄĆÉĹĺôöĽľŚśÖÜŤťŁ×čáíóúĄąŽžĘę¬źČş«»░▒▓│┤ÁÂĚŞ╣║╗╝Żż┐└┴┬├─┼Ăă╚╔╩╦╠═╬¤đĐĎËďŇÍÎě┘┌█▄ŢŮ▀ÓßÔŃńňŠšŔÚŕŰýÝţ´­˝˛ˇ˘§÷¸°¨˙űŘř■ \"\n  },\n  \"ibm852\": \"cp852\",\n  \"csibm852\": \"cp852\",\n  \"cp855\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ђЂѓЃёЁєЄѕЅіІїЇјЈљЉњЊћЋќЌўЎџЏюЮъЪаАбБцЦдДеЕфФгГ«»░▒▓│┤хХиИ╣║╗╝йЙ┐└┴┬├─┼кК╚╔╩╦╠═╬¤лЛмМнНоОп┘┌█▄Пя▀ЯрРсСтТуУжЖвВьЬ№­ыЫзЗшШэЭщЩчЧ§■ \"\n  },\n  \"ibm855\": \"cp855\",\n  \"csibm855\": \"cp855\",\n  \"cp856\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"אבגדהוזחטיךכלםמןנסעףפץצקרשת�£�×����������®¬½¼�«»░▒▓│┤���©╣║╗╝¢¥┐└┴┬├─┼��╚╔╩╦╠═╬¤���������┘┌█▄¦�▀������µ�������¯´­±‗¾¶§÷¸°¨·¹³²■ \"\n  },\n  \"ibm856\": \"cp856\",\n  \"csibm856\": \"cp856\",\n  \"cp857\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÇüéâäàåçêëèïîıÄÅÉæÆôöòûùİÖÜø£ØŞşáíóúñÑĞğ¿®¬½¼¡«»░▒▓│┤ÁÂÀ©╣║╗╝¢¥┐└┴┬├─┼ãÃ╚╔╩╦╠═╬¤ºªÊËÈ�ÍÎÏ┘┌█▄¦Ì▀ÓßÔÒõÕµ�×ÚÛÙìÿ¯´­±�¾¶§÷¸°¨·¹³²■ \"\n  },\n  \"ibm857\": \"cp857\",\n  \"csibm857\": \"cp857\",\n  \"cp858\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÇüéâäàåçêëèïîìÄÅÉæÆôöòûùÿÖÜø£Ø×ƒáíóúñÑªº¿®¬½¼¡«»░▒▓│┤ÁÂÀ©╣║╗╝¢¥┐└┴┬├─┼ãÃ╚╔╩╦╠═╬¤ðÐÊËÈ€ÍÎÏ┘┌█▄¦Ì▀ÓßÔÒõÕµþÞÚÛÙýÝ¯´­±‗¾¶§÷¸°¨·¹³²■ \"\n  },\n  \"ibm858\": \"cp858\",\n  \"csibm858\": \"cp858\",\n  \"cp860\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÇüéâãàÁçêÊèÍÔìÃÂÉÀÈôõòÚùÌÕÜ¢£Ù₧ÓáíóúñÑªº¿Ò¬½¼¡«»░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀αßΓπΣσµτΦΘΩδ∞φε∩≡±≥≤⌠⌡÷≈°∙·√ⁿ²■ \"\n  },\n  \"ibm860\": \"cp860\",\n  \"csibm860\": \"cp860\",\n  \"cp861\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÇüéâäàåçêëèÐðÞÄÅÉæÆôöþûÝýÖÜø£Ø₧ƒáíóúÁÍÓÚ¿⌐¬½¼¡«»░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀αßΓπΣσµτΦΘΩδ∞φε∩≡±≥≤⌠⌡÷≈°∙·√ⁿ²■ \"\n  },\n  \"ibm861\": \"cp861\",\n  \"csibm861\": \"cp861\",\n  \"cp862\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"אבגדהוזחטיךכלםמןנסעףפץצקרשת¢£¥₧ƒáíóúñÑªº¿⌐¬½¼¡«»░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀αßΓπΣσµτΦΘΩδ∞φε∩≡±≥≤⌠⌡÷≈°∙·√ⁿ²■ \"\n  },\n  \"ibm862\": \"cp862\",\n  \"csibm862\": \"cp862\",\n  \"cp863\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÇüéâÂà¶çêëèïî‗À§ÉÈÊôËÏûù¤ÔÜ¢£ÙÛƒ¦´óú¨¸³¯Î⌐¬½¼¾«»░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀αßΓπΣσµτΦΘΩδ∞φε∩≡±≥≤⌠⌡÷≈°∙·√ⁿ²■ \"\n  },\n  \"ibm863\": \"cp863\",\n  \"csibm863\": \"cp863\",\n  \"cp864\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\\u0000\\u0001\\u0002\\u0003\\u0004\\u0005\\u0006\\u0007\\b\\t\\n\\u000b\\f\\r\\u000e\\u000f\\u0010\\u0011\\u0012\\u0013\\u0014\\u0015\\u0016\\u0017\\u0018\\u0019\\u001a\\u001b\\u001c\\u001d\\u001e\\u001f !\\\"#$٪&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\\\]^_`abcdefghijklmnopqrstuvwxyz{|}~°·∙√▒─│┼┤┬├┴┐┌└┘β∞φ±½¼≈«»ﻷﻸ��ﻻﻼ� ­ﺂ£¤ﺄ��ﺎﺏﺕﺙ،ﺝﺡﺥ٠١٢٣٤٥٦٧٨٩ﻑ؛ﺱﺵﺹ؟¢ﺀﺁﺃﺅﻊﺋﺍﺑﺓﺗﺛﺟﺣﺧﺩﺫﺭﺯﺳﺷﺻﺿﻁﻅﻋﻏ¦¬÷×ﻉـﻓﻗﻛﻟﻣﻧﻫﻭﻯﻳﺽﻌﻎﻍﻡﹽّﻥﻩﻬﻰﻲﻐﻕﻵﻶﻝﻙﻱ■�\"\n  },\n  \"ibm864\": \"cp864\",\n  \"csibm864\": \"cp864\",\n  \"cp865\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÇüéâäàåçêëèïîìÄÅÉæÆôöòûùÿÖÜø£Ø₧ƒáíóúñÑªº¿⌐¬½¼¡«¤░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀αßΓπΣσµτΦΘΩδ∞φε∩≡±≥≤⌠⌡÷≈°∙·√ⁿ²■ \"\n  },\n  \"ibm865\": \"cp865\",\n  \"csibm865\": \"cp865\",\n  \"cp866\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"АБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдежзийклмноп░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀рстуфхцчшщъыьэюяЁёЄєЇїЎў°∙·√№¤■ \"\n  },\n  \"ibm866\": \"cp866\",\n  \"csibm866\": \"cp866\",\n  \"cp869\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"������Ά�·¬¦‘’Έ―ΉΊΪΌ��ΎΫ©Ώ²³ά£έήίϊΐόύΑΒΓΔΕΖΗ½ΘΙ«»░▒▓│┤ΚΛΜΝ╣║╗╝ΞΟ┐└┴┬├─┼ΠΡ╚╔╩╦╠═╬ΣΤΥΦΧΨΩαβγ┘┌█▄δε▀ζηθικλμνξοπρσςτ΄­±υφχ§ψ΅°¨ωϋΰώ■ \"\n  },\n  \"ibm869\": \"cp869\",\n  \"csibm869\": \"cp869\",\n  \"cp922\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ¡¢£¤¥¦§¨©ª«¬­®‾°±²³´µ¶·¸¹º»¼½¾¿ÀÁÂÃÄÅÆÇÈÉÊËÌÍÎÏŠÑÒÓÔÕÖ×ØÙÚÛÜÝŽßàáâãäåæçèéêëìíîïšñòóôõö÷øùúûüýžÿ\"\n  },\n  \"ibm922\": \"cp922\",\n  \"csibm922\": \"cp922\",\n  \"cp1046\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ﺈ×÷ﹱ■│─┐┌└┘ﹹﹻﹽﹿﹷﺊﻰﻳﻲﻎﻏﻐﻶﻸﻺﻼ ¤ﺋﺑﺗﺛﺟﺣ،­ﺧﺳ٠١٢٣٤٥٦٧٨٩ﺷ؛ﺻﺿﻊ؟ﻋءآأؤإئابةتثجحخدذرزسشصضطﻇعغﻌﺂﺄﺎﻓـفقكلمنهوىيًٌٍَُِّْﻗﻛﻟﻵﻷﻹﻻﻣﻧﻬﻩ�\"\n  },\n  \"ibm1046\": \"cp1046\",\n  \"csibm1046\": \"cp1046\",\n  \"cp1124\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ЁЂҐЄЅІЇЈЉЊЋЌ­ЎЏАБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдежзийклмнопрстуфхцчшщъыьэюя№ёђґєѕіїјљњћќ§ўџ\"\n  },\n  \"ibm1124\": \"cp1124\",\n  \"csibm1124\": \"cp1124\",\n  \"cp1125\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"АБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдежзийклмноп░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀рстуфхцчшщъыьэюяЁёҐґЄєІіЇї·√№¤■ \"\n  },\n  \"ibm1125\": \"cp1125\",\n  \"csibm1125\": \"cp1125\",\n  \"cp1129\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ¡¢£¤¥¦§œ©ª«¬­®¯°±²³Ÿµ¶·Œ¹º»¼½¾¿ÀÁÂĂÄÅÆÇÈÉÊË̀ÍÎÏĐÑ̉ÓÔƠÖ×ØÙÚÛÜỮßàáâăäåæçèéêë́íîïđṇ̃óôơö÷øùúûüư₫ÿ\"\n  },\n  \"ibm1129\": \"cp1129\",\n  \"csibm1129\": \"cp1129\",\n  \"cp1133\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ກຂຄງຈສຊຍດຕຖທນບປຜຝພຟມຢຣລວຫອຮ���ຯະາຳິີຶືຸູຼັົຽ���ເແໂໃໄ່້໊໋໌ໍໆ�ໜໝ₭����������������໐໑໒໓໔໕໖໗໘໙��¢¬¦�\"\n  },\n  \"ibm1133\": \"cp1133\",\n  \"csibm1133\": \"cp1133\",\n  \"cp1161\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"��������������������������������่กขฃคฅฆงจฉชซฌญฎฏฐฑฒณดตถทธนบปผฝพฟภมยรฤลฦวศษสหฬอฮฯะัาำิีึืฺุู้๊๋€฿เแโใไๅๆ็่้๊๋์ํ๎๏๐๑๒๓๔๕๖๗๘๙๚๛¢¬¦ \"\n  },\n  \"ibm1161\": \"cp1161\",\n  \"csibm1161\": \"cp1161\",\n  \"cp1162\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"€…‘’“”•–— กขฃคฅฆงจฉชซฌญฎฏฐฑฒณดตถทธนบปผฝพฟภมยรฤลฦวศษสหฬอฮฯะัาำิีึืฺุู����฿เแโใไๅๆ็่้๊๋์ํ๎๏๐๑๒๓๔๕๖๗๘๙๚๛����\"\n  },\n  \"ibm1162\": \"cp1162\",\n  \"csibm1162\": \"cp1162\",\n  \"cp1163\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ¡¢£€¥¦§œ©ª«¬­®¯°±²³Ÿµ¶·Œ¹º»¼½¾¿ÀÁÂĂÄÅÆÇÈÉÊË̀ÍÎÏĐÑ̉ÓÔƠÖ×ØÙÚÛÜỮßàáâăäåæçèéêë́íîïđṇ̃óôơö÷øùúûüư₫ÿ\"\n  },\n  \"ibm1163\": \"cp1163\",\n  \"csibm1163\": \"cp1163\",\n  \"maccroatian\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûü†°¢£§•¶ß®Š™´¨≠ŽØ∞±≤≥∆µ∂∑∏š∫ªºΩžø¿¡¬√ƒ≈Ć«Č… ÀÃÕŒœĐ—“”‘’÷◊�©⁄¤‹›Æ»–·‚„‰ÂćÁčÈÍÎÏÌÓÔđÒÚÛÙıˆ˜¯πË˚¸Êæˇ\"\n  },\n  \"maccyrillic\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"АБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯ†°¢£§•¶І®©™Ђђ≠Ѓѓ∞±≤≥іµ∂ЈЄєЇїЉљЊњјЅ¬√ƒ≈∆«»… ЋћЌќѕ–—“”‘’÷„ЎўЏџ№Ёёяабвгдежзийклмнопрстуфхцчшщъыьэю¤\"\n  },\n  \"macgreek\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"Ä¹²É³ÖÜ΅àâä΄¨çéèêë£™îï•½‰ôö¦­ùûü†ΓΔΘΛΞΠß®©ΣΪ§≠°·Α±≤≥¥ΒΕΖΗΙΚΜΦΫΨΩάΝ¬ΟΡ≈Τ«»… ΥΧΆΈœ–―“”‘’÷ΉΊΌΎέήίόΏύαβψδεφγηιξκλμνοπώρστθωςχυζϊϋΐΰ�\"\n  },\n  \"maciceland\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûüÝ°¢£§•¶ß®©™´¨≠ÆØ∞±≤≥¥µ∂∑∏π∫ªºΩæø¿¡¬√ƒ≈∆«»… ÀÃÕŒœ–—“”‘’÷◊ÿŸ⁄¤ÐðÞþý·‚„‰ÂÊÁËÈÍÎÏÌÓÔ�ÒÚÛÙıˆ˜¯˘˙˚¸˝˛ˇ\"\n  },\n  \"macroman\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûü†°¢£§•¶ß®©™´¨≠ÆØ∞±≤≥¥µ∂∑∏π∫ªºΩæø¿¡¬√ƒ≈∆«»… ÀÃÕŒœ–—“”‘’÷◊ÿŸ⁄¤‹›ﬁﬂ‡·‚„‰ÂÊÁËÈÍÎÏÌÓÔ�ÒÚÛÙıˆ˜¯˘˙˚¸˝˛ˇ\"\n  },\n  \"macromania\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûü†°¢£§•¶ß®©™´¨≠ĂŞ∞±≤≥¥µ∂∑∏π∫ªºΩăş¿¡¬√ƒ≈∆«»… ÀÃÕŒœ–—“”‘’÷◊ÿŸ⁄¤‹›Ţţ‡·‚„‰ÂÊÁËÈÍÎÏÌÓÔ�ÒÚÛÙıˆ˜¯˘˙˚¸˝˛ˇ\"\n  },\n  \"macthai\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"«»…“”�•‘’� กขฃคฅฆงจฉชซฌญฎฏฐฑฒณดตถทธนบปผฝพฟภมยรฤลฦวศษสหฬอฮฯะัาำิีึืฺุู﻿​–—฿เแโใไๅๆ็่้๊๋์ํ™๏๐๑๒๓๔๕๖๗๘๙®©����\"\n  },\n  \"macturkish\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûü†°¢£§•¶ß®©™´¨≠ÆØ∞±≤≥¥µ∂∑∏π∫ªºΩæø¿¡¬√ƒ≈∆«»… ÀÃÕŒœ–—“”‘’÷◊ÿŸĞğİıŞş‡·‚„‰ÂÊÁËÈÍÎÏÌÓÔ�ÒÚÛÙ�ˆ˜¯˘˙˚¸˝˛ˇ\"\n  },\n  \"macukraine\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"АБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯ†°Ґ£§•¶І®©™Ђђ≠Ѓѓ∞±≤≥іµґЈЄєЇїЉљЊњјЅ¬√ƒ≈∆«»… ЋћЌќѕ–—“”‘’÷„ЎўЏџ№Ёёяабвгдежзийклмнопрстуфхцчшщъыьэю¤\"\n  },\n  \"koi8r\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"─│┌┐└┘├┤┬┴┼▀▄█▌▐░▒▓⌠■∙√≈≤≥ ⌡°²·÷═║╒ё╓╔╕╖╗╘╙╚╛╜╝╞╟╠╡Ё╢╣╤╥╦╧╨╩╪╫╬©юабцдефгхийклмнопярстужвьызшэщчъЮАБЦДЕФГХИЙКЛМНОПЯРСТУЖВЬЫЗШЭЩЧЪ\"\n  },\n  \"koi8u\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"─│┌┐└┘├┤┬┴┼▀▄█▌▐░▒▓⌠■∙√≈≤≥ ⌡°²·÷═║╒ёє╔ії╗╘╙╚╛ґ╝╞╟╠╡ЁЄ╣ІЇ╦╧╨╩╪Ґ╬©юабцдефгхийклмнопярстужвьызшэщчъЮАБЦДЕФГХИЙКЛМНОПЯРСТУЖВЬЫЗШЭЩЧЪ\"\n  },\n  \"koi8ru\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"─│┌┐└┘├┤┬┴┼▀▄█▌▐░▒▓⌠■∙√≈≤≥ ⌡°²·÷═║╒ёє╔ії╗╘╙╚╛ґў╞╟╠╡ЁЄ╣ІЇ╦╧╨╩╪ҐЎ©юабцдефгхийклмнопярстужвьызшэщчъЮАБЦДЕФГХИЙКЛМНОПЯРСТУЖВЬЫЗШЭЩЧЪ\"\n  },\n  \"koi8t\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"қғ‚Ғ„…†‡�‰ҳ‹ҲҷҶ�Қ‘’“”•–—�™�›�����ӯӮё¤ӣ¦§���«¬­®�°±²Ё�Ӣ¶·�№�»���©юабцдефгхийклмнопярстужвьызшэщчъЮАБЦДЕФГХИЙКЛМНОПЯРСТУЖВЬЫЗШЭЩЧЪ\"\n  },\n  \"armscii8\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" �և։)(»«—.՝,-֊…՜՛՞ԱաԲբԳգԴդԵեԶզԷէԸըԹթԺժԻիԼլԽխԾծԿկՀհՁձՂղՃճՄմՅյՆնՇշՈոՉչՊպՋջՌռՍսՎվՏտՐրՑցՒւՓփՔքՕօՖֆ՚�\"\n  },\n  \"rk1048\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ЂЃ‚ѓ„…†‡€‰Љ‹ЊҚҺЏђ‘’“”•–—�™љ›њқһџ ҰұӘ¤Ө¦§Ё©Ғ«¬­®Ү°±Ііөµ¶·ё№ғ»әҢңүАБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдежзийклмнопрстуфхцчшщъыьэюя\"\n  },\n  \"tcvn\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\\u0000ÚỤ\\u0003ỪỬỮ\\u0007\\b\\t\\n\\u000b\\f\\r\\u000e\\u000f\\u0010ỨỰỲỶỸÝỴ\\u0018\\u0019\\u001a\\u001b\\u001c\\u001d\\u001e\\u001f !\\\"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\\\]^_`abcdefghijklmnopqrstuvwxyz{|}~ÀẢÃÁẠẶẬÈẺẼÉẸỆÌỈĨÍỊÒỎÕÓỌỘỜỞỠỚỢÙỦŨ ĂÂÊÔƠƯĐăâêôơưđẶ̀̀̉̃́àảãáạẲằẳẵắẴẮẦẨẪẤỀặầẩẫấậèỂẻẽéẹềểễếệìỉỄẾỒĩíịòỔỏõóọồổỗốộờởỡớợùỖủũúụừửữứựỳỷỹýỵỐ\"\n  },\n  \"georgianacademy\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"‚ƒ„…†‡ˆ‰Š‹Œ‘’“”•–—˜™š›œŸ ¡¢£¤¥¦§¨©ª«¬­®¯°±²³´µ¶·¸¹º»¼½¾¿აბგდევზთიკლმნოპჟრსტუფქღყშჩცძწჭხჯჰჱჲჳჴჵჶçèéêëìíîïðñòóôõö÷øùúûüýþÿ\"\n  },\n  \"georgianps\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"‚ƒ„…†‡ˆ‰Š‹Œ‘’“”•–—˜™š›œŸ ¡¢£¤¥¦§¨©ª«¬­®¯°±²³´µ¶·¸¹º»¼½¾¿აბგდევზჱთიკლმნჲოპჟრსტჳუფქღყშჩცძწჭხჴჯჰჵæçèéêëìíîïðñòóôõö÷øùúûüýþÿ\"\n  },\n  \"pt154\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ҖҒӮғ„…ҶҮҲүҠӢҢҚҺҸҗ‘’“”•–—ҳҷҡӣңқһҹ ЎўЈӨҘҰ§Ё©Ә«¬ӯ®Ҝ°ұІіҙө¶·ё№ә»јҪҫҝАБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдежзийклмнопрстуфхцчшщъыьэюя\"\n  },\n  \"viscii\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\\u0000\\u0001Ẳ\\u0003\\u0004ẴẪ\\u0007\\b\\t\\n\\u000b\\f\\r\\u000e\\u000f\\u0010\\u0011\\u0012\\u0013Ỷ\\u0015\\u0016\\u0017\\u0018Ỹ\\u001a\\u001b\\u001c\\u001dỴ\\u001f !\\\"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\\\]^_`abcdefghijklmnopqrstuvwxyz{|}~ẠẮẰẶẤẦẨẬẼẸẾỀỂỄỆỐỒỔỖỘỢỚỜỞỊỎỌỈỦŨỤỲÕắằặấầẩậẽẹếềểễệốồổỗỠƠộờởịỰỨỪỬơớƯÀÁÂÃẢĂẳẵÈÉÊẺÌÍĨỳĐứÒÓÔạỷừửÙÚỹỵÝỡưàáâãảăữẫèéêẻìíĩỉđựòóôõỏọụùúũủýợỮ\"\n  },\n  \"iso646cn\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\\u0000\\u0001\\u0002\\u0003\\u0004\\u0005\\u0006\\u0007\\b\\t\\n\\u000b\\f\\r\\u000e\\u000f\\u0010\\u0011\\u0012\\u0013\\u0014\\u0015\\u0016\\u0017\\u0018\\u0019\\u001a\\u001b\\u001c\\u001d\\u001e\\u001f !\\\"#¥%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\\\]^_`abcdefghijklmnopqrstuvwxyz{|}‾��������������������������������������������������������������������������������������������������������������������������������\"\n  },\n  \"iso646jp\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\\u0000\\u0001\\u0002\\u0003\\u0004\\u0005\\u0006\\u0007\\b\\t\\n\\u000b\\f\\r\\u000e\\u000f\\u0010\\u0011\\u0012\\u0013\\u0014\\u0015\\u0016\\u0017\\u0018\\u0019\\u001a\\u001b\\u001c\\u001d\\u001e\\u001f !\\\"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[¥]^_`abcdefghijklmnopqrstuvwxyz{|}‾��������������������������������������������������������������������������������������������������������������������������������\"\n  },\n  \"hproman8\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ÀÂÈÊËÎÏ´ˋˆ¨˜ÙÛ₤¯Ýý°ÇçÑñ¡¿¤£¥§ƒ¢âêôûáéóúàèòùäëöüÅîØÆåíøæÄìÖÜÉïßÔÁÃãÐðÍÌÓÒÕõŠšÚŸÿÞþ·µ¶¾—¼½ªº«■»±�\"\n  },\n  \"macintosh\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûü†°¢£§•¶ß®©™´¨≠ÆØ∞±≤≥¥µ∂∑∏π∫ªºΩæø¿¡¬√ƒ≈∆«»… ÀÃÕŒœ–—“”‘’÷◊ÿŸ⁄¤‹›ﬁﬂ‡·‚„‰ÂÊÁËÈÍÎÏÌÓÔ�ÒÚÛÙıˆ˜¯˘˙˚¸˝˛ˇ\"\n  },\n  \"ascii\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"��������������������������������������������������������������������������������������������������������������������������������\"\n  },\n  \"tis620\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"���������������������������������กขฃคฅฆงจฉชซฌญฎฏฐฑฒณดตถทธนบปผฝพฟภมยรฤลฦวศษสหฬอฮฯะัาำิีึืฺุู����฿เแโใไๅๆ็่้๊๋์ํ๎๏๐๑๒๓๔๕๖๗๘๙๚๛����\"\n  }\n}","\"use strict\";\n\n// Description of supported double byte encodings and aliases.\n// Tables are not require()-d until they are needed to speed up library load.\n// require()-s are direct to support Browserify.\n\nmodule.exports = {\n    \n    // == Japanese/ShiftJIS ====================================================\n    // All japanese encodings are based on JIS X set of standards:\n    // JIS X 0201 - Single-byte encoding of ASCII + ¥ + Kana chars at 0xA1-0xDF.\n    // JIS X 0208 - Main set of 6879 characters, placed in 94x94 plane, to be encoded by 2 bytes. \n    //              Has several variations in 1978, 1983, 1990 and 1997.\n    // JIS X 0212 - Supplementary plane of 6067 chars in 94x94 plane. 1990. Effectively dead.\n    // JIS X 0213 - Extension and modern replacement of 0208 and 0212. Total chars: 11233.\n    //              2 planes, first is superset of 0208, second - revised 0212.\n    //              Introduced in 2000, revised 2004. Some characters are in Unicode Plane 2 (0x2xxxx)\n\n    // Byte encodings are:\n    //  * Shift_JIS: Compatible with 0201, uses not defined chars in top half as lead bytes for double-byte\n    //               encoding of 0208. Lead byte ranges: 0x81-0x9F, 0xE0-0xEF; Trail byte ranges: 0x40-0x7E, 0x80-0x9E, 0x9F-0xFC.\n    //               Windows CP932 is a superset of Shift_JIS. Some companies added more chars, notably KDDI.\n    //  * EUC-JP:    Up to 3 bytes per character. Used mostly on *nixes.\n    //               0x00-0x7F       - lower part of 0201\n    //               0x8E, 0xA1-0xDF - upper part of 0201\n    //               (0xA1-0xFE)x2   - 0208 plane (94x94).\n    //               0x8F, (0xA1-0xFE)x2 - 0212 plane (94x94).\n    //  * JIS X 208: 7-bit, direct encoding of 0208. Byte ranges: 0x21-0x7E (94 values). Uncommon.\n    //               Used as-is in ISO2022 family.\n    //  * ISO2022-JP: Stateful encoding, with escape sequences to switch between ASCII, \n    //                0201-1976 Roman, 0208-1978, 0208-1983.\n    //  * ISO2022-JP-1: Adds esc seq for 0212-1990.\n    //  * ISO2022-JP-2: Adds esc seq for GB2313-1980, KSX1001-1992, ISO8859-1, ISO8859-7.\n    //  * ISO2022-JP-3: Adds esc seq for 0201-1976 Kana set, 0213-2000 Planes 1, 2.\n    //  * ISO2022-JP-2004: Adds 0213-2004 Plane 1.\n    //\n    // After JIS X 0213 appeared, Shift_JIS-2004, EUC-JISX0213 and ISO2022-JP-2004 followed, with just changing the planes.\n    //\n    // Overall, it seems that it's a mess :( http://www8.plala.or.jp/tkubota1/unicode-symbols-map2.html\n\n    'shiftjis': {\n        type: '_dbcs',\n        table: function() { return require('./tables/shiftjis.json') },\n        encodeAdd: {'\\u00a5': 0x5C, '\\u203E': 0x7E},\n        encodeSkipVals: [{from: 0xED40, to: 0xF940}],\n    },\n    'csshiftjis': 'shiftjis',\n    'mskanji': 'shiftjis',\n    'sjis': 'shiftjis',\n    'windows31j': 'shiftjis',\n    'ms31j': 'shiftjis',\n    'xsjis': 'shiftjis',\n    'windows932': 'shiftjis',\n    'ms932': 'shiftjis',\n    '932': 'shiftjis',\n    'cp932': 'shiftjis',\n\n    'eucjp': {\n        type: '_dbcs',\n        table: function() { return require('./tables/eucjp.json') },\n        encodeAdd: {'\\u00a5': 0x5C, '\\u203E': 0x7E},\n    },\n\n    // TODO: KDDI extension to Shift_JIS\n    // TODO: IBM CCSID 942 = CP932, but F0-F9 custom chars and other char changes.\n    // TODO: IBM CCSID 943 = Shift_JIS = CP932 with original Shift_JIS lower 128 chars.\n\n\n    // == Chinese/GBK ==========================================================\n    // http://en.wikipedia.org/wiki/GBK\n    // We mostly implement W3C recommendation: https://www.w3.org/TR/encoding/#gbk-encoder\n\n    // Oldest GB2312 (1981, ~7600 chars) is a subset of CP936\n    'gb2312': 'cp936',\n    'gb231280': 'cp936',\n    'gb23121980': 'cp936',\n    'csgb2312': 'cp936',\n    'csiso58gb231280': 'cp936',\n    'euccn': 'cp936',\n\n    // Microsoft's CP936 is a subset and approximation of GBK.\n    'windows936': 'cp936',\n    'ms936': 'cp936',\n    '936': 'cp936',\n    'cp936': {\n        type: '_dbcs',\n        table: function() { return require('./tables/cp936.json') },\n    },\n\n    // GBK (~22000 chars) is an extension of CP936 that added user-mapped chars and some other.\n    'gbk': {\n        type: '_dbcs',\n        table: function() { return require('./tables/cp936.json').concat(require('./tables/gbk-added.json')) },\n    },\n    'xgbk': 'gbk',\n    'isoir58': 'gbk',\n\n    // GB18030 is an algorithmic extension of GBK.\n    // Main source: https://www.w3.org/TR/encoding/#gbk-encoder\n    // http://icu-project.org/docs/papers/gb18030.html\n    // http://source.icu-project.org/repos/icu/data/trunk/charset/data/xml/gb-18030-2000.xml\n    // http://www.khngai.com/chinese/charmap/tblgbk.php?page=0\n    'gb18030': {\n        type: '_dbcs',\n        table: function() { return require('./tables/cp936.json').concat(require('./tables/gbk-added.json')) },\n        gb18030: function() { return require('./tables/gb18030-ranges.json') },\n        encodeSkipVals: [0x80],\n        encodeAdd: {'€': 0xA2E3},\n    },\n\n    'chinese': 'gb18030',\n\n\n    // == Korean ===============================================================\n    // EUC-KR, KS_C_5601 and KS X 1001 are exactly the same.\n    'windows949': 'cp949',\n    'ms949': 'cp949',\n    '949': 'cp949',\n    'cp949': {\n        type: '_dbcs',\n        table: function() { return require('./tables/cp949.json') },\n    },\n\n    'cseuckr': 'cp949',\n    'csksc56011987': 'cp949',\n    'euckr': 'cp949',\n    'isoir149': 'cp949',\n    'korean': 'cp949',\n    'ksc56011987': 'cp949',\n    'ksc56011989': 'cp949',\n    'ksc5601': 'cp949',\n\n\n    // == Big5/Taiwan/Hong Kong ================================================\n    // There are lots of tables for Big5 and cp950. Please see the following links for history:\n    // http://moztw.org/docs/big5/  http://www.haible.de/bruno/charsets/conversion-tables/Big5.html\n    // Variations, in roughly number of defined chars:\n    //  * Windows CP 950: Microsoft variant of Big5. Canonical: http://www.unicode.org/Public/MAPPINGS/VENDORS/MICSFT/WINDOWS/CP950.TXT\n    //  * Windows CP 951: Microsoft variant of Big5-HKSCS-2001. Seems to be never public. http://me.abelcheung.org/articles/research/what-is-cp951/\n    //  * Big5-2003 (Taiwan standard) almost superset of cp950.\n    //  * Unicode-at-on (UAO) / Mozilla 1.8. Falling out of use on the Web. Not supported by other browsers.\n    //  * Big5-HKSCS (-2001, -2004, -2008). Hong Kong standard. \n    //    many unicode code points moved from PUA to Supplementary plane (U+2XXXX) over the years.\n    //    Plus, it has 4 combining sequences.\n    //    Seems that Mozilla refused to support it for 10 yrs. https://bugzilla.mozilla.org/show_bug.cgi?id=162431 https://bugzilla.mozilla.org/show_bug.cgi?id=310299\n    //    because big5-hkscs is the only encoding to include astral characters in non-algorithmic way.\n    //    Implementations are not consistent within browsers; sometimes labeled as just big5.\n    //    MS Internet Explorer switches from big5 to big5-hkscs when a patch applied.\n    //    Great discussion & recap of what's going on https://bugzilla.mozilla.org/show_bug.cgi?id=912470#c31\n    //    In the encoder, it might make sense to support encoding old PUA mappings to Big5 bytes seq-s.\n    //    Official spec: http://www.ogcio.gov.hk/en/business/tech_promotion/ccli/terms/doc/2003cmp_2008.txt\n    //                   http://www.ogcio.gov.hk/tc/business/tech_promotion/ccli/terms/doc/hkscs-2008-big5-iso.txt\n    // \n    // Current understanding of how to deal with Big5(-HKSCS) is in the Encoding Standard, http://encoding.spec.whatwg.org/#big5-encoder\n    // Unicode mapping (http://www.unicode.org/Public/MAPPINGS/OBSOLETE/EASTASIA/OTHER/BIG5.TXT) is said to be wrong.\n\n    'windows950': 'cp950',\n    'ms950': 'cp950',\n    '950': 'cp950',\n    'cp950': {\n        type: '_dbcs',\n        table: function() { return require('./tables/cp950.json') },\n    },\n\n    // Big5 has many variations and is an extension of cp950. We use Encoding Standard's as a consensus.\n    'big5': 'big5hkscs',\n    'big5hkscs': {\n        type: '_dbcs',\n        table: function() { return require('./tables/cp950.json').concat(require('./tables/big5-added.json')) },\n        encodeSkipVals: [\n            // Although Encoding Standard says we should avoid encoding to HKSCS area (See Step 1 of\n            // https://encoding.spec.whatwg.org/#index-big5-pointer), we still do it to increase compatibility with ICU.\n            // But if a single unicode point can be encoded both as HKSCS and regular Big5, we prefer the latter.\n            0x8e69, 0x8e6f, 0x8e7e, 0x8eab, 0x8eb4, 0x8ecd, 0x8ed0, 0x8f57, 0x8f69, 0x8f6e, 0x8fcb, 0x8ffe,\n            0x906d, 0x907a, 0x90c4, 0x90dc, 0x90f1, 0x91bf, 0x92af, 0x92b0, 0x92b1, 0x92b2, 0x92d1, 0x9447, 0x94ca,\n            0x95d9, 0x96fc, 0x9975, 0x9b76, 0x9b78, 0x9b7b, 0x9bc6, 0x9bde, 0x9bec, 0x9bf6, 0x9c42, 0x9c53, 0x9c62,\n            0x9c68, 0x9c6b, 0x9c77, 0x9cbc, 0x9cbd, 0x9cd0, 0x9d57, 0x9d5a, 0x9dc4, 0x9def, 0x9dfb, 0x9ea9, 0x9eef,\n            0x9efd, 0x9f60, 0x9fcb, 0xa077, 0xa0dc, 0xa0df, 0x8fcc, 0x92c8, 0x9644, 0x96ed,\n\n            // Step 2 of https://encoding.spec.whatwg.org/#index-big5-pointer: Use last pointer for U+2550, U+255E, U+2561, U+256A, U+5341, or U+5345\n            0xa2a4, 0xa2a5, 0xa2a7, 0xa2a6, 0xa2cc, 0xa2ce,\n        ],\n    },\n\n    'cnbig5': 'big5hkscs',\n    'csbig5': 'big5hkscs',\n    'xxbig5': 'big5hkscs',\n};\n","/***\n * Node External Editor\n *\n * Kevin Gravier <kevin@mrkmg.com>\n * MIT 2018\n */\nexport class CreateFileError extends Error {\n    originalError;\n    constructor(originalError) {\n        super(`Failed to create temporary file. ${originalError.message}`);\n        this.originalError = originalError;\n    }\n}\n","/***\n * Node External Editor\n *\n * Kevin Gravier <kevin@mrkmg.com>\n * MIT 2018\n */\nexport class LaunchEditorError extends Error {\n    originalError;\n    constructor(originalError) {\n        super(`Failed to launch editor. ${originalError.message}`);\n        this.originalError = originalError;\n    }\n}\n","/***\n * Node External Editor\n *\n * Kevin Gravier <kevin@mrkmg.com>\n * MIT 2018\n */\nexport class ReadFileError extends Error {\n    originalError;\n    constructor(originalError) {\n        super(`Failed to read temporary file. ${originalError.message}`);\n        this.originalError = originalError;\n    }\n}\n","/***\n * Node External Editor\n *\n * Kevin Gravier <kevin@mrkmg.com>\n * MIT 2018\n */\nexport class RemoveFileError extends Error {\n    originalError;\n    constructor(originalError) {\n        super(`Failed to remove temporary file. ${originalError.message}`);\n        this.originalError = originalError;\n    }\n}\n","import { detect } from 'chardet';\nimport { spawn, spawnSync } from 'child_process';\nimport { readFileSync, unlinkSync, writeFileSync } from 'fs';\nimport path from 'node:path';\nimport os from 'node:os';\nimport { randomUUID } from 'node:crypto';\nimport iconv from 'iconv-lite';\nimport { CreateFileError } from './errors/CreateFileError.js';\nimport { LaunchEditorError } from './errors/LaunchEditorError.js';\nimport { ReadFileError } from './errors/ReadFileError.js';\nimport { RemoveFileError } from './errors/RemoveFileError.js';\nexport { CreateFileError, LaunchEditorError, ReadFileError, RemoveFileError };\nexport function edit(text = '', fileOptions) {\n    const editor = new ExternalEditor(text, fileOptions);\n    editor.run();\n    editor.cleanup();\n    return editor.text;\n}\nexport function editAsync(text = '', callback, fileOptions) {\n    const editor = new ExternalEditor(text, fileOptions);\n    editor.runAsync((err, result) => {\n        if (err) {\n            setImmediate(callback, err, undefined);\n        }\n        else {\n            try {\n                editor.cleanup();\n                setImmediate(callback, undefined, result);\n            }\n            catch (cleanupError) {\n                setImmediate(callback, cleanupError, undefined);\n            }\n        }\n    });\n}\nfunction sanitizeAffix(affix) {\n    if (!affix)\n        return '';\n    return affix.replace(/[^a-zA-Z0-9_.-]/g, '_');\n}\nfunction splitStringBySpace(str) {\n    const pieces = [];\n    let currentString = '';\n    for (let strIndex = 0; strIndex < str.length; strIndex++) {\n        const currentLetter = str.charAt(strIndex);\n        if (strIndex > 0 &&\n            currentLetter === ' ' &&\n            str[strIndex - 1] !== '\\\\' &&\n            currentString.length > 0) {\n            pieces.push(currentString);\n            currentString = '';\n        }\n        else {\n            currentString = `${currentString}${currentLetter}`;\n        }\n    }\n    if (currentString.length > 0) {\n        pieces.push(currentString);\n    }\n    return pieces;\n}\nexport class ExternalEditor {\n    text = '';\n    tempFile;\n    editor;\n    lastExitStatus = 0;\n    fileOptions = {};\n    get temp_file() {\n        console.log('DEPRECATED: temp_file. Use tempFile moving forward.');\n        return this.tempFile;\n    }\n    get last_exit_status() {\n        console.log('DEPRECATED: last_exit_status. Use lastExitStatus moving forward.');\n        return this.lastExitStatus;\n    }\n    constructor(text = '', fileOptions) {\n        this.text = text;\n        if (fileOptions) {\n            this.fileOptions = fileOptions;\n        }\n        this.determineEditor();\n        this.createTemporaryFile();\n    }\n    run() {\n        this.launchEditor();\n        this.readTemporaryFile();\n        return this.text;\n    }\n    runAsync(callback) {\n        try {\n            this.launchEditorAsync(() => {\n                try {\n                    this.readTemporaryFile();\n                    setImmediate(callback, undefined, this.text);\n                }\n                catch (readError) {\n                    setImmediate(callback, readError, undefined);\n                }\n            });\n        }\n        catch (launchError) {\n            setImmediate(callback, launchError, undefined);\n        }\n    }\n    cleanup() {\n        this.removeTemporaryFile();\n    }\n    determineEditor() {\n        const editor = process.env['VISUAL']\n            ? process.env['VISUAL']\n            : process.env['EDITOR']\n                ? process.env['EDITOR']\n                : process.platform.startsWith('win')\n                    ? 'notepad'\n                    : 'vim';\n        const editorOpts = splitStringBySpace(editor).map((piece) => piece.replace('\\\\ ', ' '));\n        const bin = editorOpts.shift();\n        this.editor = { args: editorOpts, bin };\n    }\n    createTemporaryFile() {\n        try {\n            const baseDir = this.fileOptions.dir ?? os.tmpdir();\n            const id = randomUUID();\n            const prefix = sanitizeAffix(this.fileOptions.prefix);\n            const postfix = sanitizeAffix(this.fileOptions.postfix);\n            const filename = `${prefix}${id}${postfix}`;\n            const candidate = path.resolve(baseDir, filename);\n            const baseResolved = path.resolve(baseDir) + path.sep;\n            if (!candidate.startsWith(baseResolved)) {\n                throw new Error('Resolved temporary file escaped the base directory');\n            }\n            this.tempFile = candidate;\n            const opt = { encoding: 'utf8', flag: 'wx' };\n            if (Object.prototype.hasOwnProperty.call(this.fileOptions, 'mode')) {\n                opt.mode = this.fileOptions.mode;\n            }\n            writeFileSync(this.tempFile, this.text, opt);\n        }\n        catch (createFileError) {\n            throw new CreateFileError(createFileError);\n        }\n    }\n    readTemporaryFile() {\n        try {\n            const tempFileBuffer = readFileSync(this.tempFile);\n            if (tempFileBuffer.length === 0) {\n                this.text = '';\n            }\n            else {\n                let encoding = detect(tempFileBuffer) ?? 'utf8';\n                if (!iconv.encodingExists(encoding)) {\n                    // Probably a bad idea, but will at least prevent crashing\n                    encoding = 'utf8';\n                }\n                this.text = iconv.decode(tempFileBuffer, encoding);\n            }\n        }\n        catch (readFileError) {\n            throw new ReadFileError(readFileError);\n        }\n    }\n    removeTemporaryFile() {\n        try {\n            unlinkSync(this.tempFile);\n        }\n        catch (removeFileError) {\n            throw new RemoveFileError(removeFileError);\n        }\n    }\n    launchEditor() {\n        try {\n            const editorProcess = spawnSync(this.editor.bin, this.editor.args.concat([this.tempFile]), { stdio: 'inherit' });\n            this.lastExitStatus = editorProcess.status ?? 0;\n        }\n        catch (launchError) {\n            throw new LaunchEditorError(launchError);\n        }\n    }\n    launchEditorAsync(callback) {\n        try {\n            const editorProcess = spawn(this.editor.bin, this.editor.args.concat([this.tempFile]), { stdio: 'inherit' });\n            editorProcess.on('exit', (code) => {\n                this.lastExitStatus = code;\n                setImmediate(callback);\n            });\n        }\n        catch (launchError) {\n            throw new LaunchEditorError(launchError);\n        }\n    }\n}\n","import { editAsync } from '@inquirer/external-editor';\nimport { createPrompt, useEffect, useState, useKeypress, usePrefix, isEnterKey, makeTheme, } from '@inquirer/core';\nconst editorTheme = {\n    validationFailureMode: 'keep',\n};\nexport default createPrompt((config, done) => {\n    const { waitForUseInput = true, file: { postfix = config.postfix ?? '.txt', ...fileProps } = {}, validate = () => true, } = config;\n    const theme = makeTheme(editorTheme, config.theme);\n    const [status, setStatus] = useState('idle');\n    const [value = '', setValue] = useState(config.default);\n    const [errorMsg, setError] = useState();\n    const prefix = usePrefix({ status, theme });\n    function startEditor(rl) {\n        rl.pause();\n        const editCallback = async (error, answer) => {\n            rl.resume();\n            if (error) {\n                setError(error.toString());\n            }\n            else {\n                setStatus('loading');\n                const finalAnswer = answer ?? '';\n                const isValid = await validate(finalAnswer);\n                if (isValid === true) {\n                    setError(undefined);\n                    setStatus('done');\n                    done(finalAnswer);\n                }\n                else {\n                    if (theme.validationFailureMode === 'clear') {\n                        setValue(config.default);\n                    }\n                    else {\n                        setValue(finalAnswer);\n                    }\n                    setError(isValid || 'You must provide a valid value');\n                    setStatus('idle');\n                }\n            }\n        };\n        editAsync(value, (error, answer) => void editCallback(error, answer), {\n            postfix,\n            ...fileProps,\n        });\n    }\n    useEffect((rl) => {\n        if (!waitForUseInput) {\n            startEditor(rl);\n        }\n    }, []);\n    useKeypress((key, rl) => {\n        // Ignore keypress while our prompt is doing other processing.\n        if (status !== 'idle') {\n            return;\n        }\n        if (isEnterKey(key)) {\n            startEditor(rl);\n        }\n    });\n    const message = theme.style.message(config.message, status);\n    let helpTip = '';\n    if (status === 'loading') {\n        helpTip = theme.style.help('Received');\n    }\n    else if (status === 'idle') {\n        const enterKey = theme.style.key('enter');\n        helpTip = theme.style.help(`Press ${enterKey} to launch your preferred editor.`);\n    }\n    let error = '';\n    if (errorMsg) {\n        error = theme.style.error(errorMsg);\n    }\n    return [[prefix, message, helpTip].filter(Boolean).join(' '), error];\n});\n","import { createPrompt, useState, useKeypress, isEnterKey, isTabKey, usePrefix, makeTheme, } from '@inquirer/core';\nfunction getBooleanValue(value, defaultValue) {\n    let answer = defaultValue !== false;\n    if (/^(y|yes)/i.test(value))\n        answer = true;\n    else if (/^(n|no)/i.test(value))\n        answer = false;\n    return answer;\n}\nfunction boolToString(value) {\n    return value ? 'Yes' : 'No';\n}\nexport default createPrompt((config, done) => {\n    const { transformer = boolToString } = config;\n    const [status, setStatus] = useState('idle');\n    const [value, setValue] = useState('');\n    const theme = makeTheme(config.theme);\n    const prefix = usePrefix({ status, theme });\n    useKeypress((key, rl) => {\n        if (status !== 'idle')\n            return;\n        if (isEnterKey(key)) {\n            const answer = getBooleanValue(value, config.default);\n            setValue(transformer(answer));\n            setStatus('done');\n            done(answer);\n        }\n        else if (isTabKey(key)) {\n            const answer = boolToString(!getBooleanValue(value, config.default));\n            rl.clearLine(0); // Remove the tab character.\n            rl.write(answer);\n            setValue(answer);\n        }\n        else {\n            setValue(rl.line);\n        }\n    });\n    let formattedValue = value;\n    let defaultValue = '';\n    if (status === 'done') {\n        formattedValue = theme.style.answer(value);\n    }\n    else {\n        defaultValue = ` ${theme.style.defaultAnswer(config.default === false ? 'y/N' : 'Y/n')}`;\n    }\n    const message = theme.style.message(config.message, status);\n    return `${prefix} ${message}${defaultValue} ${formattedValue}`;\n});\n","import { createPrompt, useState, useKeypress, useEffect, usePrefix, isBackspaceKey, isEnterKey, isTabKey, makeTheme, } from '@inquirer/core';\nconst inputTheme = {\n    validationFailureMode: 'keep',\n};\nexport default createPrompt((config, done) => {\n    const { required, validate = () => true, prefill = 'tab' } = config;\n    const theme = makeTheme(inputTheme, config.theme);\n    const [status, setStatus] = useState('idle');\n    const [defaultValue = '', setDefaultValue] = useState(config.default);\n    const [errorMsg, setError] = useState();\n    const [value, setValue] = useState('');\n    const prefix = usePrefix({ status, theme });\n    useKeypress(async (key, rl) => {\n        // Ignore keypress while our prompt is doing other processing.\n        if (status !== 'idle') {\n            return;\n        }\n        if (isEnterKey(key)) {\n            const answer = value || defaultValue;\n            setStatus('loading');\n            const isValid = required && !answer ? 'You must provide a value' : await validate(answer);\n            if (isValid === true) {\n                setValue(answer);\n                setStatus('done');\n                done(answer);\n            }\n            else {\n                if (theme.validationFailureMode === 'clear') {\n                    setValue('');\n                }\n                else {\n                    // Reset the readline line value to the previous value. On line event, the value\n                    // get cleared, forcing the user to re-enter the value instead of fixing it.\n                    rl.write(value);\n                }\n                setError(isValid || 'You must provide a valid value');\n                setStatus('idle');\n            }\n        }\n        else if (isBackspaceKey(key) && !value) {\n            setDefaultValue(undefined);\n        }\n        else if (isTabKey(key) && !value) {\n            setDefaultValue(undefined);\n            rl.clearLine(0); // Remove the tab character.\n            rl.write(defaultValue);\n            setValue(defaultValue);\n        }\n        else {\n            setValue(rl.line);\n            setError(undefined);\n        }\n    });\n    // If prefill is set to 'editable' cut out the default value and paste into current state and the user's cli buffer\n    // They can edit the value immediately instead of needing to press 'tab'\n    useEffect((rl) => {\n        if (prefill === 'editable' && defaultValue) {\n            rl.write(defaultValue);\n            setValue(defaultValue);\n        }\n    }, []);\n    const message = theme.style.message(config.message, status);\n    let formattedValue = value;\n    if (typeof config.transformer === 'function') {\n        formattedValue = config.transformer(value, { isFinal: status === 'done' });\n    }\n    else if (status === 'done') {\n        formattedValue = theme.style.answer(value);\n    }\n    let defaultStr;\n    if (defaultValue && status !== 'done' && !value) {\n        defaultStr = theme.style.defaultAnswer(defaultValue);\n    }\n    let error = '';\n    if (errorMsg) {\n        error = theme.style.error(errorMsg);\n    }\n    return [\n        [prefix, message, defaultStr, formattedValue]\n            .filter((v) => v !== undefined)\n            .join(' '),\n        error,\n    ];\n});\n","import { createPrompt, useState, useKeypress, usePrefix, isBackspaceKey, isEnterKey, isTabKey, makeTheme, } from '@inquirer/core';\nfunction isStepOf(value, step, min) {\n    const valuePow = value * Math.pow(10, 6);\n    const stepPow = step * Math.pow(10, 6);\n    const minPow = min * Math.pow(10, 6);\n    return (valuePow - (Number.isFinite(min) ? minPow : 0)) % stepPow === 0;\n}\nfunction validateNumber(value, { min, max, step, }) {\n    if (value == null || Number.isNaN(value)) {\n        return false;\n    }\n    else if (value < min || value > max) {\n        return `Value must be between ${min} and ${max}`;\n    }\n    else if (step !== 'any' && !isStepOf(value, step, min)) {\n        return `Value must be a multiple of ${step}${Number.isFinite(min) ? ` starting from ${min}` : ''}`;\n    }\n    return true;\n}\nexport default createPrompt((config, done) => {\n    const { validate = () => true, min = -Infinity, max = Infinity, step = 1, required = false, } = config;\n    const theme = makeTheme(config.theme);\n    const [status, setStatus] = useState('idle');\n    const [value, setValue] = useState(''); // store the input value as string and convert to number on \"Enter\"\n    // Ignore default if not valid.\n    const validDefault = validateNumber(config.default, { min, max, step }) === true\n        ? config.default?.toString()\n        : undefined;\n    const [defaultValue = '', setDefaultValue] = useState(validDefault);\n    const [errorMsg, setError] = useState();\n    const prefix = usePrefix({ status, theme });\n    useKeypress(async (key, rl) => {\n        // Ignore keypress while our prompt is doing other processing.\n        if (status !== 'idle') {\n            return;\n        }\n        if (isEnterKey(key)) {\n            const input = value || defaultValue;\n            const answer = input === '' ? undefined : Number(input);\n            setStatus('loading');\n            let isValid = true;\n            if (required || answer != null) {\n                isValid = validateNumber(answer, { min, max, step });\n            }\n            if (isValid === true) {\n                isValid = await validate(answer);\n            }\n            if (isValid === true) {\n                setValue(String(answer ?? ''));\n                setStatus('done');\n                done(answer);\n            }\n            else {\n                // Reset the readline line value to the previous value. On line event, the value\n                // get cleared, forcing the user to re-enter the value instead of fixing it.\n                rl.write(value);\n                setError(isValid || 'You must provide a valid numeric value');\n                setStatus('idle');\n            }\n        }\n        else if (isBackspaceKey(key) && !value) {\n            setDefaultValue(undefined);\n        }\n        else if (isTabKey(key) && !value) {\n            setDefaultValue(undefined);\n            rl.clearLine(0); // Remove the tab character.\n            rl.write(defaultValue);\n            setValue(defaultValue);\n        }\n        else {\n            setValue(rl.line);\n            setError(undefined);\n        }\n    });\n    const message = theme.style.message(config.message, status);\n    let formattedValue = value;\n    if (status === 'done') {\n        formattedValue = theme.style.answer(value);\n    }\n    let defaultStr;\n    if (defaultValue && status !== 'done' && !value) {\n        defaultStr = theme.style.defaultAnswer(defaultValue);\n    }\n    let error = '';\n    if (errorMsg) {\n        error = theme.style.error(errorMsg);\n    }\n    return [\n        [prefix, message, defaultStr, formattedValue]\n            .filter((v) => v !== undefined)\n            .join(' '),\n        error,\n    ];\n});\n","import { createPrompt, useMemo, useState, useKeypress, usePrefix, isEnterKey, makeTheme, Separator, } from '@inquirer/core';\nimport colors from 'yoctocolors-cjs';\nfunction normalizeChoices(choices) {\n    return choices.map((choice) => {\n        if (Separator.isSeparator(choice)) {\n            return choice;\n        }\n        const name = 'name' in choice ? choice.name : String(choice.value);\n        const value = 'value' in choice ? choice.value : name;\n        return {\n            value: value,\n            name,\n            key: choice.key.toLowerCase(),\n        };\n    });\n}\nconst helpChoice = {\n    key: 'h',\n    name: 'Help, list all options',\n    value: undefined,\n};\nexport default createPrompt((config, done) => {\n    const { default: defaultKey = 'h' } = config;\n    const choices = useMemo(() => normalizeChoices(config.choices), [config.choices]);\n    const [status, setStatus] = useState('idle');\n    const [value, setValue] = useState('');\n    const [expanded, setExpanded] = useState(config.expanded ?? false);\n    const [errorMsg, setError] = useState();\n    const theme = makeTheme(config.theme);\n    const prefix = usePrefix({ theme, status });\n    useKeypress((event, rl) => {\n        if (isEnterKey(event)) {\n            const answer = (value || defaultKey).toLowerCase();\n            if (answer === 'h' && !expanded) {\n                setExpanded(true);\n            }\n            else {\n                const selectedChoice = choices.find((choice) => !Separator.isSeparator(choice) && choice.key === answer);\n                if (selectedChoice) {\n                    setStatus('done');\n                    // Set the value as we might've selected the default one.\n                    setValue(answer);\n                    done(selectedChoice.value);\n                }\n                else if (value === '') {\n                    setError('Please input a value');\n                }\n                else {\n                    setError(`\"${colors.red(value)}\" isn't an available option`);\n                }\n            }\n        }\n        else {\n            setValue(rl.line);\n            setError(undefined);\n        }\n    });\n    const message = theme.style.message(config.message, status);\n    if (status === 'done') {\n        // If the prompt is done, it's safe to assume there is a selected value.\n        const selectedChoice = choices.find((choice) => !Separator.isSeparator(choice) && choice.key === value.toLowerCase());\n        return `${prefix} ${message} ${theme.style.answer(selectedChoice.name)}`;\n    }\n    const allChoices = expanded ? choices : [...choices, helpChoice];\n    // Collapsed display style\n    let longChoices = '';\n    let shortChoices = allChoices\n        .map((choice) => {\n        if (Separator.isSeparator(choice))\n            return '';\n        if (choice.key === defaultKey) {\n            return choice.key.toUpperCase();\n        }\n        return choice.key;\n    })\n        .join('');\n    shortChoices = ` ${theme.style.defaultAnswer(shortChoices)}`;\n    // Expanded display style\n    if (expanded) {\n        shortChoices = '';\n        longChoices = allChoices\n            .map((choice) => {\n            if (Separator.isSeparator(choice)) {\n                return ` ${choice.separator}`;\n            }\n            const line = `  ${choice.key}) ${choice.name}`;\n            if (choice.key === value.toLowerCase()) {\n                return theme.style.highlight(line);\n            }\n            return line;\n        })\n            .join('\\n');\n    }\n    let helpTip = '';\n    const currentOption = choices.find((choice) => !Separator.isSeparator(choice) && choice.key === value.toLowerCase());\n    if (currentOption) {\n        helpTip = `${colors.cyan('>>')} ${currentOption.name}`;\n    }\n    let error = '';\n    if (errorMsg) {\n        error = theme.style.error(errorMsg);\n    }\n    return [\n        `${prefix} ${message}${shortChoices} ${value}`,\n        [longChoices, helpTip, error].filter(Boolean).join('\\n'),\n    ];\n});\nexport { Separator } from '@inquirer/core';\n","import { createPrompt, useMemo, useState, useKeypress, usePrefix, isDownKey, isEnterKey, isUpKey, Separator, makeTheme, ValidationError, } from '@inquirer/core';\nimport colors from 'yoctocolors-cjs';\nconst numberRegex = /\\d+/;\nfunction isSelectableChoice(choice) {\n    return choice != null && !Separator.isSeparator(choice);\n}\nfunction normalizeChoices(choices) {\n    let index = 0;\n    return choices.map((choice) => {\n        if (Separator.isSeparator(choice))\n            return choice;\n        index += 1;\n        if (typeof choice === 'string') {\n            return {\n                value: choice,\n                name: choice,\n                short: choice,\n                key: String(index),\n            };\n        }\n        const name = choice.name ?? String(choice.value);\n        return {\n            value: choice.value,\n            name,\n            short: choice.short ?? name,\n            key: choice.key ?? String(index),\n        };\n    });\n}\nfunction getSelectedChoice(input, choices) {\n    let selectedChoice;\n    const selectableChoices = choices.filter(isSelectableChoice);\n    if (numberRegex.test(input)) {\n        const answer = Number.parseInt(input, 10) - 1;\n        selectedChoice = selectableChoices[answer];\n    }\n    else {\n        selectedChoice = selectableChoices.find((choice) => choice.key === input);\n    }\n    return selectedChoice\n        ? [selectedChoice, choices.indexOf(selectedChoice)]\n        : [undefined, undefined];\n}\nexport default createPrompt((config, done) => {\n    const { loop = true } = config;\n    const choices = useMemo(() => normalizeChoices(config.choices), [config.choices]);\n    const [status, setStatus] = useState('idle');\n    const [value, setValue] = useState('');\n    const [errorMsg, setError] = useState();\n    const theme = makeTheme(config.theme);\n    const prefix = usePrefix({ status, theme });\n    const bounds = useMemo(() => {\n        const first = choices.findIndex(isSelectableChoice);\n        const last = choices.findLastIndex(isSelectableChoice);\n        if (first === -1) {\n            throw new ValidationError('[select prompt] No selectable choices. All choices are disabled.');\n        }\n        return { first, last };\n    }, [choices]);\n    useKeypress((key, rl) => {\n        if (isEnterKey(key)) {\n            const [selectedChoice] = getSelectedChoice(value, choices);\n            if (isSelectableChoice(selectedChoice)) {\n                setValue(selectedChoice.short);\n                setStatus('done');\n                done(selectedChoice.value);\n            }\n            else if (value === '') {\n                setError('Please input a value');\n            }\n            else {\n                setError(`\"${colors.red(value)}\" isn't an available option`);\n            }\n        }\n        else if (isUpKey(key) || isDownKey(key)) {\n            rl.clearLine(0);\n            const [selectedChoice, active] = getSelectedChoice(value, choices);\n            if (!selectedChoice) {\n                const firstChoice = isDownKey(key)\n                    ? choices.find(isSelectableChoice)\n                    : choices.findLast(isSelectableChoice);\n                setValue(firstChoice.key);\n            }\n            else if (loop ||\n                (isUpKey(key) && active !== bounds.first) ||\n                (isDownKey(key) && active !== bounds.last)) {\n                const offset = isUpKey(key) ? -1 : 1;\n                let next = active;\n                do {\n                    next = (next + offset + choices.length) % choices.length;\n                } while (!isSelectableChoice(choices[next]));\n                setValue(choices[next].key);\n            }\n        }\n        else {\n            setValue(rl.line);\n            setError(undefined);\n        }\n    });\n    const message = theme.style.message(config.message, status);\n    if (status === 'done') {\n        return `${prefix} ${message} ${theme.style.answer(value)}`;\n    }\n    const choicesStr = choices\n        .map((choice) => {\n        if (Separator.isSeparator(choice)) {\n            return ` ${choice.separator}`;\n        }\n        const line = `  ${choice.key}) ${choice.name}`;\n        if (choice.key === value.toLowerCase()) {\n            return theme.style.highlight(line);\n        }\n        return line;\n    })\n        .join('\\n');\n    let error = '';\n    if (errorMsg) {\n        error = theme.style.error(errorMsg);\n    }\n    return [\n        `${prefix} ${message} ${value}`,\n        [choicesStr, error].filter(Boolean).join('\\n'),\n    ];\n});\nexport { Separator } from '@inquirer/core';\n","import { createPrompt, useState, useKeypress, usePrefix, isEnterKey, makeTheme, } from '@inquirer/core';\nimport ansiEscapes from 'ansi-escapes';\nexport default createPrompt((config, done) => {\n    const { validate = () => true } = config;\n    const theme = makeTheme(config.theme);\n    const [status, setStatus] = useState('idle');\n    const [errorMsg, setError] = useState();\n    const [value, setValue] = useState('');\n    const prefix = usePrefix({ status, theme });\n    useKeypress(async (key, rl) => {\n        // Ignore keypress while our prompt is doing other processing.\n        if (status !== 'idle') {\n            return;\n        }\n        if (isEnterKey(key)) {\n            const answer = value;\n            setStatus('loading');\n            const isValid = await validate(answer);\n            if (isValid === true) {\n                setValue(answer);\n                setStatus('done');\n                done(answer);\n            }\n            else {\n                // Reset the readline line value to the previous value. On line event, the value\n                // get cleared, forcing the user to re-enter the value instead of fixing it.\n                rl.write(value);\n                setError(isValid || 'You must provide a valid value');\n                setStatus('idle');\n            }\n        }\n        else {\n            setValue(rl.line);\n            setError(undefined);\n        }\n    });\n    const message = theme.style.message(config.message, status);\n    let formattedValue = '';\n    let helpTip;\n    if (config.mask) {\n        const maskChar = typeof config.mask === 'string' ? config.mask : '*';\n        formattedValue = maskChar.repeat(value.length);\n    }\n    else if (status !== 'done') {\n        helpTip = `${theme.style.help('[input is masked]')}${ansiEscapes.cursorHide}`;\n    }\n    if (status === 'done') {\n        formattedValue = theme.style.answer(formattedValue);\n    }\n    let error = '';\n    if (errorMsg) {\n        error = theme.style.error(errorMsg);\n    }\n    return [[prefix, message, config.mask ? formattedValue : helpTip].join(' '), error];\n});\n","import { createPrompt, useState, useKeypress, usePrefix, usePagination, useRef, useEffect, useMemo, isDownKey, isEnterKey, isTabKey, isUpKey, Separator, makeTheme, } from '@inquirer/core';\nimport colors from 'yoctocolors-cjs';\nimport figures from '@inquirer/figures';\nconst searchTheme = {\n    icon: { cursor: figures.pointer },\n    style: {\n        disabled: (text) => colors.dim(`- ${text}`),\n        searchTerm: (text) => colors.cyan(text),\n        description: (text) => colors.cyan(text),\n    },\n    helpMode: 'auto',\n};\nfunction isSelectable(item) {\n    return !Separator.isSeparator(item) && !item.disabled;\n}\nfunction normalizeChoices(choices) {\n    return choices.map((choice) => {\n        if (Separator.isSeparator(choice))\n            return choice;\n        if (typeof choice === 'string') {\n            return {\n                value: choice,\n                name: choice,\n                short: choice,\n                disabled: false,\n            };\n        }\n        const name = choice.name ?? String(choice.value);\n        const normalizedChoice = {\n            value: choice.value,\n            name,\n            short: choice.short ?? name,\n            disabled: choice.disabled ?? false,\n        };\n        if (choice.description) {\n            normalizedChoice.description = choice.description;\n        }\n        return normalizedChoice;\n    });\n}\nexport default createPrompt((config, done) => {\n    const { pageSize = 7, validate = () => true } = config;\n    const theme = makeTheme(searchTheme, config.theme);\n    const firstRender = useRef(true);\n    const [status, setStatus] = useState('loading');\n    const [searchTerm, setSearchTerm] = useState('');\n    const [searchResults, setSearchResults] = useState([]);\n    const [searchError, setSearchError] = useState();\n    const prefix = usePrefix({ status, theme });\n    const bounds = useMemo(() => {\n        const first = searchResults.findIndex(isSelectable);\n        const last = searchResults.findLastIndex(isSelectable);\n        return { first, last };\n    }, [searchResults]);\n    const [active = bounds.first, setActive] = useState();\n    useEffect(() => {\n        const controller = new AbortController();\n        setStatus('loading');\n        setSearchError(undefined);\n        const fetchResults = async () => {\n            try {\n                const results = await config.source(searchTerm || undefined, {\n                    signal: controller.signal,\n                });\n                if (!controller.signal.aborted) {\n                    // Reset the pointer\n                    setActive(undefined);\n                    setSearchError(undefined);\n                    setSearchResults(normalizeChoices(results));\n                    setStatus('idle');\n                }\n            }\n            catch (error) {\n                if (!controller.signal.aborted && error instanceof Error) {\n                    setSearchError(error.message);\n                }\n            }\n        };\n        void fetchResults();\n        return () => {\n            controller.abort();\n        };\n    }, [searchTerm]);\n    // Safe to assume the cursor position never points to a Separator.\n    const selectedChoice = searchResults[active];\n    useKeypress(async (key, rl) => {\n        if (isEnterKey(key)) {\n            if (selectedChoice) {\n                setStatus('loading');\n                const isValid = await validate(selectedChoice.value);\n                setStatus('idle');\n                if (isValid === true) {\n                    setStatus('done');\n                    done(selectedChoice.value);\n                }\n                else if (selectedChoice.name === searchTerm) {\n                    setSearchError(isValid || 'You must provide a valid value');\n                }\n                else {\n                    // Reset line with new search term\n                    rl.write(selectedChoice.name);\n                    setSearchTerm(selectedChoice.name);\n                }\n            }\n            else {\n                // Reset the readline line value to the previous value. On line event, the value\n                // get cleared, forcing the user to re-enter the value instead of fixing it.\n                rl.write(searchTerm);\n            }\n        }\n        else if (isTabKey(key) && selectedChoice) {\n            rl.clearLine(0); // Remove the tab character.\n            rl.write(selectedChoice.name);\n            setSearchTerm(selectedChoice.name);\n        }\n        else if (status !== 'loading' && (isUpKey(key) || isDownKey(key))) {\n            rl.clearLine(0);\n            if ((isUpKey(key) && active !== bounds.first) ||\n                (isDownKey(key) && active !== bounds.last)) {\n                const offset = isUpKey(key) ? -1 : 1;\n                let next = active;\n                do {\n                    next = (next + offset + searchResults.length) % searchResults.length;\n                } while (!isSelectable(searchResults[next]));\n                setActive(next);\n            }\n        }\n        else {\n            setSearchTerm(rl.line);\n        }\n    });\n    const message = theme.style.message(config.message, status);\n    if (active > 0) {\n        firstRender.current = false;\n    }\n    let helpTip = '';\n    if (searchResults.length > 1 &&\n        (theme.helpMode === 'always' || (theme.helpMode === 'auto' && firstRender.current))) {\n        helpTip =\n            searchResults.length > pageSize\n                ? `\\n${theme.style.help(`(${config.instructions?.pager ?? 'Use arrow keys to reveal more choices'})`)}`\n                : `\\n${theme.style.help(`(${config.instructions?.navigation ?? 'Use arrow keys'})`)}`;\n    }\n    // TODO: What to do if no results are found? Should we display a message?\n    const page = usePagination({\n        items: searchResults,\n        active,\n        renderItem({ item, isActive }) {\n            if (Separator.isSeparator(item)) {\n                return ` ${item.separator}`;\n            }\n            if (item.disabled) {\n                const disabledLabel = typeof item.disabled === 'string' ? item.disabled : '(disabled)';\n                return theme.style.disabled(`${item.name} ${disabledLabel}`);\n            }\n            const color = isActive ? theme.style.highlight : (x) => x;\n            const cursor = isActive ? theme.icon.cursor : ` `;\n            return color(`${cursor} ${item.name}`);\n        },\n        pageSize,\n        loop: false,\n    });\n    let error;\n    if (searchError) {\n        error = theme.style.error(searchError);\n    }\n    else if (searchResults.length === 0 && searchTerm !== '' && status === 'idle') {\n        error = theme.style.error('No results found');\n    }\n    let searchStr;\n    if (status === 'done' && selectedChoice) {\n        const answer = selectedChoice.short;\n        return `${prefix} ${message} ${theme.style.answer(answer)}`;\n    }\n    else {\n        searchStr = theme.style.searchTerm(searchTerm);\n    }\n    const choiceDescription = selectedChoice?.description\n        ? `\\n${theme.style.description(selectedChoice.description)}`\n        : ``;\n    return [\n        [prefix, message, searchStr].filter(Boolean).join(' '),\n        `${error ?? page}${helpTip}${choiceDescription}`,\n    ];\n});\nexport { Separator } from '@inquirer/core';\n","import { createPrompt, useState, useKeypress, usePrefix, usePagination, useRef, useMemo, useEffect, isBackspaceKey, isEnterKey, isUpKey, isDownKey, isNumberKey, Separator, ValidationError, makeTheme, } from '@inquirer/core';\nimport colors from 'yoctocolors-cjs';\nimport figures from '@inquirer/figures';\nimport ansiEscapes from 'ansi-escapes';\nconst selectTheme = {\n    icon: { cursor: figures.pointer },\n    style: {\n        disabled: (text) => colors.dim(`- ${text}`),\n        description: (text) => colors.cyan(text),\n    },\n    helpMode: 'auto',\n    indexMode: 'hidden',\n};\nfunction isSelectable(item) {\n    return !Separator.isSeparator(item) && !item.disabled;\n}\nfunction normalizeChoices(choices) {\n    return choices.map((choice) => {\n        if (Separator.isSeparator(choice))\n            return choice;\n        if (typeof choice === 'string') {\n            return {\n                value: choice,\n                name: choice,\n                short: choice,\n                disabled: false,\n            };\n        }\n        const name = choice.name ?? String(choice.value);\n        const normalizedChoice = {\n            value: choice.value,\n            name,\n            short: choice.short ?? name,\n            disabled: choice.disabled ?? false,\n        };\n        if (choice.description) {\n            normalizedChoice.description = choice.description;\n        }\n        return normalizedChoice;\n    });\n}\nexport default createPrompt((config, done) => {\n    const { loop = true, pageSize = 7 } = config;\n    const firstRender = useRef(true);\n    const theme = makeTheme(selectTheme, config.theme);\n    const [status, setStatus] = useState('idle');\n    const prefix = usePrefix({ status, theme });\n    const searchTimeoutRef = useRef();\n    const items = useMemo(() => normalizeChoices(config.choices), [config.choices]);\n    const bounds = useMemo(() => {\n        const first = items.findIndex(isSelectable);\n        const last = items.findLastIndex(isSelectable);\n        if (first === -1) {\n            throw new ValidationError('[select prompt] No selectable choices. All choices are disabled.');\n        }\n        return { first, last };\n    }, [items]);\n    const defaultItemIndex = useMemo(() => {\n        if (!('default' in config))\n            return -1;\n        return items.findIndex((item) => isSelectable(item) && item.value === config.default);\n    }, [config.default, items]);\n    const [active, setActive] = useState(defaultItemIndex === -1 ? bounds.first : defaultItemIndex);\n    // Safe to assume the cursor position always point to a Choice.\n    const selectedChoice = items[active];\n    useKeypress((key, rl) => {\n        clearTimeout(searchTimeoutRef.current);\n        if (isEnterKey(key)) {\n            setStatus('done');\n            done(selectedChoice.value);\n        }\n        else if (isUpKey(key) || isDownKey(key)) {\n            rl.clearLine(0);\n            if (loop ||\n                (isUpKey(key) && active !== bounds.first) ||\n                (isDownKey(key) && active !== bounds.last)) {\n                const offset = isUpKey(key) ? -1 : 1;\n                let next = active;\n                do {\n                    next = (next + offset + items.length) % items.length;\n                } while (!isSelectable(items[next]));\n                setActive(next);\n            }\n        }\n        else if (isNumberKey(key) && !Number.isNaN(Number(rl.line))) {\n            const selectedIndex = Number(rl.line) - 1;\n            // Find the nth item (ignoring separators)\n            let selectableIndex = -1;\n            const position = items.findIndex((item) => {\n                if (Separator.isSeparator(item))\n                    return false;\n                selectableIndex++;\n                return selectableIndex === selectedIndex;\n            });\n            const item = items[position];\n            if (item != null && isSelectable(item)) {\n                setActive(position);\n            }\n            searchTimeoutRef.current = setTimeout(() => {\n                rl.clearLine(0);\n            }, 700);\n        }\n        else if (isBackspaceKey(key)) {\n            rl.clearLine(0);\n        }\n        else {\n            // Default to search\n            const searchTerm = rl.line.toLowerCase();\n            const matchIndex = items.findIndex((item) => {\n                if (Separator.isSeparator(item) || !isSelectable(item))\n                    return false;\n                return item.name.toLowerCase().startsWith(searchTerm);\n            });\n            if (matchIndex !== -1) {\n                setActive(matchIndex);\n            }\n            searchTimeoutRef.current = setTimeout(() => {\n                rl.clearLine(0);\n            }, 700);\n        }\n    });\n    useEffect(() => () => {\n        clearTimeout(searchTimeoutRef.current);\n    }, []);\n    const message = theme.style.message(config.message, status);\n    let helpTipTop = '';\n    let helpTipBottom = '';\n    if (theme.helpMode === 'always' ||\n        (theme.helpMode === 'auto' && firstRender.current)) {\n        firstRender.current = false;\n        if (items.length > pageSize) {\n            helpTipBottom = `\\n${theme.style.help(`(${config.instructions?.pager ?? 'Use arrow keys to reveal more choices'})`)}`;\n        }\n        else {\n            helpTipTop = theme.style.help(`(${config.instructions?.navigation ?? 'Use arrow keys'})`);\n        }\n    }\n    let separatorCount = 0;\n    const page = usePagination({\n        items,\n        active,\n        renderItem({ item, isActive, index }) {\n            if (Separator.isSeparator(item)) {\n                separatorCount++;\n                return ` ${item.separator}`;\n            }\n            const indexLabel = theme.indexMode === 'number' ? `${index + 1 - separatorCount}. ` : '';\n            if (item.disabled) {\n                const disabledLabel = typeof item.disabled === 'string' ? item.disabled : '(disabled)';\n                return theme.style.disabled(`${indexLabel}${item.name} ${disabledLabel}`);\n            }\n            const color = isActive ? theme.style.highlight : (x) => x;\n            const cursor = isActive ? theme.icon.cursor : ` `;\n            return color(`${cursor} ${indexLabel}${item.name}`);\n        },\n        pageSize,\n        loop,\n    });\n    if (status === 'done') {\n        return `${prefix} ${message} ${theme.style.answer(selectedChoice.short)}`;\n    }\n    const choiceDescription = selectedChoice.description\n        ? `\\n${theme.style.description(selectedChoice.description)}`\n        : ``;\n    return `${[prefix, message, helpTipTop].filter(Boolean).join(' ')}\\n${page}${helpTipBottom}${choiceDescription}${ansiEscapes.cursorHide}`;\n});\nexport { Separator } from '@inquirer/core';\n","export function isFunction(value) {\n    return typeof value === 'function';\n}\n//# sourceMappingURL=isFunction.js.map","export function createErrorClass(createImpl) {\n    var _super = function (instance) {\n        Error.call(instance);\n        instance.stack = new Error().stack;\n    };\n    var ctorFunc = createImpl(_super);\n    ctorFunc.prototype = Object.create(Error.prototype);\n    ctorFunc.prototype.constructor = ctorFunc;\n    return ctorFunc;\n}\n//# sourceMappingURL=createErrorClass.js.map","import { createErrorClass } from './createErrorClass';\nexport var UnsubscriptionError = createErrorClass(function (_super) {\n    return function UnsubscriptionErrorImpl(errors) {\n        _super(this);\n        this.message = errors\n            ? errors.length + \" errors occurred during unsubscription:\\n\" + errors.map(function (err, i) { return i + 1 + \") \" + err.toString(); }).join('\\n  ')\n            : '';\n        this.name = 'UnsubscriptionError';\n        this.errors = errors;\n    };\n});\n//# sourceMappingURL=UnsubscriptionError.js.map","export function arrRemove(arr, item) {\n    if (arr) {\n        var index = arr.indexOf(item);\n        0 <= index && arr.splice(index, 1);\n    }\n}\n//# sourceMappingURL=arrRemove.js.map","import { __read, __spreadArray, __values } from \"tslib\";\nimport { isFunction } from './util/isFunction';\nimport { UnsubscriptionError } from './util/UnsubscriptionError';\nimport { arrRemove } from './util/arrRemove';\nvar Subscription = (function () {\n    function Subscription(initialTeardown) {\n        this.initialTeardown = initialTeardown;\n        this.closed = false;\n        this._parentage = null;\n        this._finalizers = null;\n    }\n    Subscription.prototype.unsubscribe = function () {\n        var e_1, _a, e_2, _b;\n        var errors;\n        if (!this.closed) {\n            this.closed = true;\n            var _parentage = this._parentage;\n            if (_parentage) {\n                this._parentage = null;\n                if (Array.isArray(_parentage)) {\n                    try {\n                        for (var _parentage_1 = __values(_parentage), _parentage_1_1 = _parentage_1.next(); !_parentage_1_1.done; _parentage_1_1 = _parentage_1.next()) {\n                            var parent_1 = _parentage_1_1.value;\n                            parent_1.remove(this);\n                        }\n                    }\n                    catch (e_1_1) { e_1 = { error: e_1_1 }; }\n                    finally {\n                        try {\n                            if (_parentage_1_1 && !_parentage_1_1.done && (_a = _parentage_1.return)) _a.call(_parentage_1);\n                        }\n                        finally { if (e_1) throw e_1.error; }\n                    }\n                }\n                else {\n                    _parentage.remove(this);\n                }\n            }\n            var initialFinalizer = this.initialTeardown;\n            if (isFunction(initialFinalizer)) {\n                try {\n                    initialFinalizer();\n                }\n                catch (e) {\n                    errors = e instanceof UnsubscriptionError ? e.errors : [e];\n                }\n            }\n            var _finalizers = this._finalizers;\n            if (_finalizers) {\n                this._finalizers = null;\n                try {\n                    for (var _finalizers_1 = __values(_finalizers), _finalizers_1_1 = _finalizers_1.next(); !_finalizers_1_1.done; _finalizers_1_1 = _finalizers_1.next()) {\n                        var finalizer = _finalizers_1_1.value;\n                        try {\n                            execFinalizer(finalizer);\n                        }\n                        catch (err) {\n                            errors = errors !== null && errors !== void 0 ? errors : [];\n                            if (err instanceof UnsubscriptionError) {\n                                errors = __spreadArray(__spreadArray([], __read(errors)), __read(err.errors));\n                            }\n                            else {\n                                errors.push(err);\n                            }\n                        }\n                    }\n                }\n                catch (e_2_1) { e_2 = { error: e_2_1 }; }\n                finally {\n                    try {\n                        if (_finalizers_1_1 && !_finalizers_1_1.done && (_b = _finalizers_1.return)) _b.call(_finalizers_1);\n                    }\n                    finally { if (e_2) throw e_2.error; }\n                }\n            }\n            if (errors) {\n                throw new UnsubscriptionError(errors);\n            }\n        }\n    };\n    Subscription.prototype.add = function (teardown) {\n        var _a;\n        if (teardown && teardown !== this) {\n            if (this.closed) {\n                execFinalizer(teardown);\n            }\n            else {\n                if (teardown instanceof Subscription) {\n                    if (teardown.closed || teardown._hasParent(this)) {\n                        return;\n                    }\n                    teardown._addParent(this);\n                }\n                (this._finalizers = (_a = this._finalizers) !== null && _a !== void 0 ? _a : []).push(teardown);\n            }\n        }\n    };\n    Subscription.prototype._hasParent = function (parent) {\n        var _parentage = this._parentage;\n        return _parentage === parent || (Array.isArray(_parentage) && _parentage.includes(parent));\n    };\n    Subscription.prototype._addParent = function (parent) {\n        var _parentage = this._parentage;\n        this._parentage = Array.isArray(_parentage) ? (_parentage.push(parent), _parentage) : _parentage ? [_parentage, parent] : parent;\n    };\n    Subscription.prototype._removeParent = function (parent) {\n        var _parentage = this._parentage;\n        if (_parentage === parent) {\n            this._parentage = null;\n        }\n        else if (Array.isArray(_parentage)) {\n            arrRemove(_parentage, parent);\n        }\n    };\n    Subscription.prototype.remove = function (teardown) {\n        var _finalizers = this._finalizers;\n        _finalizers && arrRemove(_finalizers, teardown);\n        if (teardown instanceof Subscription) {\n            teardown._removeParent(this);\n        }\n    };\n    Subscription.EMPTY = (function () {\n        var empty = new Subscription();\n        empty.closed = true;\n        return empty;\n    })();\n    return Subscription;\n}());\nexport { Subscription };\nexport var EMPTY_SUBSCRIPTION = Subscription.EMPTY;\nexport function isSubscription(value) {\n    return (value instanceof Subscription ||\n        (value && 'closed' in value && isFunction(value.remove) && isFunction(value.add) && isFunction(value.unsubscribe)));\n}\nfunction execFinalizer(finalizer) {\n    if (isFunction(finalizer)) {\n        finalizer();\n    }\n    else {\n        finalizer.unsubscribe();\n    }\n}\n//# sourceMappingURL=Subscription.js.map","export var config = {\n    onUnhandledError: null,\n    onStoppedNotification: null,\n    Promise: undefined,\n    useDeprecatedSynchronousErrorHandling: false,\n    useDeprecatedNextContext: false,\n};\n//# sourceMappingURL=config.js.map","import { __read, __spreadArray } from \"tslib\";\nexport var timeoutProvider = {\n    setTimeout: function (handler, timeout) {\n        var args = [];\n        for (var _i = 2; _i < arguments.length; _i++) {\n            args[_i - 2] = arguments[_i];\n        }\n        var delegate = timeoutProvider.delegate;\n        if (delegate === null || delegate === void 0 ? void 0 : delegate.setTimeout) {\n            return delegate.setTimeout.apply(delegate, __spreadArray([handler, timeout], __read(args)));\n        }\n        return setTimeout.apply(void 0, __spreadArray([handler, timeout], __read(args)));\n    },\n    clearTimeout: function (handle) {\n        var delegate = timeoutProvider.delegate;\n        return ((delegate === null || delegate === void 0 ? void 0 : delegate.clearTimeout) || clearTimeout)(handle);\n    },\n    delegate: undefined,\n};\n//# sourceMappingURL=timeoutProvider.js.map","import { config } from '../config';\nimport { timeoutProvider } from '../scheduler/timeoutProvider';\nexport function reportUnhandledError(err) {\n    timeoutProvider.setTimeout(function () {\n        var onUnhandledError = config.onUnhandledError;\n        if (onUnhandledError) {\n            onUnhandledError(err);\n        }\n        else {\n            throw err;\n        }\n    });\n}\n//# sourceMappingURL=reportUnhandledError.js.map","export function noop() { }\n//# sourceMappingURL=noop.js.map","import { config } from '../config';\nvar context = null;\nexport function errorContext(cb) {\n    if (config.useDeprecatedSynchronousErrorHandling) {\n        var isRoot = !context;\n        if (isRoot) {\n            context = { errorThrown: false, error: null };\n        }\n        cb();\n        if (isRoot) {\n            var _a = context, errorThrown = _a.errorThrown, error = _a.error;\n            context = null;\n            if (errorThrown) {\n                throw error;\n            }\n        }\n    }\n    else {\n        cb();\n    }\n}\nexport function captureError(err) {\n    if (config.useDeprecatedSynchronousErrorHandling && context) {\n        context.errorThrown = true;\n        context.error = err;\n    }\n}\n//# sourceMappingURL=errorContext.js.map","import { __extends } from \"tslib\";\nimport { isFunction } from './util/isFunction';\nimport { isSubscription, Subscription } from './Subscription';\nimport { config } from './config';\nimport { reportUnhandledError } from './util/reportUnhandledError';\nimport { noop } from './util/noop';\nimport { nextNotification, errorNotification, COMPLETE_NOTIFICATION } from './NotificationFactories';\nimport { timeoutProvider } from './scheduler/timeoutProvider';\nimport { captureError } from './util/errorContext';\nvar Subscriber = (function (_super) {\n    __extends(Subscriber, _super);\n    function Subscriber(destination) {\n        var _this = _super.call(this) || this;\n        _this.isStopped = false;\n        if (destination) {\n            _this.destination = destination;\n            if (isSubscription(destination)) {\n                destination.add(_this);\n            }\n        }\n        else {\n            _this.destination = EMPTY_OBSERVER;\n        }\n        return _this;\n    }\n    Subscriber.create = function (next, error, complete) {\n        return new SafeSubscriber(next, error, complete);\n    };\n    Subscriber.prototype.next = function (value) {\n        if (this.isStopped) {\n            handleStoppedNotification(nextNotification(value), this);\n        }\n        else {\n            this._next(value);\n        }\n    };\n    Subscriber.prototype.error = function (err) {\n        if (this.isStopped) {\n            handleStoppedNotification(errorNotification(err), this);\n        }\n        else {\n            this.isStopped = true;\n            this._error(err);\n        }\n    };\n    Subscriber.prototype.complete = function () {\n        if (this.isStopped) {\n            handleStoppedNotification(COMPLETE_NOTIFICATION, this);\n        }\n        else {\n            this.isStopped = true;\n            this._complete();\n        }\n    };\n    Subscriber.prototype.unsubscribe = function () {\n        if (!this.closed) {\n            this.isStopped = true;\n            _super.prototype.unsubscribe.call(this);\n            this.destination = null;\n        }\n    };\n    Subscriber.prototype._next = function (value) {\n        this.destination.next(value);\n    };\n    Subscriber.prototype._error = function (err) {\n        try {\n            this.destination.error(err);\n        }\n        finally {\n            this.unsubscribe();\n        }\n    };\n    Subscriber.prototype._complete = function () {\n        try {\n            this.destination.complete();\n        }\n        finally {\n            this.unsubscribe();\n        }\n    };\n    return Subscriber;\n}(Subscription));\nexport { Subscriber };\nvar _bind = Function.prototype.bind;\nfunction bind(fn, thisArg) {\n    return _bind.call(fn, thisArg);\n}\nvar ConsumerObserver = (function () {\n    function ConsumerObserver(partialObserver) {\n        this.partialObserver = partialObserver;\n    }\n    ConsumerObserver.prototype.next = function (value) {\n        var partialObserver = this.partialObserver;\n        if (partialObserver.next) {\n            try {\n                partialObserver.next(value);\n            }\n            catch (error) {\n                handleUnhandledError(error);\n            }\n        }\n    };\n    ConsumerObserver.prototype.error = function (err) {\n        var partialObserver = this.partialObserver;\n        if (partialObserver.error) {\n            try {\n                partialObserver.error(err);\n            }\n            catch (error) {\n                handleUnhandledError(error);\n            }\n        }\n        else {\n            handleUnhandledError(err);\n        }\n    };\n    ConsumerObserver.prototype.complete = function () {\n        var partialObserver = this.partialObserver;\n        if (partialObserver.complete) {\n            try {\n                partialObserver.complete();\n            }\n            catch (error) {\n                handleUnhandledError(error);\n            }\n        }\n    };\n    return ConsumerObserver;\n}());\nvar SafeSubscriber = (function (_super) {\n    __extends(SafeSubscriber, _super);\n    function SafeSubscriber(observerOrNext, error, complete) {\n        var _this = _super.call(this) || this;\n        var partialObserver;\n        if (isFunction(observerOrNext) || !observerOrNext) {\n            partialObserver = {\n                next: (observerOrNext !== null && observerOrNext !== void 0 ? observerOrNext : undefined),\n                error: error !== null && error !== void 0 ? error : undefined,\n                complete: complete !== null && complete !== void 0 ? complete : undefined,\n            };\n        }\n        else {\n            var context_1;\n            if (_this && config.useDeprecatedNextContext) {\n                context_1 = Object.create(observerOrNext);\n                context_1.unsubscribe = function () { return _this.unsubscribe(); };\n                partialObserver = {\n                    next: observerOrNext.next && bind(observerOrNext.next, context_1),\n                    error: observerOrNext.error && bind(observerOrNext.error, context_1),\n                    complete: observerOrNext.complete && bind(observerOrNext.complete, context_1),\n                };\n            }\n            else {\n                partialObserver = observerOrNext;\n            }\n        }\n        _this.destination = new ConsumerObserver(partialObserver);\n        return _this;\n    }\n    return SafeSubscriber;\n}(Subscriber));\nexport { SafeSubscriber };\nfunction handleUnhandledError(error) {\n    if (config.useDeprecatedSynchronousErrorHandling) {\n        captureError(error);\n    }\n    else {\n        reportUnhandledError(error);\n    }\n}\nfunction defaultErrorHandler(err) {\n    throw err;\n}\nfunction handleStoppedNotification(notification, subscriber) {\n    var onStoppedNotification = config.onStoppedNotification;\n    onStoppedNotification && timeoutProvider.setTimeout(function () { return onStoppedNotification(notification, subscriber); });\n}\nexport var EMPTY_OBSERVER = {\n    closed: true,\n    next: noop,\n    error: defaultErrorHandler,\n    complete: noop,\n};\n//# sourceMappingURL=Subscriber.js.map","export var observable = (function () { return (typeof Symbol === 'function' && Symbol.observable) || '@@observable'; })();\n//# sourceMappingURL=observable.js.map","export function identity(x) {\n    return x;\n}\n//# sourceMappingURL=identity.js.map","import { SafeSubscriber, Subscriber } from './Subscriber';\nimport { isSubscription } from './Subscription';\nimport { observable as Symbol_observable } from './symbol/observable';\nimport { pipeFromArray } from './util/pipe';\nimport { config } from './config';\nimport { isFunction } from './util/isFunction';\nimport { errorContext } from './util/errorContext';\nvar Observable = (function () {\n    function Observable(subscribe) {\n        if (subscribe) {\n            this._subscribe = subscribe;\n        }\n    }\n    Observable.prototype.lift = function (operator) {\n        var observable = new Observable();\n        observable.source = this;\n        observable.operator = operator;\n        return observable;\n    };\n    Observable.prototype.subscribe = function (observerOrNext, error, complete) {\n        var _this = this;\n        var subscriber = isSubscriber(observerOrNext) ? observerOrNext : new SafeSubscriber(observerOrNext, error, complete);\n        errorContext(function () {\n            var _a = _this, operator = _a.operator, source = _a.source;\n            subscriber.add(operator\n                ?\n                    operator.call(subscriber, source)\n                : source\n                    ?\n                        _this._subscribe(subscriber)\n                    :\n                        _this._trySubscribe(subscriber));\n        });\n        return subscriber;\n    };\n    Observable.prototype._trySubscribe = function (sink) {\n        try {\n            return this._subscribe(sink);\n        }\n        catch (err) {\n            sink.error(err);\n        }\n    };\n    Observable.prototype.forEach = function (next, promiseCtor) {\n        var _this = this;\n        promiseCtor = getPromiseCtor(promiseCtor);\n        return new promiseCtor(function (resolve, reject) {\n            var subscriber = new SafeSubscriber({\n                next: function (value) {\n                    try {\n                        next(value);\n                    }\n                    catch (err) {\n                        reject(err);\n                        subscriber.unsubscribe();\n                    }\n                },\n                error: reject,\n                complete: resolve,\n            });\n            _this.subscribe(subscriber);\n        });\n    };\n    Observable.prototype._subscribe = function (subscriber) {\n        var _a;\n        return (_a = this.source) === null || _a === void 0 ? void 0 : _a.subscribe(subscriber);\n    };\n    Observable.prototype[Symbol_observable] = function () {\n        return this;\n    };\n    Observable.prototype.pipe = function () {\n        var operations = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            operations[_i] = arguments[_i];\n        }\n        return pipeFromArray(operations)(this);\n    };\n    Observable.prototype.toPromise = function (promiseCtor) {\n        var _this = this;\n        promiseCtor = getPromiseCtor(promiseCtor);\n        return new promiseCtor(function (resolve, reject) {\n            var value;\n            _this.subscribe(function (x) { return (value = x); }, function (err) { return reject(err); }, function () { return resolve(value); });\n        });\n    };\n    Observable.create = function (subscribe) {\n        return new Observable(subscribe);\n    };\n    return Observable;\n}());\nexport { Observable };\nfunction getPromiseCtor(promiseCtor) {\n    var _a;\n    return (_a = promiseCtor !== null && promiseCtor !== void 0 ? promiseCtor : config.Promise) !== null && _a !== void 0 ? _a : Promise;\n}\nfunction isObserver(value) {\n    return value && isFunction(value.next) && isFunction(value.error) && isFunction(value.complete);\n}\nfunction isSubscriber(value) {\n    return (value && value instanceof Subscriber) || (isObserver(value) && isSubscription(value));\n}\n//# sourceMappingURL=Observable.js.map","import { identity } from './identity';\nexport function pipe() {\n    var fns = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        fns[_i] = arguments[_i];\n    }\n    return pipeFromArray(fns);\n}\nexport function pipeFromArray(fns) {\n    if (fns.length === 0) {\n        return identity;\n    }\n    if (fns.length === 1) {\n        return fns[0];\n    }\n    return function piped(input) {\n        return fns.reduce(function (prev, fn) { return fn(prev); }, input);\n    };\n}\n//# sourceMappingURL=pipe.js.map","import { isFunction } from './isFunction';\nexport function hasLift(source) {\n    return isFunction(source === null || source === void 0 ? void 0 : source.lift);\n}\nexport function operate(init) {\n    return function (source) {\n        if (hasLift(source)) {\n            return source.lift(function (liftedSource) {\n                try {\n                    return init(liftedSource, this);\n                }\n                catch (err) {\n                    this.error(err);\n                }\n            });\n        }\n        throw new TypeError('Unable to lift unknown Observable type');\n    };\n}\n//# sourceMappingURL=lift.js.map","import { __extends } from \"tslib\";\nimport { Subscriber } from '../Subscriber';\nexport function createOperatorSubscriber(destination, onNext, onComplete, onError, onFinalize) {\n    return new OperatorSubscriber(destination, onNext, onComplete, onError, onFinalize);\n}\nvar OperatorSubscriber = (function (_super) {\n    __extends(OperatorSubscriber, _super);\n    function OperatorSubscriber(destination, onNext, onComplete, onError, onFinalize, shouldUnsubscribe) {\n        var _this = _super.call(this, destination) || this;\n        _this.onFinalize = onFinalize;\n        _this.shouldUnsubscribe = shouldUnsubscribe;\n        _this._next = onNext\n            ? function (value) {\n                try {\n                    onNext(value);\n                }\n                catch (err) {\n                    destination.error(err);\n                }\n            }\n            : _super.prototype._next;\n        _this._error = onError\n            ? function (err) {\n                try {\n                    onError(err);\n                }\n                catch (err) {\n                    destination.error(err);\n                }\n                finally {\n                    this.unsubscribe();\n                }\n            }\n            : _super.prototype._error;\n        _this._complete = onComplete\n            ? function () {\n                try {\n                    onComplete();\n                }\n                catch (err) {\n                    destination.error(err);\n                }\n                finally {\n                    this.unsubscribe();\n                }\n            }\n            : _super.prototype._complete;\n        return _this;\n    }\n    OperatorSubscriber.prototype.unsubscribe = function () {\n        var _a;\n        if (!this.shouldUnsubscribe || this.shouldUnsubscribe()) {\n            var closed_1 = this.closed;\n            _super.prototype.unsubscribe.call(this);\n            !closed_1 && ((_a = this.onFinalize) === null || _a === void 0 ? void 0 : _a.call(this));\n        }\n    };\n    return OperatorSubscriber;\n}(Subscriber));\nexport { OperatorSubscriber };\n//# sourceMappingURL=OperatorSubscriber.js.map","import { Observable } from '../Observable';\nexport var EMPTY = new Observable(function (subscriber) { return subscriber.complete(); });\nexport function empty(scheduler) {\n    return scheduler ? emptyScheduled(scheduler) : EMPTY;\n}\nfunction emptyScheduled(scheduler) {\n    return new Observable(function (subscriber) { return scheduler.schedule(function () { return subscriber.complete(); }); });\n}\n//# sourceMappingURL=empty.js.map","import { isFunction } from './isFunction';\nimport { isScheduler } from './isScheduler';\nfunction last(arr) {\n    return arr[arr.length - 1];\n}\nexport function popResultSelector(args) {\n    return isFunction(last(args)) ? args.pop() : undefined;\n}\nexport function popScheduler(args) {\n    return isScheduler(last(args)) ? args.pop() : undefined;\n}\nexport function popNumber(args, defaultValue) {\n    return typeof last(args) === 'number' ? args.pop() : defaultValue;\n}\n//# sourceMappingURL=args.js.map","import { isFunction } from './isFunction';\nexport function isScheduler(value) {\n    return value && isFunction(value.schedule);\n}\n//# sourceMappingURL=isScheduler.js.map","export var isArrayLike = (function (x) { return x && typeof x.length === 'number' && typeof x !== 'function'; });\n//# sourceMappingURL=isArrayLike.js.map","import { isFunction } from \"./isFunction\";\nexport function isPromise(value) {\n    return isFunction(value === null || value === void 0 ? void 0 : value.then);\n}\n//# sourceMappingURL=isPromise.js.map","import { observable as Symbol_observable } from '../symbol/observable';\nimport { isFunction } from './isFunction';\nexport function isInteropObservable(input) {\n    return isFunction(input[Symbol_observable]);\n}\n//# sourceMappingURL=isInteropObservable.js.map","import { isFunction } from './isFunction';\nexport function isAsyncIterable(obj) {\n    return Symbol.asyncIterator && isFunction(obj === null || obj === void 0 ? void 0 : obj[Symbol.asyncIterator]);\n}\n//# sourceMappingURL=isAsyncIterable.js.map","export function createInvalidObservableTypeError(input) {\n    return new TypeError(\"You provided \" + (input !== null && typeof input === 'object' ? 'an invalid object' : \"'\" + input + \"'\") + \" where a stream was expected. You can provide an Observable, Promise, ReadableStream, Array, AsyncIterable, or Iterable.\");\n}\n//# sourceMappingURL=throwUnobservableError.js.map","export function getSymbolIterator() {\n    if (typeof Symbol !== 'function' || !Symbol.iterator) {\n        return '@@iterator';\n    }\n    return Symbol.iterator;\n}\nexport var iterator = getSymbolIterator();\n//# sourceMappingURL=iterator.js.map","import { iterator as Symbol_iterator } from '../symbol/iterator';\nimport { isFunction } from './isFunction';\nexport function isIterable(input) {\n    return isFunction(input === null || input === void 0 ? void 0 : input[Symbol_iterator]);\n}\n//# sourceMappingURL=isIterable.js.map","import { __asyncGenerator, __await, __generator } from \"tslib\";\nimport { isFunction } from './isFunction';\nexport function readableStreamLikeToAsyncGenerator(readableStream) {\n    return __asyncGenerator(this, arguments, function readableStreamLikeToAsyncGenerator_1() {\n        var reader, _a, value, done;\n        return __generator(this, function (_b) {\n            switch (_b.label) {\n                case 0:\n                    reader = readableStream.getReader();\n                    _b.label = 1;\n                case 1:\n                    _b.trys.push([1, , 9, 10]);\n                    _b.label = 2;\n                case 2:\n                    if (!true) return [3, 8];\n                    return [4, __await(reader.read())];\n                case 3:\n                    _a = _b.sent(), value = _a.value, done = _a.done;\n                    if (!done) return [3, 5];\n                    return [4, __await(void 0)];\n                case 4: return [2, _b.sent()];\n                case 5: return [4, __await(value)];\n                case 6: return [4, _b.sent()];\n                case 7:\n                    _b.sent();\n                    return [3, 2];\n                case 8: return [3, 10];\n                case 9:\n                    reader.releaseLock();\n                    return [7];\n                case 10: return [2];\n            }\n        });\n    });\n}\nexport function isReadableStreamLike(obj) {\n    return isFunction(obj === null || obj === void 0 ? void 0 : obj.getReader);\n}\n//# sourceMappingURL=isReadableStreamLike.js.map","import { __asyncValues, __awaiter, __generator, __values } from \"tslib\";\nimport { isArrayLike } from '../util/isArrayLike';\nimport { isPromise } from '../util/isPromise';\nimport { Observable } from '../Observable';\nimport { isInteropObservable } from '../util/isInteropObservable';\nimport { isAsyncIterable } from '../util/isAsyncIterable';\nimport { createInvalidObservableTypeError } from '../util/throwUnobservableError';\nimport { isIterable } from '../util/isIterable';\nimport { isReadableStreamLike, readableStreamLikeToAsyncGenerator } from '../util/isReadableStreamLike';\nimport { isFunction } from '../util/isFunction';\nimport { reportUnhandledError } from '../util/reportUnhandledError';\nimport { observable as Symbol_observable } from '../symbol/observable';\nexport function innerFrom(input) {\n    if (input instanceof Observable) {\n        return input;\n    }\n    if (input != null) {\n        if (isInteropObservable(input)) {\n            return fromInteropObservable(input);\n        }\n        if (isArrayLike(input)) {\n            return fromArrayLike(input);\n        }\n        if (isPromise(input)) {\n            return fromPromise(input);\n        }\n        if (isAsyncIterable(input)) {\n            return fromAsyncIterable(input);\n        }\n        if (isIterable(input)) {\n            return fromIterable(input);\n        }\n        if (isReadableStreamLike(input)) {\n            return fromReadableStreamLike(input);\n        }\n    }\n    throw createInvalidObservableTypeError(input);\n}\nexport function fromInteropObservable(obj) {\n    return new Observable(function (subscriber) {\n        var obs = obj[Symbol_observable]();\n        if (isFunction(obs.subscribe)) {\n            return obs.subscribe(subscriber);\n        }\n        throw new TypeError('Provided object does not correctly implement Symbol.observable');\n    });\n}\nexport function fromArrayLike(array) {\n    return new Observable(function (subscriber) {\n        for (var i = 0; i < array.length && !subscriber.closed; i++) {\n            subscriber.next(array[i]);\n        }\n        subscriber.complete();\n    });\n}\nexport function fromPromise(promise) {\n    return new Observable(function (subscriber) {\n        promise\n            .then(function (value) {\n            if (!subscriber.closed) {\n                subscriber.next(value);\n                subscriber.complete();\n            }\n        }, function (err) { return subscriber.error(err); })\n            .then(null, reportUnhandledError);\n    });\n}\nexport function fromIterable(iterable) {\n    return new Observable(function (subscriber) {\n        var e_1, _a;\n        try {\n            for (var iterable_1 = __values(iterable), iterable_1_1 = iterable_1.next(); !iterable_1_1.done; iterable_1_1 = iterable_1.next()) {\n                var value = iterable_1_1.value;\n                subscriber.next(value);\n                if (subscriber.closed) {\n                    return;\n                }\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (iterable_1_1 && !iterable_1_1.done && (_a = iterable_1.return)) _a.call(iterable_1);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        subscriber.complete();\n    });\n}\nexport function fromAsyncIterable(asyncIterable) {\n    return new Observable(function (subscriber) {\n        process(asyncIterable, subscriber).catch(function (err) { return subscriber.error(err); });\n    });\n}\nexport function fromReadableStreamLike(readableStream) {\n    return fromAsyncIterable(readableStreamLikeToAsyncGenerator(readableStream));\n}\nfunction process(asyncIterable, subscriber) {\n    var asyncIterable_1, asyncIterable_1_1;\n    var e_2, _a;\n    return __awaiter(this, void 0, void 0, function () {\n        var value, e_2_1;\n        return __generator(this, function (_b) {\n            switch (_b.label) {\n                case 0:\n                    _b.trys.push([0, 5, 6, 11]);\n                    asyncIterable_1 = __asyncValues(asyncIterable);\n                    _b.label = 1;\n                case 1: return [4, asyncIterable_1.next()];\n                case 2:\n                    if (!(asyncIterable_1_1 = _b.sent(), !asyncIterable_1_1.done)) return [3, 4];\n                    value = asyncIterable_1_1.value;\n                    subscriber.next(value);\n                    if (subscriber.closed) {\n                        return [2];\n                    }\n                    _b.label = 3;\n                case 3: return [3, 1];\n                case 4: return [3, 11];\n                case 5:\n                    e_2_1 = _b.sent();\n                    e_2 = { error: e_2_1 };\n                    return [3, 11];\n                case 6:\n                    _b.trys.push([6, , 9, 10]);\n                    if (!(asyncIterable_1_1 && !asyncIterable_1_1.done && (_a = asyncIterable_1.return))) return [3, 8];\n                    return [4, _a.call(asyncIterable_1)];\n                case 7:\n                    _b.sent();\n                    _b.label = 8;\n                case 8: return [3, 10];\n                case 9:\n                    if (e_2) throw e_2.error;\n                    return [7];\n                case 10: return [7];\n                case 11:\n                    subscriber.complete();\n                    return [2];\n            }\n        });\n    });\n}\n//# sourceMappingURL=innerFrom.js.map","export function executeSchedule(parentSubscription, scheduler, work, delay, repeat) {\n    if (delay === void 0) { delay = 0; }\n    if (repeat === void 0) { repeat = false; }\n    var scheduleSubscription = scheduler.schedule(function () {\n        work();\n        if (repeat) {\n            parentSubscription.add(this.schedule(null, delay));\n        }\n        else {\n            this.unsubscribe();\n        }\n    }, delay);\n    parentSubscription.add(scheduleSubscription);\n    if (!repeat) {\n        return scheduleSubscription;\n    }\n}\n//# sourceMappingURL=executeSchedule.js.map","import { executeSchedule } from '../util/executeSchedule';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nexport function observeOn(scheduler, delay) {\n    if (delay === void 0) { delay = 0; }\n    return operate(function (source, subscriber) {\n        source.subscribe(createOperatorSubscriber(subscriber, function (value) { return executeSchedule(subscriber, scheduler, function () { return subscriber.next(value); }, delay); }, function () { return executeSchedule(subscriber, scheduler, function () { return subscriber.complete(); }, delay); }, function (err) { return executeSchedule(subscriber, scheduler, function () { return subscriber.error(err); }, delay); }));\n    });\n}\n//# sourceMappingURL=observeOn.js.map","import { operate } from '../util/lift';\nexport function subscribeOn(scheduler, delay) {\n    if (delay === void 0) { delay = 0; }\n    return operate(function (source, subscriber) {\n        subscriber.add(scheduler.schedule(function () { return source.subscribe(subscriber); }, delay));\n    });\n}\n//# sourceMappingURL=subscribeOn.js.map","import { Observable } from '../Observable';\nimport { executeSchedule } from '../util/executeSchedule';\nexport function scheduleAsyncIterable(input, scheduler) {\n    if (!input) {\n        throw new Error('Iterable cannot be null');\n    }\n    return new Observable(function (subscriber) {\n        executeSchedule(subscriber, scheduler, function () {\n            var iterator = input[Symbol.asyncIterator]();\n            executeSchedule(subscriber, scheduler, function () {\n                iterator.next().then(function (result) {\n                    if (result.done) {\n                        subscriber.complete();\n                    }\n                    else {\n                        subscriber.next(result.value);\n                    }\n                });\n            }, 0, true);\n        });\n    });\n}\n//# sourceMappingURL=scheduleAsyncIterable.js.map","import { scheduleObservable } from './scheduleObservable';\nimport { schedulePromise } from './schedulePromise';\nimport { scheduleArray } from './scheduleArray';\nimport { scheduleIterable } from './scheduleIterable';\nimport { scheduleAsyncIterable } from './scheduleAsyncIterable';\nimport { isInteropObservable } from '../util/isInteropObservable';\nimport { isPromise } from '../util/isPromise';\nimport { isArrayLike } from '../util/isArrayLike';\nimport { isIterable } from '../util/isIterable';\nimport { isAsyncIterable } from '../util/isAsyncIterable';\nimport { createInvalidObservableTypeError } from '../util/throwUnobservableError';\nimport { isReadableStreamLike } from '../util/isReadableStreamLike';\nimport { scheduleReadableStreamLike } from './scheduleReadableStreamLike';\nexport function scheduled(input, scheduler) {\n    if (input != null) {\n        if (isInteropObservable(input)) {\n            return scheduleObservable(input, scheduler);\n        }\n        if (isArrayLike(input)) {\n            return scheduleArray(input, scheduler);\n        }\n        if (isPromise(input)) {\n            return schedulePromise(input, scheduler);\n        }\n        if (isAsyncIterable(input)) {\n            return scheduleAsyncIterable(input, scheduler);\n        }\n        if (isIterable(input)) {\n            return scheduleIterable(input, scheduler);\n        }\n        if (isReadableStreamLike(input)) {\n            return scheduleReadableStreamLike(input, scheduler);\n        }\n    }\n    throw createInvalidObservableTypeError(input);\n}\n//# sourceMappingURL=scheduled.js.map","import { innerFrom } from '../observable/innerFrom';\nimport { observeOn } from '../operators/observeOn';\nimport { subscribeOn } from '../operators/subscribeOn';\nexport function scheduleObservable(input, scheduler) {\n    return innerFrom(input).pipe(subscribeOn(scheduler), observeOn(scheduler));\n}\n//# sourceMappingURL=scheduleObservable.js.map","import { Observable } from '../Observable';\nexport function scheduleArray(input, scheduler) {\n    return new Observable(function (subscriber) {\n        var i = 0;\n        return scheduler.schedule(function () {\n            if (i === input.length) {\n                subscriber.complete();\n            }\n            else {\n                subscriber.next(input[i++]);\n                if (!subscriber.closed) {\n                    this.schedule();\n                }\n            }\n        });\n    });\n}\n//# sourceMappingURL=scheduleArray.js.map","import { innerFrom } from '../observable/innerFrom';\nimport { observeOn } from '../operators/observeOn';\nimport { subscribeOn } from '../operators/subscribeOn';\nexport function schedulePromise(input, scheduler) {\n    return innerFrom(input).pipe(subscribeOn(scheduler), observeOn(scheduler));\n}\n//# sourceMappingURL=schedulePromise.js.map","import { Observable } from '../Observable';\nimport { iterator as Symbol_iterator } from '../symbol/iterator';\nimport { isFunction } from '../util/isFunction';\nimport { executeSchedule } from '../util/executeSchedule';\nexport function scheduleIterable(input, scheduler) {\n    return new Observable(function (subscriber) {\n        var iterator;\n        executeSchedule(subscriber, scheduler, function () {\n            iterator = input[Symbol_iterator]();\n            executeSchedule(subscriber, scheduler, function () {\n                var _a;\n                var value;\n                var done;\n                try {\n                    (_a = iterator.next(), value = _a.value, done = _a.done);\n                }\n                catch (err) {\n                    subscriber.error(err);\n                    return;\n                }\n                if (done) {\n                    subscriber.complete();\n                }\n                else {\n                    subscriber.next(value);\n                }\n            }, 0, true);\n        });\n        return function () { return isFunction(iterator === null || iterator === void 0 ? void 0 : iterator.return) && iterator.return(); };\n    });\n}\n//# sourceMappingURL=scheduleIterable.js.map","import { scheduleAsyncIterable } from './scheduleAsyncIterable';\nimport { readableStreamLikeToAsyncGenerator } from '../util/isReadableStreamLike';\nexport function scheduleReadableStreamLike(input, scheduler) {\n    return scheduleAsyncIterable(readableStreamLikeToAsyncGenerator(input), scheduler);\n}\n//# sourceMappingURL=scheduleReadableStreamLike.js.map","import { scheduled } from '../scheduled/scheduled';\nimport { innerFrom } from './innerFrom';\nexport function from(input, scheduler) {\n    return scheduler ? scheduled(input, scheduler) : innerFrom(input);\n}\n//# sourceMappingURL=from.js.map","import { createErrorClass } from './createErrorClass';\nexport var EmptyError = createErrorClass(function (_super) {\n    return function EmptyErrorImpl() {\n        _super(this);\n        this.name = 'EmptyError';\n        this.message = 'no elements in sequence';\n    };\n});\n//# sourceMappingURL=EmptyError.js.map","import { map } from './map';\nimport { innerFrom } from '../observable/innerFrom';\nimport { operate } from '../util/lift';\nimport { mergeInternals } from './mergeInternals';\nimport { isFunction } from '../util/isFunction';\nexport function mergeMap(project, resultSelector, concurrent) {\n    if (concurrent === void 0) { concurrent = Infinity; }\n    if (isFunction(resultSelector)) {\n        return mergeMap(function (a, i) { return map(function (b, ii) { return resultSelector(a, b, i, ii); })(innerFrom(project(a, i))); }, concurrent);\n    }\n    else if (typeof resultSelector === 'number') {\n        concurrent = resultSelector;\n    }\n    return operate(function (source, subscriber) { return mergeInternals(source, subscriber, project, concurrent); });\n}\n//# sourceMappingURL=mergeMap.js.map","import { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nexport function map(project, thisArg) {\n    return operate(function (source, subscriber) {\n        var index = 0;\n        source.subscribe(createOperatorSubscriber(subscriber, function (value) {\n            subscriber.next(project.call(thisArg, value, index++));\n        }));\n    });\n}\n//# sourceMappingURL=map.js.map","import { innerFrom } from '../observable/innerFrom';\nimport { executeSchedule } from '../util/executeSchedule';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nexport function mergeInternals(source, subscriber, project, concurrent, onBeforeNext, expand, innerSubScheduler, additionalFinalizer) {\n    var buffer = [];\n    var active = 0;\n    var index = 0;\n    var isComplete = false;\n    var checkComplete = function () {\n        if (isComplete && !buffer.length && !active) {\n            subscriber.complete();\n        }\n    };\n    var outerNext = function (value) { return (active < concurrent ? doInnerSub(value) : buffer.push(value)); };\n    var doInnerSub = function (value) {\n        expand && subscriber.next(value);\n        active++;\n        var innerComplete = false;\n        innerFrom(project(value, index++)).subscribe(createOperatorSubscriber(subscriber, function (innerValue) {\n            onBeforeNext === null || onBeforeNext === void 0 ? void 0 : onBeforeNext(innerValue);\n            if (expand) {\n                outerNext(innerValue);\n            }\n            else {\n                subscriber.next(innerValue);\n            }\n        }, function () {\n            innerComplete = true;\n        }, undefined, function () {\n            if (innerComplete) {\n                try {\n                    active--;\n                    var _loop_1 = function () {\n                        var bufferedValue = buffer.shift();\n                        if (innerSubScheduler) {\n                            executeSchedule(subscriber, innerSubScheduler, function () { return doInnerSub(bufferedValue); });\n                        }\n                        else {\n                            doInnerSub(bufferedValue);\n                        }\n                    };\n                    while (buffer.length && active < concurrent) {\n                        _loop_1();\n                    }\n                    checkComplete();\n                }\n                catch (err) {\n                    subscriber.error(err);\n                }\n            }\n        }));\n    };\n    source.subscribe(createOperatorSubscriber(subscriber, outerNext, function () {\n        isComplete = true;\n        checkComplete();\n    }));\n    return function () {\n        additionalFinalizer === null || additionalFinalizer === void 0 ? void 0 : additionalFinalizer();\n    };\n}\n//# sourceMappingURL=mergeInternals.js.map","import { scanInternals } from './scanInternals';\nimport { operate } from '../util/lift';\nexport function reduce(accumulator, seed) {\n    return operate(scanInternals(accumulator, seed, arguments.length >= 2, false, true));\n}\n//# sourceMappingURL=reduce.js.map","import { createOperatorSubscriber } from './OperatorSubscriber';\nexport function scanInternals(accumulator, seed, hasSeed, emitOnNext, emitBeforeComplete) {\n    return function (source, subscriber) {\n        var hasState = hasSeed;\n        var state = seed;\n        var index = 0;\n        source.subscribe(createOperatorSubscriber(subscriber, function (value) {\n            var i = index++;\n            state = hasState\n                ?\n                    accumulator(state, value, i)\n                :\n                    ((hasState = true), value);\n            emitOnNext && subscriber.next(state);\n        }, emitBeforeComplete &&\n            (function () {\n                hasState && subscriber.next(state);\n                subscriber.complete();\n            })));\n    };\n}\n//# sourceMappingURL=scanInternals.js.map","import { mergeMap } from './mergeMap';\nimport { isFunction } from '../util/isFunction';\nexport function concatMap(project, resultSelector) {\n    return isFunction(resultSelector) ? mergeMap(project, resultSelector, 1) : mergeMap(project, 1);\n}\n//# sourceMappingURL=concatMap.js.map","function isPromise(obj) {\n  return (\n    !!obj &&\n    (typeof obj === \"object\" || typeof obj === \"function\") &&\n    typeof obj.then === \"function\"\n  );\n}\n\n/**\n * Return a function that will run a function asynchronously or synchronously\n *\n * example:\n * runAsync(wrappedFunction, callback)(...args);\n *\n * @param   {Function} func  Function to run\n * @param   {Function} [cb]    Callback function passed the `func` returned value\n * @param   {string} [proxyProperty] `this` property to be used for the callback factory\n * @return  {Function(arguments)} Arguments to pass to `func`. This function will in turn\n *                                return a Promise (Node >= 0.12) or call the callbacks.\n */\n\nvar runAsync = (module.exports = function (func, cb, proxyProperty = \"async\") {\n  if (typeof cb === \"string\") {\n    proxyProperty = cb;\n    cb = undefined;\n  }\n  cb = cb || function () {};\n\n  return function () {\n    var args = arguments;\n    var originalThis = this;\n\n    var promise = new Promise(function (resolve, reject) {\n      var resolved = false;\n      const wrappedResolve = function (value) {\n        if (resolved) {\n          console.warn(\"Run-async promise already resolved.\");\n        }\n        resolved = true;\n        resolve(value);\n      };\n\n      var rejected = false;\n      const wrappedReject = function (value) {\n        if (rejected) {\n          console.warn(\"Run-async promise already rejected.\");\n        }\n        rejected = true;\n        reject(value);\n      };\n\n      var usingCallback = false;\n      var callbackConflict = false;\n      var contextEnded = false;\n\n      var doneFactory = function () {\n        if (contextEnded) {\n          console.warn(\n            \"Run-async async() called outside a valid run-async context, callback will be ignored.\",\n          );\n          return function () {};\n        }\n        if (callbackConflict) {\n          console.warn(\n            \"Run-async wrapped function (async) returned a promise.\\nCalls to async() callback can have unexpected results.\",\n          );\n        }\n        usingCallback = true;\n        return function (err, value) {\n          if (err) {\n            wrappedReject(err);\n          } else {\n            wrappedResolve(value);\n          }\n        };\n      };\n\n      var _this;\n      if (originalThis && proxyProperty && Proxy) {\n        _this = new Proxy(originalThis, {\n          get(_target, prop) {\n            if (prop === proxyProperty) {\n              if (prop in _target) {\n                console.warn(\n                  `${proxyProperty} property is been shadowed by run-sync`,\n                );\n              }\n              return doneFactory;\n            }\n\n            return Reflect.get(...arguments);\n          },\n        });\n      } else {\n        _this = { [proxyProperty]: doneFactory };\n      }\n\n      var answer = func.apply(_this, Array.prototype.slice.call(args));\n\n      if (usingCallback) {\n        if (isPromise(answer)) {\n          console.warn(\n            \"Run-async wrapped function (sync) returned a promise but async() callback must be executed to resolve.\",\n          );\n        }\n      } else {\n        if (isPromise(answer)) {\n          callbackConflict = true;\n          answer.then(wrappedResolve, wrappedReject);\n        } else {\n          wrappedResolve(answer);\n        }\n      }\n      contextEnded = true;\n    });\n\n    promise.then(cb.bind(null, null), cb);\n\n    return promise;\n  };\n});\n\nrunAsync.cb = function (func, cb) {\n  return runAsync(function () {\n    var args = Array.prototype.slice.call(arguments);\n    if (args.length === func.length - 1) {\n      args.push(this.async());\n    }\n    return func.apply(this, args);\n  }, cb);\n};\n","/* eslint-disable @typescript-eslint/no-explicit-any, @typescript-eslint/no-unsafe-return, @typescript-eslint/no-unsafe-assignment */\nimport readline from 'node:readline';\nimport { defer, EMPTY, from, of, concatMap, filter, reduce, isObservable, lastValueFrom, } from 'rxjs';\nimport runAsync from 'run-async';\nimport MuteStream from 'mute-stream';\nimport { AbortPromptError } from '@inquirer/core';\nimport ansiEscapes from 'ansi-escapes';\nexport const _ = {\n    set: (obj, path = '', value) => {\n        let pointer = obj;\n        path.split('.').forEach((key, index, arr) => {\n            if (key === '__proto__' || key === 'constructor')\n                return;\n            if (index === arr.length - 1) {\n                pointer[key] = value;\n            }\n            else if (!(key in pointer) || typeof pointer[key] !== 'object') {\n                pointer[key] = {};\n            }\n            pointer = pointer[key];\n        });\n    },\n    get: (obj, path = '', defaultValue) => {\n        const travel = (regexp) => String.prototype.split\n            .call(path, regexp)\n            .filter(Boolean)\n            .reduce(\n        // @ts-expect-error implicit any on res[key]\n        (res, key) => (res == null ? res : res[key]), obj);\n        const result = travel(/[,[\\]]+?/) || travel(/[,.[\\]]+?/);\n        return result === undefined || result === obj ? defaultValue : result;\n    },\n};\n/**\n * Resolve a question property value if it is passed as a function.\n * This method will overwrite the property on the question object with the received value.\n */\nasync function fetchAsyncQuestionProperty(question, prop, answers) {\n    const propGetter = question[prop];\n    if (typeof propGetter === 'function') {\n        return runAsync(propGetter)(answers);\n    }\n    return propGetter;\n}\nclass TTYError extends Error {\n    name = 'TTYError';\n    isTtyError = true;\n}\nfunction setupReadlineOptions(opt) {\n    // Inquirer 8.x:\n    // opt.skipTTYChecks = opt.skipTTYChecks === undefined ? opt.input !== undefined : opt.skipTTYChecks;\n    opt.skipTTYChecks = opt.skipTTYChecks === undefined ? true : opt.skipTTYChecks;\n    // Default `input` to stdin\n    const input = opt.input || process.stdin;\n    // Check if prompt is being called in TTY environment\n    // If it isn't return a failed promise\n    // @ts-expect-error: ignore isTTY type error\n    if (!opt.skipTTYChecks && !input.isTTY) {\n        throw new TTYError('Prompts can not be meaningfully rendered in non-TTY environments');\n    }\n    // Add mute capabilities to the output\n    const ms = new MuteStream();\n    ms.pipe(opt.output || process.stdout);\n    const output = ms;\n    return {\n        terminal: true,\n        ...opt,\n        input,\n        output,\n    };\n}\nfunction isQuestionArray(questions) {\n    return Array.isArray(questions);\n}\nfunction isQuestionMap(questions) {\n    return Object.values(questions).every((maybeQuestion) => typeof maybeQuestion === 'object' &&\n        !Array.isArray(maybeQuestion) &&\n        maybeQuestion != null);\n}\nfunction isPromptConstructor(prompt) {\n    return Boolean(prompt.prototype &&\n        'run' in prompt.prototype &&\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n        typeof prompt.prototype.run === 'function');\n}\n/**\n * Base interface class other can inherits from\n */\nexport default class PromptsRunner {\n    prompts;\n    answers = {};\n    process = EMPTY;\n    abortController = new AbortController();\n    opt;\n    constructor(prompts, opt = {}) {\n        this.opt = opt;\n        this.prompts = prompts;\n    }\n    async run(questions, answers) {\n        this.abortController = new AbortController();\n        // Keep global reference to the answers\n        this.answers = typeof answers === 'object' ? { ...answers } : {};\n        let obs;\n        if (isQuestionArray(questions)) {\n            obs = from(questions);\n        }\n        else if (isObservable(questions)) {\n            obs = questions;\n        }\n        else if (isQuestionMap(questions)) {\n            // Case: Called with a set of { name: question }\n            obs = from(Object.entries(questions).map(([name, question]) => {\n                return Object.assign({}, question, { name });\n            }));\n        }\n        else {\n            // Case: Called with a single question config\n            obs = from([questions]);\n        }\n        this.process = obs.pipe(concatMap((question) => of(question).pipe(concatMap((question) => from(this.shouldRun(question).then((shouldRun) => {\n            if (shouldRun) {\n                return question;\n            }\n            return;\n        })).pipe(filter((val) => val != null))), concatMap((question) => defer(() => from(this.fetchAnswer(question)))))));\n        return lastValueFrom(this.process.pipe(reduce((answersObj, answer) => {\n            _.set(answersObj, answer.name, answer.answer);\n            return answersObj;\n        }, this.answers)))\n            .then(() => this.answers)\n            .finally(() => this.close());\n    }\n    prepareQuestion = async (question) => {\n        const [message, defaultValue, resolvedChoices] = await Promise.all([\n            fetchAsyncQuestionProperty(question, 'message', this.answers),\n            fetchAsyncQuestionProperty(question, 'default', this.answers),\n            fetchAsyncQuestionProperty(question, 'choices', this.answers),\n        ]);\n        let choices;\n        if (Array.isArray(resolvedChoices)) {\n            choices = resolvedChoices.map((choice) => {\n                const choiceObj = typeof choice !== 'object' || choice == null\n                    ? { name: choice, value: choice }\n                    : {\n                        ...choice,\n                        value: 'value' in choice\n                            ? choice.value\n                            : 'name' in choice\n                                ? choice.name\n                                : undefined,\n                    };\n                if ('value' in choiceObj && Array.isArray(defaultValue)) {\n                    // Add checked to question for backward compatibility. default was supported as alternative of per choice checked.\n                    return {\n                        checked: defaultValue.includes(choiceObj.value),\n                        ...choiceObj,\n                    };\n                }\n                return choiceObj;\n            });\n        }\n        return Object.assign({}, question, {\n            message,\n            default: defaultValue,\n            choices,\n            type: question.type in this.prompts ? question.type : 'input',\n        });\n    };\n    fetchAnswer = async (rawQuestion) => {\n        const question = await this.prepareQuestion(rawQuestion);\n        const prompt = this.prompts[question.type];\n        if (prompt == null) {\n            throw new Error(`Prompt for type ${question.type} not found`);\n        }\n        let cleanupSignal;\n        const promptFn = isPromptConstructor(prompt)\n            ? (q, opt) => new Promise((resolve, reject) => {\n                const { signal } = opt;\n                if (signal.aborted) {\n                    reject(new AbortPromptError({ cause: signal.reason }));\n                    return;\n                }\n                const rl = readline.createInterface(setupReadlineOptions(opt));\n                /**\n                 * Handle the ^C exit\n                 */\n                const onForceClose = () => {\n                    this.close();\n                    process.kill(process.pid, 'SIGINT');\n                    console.log('');\n                };\n                const onClose = () => {\n                    process.removeListener('exit', onForceClose);\n                    rl.removeListener('SIGINT', onForceClose);\n                    rl.setPrompt('');\n                    rl.output.unmute();\n                    rl.output.write(ansiEscapes.cursorShow);\n                    rl.output.end();\n                    rl.close();\n                };\n                // Make sure new prompt start on a newline when closing\n                process.on('exit', onForceClose);\n                rl.on('SIGINT', onForceClose);\n                const activePrompt = new prompt(q, rl, this.answers);\n                const cleanup = () => {\n                    onClose();\n                    cleanupSignal?.();\n                };\n                const abort = () => {\n                    reject(new AbortPromptError({ cause: signal.reason }));\n                    cleanup();\n                };\n                signal.addEventListener('abort', abort);\n                cleanupSignal = () => {\n                    signal.removeEventListener('abort', abort);\n                    cleanupSignal = undefined;\n                };\n                activePrompt.run().then(resolve, reject).finally(cleanup);\n            })\n            : prompt;\n        let cleanupModuleSignal;\n        const { signal: moduleSignal } = this.opt;\n        if (moduleSignal?.aborted) {\n            this.abortController.abort(moduleSignal.reason);\n        }\n        else if (moduleSignal) {\n            const abort = () => this.abortController.abort(moduleSignal.reason);\n            moduleSignal.addEventListener('abort', abort);\n            cleanupModuleSignal = () => {\n                moduleSignal.removeEventListener('abort', abort);\n            };\n        }\n        const { filter = (value) => value } = question;\n        const { signal } = this.abortController;\n        return promptFn(question, { ...this.opt, signal })\n            .then((answer) => ({\n            name: question.name,\n            answer: filter(answer, this.answers),\n        }))\n            .finally(() => {\n            cleanupSignal?.();\n            cleanupModuleSignal?.();\n        });\n    };\n    /**\n     * Close the interface and cleanup listeners\n     */\n    close = () => {\n        this.abortController.abort();\n    };\n    shouldRun = async (question) => {\n        if (question.askAnswered !== true &&\n            _.get(this.answers, question.name) !== undefined) {\n            return false;\n        }\n        const { when } = question;\n        if (typeof when === 'function') {\n            const shouldRun = await runAsync(when)(this.answers);\n            return Boolean(shouldRun);\n        }\n        return when !== false;\n    };\n}\n","import { Observable } from '../Observable';\nimport { isFunction } from './isFunction';\nexport function isObservable(obj) {\n    return !!obj && (obj instanceof Observable || (isFunction(obj.lift) && isFunction(obj.subscribe)));\n}\n//# sourceMappingURL=isObservable.js.map","import { popScheduler } from '../util/args';\nimport { from } from './from';\nexport function of() {\n    var args = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        args[_i] = arguments[_i];\n    }\n    var scheduler = popScheduler(args);\n    return from(args, scheduler);\n}\n//# sourceMappingURL=of.js.map","import { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nexport function filter(predicate, thisArg) {\n    return operate(function (source, subscriber) {\n        var index = 0;\n        source.subscribe(createOperatorSubscriber(subscriber, function (value) { return predicate.call(thisArg, value, index++) && subscriber.next(value); }));\n    });\n}\n//# sourceMappingURL=filter.js.map","import { Observable } from '../Observable';\nimport { innerFrom } from './innerFrom';\nexport function defer(observableFactory) {\n    return new Observable(function (subscriber) {\n        innerFrom(observableFactory()).subscribe(subscriber);\n    });\n}\n//# sourceMappingURL=defer.js.map","import { EmptyError } from './util/EmptyError';\nexport function lastValueFrom(source, config) {\n    var hasConfig = typeof config === 'object';\n    return new Promise(function (resolve, reject) {\n        var _hasValue = false;\n        var _value;\n        source.subscribe({\n            next: function (value) {\n                _value = value;\n                _hasValue = true;\n            },\n            error: reject,\n            complete: function () {\n                if (_hasValue) {\n                    resolve(_value);\n                }\n                else if (hasConfig) {\n                    resolve(config.defaultValue);\n                }\n                else {\n                    reject(new EmptyError());\n                }\n            },\n        });\n    });\n}\n//# sourceMappingURL=lastValueFrom.js.map","/**\n * Inquirer.js\n * A collection of common interactive command line user interfaces.\n */\nimport { input, select, number, confirm, rawlist, expand, checkbox, password, editor, search, Separator, } from '@inquirer/prompts';\nimport PromptsRunner from \"./ui/prompt.js\";\nconst builtInPrompts = {\n    input,\n    select,\n    /** @deprecated `list` is now named `select` */\n    list: select,\n    number,\n    confirm,\n    rawlist,\n    expand,\n    checkbox,\n    password,\n    editor,\n    search,\n};\n/**\n * Create a new self-contained prompt module.\n */\nexport function createPromptModule(opt) {\n    function promptModule(questions, answers) {\n        const runner = new PromptsRunner(promptModule.prompts, opt);\n        const promptPromise = runner.run(questions, answers);\n        return Object.assign(promptPromise, { ui: runner });\n    }\n    promptModule.prompts = { ...builtInPrompts };\n    /**\n     * Register a prompt type\n     */\n    promptModule.registerPrompt = function (name, prompt) {\n        promptModule.prompts[name] = prompt;\n        return this;\n    };\n    /**\n     * Register the defaults provider prompts\n     */\n    promptModule.restoreDefaultPrompts = function () {\n        promptModule.prompts = { ...builtInPrompts };\n    };\n    return promptModule;\n}\n/**\n * Public CLI helper interface\n */\nconst prompt = createPromptModule();\n// Expose helper functions on the top level for easiest usage by common users\nfunction registerPrompt(name, newPrompt) {\n    prompt.registerPrompt(name, newPrompt);\n}\nfunction restoreDefaultPrompts() {\n    prompt.restoreDefaultPrompts();\n}\nconst inquirer = {\n    prompt,\n    ui: {\n        Prompt: PromptsRunner,\n    },\n    createPromptModule,\n    registerPrompt,\n    restoreDefaultPrompts,\n    Separator,\n};\nexport default inquirer;\n","\"use strict\";\n\nvar conversions = {};\nmodule.exports = conversions;\n\nfunction sign(x) {\n    return x < 0 ? -1 : 1;\n}\n\nfunction evenRound(x) {\n    // Round x to the nearest integer, choosing the even integer if it lies halfway between two.\n    if ((x % 1) === 0.5 && (x & 1) === 0) { // [even number].5; round down (i.e. floor)\n        return Math.floor(x);\n    } else {\n        return Math.round(x);\n    }\n}\n\nfunction createNumberConversion(bitLength, typeOpts) {\n    if (!typeOpts.unsigned) {\n        --bitLength;\n    }\n    const lowerBound = typeOpts.unsigned ? 0 : -Math.pow(2, bitLength);\n    const upperBound = Math.pow(2, bitLength) - 1;\n\n    const moduloVal = typeOpts.moduloBitLength ? Math.pow(2, typeOpts.moduloBitLength) : Math.pow(2, bitLength);\n    const moduloBound = typeOpts.moduloBitLength ? Math.pow(2, typeOpts.moduloBitLength - 1) : Math.pow(2, bitLength - 1);\n\n    return function(V, opts) {\n        if (!opts) opts = {};\n\n        let x = +V;\n\n        if (opts.enforceRange) {\n            if (!Number.isFinite(x)) {\n                throw new TypeError(\"Argument is not a finite number\");\n            }\n\n            x = sign(x) * Math.floor(Math.abs(x));\n            if (x < lowerBound || x > upperBound) {\n                throw new TypeError(\"Argument is not in byte range\");\n            }\n\n            return x;\n        }\n\n        if (!isNaN(x) && opts.clamp) {\n            x = evenRound(x);\n\n            if (x < lowerBound) x = lowerBound;\n            if (x > upperBound) x = upperBound;\n            return x;\n        }\n\n        if (!Number.isFinite(x) || x === 0) {\n            return 0;\n        }\n\n        x = sign(x) * Math.floor(Math.abs(x));\n        x = x % moduloVal;\n\n        if (!typeOpts.unsigned && x >= moduloBound) {\n            return x - moduloVal;\n        } else if (typeOpts.unsigned) {\n            if (x < 0) {\n              x += moduloVal;\n            } else if (x === -0) { // don't return negative zero\n              return 0;\n            }\n        }\n\n        return x;\n    }\n}\n\nconversions[\"void\"] = function () {\n    return undefined;\n};\n\nconversions[\"boolean\"] = function (val) {\n    return !!val;\n};\n\nconversions[\"byte\"] = createNumberConversion(8, { unsigned: false });\nconversions[\"octet\"] = createNumberConversion(8, { unsigned: true });\n\nconversions[\"short\"] = createNumberConversion(16, { unsigned: false });\nconversions[\"unsigned short\"] = createNumberConversion(16, { unsigned: true });\n\nconversions[\"long\"] = createNumberConversion(32, { unsigned: false });\nconversions[\"unsigned long\"] = createNumberConversion(32, { unsigned: true });\n\nconversions[\"long long\"] = createNumberConversion(32, { unsigned: false, moduloBitLength: 64 });\nconversions[\"unsigned long long\"] = createNumberConversion(32, { unsigned: true, moduloBitLength: 64 });\n\nconversions[\"double\"] = function (V) {\n    const x = +V;\n\n    if (!Number.isFinite(x)) {\n        throw new TypeError(\"Argument is not a finite floating-point value\");\n    }\n\n    return x;\n};\n\nconversions[\"unrestricted double\"] = function (V) {\n    const x = +V;\n\n    if (isNaN(x)) {\n        throw new TypeError(\"Argument is NaN\");\n    }\n\n    return x;\n};\n\n// not quite valid, but good enough for JS\nconversions[\"float\"] = conversions[\"double\"];\nconversions[\"unrestricted float\"] = conversions[\"unrestricted double\"];\n\nconversions[\"DOMString\"] = function (V, opts) {\n    if (!opts) opts = {};\n\n    if (opts.treatNullAsEmptyString && V === null) {\n        return \"\";\n    }\n\n    return String(V);\n};\n\nconversions[\"ByteString\"] = function (V, opts) {\n    const x = String(V);\n    let c = undefined;\n    for (let i = 0; (c = x.codePointAt(i)) !== undefined; ++i) {\n        if (c > 255) {\n            throw new TypeError(\"Argument is not a valid bytestring\");\n        }\n    }\n\n    return x;\n};\n\nconversions[\"USVString\"] = function (V) {\n    const S = String(V);\n    const n = S.length;\n    const U = [];\n    for (let i = 0; i < n; ++i) {\n        const c = S.charCodeAt(i);\n        if (c < 0xD800 || c > 0xDFFF) {\n            U.push(String.fromCodePoint(c));\n        } else if (0xDC00 <= c && c <= 0xDFFF) {\n            U.push(String.fromCodePoint(0xFFFD));\n        } else {\n            if (i === n - 1) {\n                U.push(String.fromCodePoint(0xFFFD));\n            } else {\n                const d = S.charCodeAt(i + 1);\n                if (0xDC00 <= d && d <= 0xDFFF) {\n                    const a = c & 0x3FF;\n                    const b = d & 0x3FF;\n                    U.push(String.fromCodePoint((2 << 15) + (2 << 9) * a + b));\n                    ++i;\n                } else {\n                    U.push(String.fromCodePoint(0xFFFD));\n                }\n            }\n        }\n    }\n\n    return U.join('');\n};\n\nconversions[\"Date\"] = function (V, opts) {\n    if (!(V instanceof Date)) {\n        throw new TypeError(\"Argument is not a Date object\");\n    }\n    if (isNaN(V)) {\n        return undefined;\n    }\n\n    return V;\n};\n\nconversions[\"RegExp\"] = function (V, opts) {\n    if (!(V instanceof RegExp)) {\n        V = new RegExp(V);\n    }\n\n    return V;\n};\n","\"use strict\";\n\nmodule.exports.mixin = function mixin(target, source) {\n  const keys = Object.getOwnPropertyNames(source);\n  for (let i = 0; i < keys.length; ++i) {\n    Object.defineProperty(target, keys[i], Object.getOwnPropertyDescriptor(source, keys[i]));\n  }\n};\n\nmodule.exports.wrapperSymbol = Symbol(\"wrapper\");\nmodule.exports.implSymbol = Symbol(\"impl\");\n\nmodule.exports.wrapperForImpl = function (impl) {\n  return impl[module.exports.wrapperSymbol];\n};\n\nmodule.exports.implForWrapper = function (wrapper) {\n  return wrapper[module.exports.implSymbol];\n};\n\n","\"use strict\";\n\nvar punycode = require(\"punycode\");\nvar mappingTable = require(\"./lib/mappingTable.json\");\n\nvar PROCESSING_OPTIONS = {\n  TRANSITIONAL: 0,\n  NONTRANSITIONAL: 1\n};\n\nfunction normalize(str) { // fix bug in v8\n  return str.split('\\u0000').map(function (s) { return s.normalize('NFC'); }).join('\\u0000');\n}\n\nfunction findStatus(val) {\n  var start = 0;\n  var end = mappingTable.length - 1;\n\n  while (start <= end) {\n    var mid = Math.floor((start + end) / 2);\n\n    var target = mappingTable[mid];\n    if (target[0][0] <= val && target[0][1] >= val) {\n      return target;\n    } else if (target[0][0] > val) {\n      end = mid - 1;\n    } else {\n      start = mid + 1;\n    }\n  }\n\n  return null;\n}\n\nvar regexAstralSymbols = /[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g;\n\nfunction countSymbols(string) {\n  return string\n    // replace every surrogate pair with a BMP symbol\n    .replace(regexAstralSymbols, '_')\n    // then get the length\n    .length;\n}\n\nfunction mapChars(domain_name, useSTD3, processing_option) {\n  var hasError = false;\n  var processed = \"\";\n\n  var len = countSymbols(domain_name);\n  for (var i = 0; i < len; ++i) {\n    var codePoint = domain_name.codePointAt(i);\n    var status = findStatus(codePoint);\n\n    switch (status[1]) {\n      case \"disallowed\":\n        hasError = true;\n        processed += String.fromCodePoint(codePoint);\n        break;\n      case \"ignored\":\n        break;\n      case \"mapped\":\n        processed += String.fromCodePoint.apply(String, status[2]);\n        break;\n      case \"deviation\":\n        if (processing_option === PROCESSING_OPTIONS.TRANSITIONAL) {\n          processed += String.fromCodePoint.apply(String, status[2]);\n        } else {\n          processed += String.fromCodePoint(codePoint);\n        }\n        break;\n      case \"valid\":\n        processed += String.fromCodePoint(codePoint);\n        break;\n      case \"disallowed_STD3_mapped\":\n        if (useSTD3) {\n          hasError = true;\n          processed += String.fromCodePoint(codePoint);\n        } else {\n          processed += String.fromCodePoint.apply(String, status[2]);\n        }\n        break;\n      case \"disallowed_STD3_valid\":\n        if (useSTD3) {\n          hasError = true;\n        }\n\n        processed += String.fromCodePoint(codePoint);\n        break;\n    }\n  }\n\n  return {\n    string: processed,\n    error: hasError\n  };\n}\n\nvar combiningMarksRegex = /[\\u0300-\\u036F\\u0483-\\u0489\\u0591-\\u05BD\\u05BF\\u05C1\\u05C2\\u05C4\\u05C5\\u05C7\\u0610-\\u061A\\u064B-\\u065F\\u0670\\u06D6-\\u06DC\\u06DF-\\u06E4\\u06E7\\u06E8\\u06EA-\\u06ED\\u0711\\u0730-\\u074A\\u07A6-\\u07B0\\u07EB-\\u07F3\\u0816-\\u0819\\u081B-\\u0823\\u0825-\\u0827\\u0829-\\u082D\\u0859-\\u085B\\u08E4-\\u0903\\u093A-\\u093C\\u093E-\\u094F\\u0951-\\u0957\\u0962\\u0963\\u0981-\\u0983\\u09BC\\u09BE-\\u09C4\\u09C7\\u09C8\\u09CB-\\u09CD\\u09D7\\u09E2\\u09E3\\u0A01-\\u0A03\\u0A3C\\u0A3E-\\u0A42\\u0A47\\u0A48\\u0A4B-\\u0A4D\\u0A51\\u0A70\\u0A71\\u0A75\\u0A81-\\u0A83\\u0ABC\\u0ABE-\\u0AC5\\u0AC7-\\u0AC9\\u0ACB-\\u0ACD\\u0AE2\\u0AE3\\u0B01-\\u0B03\\u0B3C\\u0B3E-\\u0B44\\u0B47\\u0B48\\u0B4B-\\u0B4D\\u0B56\\u0B57\\u0B62\\u0B63\\u0B82\\u0BBE-\\u0BC2\\u0BC6-\\u0BC8\\u0BCA-\\u0BCD\\u0BD7\\u0C00-\\u0C03\\u0C3E-\\u0C44\\u0C46-\\u0C48\\u0C4A-\\u0C4D\\u0C55\\u0C56\\u0C62\\u0C63\\u0C81-\\u0C83\\u0CBC\\u0CBE-\\u0CC4\\u0CC6-\\u0CC8\\u0CCA-\\u0CCD\\u0CD5\\u0CD6\\u0CE2\\u0CE3\\u0D01-\\u0D03\\u0D3E-\\u0D44\\u0D46-\\u0D48\\u0D4A-\\u0D4D\\u0D57\\u0D62\\u0D63\\u0D82\\u0D83\\u0DCA\\u0DCF-\\u0DD4\\u0DD6\\u0DD8-\\u0DDF\\u0DF2\\u0DF3\\u0E31\\u0E34-\\u0E3A\\u0E47-\\u0E4E\\u0EB1\\u0EB4-\\u0EB9\\u0EBB\\u0EBC\\u0EC8-\\u0ECD\\u0F18\\u0F19\\u0F35\\u0F37\\u0F39\\u0F3E\\u0F3F\\u0F71-\\u0F84\\u0F86\\u0F87\\u0F8D-\\u0F97\\u0F99-\\u0FBC\\u0FC6\\u102B-\\u103E\\u1056-\\u1059\\u105E-\\u1060\\u1062-\\u1064\\u1067-\\u106D\\u1071-\\u1074\\u1082-\\u108D\\u108F\\u109A-\\u109D\\u135D-\\u135F\\u1712-\\u1714\\u1732-\\u1734\\u1752\\u1753\\u1772\\u1773\\u17B4-\\u17D3\\u17DD\\u180B-\\u180D\\u18A9\\u1920-\\u192B\\u1930-\\u193B\\u19B0-\\u19C0\\u19C8\\u19C9\\u1A17-\\u1A1B\\u1A55-\\u1A5E\\u1A60-\\u1A7C\\u1A7F\\u1AB0-\\u1ABE\\u1B00-\\u1B04\\u1B34-\\u1B44\\u1B6B-\\u1B73\\u1B80-\\u1B82\\u1BA1-\\u1BAD\\u1BE6-\\u1BF3\\u1C24-\\u1C37\\u1CD0-\\u1CD2\\u1CD4-\\u1CE8\\u1CED\\u1CF2-\\u1CF4\\u1CF8\\u1CF9\\u1DC0-\\u1DF5\\u1DFC-\\u1DFF\\u20D0-\\u20F0\\u2CEF-\\u2CF1\\u2D7F\\u2DE0-\\u2DFF\\u302A-\\u302F\\u3099\\u309A\\uA66F-\\uA672\\uA674-\\uA67D\\uA69F\\uA6F0\\uA6F1\\uA802\\uA806\\uA80B\\uA823-\\uA827\\uA880\\uA881\\uA8B4-\\uA8C4\\uA8E0-\\uA8F1\\uA926-\\uA92D\\uA947-\\uA953\\uA980-\\uA983\\uA9B3-\\uA9C0\\uA9E5\\uAA29-\\uAA36\\uAA43\\uAA4C\\uAA4D\\uAA7B-\\uAA7D\\uAAB0\\uAAB2-\\uAAB4\\uAAB7\\uAAB8\\uAABE\\uAABF\\uAAC1\\uAAEB-\\uAAEF\\uAAF5\\uAAF6\\uABE3-\\uABEA\\uABEC\\uABED\\uFB1E\\uFE00-\\uFE0F\\uFE20-\\uFE2D]|\\uD800[\\uDDFD\\uDEE0\\uDF76-\\uDF7A]|\\uD802[\\uDE01-\\uDE03\\uDE05\\uDE06\\uDE0C-\\uDE0F\\uDE38-\\uDE3A\\uDE3F\\uDEE5\\uDEE6]|\\uD804[\\uDC00-\\uDC02\\uDC38-\\uDC46\\uDC7F-\\uDC82\\uDCB0-\\uDCBA\\uDD00-\\uDD02\\uDD27-\\uDD34\\uDD73\\uDD80-\\uDD82\\uDDB3-\\uDDC0\\uDE2C-\\uDE37\\uDEDF-\\uDEEA\\uDF01-\\uDF03\\uDF3C\\uDF3E-\\uDF44\\uDF47\\uDF48\\uDF4B-\\uDF4D\\uDF57\\uDF62\\uDF63\\uDF66-\\uDF6C\\uDF70-\\uDF74]|\\uD805[\\uDCB0-\\uDCC3\\uDDAF-\\uDDB5\\uDDB8-\\uDDC0\\uDE30-\\uDE40\\uDEAB-\\uDEB7]|\\uD81A[\\uDEF0-\\uDEF4\\uDF30-\\uDF36]|\\uD81B[\\uDF51-\\uDF7E\\uDF8F-\\uDF92]|\\uD82F[\\uDC9D\\uDC9E]|\\uD834[\\uDD65-\\uDD69\\uDD6D-\\uDD72\\uDD7B-\\uDD82\\uDD85-\\uDD8B\\uDDAA-\\uDDAD\\uDE42-\\uDE44]|\\uD83A[\\uDCD0-\\uDCD6]|\\uDB40[\\uDD00-\\uDDEF]/;\n\nfunction validateLabel(label, processing_option) {\n  if (label.substr(0, 4) === \"xn--\") {\n    label = punycode.toUnicode(label);\n    processing_option = PROCESSING_OPTIONS.NONTRANSITIONAL;\n  }\n\n  var error = false;\n\n  if (normalize(label) !== label ||\n      (label[3] === \"-\" && label[4] === \"-\") ||\n      label[0] === \"-\" || label[label.length - 1] === \"-\" ||\n      label.indexOf(\".\") !== -1 ||\n      label.search(combiningMarksRegex) === 0) {\n    error = true;\n  }\n\n  var len = countSymbols(label);\n  for (var i = 0; i < len; ++i) {\n    var status = findStatus(label.codePointAt(i));\n    if ((processing === PROCESSING_OPTIONS.TRANSITIONAL && status[1] !== \"valid\") ||\n        (processing === PROCESSING_OPTIONS.NONTRANSITIONAL &&\n         status[1] !== \"valid\" && status[1] !== \"deviation\")) {\n      error = true;\n      break;\n    }\n  }\n\n  return {\n    label: label,\n    error: error\n  };\n}\n\nfunction processing(domain_name, useSTD3, processing_option) {\n  var result = mapChars(domain_name, useSTD3, processing_option);\n  result.string = normalize(result.string);\n\n  var labels = result.string.split(\".\");\n  for (var i = 0; i < labels.length; ++i) {\n    try {\n      var validation = validateLabel(labels[i]);\n      labels[i] = validation.label;\n      result.error = result.error || validation.error;\n    } catch(e) {\n      result.error = true;\n    }\n  }\n\n  return {\n    string: labels.join(\".\"),\n    error: result.error\n  };\n}\n\nmodule.exports.toASCII = function(domain_name, useSTD3, processing_option, verifyDnsLength) {\n  var result = processing(domain_name, useSTD3, processing_option);\n  var labels = result.string.split(\".\");\n  labels = labels.map(function(l) {\n    try {\n      return punycode.toASCII(l);\n    } catch(e) {\n      result.error = true;\n      return l;\n    }\n  });\n\n  if (verifyDnsLength) {\n    var total = labels.slice(0, labels.length - 1).join(\".\").length;\n    if (total.length > 253 || total.length === 0) {\n      result.error = true;\n    }\n\n    for (var i=0; i < labels.length; ++i) {\n      if (labels.length > 63 || labels.length === 0) {\n        result.error = true;\n        break;\n      }\n    }\n  }\n\n  if (result.error) return null;\n  return labels.join(\".\");\n};\n\nmodule.exports.toUnicode = function(domain_name, useSTD3) {\n  var result = processing(domain_name, useSTD3, PROCESSING_OPTIONS.NONTRANSITIONAL);\n\n  return {\n    domain: result.string,\n    error: result.error\n  };\n};\n\nmodule.exports.PROCESSING_OPTIONS = PROCESSING_OPTIONS;\n","\"use strict\";\r\nconst punycode = require(\"punycode\");\r\nconst tr46 = require(\"tr46\");\r\n\r\nconst specialSchemes = {\r\n  ftp: 21,\r\n  file: null,\r\n  gopher: 70,\r\n  http: 80,\r\n  https: 443,\r\n  ws: 80,\r\n  wss: 443\r\n};\r\n\r\nconst failure = Symbol(\"failure\");\r\n\r\nfunction countSymbols(str) {\r\n  return punycode.ucs2.decode(str).length;\r\n}\r\n\r\nfunction at(input, idx) {\r\n  const c = input[idx];\r\n  return isNaN(c) ? undefined : String.fromCodePoint(c);\r\n}\r\n\r\nfunction isASCIIDigit(c) {\r\n  return c >= 0x30 && c <= 0x39;\r\n}\r\n\r\nfunction isASCIIAlpha(c) {\r\n  return (c >= 0x41 && c <= 0x5A) || (c >= 0x61 && c <= 0x7A);\r\n}\r\n\r\nfunction isASCIIAlphanumeric(c) {\r\n  return isASCIIAlpha(c) || isASCIIDigit(c);\r\n}\r\n\r\nfunction isASCIIHex(c) {\r\n  return isASCIIDigit(c) || (c >= 0x41 && c <= 0x46) || (c >= 0x61 && c <= 0x66);\r\n}\r\n\r\nfunction isSingleDot(buffer) {\r\n  return buffer === \".\" || buffer.toLowerCase() === \"%2e\";\r\n}\r\n\r\nfunction isDoubleDot(buffer) {\r\n  buffer = buffer.toLowerCase();\r\n  return buffer === \"..\" || buffer === \"%2e.\" || buffer === \".%2e\" || buffer === \"%2e%2e\";\r\n}\r\n\r\nfunction isWindowsDriveLetterCodePoints(cp1, cp2) {\r\n  return isASCIIAlpha(cp1) && (cp2 === 58 || cp2 === 124);\r\n}\r\n\r\nfunction isWindowsDriveLetterString(string) {\r\n  return string.length === 2 && isASCIIAlpha(string.codePointAt(0)) && (string[1] === \":\" || string[1] === \"|\");\r\n}\r\n\r\nfunction isNormalizedWindowsDriveLetterString(string) {\r\n  return string.length === 2 && isASCIIAlpha(string.codePointAt(0)) && string[1] === \":\";\r\n}\r\n\r\nfunction containsForbiddenHostCodePoint(string) {\r\n  return string.search(/\\u0000|\\u0009|\\u000A|\\u000D|\\u0020|#|%|\\/|:|\\?|@|\\[|\\\\|\\]/) !== -1;\r\n}\r\n\r\nfunction containsForbiddenHostCodePointExcludingPercent(string) {\r\n  return string.search(/\\u0000|\\u0009|\\u000A|\\u000D|\\u0020|#|\\/|:|\\?|@|\\[|\\\\|\\]/) !== -1;\r\n}\r\n\r\nfunction isSpecialScheme(scheme) {\r\n  return specialSchemes[scheme] !== undefined;\r\n}\r\n\r\nfunction isSpecial(url) {\r\n  return isSpecialScheme(url.scheme);\r\n}\r\n\r\nfunction defaultPort(scheme) {\r\n  return specialSchemes[scheme];\r\n}\r\n\r\nfunction percentEncode(c) {\r\n  let hex = c.toString(16).toUpperCase();\r\n  if (hex.length === 1) {\r\n    hex = \"0\" + hex;\r\n  }\r\n\r\n  return \"%\" + hex;\r\n}\r\n\r\nfunction utf8PercentEncode(c) {\r\n  const buf = new Buffer(c);\r\n\r\n  let str = \"\";\r\n\r\n  for (let i = 0; i < buf.length; ++i) {\r\n    str += percentEncode(buf[i]);\r\n  }\r\n\r\n  return str;\r\n}\r\n\r\nfunction utf8PercentDecode(str) {\r\n  const input = new Buffer(str);\r\n  const output = [];\r\n  for (let i = 0; i < input.length; ++i) {\r\n    if (input[i] !== 37) {\r\n      output.push(input[i]);\r\n    } else if (input[i] === 37 && isASCIIHex(input[i + 1]) && isASCIIHex(input[i + 2])) {\r\n      output.push(parseInt(input.slice(i + 1, i + 3).toString(), 16));\r\n      i += 2;\r\n    } else {\r\n      output.push(input[i]);\r\n    }\r\n  }\r\n  return new Buffer(output).toString();\r\n}\r\n\r\nfunction isC0ControlPercentEncode(c) {\r\n  return c <= 0x1F || c > 0x7E;\r\n}\r\n\r\nconst extraPathPercentEncodeSet = new Set([32, 34, 35, 60, 62, 63, 96, 123, 125]);\r\nfunction isPathPercentEncode(c) {\r\n  return isC0ControlPercentEncode(c) || extraPathPercentEncodeSet.has(c);\r\n}\r\n\r\nconst extraUserinfoPercentEncodeSet =\r\n  new Set([47, 58, 59, 61, 64, 91, 92, 93, 94, 124]);\r\nfunction isUserinfoPercentEncode(c) {\r\n  return isPathPercentEncode(c) || extraUserinfoPercentEncodeSet.has(c);\r\n}\r\n\r\nfunction percentEncodeChar(c, encodeSetPredicate) {\r\n  const cStr = String.fromCodePoint(c);\r\n\r\n  if (encodeSetPredicate(c)) {\r\n    return utf8PercentEncode(cStr);\r\n  }\r\n\r\n  return cStr;\r\n}\r\n\r\nfunction parseIPv4Number(input) {\r\n  let R = 10;\r\n\r\n  if (input.length >= 2 && input.charAt(0) === \"0\" && input.charAt(1).toLowerCase() === \"x\") {\r\n    input = input.substring(2);\r\n    R = 16;\r\n  } else if (input.length >= 2 && input.charAt(0) === \"0\") {\r\n    input = input.substring(1);\r\n    R = 8;\r\n  }\r\n\r\n  if (input === \"\") {\r\n    return 0;\r\n  }\r\n\r\n  const regex = R === 10 ? /[^0-9]/ : (R === 16 ? /[^0-9A-Fa-f]/ : /[^0-7]/);\r\n  if (regex.test(input)) {\r\n    return failure;\r\n  }\r\n\r\n  return parseInt(input, R);\r\n}\r\n\r\nfunction parseIPv4(input) {\r\n  const parts = input.split(\".\");\r\n  if (parts[parts.length - 1] === \"\") {\r\n    if (parts.length > 1) {\r\n      parts.pop();\r\n    }\r\n  }\r\n\r\n  if (parts.length > 4) {\r\n    return input;\r\n  }\r\n\r\n  const numbers = [];\r\n  for (const part of parts) {\r\n    if (part === \"\") {\r\n      return input;\r\n    }\r\n    const n = parseIPv4Number(part);\r\n    if (n === failure) {\r\n      return input;\r\n    }\r\n\r\n    numbers.push(n);\r\n  }\r\n\r\n  for (let i = 0; i < numbers.length - 1; ++i) {\r\n    if (numbers[i] > 255) {\r\n      return failure;\r\n    }\r\n  }\r\n  if (numbers[numbers.length - 1] >= Math.pow(256, 5 - numbers.length)) {\r\n    return failure;\r\n  }\r\n\r\n  let ipv4 = numbers.pop();\r\n  let counter = 0;\r\n\r\n  for (const n of numbers) {\r\n    ipv4 += n * Math.pow(256, 3 - counter);\r\n    ++counter;\r\n  }\r\n\r\n  return ipv4;\r\n}\r\n\r\nfunction serializeIPv4(address) {\r\n  let output = \"\";\r\n  let n = address;\r\n\r\n  for (let i = 1; i <= 4; ++i) {\r\n    output = String(n % 256) + output;\r\n    if (i !== 4) {\r\n      output = \".\" + output;\r\n    }\r\n    n = Math.floor(n / 256);\r\n  }\r\n\r\n  return output;\r\n}\r\n\r\nfunction parseIPv6(input) {\r\n  const address = [0, 0, 0, 0, 0, 0, 0, 0];\r\n  let pieceIndex = 0;\r\n  let compress = null;\r\n  let pointer = 0;\r\n\r\n  input = punycode.ucs2.decode(input);\r\n\r\n  if (input[pointer] === 58) {\r\n    if (input[pointer + 1] !== 58) {\r\n      return failure;\r\n    }\r\n\r\n    pointer += 2;\r\n    ++pieceIndex;\r\n    compress = pieceIndex;\r\n  }\r\n\r\n  while (pointer < input.length) {\r\n    if (pieceIndex === 8) {\r\n      return failure;\r\n    }\r\n\r\n    if (input[pointer] === 58) {\r\n      if (compress !== null) {\r\n        return failure;\r\n      }\r\n      ++pointer;\r\n      ++pieceIndex;\r\n      compress = pieceIndex;\r\n      continue;\r\n    }\r\n\r\n    let value = 0;\r\n    let length = 0;\r\n\r\n    while (length < 4 && isASCIIHex(input[pointer])) {\r\n      value = value * 0x10 + parseInt(at(input, pointer), 16);\r\n      ++pointer;\r\n      ++length;\r\n    }\r\n\r\n    if (input[pointer] === 46) {\r\n      if (length === 0) {\r\n        return failure;\r\n      }\r\n\r\n      pointer -= length;\r\n\r\n      if (pieceIndex > 6) {\r\n        return failure;\r\n      }\r\n\r\n      let numbersSeen = 0;\r\n\r\n      while (input[pointer] !== undefined) {\r\n        let ipv4Piece = null;\r\n\r\n        if (numbersSeen > 0) {\r\n          if (input[pointer] === 46 && numbersSeen < 4) {\r\n            ++pointer;\r\n          } else {\r\n            return failure;\r\n          }\r\n        }\r\n\r\n        if (!isASCIIDigit(input[pointer])) {\r\n          return failure;\r\n        }\r\n\r\n        while (isASCIIDigit(input[pointer])) {\r\n          const number = parseInt(at(input, pointer));\r\n          if (ipv4Piece === null) {\r\n            ipv4Piece = number;\r\n          } else if (ipv4Piece === 0) {\r\n            return failure;\r\n          } else {\r\n            ipv4Piece = ipv4Piece * 10 + number;\r\n          }\r\n          if (ipv4Piece > 255) {\r\n            return failure;\r\n          }\r\n          ++pointer;\r\n        }\r\n\r\n        address[pieceIndex] = address[pieceIndex] * 0x100 + ipv4Piece;\r\n\r\n        ++numbersSeen;\r\n\r\n        if (numbersSeen === 2 || numbersSeen === 4) {\r\n          ++pieceIndex;\r\n        }\r\n      }\r\n\r\n      if (numbersSeen !== 4) {\r\n        return failure;\r\n      }\r\n\r\n      break;\r\n    } else if (input[pointer] === 58) {\r\n      ++pointer;\r\n      if (input[pointer] === undefined) {\r\n        return failure;\r\n      }\r\n    } else if (input[pointer] !== undefined) {\r\n      return failure;\r\n    }\r\n\r\n    address[pieceIndex] = value;\r\n    ++pieceIndex;\r\n  }\r\n\r\n  if (compress !== null) {\r\n    let swaps = pieceIndex - compress;\r\n    pieceIndex = 7;\r\n    while (pieceIndex !== 0 && swaps > 0) {\r\n      const temp = address[compress + swaps - 1];\r\n      address[compress + swaps - 1] = address[pieceIndex];\r\n      address[pieceIndex] = temp;\r\n      --pieceIndex;\r\n      --swaps;\r\n    }\r\n  } else if (compress === null && pieceIndex !== 8) {\r\n    return failure;\r\n  }\r\n\r\n  return address;\r\n}\r\n\r\nfunction serializeIPv6(address) {\r\n  let output = \"\";\r\n  const seqResult = findLongestZeroSequence(address);\r\n  const compress = seqResult.idx;\r\n  let ignore0 = false;\r\n\r\n  for (let pieceIndex = 0; pieceIndex <= 7; ++pieceIndex) {\r\n    if (ignore0 && address[pieceIndex] === 0) {\r\n      continue;\r\n    } else if (ignore0) {\r\n      ignore0 = false;\r\n    }\r\n\r\n    if (compress === pieceIndex) {\r\n      const separator = pieceIndex === 0 ? \"::\" : \":\";\r\n      output += separator;\r\n      ignore0 = true;\r\n      continue;\r\n    }\r\n\r\n    output += address[pieceIndex].toString(16);\r\n\r\n    if (pieceIndex !== 7) {\r\n      output += \":\";\r\n    }\r\n  }\r\n\r\n  return output;\r\n}\r\n\r\nfunction parseHost(input, isSpecialArg) {\r\n  if (input[0] === \"[\") {\r\n    if (input[input.length - 1] !== \"]\") {\r\n      return failure;\r\n    }\r\n\r\n    return parseIPv6(input.substring(1, input.length - 1));\r\n  }\r\n\r\n  if (!isSpecialArg) {\r\n    return parseOpaqueHost(input);\r\n  }\r\n\r\n  const domain = utf8PercentDecode(input);\r\n  const asciiDomain = tr46.toASCII(domain, false, tr46.PROCESSING_OPTIONS.NONTRANSITIONAL, false);\r\n  if (asciiDomain === null) {\r\n    return failure;\r\n  }\r\n\r\n  if (containsForbiddenHostCodePoint(asciiDomain)) {\r\n    return failure;\r\n  }\r\n\r\n  const ipv4Host = parseIPv4(asciiDomain);\r\n  if (typeof ipv4Host === \"number\" || ipv4Host === failure) {\r\n    return ipv4Host;\r\n  }\r\n\r\n  return asciiDomain;\r\n}\r\n\r\nfunction parseOpaqueHost(input) {\r\n  if (containsForbiddenHostCodePointExcludingPercent(input)) {\r\n    return failure;\r\n  }\r\n\r\n  let output = \"\";\r\n  const decoded = punycode.ucs2.decode(input);\r\n  for (let i = 0; i < decoded.length; ++i) {\r\n    output += percentEncodeChar(decoded[i], isC0ControlPercentEncode);\r\n  }\r\n  return output;\r\n}\r\n\r\nfunction findLongestZeroSequence(arr) {\r\n  let maxIdx = null;\r\n  let maxLen = 1; // only find elements > 1\r\n  let currStart = null;\r\n  let currLen = 0;\r\n\r\n  for (let i = 0; i < arr.length; ++i) {\r\n    if (arr[i] !== 0) {\r\n      if (currLen > maxLen) {\r\n        maxIdx = currStart;\r\n        maxLen = currLen;\r\n      }\r\n\r\n      currStart = null;\r\n      currLen = 0;\r\n    } else {\r\n      if (currStart === null) {\r\n        currStart = i;\r\n      }\r\n      ++currLen;\r\n    }\r\n  }\r\n\r\n  // if trailing zeros\r\n  if (currLen > maxLen) {\r\n    maxIdx = currStart;\r\n    maxLen = currLen;\r\n  }\r\n\r\n  return {\r\n    idx: maxIdx,\r\n    len: maxLen\r\n  };\r\n}\r\n\r\nfunction serializeHost(host) {\r\n  if (typeof host === \"number\") {\r\n    return serializeIPv4(host);\r\n  }\r\n\r\n  // IPv6 serializer\r\n  if (host instanceof Array) {\r\n    return \"[\" + serializeIPv6(host) + \"]\";\r\n  }\r\n\r\n  return host;\r\n}\r\n\r\nfunction trimControlChars(url) {\r\n  return url.replace(/^[\\u0000-\\u001F\\u0020]+|[\\u0000-\\u001F\\u0020]+$/g, \"\");\r\n}\r\n\r\nfunction trimTabAndNewline(url) {\r\n  return url.replace(/\\u0009|\\u000A|\\u000D/g, \"\");\r\n}\r\n\r\nfunction shortenPath(url) {\r\n  const path = url.path;\r\n  if (path.length === 0) {\r\n    return;\r\n  }\r\n  if (url.scheme === \"file\" && path.length === 1 && isNormalizedWindowsDriveLetter(path[0])) {\r\n    return;\r\n  }\r\n\r\n  path.pop();\r\n}\r\n\r\nfunction includesCredentials(url) {\r\n  return url.username !== \"\" || url.password !== \"\";\r\n}\r\n\r\nfunction cannotHaveAUsernamePasswordPort(url) {\r\n  return url.host === null || url.host === \"\" || url.cannotBeABaseURL || url.scheme === \"file\";\r\n}\r\n\r\nfunction isNormalizedWindowsDriveLetter(string) {\r\n  return /^[A-Za-z]:$/.test(string);\r\n}\r\n\r\nfunction URLStateMachine(input, base, encodingOverride, url, stateOverride) {\r\n  this.pointer = 0;\r\n  this.input = input;\r\n  this.base = base || null;\r\n  this.encodingOverride = encodingOverride || \"utf-8\";\r\n  this.stateOverride = stateOverride;\r\n  this.url = url;\r\n  this.failure = false;\r\n  this.parseError = false;\r\n\r\n  if (!this.url) {\r\n    this.url = {\r\n      scheme: \"\",\r\n      username: \"\",\r\n      password: \"\",\r\n      host: null,\r\n      port: null,\r\n      path: [],\r\n      query: null,\r\n      fragment: null,\r\n\r\n      cannotBeABaseURL: false\r\n    };\r\n\r\n    const res = trimControlChars(this.input);\r\n    if (res !== this.input) {\r\n      this.parseError = true;\r\n    }\r\n    this.input = res;\r\n  }\r\n\r\n  const res = trimTabAndNewline(this.input);\r\n  if (res !== this.input) {\r\n    this.parseError = true;\r\n  }\r\n  this.input = res;\r\n\r\n  this.state = stateOverride || \"scheme start\";\r\n\r\n  this.buffer = \"\";\r\n  this.atFlag = false;\r\n  this.arrFlag = false;\r\n  this.passwordTokenSeenFlag = false;\r\n\r\n  this.input = punycode.ucs2.decode(this.input);\r\n\r\n  for (; this.pointer <= this.input.length; ++this.pointer) {\r\n    const c = this.input[this.pointer];\r\n    const cStr = isNaN(c) ? undefined : String.fromCodePoint(c);\r\n\r\n    // exec state machine\r\n    const ret = this[\"parse \" + this.state](c, cStr);\r\n    if (!ret) {\r\n      break; // terminate algorithm\r\n    } else if (ret === failure) {\r\n      this.failure = true;\r\n      break;\r\n    }\r\n  }\r\n}\r\n\r\nURLStateMachine.prototype[\"parse scheme start\"] = function parseSchemeStart(c, cStr) {\r\n  if (isASCIIAlpha(c)) {\r\n    this.buffer += cStr.toLowerCase();\r\n    this.state = \"scheme\";\r\n  } else if (!this.stateOverride) {\r\n    this.state = \"no scheme\";\r\n    --this.pointer;\r\n  } else {\r\n    this.parseError = true;\r\n    return failure;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse scheme\"] = function parseScheme(c, cStr) {\r\n  if (isASCIIAlphanumeric(c) || c === 43 || c === 45 || c === 46) {\r\n    this.buffer += cStr.toLowerCase();\r\n  } else if (c === 58) {\r\n    if (this.stateOverride) {\r\n      if (isSpecial(this.url) && !isSpecialScheme(this.buffer)) {\r\n        return false;\r\n      }\r\n\r\n      if (!isSpecial(this.url) && isSpecialScheme(this.buffer)) {\r\n        return false;\r\n      }\r\n\r\n      if ((includesCredentials(this.url) || this.url.port !== null) && this.buffer === \"file\") {\r\n        return false;\r\n      }\r\n\r\n      if (this.url.scheme === \"file\" && (this.url.host === \"\" || this.url.host === null)) {\r\n        return false;\r\n      }\r\n    }\r\n    this.url.scheme = this.buffer;\r\n    this.buffer = \"\";\r\n    if (this.stateOverride) {\r\n      return false;\r\n    }\r\n    if (this.url.scheme === \"file\") {\r\n      if (this.input[this.pointer + 1] !== 47 || this.input[this.pointer + 2] !== 47) {\r\n        this.parseError = true;\r\n      }\r\n      this.state = \"file\";\r\n    } else if (isSpecial(this.url) && this.base !== null && this.base.scheme === this.url.scheme) {\r\n      this.state = \"special relative or authority\";\r\n    } else if (isSpecial(this.url)) {\r\n      this.state = \"special authority slashes\";\r\n    } else if (this.input[this.pointer + 1] === 47) {\r\n      this.state = \"path or authority\";\r\n      ++this.pointer;\r\n    } else {\r\n      this.url.cannotBeABaseURL = true;\r\n      this.url.path.push(\"\");\r\n      this.state = \"cannot-be-a-base-URL path\";\r\n    }\r\n  } else if (!this.stateOverride) {\r\n    this.buffer = \"\";\r\n    this.state = \"no scheme\";\r\n    this.pointer = -1;\r\n  } else {\r\n    this.parseError = true;\r\n    return failure;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse no scheme\"] = function parseNoScheme(c) {\r\n  if (this.base === null || (this.base.cannotBeABaseURL && c !== 35)) {\r\n    return failure;\r\n  } else if (this.base.cannotBeABaseURL && c === 35) {\r\n    this.url.scheme = this.base.scheme;\r\n    this.url.path = this.base.path.slice();\r\n    this.url.query = this.base.query;\r\n    this.url.fragment = \"\";\r\n    this.url.cannotBeABaseURL = true;\r\n    this.state = \"fragment\";\r\n  } else if (this.base.scheme === \"file\") {\r\n    this.state = \"file\";\r\n    --this.pointer;\r\n  } else {\r\n    this.state = \"relative\";\r\n    --this.pointer;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse special relative or authority\"] = function parseSpecialRelativeOrAuthority(c) {\r\n  if (c === 47 && this.input[this.pointer + 1] === 47) {\r\n    this.state = \"special authority ignore slashes\";\r\n    ++this.pointer;\r\n  } else {\r\n    this.parseError = true;\r\n    this.state = \"relative\";\r\n    --this.pointer;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse path or authority\"] = function parsePathOrAuthority(c) {\r\n  if (c === 47) {\r\n    this.state = \"authority\";\r\n  } else {\r\n    this.state = \"path\";\r\n    --this.pointer;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse relative\"] = function parseRelative(c) {\r\n  this.url.scheme = this.base.scheme;\r\n  if (isNaN(c)) {\r\n    this.url.username = this.base.username;\r\n    this.url.password = this.base.password;\r\n    this.url.host = this.base.host;\r\n    this.url.port = this.base.port;\r\n    this.url.path = this.base.path.slice();\r\n    this.url.query = this.base.query;\r\n  } else if (c === 47) {\r\n    this.state = \"relative slash\";\r\n  } else if (c === 63) {\r\n    this.url.username = this.base.username;\r\n    this.url.password = this.base.password;\r\n    this.url.host = this.base.host;\r\n    this.url.port = this.base.port;\r\n    this.url.path = this.base.path.slice();\r\n    this.url.query = \"\";\r\n    this.state = \"query\";\r\n  } else if (c === 35) {\r\n    this.url.username = this.base.username;\r\n    this.url.password = this.base.password;\r\n    this.url.host = this.base.host;\r\n    this.url.port = this.base.port;\r\n    this.url.path = this.base.path.slice();\r\n    this.url.query = this.base.query;\r\n    this.url.fragment = \"\";\r\n    this.state = \"fragment\";\r\n  } else if (isSpecial(this.url) && c === 92) {\r\n    this.parseError = true;\r\n    this.state = \"relative slash\";\r\n  } else {\r\n    this.url.username = this.base.username;\r\n    this.url.password = this.base.password;\r\n    this.url.host = this.base.host;\r\n    this.url.port = this.base.port;\r\n    this.url.path = this.base.path.slice(0, this.base.path.length - 1);\r\n\r\n    this.state = \"path\";\r\n    --this.pointer;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse relative slash\"] = function parseRelativeSlash(c) {\r\n  if (isSpecial(this.url) && (c === 47 || c === 92)) {\r\n    if (c === 92) {\r\n      this.parseError = true;\r\n    }\r\n    this.state = \"special authority ignore slashes\";\r\n  } else if (c === 47) {\r\n    this.state = \"authority\";\r\n  } else {\r\n    this.url.username = this.base.username;\r\n    this.url.password = this.base.password;\r\n    this.url.host = this.base.host;\r\n    this.url.port = this.base.port;\r\n    this.state = \"path\";\r\n    --this.pointer;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse special authority slashes\"] = function parseSpecialAuthoritySlashes(c) {\r\n  if (c === 47 && this.input[this.pointer + 1] === 47) {\r\n    this.state = \"special authority ignore slashes\";\r\n    ++this.pointer;\r\n  } else {\r\n    this.parseError = true;\r\n    this.state = \"special authority ignore slashes\";\r\n    --this.pointer;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse special authority ignore slashes\"] = function parseSpecialAuthorityIgnoreSlashes(c) {\r\n  if (c !== 47 && c !== 92) {\r\n    this.state = \"authority\";\r\n    --this.pointer;\r\n  } else {\r\n    this.parseError = true;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse authority\"] = function parseAuthority(c, cStr) {\r\n  if (c === 64) {\r\n    this.parseError = true;\r\n    if (this.atFlag) {\r\n      this.buffer = \"%40\" + this.buffer;\r\n    }\r\n    this.atFlag = true;\r\n\r\n    // careful, this is based on buffer and has its own pointer (this.pointer != pointer) and inner chars\r\n    const len = countSymbols(this.buffer);\r\n    for (let pointer = 0; pointer < len; ++pointer) {\r\n      const codePoint = this.buffer.codePointAt(pointer);\r\n\r\n      if (codePoint === 58 && !this.passwordTokenSeenFlag) {\r\n        this.passwordTokenSeenFlag = true;\r\n        continue;\r\n      }\r\n      const encodedCodePoints = percentEncodeChar(codePoint, isUserinfoPercentEncode);\r\n      if (this.passwordTokenSeenFlag) {\r\n        this.url.password += encodedCodePoints;\r\n      } else {\r\n        this.url.username += encodedCodePoints;\r\n      }\r\n    }\r\n    this.buffer = \"\";\r\n  } else if (isNaN(c) || c === 47 || c === 63 || c === 35 ||\r\n             (isSpecial(this.url) && c === 92)) {\r\n    if (this.atFlag && this.buffer === \"\") {\r\n      this.parseError = true;\r\n      return failure;\r\n    }\r\n    this.pointer -= countSymbols(this.buffer) + 1;\r\n    this.buffer = \"\";\r\n    this.state = \"host\";\r\n  } else {\r\n    this.buffer += cStr;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse hostname\"] =\r\nURLStateMachine.prototype[\"parse host\"] = function parseHostName(c, cStr) {\r\n  if (this.stateOverride && this.url.scheme === \"file\") {\r\n    --this.pointer;\r\n    this.state = \"file host\";\r\n  } else if (c === 58 && !this.arrFlag) {\r\n    if (this.buffer === \"\") {\r\n      this.parseError = true;\r\n      return failure;\r\n    }\r\n\r\n    const host = parseHost(this.buffer, isSpecial(this.url));\r\n    if (host === failure) {\r\n      return failure;\r\n    }\r\n\r\n    this.url.host = host;\r\n    this.buffer = \"\";\r\n    this.state = \"port\";\r\n    if (this.stateOverride === \"hostname\") {\r\n      return false;\r\n    }\r\n  } else if (isNaN(c) || c === 47 || c === 63 || c === 35 ||\r\n             (isSpecial(this.url) && c === 92)) {\r\n    --this.pointer;\r\n    if (isSpecial(this.url) && this.buffer === \"\") {\r\n      this.parseError = true;\r\n      return failure;\r\n    } else if (this.stateOverride && this.buffer === \"\" &&\r\n               (includesCredentials(this.url) || this.url.port !== null)) {\r\n      this.parseError = true;\r\n      return false;\r\n    }\r\n\r\n    const host = parseHost(this.buffer, isSpecial(this.url));\r\n    if (host === failure) {\r\n      return failure;\r\n    }\r\n\r\n    this.url.host = host;\r\n    this.buffer = \"\";\r\n    this.state = \"path start\";\r\n    if (this.stateOverride) {\r\n      return false;\r\n    }\r\n  } else {\r\n    if (c === 91) {\r\n      this.arrFlag = true;\r\n    } else if (c === 93) {\r\n      this.arrFlag = false;\r\n    }\r\n    this.buffer += cStr;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse port\"] = function parsePort(c, cStr) {\r\n  if (isASCIIDigit(c)) {\r\n    this.buffer += cStr;\r\n  } else if (isNaN(c) || c === 47 || c === 63 || c === 35 ||\r\n             (isSpecial(this.url) && c === 92) ||\r\n             this.stateOverride) {\r\n    if (this.buffer !== \"\") {\r\n      const port = parseInt(this.buffer);\r\n      if (port > Math.pow(2, 16) - 1) {\r\n        this.parseError = true;\r\n        return failure;\r\n      }\r\n      this.url.port = port === defaultPort(this.url.scheme) ? null : port;\r\n      this.buffer = \"\";\r\n    }\r\n    if (this.stateOverride) {\r\n      return false;\r\n    }\r\n    this.state = \"path start\";\r\n    --this.pointer;\r\n  } else {\r\n    this.parseError = true;\r\n    return failure;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nconst fileOtherwiseCodePoints = new Set([47, 92, 63, 35]);\r\n\r\nURLStateMachine.prototype[\"parse file\"] = function parseFile(c) {\r\n  this.url.scheme = \"file\";\r\n\r\n  if (c === 47 || c === 92) {\r\n    if (c === 92) {\r\n      this.parseError = true;\r\n    }\r\n    this.state = \"file slash\";\r\n  } else if (this.base !== null && this.base.scheme === \"file\") {\r\n    if (isNaN(c)) {\r\n      this.url.host = this.base.host;\r\n      this.url.path = this.base.path.slice();\r\n      this.url.query = this.base.query;\r\n    } else if (c === 63) {\r\n      this.url.host = this.base.host;\r\n      this.url.path = this.base.path.slice();\r\n      this.url.query = \"\";\r\n      this.state = \"query\";\r\n    } else if (c === 35) {\r\n      this.url.host = this.base.host;\r\n      this.url.path = this.base.path.slice();\r\n      this.url.query = this.base.query;\r\n      this.url.fragment = \"\";\r\n      this.state = \"fragment\";\r\n    } else {\r\n      if (this.input.length - this.pointer - 1 === 0 || // remaining consists of 0 code points\r\n          !isWindowsDriveLetterCodePoints(c, this.input[this.pointer + 1]) ||\r\n          (this.input.length - this.pointer - 1 >= 2 && // remaining has at least 2 code points\r\n           !fileOtherwiseCodePoints.has(this.input[this.pointer + 2]))) {\r\n        this.url.host = this.base.host;\r\n        this.url.path = this.base.path.slice();\r\n        shortenPath(this.url);\r\n      } else {\r\n        this.parseError = true;\r\n      }\r\n\r\n      this.state = \"path\";\r\n      --this.pointer;\r\n    }\r\n  } else {\r\n    this.state = \"path\";\r\n    --this.pointer;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse file slash\"] = function parseFileSlash(c) {\r\n  if (c === 47 || c === 92) {\r\n    if (c === 92) {\r\n      this.parseError = true;\r\n    }\r\n    this.state = \"file host\";\r\n  } else {\r\n    if (this.base !== null && this.base.scheme === \"file\") {\r\n      if (isNormalizedWindowsDriveLetterString(this.base.path[0])) {\r\n        this.url.path.push(this.base.path[0]);\r\n      } else {\r\n        this.url.host = this.base.host;\r\n      }\r\n    }\r\n    this.state = \"path\";\r\n    --this.pointer;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse file host\"] = function parseFileHost(c, cStr) {\r\n  if (isNaN(c) || c === 47 || c === 92 || c === 63 || c === 35) {\r\n    --this.pointer;\r\n    if (!this.stateOverride && isWindowsDriveLetterString(this.buffer)) {\r\n      this.parseError = true;\r\n      this.state = \"path\";\r\n    } else if (this.buffer === \"\") {\r\n      this.url.host = \"\";\r\n      if (this.stateOverride) {\r\n        return false;\r\n      }\r\n      this.state = \"path start\";\r\n    } else {\r\n      let host = parseHost(this.buffer, isSpecial(this.url));\r\n      if (host === failure) {\r\n        return failure;\r\n      }\r\n      if (host === \"localhost\") {\r\n        host = \"\";\r\n      }\r\n      this.url.host = host;\r\n\r\n      if (this.stateOverride) {\r\n        return false;\r\n      }\r\n\r\n      this.buffer = \"\";\r\n      this.state = \"path start\";\r\n    }\r\n  } else {\r\n    this.buffer += cStr;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse path start\"] = function parsePathStart(c) {\r\n  if (isSpecial(this.url)) {\r\n    if (c === 92) {\r\n      this.parseError = true;\r\n    }\r\n    this.state = \"path\";\r\n\r\n    if (c !== 47 && c !== 92) {\r\n      --this.pointer;\r\n    }\r\n  } else if (!this.stateOverride && c === 63) {\r\n    this.url.query = \"\";\r\n    this.state = \"query\";\r\n  } else if (!this.stateOverride && c === 35) {\r\n    this.url.fragment = \"\";\r\n    this.state = \"fragment\";\r\n  } else if (c !== undefined) {\r\n    this.state = \"path\";\r\n    if (c !== 47) {\r\n      --this.pointer;\r\n    }\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse path\"] = function parsePath(c) {\r\n  if (isNaN(c) || c === 47 || (isSpecial(this.url) && c === 92) ||\r\n      (!this.stateOverride && (c === 63 || c === 35))) {\r\n    if (isSpecial(this.url) && c === 92) {\r\n      this.parseError = true;\r\n    }\r\n\r\n    if (isDoubleDot(this.buffer)) {\r\n      shortenPath(this.url);\r\n      if (c !== 47 && !(isSpecial(this.url) && c === 92)) {\r\n        this.url.path.push(\"\");\r\n      }\r\n    } else if (isSingleDot(this.buffer) && c !== 47 &&\r\n               !(isSpecial(this.url) && c === 92)) {\r\n      this.url.path.push(\"\");\r\n    } else if (!isSingleDot(this.buffer)) {\r\n      if (this.url.scheme === \"file\" && this.url.path.length === 0 && isWindowsDriveLetterString(this.buffer)) {\r\n        if (this.url.host !== \"\" && this.url.host !== null) {\r\n          this.parseError = true;\r\n          this.url.host = \"\";\r\n        }\r\n        this.buffer = this.buffer[0] + \":\";\r\n      }\r\n      this.url.path.push(this.buffer);\r\n    }\r\n    this.buffer = \"\";\r\n    if (this.url.scheme === \"file\" && (c === undefined || c === 63 || c === 35)) {\r\n      while (this.url.path.length > 1 && this.url.path[0] === \"\") {\r\n        this.parseError = true;\r\n        this.url.path.shift();\r\n      }\r\n    }\r\n    if (c === 63) {\r\n      this.url.query = \"\";\r\n      this.state = \"query\";\r\n    }\r\n    if (c === 35) {\r\n      this.url.fragment = \"\";\r\n      this.state = \"fragment\";\r\n    }\r\n  } else {\r\n    // TODO: If c is not a URL code point and not \"%\", parse error.\r\n\r\n    if (c === 37 &&\r\n      (!isASCIIHex(this.input[this.pointer + 1]) ||\r\n        !isASCIIHex(this.input[this.pointer + 2]))) {\r\n      this.parseError = true;\r\n    }\r\n\r\n    this.buffer += percentEncodeChar(c, isPathPercentEncode);\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse cannot-be-a-base-URL path\"] = function parseCannotBeABaseURLPath(c) {\r\n  if (c === 63) {\r\n    this.url.query = \"\";\r\n    this.state = \"query\";\r\n  } else if (c === 35) {\r\n    this.url.fragment = \"\";\r\n    this.state = \"fragment\";\r\n  } else {\r\n    // TODO: Add: not a URL code point\r\n    if (!isNaN(c) && c !== 37) {\r\n      this.parseError = true;\r\n    }\r\n\r\n    if (c === 37 &&\r\n        (!isASCIIHex(this.input[this.pointer + 1]) ||\r\n         !isASCIIHex(this.input[this.pointer + 2]))) {\r\n      this.parseError = true;\r\n    }\r\n\r\n    if (!isNaN(c)) {\r\n      this.url.path[0] = this.url.path[0] + percentEncodeChar(c, isC0ControlPercentEncode);\r\n    }\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse query\"] = function parseQuery(c, cStr) {\r\n  if (isNaN(c) || (!this.stateOverride && c === 35)) {\r\n    if (!isSpecial(this.url) || this.url.scheme === \"ws\" || this.url.scheme === \"wss\") {\r\n      this.encodingOverride = \"utf-8\";\r\n    }\r\n\r\n    const buffer = new Buffer(this.buffer); // TODO: Use encoding override instead\r\n    for (let i = 0; i < buffer.length; ++i) {\r\n      if (buffer[i] < 0x21 || buffer[i] > 0x7E || buffer[i] === 0x22 || buffer[i] === 0x23 ||\r\n          buffer[i] === 0x3C || buffer[i] === 0x3E) {\r\n        this.url.query += percentEncode(buffer[i]);\r\n      } else {\r\n        this.url.query += String.fromCodePoint(buffer[i]);\r\n      }\r\n    }\r\n\r\n    this.buffer = \"\";\r\n    if (c === 35) {\r\n      this.url.fragment = \"\";\r\n      this.state = \"fragment\";\r\n    }\r\n  } else {\r\n    // TODO: If c is not a URL code point and not \"%\", parse error.\r\n    if (c === 37 &&\r\n      (!isASCIIHex(this.input[this.pointer + 1]) ||\r\n        !isASCIIHex(this.input[this.pointer + 2]))) {\r\n      this.parseError = true;\r\n    }\r\n\r\n    this.buffer += cStr;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse fragment\"] = function parseFragment(c) {\r\n  if (isNaN(c)) { // do nothing\r\n  } else if (c === 0x0) {\r\n    this.parseError = true;\r\n  } else {\r\n    // TODO: If c is not a URL code point and not \"%\", parse error.\r\n    if (c === 37 &&\r\n      (!isASCIIHex(this.input[this.pointer + 1]) ||\r\n        !isASCIIHex(this.input[this.pointer + 2]))) {\r\n      this.parseError = true;\r\n    }\r\n\r\n    this.url.fragment += percentEncodeChar(c, isC0ControlPercentEncode);\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nfunction serializeURL(url, excludeFragment) {\r\n  let output = url.scheme + \":\";\r\n  if (url.host !== null) {\r\n    output += \"//\";\r\n\r\n    if (url.username !== \"\" || url.password !== \"\") {\r\n      output += url.username;\r\n      if (url.password !== \"\") {\r\n        output += \":\" + url.password;\r\n      }\r\n      output += \"@\";\r\n    }\r\n\r\n    output += serializeHost(url.host);\r\n\r\n    if (url.port !== null) {\r\n      output += \":\" + url.port;\r\n    }\r\n  } else if (url.host === null && url.scheme === \"file\") {\r\n    output += \"//\";\r\n  }\r\n\r\n  if (url.cannotBeABaseURL) {\r\n    output += url.path[0];\r\n  } else {\r\n    for (const string of url.path) {\r\n      output += \"/\" + string;\r\n    }\r\n  }\r\n\r\n  if (url.query !== null) {\r\n    output += \"?\" + url.query;\r\n  }\r\n\r\n  if (!excludeFragment && url.fragment !== null) {\r\n    output += \"#\" + url.fragment;\r\n  }\r\n\r\n  return output;\r\n}\r\n\r\nfunction serializeOrigin(tuple) {\r\n  let result = tuple.scheme + \"://\";\r\n  result += serializeHost(tuple.host);\r\n\r\n  if (tuple.port !== null) {\r\n    result += \":\" + tuple.port;\r\n  }\r\n\r\n  return result;\r\n}\r\n\r\nmodule.exports.serializeURL = serializeURL;\r\n\r\nmodule.exports.serializeURLOrigin = function (url) {\r\n  // https://url.spec.whatwg.org/#concept-url-origin\r\n  switch (url.scheme) {\r\n    case \"blob\":\r\n      try {\r\n        return module.exports.serializeURLOrigin(module.exports.parseURL(url.path[0]));\r\n      } catch (e) {\r\n        // serializing an opaque origin returns \"null\"\r\n        return \"null\";\r\n      }\r\n    case \"ftp\":\r\n    case \"gopher\":\r\n    case \"http\":\r\n    case \"https\":\r\n    case \"ws\":\r\n    case \"wss\":\r\n      return serializeOrigin({\r\n        scheme: url.scheme,\r\n        host: url.host,\r\n        port: url.port\r\n      });\r\n    case \"file\":\r\n      // spec says \"exercise to the reader\", chrome says \"file://\"\r\n      return \"file://\";\r\n    default:\r\n      // serializing an opaque origin returns \"null\"\r\n      return \"null\";\r\n  }\r\n};\r\n\r\nmodule.exports.basicURLParse = function (input, options) {\r\n  if (options === undefined) {\r\n    options = {};\r\n  }\r\n\r\n  const usm = new URLStateMachine(input, options.baseURL, options.encodingOverride, options.url, options.stateOverride);\r\n  if (usm.failure) {\r\n    return \"failure\";\r\n  }\r\n\r\n  return usm.url;\r\n};\r\n\r\nmodule.exports.setTheUsername = function (url, username) {\r\n  url.username = \"\";\r\n  const decoded = punycode.ucs2.decode(username);\r\n  for (let i = 0; i < decoded.length; ++i) {\r\n    url.username += percentEncodeChar(decoded[i], isUserinfoPercentEncode);\r\n  }\r\n};\r\n\r\nmodule.exports.setThePassword = function (url, password) {\r\n  url.password = \"\";\r\n  const decoded = punycode.ucs2.decode(password);\r\n  for (let i = 0; i < decoded.length; ++i) {\r\n    url.password += percentEncodeChar(decoded[i], isUserinfoPercentEncode);\r\n  }\r\n};\r\n\r\nmodule.exports.serializeHost = serializeHost;\r\n\r\nmodule.exports.cannotHaveAUsernamePasswordPort = cannotHaveAUsernamePasswordPort;\r\n\r\nmodule.exports.serializeInteger = function (integer) {\r\n  return String(integer);\r\n};\r\n\r\nmodule.exports.parseURL = function (input, options) {\r\n  if (options === undefined) {\r\n    options = {};\r\n  }\r\n\r\n  // We don't handle blobs, so this just delegates:\r\n  return module.exports.basicURLParse(input, { baseURL: options.baseURL, encodingOverride: options.encodingOverride });\r\n};\r\n","\"use strict\";\n\nconst conversions = require(\"webidl-conversions\");\nconst utils = require(\"./utils.js\");\nconst Impl = require(\".//URL-impl.js\");\n\nconst impl = utils.implSymbol;\n\nfunction URL(url) {\n  if (!this || this[impl] || !(this instanceof URL)) {\n    throw new TypeError(\"Failed to construct 'URL': Please use the 'new' operator, this DOM object constructor cannot be called as a function.\");\n  }\n  if (arguments.length < 1) {\n    throw new TypeError(\"Failed to construct 'URL': 1 argument required, but only \" + arguments.length + \" present.\");\n  }\n  const args = [];\n  for (let i = 0; i < arguments.length && i < 2; ++i) {\n    args[i] = arguments[i];\n  }\n  args[0] = conversions[\"USVString\"](args[0]);\n  if (args[1] !== undefined) {\n  args[1] = conversions[\"USVString\"](args[1]);\n  }\n\n  module.exports.setup(this, args);\n}\n\nURL.prototype.toJSON = function toJSON() {\n  if (!this || !module.exports.is(this)) {\n    throw new TypeError(\"Illegal invocation\");\n  }\n  const args = [];\n  for (let i = 0; i < arguments.length && i < 0; ++i) {\n    args[i] = arguments[i];\n  }\n  return this[impl].toJSON.apply(this[impl], args);\n};\nObject.defineProperty(URL.prototype, \"href\", {\n  get() {\n    return this[impl].href;\n  },\n  set(V) {\n    V = conversions[\"USVString\"](V);\n    this[impl].href = V;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nURL.prototype.toString = function () {\n  if (!this || !module.exports.is(this)) {\n    throw new TypeError(\"Illegal invocation\");\n  }\n  return this.href;\n};\n\nObject.defineProperty(URL.prototype, \"origin\", {\n  get() {\n    return this[impl].origin;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nObject.defineProperty(URL.prototype, \"protocol\", {\n  get() {\n    return this[impl].protocol;\n  },\n  set(V) {\n    V = conversions[\"USVString\"](V);\n    this[impl].protocol = V;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nObject.defineProperty(URL.prototype, \"username\", {\n  get() {\n    return this[impl].username;\n  },\n  set(V) {\n    V = conversions[\"USVString\"](V);\n    this[impl].username = V;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nObject.defineProperty(URL.prototype, \"password\", {\n  get() {\n    return this[impl].password;\n  },\n  set(V) {\n    V = conversions[\"USVString\"](V);\n    this[impl].password = V;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nObject.defineProperty(URL.prototype, \"host\", {\n  get() {\n    return this[impl].host;\n  },\n  set(V) {\n    V = conversions[\"USVString\"](V);\n    this[impl].host = V;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nObject.defineProperty(URL.prototype, \"hostname\", {\n  get() {\n    return this[impl].hostname;\n  },\n  set(V) {\n    V = conversions[\"USVString\"](V);\n    this[impl].hostname = V;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nObject.defineProperty(URL.prototype, \"port\", {\n  get() {\n    return this[impl].port;\n  },\n  set(V) {\n    V = conversions[\"USVString\"](V);\n    this[impl].port = V;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nObject.defineProperty(URL.prototype, \"pathname\", {\n  get() {\n    return this[impl].pathname;\n  },\n  set(V) {\n    V = conversions[\"USVString\"](V);\n    this[impl].pathname = V;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nObject.defineProperty(URL.prototype, \"search\", {\n  get() {\n    return this[impl].search;\n  },\n  set(V) {\n    V = conversions[\"USVString\"](V);\n    this[impl].search = V;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nObject.defineProperty(URL.prototype, \"hash\", {\n  get() {\n    return this[impl].hash;\n  },\n  set(V) {\n    V = conversions[\"USVString\"](V);\n    this[impl].hash = V;\n  },\n  enumerable: true,\n  configurable: true\n});\n\n\nmodule.exports = {\n  is(obj) {\n    return !!obj && obj[impl] instanceof Impl.implementation;\n  },\n  create(constructorArgs, privateData) {\n    let obj = Object.create(URL.prototype);\n    this.setup(obj, constructorArgs, privateData);\n    return obj;\n  },\n  setup(obj, constructorArgs, privateData) {\n    if (!privateData) privateData = {};\n    privateData.wrapper = obj;\n\n    obj[impl] = new Impl.implementation(constructorArgs, privateData);\n    obj[impl][utils.wrapperSymbol] = obj;\n  },\n  interface: URL,\n  expose: {\n    Window: { URL: URL },\n    Worker: { URL: URL }\n  }\n};\n\n","\"use strict\";\nconst usm = require(\"./url-state-machine\");\n\nexports.implementation = class URLImpl {\n  constructor(constructorArgs) {\n    const url = constructorArgs[0];\n    const base = constructorArgs[1];\n\n    let parsedBase = null;\n    if (base !== undefined) {\n      parsedBase = usm.basicURLParse(base);\n      if (parsedBase === \"failure\") {\n        throw new TypeError(\"Invalid base URL\");\n      }\n    }\n\n    const parsedURL = usm.basicURLParse(url, { baseURL: parsedBase });\n    if (parsedURL === \"failure\") {\n      throw new TypeError(\"Invalid URL\");\n    }\n\n    this._url = parsedURL;\n\n    // TODO: query stuff\n  }\n\n  get href() {\n    return usm.serializeURL(this._url);\n  }\n\n  set href(v) {\n    const parsedURL = usm.basicURLParse(v);\n    if (parsedURL === \"failure\") {\n      throw new TypeError(\"Invalid URL\");\n    }\n\n    this._url = parsedURL;\n  }\n\n  get origin() {\n    return usm.serializeURLOrigin(this._url);\n  }\n\n  get protocol() {\n    return this._url.scheme + \":\";\n  }\n\n  set protocol(v) {\n    usm.basicURLParse(v + \":\", { url: this._url, stateOverride: \"scheme start\" });\n  }\n\n  get username() {\n    return this._url.username;\n  }\n\n  set username(v) {\n    if (usm.cannotHaveAUsernamePasswordPort(this._url)) {\n      return;\n    }\n\n    usm.setTheUsername(this._url, v);\n  }\n\n  get password() {\n    return this._url.password;\n  }\n\n  set password(v) {\n    if (usm.cannotHaveAUsernamePasswordPort(this._url)) {\n      return;\n    }\n\n    usm.setThePassword(this._url, v);\n  }\n\n  get host() {\n    const url = this._url;\n\n    if (url.host === null) {\n      return \"\";\n    }\n\n    if (url.port === null) {\n      return usm.serializeHost(url.host);\n    }\n\n    return usm.serializeHost(url.host) + \":\" + usm.serializeInteger(url.port);\n  }\n\n  set host(v) {\n    if (this._url.cannotBeABaseURL) {\n      return;\n    }\n\n    usm.basicURLParse(v, { url: this._url, stateOverride: \"host\" });\n  }\n\n  get hostname() {\n    if (this._url.host === null) {\n      return \"\";\n    }\n\n    return usm.serializeHost(this._url.host);\n  }\n\n  set hostname(v) {\n    if (this._url.cannotBeABaseURL) {\n      return;\n    }\n\n    usm.basicURLParse(v, { url: this._url, stateOverride: \"hostname\" });\n  }\n\n  get port() {\n    if (this._url.port === null) {\n      return \"\";\n    }\n\n    return usm.serializeInteger(this._url.port);\n  }\n\n  set port(v) {\n    if (usm.cannotHaveAUsernamePasswordPort(this._url)) {\n      return;\n    }\n\n    if (v === \"\") {\n      this._url.port = null;\n    } else {\n      usm.basicURLParse(v, { url: this._url, stateOverride: \"port\" });\n    }\n  }\n\n  get pathname() {\n    if (this._url.cannotBeABaseURL) {\n      return this._url.path[0];\n    }\n\n    if (this._url.path.length === 0) {\n      return \"\";\n    }\n\n    return \"/\" + this._url.path.join(\"/\");\n  }\n\n  set pathname(v) {\n    if (this._url.cannotBeABaseURL) {\n      return;\n    }\n\n    this._url.path = [];\n    usm.basicURLParse(v, { url: this._url, stateOverride: \"path start\" });\n  }\n\n  get search() {\n    if (this._url.query === null || this._url.query === \"\") {\n      return \"\";\n    }\n\n    return \"?\" + this._url.query;\n  }\n\n  set search(v) {\n    // TODO: query stuff\n\n    const url = this._url;\n\n    if (v === \"\") {\n      url.query = null;\n      return;\n    }\n\n    const input = v[0] === \"?\" ? v.substring(1) : v;\n    url.query = \"\";\n    usm.basicURLParse(input, { url, stateOverride: \"query\" });\n  }\n\n  get hash() {\n    if (this._url.fragment === null || this._url.fragment === \"\") {\n      return \"\";\n    }\n\n    return \"#\" + this._url.fragment;\n  }\n\n  set hash(v) {\n    if (v === \"\") {\n      this._url.fragment = null;\n      return;\n    }\n\n    const input = v[0] === \"#\" ? v.substring(1) : v;\n    this._url.fragment = \"\";\n    usm.basicURLParse(input, { url: this._url, stateOverride: \"fragment\" });\n  }\n\n  toJSON() {\n    return this.href;\n  }\n};\n","\"use strict\";\n\nexports.URL = require(\"./URL\").interface;\nexports.serializeURL = require(\"./url-state-machine\").serializeURL;\nexports.serializeURLOrigin = require(\"./url-state-machine\").serializeURLOrigin;\nexports.basicURLParse = require(\"./url-state-machine\").basicURLParse;\nexports.setTheUsername = require(\"./url-state-machine\").setTheUsername;\nexports.setThePassword = require(\"./url-state-machine\").setThePassword;\nexports.serializeHost = require(\"./url-state-machine\").serializeHost;\nexports.serializeInteger = require(\"./url-state-machine\").serializeInteger;\nexports.parseURL = require(\"./url-state-machine\").parseURL;\n","import Stream from 'stream';\nimport http from 'http';\nimport Url from 'url';\nimport whatwgUrl from 'whatwg-url';\nimport https from 'https';\nimport zlib from 'zlib';\n\n// Based on https://github.com/tmpvar/jsdom/blob/aa85b2abf07766ff7bf5c1f6daafb3726f2f2db5/lib/jsdom/living/blob.js\n\n// fix for \"Readable\" isn't a named export issue\nconst Readable = Stream.Readable;\n\nconst BUFFER = Symbol('buffer');\nconst TYPE = Symbol('type');\n\nclass Blob {\n\tconstructor() {\n\t\tthis[TYPE] = '';\n\n\t\tconst blobParts = arguments[0];\n\t\tconst options = arguments[1];\n\n\t\tconst buffers = [];\n\t\tlet size = 0;\n\n\t\tif (blobParts) {\n\t\t\tconst a = blobParts;\n\t\t\tconst length = Number(a.length);\n\t\t\tfor (let i = 0; i < length; i++) {\n\t\t\t\tconst element = a[i];\n\t\t\t\tlet buffer;\n\t\t\t\tif (element instanceof Buffer) {\n\t\t\t\t\tbuffer = element;\n\t\t\t\t} else if (ArrayBuffer.isView(element)) {\n\t\t\t\t\tbuffer = Buffer.from(element.buffer, element.byteOffset, element.byteLength);\n\t\t\t\t} else if (element instanceof ArrayBuffer) {\n\t\t\t\t\tbuffer = Buffer.from(element);\n\t\t\t\t} else if (element instanceof Blob) {\n\t\t\t\t\tbuffer = element[BUFFER];\n\t\t\t\t} else {\n\t\t\t\t\tbuffer = Buffer.from(typeof element === 'string' ? element : String(element));\n\t\t\t\t}\n\t\t\t\tsize += buffer.length;\n\t\t\t\tbuffers.push(buffer);\n\t\t\t}\n\t\t}\n\n\t\tthis[BUFFER] = Buffer.concat(buffers);\n\n\t\tlet type = options && options.type !== undefined && String(options.type).toLowerCase();\n\t\tif (type && !/[^\\u0020-\\u007E]/.test(type)) {\n\t\t\tthis[TYPE] = type;\n\t\t}\n\t}\n\tget size() {\n\t\treturn this[BUFFER].length;\n\t}\n\tget type() {\n\t\treturn this[TYPE];\n\t}\n\ttext() {\n\t\treturn Promise.resolve(this[BUFFER].toString());\n\t}\n\tarrayBuffer() {\n\t\tconst buf = this[BUFFER];\n\t\tconst ab = buf.buffer.slice(buf.byteOffset, buf.byteOffset + buf.byteLength);\n\t\treturn Promise.resolve(ab);\n\t}\n\tstream() {\n\t\tconst readable = new Readable();\n\t\treadable._read = function () {};\n\t\treadable.push(this[BUFFER]);\n\t\treadable.push(null);\n\t\treturn readable;\n\t}\n\ttoString() {\n\t\treturn '[object Blob]';\n\t}\n\tslice() {\n\t\tconst size = this.size;\n\n\t\tconst start = arguments[0];\n\t\tconst end = arguments[1];\n\t\tlet relativeStart, relativeEnd;\n\t\tif (start === undefined) {\n\t\t\trelativeStart = 0;\n\t\t} else if (start < 0) {\n\t\t\trelativeStart = Math.max(size + start, 0);\n\t\t} else {\n\t\t\trelativeStart = Math.min(start, size);\n\t\t}\n\t\tif (end === undefined) {\n\t\t\trelativeEnd = size;\n\t\t} else if (end < 0) {\n\t\t\trelativeEnd = Math.max(size + end, 0);\n\t\t} else {\n\t\t\trelativeEnd = Math.min(end, size);\n\t\t}\n\t\tconst span = Math.max(relativeEnd - relativeStart, 0);\n\n\t\tconst buffer = this[BUFFER];\n\t\tconst slicedBuffer = buffer.slice(relativeStart, relativeStart + span);\n\t\tconst blob = new Blob([], { type: arguments[2] });\n\t\tblob[BUFFER] = slicedBuffer;\n\t\treturn blob;\n\t}\n}\n\nObject.defineProperties(Blob.prototype, {\n\tsize: { enumerable: true },\n\ttype: { enumerable: true },\n\tslice: { enumerable: true }\n});\n\nObject.defineProperty(Blob.prototype, Symbol.toStringTag, {\n\tvalue: 'Blob',\n\twritable: false,\n\tenumerable: false,\n\tconfigurable: true\n});\n\n/**\n * fetch-error.js\n *\n * FetchError interface for operational errors\n */\n\n/**\n * Create FetchError instance\n *\n * @param   String      message      Error message for human\n * @param   String      type         Error type for machine\n * @param   String      systemError  For Node.js system error\n * @return  FetchError\n */\nfunction FetchError(message, type, systemError) {\n  Error.call(this, message);\n\n  this.message = message;\n  this.type = type;\n\n  // when err.type is `system`, err.code contains system error code\n  if (systemError) {\n    this.code = this.errno = systemError.code;\n  }\n\n  // hide custom error implementation details from end-users\n  Error.captureStackTrace(this, this.constructor);\n}\n\nFetchError.prototype = Object.create(Error.prototype);\nFetchError.prototype.constructor = FetchError;\nFetchError.prototype.name = 'FetchError';\n\nlet convert;\ntry {\n\tconvert = require('encoding').convert;\n} catch (e) {}\n\nconst INTERNALS = Symbol('Body internals');\n\n// fix an issue where \"PassThrough\" isn't a named export for node <10\nconst PassThrough = Stream.PassThrough;\n\n/**\n * Body mixin\n *\n * Ref: https://fetch.spec.whatwg.org/#body\n *\n * @param   Stream  body  Readable stream\n * @param   Object  opts  Response options\n * @return  Void\n */\nfunction Body(body) {\n\tvar _this = this;\n\n\tvar _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n\t    _ref$size = _ref.size;\n\n\tlet size = _ref$size === undefined ? 0 : _ref$size;\n\tvar _ref$timeout = _ref.timeout;\n\tlet timeout = _ref$timeout === undefined ? 0 : _ref$timeout;\n\n\tif (body == null) {\n\t\t// body is undefined or null\n\t\tbody = null;\n\t} else if (isURLSearchParams(body)) {\n\t\t// body is a URLSearchParams\n\t\tbody = Buffer.from(body.toString());\n\t} else if (isBlob(body)) ; else if (Buffer.isBuffer(body)) ; else if (Object.prototype.toString.call(body) === '[object ArrayBuffer]') {\n\t\t// body is ArrayBuffer\n\t\tbody = Buffer.from(body);\n\t} else if (ArrayBuffer.isView(body)) {\n\t\t// body is ArrayBufferView\n\t\tbody = Buffer.from(body.buffer, body.byteOffset, body.byteLength);\n\t} else if (body instanceof Stream) ; else {\n\t\t// none of the above\n\t\t// coerce to string then buffer\n\t\tbody = Buffer.from(String(body));\n\t}\n\tthis[INTERNALS] = {\n\t\tbody,\n\t\tdisturbed: false,\n\t\terror: null\n\t};\n\tthis.size = size;\n\tthis.timeout = timeout;\n\n\tif (body instanceof Stream) {\n\t\tbody.on('error', function (err) {\n\t\t\tconst error = err.name === 'AbortError' ? err : new FetchError(`Invalid response body while trying to fetch ${_this.url}: ${err.message}`, 'system', err);\n\t\t\t_this[INTERNALS].error = error;\n\t\t});\n\t}\n}\n\nBody.prototype = {\n\tget body() {\n\t\treturn this[INTERNALS].body;\n\t},\n\n\tget bodyUsed() {\n\t\treturn this[INTERNALS].disturbed;\n\t},\n\n\t/**\n  * Decode response as ArrayBuffer\n  *\n  * @return  Promise\n  */\n\tarrayBuffer() {\n\t\treturn consumeBody.call(this).then(function (buf) {\n\t\t\treturn buf.buffer.slice(buf.byteOffset, buf.byteOffset + buf.byteLength);\n\t\t});\n\t},\n\n\t/**\n  * Return raw response as Blob\n  *\n  * @return Promise\n  */\n\tblob() {\n\t\tlet ct = this.headers && this.headers.get('content-type') || '';\n\t\treturn consumeBody.call(this).then(function (buf) {\n\t\t\treturn Object.assign(\n\t\t\t// Prevent copying\n\t\t\tnew Blob([], {\n\t\t\t\ttype: ct.toLowerCase()\n\t\t\t}), {\n\t\t\t\t[BUFFER]: buf\n\t\t\t});\n\t\t});\n\t},\n\n\t/**\n  * Decode response as json\n  *\n  * @return  Promise\n  */\n\tjson() {\n\t\tvar _this2 = this;\n\n\t\treturn consumeBody.call(this).then(function (buffer) {\n\t\t\ttry {\n\t\t\t\treturn JSON.parse(buffer.toString());\n\t\t\t} catch (err) {\n\t\t\t\treturn Body.Promise.reject(new FetchError(`invalid json response body at ${_this2.url} reason: ${err.message}`, 'invalid-json'));\n\t\t\t}\n\t\t});\n\t},\n\n\t/**\n  * Decode response as text\n  *\n  * @return  Promise\n  */\n\ttext() {\n\t\treturn consumeBody.call(this).then(function (buffer) {\n\t\t\treturn buffer.toString();\n\t\t});\n\t},\n\n\t/**\n  * Decode response as buffer (non-spec api)\n  *\n  * @return  Promise\n  */\n\tbuffer() {\n\t\treturn consumeBody.call(this);\n\t},\n\n\t/**\n  * Decode response as text, while automatically detecting the encoding and\n  * trying to decode to UTF-8 (non-spec api)\n  *\n  * @return  Promise\n  */\n\ttextConverted() {\n\t\tvar _this3 = this;\n\n\t\treturn consumeBody.call(this).then(function (buffer) {\n\t\t\treturn convertBody(buffer, _this3.headers);\n\t\t});\n\t}\n};\n\n// In browsers, all properties are enumerable.\nObject.defineProperties(Body.prototype, {\n\tbody: { enumerable: true },\n\tbodyUsed: { enumerable: true },\n\tarrayBuffer: { enumerable: true },\n\tblob: { enumerable: true },\n\tjson: { enumerable: true },\n\ttext: { enumerable: true }\n});\n\nBody.mixIn = function (proto) {\n\tfor (const name of Object.getOwnPropertyNames(Body.prototype)) {\n\t\t// istanbul ignore else: future proof\n\t\tif (!(name in proto)) {\n\t\t\tconst desc = Object.getOwnPropertyDescriptor(Body.prototype, name);\n\t\t\tObject.defineProperty(proto, name, desc);\n\t\t}\n\t}\n};\n\n/**\n * Consume and convert an entire Body to a Buffer.\n *\n * Ref: https://fetch.spec.whatwg.org/#concept-body-consume-body\n *\n * @return  Promise\n */\nfunction consumeBody() {\n\tvar _this4 = this;\n\n\tif (this[INTERNALS].disturbed) {\n\t\treturn Body.Promise.reject(new TypeError(`body used already for: ${this.url}`));\n\t}\n\n\tthis[INTERNALS].disturbed = true;\n\n\tif (this[INTERNALS].error) {\n\t\treturn Body.Promise.reject(this[INTERNALS].error);\n\t}\n\n\tlet body = this.body;\n\n\t// body is null\n\tif (body === null) {\n\t\treturn Body.Promise.resolve(Buffer.alloc(0));\n\t}\n\n\t// body is blob\n\tif (isBlob(body)) {\n\t\tbody = body.stream();\n\t}\n\n\t// body is buffer\n\tif (Buffer.isBuffer(body)) {\n\t\treturn Body.Promise.resolve(body);\n\t}\n\n\t// istanbul ignore if: should never happen\n\tif (!(body instanceof Stream)) {\n\t\treturn Body.Promise.resolve(Buffer.alloc(0));\n\t}\n\n\t// body is stream\n\t// get ready to actually consume the body\n\tlet accum = [];\n\tlet accumBytes = 0;\n\tlet abort = false;\n\n\treturn new Body.Promise(function (resolve, reject) {\n\t\tlet resTimeout;\n\n\t\t// allow timeout on slow response body\n\t\tif (_this4.timeout) {\n\t\t\tresTimeout = setTimeout(function () {\n\t\t\t\tabort = true;\n\t\t\t\treject(new FetchError(`Response timeout while trying to fetch ${_this4.url} (over ${_this4.timeout}ms)`, 'body-timeout'));\n\t\t\t}, _this4.timeout);\n\t\t}\n\n\t\t// handle stream errors\n\t\tbody.on('error', function (err) {\n\t\t\tif (err.name === 'AbortError') {\n\t\t\t\t// if the request was aborted, reject with this Error\n\t\t\t\tabort = true;\n\t\t\t\treject(err);\n\t\t\t} else {\n\t\t\t\t// other errors, such as incorrect content-encoding\n\t\t\t\treject(new FetchError(`Invalid response body while trying to fetch ${_this4.url}: ${err.message}`, 'system', err));\n\t\t\t}\n\t\t});\n\n\t\tbody.on('data', function (chunk) {\n\t\t\tif (abort || chunk === null) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (_this4.size && accumBytes + chunk.length > _this4.size) {\n\t\t\t\tabort = true;\n\t\t\t\treject(new FetchError(`content size at ${_this4.url} over limit: ${_this4.size}`, 'max-size'));\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\taccumBytes += chunk.length;\n\t\t\taccum.push(chunk);\n\t\t});\n\n\t\tbody.on('end', function () {\n\t\t\tif (abort) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tclearTimeout(resTimeout);\n\n\t\t\ttry {\n\t\t\t\tresolve(Buffer.concat(accum, accumBytes));\n\t\t\t} catch (err) {\n\t\t\t\t// handle streams that have accumulated too much data (issue #414)\n\t\t\t\treject(new FetchError(`Could not create Buffer from response body for ${_this4.url}: ${err.message}`, 'system', err));\n\t\t\t}\n\t\t});\n\t});\n}\n\n/**\n * Detect buffer encoding and convert to target encoding\n * ref: http://www.w3.org/TR/2011/WD-html5-20110113/parsing.html#determining-the-character-encoding\n *\n * @param   Buffer  buffer    Incoming buffer\n * @param   String  encoding  Target encoding\n * @return  String\n */\nfunction convertBody(buffer, headers) {\n\tif (typeof convert !== 'function') {\n\t\tthrow new Error('The package `encoding` must be installed to use the textConverted() function');\n\t}\n\n\tconst ct = headers.get('content-type');\n\tlet charset = 'utf-8';\n\tlet res, str;\n\n\t// header\n\tif (ct) {\n\t\tres = /charset=([^;]*)/i.exec(ct);\n\t}\n\n\t// no charset in content type, peek at response body for at most 1024 bytes\n\tstr = buffer.slice(0, 1024).toString();\n\n\t// html5\n\tif (!res && str) {\n\t\tres = /<meta.+?charset=(['\"])(.+?)\\1/i.exec(str);\n\t}\n\n\t// html4\n\tif (!res && str) {\n\t\tres = /<meta[\\s]+?http-equiv=(['\"])content-type\\1[\\s]+?content=(['\"])(.+?)\\2/i.exec(str);\n\t\tif (!res) {\n\t\t\tres = /<meta[\\s]+?content=(['\"])(.+?)\\1[\\s]+?http-equiv=(['\"])content-type\\3/i.exec(str);\n\t\t\tif (res) {\n\t\t\t\tres.pop(); // drop last quote\n\t\t\t}\n\t\t}\n\n\t\tif (res) {\n\t\t\tres = /charset=(.*)/i.exec(res.pop());\n\t\t}\n\t}\n\n\t// xml\n\tif (!res && str) {\n\t\tres = /<\\?xml.+?encoding=(['\"])(.+?)\\1/i.exec(str);\n\t}\n\n\t// found charset\n\tif (res) {\n\t\tcharset = res.pop();\n\n\t\t// prevent decode issues when sites use incorrect encoding\n\t\t// ref: https://hsivonen.fi/encoding-menu/\n\t\tif (charset === 'gb2312' || charset === 'gbk') {\n\t\t\tcharset = 'gb18030';\n\t\t}\n\t}\n\n\t// turn raw buffers into a single utf-8 buffer\n\treturn convert(buffer, 'UTF-8', charset).toString();\n}\n\n/**\n * Detect a URLSearchParams object\n * ref: https://github.com/bitinn/node-fetch/issues/296#issuecomment-307598143\n *\n * @param   Object  obj     Object to detect by type or brand\n * @return  String\n */\nfunction isURLSearchParams(obj) {\n\t// Duck-typing as a necessary condition.\n\tif (typeof obj !== 'object' || typeof obj.append !== 'function' || typeof obj.delete !== 'function' || typeof obj.get !== 'function' || typeof obj.getAll !== 'function' || typeof obj.has !== 'function' || typeof obj.set !== 'function') {\n\t\treturn false;\n\t}\n\n\t// Brand-checking and more duck-typing as optional condition.\n\treturn obj.constructor.name === 'URLSearchParams' || Object.prototype.toString.call(obj) === '[object URLSearchParams]' || typeof obj.sort === 'function';\n}\n\n/**\n * Check if `obj` is a W3C `Blob` object (which `File` inherits from)\n * @param  {*} obj\n * @return {boolean}\n */\nfunction isBlob(obj) {\n\treturn typeof obj === 'object' && typeof obj.arrayBuffer === 'function' && typeof obj.type === 'string' && typeof obj.stream === 'function' && typeof obj.constructor === 'function' && typeof obj.constructor.name === 'string' && /^(Blob|File)$/.test(obj.constructor.name) && /^(Blob|File)$/.test(obj[Symbol.toStringTag]);\n}\n\n/**\n * Clone body given Res/Req instance\n *\n * @param   Mixed  instance  Response or Request instance\n * @return  Mixed\n */\nfunction clone(instance) {\n\tlet p1, p2;\n\tlet body = instance.body;\n\n\t// don't allow cloning a used body\n\tif (instance.bodyUsed) {\n\t\tthrow new Error('cannot clone body after it is used');\n\t}\n\n\t// check that body is a stream and not form-data object\n\t// note: we can't clone the form-data object without having it as a dependency\n\tif (body instanceof Stream && typeof body.getBoundary !== 'function') {\n\t\t// tee instance body\n\t\tp1 = new PassThrough();\n\t\tp2 = new PassThrough();\n\t\tbody.pipe(p1);\n\t\tbody.pipe(p2);\n\t\t// set instance body to teed body and return the other teed body\n\t\tinstance[INTERNALS].body = p1;\n\t\tbody = p2;\n\t}\n\n\treturn body;\n}\n\n/**\n * Performs the operation \"extract a `Content-Type` value from |object|\" as\n * specified in the specification:\n * https://fetch.spec.whatwg.org/#concept-bodyinit-extract\n *\n * This function assumes that instance.body is present.\n *\n * @param   Mixed  instance  Any options.body input\n */\nfunction extractContentType(body) {\n\tif (body === null) {\n\t\t// body is null\n\t\treturn null;\n\t} else if (typeof body === 'string') {\n\t\t// body is string\n\t\treturn 'text/plain;charset=UTF-8';\n\t} else if (isURLSearchParams(body)) {\n\t\t// body is a URLSearchParams\n\t\treturn 'application/x-www-form-urlencoded;charset=UTF-8';\n\t} else if (isBlob(body)) {\n\t\t// body is blob\n\t\treturn body.type || null;\n\t} else if (Buffer.isBuffer(body)) {\n\t\t// body is buffer\n\t\treturn null;\n\t} else if (Object.prototype.toString.call(body) === '[object ArrayBuffer]') {\n\t\t// body is ArrayBuffer\n\t\treturn null;\n\t} else if (ArrayBuffer.isView(body)) {\n\t\t// body is ArrayBufferView\n\t\treturn null;\n\t} else if (typeof body.getBoundary === 'function') {\n\t\t// detect form data input from form-data module\n\t\treturn `multipart/form-data;boundary=${body.getBoundary()}`;\n\t} else if (body instanceof Stream) {\n\t\t// body is stream\n\t\t// can't really do much about this\n\t\treturn null;\n\t} else {\n\t\t// Body constructor defaults other things to string\n\t\treturn 'text/plain;charset=UTF-8';\n\t}\n}\n\n/**\n * The Fetch Standard treats this as if \"total bytes\" is a property on the body.\n * For us, we have to explicitly get it with a function.\n *\n * ref: https://fetch.spec.whatwg.org/#concept-body-total-bytes\n *\n * @param   Body    instance   Instance of Body\n * @return  Number?            Number of bytes, or null if not possible\n */\nfunction getTotalBytes(instance) {\n\tconst body = instance.body;\n\n\n\tif (body === null) {\n\t\t// body is null\n\t\treturn 0;\n\t} else if (isBlob(body)) {\n\t\treturn body.size;\n\t} else if (Buffer.isBuffer(body)) {\n\t\t// body is buffer\n\t\treturn body.length;\n\t} else if (body && typeof body.getLengthSync === 'function') {\n\t\t// detect form data input from form-data module\n\t\tif (body._lengthRetrievers && body._lengthRetrievers.length == 0 || // 1.x\n\t\tbody.hasKnownLength && body.hasKnownLength()) {\n\t\t\t// 2.x\n\t\t\treturn body.getLengthSync();\n\t\t}\n\t\treturn null;\n\t} else {\n\t\t// body is stream\n\t\treturn null;\n\t}\n}\n\n/**\n * Write a Body to a Node.js WritableStream (e.g. http.Request) object.\n *\n * @param   Body    instance   Instance of Body\n * @return  Void\n */\nfunction writeToStream(dest, instance) {\n\tconst body = instance.body;\n\n\n\tif (body === null) {\n\t\t// body is null\n\t\tdest.end();\n\t} else if (isBlob(body)) {\n\t\tbody.stream().pipe(dest);\n\t} else if (Buffer.isBuffer(body)) {\n\t\t// body is buffer\n\t\tdest.write(body);\n\t\tdest.end();\n\t} else {\n\t\t// body is stream\n\t\tbody.pipe(dest);\n\t}\n}\n\n// expose Promise\nBody.Promise = global.Promise;\n\n/**\n * headers.js\n *\n * Headers class offers convenient helpers\n */\n\nconst invalidTokenRegex = /[^\\^_`a-zA-Z\\-0-9!#$%&'*+.|~]/;\nconst invalidHeaderCharRegex = /[^\\t\\x20-\\x7e\\x80-\\xff]/;\n\nfunction validateName(name) {\n\tname = `${name}`;\n\tif (invalidTokenRegex.test(name) || name === '') {\n\t\tthrow new TypeError(`${name} is not a legal HTTP header name`);\n\t}\n}\n\nfunction validateValue(value) {\n\tvalue = `${value}`;\n\tif (invalidHeaderCharRegex.test(value)) {\n\t\tthrow new TypeError(`${value} is not a legal HTTP header value`);\n\t}\n}\n\n/**\n * Find the key in the map object given a header name.\n *\n * Returns undefined if not found.\n *\n * @param   String  name  Header name\n * @return  String|Undefined\n */\nfunction find(map, name) {\n\tname = name.toLowerCase();\n\tfor (const key in map) {\n\t\tif (key.toLowerCase() === name) {\n\t\t\treturn key;\n\t\t}\n\t}\n\treturn undefined;\n}\n\nconst MAP = Symbol('map');\nclass Headers {\n\t/**\n  * Headers class\n  *\n  * @param   Object  headers  Response headers\n  * @return  Void\n  */\n\tconstructor() {\n\t\tlet init = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : undefined;\n\n\t\tthis[MAP] = Object.create(null);\n\n\t\tif (init instanceof Headers) {\n\t\t\tconst rawHeaders = init.raw();\n\t\t\tconst headerNames = Object.keys(rawHeaders);\n\n\t\t\tfor (const headerName of headerNames) {\n\t\t\t\tfor (const value of rawHeaders[headerName]) {\n\t\t\t\t\tthis.append(headerName, value);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn;\n\t\t}\n\n\t\t// We don't worry about converting prop to ByteString here as append()\n\t\t// will handle it.\n\t\tif (init == null) ; else if (typeof init === 'object') {\n\t\t\tconst method = init[Symbol.iterator];\n\t\t\tif (method != null) {\n\t\t\t\tif (typeof method !== 'function') {\n\t\t\t\t\tthrow new TypeError('Header pairs must be iterable');\n\t\t\t\t}\n\n\t\t\t\t// sequence<sequence<ByteString>>\n\t\t\t\t// Note: per spec we have to first exhaust the lists then process them\n\t\t\t\tconst pairs = [];\n\t\t\t\tfor (const pair of init) {\n\t\t\t\t\tif (typeof pair !== 'object' || typeof pair[Symbol.iterator] !== 'function') {\n\t\t\t\t\t\tthrow new TypeError('Each header pair must be iterable');\n\t\t\t\t\t}\n\t\t\t\t\tpairs.push(Array.from(pair));\n\t\t\t\t}\n\n\t\t\t\tfor (const pair of pairs) {\n\t\t\t\t\tif (pair.length !== 2) {\n\t\t\t\t\t\tthrow new TypeError('Each header pair must be a name/value tuple');\n\t\t\t\t\t}\n\t\t\t\t\tthis.append(pair[0], pair[1]);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// record<ByteString, ByteString>\n\t\t\t\tfor (const key of Object.keys(init)) {\n\t\t\t\t\tconst value = init[key];\n\t\t\t\t\tthis.append(key, value);\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tthrow new TypeError('Provided initializer must be an object');\n\t\t}\n\t}\n\n\t/**\n  * Return combined header value given name\n  *\n  * @param   String  name  Header name\n  * @return  Mixed\n  */\n\tget(name) {\n\t\tname = `${name}`;\n\t\tvalidateName(name);\n\t\tconst key = find(this[MAP], name);\n\t\tif (key === undefined) {\n\t\t\treturn null;\n\t\t}\n\n\t\treturn this[MAP][key].join(', ');\n\t}\n\n\t/**\n  * Iterate over all headers\n  *\n  * @param   Function  callback  Executed for each item with parameters (value, name, thisArg)\n  * @param   Boolean   thisArg   `this` context for callback function\n  * @return  Void\n  */\n\tforEach(callback) {\n\t\tlet thisArg = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : undefined;\n\n\t\tlet pairs = getHeaders(this);\n\t\tlet i = 0;\n\t\twhile (i < pairs.length) {\n\t\t\tvar _pairs$i = pairs[i];\n\t\t\tconst name = _pairs$i[0],\n\t\t\t      value = _pairs$i[1];\n\n\t\t\tcallback.call(thisArg, value, name, this);\n\t\t\tpairs = getHeaders(this);\n\t\t\ti++;\n\t\t}\n\t}\n\n\t/**\n  * Overwrite header values given name\n  *\n  * @param   String  name   Header name\n  * @param   String  value  Header value\n  * @return  Void\n  */\n\tset(name, value) {\n\t\tname = `${name}`;\n\t\tvalue = `${value}`;\n\t\tvalidateName(name);\n\t\tvalidateValue(value);\n\t\tconst key = find(this[MAP], name);\n\t\tthis[MAP][key !== undefined ? key : name] = [value];\n\t}\n\n\t/**\n  * Append a value onto existing header\n  *\n  * @param   String  name   Header name\n  * @param   String  value  Header value\n  * @return  Void\n  */\n\tappend(name, value) {\n\t\tname = `${name}`;\n\t\tvalue = `${value}`;\n\t\tvalidateName(name);\n\t\tvalidateValue(value);\n\t\tconst key = find(this[MAP], name);\n\t\tif (key !== undefined) {\n\t\t\tthis[MAP][key].push(value);\n\t\t} else {\n\t\t\tthis[MAP][name] = [value];\n\t\t}\n\t}\n\n\t/**\n  * Check for header name existence\n  *\n  * @param   String   name  Header name\n  * @return  Boolean\n  */\n\thas(name) {\n\t\tname = `${name}`;\n\t\tvalidateName(name);\n\t\treturn find(this[MAP], name) !== undefined;\n\t}\n\n\t/**\n  * Delete all header values given name\n  *\n  * @param   String  name  Header name\n  * @return  Void\n  */\n\tdelete(name) {\n\t\tname = `${name}`;\n\t\tvalidateName(name);\n\t\tconst key = find(this[MAP], name);\n\t\tif (key !== undefined) {\n\t\t\tdelete this[MAP][key];\n\t\t}\n\t}\n\n\t/**\n  * Return raw headers (non-spec api)\n  *\n  * @return  Object\n  */\n\traw() {\n\t\treturn this[MAP];\n\t}\n\n\t/**\n  * Get an iterator on keys.\n  *\n  * @return  Iterator\n  */\n\tkeys() {\n\t\treturn createHeadersIterator(this, 'key');\n\t}\n\n\t/**\n  * Get an iterator on values.\n  *\n  * @return  Iterator\n  */\n\tvalues() {\n\t\treturn createHeadersIterator(this, 'value');\n\t}\n\n\t/**\n  * Get an iterator on entries.\n  *\n  * This is the default iterator of the Headers object.\n  *\n  * @return  Iterator\n  */\n\t[Symbol.iterator]() {\n\t\treturn createHeadersIterator(this, 'key+value');\n\t}\n}\nHeaders.prototype.entries = Headers.prototype[Symbol.iterator];\n\nObject.defineProperty(Headers.prototype, Symbol.toStringTag, {\n\tvalue: 'Headers',\n\twritable: false,\n\tenumerable: false,\n\tconfigurable: true\n});\n\nObject.defineProperties(Headers.prototype, {\n\tget: { enumerable: true },\n\tforEach: { enumerable: true },\n\tset: { enumerable: true },\n\tappend: { enumerable: true },\n\thas: { enumerable: true },\n\tdelete: { enumerable: true },\n\tkeys: { enumerable: true },\n\tvalues: { enumerable: true },\n\tentries: { enumerable: true }\n});\n\nfunction getHeaders(headers) {\n\tlet kind = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'key+value';\n\n\tconst keys = Object.keys(headers[MAP]).sort();\n\treturn keys.map(kind === 'key' ? function (k) {\n\t\treturn k.toLowerCase();\n\t} : kind === 'value' ? function (k) {\n\t\treturn headers[MAP][k].join(', ');\n\t} : function (k) {\n\t\treturn [k.toLowerCase(), headers[MAP][k].join(', ')];\n\t});\n}\n\nconst INTERNAL = Symbol('internal');\n\nfunction createHeadersIterator(target, kind) {\n\tconst iterator = Object.create(HeadersIteratorPrototype);\n\titerator[INTERNAL] = {\n\t\ttarget,\n\t\tkind,\n\t\tindex: 0\n\t};\n\treturn iterator;\n}\n\nconst HeadersIteratorPrototype = Object.setPrototypeOf({\n\tnext() {\n\t\t// istanbul ignore if\n\t\tif (!this || Object.getPrototypeOf(this) !== HeadersIteratorPrototype) {\n\t\t\tthrow new TypeError('Value of `this` is not a HeadersIterator');\n\t\t}\n\n\t\tvar _INTERNAL = this[INTERNAL];\n\t\tconst target = _INTERNAL.target,\n\t\t      kind = _INTERNAL.kind,\n\t\t      index = _INTERNAL.index;\n\n\t\tconst values = getHeaders(target, kind);\n\t\tconst len = values.length;\n\t\tif (index >= len) {\n\t\t\treturn {\n\t\t\t\tvalue: undefined,\n\t\t\t\tdone: true\n\t\t\t};\n\t\t}\n\n\t\tthis[INTERNAL].index = index + 1;\n\n\t\treturn {\n\t\t\tvalue: values[index],\n\t\t\tdone: false\n\t\t};\n\t}\n}, Object.getPrototypeOf(Object.getPrototypeOf([][Symbol.iterator]())));\n\nObject.defineProperty(HeadersIteratorPrototype, Symbol.toStringTag, {\n\tvalue: 'HeadersIterator',\n\twritable: false,\n\tenumerable: false,\n\tconfigurable: true\n});\n\n/**\n * Export the Headers object in a form that Node.js can consume.\n *\n * @param   Headers  headers\n * @return  Object\n */\nfunction exportNodeCompatibleHeaders(headers) {\n\tconst obj = Object.assign({ __proto__: null }, headers[MAP]);\n\n\t// http.request() only supports string as Host header. This hack makes\n\t// specifying custom Host header possible.\n\tconst hostHeaderKey = find(headers[MAP], 'Host');\n\tif (hostHeaderKey !== undefined) {\n\t\tobj[hostHeaderKey] = obj[hostHeaderKey][0];\n\t}\n\n\treturn obj;\n}\n\n/**\n * Create a Headers object from an object of headers, ignoring those that do\n * not conform to HTTP grammar productions.\n *\n * @param   Object  obj  Object of headers\n * @return  Headers\n */\nfunction createHeadersLenient(obj) {\n\tconst headers = new Headers();\n\tfor (const name of Object.keys(obj)) {\n\t\tif (invalidTokenRegex.test(name)) {\n\t\t\tcontinue;\n\t\t}\n\t\tif (Array.isArray(obj[name])) {\n\t\t\tfor (const val of obj[name]) {\n\t\t\t\tif (invalidHeaderCharRegex.test(val)) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tif (headers[MAP][name] === undefined) {\n\t\t\t\t\theaders[MAP][name] = [val];\n\t\t\t\t} else {\n\t\t\t\t\theaders[MAP][name].push(val);\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (!invalidHeaderCharRegex.test(obj[name])) {\n\t\t\theaders[MAP][name] = [obj[name]];\n\t\t}\n\t}\n\treturn headers;\n}\n\nconst INTERNALS$1 = Symbol('Response internals');\n\n// fix an issue where \"STATUS_CODES\" aren't a named export for node <10\nconst STATUS_CODES = http.STATUS_CODES;\n\n/**\n * Response class\n *\n * @param   Stream  body  Readable stream\n * @param   Object  opts  Response options\n * @return  Void\n */\nclass Response {\n\tconstructor() {\n\t\tlet body = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n\t\tlet opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n\t\tBody.call(this, body, opts);\n\n\t\tconst status = opts.status || 200;\n\t\tconst headers = new Headers(opts.headers);\n\n\t\tif (body != null && !headers.has('Content-Type')) {\n\t\t\tconst contentType = extractContentType(body);\n\t\t\tif (contentType) {\n\t\t\t\theaders.append('Content-Type', contentType);\n\t\t\t}\n\t\t}\n\n\t\tthis[INTERNALS$1] = {\n\t\t\turl: opts.url,\n\t\t\tstatus,\n\t\t\tstatusText: opts.statusText || STATUS_CODES[status],\n\t\t\theaders,\n\t\t\tcounter: opts.counter\n\t\t};\n\t}\n\n\tget url() {\n\t\treturn this[INTERNALS$1].url || '';\n\t}\n\n\tget status() {\n\t\treturn this[INTERNALS$1].status;\n\t}\n\n\t/**\n  * Convenience property representing if the request ended normally\n  */\n\tget ok() {\n\t\treturn this[INTERNALS$1].status >= 200 && this[INTERNALS$1].status < 300;\n\t}\n\n\tget redirected() {\n\t\treturn this[INTERNALS$1].counter > 0;\n\t}\n\n\tget statusText() {\n\t\treturn this[INTERNALS$1].statusText;\n\t}\n\n\tget headers() {\n\t\treturn this[INTERNALS$1].headers;\n\t}\n\n\t/**\n  * Clone this response\n  *\n  * @return  Response\n  */\n\tclone() {\n\t\treturn new Response(clone(this), {\n\t\t\turl: this.url,\n\t\t\tstatus: this.status,\n\t\t\tstatusText: this.statusText,\n\t\t\theaders: this.headers,\n\t\t\tok: this.ok,\n\t\t\tredirected: this.redirected\n\t\t});\n\t}\n}\n\nBody.mixIn(Response.prototype);\n\nObject.defineProperties(Response.prototype, {\n\turl: { enumerable: true },\n\tstatus: { enumerable: true },\n\tok: { enumerable: true },\n\tredirected: { enumerable: true },\n\tstatusText: { enumerable: true },\n\theaders: { enumerable: true },\n\tclone: { enumerable: true }\n});\n\nObject.defineProperty(Response.prototype, Symbol.toStringTag, {\n\tvalue: 'Response',\n\twritable: false,\n\tenumerable: false,\n\tconfigurable: true\n});\n\nconst INTERNALS$2 = Symbol('Request internals');\nconst URL = Url.URL || whatwgUrl.URL;\n\n// fix an issue where \"format\", \"parse\" aren't a named export for node <10\nconst parse_url = Url.parse;\nconst format_url = Url.format;\n\n/**\n * Wrapper around `new URL` to handle arbitrary URLs\n *\n * @param  {string} urlStr\n * @return {void}\n */\nfunction parseURL(urlStr) {\n\t/*\n \tCheck whether the URL is absolute or not\n \t\tScheme: https://tools.ietf.org/html/rfc3986#section-3.1\n \tAbsolute URL: https://tools.ietf.org/html/rfc3986#section-4.3\n */\n\tif (/^[a-zA-Z][a-zA-Z\\d+\\-.]*:/.exec(urlStr)) {\n\t\turlStr = new URL(urlStr).toString();\n\t}\n\n\t// Fallback to old implementation for arbitrary URLs\n\treturn parse_url(urlStr);\n}\n\nconst streamDestructionSupported = 'destroy' in Stream.Readable.prototype;\n\n/**\n * Check if a value is an instance of Request.\n *\n * @param   Mixed   input\n * @return  Boolean\n */\nfunction isRequest(input) {\n\treturn typeof input === 'object' && typeof input[INTERNALS$2] === 'object';\n}\n\nfunction isAbortSignal(signal) {\n\tconst proto = signal && typeof signal === 'object' && Object.getPrototypeOf(signal);\n\treturn !!(proto && proto.constructor.name === 'AbortSignal');\n}\n\n/**\n * Request class\n *\n * @param   Mixed   input  Url or Request instance\n * @param   Object  init   Custom options\n * @return  Void\n */\nclass Request {\n\tconstructor(input) {\n\t\tlet init = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n\t\tlet parsedURL;\n\n\t\t// normalize input\n\t\tif (!isRequest(input)) {\n\t\t\tif (input && input.href) {\n\t\t\t\t// in order to support Node.js' Url objects; though WHATWG's URL objects\n\t\t\t\t// will fall into this branch also (since their `toString()` will return\n\t\t\t\t// `href` property anyway)\n\t\t\t\tparsedURL = parseURL(input.href);\n\t\t\t} else {\n\t\t\t\t// coerce input to a string before attempting to parse\n\t\t\t\tparsedURL = parseURL(`${input}`);\n\t\t\t}\n\t\t\tinput = {};\n\t\t} else {\n\t\t\tparsedURL = parseURL(input.url);\n\t\t}\n\n\t\tlet method = init.method || input.method || 'GET';\n\t\tmethod = method.toUpperCase();\n\n\t\tif ((init.body != null || isRequest(input) && input.body !== null) && (method === 'GET' || method === 'HEAD')) {\n\t\t\tthrow new TypeError('Request with GET/HEAD method cannot have body');\n\t\t}\n\n\t\tlet inputBody = init.body != null ? init.body : isRequest(input) && input.body !== null ? clone(input) : null;\n\n\t\tBody.call(this, inputBody, {\n\t\t\ttimeout: init.timeout || input.timeout || 0,\n\t\t\tsize: init.size || input.size || 0\n\t\t});\n\n\t\tconst headers = new Headers(init.headers || input.headers || {});\n\n\t\tif (inputBody != null && !headers.has('Content-Type')) {\n\t\t\tconst contentType = extractContentType(inputBody);\n\t\t\tif (contentType) {\n\t\t\t\theaders.append('Content-Type', contentType);\n\t\t\t}\n\t\t}\n\n\t\tlet signal = isRequest(input) ? input.signal : null;\n\t\tif ('signal' in init) signal = init.signal;\n\n\t\tif (signal != null && !isAbortSignal(signal)) {\n\t\t\tthrow new TypeError('Expected signal to be an instanceof AbortSignal');\n\t\t}\n\n\t\tthis[INTERNALS$2] = {\n\t\t\tmethod,\n\t\t\tredirect: init.redirect || input.redirect || 'follow',\n\t\t\theaders,\n\t\t\tparsedURL,\n\t\t\tsignal\n\t\t};\n\n\t\t// node-fetch-only options\n\t\tthis.follow = init.follow !== undefined ? init.follow : input.follow !== undefined ? input.follow : 20;\n\t\tthis.compress = init.compress !== undefined ? init.compress : input.compress !== undefined ? input.compress : true;\n\t\tthis.counter = init.counter || input.counter || 0;\n\t\tthis.agent = init.agent || input.agent;\n\t}\n\n\tget method() {\n\t\treturn this[INTERNALS$2].method;\n\t}\n\n\tget url() {\n\t\treturn format_url(this[INTERNALS$2].parsedURL);\n\t}\n\n\tget headers() {\n\t\treturn this[INTERNALS$2].headers;\n\t}\n\n\tget redirect() {\n\t\treturn this[INTERNALS$2].redirect;\n\t}\n\n\tget signal() {\n\t\treturn this[INTERNALS$2].signal;\n\t}\n\n\t/**\n  * Clone this request\n  *\n  * @return  Request\n  */\n\tclone() {\n\t\treturn new Request(this);\n\t}\n}\n\nBody.mixIn(Request.prototype);\n\nObject.defineProperty(Request.prototype, Symbol.toStringTag, {\n\tvalue: 'Request',\n\twritable: false,\n\tenumerable: false,\n\tconfigurable: true\n});\n\nObject.defineProperties(Request.prototype, {\n\tmethod: { enumerable: true },\n\turl: { enumerable: true },\n\theaders: { enumerable: true },\n\tredirect: { enumerable: true },\n\tclone: { enumerable: true },\n\tsignal: { enumerable: true }\n});\n\n/**\n * Convert a Request to Node.js http request options.\n *\n * @param   Request  A Request instance\n * @return  Object   The options object to be passed to http.request\n */\nfunction getNodeRequestOptions(request) {\n\tconst parsedURL = request[INTERNALS$2].parsedURL;\n\tconst headers = new Headers(request[INTERNALS$2].headers);\n\n\t// fetch step 1.3\n\tif (!headers.has('Accept')) {\n\t\theaders.set('Accept', '*/*');\n\t}\n\n\t// Basic fetch\n\tif (!parsedURL.protocol || !parsedURL.hostname) {\n\t\tthrow new TypeError('Only absolute URLs are supported');\n\t}\n\n\tif (!/^https?:$/.test(parsedURL.protocol)) {\n\t\tthrow new TypeError('Only HTTP(S) protocols are supported');\n\t}\n\n\tif (request.signal && request.body instanceof Stream.Readable && !streamDestructionSupported) {\n\t\tthrow new Error('Cancellation of streamed requests with AbortSignal is not supported in node < 8');\n\t}\n\n\t// HTTP-network-or-cache fetch steps 2.4-2.7\n\tlet contentLengthValue = null;\n\tif (request.body == null && /^(POST|PUT)$/i.test(request.method)) {\n\t\tcontentLengthValue = '0';\n\t}\n\tif (request.body != null) {\n\t\tconst totalBytes = getTotalBytes(request);\n\t\tif (typeof totalBytes === 'number') {\n\t\t\tcontentLengthValue = String(totalBytes);\n\t\t}\n\t}\n\tif (contentLengthValue) {\n\t\theaders.set('Content-Length', contentLengthValue);\n\t}\n\n\t// HTTP-network-or-cache fetch step 2.11\n\tif (!headers.has('User-Agent')) {\n\t\theaders.set('User-Agent', 'node-fetch/1.0 (+https://github.com/bitinn/node-fetch)');\n\t}\n\n\t// HTTP-network-or-cache fetch step 2.15\n\tif (request.compress && !headers.has('Accept-Encoding')) {\n\t\theaders.set('Accept-Encoding', 'gzip,deflate');\n\t}\n\n\tlet agent = request.agent;\n\tif (typeof agent === 'function') {\n\t\tagent = agent(parsedURL);\n\t}\n\n\t// HTTP-network fetch step 4.2\n\t// chunked encoding is handled by Node.js\n\n\treturn Object.assign({}, parsedURL, {\n\t\tmethod: request.method,\n\t\theaders: exportNodeCompatibleHeaders(headers),\n\t\tagent\n\t});\n}\n\n/**\n * abort-error.js\n *\n * AbortError interface for cancelled requests\n */\n\n/**\n * Create AbortError instance\n *\n * @param   String      message      Error message for human\n * @return  AbortError\n */\nfunction AbortError(message) {\n  Error.call(this, message);\n\n  this.type = 'aborted';\n  this.message = message;\n\n  // hide custom error implementation details from end-users\n  Error.captureStackTrace(this, this.constructor);\n}\n\nAbortError.prototype = Object.create(Error.prototype);\nAbortError.prototype.constructor = AbortError;\nAbortError.prototype.name = 'AbortError';\n\nconst URL$1 = Url.URL || whatwgUrl.URL;\n\n// fix an issue where \"PassThrough\", \"resolve\" aren't a named export for node <10\nconst PassThrough$1 = Stream.PassThrough;\n\nconst isDomainOrSubdomain = function isDomainOrSubdomain(destination, original) {\n\tconst orig = new URL$1(original).hostname;\n\tconst dest = new URL$1(destination).hostname;\n\n\treturn orig === dest || orig[orig.length - dest.length - 1] === '.' && orig.endsWith(dest);\n};\n\n/**\n * isSameProtocol reports whether the two provided URLs use the same protocol.\n *\n * Both domains must already be in canonical form.\n * @param {string|URL} original\n * @param {string|URL} destination\n */\nconst isSameProtocol = function isSameProtocol(destination, original) {\n\tconst orig = new URL$1(original).protocol;\n\tconst dest = new URL$1(destination).protocol;\n\n\treturn orig === dest;\n};\n\n/**\n * Fetch function\n *\n * @param   Mixed    url   Absolute url or Request instance\n * @param   Object   opts  Fetch options\n * @return  Promise\n */\nfunction fetch(url, opts) {\n\n\t// allow custom promise\n\tif (!fetch.Promise) {\n\t\tthrow new Error('native promise missing, set fetch.Promise to your favorite alternative');\n\t}\n\n\tBody.Promise = fetch.Promise;\n\n\t// wrap http.request into fetch\n\treturn new fetch.Promise(function (resolve, reject) {\n\t\t// build request object\n\t\tconst request = new Request(url, opts);\n\t\tconst options = getNodeRequestOptions(request);\n\n\t\tconst send = (options.protocol === 'https:' ? https : http).request;\n\t\tconst signal = request.signal;\n\n\t\tlet response = null;\n\n\t\tconst abort = function abort() {\n\t\t\tlet error = new AbortError('The user aborted a request.');\n\t\t\treject(error);\n\t\t\tif (request.body && request.body instanceof Stream.Readable) {\n\t\t\t\tdestroyStream(request.body, error);\n\t\t\t}\n\t\t\tif (!response || !response.body) return;\n\t\t\tresponse.body.emit('error', error);\n\t\t};\n\n\t\tif (signal && signal.aborted) {\n\t\t\tabort();\n\t\t\treturn;\n\t\t}\n\n\t\tconst abortAndFinalize = function abortAndFinalize() {\n\t\t\tabort();\n\t\t\tfinalize();\n\t\t};\n\n\t\t// send request\n\t\tconst req = send(options);\n\t\tlet reqTimeout;\n\n\t\tif (signal) {\n\t\t\tsignal.addEventListener('abort', abortAndFinalize);\n\t\t}\n\n\t\tfunction finalize() {\n\t\t\treq.abort();\n\t\t\tif (signal) signal.removeEventListener('abort', abortAndFinalize);\n\t\t\tclearTimeout(reqTimeout);\n\t\t}\n\n\t\tif (request.timeout) {\n\t\t\treq.once('socket', function (socket) {\n\t\t\t\treqTimeout = setTimeout(function () {\n\t\t\t\t\treject(new FetchError(`network timeout at: ${request.url}`, 'request-timeout'));\n\t\t\t\t\tfinalize();\n\t\t\t\t}, request.timeout);\n\t\t\t});\n\t\t}\n\n\t\treq.on('error', function (err) {\n\t\t\treject(new FetchError(`request to ${request.url} failed, reason: ${err.message}`, 'system', err));\n\n\t\t\tif (response && response.body) {\n\t\t\t\tdestroyStream(response.body, err);\n\t\t\t}\n\n\t\t\tfinalize();\n\t\t});\n\n\t\tfixResponseChunkedTransferBadEnding(req, function (err) {\n\t\t\tif (signal && signal.aborted) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (response && response.body) {\n\t\t\t\tdestroyStream(response.body, err);\n\t\t\t}\n\t\t});\n\n\t\t/* c8 ignore next 18 */\n\t\tif (parseInt(process.version.substring(1)) < 14) {\n\t\t\t// Before Node.js 14, pipeline() does not fully support async iterators and does not always\n\t\t\t// properly handle when the socket close/end events are out of order.\n\t\t\treq.on('socket', function (s) {\n\t\t\t\ts.addListener('close', function (hadError) {\n\t\t\t\t\t// if a data listener is still present we didn't end cleanly\n\t\t\t\t\tconst hasDataListener = s.listenerCount('data') > 0;\n\n\t\t\t\t\t// if end happened before close but the socket didn't emit an error, do it now\n\t\t\t\t\tif (response && hasDataListener && !hadError && !(signal && signal.aborted)) {\n\t\t\t\t\t\tconst err = new Error('Premature close');\n\t\t\t\t\t\terr.code = 'ERR_STREAM_PREMATURE_CLOSE';\n\t\t\t\t\t\tresponse.body.emit('error', err);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\n\t\treq.on('response', function (res) {\n\t\t\tclearTimeout(reqTimeout);\n\n\t\t\tconst headers = createHeadersLenient(res.headers);\n\n\t\t\t// HTTP fetch step 5\n\t\t\tif (fetch.isRedirect(res.statusCode)) {\n\t\t\t\t// HTTP fetch step 5.2\n\t\t\t\tconst location = headers.get('Location');\n\n\t\t\t\t// HTTP fetch step 5.3\n\t\t\t\tlet locationURL = null;\n\t\t\t\ttry {\n\t\t\t\t\tlocationURL = location === null ? null : new URL$1(location, request.url).toString();\n\t\t\t\t} catch (err) {\n\t\t\t\t\t// error here can only be invalid URL in Location: header\n\t\t\t\t\t// do not throw when options.redirect == manual\n\t\t\t\t\t// let the user extract the errorneous redirect URL\n\t\t\t\t\tif (request.redirect !== 'manual') {\n\t\t\t\t\t\treject(new FetchError(`uri requested responds with an invalid redirect URL: ${location}`, 'invalid-redirect'));\n\t\t\t\t\t\tfinalize();\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// HTTP fetch step 5.5\n\t\t\t\tswitch (request.redirect) {\n\t\t\t\t\tcase 'error':\n\t\t\t\t\t\treject(new FetchError(`uri requested responds with a redirect, redirect mode is set to error: ${request.url}`, 'no-redirect'));\n\t\t\t\t\t\tfinalize();\n\t\t\t\t\t\treturn;\n\t\t\t\t\tcase 'manual':\n\t\t\t\t\t\t// node-fetch-specific step: make manual redirect a bit easier to use by setting the Location header value to the resolved URL.\n\t\t\t\t\t\tif (locationURL !== null) {\n\t\t\t\t\t\t\t// handle corrupted header\n\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\theaders.set('Location', locationURL);\n\t\t\t\t\t\t\t} catch (err) {\n\t\t\t\t\t\t\t\t// istanbul ignore next: nodejs server prevent invalid response headers, we can't test this through normal request\n\t\t\t\t\t\t\t\treject(err);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'follow':\n\t\t\t\t\t\t// HTTP-redirect fetch step 2\n\t\t\t\t\t\tif (locationURL === null) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// HTTP-redirect fetch step 5\n\t\t\t\t\t\tif (request.counter >= request.follow) {\n\t\t\t\t\t\t\treject(new FetchError(`maximum redirect reached at: ${request.url}`, 'max-redirect'));\n\t\t\t\t\t\t\tfinalize();\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// HTTP-redirect fetch step 6 (counter increment)\n\t\t\t\t\t\t// Create a new Request object.\n\t\t\t\t\t\tconst requestOpts = {\n\t\t\t\t\t\t\theaders: new Headers(request.headers),\n\t\t\t\t\t\t\tfollow: request.follow,\n\t\t\t\t\t\t\tcounter: request.counter + 1,\n\t\t\t\t\t\t\tagent: request.agent,\n\t\t\t\t\t\t\tcompress: request.compress,\n\t\t\t\t\t\t\tmethod: request.method,\n\t\t\t\t\t\t\tbody: request.body,\n\t\t\t\t\t\t\tsignal: request.signal,\n\t\t\t\t\t\t\ttimeout: request.timeout,\n\t\t\t\t\t\t\tsize: request.size\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\tif (!isDomainOrSubdomain(request.url, locationURL) || !isSameProtocol(request.url, locationURL)) {\n\t\t\t\t\t\t\tfor (const name of ['authorization', 'www-authenticate', 'cookie', 'cookie2']) {\n\t\t\t\t\t\t\t\trequestOpts.headers.delete(name);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// HTTP-redirect fetch step 9\n\t\t\t\t\t\tif (res.statusCode !== 303 && request.body && getTotalBytes(request) === null) {\n\t\t\t\t\t\t\treject(new FetchError('Cannot follow redirect with body being a readable stream', 'unsupported-redirect'));\n\t\t\t\t\t\t\tfinalize();\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// HTTP-redirect fetch step 11\n\t\t\t\t\t\tif (res.statusCode === 303 || (res.statusCode === 301 || res.statusCode === 302) && request.method === 'POST') {\n\t\t\t\t\t\t\trequestOpts.method = 'GET';\n\t\t\t\t\t\t\trequestOpts.body = undefined;\n\t\t\t\t\t\t\trequestOpts.headers.delete('content-length');\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// HTTP-redirect fetch step 15\n\t\t\t\t\t\tresolve(fetch(new Request(locationURL, requestOpts)));\n\t\t\t\t\t\tfinalize();\n\t\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// prepare response\n\t\t\tres.once('end', function () {\n\t\t\t\tif (signal) signal.removeEventListener('abort', abortAndFinalize);\n\t\t\t});\n\t\t\tlet body = res.pipe(new PassThrough$1());\n\n\t\t\tconst response_options = {\n\t\t\t\turl: request.url,\n\t\t\t\tstatus: res.statusCode,\n\t\t\t\tstatusText: res.statusMessage,\n\t\t\t\theaders: headers,\n\t\t\t\tsize: request.size,\n\t\t\t\ttimeout: request.timeout,\n\t\t\t\tcounter: request.counter\n\t\t\t};\n\n\t\t\t// HTTP-network fetch step 12.1.1.3\n\t\t\tconst codings = headers.get('Content-Encoding');\n\n\t\t\t// HTTP-network fetch step 12.1.1.4: handle content codings\n\n\t\t\t// in following scenarios we ignore compression support\n\t\t\t// 1. compression support is disabled\n\t\t\t// 2. HEAD request\n\t\t\t// 3. no Content-Encoding header\n\t\t\t// 4. no content response (204)\n\t\t\t// 5. content not modified response (304)\n\t\t\tif (!request.compress || request.method === 'HEAD' || codings === null || res.statusCode === 204 || res.statusCode === 304) {\n\t\t\t\tresponse = new Response(body, response_options);\n\t\t\t\tresolve(response);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// For Node v6+\n\t\t\t// Be less strict when decoding compressed responses, since sometimes\n\t\t\t// servers send slightly invalid responses that are still accepted\n\t\t\t// by common browsers.\n\t\t\t// Always using Z_SYNC_FLUSH is what cURL does.\n\t\t\tconst zlibOptions = {\n\t\t\t\tflush: zlib.Z_SYNC_FLUSH,\n\t\t\t\tfinishFlush: zlib.Z_SYNC_FLUSH\n\t\t\t};\n\n\t\t\t// for gzip\n\t\t\tif (codings == 'gzip' || codings == 'x-gzip') {\n\t\t\t\tbody = body.pipe(zlib.createGunzip(zlibOptions));\n\t\t\t\tresponse = new Response(body, response_options);\n\t\t\t\tresolve(response);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// for deflate\n\t\t\tif (codings == 'deflate' || codings == 'x-deflate') {\n\t\t\t\t// handle the infamous raw deflate response from old servers\n\t\t\t\t// a hack for old IIS and Apache servers\n\t\t\t\tconst raw = res.pipe(new PassThrough$1());\n\t\t\t\traw.once('data', function (chunk) {\n\t\t\t\t\t// see http://stackoverflow.com/questions/37519828\n\t\t\t\t\tif ((chunk[0] & 0x0F) === 0x08) {\n\t\t\t\t\t\tbody = body.pipe(zlib.createInflate());\n\t\t\t\t\t} else {\n\t\t\t\t\t\tbody = body.pipe(zlib.createInflateRaw());\n\t\t\t\t\t}\n\t\t\t\t\tresponse = new Response(body, response_options);\n\t\t\t\t\tresolve(response);\n\t\t\t\t});\n\t\t\t\traw.on('end', function () {\n\t\t\t\t\t// some old IIS servers return zero-length OK deflate responses, so 'data' is never emitted.\n\t\t\t\t\tif (!response) {\n\t\t\t\t\t\tresponse = new Response(body, response_options);\n\t\t\t\t\t\tresolve(response);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// for br\n\t\t\tif (codings == 'br' && typeof zlib.createBrotliDecompress === 'function') {\n\t\t\t\tbody = body.pipe(zlib.createBrotliDecompress());\n\t\t\t\tresponse = new Response(body, response_options);\n\t\t\t\tresolve(response);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// otherwise, use response as-is\n\t\t\tresponse = new Response(body, response_options);\n\t\t\tresolve(response);\n\t\t});\n\n\t\twriteToStream(req, request);\n\t});\n}\nfunction fixResponseChunkedTransferBadEnding(request, errorCallback) {\n\tlet socket;\n\n\trequest.on('socket', function (s) {\n\t\tsocket = s;\n\t});\n\n\trequest.on('response', function (response) {\n\t\tconst headers = response.headers;\n\n\t\tif (headers['transfer-encoding'] === 'chunked' && !headers['content-length']) {\n\t\t\tresponse.once('close', function (hadError) {\n\t\t\t\t// tests for socket presence, as in some situations the\n\t\t\t\t// the 'socket' event is not triggered for the request\n\t\t\t\t// (happens in deno), avoids `TypeError`\n\t\t\t\t// if a data listener is still present we didn't end cleanly\n\t\t\t\tconst hasDataListener = socket && socket.listenerCount('data') > 0;\n\n\t\t\t\tif (hasDataListener && !hadError) {\n\t\t\t\t\tconst err = new Error('Premature close');\n\t\t\t\t\terr.code = 'ERR_STREAM_PREMATURE_CLOSE';\n\t\t\t\t\terrorCallback(err);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t});\n}\n\nfunction destroyStream(stream, err) {\n\tif (stream.destroy) {\n\t\tstream.destroy(err);\n\t} else {\n\t\t// node < 8\n\t\tstream.emit('error', err);\n\t\tstream.end();\n\t}\n}\n\n/**\n * Redirect code matching\n *\n * @param   Number   code  Status code\n * @return  Boolean\n */\nfetch.isRedirect = function (code) {\n\treturn code === 301 || code === 302 || code === 303 || code === 307 || code === 308;\n};\n\n// expose Promise\nfetch.Promise = global.Promise;\n\nexport default fetch;\nexport { Headers, Request, Response, FetchError, AbortError };\n","\"use strict\";\n\nvar realFetch = require('node-fetch');\nmodule.exports = function(url, options) {\n\tif (/^\\/\\//.test(url)) {\n\t\turl = 'https:' + url;\n\t}\n\treturn realFetch.call(this, url, options);\n};\n\nif (!global.fetch) {\n\tglobal.fetch = module.exports;\n\tglobal.Response = realFetch.Response;\n\tglobal.Headers = realFetch.Headers;\n\tglobal.Request = realFetch.Request;\n}\n","import inquirer from 'inquirer';\n\n/**\n * Validate config structure\n */\nexport function validateConfig(config) {\n  if (!config || typeof config !== 'object') throw new Error('Config must be an object.');\n  if (!config.PROPERTIES || typeof config.PROPERTIES !== 'object') throw new Error('Config missing PROPERTIES object.');\n  if (config.GROUPINGS && typeof config.GROUPINGS !== 'object') throw new Error('GROUPINGS must be an object if present.');\n  if (config.FILE_OUTPUT_NAME && typeof config.FILE_OUTPUT_NAME !== 'string') throw new Error('FILE_OUTPUT_NAME must be a string.');\n}\n\n/**\n * Build queries for prompt logic\n */\nexport function buildQueries(config) {\n  const queries = [];\n  const propertyKeys = Object.keys(config.PROPERTIES || {});\n  const groupNames = config.GROUPINGS ? Object.keys(config.GROUPINGS) : [];\n  const allGroupedKeys = new Set();\n  if (config.GROUPINGS) {\n    for (const groupName of groupNames) {\n      const groupObj = config.GROUPINGS[groupName];\n      queries.push({ type: 'group', name: groupName, keys: groupObj.KEYS, values: groupObj.VALUES });\n      for (const key of groupObj.KEYS) {\n        allGroupedKeys.add(key);\n      }\n    }\n  }\n  for (const key of propertyKeys) {\n    if (!allGroupedKeys.has(key) && !(Array.isArray(config.PROPERTIES[key]) && config.PROPERTIES[key].length === 0)) {\n      queries.push({ type: 'individual', name: key });\n    }\n  }\n  // Use Map for fast lookup\n  return new Map(queries.map(q => [q.type === 'group' ? `GROUP:${q.name}` : q.name, q]));\n}\n\n/**\n * Build choices for multi-select prompt\n */\nexport function buildUpdateChoices(queries) {\n  return Array.from(queries.values()).map(q => q.type === 'group'\n    ? { name: `[GROUP] ${q.name}`, value: `GROUP:${q.name}` }\n    : { name: q.name, value: q.name });\n}\n\n/**\n * Prompt for value (group or individual)\n */\nexport async function promptForValue(item, queriesMap, currentEnv, config) {\n  try {\n    // Accept custom prompt message as 5th argument\n    const customPromptMessage = arguments.length > 4 ? arguments[4] : undefined;\n    if (item.startsWith('GROUP:')) {\n      const groupName = item.replace('GROUP:', '');\n      const groupQuery = queriesMap.get(item);\n      if (!groupQuery) return {};\n      const { groupValue } = await inquirer.prompt([\n        {\n          type: 'list',\n          name: 'groupValue',\n          message: customPromptMessage || `Choose value for group ${groupName}:`,\n          choices: groupQuery.values,\n          default: currentEnv[groupQuery.keys[0]]\n        }\n      ]);\n      const result = {};\n      for (const key of groupQuery.keys) {\n        result[key] = groupValue;\n      }\n      return result;\n    } else {\n      let promptOptions = {\n        type: 'input',\n        name: 'newValue',\n        message: customPromptMessage || `Enter new value for ${item}:`,\n        default: currentEnv[item]\n      };\n      if (config.PROPERTIES && Array.isArray(config.PROPERTIES[item])) {\n        promptOptions = {\n          type: 'list',\n          name: 'newValue',\n          message: customPromptMessage || `Choose new value for ${item}:`,\n          choices: config.PROPERTIES[item],\n          default: currentEnv[item]\n        };\n      }\n      const { newValue } = await inquirer.prompt([promptOptions]);\n      return { [item]: newValue };\n    }\n  } catch (err) {\n    console.error(`\\u001b[31mPrompt error: ${err.message}\\u001b[0m`);\n    throw err;\n  }\n}\n","import { SecretClient } from '@azure/keyvault-secrets';\n\n/**\n * Utility to normalize and format secret names for Key Vault lookup\n * Example: EXAMPLE_CLIENT_ID=A -> EXAMPLE-CLIENT-ID-A\n */\nexport function buildSecretName(key, value) {\n  // Replace underscores with dashes, preserve case, append value if present\n  let base = key.replace(/_/g, '-');\n  if (value) {\n    return `${base}-${String(value)}`;\n  }\n  return base;\n}\n\n/**\n * Query Key Vault for secrets based on user answers\n * answers: { [key]: value }\n * Returns: { [key]: secretValue }\n */\nexport async function fetchSecretsFromVault({ answers, vaultUrl, credential, config }) {\n  const client = new SecretClient(vaultUrl, credential);\n  const result = {};\n  const useJsonLogic = config && typeof config.JSON_LOGIC === 'boolean' ? config.JSON_LOGIC : false;\n  // Prepare all queries for parallel execution\n  const queries = Object.entries(answers).map(([key, value]) => async () => {\n    if (useJsonLogic) {\n      const unifiedSecretName = buildSecretName(key);\n      // console.log(`[DEBUG] JSON_LOGIC enabled. Searching for unified secret: key='${key}', value='${value}', secretName='${unifiedSecretName}'`);\n      try {\n        const secret = await client.getSecret(unifiedSecretName);\n        let jsonObj;\n        try {\n          jsonObj = JSON.parse(secret.value);\n        } catch (jsonErr) {\n          // console.error(`Error parsing JSON for secret '${unifiedSecretName}': ${jsonErr.message}`);\n          return [key, `[INVALID JSON: ${unifiedSecretName}]`];\n        }\n        if (jsonObj && Object.prototype.hasOwnProperty.call(jsonObj, value)) {\n          return [key, jsonObj[value]];\n        } else {\n          // console.error(`Warning: Key '${value}' not found in JSON for secret '${unifiedSecretName}'.`);\n          return [key, `[NOT FOUND: ${unifiedSecretName} -> ${value}]`];\n        }\n      } catch (err) {\n        // console.error(`Warning: Unified secret '${unifiedSecretName}' not found in Key Vault.`);\n        return [key, `[NOT FOUND: ${unifiedSecretName}]`];\n      }\n    } else {\n      const secretName = buildSecretName(key, value);\n      // console.log(`[DEBUG] Searching for secret: key='${key}', value='${value}', secretName='${secretName}'`);\n      try {\n        const secret = await client.getSecret(secretName);\n        return [key, secret.value];\n      } catch (err) {\n        // console.error(`Warning: Secret '${secretName}' not found in Key Vault.`);\n        return [key, `[NOT FOUND: ${secretName}]`];\n      }\n    }\n  });\n  // Run all queries in parallel\n  const results = await Promise.all(queries.map(fn => fn()));\n  for (const [key, value] of results) {\n    result[key] = value;\n  }\n  return result;\n}\n","import { DefaultAzureCredential } from '@azure/identity';\nimport { SecretClient } from '@azure/keyvault-secrets';\nimport { Client } from '@microsoft/microsoft-graph-client';\nimport inquirer from 'inquirer';\nimport fs from 'fs';\nconst fsp = fs.promises;\nimport 'isomorphic-fetch';\nimport { validateConfig, buildQueries, buildUpdateChoices, promptForValue } from './promptUtils.mjs';\nimport { fetchSecretsFromVault } from './vaultQueryUtils.mjs';\n\n/**\n * Shared logic for env file creation and modification\n */\nasync function promptAndWriteEnv({ config, envFilePath, currentEnv = {}, skipEvaluation = false }) {\n  // Validate config structure\n  try {\n    validateConfig(config);\n  } catch (err) {\n    if (err.message === 'Config missing PROPERTIES object.') {\n      // Fallback: prompt for vault secrets dynamically\n      const vaultUrl = config.AZURE_SERVER;\n      const credential = getAzureCredentials();\n      // Prefer group-aware prompt if available\n      let answers;\n      try {\n        const { promptForVaultSecretsWithGroups } = await import('./vaultPromptGroupsUtils.mjs');\n        answers = await promptForVaultSecretsWithGroups({ vaultUrl, credential });\n      } catch {\n        const { promptForVaultSecrets } = await import('./vaultPromptUtils.mjs');\n        answers = await promptForVaultSecrets({ vaultUrl, credential });\n      }\n      let envContent = '';\n      for (const [key, value] of Object.entries(answers)) {\n        envContent += `${key}=${value}\\n`;\n      }\n      await fsp.writeFile(envFilePath, envContent);\n      console.log(`${envFilePath} created from Key Vault secrets.`);\n      return;\n    } else {\n      console.error(`\\u001b[31mConfig validation error: ${err.message}\\u001b[0m`);\n      throw err;\n    }\n  }\n  const keys = Object.keys(currentEnv).length > 0 ? Object.keys(currentEnv) : Object.keys(config.PROPERTIES || {});\n  let updatedEnv = { ...currentEnv };\n  let groupedKeys = new Set();\n  let answers = {};\n  let queriesMap = buildQueries(config);\n  let queries = Array.from(queriesMap.values());\n  let updateChoices = buildUpdateChoices(queriesMap);\n  let keysToUpdate = [];\n  if (!skipEvaluation && Object.keys(currentEnv).length > 0) {\n    if (updateChoices.length === 0) {\n      keysToUpdate = [];\n    } else {\n      try {\n        const promptRes = await inquirer.prompt([\n          {\n            type: 'checkbox',\n            name: 'keysToUpdate',\n            message: 'Select groups/keys to update:',\n            choices: updateChoices\n          }\n        ]);\n        keysToUpdate = promptRes.keysToUpdate;\n      } catch (err) {\n        console.error(`\\u001b[31mPrompt error: ${err.message}\\u001b[0m`);\n        throw err;\n      }\n    }\n  } else {\n    keysToUpdate = updateChoices.map(c => c.value);\n  }\n  // Run through selected queries and collect answers\n  if (keysToUpdate.length === 0) {\n    // nothing to update\n  } else {\n    for (const item of keysToUpdate) {\n      const result = await promptForValue(item, queriesMap, currentEnv, config);\n      for (const [key, value] of Object.entries(result)) {\n        updatedEnv[key] = value;\n        answers[key] = value;\n        if (item.startsWith('GROUP:')) groupedKeys.add(key);\n      }\n    }\n  }\n\n  // Query Azure Key Vault for each key/value pair using vaultQueryUtils\n  let vaultUrl = config.AZURE_SERVER;\n  if (!vaultUrl) {\n    console.error(`\\u001b[31mNo Key Vault URL provided in config (AZURE_SERVER).\\u001b[0m`);\n    throw new Error('No Key Vault URL provided.');\n  }\n  const credential = getAzureCredentials();\n  const secrets = await fetchSecretsFromVault({ answers, vaultUrl, credential, config });\n  let envContent = '';\n  // Get all keys from config.PROPERTIES (ensures all keys are present)\n  const allConfigKeys = Object.keys(config.PROPERTIES || {});\n  for (const key of allConfigKeys) {\n    if (Object.keys(secrets).includes(key)) {\n      envContent += `${key}=${secrets[key]}\\n`;\n    } else if (currentEnv[key] !== undefined) {\n      envContent += `${key}=${currentEnv[key]}\\n`;\n    } else {\n      envContent += `${key}=\\n`;\n    }\n  }\n  try {\n    await fsp.writeFile(envFilePath, envContent);\n    console.log(`${envFilePath} updated with secrets from Azure Key Vault.`);\n  } catch (err) {\n    console.error(`\\u001b[31mFailed to write env file: ${err.message}\\u001b[0m`);\n    throw err;\n  }\n}\n/**\n * Reads and parses a .env file into an object\n */\nasync function readEnvFile(envFilePath) {\n  try {\n    await fsp.access(envFilePath);\n  } catch {\n    return {};\n  }\n  try {\n    const content = await fsp.readFile(envFilePath, 'utf-8');\n    const lines = content.split(/\\r?\\n/);\n    const env = {};\n    for (const line of lines) {\n      if (!line.trim() || line.trim().startsWith('#')) continue;\n      const [key, ...rest] = line.split('=');\n      env[key.trim()] = rest.join('=').trim();\n    }\n    return env;\n  } catch (err) {\n    console.error(`\\u001b[31mFailed to read env file: ${err.message}\\u001b[0m`);\n    return {};\n  }\n}\n\n/**\n * Allows user to select which env keys to update, and prompts for new values\n */\nexport async function updateEnvFileInteractively(envFilePath) {\n  let currentEnv = {};\n  let config = {};\n  try {\n    currentEnv = await readEnvFile(envFilePath);\n    const configPath = process.argv.find(arg => arg.startsWith('--config='));\n    if (configPath) {\n      const configFile = configPath.split('=')[1];\n      const configContent = await fsp.readFile(configFile, 'utf-8');\n      config = JSON.parse(configContent);\n    }\n  } catch (err) {\n    console.error(`\\u001b[31mError loading config or env: ${err.message}\\u001b[0m`);\n    throw err;\n  }\n  if (Object.keys(currentEnv).length === 0) {\n    console.log('No existing values found in env file.');\n    return;\n  }\n  await promptAndWriteEnv({ config, envFilePath, currentEnv, skipEvaluation: false });\n}\n\nexport function getAzureCredentials() {\n  return new DefaultAzureCredential();\n}\n\nexport async function getCurrentUserEmail() {\n  const credential = getAzureCredentials();\n  const tokenResponse = await credential.getToken('https://graph.microsoft.com/.default');\n  const client = Client.init({\n    authProvider: (done) => {\n      done(null, tokenResponse.token);\n    }\n  });\n  const user = await client.api('/me').get();\n  const email = user.mail || user.userPrincipalName;\n  // Print in green with a space below (using console.log for reliability)\n  console.log(`\\u001b[32mCurrent user email: ${email}\\u001b[0m\\n`);\n  return email;\n}\n\nexport async function promptKeyVaultSecretsAndWriteEnv(options = {}) {\n  // Accept FILE_OUTPUT_NAME from config as envFile\n  const envFile = options.FILE_OUTPUT_NAME || options.envFile || '.env';\n  // If propertyValues is present, skip all prompts and Key Vault logic\n  if (options.propertyValues) {\n    let envContent = '';\n    for (const [key, value] of Object.entries(options.propertyValues)) {\n      if (Array.isArray(value)) {\n        value.forEach((v, idx) => {\n          envContent += `${key}_${idx + 1}=${v}\\n`;\n        });\n      } else {\n        envContent += `${key}=${value}\\n`;\n      }\n    }\n    try {\n      await fsp.writeFile(envFile, envContent);\n      console.log(`${envFile} file created with values from config.`);\n    } catch (err) {\n      console.error(`\\u001b[31mFailed to write env file: ${err.message}\\u001b[0m`);\n      throw err;\n    }\n    return;\n  }\n\n  // Otherwise, run interactive prompt and Key Vault logic\n  let config = { ...options };\n  await promptAndWriteEnv({ config, envFilePath: envFile, skipEvaluation: true });\n\n  // Otherwise, use inputs if provided\n  let KEY_VAULT_INPUTS = options.inputs;\n  let answers = {};\n  let envContent = '';\n  if (KEY_VAULT_INPUTS) {\n    for (const input of KEY_VAULT_INPUTS) {\n      let promptType = 'input';\n      if (input.choices && input.choices.length > 0) {\n        promptType = input.key === 'secrets' ? 'checkbox' : 'list';\n      }\n      try {\n        const response = await inquirer.prompt([\n          {\n            type: promptType,\n            name: input.key,\n            message: `Choose ${input.key}:`,\n            choices: input.choices\n          }\n        ]);\n        answers[input.key] = response[input.key];\n      } catch (err) {\n        console.error(`\\u001b[31mPrompt error: ${err.message}\\u001b[0m`);\n        throw err;\n      }\n    }\n\n    const credential = getAzureCredentials();\n    // vaultUrl must be defined in options or config\n    const vaultUrl = options.vaultUrl || config.AZURE_SERVER;\n    if (!vaultUrl) {\n      console.error(`\\u001b[31mNo Key Vault URL provided.\\u001b[0m`);\n      throw new Error('No Key Vault URL provided.');\n    }\n    const client = new SecretClient(vaultUrl, credential);\n    for (const input of KEY_VAULT_INPUTS) {\n      if (input.key !== 'secrets') {\n        envContent += `${input.key.toUpperCase()}=${answers[input.key]}\\n`;\n      }\n    }\n    for (const name of answers.secrets || []) {\n      try {\n        const secret = await client.getSecret(name);\n        envContent += `${name}=${secret.value}\\n`;\n      } catch (err) {\n        console.error(`Failed to fetch secret '${name}':`, err.message);\n      }\n    }\n    try {\n      await fsp.writeFile(envFile, envContent);\n      console.log(`${envFile} file created with retrieved secrets.`);\n    } catch (err) {\n      console.error(`\\u001b[31mFailed to write env file: ${err.message}\\u001b[0m`);\n      throw err;\n    }\n  }\n}\n","import fs from 'node:fs';\n\nlet isDockerCached;\n\nfunction hasDockerEnv() {\n\ttry {\n\t\tfs.statSync('/.dockerenv');\n\t\treturn true;\n\t} catch {\n\t\treturn false;\n\t}\n}\n\nfunction hasDockerCGroup() {\n\ttry {\n\t\treturn fs.readFileSync('/proc/self/cgroup', 'utf8').includes('docker');\n\t} catch {\n\t\treturn false;\n\t}\n}\n\nexport default function isDocker() {\n\t// TODO: Use `??=` when targeting Node.js 16.\n\tif (isDockerCached === undefined) {\n\t\tisDockerCached = hasDockerEnv() || hasDockerCGroup();\n\t}\n\n\treturn isDockerCached;\n}\n","import fs from 'node:fs';\nimport isDocker from 'is-docker';\n\nlet cachedResult;\n\n// Podman detection\nconst hasContainerEnv = () => {\n\ttry {\n\t\tfs.statSync('/run/.containerenv');\n\t\treturn true;\n\t} catch {\n\t\treturn false;\n\t}\n};\n\nexport default function isInsideContainer() {\n\t// TODO: Use `??=` when targeting Node.js 16.\n\tif (cachedResult === undefined) {\n\t\tcachedResult = hasContainerEnv() || isDocker();\n\t}\n\n\treturn cachedResult;\n}\n","import process from 'node:process';\nimport os from 'node:os';\nimport fs from 'node:fs';\nimport isInsideContainer from 'is-inside-container';\n\nconst isWsl = () => {\n\tif (process.platform !== 'linux') {\n\t\treturn false;\n\t}\n\n\tif (os.release().toLowerCase().includes('microsoft')) {\n\t\tif (isInsideContainer()) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\ttry {\n\t\treturn fs.readFileSync('/proc/version', 'utf8').toLowerCase().includes('microsoft')\n\t\t\t? !isInsideContainer() : false;\n\t} catch {\n\t\treturn false;\n\t}\n};\n\nexport default process.env.__IS_WSL_TEST__ ? isWsl : isWsl();\n","import process from 'node:process';\nimport fs, {constants as fsConstants} from 'node:fs/promises';\nimport isWsl from 'is-wsl';\n\nexport const wslDrivesMountPoint = (() => {\n\t// Default value for \"root\" param\n\t// according to https://docs.microsoft.com/en-us/windows/wsl/wsl-config\n\tconst defaultMountPoint = '/mnt/';\n\n\tlet mountPoint;\n\n\treturn async function () {\n\t\tif (mountPoint) {\n\t\t\t// Return memoized mount point value\n\t\t\treturn mountPoint;\n\t\t}\n\n\t\tconst configFilePath = '/etc/wsl.conf';\n\n\t\tlet isConfigFileExists = false;\n\t\ttry {\n\t\t\tawait fs.access(configFilePath, fsConstants.F_OK);\n\t\t\tisConfigFileExists = true;\n\t\t} catch {}\n\n\t\tif (!isConfigFileExists) {\n\t\t\treturn defaultMountPoint;\n\t\t}\n\n\t\tconst configContent = await fs.readFile(configFilePath, {encoding: 'utf8'});\n\t\tconst configMountPoint = /(?<!#.*)root\\s*=\\s*(?<mountPoint>.*)/g.exec(configContent);\n\n\t\tif (!configMountPoint) {\n\t\t\treturn defaultMountPoint;\n\t\t}\n\n\t\tmountPoint = configMountPoint.groups.mountPoint.trim();\n\t\tmountPoint = mountPoint.endsWith('/') ? mountPoint : `${mountPoint}/`;\n\n\t\treturn mountPoint;\n\t};\n})();\n\nexport const powerShellPathFromWsl = async () => {\n\tconst mountPoint = await wslDrivesMountPoint();\n\treturn `${mountPoint}c/Windows/System32/WindowsPowerShell/v1.0/powershell.exe`;\n};\n\nexport const powerShellPath = async () => {\n\tif (isWsl) {\n\t\treturn powerShellPathFromWsl();\n\t}\n\n\treturn `${process.env.SYSTEMROOT || process.env.windir || String.raw`C:\\Windows`}\\\\System32\\\\WindowsPowerShell\\\\v1.0\\\\powershell.exe`;\n};\n\nexport {default as isWsl} from 'is-wsl';\n","export default function defineLazyProperty(object, propertyName, valueGetter) {\n\tconst define = value => Object.defineProperty(object, propertyName, {value, enumerable: true, writable: true});\n\n\tObject.defineProperty(object, propertyName, {\n\t\tconfigurable: true,\n\t\tenumerable: true,\n\t\tget() {\n\t\t\tconst result = valueGetter();\n\t\t\tdefine(result);\n\t\t\treturn result;\n\t\t},\n\t\tset(value) {\n\t\t\tdefine(value);\n\t\t}\n\t});\n\n\treturn object;\n}\n","import {promisify} from 'node:util';\nimport process from 'node:process';\nimport {execFile} from 'node:child_process';\n\nconst execFileAsync = promisify(execFile);\n\nexport default async function defaultBrowserId() {\n\tif (process.platform !== 'darwin') {\n\t\tthrow new Error('macOS only');\n\t}\n\n\tconst {stdout} = await execFileAsync('defaults', ['read', 'com.apple.LaunchServices/com.apple.launchservices.secure', 'LSHandlers']);\n\n\t// `(?!-)` is to prevent matching `LSHandlerRoleAll = \"-\";`.\n\tconst match = /LSHandlerRoleAll = \"(?!-)(?<id>[^\"]+?)\";\\s+?LSHandlerURLScheme = (?:http|https);/.exec(stdout);\n\n\treturn match?.groups.id ?? 'com.apple.Safari';\n}\n","import process from 'node:process';\nimport {promisify} from 'node:util';\nimport {execFile, execFileSync} from 'node:child_process';\n\nconst execFileAsync = promisify(execFile);\n\nexport async function runAppleScript(script, {humanReadableOutput = true} = {}) {\n\tif (process.platform !== 'darwin') {\n\t\tthrow new Error('macOS only');\n\t}\n\n\tconst outputArguments = humanReadableOutput ? [] : ['-ss'];\n\n\tconst {stdout} = await execFileAsync('osascript', ['-e', script, outputArguments]);\n\treturn stdout.trim();\n}\n\nexport function runAppleScriptSync(script, {humanReadableOutput = true} = {}) {\n\tif (process.platform !== 'darwin') {\n\t\tthrow new Error('macOS only');\n\t}\n\n\tconst outputArguments = humanReadableOutput ? [] : ['-ss'];\n\n\tconst stdout = execFileSync('osascript', ['-e', script, ...outputArguments], {\n\t\tencoding: 'utf8',\n\t\tstdio: ['ignore', 'pipe', 'ignore'],\n\t\ttimeout: 500,\n\t});\n\n\treturn stdout.trim();\n}\n","import {runAppleScript} from 'run-applescript';\n\nexport default async function bundleName(bundleId) {\n\treturn runAppleScript(`tell application \"Finder\" to set app_path to application file id \"${bundleId}\" as string\\ntell application \"System Events\" to get value of property list item \"CFBundleName\" of property list file (app_path & \":Contents:Info.plist\")`);\n}\n","import {promisify} from 'node:util';\nimport {execFile} from 'node:child_process';\n\nconst execFileAsync = promisify(execFile);\n\n// Windows doesn't have browser IDs in the same way macOS/Linux does so we give fake\n// ones that look real and match the macOS/Linux versions for cross-platform apps.\nconst windowsBrowserProgIds = {\n\tAppXq0fevzme2pys62n3e0fbqa7peapykr8v: {name: 'Edge', id: 'com.microsoft.edge.old'},\n\tMSEdgeDHTML: {name: 'Edge', id: 'com.microsoft.edge'}, // On macOS, it's \"com.microsoft.edgemac\"\n\tMSEdgeHTM: {name: 'Edge', id: 'com.microsoft.edge'}, // Newer Edge/Win10 releases\n\t'IE.HTTP': {name: 'Internet Explorer', id: 'com.microsoft.ie'},\n\tFirefoxURL: {name: 'Firefox', id: 'org.mozilla.firefox'},\n\tChromeHTML: {name: 'Chrome', id: 'com.google.chrome'},\n\tBraveHTML: {name: 'Brave', id: 'com.brave.Browser'},\n\tBraveBHTML: {name: 'Brave Beta', id: 'com.brave.Browser.beta'},\n\tBraveSSHTM: {name: 'Brave Nightly', id: 'com.brave.Browser.nightly'},\n};\n\nexport class UnknownBrowserError extends Error {}\n\nexport default async function defaultBrowser(_execFileAsync = execFileAsync) {\n\tconst {stdout} = await _execFileAsync('reg', [\n\t\t'QUERY',\n\t\t' HKEY_CURRENT_USER\\\\Software\\\\Microsoft\\\\Windows\\\\Shell\\\\Associations\\\\UrlAssociations\\\\http\\\\UserChoice',\n\t\t'/v',\n\t\t'ProgId',\n\t]);\n\n\tconst match = /ProgId\\s*REG_SZ\\s*(?<id>\\S+)/.exec(stdout);\n\tif (!match) {\n\t\tthrow new UnknownBrowserError(`Cannot find Windows browser in stdout: ${JSON.stringify(stdout)}`);\n\t}\n\n\tconst {id} = match.groups;\n\n\tconst browser = windowsBrowserProgIds[id];\n\tif (!browser) {\n\t\tthrow new UnknownBrowserError(`Unknown browser ID: ${id}`);\n\t}\n\n\treturn browser;\n}\n","import {promisify} from 'node:util';\nimport process from 'node:process';\nimport {execFile} from 'node:child_process';\nimport defaultBrowserId from 'default-browser-id';\nimport bundleName from 'bundle-name';\nimport windows from './windows.js';\n\nconst execFileAsync = promisify(execFile);\n\n// Inlined: https://github.com/sindresorhus/titleize/blob/main/index.js\nconst titleize = string => string.toLowerCase().replaceAll(/(?:^|\\s|-)\\S/g, x => x.toUpperCase());\n\nexport default async function defaultBrowser() {\n\tif (process.platform === 'darwin') {\n\t\tconst id = await defaultBrowserId();\n\t\tconst name = await bundleName(id);\n\t\treturn {name, id};\n\t}\n\n\tif (process.platform === 'linux') {\n\t\tconst {stdout} = await execFileAsync('xdg-mime', ['query', 'default', 'x-scheme-handler/http']);\n\t\tconst id = stdout.trim();\n\t\tconst name = titleize(id.replace(/.desktop$/, '').replace('-', ' '));\n\t\treturn {name, id};\n\t}\n\n\tif (process.platform === 'win32') {\n\t\treturn windows();\n\t}\n\n\tthrow new Error('Only macOS, Linux, and Windows are supported');\n}\n","import process from 'node:process';\nimport {Buffer} from 'node:buffer';\nimport path from 'node:path';\nimport {fileURLToPath} from 'node:url';\nimport {promisify} from 'node:util';\nimport childProcess from 'node:child_process';\nimport fs, {constants as fsConstants} from 'node:fs/promises';\nimport {isWsl, powerShellPath} from 'wsl-utils';\nimport defineLazyProperty from 'define-lazy-prop';\nimport defaultBrowser from 'default-browser';\nimport isInsideContainer from 'is-inside-container';\n\nconst execFile = promisify(childProcess.execFile);\n\n// Path to included `xdg-open`.\nconst __dirname = path.dirname(fileURLToPath(import.meta.url));\nconst localXdgOpenPath = path.join(__dirname, 'xdg-open');\n\nconst {platform, arch} = process;\n\n/**\nGet the default browser name in Windows from WSL.\n\n@returns {Promise<string>} Browser name.\n*/\nasync function getWindowsDefaultBrowserFromWsl() {\n\tconst powershellPath = await powerShellPath();\n\tconst rawCommand = String.raw`(Get-ItemProperty -Path \"HKCU:\\Software\\Microsoft\\Windows\\Shell\\Associations\\UrlAssociations\\http\\UserChoice\").ProgId`;\n\tconst encodedCommand = Buffer.from(rawCommand, 'utf16le').toString('base64');\n\n\tconst {stdout} = await execFile(\n\t\tpowershellPath,\n\t\t[\n\t\t\t'-NoProfile',\n\t\t\t'-NonInteractive',\n\t\t\t'-ExecutionPolicy',\n\t\t\t'Bypass',\n\t\t\t'-EncodedCommand',\n\t\t\tencodedCommand,\n\t\t],\n\t\t{encoding: 'utf8'},\n\t);\n\n\tconst progId = stdout.trim();\n\n\t// Map ProgId to browser IDs\n\tconst browserMap = {\n\t\tChromeHTML: 'com.google.chrome',\n\t\tBraveHTML: 'com.brave.Browser',\n\t\tMSEdgeHTM: 'com.microsoft.edge',\n\t\tFirefoxURL: 'org.mozilla.firefox',\n\t};\n\n\treturn browserMap[progId] ? {id: browserMap[progId]} : {};\n}\n\nconst pTryEach = async (array, mapper) => {\n\tlet latestError;\n\n\tfor (const item of array) {\n\t\ttry {\n\t\t\treturn await mapper(item); // eslint-disable-line no-await-in-loop\n\t\t} catch (error) {\n\t\t\tlatestError = error;\n\t\t}\n\t}\n\n\tthrow latestError;\n};\n\n// eslint-disable-next-line complexity\nconst baseOpen = async options => {\n\toptions = {\n\t\twait: false,\n\t\tbackground: false,\n\t\tnewInstance: false,\n\t\tallowNonzeroExitCode: false,\n\t\t...options,\n\t};\n\n\tif (Array.isArray(options.app)) {\n\t\treturn pTryEach(options.app, singleApp => baseOpen({\n\t\t\t...options,\n\t\t\tapp: singleApp,\n\t\t}));\n\t}\n\n\tlet {name: app, arguments: appArguments = []} = options.app ?? {};\n\tappArguments = [...appArguments];\n\n\tif (Array.isArray(app)) {\n\t\treturn pTryEach(app, appName => baseOpen({\n\t\t\t...options,\n\t\t\tapp: {\n\t\t\t\tname: appName,\n\t\t\t\targuments: appArguments,\n\t\t\t},\n\t\t}));\n\t}\n\n\tif (app === 'browser' || app === 'browserPrivate') {\n\t\t// IDs from default-browser for macOS and windows are the same\n\t\tconst ids = {\n\t\t\t'com.google.chrome': 'chrome',\n\t\t\t'google-chrome.desktop': 'chrome',\n\t\t\t'com.brave.Browser': 'brave',\n\t\t\t'org.mozilla.firefox': 'firefox',\n\t\t\t'firefox.desktop': 'firefox',\n\t\t\t'com.microsoft.msedge': 'edge',\n\t\t\t'com.microsoft.edge': 'edge',\n\t\t\t'com.microsoft.edgemac': 'edge',\n\t\t\t'microsoft-edge.desktop': 'edge',\n\t\t};\n\n\t\t// Incognito flags for each browser in `apps`.\n\t\tconst flags = {\n\t\t\tchrome: '--incognito',\n\t\t\tbrave: '--incognito',\n\t\t\tfirefox: '--private-window',\n\t\t\tedge: '--inPrivate',\n\t\t};\n\n\t\tconst browser = isWsl ? await getWindowsDefaultBrowserFromWsl() : await defaultBrowser();\n\t\tif (browser.id in ids) {\n\t\t\tconst browserName = ids[browser.id];\n\n\t\t\tif (app === 'browserPrivate') {\n\t\t\t\tappArguments.push(flags[browserName]);\n\t\t\t}\n\n\t\t\treturn baseOpen({\n\t\t\t\t...options,\n\t\t\t\tapp: {\n\t\t\t\t\tname: apps[browserName],\n\t\t\t\t\targuments: appArguments,\n\t\t\t\t},\n\t\t\t});\n\t\t}\n\n\t\tthrow new Error(`${browser.name} is not supported as a default browser`);\n\t}\n\n\tlet command;\n\tconst cliArguments = [];\n\tconst childProcessOptions = {};\n\n\tif (platform === 'darwin') {\n\t\tcommand = 'open';\n\n\t\tif (options.wait) {\n\t\t\tcliArguments.push('--wait-apps');\n\t\t}\n\n\t\tif (options.background) {\n\t\t\tcliArguments.push('--background');\n\t\t}\n\n\t\tif (options.newInstance) {\n\t\t\tcliArguments.push('--new');\n\t\t}\n\n\t\tif (app) {\n\t\t\tcliArguments.push('-a', app);\n\t\t}\n\t} else if (platform === 'win32' || (isWsl && !isInsideContainer() && !app)) {\n\t\tcommand = await powerShellPath();\n\n\t\tcliArguments.push(\n\t\t\t'-NoProfile',\n\t\t\t'-NonInteractive',\n\t\t\t'-ExecutionPolicy',\n\t\t\t'Bypass',\n\t\t\t'-EncodedCommand',\n\t\t);\n\n\t\tif (!isWsl) {\n\t\t\tchildProcessOptions.windowsVerbatimArguments = true;\n\t\t}\n\n\t\tconst encodedArguments = ['Start'];\n\n\t\tif (options.wait) {\n\t\t\tencodedArguments.push('-Wait');\n\t\t}\n\n\t\tif (app) {\n\t\t\t// Double quote with double quotes to ensure the inner quotes are passed through.\n\t\t\t// Inner quotes are delimited for PowerShell interpretation with backticks.\n\t\t\tencodedArguments.push(`\"\\`\"${app}\\`\"\"`);\n\t\t\tif (options.target) {\n\t\t\t\tappArguments.push(options.target);\n\t\t\t}\n\t\t} else if (options.target) {\n\t\t\tencodedArguments.push(`\"${options.target}\"`);\n\t\t}\n\n\t\tif (appArguments.length > 0) {\n\t\t\tappArguments = appArguments.map(argument => `\"\\`\"${argument}\\`\"\"`);\n\t\t\tencodedArguments.push('-ArgumentList', appArguments.join(','));\n\t\t}\n\n\t\t// Using Base64-encoded command, accepted by PowerShell, to allow special characters.\n\t\toptions.target = Buffer.from(encodedArguments.join(' '), 'utf16le').toString('base64');\n\t} else {\n\t\tif (app) {\n\t\t\tcommand = app;\n\t\t} else {\n\t\t\t// When bundled by Webpack, there's no actual package file path and no local `xdg-open`.\n\t\t\tconst isBundled = !__dirname || __dirname === '/';\n\n\t\t\t// Check if local `xdg-open` exists and is executable.\n\t\t\tlet exeLocalXdgOpen = false;\n\t\t\ttry {\n\t\t\t\tawait fs.access(localXdgOpenPath, fsConstants.X_OK);\n\t\t\t\texeLocalXdgOpen = true;\n\t\t\t} catch {}\n\n\t\t\tconst useSystemXdgOpen = process.versions.electron\n\t\t\t\t?? (platform === 'android' || isBundled || !exeLocalXdgOpen);\n\t\t\tcommand = useSystemXdgOpen ? 'xdg-open' : localXdgOpenPath;\n\t\t}\n\n\t\tif (appArguments.length > 0) {\n\t\t\tcliArguments.push(...appArguments);\n\t\t}\n\n\t\tif (!options.wait) {\n\t\t\t// `xdg-open` will block the process unless stdio is ignored\n\t\t\t// and it's detached from the parent even if it's unref'd.\n\t\t\tchildProcessOptions.stdio = 'ignore';\n\t\t\tchildProcessOptions.detached = true;\n\t\t}\n\t}\n\n\tif (platform === 'darwin' && appArguments.length > 0) {\n\t\tcliArguments.push('--args', ...appArguments);\n\t}\n\n\t// This has to come after `--args`.\n\tif (options.target) {\n\t\tcliArguments.push(options.target);\n\t}\n\n\tconst subprocess = childProcess.spawn(command, cliArguments, childProcessOptions);\n\n\tif (options.wait) {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tsubprocess.once('error', reject);\n\n\t\t\tsubprocess.once('close', exitCode => {\n\t\t\t\tif (!options.allowNonzeroExitCode && exitCode > 0) {\n\t\t\t\t\treject(new Error(`Exited with code ${exitCode}`));\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tresolve(subprocess);\n\t\t\t});\n\t\t});\n\t}\n\n\tsubprocess.unref();\n\n\treturn subprocess;\n};\n\nconst open = (target, options) => {\n\tif (typeof target !== 'string') {\n\t\tthrow new TypeError('Expected a `target`');\n\t}\n\n\treturn baseOpen({\n\t\t...options,\n\t\ttarget,\n\t});\n};\n\nexport const openApp = (name, options) => {\n\tif (typeof name !== 'string' && !Array.isArray(name)) {\n\t\tthrow new TypeError('Expected a valid `name`');\n\t}\n\n\tconst {arguments: appArguments = []} = options ?? {};\n\tif (appArguments !== undefined && appArguments !== null && !Array.isArray(appArguments)) {\n\t\tthrow new TypeError('Expected `appArguments` as Array type');\n\t}\n\n\treturn baseOpen({\n\t\t...options,\n\t\tapp: {\n\t\t\tname,\n\t\t\targuments: appArguments,\n\t\t},\n\t});\n};\n\nfunction detectArchBinary(binary) {\n\tif (typeof binary === 'string' || Array.isArray(binary)) {\n\t\treturn binary;\n\t}\n\n\tconst {[arch]: archBinary} = binary;\n\n\tif (!archBinary) {\n\t\tthrow new Error(`${arch} is not supported`);\n\t}\n\n\treturn archBinary;\n}\n\nfunction detectPlatformBinary({[platform]: platformBinary}, {wsl}) {\n\tif (wsl && isWsl) {\n\t\treturn detectArchBinary(wsl);\n\t}\n\n\tif (!platformBinary) {\n\t\tthrow new Error(`${platform} is not supported`);\n\t}\n\n\treturn detectArchBinary(platformBinary);\n}\n\nexport const apps = {};\n\ndefineLazyProperty(apps, 'chrome', () => detectPlatformBinary({\n\tdarwin: 'google chrome',\n\twin32: 'chrome',\n\tlinux: ['google-chrome', 'google-chrome-stable', 'chromium'],\n}, {\n\twsl: {\n\t\tia32: '/mnt/c/Program Files (x86)/Google/Chrome/Application/chrome.exe',\n\t\tx64: ['/mnt/c/Program Files/Google/Chrome/Application/chrome.exe', '/mnt/c/Program Files (x86)/Google/Chrome/Application/chrome.exe'],\n\t},\n}));\n\ndefineLazyProperty(apps, 'brave', () => detectPlatformBinary({\n\tdarwin: 'brave browser',\n\twin32: 'brave',\n\tlinux: ['brave-browser', 'brave'],\n}, {\n\twsl: {\n\t\tia32: '/mnt/c/Program Files (x86)/BraveSoftware/Brave-Browser/Application/brave.exe',\n\t\tx64: ['/mnt/c/Program Files/BraveSoftware/Brave-Browser/Application/brave.exe', '/mnt/c/Program Files (x86)/BraveSoftware/Brave-Browser/Application/brave.exe'],\n\t},\n}));\n\ndefineLazyProperty(apps, 'firefox', () => detectPlatformBinary({\n\tdarwin: 'firefox',\n\twin32: String.raw`C:\\Program Files\\Mozilla Firefox\\firefox.exe`,\n\tlinux: 'firefox',\n}, {\n\twsl: '/mnt/c/Program Files/Mozilla Firefox/firefox.exe',\n}));\n\ndefineLazyProperty(apps, 'edge', () => detectPlatformBinary({\n\tdarwin: 'microsoft edge',\n\twin32: 'msedge',\n\tlinux: ['microsoft-edge', 'microsoft-edge-dev'],\n}, {\n\twsl: '/mnt/c/Program Files (x86)/Microsoft/Edge/Application/msedge.exe',\n}));\n\ndefineLazyProperty(apps, 'browser', () => 'browser');\n\ndefineLazyProperty(apps, 'browserPrivate', () => 'browserPrivate');\n\nexport default open;\n","import { SecretClient } from '@azure/keyvault-secrets';\nimport inquirer from 'inquirer';\n\n/**\n * Fetch all secret names and their tags from the Key Vault\n */\nexport async function getVaultSecretsWithTags(vaultUrl, credential) {\n  const client = new SecretClient(vaultUrl, credential);\n  const secrets = [];\n  for await (const secretProperties of client.listPropertiesOfSecrets()) {\n    secrets.push({ name: secretProperties.name, tags: secretProperties.tags || {} });\n  }\n  return secrets;\n}\n\n/**\n * Build groupings from secrets based on their 'group' tag\n */\nexport function buildGroupingsFromTags(secrets) {\n  const groupings = {};\n  for (const secret of secrets) {\n    const group = secret.tags.group;\n    if (group) {\n      if (!groupings[group]) groupings[group] = [];\n      groupings[group].push(secret.name);\n    }\n  }\n  return groupings;\n}\n\n/**\n * Prompt user for values for each secret, supporting group prompts\n */\nexport async function promptForVaultSecretsWithGroups({ vaultUrl, credential }) {\n  const secrets = await getVaultSecretsWithTags(vaultUrl, credential);\n  if (secrets.length === 0) {\n    console.log('No secrets found in Key Vault.');\n    return {};\n  }\n  const groupings = buildGroupingsFromTags(secrets);\n  const answers = {};\n  // Prompt for each group (skip group prompt if only one secret)\n  for (const [group, secretNames] of Object.entries(groupings)) {\n    if (secretNames.length === 1) {\n      // Only one secret, prompt individually\n      const name = secretNames[0];\n      const isSensitive = /secret|key|token|password/i.test(name);\n      const { value } = await inquirer.prompt([\n        {\n          type: isSensitive ? 'password' : 'input',\n          name: 'value',\n          message: `Enter value for secret '${name}':`,\n          mask: isSensitive ? '*' : undefined\n        }\n      ]);\n      answers[name] = value;\n    } else {\n      // Use password prompt for secrets likely to be sensitive\n      const isSensitive = secretNames.some(name => /secret|key|token|password/i.test(name));\n      const { groupValue } = await inquirer.prompt([\n        {\n          type: isSensitive ? 'password' : 'input',\n          name: 'groupValue',\n          message: `Enter value for group '${group}' (applies to: ${secretNames.join(', ')})`,\n          mask: isSensitive ? '*' : undefined\n        }\n      ]);\n      for (const name of secretNames) {\n        answers[name] = groupValue;\n      }\n    }\n  }\n  // Prompt for ungrouped secrets\n  const ungrouped = secrets.filter(s => !s.tags.group).map(s => s.name);\n  if (ungrouped.length > 0) {\n    const prompts = ungrouped.map(name => ({\n      type: /secret|key|token|password/i.test(name) ? 'password' : 'input',\n      name,\n      message: `Enter value for secret '${name}':`,\n      mask: /secret|key|token|password/i.test(name) ? '*' : undefined\n    }));\n    const ungroupedAnswers = await inquirer.prompt(prompts);\n    Object.assign(answers, ungroupedAnswers);\n  }\n\n  return answers;\n}\n","/**\n * Fetch all secret names and their tags from the Key Vault\n */\nexport async function getVaultSecretsWithTags(vaultUrl, credential) {\n  const client = new SecretClient(vaultUrl, credential);\n  const secrets = [];\n  for await (const secretProperties of client.listPropertiesOfSecrets()) {\n    secrets.push({ name: secretProperties.name, tags: secretProperties.tags || {} });\n  }\n  return secrets;\n}\n\n/**\n * Build groupings from secrets based on their 'group' tag\n */\nexport function buildGroupingsFromTags(secrets) {\n  const groupings = Object.create(null);\n  for (const secret of secrets) {\n    const group = secret.tags.group;\n    if (group) {\n      if (!Array.isArray(groupings[group])) groupings[group] = [];\n      groupings[group].push(secret.name);\n    }\n  }\n  return groupings;\n}\nimport { SecretClient } from '@azure/keyvault-secrets';\nimport inquirer from 'inquirer';\n\n/**\n * Fetch all secret names from the Key Vault\n */\nexport async function getVaultSecretNames(vaultUrl, credential) {\n  const client = new SecretClient(vaultUrl, credential);\n  const secretNames = [];\n  for await (const secretProperties of client.listPropertiesOfSecrets()) {\n    secretNames.push(secretProperties.name);\n  }\n  return secretNames;\n}\n\n/**\n * Prompt user for values for each secret in the vault\n */\nexport async function promptForVaultSecrets({ vaultUrl, credential }) {\n  const client = new SecretClient(vaultUrl, credential);\n  const secrets = await getVaultSecretsWithTags(vaultUrl, credential);\n  if (secrets.length === 0) {\n    console.log('No secrets found in Key Vault.');\n    return {};\n  }\n  const groupings = buildGroupingsFromTags(secrets);\n  let answers = {};\n  // Build dynamic queries for discovered secrets/groups\n  const { buildQueries, promptForValue } = await import('./promptUtils.mjs');\n  // Build a config-like object from Key Vault secrets (in-memory only, not exported)\n  const dynamicConfig = { PROPERTIES: {}, GROUPINGS: {} };\n  for (const [group, secretNames] of Object.entries(groupings)) {\n    let parsedSecrets = {};\n    let keySets = {};\n    for (const name of secretNames) {\n      try {\n        const secret = await client.getSecret(name);\n        const parsed = JSON.parse(secret.value);\n        if (parsed && typeof parsed === 'object' && !Array.isArray(parsed)) {\n          parsedSecrets[name] = parsed;\n          keySets[name] = Object.keys(parsed);\n        }\n      } catch {}\n    }\n    const keySetCounts = {};\n    const keySetMap = {};\n    for (const name of Object.keys(keySets)) {\n      const keys = keySets[name];\n      const keyStr = keys.sort().join('||');\n      keySetCounts[keyStr] = (keySetCounts[keyStr] || 0) + 1;\n      keySetMap[name] = keyStr;\n    }\n    let majorityKeyStr = null;\n    let maxCount = 0;\n    for (const [keyStr, count] of Object.entries(keySetCounts)) {\n      if (count > maxCount) {\n        maxCount = count;\n        majorityKeyStr = keyStr;\n      }\n    }\n    const majorityKeys = majorityKeyStr ? majorityKeyStr.split('||') : [];\n    const validGroupSecrets = Object.keys(keySetMap).filter(name => keySetMap[name] === majorityKeyStr);\n    if (validGroupSecrets.length > 0 && majorityKeys.length > 0) {\n      dynamicConfig.GROUPINGS[group] = {\n        KEYS: validGroupSecrets,\n        VALUES: majorityKeys,\n        PROMPT_MESSAGE: `Choose value for group '${group}' (applies to: ${validGroupSecrets.join(', ')})`\n      };\n      for (const name of validGroupSecrets) {\n        dynamicConfig.PROPERTIES[name] = majorityKeys;\n      }\n    }\n    // Eject secrets with different key sets\n    const invalidGroupSecrets = secretNames.filter(name => !validGroupSecrets.includes(name));\n    for (const name of invalidGroupSecrets) {\n      try {\n        const secret = await client.getSecret(name);\n        const parsed = JSON.parse(secret.value);\n        if (parsed && typeof parsed === 'object' && !Array.isArray(parsed)) {\n          dynamicConfig.PROPERTIES[name] = Object.keys(parsed);\n        } else {\n          dynamicConfig.PROPERTIES[name] = [];\n        }\n      } catch {\n        dynamicConfig.PROPERTIES[name] = [];\n      }\n    }\n  }\n  // Add ungrouped secrets (in-memory only)\n  const ungrouped = secrets.filter(s => !s.tags.group).map(s => s.name);\n  for (const name of ungrouped) {\n    try {\n      const secret = await client.getSecret(name);\n      const parsed = JSON.parse(secret.value);\n      if (parsed && typeof parsed === 'object' && !Array.isArray(parsed)) {\n        dynamicConfig.PROPERTIES[name] = Object.keys(parsed);\n      } else {\n        dynamicConfig.PROPERTIES[name] = [];\n      }\n    } catch {\n      dynamicConfig.PROPERTIES[name] = [];\n    }\n  }\n  // Use shared prompt logic\n  const queriesMap = buildQueries(dynamicConfig);\n  // answers already declared above\n  for (const item of Array.from(queriesMap.keys())) {\n    // Use custom prompt message for group items if present\n    let promptMessage;\n    if (item.startsWith('GROUP:')) {\n      const groupName = item.replace('GROUP:', '');\n      const groupObj = dynamicConfig.GROUPINGS[groupName];\n      if (groupObj && groupObj.PROMPT_MESSAGE) {\n        promptMessage = groupObj.PROMPT_MESSAGE;\n      }\n    }\n    const result = await promptForValue(item, queriesMap, {}, dynamicConfig, promptMessage);\n    Object.assign(answers, result);\n  }\n\n  // Now, for each answer, fetch the actual value from Key Vault if it's a JSON secret\n  let finalAnswers = {};\n  for (const [name, selected] of Object.entries(answers)) {\n    try {\n      const secret = await client.getSecret(name);\n      const secretValue = secret.value;\n      const parsed = JSON.parse(secretValue);\n      if (parsed && typeof parsed === 'object' && !Array.isArray(parsed) && selected in parsed) {\n        finalAnswers[name] = parsed[selected];\n      } else {\n        finalAnswers[name] = selected;\n      }\n    } catch {\n      finalAnswers[name] = selected;\n    }\n  }\n  return finalAnswers;\n}\n"],"names":["SDK_VERSION","DeveloperSignOnClientId","AzureAuthorityHosts","DefaultAuthorityHost","AzurePublicCloud","ALL_TENANTS","msalPlugins","generatePluginConfiguration","options","config","cache","broker","brokerOptions","isEnabled","enabled","enableMsaPassthrough","legacyEnableMsaPassthrough","tokenCachePersistenceOptions","Error","join","isVSCodeCredential","CredentialUnavailableError","constructor","message","super","this","name","AuthenticationErrorName","AuthenticationError","statusCode","errorResponse","errorBody","error","errorDescription","error_description","isErrorResponse","convertOAuthErrorResponseToErrorResponse","JSON","parse","e","AggregateAuthenticationError","errors","errorMessage","correlationId","correlation_id","errorCodes","error_codes","timestamp","traceId","trace_id","AuthenticationRequiredError","scopes","getTokenOptions","cause","undefined","debugEnvVariable","process","env","DEBUG","enabledString","enabledNamespaces","skippedNamespaces","debuggers","enable","debugObj","Object","assign","namespace","createDebugger","disable","result","log","args","stderr","write","util","format","EOL","namespaces","wildcard","namespaceList","split","map","ns","trim","replace","startsWith","push","RegExp","substr","instance","endsWith","skipped","test","enabledNamespace","newDebugger","length","destroy","extend","index","indexOf","splice","TYPESPEC_RUNTIME_LOG_LEVELS","levelMap","verbose","info","warning","patchLogMethod","parent","child","isTypeSpecRuntimeLogLevel","level","includes","createLoggerContext","registeredLoggers","Set","logLevelFromEnv","logLevelEnvVarName","logLevel","clientLogger","debug","contextSetLogLevel","logger","shouldEnable","Boolean","createLogger","add","console","setLogLevel","getLogLevel","createClientLogger","clientRootLogger","context","processEnvVars","supportedEnvVars","reduce","acc","envVariable","assigned","missing","formatSuccess","scope","Array","isArray","formatError","credentialLoggerInstance","title","fullTitle","credentialLogger","credLogger","getToken","knownContextKeys","span","Symbol","for","createTracingContext","TracingContextImpl","parentContext","setValue","initialContext","_contextMap","Map","key","value","newContext","set","getValue","get","deleteValue","delete","state","defineProperty","instrumenterImplementation","getInstrumenter","createRequestHeaders","parseTraceparentHeader","startSpan","_name","spanOptions","end","isRecording","recordException","setAttribute","setStatus","addEvent","tracingContext","withContext","_context","callback","callbackArgs","createTracingClient","packageName","packageVersion","operationOptions","_a","startSpanResult","tracingOptions","updatedOptions","withSpan","async","Promise","resolve","status","err","traceparentHeader","tracingClient","ChainedTokenCredential","_sources","sources","token","getTokenInternal","successfulCredential","i","Serializer","serializeJSONBlob","data","stringify","serializeAccounts","accCache","accounts","keys","accountEntity","home_account_id","homeAccountId","environment","realm","local_account_id","localAccountId","username","authority_type","authorityType","client_info","clientInfo","last_modification_time","lastModificationTime","last_modification_app","lastModificationApp","tenantProfiles","tenantProfile","serializeIdTokens","idTCache","idTokens","idTEntity","credential_type","credentialType","client_id","clientId","secret","serializeAccessTokens","atCache","accessTokens","atEntity","target","cached_at","cachedAt","expires_on","expiresOn","extended_expires_on","extendedExpiresOn","refresh_on","refreshOn","key_id","keyId","token_type","tokenType","requestedClaims","requestedClaimsHash","userAssertionHash","serializeRefreshTokens","rtCache","refreshTokens","rtEntity","family_id","familyId","serializeAppMetadata","amdtCache","appMetadata","amdtEntity","serializeAllCache","inMemCache","Account","IdToken","AccessToken","RefreshToken","AppMetadata","Constants","LIBRARY_NAME","SKU","DEFAULT_AUTHORITY","DEFAULT_AUTHORITY_HOST","DEFAULT_COMMON_TENANT","ADFS","DSTS","AAD_INSTANCE_DISCOVERY_ENDPT","CIAM_AUTH_URL","AAD_TENANT_DOMAIN_SUFFIX","RESOURCE_DELIM","NO_ACCOUNT","CLAIMS","CONSUMER_UTID","OPENID_SCOPE","PROFILE_SCOPE","OFFLINE_ACCESS_SCOPE","EMAIL_SCOPE","CODE_GRANT_TYPE","RT_GRANT_TYPE","S256_CODE_CHALLENGE_METHOD","URL_FORM_CONTENT_TYPE","AUTHORIZATION_PENDING","NOT_DEFINED","EMPTY_STRING","NOT_APPLICABLE","NOT_AVAILABLE","FORWARD_SLASH","IMDS_ENDPOINT","IMDS_VERSION","IMDS_TIMEOUT","AZURE_REGION_AUTO_DISCOVER_FLAG","REGIONAL_AUTH_PUBLIC_CLOUD_SUFFIX","KNOWN_PUBLIC_CLOUDS","SHR_NONCE_VALIDITY","INVALID_INSTANCE","HttpStatus","OIDC_DEFAULT_SCOPES","OIDC_SCOPES","HeaderNames","AADAuthorityConstants","COMMON","ORGANIZATIONS","CONSUMERS","ClaimsRequestKeys","PromptValue","CodeChallengeMethodValues","OAuthResponseType","ResponseMode","GrantType","CacheAccountType","Separators","CredentialType","ID_TOKEN","ACCESS_TOKEN","ACCESS_TOKEN_WITH_AUTH_SCHEME","REFRESH_TOKEN","APP_METADATA","THE_FAMILY_ID","AUTHORITY_METADATA_CONSTANTS","AuthorityMetadataSource","SERVER_TELEM_CONSTANTS","SCHEMA_VERSION","MAX_LAST_HEADER_BYTES","MAX_CACHED_ERRORS","CACHE_KEY","CATEGORY_SEPARATOR","VALUE_SEPARATOR","OVERFLOW_TRUE","OVERFLOW_FALSE","UNKNOWN_ERROR","AuthenticationScheme","BEARER","POP","SSH","ThrottlingConstants","Errors","PasswordGrantConstants","RegionDiscoverySources","RegionDiscoveryOutcomes","CacheOutcome","EncodingTypes","unexpectedError","postRequestFailed","AuthErrorMessages","AuthError","errorCode","suberror","setPrototypeOf","prototype","subError","setCorrelationId","createAuthError","code","additionalMessage","clientInfoDecodingError","clientInfoEmptyError","tokenParsingError","nullOrEmptyToken","endpointResolutionError","networkError","openIdConfigError","hashNotDeserialized","invalidState","stateMismatch","stateNotFound","nonceMismatch","authTimeNotFound","maxAgeTranspired","multipleMatchingTokens","multipleMatchingAccounts","multipleMatchingAppMetadata","requestCannotBeMade","cannotRemoveEmptyScope","cannotAppendScopeSet","emptyInputScopeSet","deviceCodePollingCancelled","deviceCodeExpired","deviceCodeUnknownError","noAccountInSilentRequest","invalidCacheRecord","invalidCacheEnvironment","noAccountFound","noCryptoObject","unexpectedCredentialType","invalidAssertion","invalidClientCredential","tokenRefreshRequired","userTimeoutReached","tokenClaimsCnfRequiredForSignedJwt","authorizationCodeMissingFromServerResponse","bindingKeyNotRemoved","endSessionEndpointNotSupported","keyIdMissing","noNetworkConnectivity","userCanceled","missingTenantIdError","methodNotImplemented","nestedAppAuthBridgeDisabled","ClientAuthErrorMessages","ClientAuthError","createClientAuthError","DEFAULT_CRYPTO_IMPLEMENTATION","createNewGuid","base64Decode","base64Encode","base64UrlEncode","encodeKid","getPublicKeyThumbprint","removeTokenBindingKey","clearKeystore","signJwt","hashString","LogLevel","Logger","loggerOptions","Info","setLoggerOptions","createDefaultLoggerOptions","localCallback","loggerCallback","piiLoggingEnabled","clone","logMessage","containsPii","Date","toUTCString","executeCallback","errorPii","Warning","warningPii","infoPii","Verbose","verbosePii","trace","Trace","tracePii","isPiiLoggingEnabled","version","AzureCloudInstance","redirectUriEmpty","claimsRequestParsingError","authorityUriInsecure","urlParseError","urlEmptyError","emptyInputScopesError","invalidClaims","tokenRequestEmpty","logoutRequestEmpty","invalidCodeChallengeMethod","pkceParamsMissing","invalidCloudDiscoveryMetadata","invalidAuthorityMetadata","untrustedAuthority","missingSshJwk","missingSshKid","missingNonceAuthenticationHeader","invalidAuthenticationHeader","cannotSetOIDCOptions","cannotAllowPlatformBroker","authorityMismatch","invalidRequestMethodForEAR","invalidAuthorizePostBodyParameters","ClientConfigurationErrorMessages","ClientConfigurationError","createClientConfigurationError","StringUtils","isEmptyObj","strObj","obj","str","search","lastIndexOf","queryStringToObject","query","params","decode","s","decodeURIComponent","forEach","pair","trimArrayEntries","arr","entry","removeEmptyStringsFromArray","filter","jsonParseHelper","matchPattern","pattern","input","ScopeSet","inputScopes","scopeArr","filteredInput","fromString","inputScopeString","createSearchScopes","scopesToUse","scopeSet","containsOnlyOIDCScopes","removeScope","removeOIDCScopes","containsScope","lowerCaseScopes","printScopesLowerCase","lowerCaseScopesSet","has","toLowerCase","containsScopeSet","size","asArray","every","defaultScopeCount","defaultScope","appendScope","newScope","appendScopes","newScopes","unionScopeSets","otherScopes","unionScopes","intersectingScopeSets","sizeOtherScopes","getScopeCount","sizeThisScopes","array","val","printScopes","tenantIdMatchesHomeTenant","tenantId","buildTenantProfile","idTokenClaims","oid","sub","tid","tfp","acr","preferred_username","upn","login_hint","loginHint","isHomeTenant","updateAccountTenantProfileData","baseAccountInfo","idTokenSecret","updatedAccountInfo","tenantProfileOverride","claimsSourcedTenantProfile","idToken","extractTokenClaims","encodedToken","jswPayload","authToken","matches","exec","getJWSPayload","base64Decoded","checkMaxAge","authTime","maxAge","now","getDeserializedResponse","responseString","normalizedResponse","substring","stripLeadingHashOrQuery","deserializedHash","fromEntries","URLSearchParams","ear_jwe","mapToQueryString","parameters","encodeExtraParams","extraQueryParameters","queryParameterArray","encodeURIComponent","UrlString","urlString","_urlString","url","canonicalizeUri","lowerCaseUrl","slice","validateAsUri","components","getUrlComponents","HostNameAndPort","PathSegments","Protocol","appendQueryString","queryString","removeHashFromUrl","replaceTenantPath","urlObject","pathArray","constructAuthorityUriFromObject","regEx","match","urlComponents","AbsolutePath","QueryString","pathSegments","getDomainFromUrl","getAbsoluteUrl","relativeUrl","baseUrl","baseComponents","hashContainsKnownProperties","response","EndpointMetadata","token_endpoint","jwks_uri","issuer","authorization_endpoint","end_session_endpoint","InstanceDiscoveryMetadata","metadata","preferred_network","preferred_cache","aliases","InstanceDiscoveryMetadataAliases","getAliasesFromMetadata","authorityHost","cloudDiscoveryMetadata","source","getCloudDiscoveryMetadataFromNetworkResponse","metadataEntry","alias","cacheQuotaExceeded","cacheErrorUnknown","CacheErrorMessages","CacheError","CacheManager","cryptoImpl","performanceClient","staticAuthorityOptions","commonLogger","getAllAccounts","accountFilter","buildTenantProfiles","getAccountsFilteredBy","getAccountInfoFilteredBy","values","allAccounts","sort","account","getBaseAccountInfo","accountEntities","getAccountInfo","cachedAccounts","flatMap","getTenantProfilesFromAccountEntity","getTenantedAccountInfoByFilter","accountInfo","tokenKeys","tenantProfileFilter","tenantedAccountInfo","tenantProfileMatchesFilter","getIdToken","idTokenClaimsMatchTenantProfileFilter","targetTenantId","searchTenantProfiles","getTokenKeys","matchingTenantProfiles","matchLocalAccountIdFromTenantProfile","matchLocalAccountIdFromTokenClaims","matchLoginHintFromTokenClaims","matchUsername","matchName","sid","matchSid","saveCacheRecord","cacheRecord","storeInCache","setAccount","setIdTokenCredential","accessToken","saveAccessToken","refreshToken","setRefreshTokenCredential","setAppMetadata","createCacheError","credential","accessTokenFilter","currentScopes","accessTokenKeyMatchesFilter","tokenEntity","getAccessTokenCredential","credentialMatchesFilter","removeAccessToken","setAccessTokenCredential","allAccountKeys","getAccountKeys","matchingAccounts","cacheKey","entity","getAccount","matchHomeAccountId","matchEnvironment","matchRealm","nativeAccountId","matchNativeAccountId","matchAuthorityType","matchClientId","matchUserAssertionHash","matchCredentialType","matchFamilyId","matchTarget","matchTokenType","matchKeyId","getAppMetadataFilteredBy","allCacheKeys","getKeys","matchingAppMetadata","isAppMetadata","getAppMetadata","getAuthorityMetadataByAlias","host","getAuthorityMetadataKeys","matchedEntity","isAuthorityMetadata","getAuthorityMetadata","removeAllAccounts","removeAccount","removeAccountContext","removeItem","incrementFields","accountsRemoved","allTokenKeys","keyFilter","removeIdToken","removeRefreshToken","accessTokensRemoved","kid","catch","removeTokenBindingKeyFailure","removeAppMetadata","targetRealm","idTokenFilter","idTokenMap","getIdTokensByFilter","numIdTokens","tokensToBeRemoved","homeIdTokenMap","numHomeIdTokens","next","addFields","multiMatchedID","idTokenKeys","idTokenKeyMatchesFilter","getIdTokenCredential","inputKey","getAccessToken","request","authScheme","authenticationScheme","sshKid","accessTokenKeys","numAccessTokens","generateCredentialKey","multiMatchedAT","keyMustContainAllScopes","getAccessTokensByFilter","getRefreshToken","familyRT","id","refreshTokenFilter","refreshTokenKeys","refreshTokenKeyMatchesFilter","getRefreshTokenCredential","numRefreshTokens","multiMatchedRT","readAppMetadataFromCache","appMetadataFilter","appMetadataEntries","numAppMetadata","isAppMetadataFOCI","tokenClaims","claims","cachedUsername","filterUsername","staticAliases","canonicalAuthority","knownAuthorities","getAliasesFromStaticSources","cloudMetadata","generateAuthorityMetadataCacheKey","authority","toObject","json","propertyName","DefaultStorageClass","setServerTelemetry","getServerTelemetry","setAuthorityMetadata","setThrottlingCache","getThrottlingCache","generateAccountKey","ProtocolMode","PerformanceEvents","PerformanceEventStatus","StubPerformanceMeasurement","startMeasurement","endMeasurement","flushMeasurement","StubPerformanceClient","generateId","measureName","discard","increment","event","eventId","libraryName","libraryVersion","startTimeMs","measurement","startPerformanceMeasurement","calculateQueuedTime","addQueueMeasurement","setPreQueueTime","discardMeasurements","removePerformanceCallback","addPerformanceCallback","emitEvents","cacheEventByCorrelationId","DEFAULT_SYSTEM_OPTIONS","tokenRenewalOffsetSeconds","preventCorsPreflight","DEFAULT_LOGGER_IMPLEMENTATION","DEFAULT_CACHE_OPTIONS","claimsBasedCachingEnabled","DEFAULT_NETWORK_IMPLEMENTATION","sendGetRequestAsync","sendPostRequestAsync","DEFAULT_LIBRARY_INFO","sku","cpu","os","DEFAULT_CLIENT_CREDENTIALS","clientSecret","clientAssertion","DEFAULT_AZURE_CLOUD_OPTIONS","azureCloudInstance","tenant","DEFAULT_TELEMETRY_OPTIONS","application","appName","appVersion","isOidcProtocolMode","authOptions","protocolMode","CcsCredentialType","buildClientInfo","rawClientInfo","decodedClientInfo","buildClientInfoFromHomeAccountId","clientInfoParts","uid","utid","CLIENT_ID","REDIRECT_URI","TOKEN_TYPE","REQ_CNF","RETURN_SPA_CODE","X_CLIENT_EXTRA_SKU","BROKER_CLIENT_ID","BROKER_REDIRECT_URI","INSTANCE_AWARE","instrumentBrokerParams","embeddedClientId","embeddedRedirectUri","addResponseType","responseType","addScopes","addOidcScopes","defaultScopes","requestScopes","addClientId","addRedirectUri","redirectUri","addLoginHint","addCcsUpn","addCcsOid","addSid","addClaims","clientCapabilities","mergedClaims","hasOwnProperty","addClientCapabilitiesToClaims","addCorrelationId","addLibraryInfo","libraryInfo","addApplicationTelemetry","appTelemetry","addState","addClientSecret","addClientAssertion","addClientAssertionType","clientAssertionType","addGrantType","grantType","addClientInfo","addInstanceAware","addExtraQueryParameters","eQParams","entries","addPopToken","cnfString","addSshJwk","sshJwkString","addServerTelemetry","serverTelemetryManager","generateCurrentRequestHeaderValue","generateLastRequestHeaderValue","addThrottling","addBrokerParameters","brokerClientId","brokerRedirectUri","AuthorityType","invokeAsync","eventName","telemetryClient","inProgressEvent","eventCount","then","success","RegionDiscovery","networkInterface","detectRegion","environmentRegion","regionDiscoveryMetadata","autodetectedRegionName","region_source","IMDS_OPTIONS","localIMDSVersionResponse","getRegionFromIMDS","bind","body","currentIMDSVersion","getCurrentVersion","currentIMDSVersionResponse","nowSeconds","Math","round","getTime","toDateFromSeconds","seconds","Number","isTokenExpired","offset","expirationSec","delay","t","setTimeout","isCredentialEntity","isAccessTokenEntity","isIdTokenEntity","isRefreshTokenEntity","isAppMetadataEntity","generateAuthorityMetadataExpiresAt","updateAuthorityEndpointMetadata","authorityMetadata","updatedValues","fromNetwork","endpointsFromNetwork","updateCloudDiscoveryMetadata","aliasesFromNetwork","isAuthorityMetadataExpired","expiresAt","headers","Metadata","Authority","cacheManager","authorityOptions","managedIdentity","_canonicalAuthority","region_used","region_outcome","regionDiscovery","getAuthorityType","authorityUri","canonicalAuthorityUrlComponents","_canonicalAuthorityUrlComponents","hostnameAndPort","authorizationEndpoint","discoveryComplete","replacePath","tokenEndpoint","deviceCodeEndpoint","endSessionEndpoint","selfSignedJwtAudience","jwksUri","canReplaceTenant","reservedTenantDomains","replaceTenant","endpoint","cachedAuthorityUrlComponents","canonical_authority","cachedAuthorityParts","currentPart","cachedPart","defaultOpenIdConfigurationEndpoint","canonicalAuthorityHost","isAliasOfKnownMicrosoftAuthority","resolveEndpointsAsync","metadataEntity","getCurrentMetadataEntity","cloudDiscoverySource","endpointSource","updateEndpointMetadata","updateCachedMetadata","authorityEndpointSource","endpointMetadataResult","localMetadata","updateEndpointMetadataFromLocalSources","azureRegionConfiguration","azureRegion","updateMetadataWithRegionalInformation","getEndpointMetadataFromNetwork","configMetadata","getEndpointMetadataFromConfig","skipAuthorityMetadataCache","hardcodedMetadata","getEndpointMetadataFromHardcodedValues","metadataEntityExpired","isAuthoritySameType","openIdConfigurationEndpoint","isValidResponse","isOpenIdConfigResponse","userConfiguredAzureRegion","replaceWithRegionalInformation","localMetadataSource","updateCloudDiscoveryMetadataFromLocalSources","getCloudDiscoveryMetadataFromNetwork","getCloudDiscoveryMetadataFromConfig","createCloudDiscoveryMetadataFromHost","isInKnownAuthorities","instanceDiscoveryEndpoint","typedResponseBody","isCloudInstanceDiscoveryResponse","tenant_discovery_endpoint","isCloudInstanceDiscoveryErrorResponse","typedError","generateAuthority","authorityString","azureCloudOptions","authorityAzureCloudInstance","getPreferredCache","isAlias","isPublicCloudAuthority","buildRegionalAuthorityString","region","authorityUrlInstance","authorityUrlParts","hostNameAndPort","regionalMetadata","transformCIAMAuthority","ciamAuthority","authorityUrlComponents","formatAuthorityUri","createDiscoveredInstance","networkClient","authorityUriFinal","acquireTokenAuthority","ServerError","errorNo","getRequestThumbprint","homeAccountIdentifier","resourceRequestMethod","resourceRequestUri","shrClaims","tokenBodyParameters","ThrottlingUtils","generateThrottlingStorageKey","thumbprint","preProcess","throttleTime","postProcess","checkResponseStatus","checkResponseForRetryAfter","thumbprintValue","calculateThrottleTime","parseInt","time","currentSeconds","floor","min","removeThrottle","NetworkError","httpStatus","responseHeaders","BaseClient","configuration","userAuthOptions","systemOptions","userSystemOptions","userLoggerOption","cacheOptions","userCacheOptions","storageInterface","storageImplementation","networkImplementation","cryptoInterface","cryptoImplementation","clientCredentials","telemetry","persistencePlugin","serializableCache","instanceAware","encodeExtraQueryParams","buildClientConfiguration","cryptoUtils","createTokenRequestHeaders","ccsCred","type","executePostToTokenEndpoint","queuedEvent","sendPostRequest","clearTelemetryCache","refreshTokenSize","refresh_token","httpVerToken","requestId","contentTypeHeader","contentLengthHeader","updateAuthority","cloudInstanceHostname","cloudInstanceAuthorityUri","cloudInstanceAuthority","createTokenQueryParameters","tokenQueryParameters","getTenantIdFromIdTokenClaims","AccountEntity","isSingleTenant","createAccount","accountDetails","preferredUsername","email","emails","cloudGraphHostName","msGraphHost","createFromAccountInfo","from","generateHomeAccountId","serverClientInfo","authType","cryptoObj","isAccountEntity","accountInfoIsEqual","accountA","accountB","compareClaims","claimsMatch","accountAClaims","accountBClaims","iat","nonce","noTokensFound","nativeAccountUnavailable","refreshTokenExpired","uxNotAllowed","badToken","InteractionRequiredServerErrorMessage","InteractionRequiredAuthSubErrorMessage","InteractionRequiredAuthErrorMessages","InteractionRequiredAuthError","createInteractionRequiredAuthError","ProtocolUtils","setRequestState","userState","meta","libraryState","generateLibraryState","stateObj","stateString","parseRequestState","splitState","libraryStateString","libraryStateObj","userRequestState","KeyLocation","PopTokenGenerator","generateCnf","reqCnf","generateKid","reqCnfString","xms_ksl","signPopToken","signPayload","payload","shrNonce","shrOptions","resourceUrlString","resourceUrlComponents","at","ts","m","toUpperCase","u","p","q","client_claims","TokenCacheContext","tokenCache","hasChanged","cacheHasChanged","ResponseHandler","cacheStorage","validateTokenResponse","serverResponse","refreshAccessToken","errString","serverErrorNo","serverError","errorString","isInteractionRequiredErrorCode","isInteractionRequiredSubError","isInteractionRequiredErrorDesc","some","irErrorCode","isInteractionRequiredError","handleServerTokenResponse","serverTokenResponse","reqTimestamp","authCodePayload","handlingRefreshTokenResponse","forceCacheRefreshTokenResponse","serverRequestId","requestStateObj","id_token","auth_time","generateCacheRecord","cacheContext","beforeCacheAccess","generateAuthenticationResult","afterCacheAccess","claimsTenantId","cachedIdToken","cachedAccount","lastUpdatedAt","toString","baseAccountKey","find","accountKey","baseAccount","cloud_graph_host_name","msgraph_host","newTenantProfile","buildAccountToCache","cachedAccessToken","access_token","responseScopes","expiresIn","expires_in","extExpiresIn","ext_expires_in","refreshIn","refresh_in","tokenExpirationSeconds","extendedTokenExpirationSeconds","refreshOnSeconds","extExpiresOn","cnf","createAccessTokenEntity","cachedRefreshToken","rtExpiresOn","refresh_token_expires_in","createRefreshTokenEntity","foci","cachedAppMetadata","fromTokenCache","requestState","popKid","popTokenGenerator","spa_accountid","uniqueId","fromCache","spa_code","fromNativeBroker","getClientAssertion","AuthorizationCodeClient","includeRedirectUri","oidcDefaultScopes","OIDCOptions","acquireToken","executeTokenRequest","responseHandler","getLogoutUri","logoutRequest","createLogoutUrlQueryString","queryParametersString","requestBody","createTokenRequestBody","ccsCredential","addAuthorizationCode","codeVerifier","addCodeVerifier","assertion","assertionType","reqCnfData","sshJwk","enableSpaAuthorizationCode","postLogoutRedirectUri","addPostLogoutRedirectUri","idTokenHint","addIdTokenHint","logoutHint","addLogoutHint","RefreshTokenClient","forceCache","acquireTokenByRefreshToken","acquireTokenWithCachedRefreshToken","noFamilyRTInCache","clientMismatchErrorWithFamilyRT","invoke","refreshTokenExpirationOffsetSeconds","rtExpiresOnMs","refreshTokenRequest","badRefreshTokenKey","addRefreshToken","SilentFlowClient","acquireCachedToken","lastCacheOutcome","forceRefresh","setCacheOutcome","requestTenantId","getTenantFromAuthorityString","incrementCacheHits","generateResultFromCacheRecord","cacheOutcome","getStandardAuthorizeRequestParameters","extraScopesToConsent","responseMode","addResponseMode","prompt","addPrompt","domainHint","addDomainHint","domainHintFromRequest","sidFromRequest","accountSid","accountLoginHintClaim","extractLoginHint","loginHintFromClaim","sidFromClaim","loginHintFromRequest","loginHintFromUpn","addNonce","makeExtraSkuString","skus","extensionName","extensionVersion","skuMap","skuArr","skuName","skuVersion","setSku","ServerTelemetryManager","telemetryRequest","apiId","wrapperSKU","wrapperVer","telemetryCacheKey","platformFieldsArr","nativeBrokerErrorCode","getNativeBrokerErrorCode","platformFields","requestWithRegionDiscoveryFields","getRegionDiscoveryFields","lastRequests","getLastRequests","maxErrors","maxErrorsToSend","failedRequests","errorCount","cacheHits","cacheFailedRequest","shift","numErrorsFlushed","serverTelemEntity","serverTelemetryEntity","dataSize","regionDiscoveryFields","regionUsed","regionSource","regionOutcome","updateRegionDiscoveryMetadata","setNativeBrokerErrorCode","clearNativeBrokerErrorCode","Deserializer","deserializeJSONBlob","jsonFile","deserializeAccounts","accountObjects","serializedAcc","mappedAcc","serializedTenantProfile","deserializeIdTokens","idObjects","serializedIdT","deserializeAccessTokens","atObjects","serializedAT","deserializeRefreshTokens","rtObjects","serializedRT","deserializeAppMetadata","appMetadataObjects","serializedAmdt","deserializeAllCache","jsonCache","DEFAULT_AUTHORITY_FOR_MANAGED_IDENTITY","ManagedIdentityHeaders","ManagedIdentityQueryParameters","ManagedIdentityEnvironmentVariableNames","ManagedIdentitySourceNames","ManagedIdentityIdType","HttpMethod","ProxyStatus","SUCCESS_RANGE_START","SUCCESS_RANGE_END","SERVER_ERROR","Hash","CharSet","CACHE","ApiId","JwtConstants","LOOPBACK_SERVER_CONSTANTS","NetworkUtils","getNetworkResponse","urlToHttpOptions","protocol","hostname","hash","pathname","path","href","port","password","auth","HttpClient","proxyUrl","customAgentOptions","timeout","networkRequestViaProxy","networkRequestViaHttps","destinationUrlString","proxyUrlString","httpMethod","agentOptions","destinationUrl","URL","tunnelRequestOptions","method","agent","http","Agent","postRequestStringContent","outgoingRequestString","reject","on","socket","proxyStatusCode","statusMessage","chunk","dataStringArray","Buffer","concat","httpStatusCode","headersArray","header","headerKeyValue","headerKey","headerValue","object","parsedHeaders","networkResponse","parseBody","isPostRequest","customOptions","https","parsedBody","errorType","errorDescriptionHelper","invalidFileExtension","invalidFilePath","invalidManagedIdentityIdType","invalidSecret","missingId","networkUnavailable","platformNotSupported","unableToCreateAzureArc","unableToCreateCloudShell","unableToCreateSource","unableToReadSecretFile","userAssignedNotAvailableAtRuntime","wwwAuthenticateHeaderMissing","wwwAuthenticateHeaderUnsupportedFormat","MsiEnvironmentVariableUrlMalformedErrorCodes","ManagedIdentityEnvironmentVariableNames_AZURE_POD_IDENTITY_AUTHORITY_HOST","ManagedIdentityEnvironmentVariableNames_IDENTITY_ENDPOINT","ManagedIdentityEnvironmentVariableNames_IMDS_ENDPOINT","ManagedIdentityEnvironmentVariableNames_MSI_ENDPOINT","ManagedIdentityErrorMessages","AZURE_POD_IDENTITY_AUTHORITY_HOST","IDENTITY_ENDPOINT","MSI_ENDPOINT","ManagedIdentityError","createManagedIdentityError","ManagedIdentityId","_id","idType","_idType","managedIdentityIdParams","userAssignedClientId","userAssignedResourceId","userAssignedObjectId","NodeAuthErrorMessage","desc","NodeAuthError","createInvalidLoopbackAddressTypeError","createUnableToLoadRedirectUrlError","createNoAuthCodeInResponseError","createNoLoopbackServerExistsError","createLoopbackServerAlreadyExistsError","createLoopbackServerTimeoutError","createStateNotFoundError","createThumbprintMissingError","createRedirectUriNotSupportedError","DEFAULT_AUTH_OPTIONS","clientCertificate","thumbprintSha256","privateKey","x5c","DEFAULT_LOGGER_OPTIONS","disableInternalRetries","getRandomValues","rnds8","Uint8Array","rng","crypto","msCrypto","REGEX","byteToHex","arguments","uuid","validate","TypeError","v4","buf","rnds","random","GuidGenerator","generateGuid","isGuid","guid","EncodingUtils","encoding","base64EncodeUrl","base64Str","base64DecodeUrl","HashUtils","sha256","buffer","createHash","update","digest","PkceGenerator","hashUtils","generatePkceCodes","verifier","generateCodeVerifier","challenge","generateCodeChallengeFromVerifier","charArr","maxNumber","byte","randomBytes","CryptoProvider","pkceGenerator","guidGenerator","plainText","NodeStorage","changeEmitters","registerChangeEmitter","func","emitChange","call","cacheToInMemoryCache","inMemoryCache","CacheHelpers.isIdTokenEntity","CacheHelpers.isAccessTokenEntity","CacheHelpers.isRefreshTokenEntity","CacheHelpers.isAppMetadataEntity","inMemoryCacheToCache","getCache","getInMemoryCache","setInMemoryCache","setCache","getItem","setItem","scheme","homeTenantId","idTokenKey","accessTokenKey","refreshTokenKey","appMetadataKey","CacheHelpers.generateAppMetadataKey","serverTelemetrykey","validateKey","validateEntity","CacheHelpers.isServerTelemetryEntity","serverTelemetryKey","serverTelemetry","authorityMetadataEntity","CacheHelpers.isAuthorityMetadataEntity","throttlingCacheKey","throttlingCache","CacheHelpers.isThrottlingEntity","removeOutdatedAccount","containsKey","clear","generateInMemoryCache","generateJsonCache","updateCredentialCacheKey","currentCacheKey","updatedCacheKey","cacheItem","defaultSerializedCache","TokenCache","storage","cachePlugin","handleChangeEvent","persistence","serialize","finalState","cacheSnapshot","mergeState","deserialize","deserializedCache","overlayDefaults","getKVStore","getCacheSnapshot","deserializedPersistentStorage","getAccountByHomeId","accountObj","getAccountByLocalId","overwriteCache","oldState","currentState","stateAfterRemoval","mergeRemovals","mergeUpdates","newState","newKey","newValue","newValueNotNull","newValueIsObject","newValueIsNotArray","oldStateNotUndefinedOrNull","mergeRemovalsDict","oldKey","passedInCache","require$$0","copyProps","src","dst","SafeBuffer","arg","encodingOrOffset","alloc","allocUnsafe","allocUnsafeSlow","module","exports","create","fill","SlowBuffer","Stream","require$$1","DataStream","writable","readable","pipe","nextTick","emit","require$$2","inherits","dataStream","getParamBytesForAlg","getParamSize","keySize","paramBytesForAlg","ES256","ES384","ES512","paramBytesForAlg_1","alg","paramBytes","MAX_OCTET","signatureAsBuffer","signature","isBuffer","countPadding","start","stop","padding","ecdsaSigFormatter","derToJose","maxEncodedParamLength","inputLength","seqLength","rLength","rOffset","sLength","sOffset","rPadding","sPadding","copy","max","o","joseToDer","signatureBytes","rsBytes","shortLength","bufferEqual","formatEcdsa","require$$3","MSG_INVALID_SECRET","MSG_INVALID_VERIFIER_KEY","supportsKeyObjects","createPublicKey","checkIsPublicKey","typeError","asymmetricKeyType","export","checkIsPrivateKey","fromBase64","base64","toBase64","base64url","template","errMsg","apply","normalizeInput","thing","createHmacSigner","bits","checkIsSecretKey","hmac","createHmac","timingSafeEqual","a","b","byteLength","bufferEq","c","bufferEqualConstantTime","install","equal","that","origBufEqual","origSlowBufEqual","restore","require$$4","createHmacVerifier","computedSig","createKeySigner","signer","createSign","sign","createKeyVerifier","publicKey","createVerify","verify","createPSSKeySigner","constants","RSA_PKCS1_PSS_PADDING","saltLength","RSA_PSS_SALTLEN_DIGEST","createPSSKeyVerifier","createECDSASigner","inner","createECDSAVerifer","createNoneSigner","createNoneVerifier","jwa","algorithm","signerFactories","hs","rs","ps","es","none","verifierFactories","algo","tostring","require$$5","string","jwsSign","opts","secretOrKey","securedInput","encodedHeader","encodedPayload","jwsSecuredInput","SignStream","secretStream","once","signStream","JWS_REGEX","safeJsonParse","isObject","headerFromJWS","jwsSig","signatureFromJWS","isValidJws","jwsVerify","securedInputFromJWS","jwsDecode","payloadFromJWS","typ","VerifyStream","valid","isValid","verifyStream","jws","ALGORITHMS","jwt","decoded","complete","JsonWebTokenError","captureStackTrace","JsonWebTokenError_1","NotBeforeError","date","NotBeforeError_1","TokenExpiredError","expiredAt","TokenExpiredError_1","h","d","w","y","plural","ms","msAbs","n","isPlural","String","parseFloat","isFinite","long","abs","fmtLong","fmtShort","timespan","milliseconds","MAX_SAFE_INTEGER","MAX_LENGTH","MAX_SAFE_COMPONENT_LENGTH","MAX_SAFE_BUILD_LENGTH","RELEASE_TYPES","SEMVER_SPEC_VERSION","FLAG_INCLUDE_PRERELEASE","FLAG_LOOSE","NODE_DEBUG","debug_1","re","safeRe","safeSrc","R","LETTERDASHNUMBER","safeRegexReplacements","createToken","isGlobal","safe","makeSafeRegex","NUMERICIDENTIFIER","NUMERICIDENTIFIERLOOSE","NONNUMERICIDENTIFIER","PRERELEASEIDENTIFIER","PRERELEASEIDENTIFIERLOOSE","BUILDIDENTIFIER","MAINVERSION","PRERELEASE","BUILD","FULLPLAIN","MAINVERSIONLOOSE","PRERELEASELOOSE","LOOSEPLAIN","XRANGEIDENTIFIER","XRANGEIDENTIFIERLOOSE","GTLT","XRANGEPLAIN","XRANGEPLAINLOOSE","COERCEPLAIN","COERCE","COERCEFULL","LONETILDE","tildeTrimReplace","LONECARET","caretTrimReplace","comparatorTrimReplace","looseOption","freeze","loose","emptyOpts","parseOptions_1","numeric","compareIdentifiers","anum","bnum","identifiers","rcompareIdentifiers","parseOptions","SemVer","includePrerelease","LOOSE","FULL","raw","major","minor","patch","prerelease","num","build","compare","other","compareMain","comparePre","compareBuild","inc","release","identifier","identifierBase","base","isNaN","semver","parse_1","throwErrors","er","compare_1","compareBuild_1","versionA","versionB","gt_1","lt_1","eq_1","neq_1","gte_1","lte_1","eq","neq","gt","gte","lt","lte","cmp_1","op","SPACE_CHARACTERS","Range","range","Comparator","formatted","r","parseRange","first","isNullSet","isAny","comps","k","memoKey","cached","hr","HYPHENRANGELOOSE","HYPHENRANGE","hyphenReplace","COMPARATORTRIM","TILDETRIM","CARETTRIM","rangeList","comp","parseComparator","replaceGTE0","COMPARATORLOOSE","rangeMap","comparators","intersects","thisComparators","isSatisfiable","rangeComparators","thisComparator","rangeComparator","testSet","lrucache","firstKey","require$$6","remainingComparators","testComparator","pop","otherComparator","replaceCarets","replaceTildes","replaceXRanges","replaceStars","isX","replaceTilde","TILDELOOSE","TILDE","_","M","pr","ret","replaceCaret","CARETLOOSE","CARET","z","replaceXRange","XRANGELOOSE","XRANGE","gtlt","xM","xm","xp","anyX","STAR","GTE0PRE","GTE0","incPr","$0","fM","fm","fp","fpr","fb","to","tM","tm","tp","tpr","ANY","allowed","operator","COMPARATOR","cmp","comparator","satisfies_1","satisfies","require$$7","outside_1","hilo","gtfn","ltefn","ltfn","ecomp","high","low","internalRe","valid_1","v","clean","clean_1","inc_1","diff","diff_1","version1","version2","v1","v2","comparison","v1Higher","highVersion","lowVersion","highHasPre","prefix","require$$8","major_1","require$$9","minor_1","require$$10","patch_1","require$$11","prerelease_1","parsed","require$$12","require$$13","rcompare","rcompare_1","require$$14","compareLoose","compareLoose_1","require$$15","require$$16","sort_1","list","require$$17","rsort","rsort_1","require$$18","require$$19","require$$20","require$$21","require$$22","require$$23","require$$24","require$$25","coerce","coerce_1","rtl","coerceRtlRegex","COERCERTLFULL","COERCERTL","lastIndex","require$$26","require$$27","require$$28","require$$29","toComparators","toComparators_1","require$$30","maxSatisfying","maxSatisfying_1","versions","maxSV","rangeObj","require$$31","minSatisfying","minSatisfying_1","minSV","require$$32","minVersion","minVersion_1","minver","setMin","compver","require$$33","validRange","require$$34","outside","require$$35","gtr","gtr_1","require$$36","ltr","ltr_1","require$$37","intersects_1","r1","r2","require$$38","simplifyRange","simplify","prev","ranges","simplified","original","require$$39","subset","minimumVersionWithPreRelease","minimumVersion","simpleSubset","dom","eqSet","gtltComp","higher","lower","hasDomLT","hasDomGT","higherGT","lowerLT","needDomLTPre","needDomGTPre","subset_1","sawNonNull","OUTER","simpleSub","simpleDom","isSub","require$$40","tokens","ASYMMETRIC_KEY_DETAILS_SUPPORTED","asymmetricKeyDetailsSupported","RSA_PSS_KEY_DETAILS_SUPPORTED","rsaPssKeyDetailsSupported","allowedAlgorithmsForKeys","ec","rsa","allowedCurves","validateAsymmetricKey","keyType","allowedAlgorithms","keyCurve","asymmetricKeyDetails","namedCurve","allowedCurve","hashAlgorithm","mgf1HashAlgorithm","psSupported","PS_SUPPORTED","KeyObject","createSecretKey","PUB_KEY_ALGS","EC_KEY_ALGS","RSA_KEY_ALGS","HS_ALGS","jwtString","secretOrPublicKey","done","clockTimestamp","allowInvalidAsymmetricKeyTypes","parts","decodedToken","getSecret","secretCallback","hasSignature","algorithms","nbf","ignoreNotBefore","clockTolerance","exp","ignoreExpiration","audience","audiences","aud","targetAudience","iss","subject","jwtid","jti","maxAgeTimestamp","INFINITY","MAX_INTEGER","NAN","argsTag","funcTag","genTag","stringTag","symbolTag","reTrim","reIsBadHex","reIsBinary","reIsOctal","reIsUint","freeParseInt","baseIsNaN","baseValues","props","iteratee","arrayMap","transform","objectProto","objectToString","propertyIsEnumerable","nativeKeys","nativeMax","arrayLikeKeys","inherited","isObjectLike","isArrayLike","isArrayLikeObject","isArguments","baseTimes","skipIndexes","isIndex","baseKeys","Ctor","proto","isLength","tag","isFunction","lodash_includes","collection","fromIndex","guard","isSymbol","valueOf","isBinary","toNumber","toFinite","remainder","toInteger","isString","predicate","fromRight","baseFindIndex","baseIndexOf","lodash_isinteger","before","lodash_once","isBoolean","lodash_isboolean","isInteger","isNumber","lodash_isnumber","isPlainObject","funcProto","Function","funcToString","objectCtorString","getPrototype","getPrototypeOf","lodash_isplainobject","isHostObject","lodash_isstring","createPrivateKey","SUPPORTED_ALGS","sign_options_schema","notBefore","noTimestamp","keyid","mutatePayload","allowInsecureKeySizes","registered_claims_schema","schema","allowUnknown","parameterName","validator","options_to_payload","options_for_objects","secretOrPrivateKey","isObjectPayload","failure","modulusLength","validatePayload","invalid_options","opt","validateOptions","claim","jsonwebtoken","ClientAssertion","fromAssertion","fromCertificate","publicCertificate","useSha256","parseCertificate","fromCertificateWithSha256Thumbprint","getJwt","cryptoProvider","jwtAudience","isExpired","createJwt","ClientAuthErrorCodes.invalidAssertion","issuedAt","TimeUtils.nowSeconds","expirationTime","thumbprintHeader","JwtConstants_X5C","JwtConstants_AUDIENCE","JwtConstants_EXPIRATION_TIME","JwtConstants_ISSUER","JwtConstants_SUBJECT","JwtConstants_NOT_BEFORE","JwtConstants_JWT_ID","regexToFindCerts","certs","UsernamePasswordClient","RequestParameterBuilder.addClientId","RequestParameterBuilder.addUsername","RequestParameterBuilder.addPassword","RequestParameterBuilder.addScopes","RequestParameterBuilder.addResponseType","RequestParameterBuilder.addGrantType","RequestParameterBuilder.addClientInfo","RequestParameterBuilder.addLibraryInfo","RequestParameterBuilder.addApplicationTelemetry","RequestParameterBuilder.addThrottling","RequestParameterBuilder.addServerTelemetry","RequestParameterBuilder.addCorrelationId","RequestParameterBuilder.addClientSecret","RequestParameterBuilder.addClientAssertion","RequestParameterBuilder.addClientAssertionType","RequestParameterBuilder.addClaims","RequestParameterBuilder.addCcsUpn","UrlUtils.mapToQueryString","getAuthCodeRequestUrl","AuthorizeProtocol.getStandardAuthorizeRequestParameters","arch","platform","codeChallenge","codeChallengeMethod","RequestParameterBuilder.addCodeChallengeParams","RequestParameterBuilder.addExtraQueryParameters","requestParameters","encodeParams","AuthorizeProtocol.getAuthorizeUrl","ClientApplication","system","buildAppConfiguration","rawCloudDiscoveryMetadata","buildStaticAuthorityOptions","getAuthCodeUrl","validRequest","initializeBaseRequest","discoveredAuthority","createAuthority","acquireTokenByCode","authCodePayLoad","validateState","initializeServerTelemetryManager","authClientConfig","buildOauthClientConfiguration","authorizationCodeClient","refreshTokenClientConfig","refreshTokenClient","acquireTokenSilent","clientConfiguration","silentFlowClient","acquireCachedTokenSilent","ClientAuthErrorCodes.tokenRefreshRequired","authResponse","acquireTokenByUsernamePassword","usernamePasswordClientConfig","usernamePasswordClient","getTokenCache","cachedState","ClientAuthErrorCodes.stateMismatch","getLogger","setLogger","requestCorrelationId","Constants$1","developerProvidedClientAssertion","authRequest","telemetryPayload","authorityUrl","AuthorityFactory.createDiscoveredInstance","clearCache","LoopbackClient","listenForAuthCode","successTemplate","errorTemplate","server","createServer","req","res","getRedirectUri","authCodeResponse","UrlUtils.getDeserializedResponse","writeHead","location","listen","listening","address","closeServer","close","closeAllConnections","unref","DeviceCodeClient","deviceCodeResponse","getDeviceCode","deviceCodeCallback","acquireTokenWithDeviceCode","createExtraQueryParameters","createQueryString","executePostRequestToDeviceCodeEndpoint","user_code","userCode","device_code","deviceCode","verification_uri","verificationUri","interval","continuePolling","deviceCodeExpirationTime","userSpecifiedTimeout","userSpecifiedCancelFlag","ClientAuthErrorCodes.deviceCodePollingCancelled","ClientAuthErrorCodes.userTimeoutReached","ClientAuthErrorCodes.deviceCodeExpired","pollingIntervalMilli","cancel","AuthErrorCodes.postRequestFailed","TimeUtils.delay","ClientAuthErrorCodes.deviceCodeUnknownError","RequestParameterBuilder.addDeviceCode","PublicClientApplication","nativeBrokerPlugin","isBrokerAvailable","acquireTokenByDeviceCode","deviceCodeConfig","deviceCodeClient","acquireTokenInteractive","openBrowser","windowHandle","loopbackClient","customLoopbackClient","remainingProperties","brokerRequest","extraParameters","AADServerParamKeys.X_CLIENT_EXTRA_SKU","accountId","authCodeListenerError","authCodeListener","waitForRedirectUri","authCodeUrl","tokenRequest","signOut","signoutRequest","ticks","setInterval","clearInterval","ClientCredentialClient","appTokenProvider","skipCache","cachedAuthenticationResult","getCachedAuthenticationResult","managedIdentityConfiguration","readAccessTokenFromCache","managedIdentityId","TimeUtils.isTokenExpired","ClientAuthErrorCodes.multipleMatchingTokens","appTokenPropviderParameters","appTokenProviderResult","expiresInSeconds","refreshInSeconds","OnBehalfOfClient","oboAssertion","readAccessTokenFromCacheForOBO","readIdTokenFromCacheForOBO","AuthToken.extractTokenClaims","atHomeAccountId","tokenUse","RequestParameterBuilder.addRequestTokenUse","RequestParameterBuilder.addOboAssertion","ConfidentialClientApplication","clientSecretNotEmpty","clientAssertionNotEmpty","certificateNotEmpty","ClientAuthErrorCodes.invalidClientCredential","SetAppTokenProvider","provider","acquireTokenByClientCredential","baseRequest","validBaseRequest","ClientAuthErrorCodes.missingTenantIdError","ENV_MSAL_FORCE_REGION","clientCredentialConfig","clientCredentialClient","acquireTokenOnBehalfOf","onBehalfOfConfig","oboClient","HttpClientWithRetries","httpClientNoRetries","retryPolicy","sendNetworkRequestAsyncHelper","sendNetworkRequestAsync","isNewRequest","currentRetry","pauseForRetry","ManagedIdentityUserAssignedIdQueryParameterNames","BaseManagedIdentitySource","nodeStorage","getServerTokenResponseAsync","_networkClient","_networkRequest","_networkRequestOptions","getServerTokenResponse","dateString","toISOString","isIso8601","resource","acquireTokenWithManagedIdentity","managedIdentityRequest","fakeAuthority","networkRequest","createRequest","revokedTokenSha256Hash","queryParameters","networkRequestOptions","bodyParameters","computeParametersBodyString","networkClientHelper","computeUri","ClientAuthErrorCodes.networkError","getManagedIdentityUserAssignedIdQueryParameterKey","managedIdentityIdType","isImds","usesApi2017","getValidatedEnvVariableUrlString","envVariableStringName","sourceName","LinearRetryStrategy","calculateDelay","retryHeader","minimumDelay","millisToSleep","DEFAULT_MANAGED_IDENTITY_HTTP_STATUS_CODES_TO_RETRY_ON","DefaultManagedIdentityRetryPolicy","linearRetryStrategy","DEFAULT_MANAGED_IDENTITY_RETRY_DELAY_MS","retryAfterHeader","retryAfterDelay","ManagedIdentityRequestParameters","_baseEndpoint","AppService","identityEndpoint","identityHeader","getEnvironmentVariables","tryCreate","validatedIdentityEndpoint","DEFAULT_AZURE_ARC_IDENTITY_ENDPOINT","HIMDS_EXECUTABLE_HELPER_STRING","SUPPORTED_AZURE_ARC_PLATFORMS","win32","linux","AZURE_ARC_FILE_DETECTION","AzureArc","imdsEndpoint","fileDetectionPath","accessSync","F_OK","R_OK","originalResponse","retryResponse","wwwAuthHeader","secretFilePath","expectedSecretFilePath","fileName","basename","secretFileSize","statSync","readFileSync","authHeaderValue","CloudShell","msiEndpoint","validatedMsiEndpoint","ExponentialRetryStrategy","minExponentialBackoff","maxExponentialBackoff","exponentialDeltaBackoff","pow","HTTP_STATUS_400_CODES_FOR_EXPONENTIAL_STRATEGY","ImdsRetryPolicy","exponentialRetryStrategy","MIN_EXPONENTIAL_BACKOFF_MS","MAX_EXPONENTIAL_BACKOFF_MS","EXPONENTIAL_DELTA_BACKOFF_MS","HTTP_STATUS_GONE_RETRY_AFTER_MS","_isNewRequest","maxRetries","IMDS_TOKEN_PATH","DEFAULT_IMDS_ENDPOINT","Imds","ServiceFabric","identityServerThumbprint","MANAGED_IDENTITY_MACHINE_LEARNING_UNSUPPORTED_ID_TYPE_ERROR","MachineLearning","ManagedIdentityClient","sendManagedIdentityTokenRequest","identitySource","selectManagedIdentitySource","allEnvironmentVariablesAreDefined","environmentVariables","environmentVariable","getManagedIdentitySource","SOURCES_THAT_SUPPORT_TOKEN_REVOCATION","ManagedIdentityApplication","buildManagedIdentityConfiguration","fakeStatusAuthorityOptions","fakeAuthorityOptions","fakeClientCredentialClient","managedIdentityClient","managedIdentityRequestParams","ClientConfigurationErrorCodes.urlEmptyError","acquireTokenFromManagedIdentity","calculateRetryDelay","retryAttempt","exponentialDelay","retryDelayInMs","clampedDelay","maxRetryDelayInMs","retryAfterInMs","ceil","isError","hasName","hasMessage","uuidFunction","globalThis","randomUUID","v4RandomUUID","_b","_c","_d","self","importScripts","Deno","deno","Bun","isNodeLike","node","uint8ArrayToString","bytes","stringToUint8Array","RedactedString","defaultAllowedHeaderNames","defaultAllowedQueryParameters","Sanitizer","additionalAllowedHeaderNames","allowedHeaderNames","additionalAllowedQueryParameters","allowedQueryParameters","sanitize","seen","sanitizeHeaders","sanitizeUrl","sanitizeQuery","searchParams","sanitized","AbortError","timeInMs","abortSignal","abortErrorMsg","buildPromise","cleanupBeforeAbort","rejectOnAbort","removeListeners","removeEventListener","onAbort","aborted","x","addEventListener","createAbortablePromise","clearTimeout","getErrorMessage","stringified","isDefined","objectHasProperty","property","tspRuntime.isError","isNode","tspRuntime.isNodeLike","ensureValidMsalToken","msalToken","getAuthorityHost","AZURE_AUTHORITY_HOST","getAuthority","getKnownAuthorities","disableInstanceDiscovery","defaultLoggerCallback","msalCommon.LogLevel","getMSALLogLevel","handleMsalError","msalError","XML_ATTRKEY","flattenResponse","fullResponse","responseSpec","bodyMapper","isNullable","nullable","expectedBodyTypeName","blobBody","readableStreamBody","modelProperties","isPageableResponse","serializedName","arrayResponse","getOwnPropertyNames","responseObject","combinedHeadersAndBody","hasNullableType","shouldWrapBody","handleNullableResponseAndWrappableBody","mapperTypeName","MapperTypeNames","normalizeName","HttpHeadersImpl","rawHeaders","_headersMap","headerName","toJSON","preserveCase","normalizedName","iterator","headerIterator","createHttpHeaders","PipelineRequestImpl","_e","_f","_g","multipartBody","formData","disableKeepAlive","proxySettings","streamResponseStatusCodes","withCredentials","onUploadProgress","onDownloadProgress","allowInsecureConnection","enableBrowserStreams","requestOverrides","authSchemes","createPipelineRequest","ValidPhaseNames","HttpPipeline","policies","_policies","_orderedPolicies","addPolicy","policy","phase","afterPhase","removePolicy","removedPolicies","policyDescriptor","sendRequest","httpClient","getOrderedPolicies","reduceRight","pipeline","orderPolicies","policyMap","createPhase","hasRun","hasAfterPolicies","serializePhase","noPhase","deserializePhase","retryPhase","signPhase","orderedPhases","getPhase","descriptor","policyName","dependsOn","dependants","afterPolicies","afterPolicyName","afterNode","beforePolicies","beforePolicyName","beforeNode","walkPhase","dependant","walkPhases","iteration","initialResultLength","createEmptyPipeline","custom","inspect","errorSanitizer","RestError","enumerable","isRestError","REQUEST_SEND_ERROR","PARSE_ERROR","DEFAULT_TLS_SETTINGS","isReadableStream","isStreamComplete","stream","handler","removeListener","isArrayBuffer","ReportTransform","Transform","_transform","_encoding","loadedBytes","progressCallback","NodeHttpClient","cachedHttpsAgents","WeakMap","abortController","AbortController","abortListener","timeoutId","abort","sanitizer","acceptEncoding","shouldDecompress","responseStream","bodyLength","getBodyLength","uploadReportStream","makeRequest","getResponseHeaders","resume","contentEncoding","unzip","zlib","createGunzip","inflate","createInflate","getDecodedResponseStream","downloadReportStream","POSITIVE_INFINITY","bodyAsText","uploadStreamDone","downloadStreamDone","all","isInsecure","getOrCreateAgent","signal","abortError","ArrayBuffer","isView","globalAgent","cachedHttpAgent","keepAlive","tlsSettings","createDefaultHttpClient","logPolicyName","logPolicy","coreLogger","redirectPolicyName","allowedRedirect","redirectPolicy","handleRedirect","currentRetries","locationHeader","getUserAgentValue","runtimeInfo","bun","setPlatformSpecificData","defaultAgent","telemetryInfo","getUserAgentString","UserAgentHeaderName","decompressResponsePolicyName","decompressResponsePolicy","delayInMs","timer","onAborted","parseHeaderValueAsNumber","valueAsNum","RetryAfterHeader","AllRetryAfterHeaders","getRetryAfterInMs","retryAfterValue","retryInterval","maxRetryInterval","retry","retryCount","responseError","matchedSystemError","isSystemError","ignoreSystemErrors","isExponential","isExponentialRetryResponse","ignoreExponentialResponse","ignoreHttpStatusCodes","unknownResponse","isThrottlingRetryResponse","skipStrategy","errorToThrow","retryPolicyLogger","strategies","retryRequest","strategiesLoop","strategy","strategyLogger","modifiers","redirectTo","defaultRetryPolicyName","defaultRetryPolicy","formDataPolicyName","formDataPolicy","FormData","formDataMap","formDataToFormDataMap","contentType","urlSearchParams","subValue","append","wwwFormUrlEncode","fieldName","prepareFormData","common","createDebug","prevTime","namespacesCache","enabledCache","enableOverride","curr","unshift","formatter","formatters","formatArgs","useColors","color","selectColor","configurable","init","delimiter","newDebug","matchesTemplate","searchIndex","templateIndex","starIndex","matchIndex","default","stack","names","skips","save","skip","humanize","warn","charCodeAt","colors","load","hasFlag","flag","argv","position","terminatorPosition","tty","inspectOpts","formatWithOptions","colorCode","hideDate","getDate","isatty","fd","deprecate","supportsColor","forceColor","translateLevel","hasBasic","has256","has16m","haveStream","streamIsTTY","TERM","osRelease","CI_NAME","TEAMCITY_VERSION","COLORTERM","TERM_PROGRAM_VERSION","TERM_PROGRAM","FORCE_COLOR","supportsColor_1","isTTY","stdout","prop","O","browser","__nwjs","srcModule","lastC","window","navigator","userAgent","document","documentElement","style","WebkitAppearance","firebug","exception","table","localStorage","localstorage","warned","j","__createBinding","k2","getOwnPropertyDescriptor","__esModule","__setModuleDefault","__importStar","mod","__exportStar","net","https_1","helpers","toBuffer","chunks","_err","promise","INTERNAL","isSecureEndpoint","secureEndpoint","l","incrementSockets","maxSockets","Infinity","maxTotalSockets","sockets","fakeSocket","Socket","totalSocketCount","decrementSockets","getName","createSocket","cb","connectOpts","connect","addRequest","currentSocket","createConnection","defaultPort","__importDefault","parseProxyResponse_1","parseProxyResponse","buffersLength","buffers","read","buffered","endOfHeaders","headerParts","firstLine","firstLineParts","statusText","firstColon","trimStart","current","cleanup","ondata","onend","onerror","dist","HttpsProxyAgent","tls","assert_1","agent_base_1","url_1","parse_proxy_response_1","setServernameFromNonIpHost","servername","isIP","proxy","proxyHeaders","ALPNProtocols","omit","isIPv6","Host","proxyResponsePromise","listenerCount","protocols","HttpProxyAgent","events_1","_header","setRequestProps","getHeader","setHeader","_implicitHeader","outputData","proxyPolicyName","globalNoProxyList","noProxyListLoaded","globalBypassedMap","getEnvironmentValue","getDefaultProxySettingsInternal","envProxy","httpsProxy","allProxy","httpProxy","loadEnvironmentProxyValue","getUrlFromProxySettings","settings","parsedProxyUrl","setProxyAgentOnRequest","cachedAgents","httpProxyAgent","httpsProxyAgent","proxyPolicy","noProxy","item","loadNoProxy","defaultProxy","uri","noProxyList","bypassedMap","isBypassedFlag","isBypassed","customNoProxyList","agentPolicyName","agentPolicy","tlsPolicyName","tlsPolicy","isBinaryBody","Blob","isNodeReadableStream","getReader","tee","isWebReadableStream","isBlob","extendStatics","__proto__","__extends","__","__rest","getOwnPropertySymbols","__awaiter","thisArg","_arguments","P","generator","fulfilled","step","rejected","__generator","f","label","sent","trys","ops","g","Iterator","verb","__values","__read","ar","__spreadArray","pack","__await","__asyncGenerator","asyncIterator","AsyncIterator","fulfill","settle","__asyncDelegator","__asyncValues","streamAsyncIterator","reader","releaseLock","ensureNodeStream","ReadableStream","webStream","Readable","fromWeb","toStream","encodeHeaders","getLength","buildRequestBody","boundary","part","contentLength","total","partLength","getTotalLength","streams","e_1","stream_1_1","stream_1","e_1_1","return","SuppressedError","multipartPolicyName","validBoundaryCharacters","multipartPolicy","parsedHeader","parsedBoundary","assertValidBoundary","createPipelineFromOptions","tlsOptions","proxyOptions","userAgentValue","userAgentPrefix","userAgentPolicy","userAgentOptions","retryOptions","redirectOptions","loggingOptions","insecureConnectionWarningEmmitted","ensureSecureConnection","emitWarning","emitInsecureConnectionWarning","cachedHttpClient","createDefaultPipeline","apiVersion","apiVersionPolicy","isApiKeyCredential","isBasicCredential","isBearerTokenCredential","isOAuth2TokenCredential","kind","getOAuth2Token","flows","oauth2AuthenticationPolicy","getBearerToken","bearerAuthenticationPolicy","basicAuthenticationPolicy","apiKeyLocation","apiKeyAuthenticationPolicy","getHeaderValue","actualHeaderName","escapeDispositionField","buildBodyPart","getPartContentType","contentDisposition","contentDispositionHeader","dispositionType","filename","disposition","File","filenameFromFile","getContentDisposition","normalizeBody","buildMultipartBody","customHttpClient","requestContentType","getContentType","getRequestContentType","getRequestBody","hasContent","accept","responseAsStream","buildPipelineRequest","browserStreamBody","firstType","bodyToParse","msg","errCode","createParseError","getResponseBody","onResponse","isQueryParameterWithOptions","buildRequestUrl","routePath","pathParameters","pathParams","param","skipUrlEncoding","replaceAll","buildBaseUrl","pathParam","allowReserved","buildRoutePath","requestUrl","parsedUrl","queryParams","paramStrings","hasMetadata","rawValue","explode","getQueryParamValue","actualKey","appendQueryParams","separator","paramValues","flat","searchValue","replaceValue","buildOperation","onFulfilled","onrejected","asBrowserStream","asNodeStream","createRestError","messageOrResponse","resp","internalError","statusCodeToNumber","toPipelineResponse","rawContent","hasRawContent","getRawContent","blob","tspMultipartPolicyName","TspRestError","tspIsRestError","tracingPolicy","userAgentPromise","tryCreateTracingClient","spanAttributes","spanKind","tryCreateSpan","serviceRequestId","tryProcessResponse","tryProcessError","wrapAbortSignalLike","abortSignalLike","AbortSignal","reason","controller","needsCleanup","listener","tspCreateEmptyPipeline","tspAgentPolicy","tspTlsPolicy","tspProxyPolicy","tspDecompressResponsePolicy","tspFormDataPolicy","requestIdHeaderName","setClientRequestIdPolicy","telemetryOptions","clientRequestIdHeaderName","tspPolicy","tspMultipartPolicy","tspDefaultRetryPolicy","tspRedirectPolicy","tspLogPolicy","tspCreateHttpHeaders","tspCreatePipelineRequest","DEFAULT_CYCLER_OPTIONS","forcedRefreshWindowInMs","retryIntervalInMs","refreshWindowInMs","createTokenCycler","tokenCyclerOptions","refreshWorker","cycler","isRefreshing","shouldRefresh","refreshAfterTimestamp","expiresOnTimestamp","mustRefresh","refresh","refreshTimeout","tryGetAccessToken","finalToken","beginRefresh","_token","tokenOptions","hasClaimChallenge","tenantIdChanged","bearerTokenAuthenticationPolicyName","trySendRequest","defaultAuthorizeRequest","enableCae","isChallengeResponse","authorizeRequestOnCaeChallenge","onChallengeOptions","caeClaims","bearerTokenAuthenticationPolicy","challengeCallbacks","callbacks","authorizeRequest","authorizeRequestOnChallenge","shouldSendRequest","getCaeChallengeClaims","parsedClaim","atob","challenges","parsedChallenges","challengeRegex","paramRegex","paramsString","paramMatch","parseChallenges","operationRequestMap","getOperationArgumentValueFromParameter","operationArguments","parameter","fallbackObject","parameterPath","parameterMapper","mapper","isConstant","defaultValue","propertySearchResult","getPropertyFromParameterPath","propertyFound","useDefaultValue","required","propertyValue","propertyMapper","parameterPathPart","originalRequestSymbol","getOperationRequestInfo","hasOriginalRequest","defaultJsonContentTypes","defaultXmlContentTypes","deserializationPolicy","jsonContentTypes","expectedContentTypes","xmlContentTypes","xml","parseXML","serializerOptions","rootName","includeRoot","xmlCharKey","parsedResponse","operationResponse","text","contentComponents","component","operationInfo","shouldDeserialize","shouldDeserializeResponse","operationSpec","responses","operationResponseGetter","getOperationResponseMap","shouldReturnResponse","isSuccessByStatus","isExpectedStatusCode","expectedStatusCodes","isOperationSpecEmpty","errorResponseSpec","initialErrorMessage","defaultBodyMapper","defaultHeadersMapper","headersMapper","deserializedError","valueToDeserialize","isXML","elementName","xmlElementName","serializer","defaultError","handleErrorResponse","deserializeError","ignoreUnknownProperties","deserializeResponseBody","getPathStringFromParameter","serializationPolicy","stringifyXML","headerParameters","headerParameter","headerCollectionPrefix","customHeaders","requestOptions","customHeaderName","serializeHeaders","xmlName","xmlNamespace","xmlNamespacePrefix","typeName","requestBodyParameterPathString","isStream","xmlnsKey","serializedValue","getXmlValueWithNamespace","xmlNamespaceKey","prepareXMLRootList","mediaType","formDataParameters","formDataParameter","formDataParameterValue","formDataParameterPropertyName","serializeRequestBody","getCachedDefaultHttpClient","client","tspCreateDefaultHttpClient","CollectionFormatToDelimiterMap","CSV","SSV","Multi","TSV","Pipes","getRequestUrl","baseUri","urlReplacements","urlParameters","urlParameter","urlParameterValue","parameterPathString","skipEncoding","calculateUrlReplacements","isAbsolutePath","pathToAppend","newPath","searchStart","appendPath","sequenceParams","queryParameter","queryParameterValue","collectionFormat","calculateQueryParameters","noOverwrite","combinedParams","pairs","existingValue","simpleParseQueryParams","valueSet","searchPieces","replacements","ServiceClient","_requestContentType","_endpoint","_allowInsecureConnection","_httpClient","credentialScopes","getCredentialScopes","credentialOptions","serializationOptions","deserializationOptions","createClientPipeline","additionalPolicies","sendOperationRequest","getStreamingResponseStatusCodes","rawResponse","flatResponse","details","DefaultScopeSuffix","mapScopesToResource","parseExpirationTimestamp","asNumber","asDate","parseRefreshTimestamp","noCorrelationId","IdentityClient","allowLoggingAccountIdentifiers","abortControllers","tokenCredentialOptions","packageDetails","getIdentityClientAuthorityHost","sendTokenRequest","logIdentifiers","refreshParams","grant_type","client_secret","urlSuffix","getIdentityTokenEndpointSuffix","Accept","generateAbortSignal","controllers","existingOnAbort","onabort","abortRequests","getCorrelationId","getTokenCredentialOptions","base64Metadata","appid","RegionalAuthority","calculateRegionalAuthority","regionalAuthority","AZURE_REGIONAL_AUTHORITY_NAME","AutoDiscoverRegion","processMultiTenantRequest","additionallyAllowedTenantIds","resolvedTenantId","AZURE_IDENTITY_DISABLE_MULTITENANTAUTH","localeCompare","createConfigurationErrorMessage","checkTenantId","resolveTenantId","resolveAdditionallyAllowedTenantIds","additionallyAllowedTenants","msalLogger","generateMsalConfiguration","msalClientOptions","resolvedTenant","enableUnsafeSupportLogging","createMsalClient","createMsalClientOptions","msalConfig","authenticationRecord","pluginConfiguration","publicApps","getPublicApp","appKey","publicClientApp","cachePluginCae","msal.PublicClientApplication","confidentialApps","getConfidentialApp","confidentialClientApp","msal.ConfidentialClientApplication","calculateRequestAuthority","withSilentAuthentication","msalApp","onAuthenticationRequired","app","cachedClaims","silentRequest","proofOfPossessionOptions","resourceRequestUrl","getTokenSilent","disableAutomaticAuthentication","createBaseInteractiveRequest","open","newInstance","browserCustomizationOptions","successMessage","getBrokeredTokenInternal","useDefaultBrokerAccount","interactiveRequest","parentWindowHandle","getActiveAccount","msalToPublic","getBrokeredToken","getTokenByClientSecret","getTokenByClientAssertion","getTokenByClientCertificate","certificate","getTokenByDeviceCode","deviceCodeRequest","getTokenByUsernamePassword","getTokenByAuthorizationCode","authorizationCode","getTokenOnBehalfOf","userAssertionToken","getTokenByInteractiveRequest","credentialName","ClientCertificateCredential","certificateConfiguration","sendCertificateChain","msalClient","certificatePathOrConfiguration","certificatePath","newOptions","arrayScopes","buildClientCertificate","certificateContents","readFile","certificatePattern","publicKeys","certificatePassword","passphrase","ensureScopes","ensureValidScopeForDevTimeCreds","getScopeResource","ClientSecretCredential","UsernamePasswordCredential","AllSupportedEnvironmentVariables","EnvironmentCredential","_credential","AZURE_TENANT_ID","AZURE_CLIENT_ID","AZURE_CLIENT_SECRET","AZURE_ADDITIONALLY_ALLOWED_TENANTS","AZURE_CLIENT_SEND_CERTIFICATE_CHAIN","getSendCertificateChain","AZURE_CLIENT_CERTIFICATE_PATH","AZURE_CLIENT_CERTIFICATE_PASSWORD","AZURE_USERNAME","AZURE_PASSWORD","authenticationError","imdsRetryPolicy","msiRetryConfig","tspRetryPolicy","tspRuntime.calculateRetryDelay","startDelayInMs","msiName","imdsMsi","isAvailable","identityClient","prepareInvalidRequestOptions","ClientAssertionCredential","getAssertion","SupportedWorkloadEnvironmentVariables","WorkloadIdentityCredential","azureFederatedTokenFileContent","cacheDate","federatedTokenFilePath","assignedEnv","workloadIdentityCredentialOptions","tokenFilePath","AZURE_FEDERATED_TOKEN_FILE","readFileContents","tokenExchangeMsi","ManagedIdentityCredential","managedIdentityApp","resourceId","objectId","intervalIncrement","isAvailableIdentityClient","clientIdOrOptions","_options","providedIds","managedIdentitySource","isTokenExchangeMsi","isImdsMsi","retryConfig","isNetworkError","createError","developerCliCredentialInternals","getSafeWorkingDir","systemRoot","SystemRoot","getAzdAccessToken","tenantSection","command","previous","child_process","cwd","AzureDeveloperCliCredential","processTimeoutInMs","scopeList","isNotLoggedInError","checkSubscription","subscription","cliCredentialInternals","getAzureCliAccessToken","subscriptionSection","AzureCliCredential","specificScope","isLoginError","responseData","parseRawResponse","processUtils","execFile","file","childProcess","isWindows","formatCommand","commandName","runCommands","commands","results","powerShellErrors","powerShellPublicErrorMessages","login","installed","troubleshoot","commandStack","AzurePowerShellCredential","getAzurePowerShellAccessToken","powerShellCommand","parseJsonToken","Token","ExpiresOn","isNotInstalledError","resultWithoutToken","jsonContent","unsupportedTenantIds","adfs","VisualStudioCodeCredential","unsupportedTenantError","checkUnsupportedTenant","prepare","preparePromise","prepareOnce","scopeArray","loadAuthRecord","authRecordPath","serializedRecord","deserializeAuthenticationRecord","BrokerCredential","brokerMsalClient","brokerTenantId","brokerAdditionallyAllowedTenantIds","createDefaultBrokerCredential","createDefaultVisualStudioCodeCredential","createDefaultManagedIdentityCredential","managedIdentityClientId","workloadIdentityClientId","managedResourceId","managedIdentityResourceId","workloadFile","managedIdentityResourceIdOptions","managedIdentityClientOptions","createDefaultWorkloadIdentityCredential","workloadIdentityClientTenantOptions","createDefaultAzureDeveloperCliCredential","createDefaultAzureCliCredential","createDefaultAzurePowershellCredential","createDefaultEnvironmentCredential","UnavailableDefaultCredential","credentialUnavailableErrorMessage","DefaultAzureCredential","azureTokenCredentials","AZURE_TOKEN_CREDENTIALS","devCredentialFunctions","prodCredentialFunctions","credentialFunctions","createCredentialFn","tspCreateRestError","isKeyCredential","properties","isObjectWithProperties","isTokenCredential","castCredential","signRequest","addCredentialPipelinePolicy","clientOptions","tokenPolicy","credentials","apiKeyHeaderName","keyPolicy","keyCredentialAuthenticationPolicy","operationOptionsToRequestParameters","tspOperationOptionsToRequestParameters","wrapRequestParameters","getClient","credentialsOrPipelineOptions","tspClient","endpointUrl","getUrl","post","put","head","pathUnchecked","tspGetClient","secretAttributesSerializer","secretAttributesDeserializer","expires","created","updated","recoverableDays","recoveryLevel","KnownDeletionRecoveryLevel","KnownVersions","secretBundleDeserializer","attributes","tags","managed","keyVaultErrorDeserializer","_keyVaultErrorErrorDeserializer","innerError","deletedSecretBundleDeserializer","recoveryId","scheduledPurgeDate","deletedDate","_secretListResultDeserializer","secretItemDeserializer","nextLink","_deletedSecretListResultDeserializer","deletedSecretItemDeserializer","buildPagedAsyncIterator","getInitialResponse","processResponseBody","expectedStatuses","itemName","nextLinkName","pagedResult","getPage","pageLink","checkPagingRequest","getNextLink","getElements","page","nextPageLink","byPage","continuationToken","getPageAsyncIterator","iter","pages","pages_1_1","pages_1","getItemAsyncIterator","getPagedAsyncIterator","pagedResult_1","firstPageLink","encodeComponent","reserved","encodeReservedComponent","encodeRFC3986URIComponent","encodeURI","getNamedAndIfEmpty","getFirstOrSep","isFirst","getVarValue","option","varName","modifier","varValue","named","ifEmpty","vals","getExpandedValue","items","getNonExpandedValue","expandUrlTemplate","expr","varList","varSpec","varMatch","restoreSecret","tspRuntime.uint8ArrayToString","_restoreSecretSend","_restoreSecretDeserialize","_backupSecretDeserialize","tspRuntime.stringToUint8Array","backupSecret","secretName","_backupSecretSend","recoverDeletedSecret","_recoverDeletedSecretSend","_recoverDeletedSecretDeserialize","purgeDeletedSecret","_purgeDeletedSecretSend","_purgeDeletedSecretDeserialize","getDeletedSecret","_getDeletedSecretSend","_getDeletedSecretDeserialize","_getDeletedSecretsDeserialize","getDeletedSecrets","maxresults","_getDeletedSecretsSend","_getSecretVersionsDeserialize","getSecretVersions","_getSecretVersionsSend","_getSecretsDeserialize","getSecrets","_getSecretsSend","secretVersion","_getSecretSend","_getSecretDeserialize","updateSecret","_updateSecretSend","_updateSecretDeserialize","deleteSecret","_deleteSecretSend","_deleteSecretDeserialize","setSecret","_setSecretSend","_setSecretDeserialize","KeyVaultClient","endpointParam","prefixFromOptions","_client","_h","userAgentInfo","clientContext","createKeyVault","validWWWAuthenticateProperties","parseWWWAuthenticateHeader","kvPairs","authorization","keyVaultAuthenticationPolicy","disableChallengeResourceVerification","challengeState","requestToOptions","handleChallenge","originalBody","parsedChallenge","scopeAsUrl","verifyChallengeResource","base64EncodedClaims","handleCaeChallenge","parseKeyVaultSecretIdentifier","sourceId","segments","vaultUrl","parseKeyVaultIdentifier","getSecretFromSecretBundle","bundle","secretBundle","deletedSecretBundle","parsedId","resultObject","createdOn","updatedOn","certificateKeyId","deletedOn","mapPagedAsyncIterable","operation","iteratorByPage","maxPageSize","iteratorByPage_1_1","iteratorByPage_1","PollerStoppedError","PollerCancelledError","Poller","resolveOnUnsuccessful","stopped","pollProgressCallbacks","startPolling","pollOptions","isStopped","isDone","poll","pollOnce","fireProgress","processUpdatedState","cancelOnce","pollOncePromise","clearPollOncePromise","isCancelled","getResult","pollUntilDone","onProgress","isCompleted","stopPolling","cancelOperation","cancelPromise","getOperationState","KeyVaultSecretPoller","intervalInMs","KeyVaultSecretPollOperation","cancelMessage","DeleteSecretPollOperation","isStarted","deletedSecret","DeleteSecretPoller","resumeFrom","RecoverDeletedSecretPollOperation","RecoverDeletedSecretPoller","SecretClient","pipelineOptions","internalPipelineOptions","serviceVersion","remainingOptions","secretAttributes","beginDeleteSecret","poller","updateSecretProperties","beginRecoverDeletedSecret","restoreSecretBackup","secretBundleBackup","listPropertiesOfSecretVersions","listPropertiesOfSecrets","listDeletedSecrets","RequestMethod","GRAPH_URLS","GraphClientError","setGraphClientError","graphClientError","customError","oDataQueryNames","serializeContent","content","className","isGraphURL","isValidEndpoint","isCustomHost","customHosts","isCustomHostValid","allowedHosts","startofPortNoPos","endOfHostStrPos","hostName","MiddlewareControl","middlewareOptions","fn","getMiddlewareOptions","setMiddlewareOptions","getRequestHeader","Request","Headers","setRequestHeader","appendRequestHeader","AuthenticationHandlerOptions","authenticationProvider","authenticationProviderOptions","FeatureUsageFlag","TelemetryHandlerOptions","featureUsage","NONE","updateFeatureUsageFlag","middlewareControl","setFeatureUsage","getFeatureUsage","AuthenticationHandler","execute","bearerKey","AUTHORIZATION_HEADER","AUTHENTICATION_HANDLER_ENABLED","nextMiddleware","setNext","HTTPMessageHandler","fetch","RetryHandlerOptions","DEFAULT_DELAY","DEFAULT_MAX_RETRIES","shouldRetry","defaultShouldRetry","MAX_DELAY","MAX_MAX_RETRIES","getMaxDelay","RetryHandler","isRetry","RETRY_STATUS_CODES","isBuffered","PUT","PATCH","POST","getDelay","retryAttempts","getRandomness","toFixed","retryAfter","RETRY_AFTER_HEADER","newDelay","getExponentialBackOffTime","attempts","sleep","delaySeconds","delayMilliseconds","getOptions","executeWithRetry","RETRY_ATTEMPT_HEADER","RETRY_HANDLER_ENABLED","RedirectHandlerOptions","maxRedirects","DEFAULT_MAX_REDIRECTS","shouldRedirect","defaultShouldRedirect","MAX_MAX_REDIRECTS","RedirectHandler","isRedirect","REDIRECT_STATUS_CODES","hasLocationHeader","LOCATION_HEADER","getLocationHeader","isRelativeURL","shouldDropAuthorizationHeader","redirectUrl","schemeHostRegex","requestMatches","requestAuthority","redirectAuthority","redirectMatches","updateRequestUrl","newUrl","referrer","referrerPolicy","mode","redirect","integrity","keepalive","executeWithRedirect","redirectCount","STATUS_CODE_SEE_OTHER","GET","MANUAL_REDIRECT","REDIRECT_HANDLER_ENABLED","TelemetryHandler","clientRequestId","CLIENT_REQUEST_ID_HEADER","generateUUID","sdkVersionValue","PRODUCT_NAME","FEATURE_USAGE_STRING","SDK_VERSION_HEADER","ChaosStrategy","ResponseType","DocumentType","ContentType","ContentTypeRegexStr","GraphResponseHandler","parseDocumentResponse","DOMParser","xmlString","xmlDoc","parseFromString","convertResponse","responseValue","ARRAYBUFFER","arrayBuffer","BLOB","DOCUMENT","TEXT_XML","STREAM","TEXT","mimeType","IMAGE","TEXT_PLAIN","APPLICATION_JSON","getResponse","RAW","ok","CustomAuthenticationProvider","GraphError","baseError","GraphErrorHandler","constructError","gError","constructErrorFromResponse","graphError","getError","GraphRequest","parsePath","endOfVersionStrPos","charAt","queryStrPos","queryParam","parseQueryParameter","defaultVersion","oDataQueryParams","otherURLQueryParams","otherURLQueryOptions","_headers","_middlewareOptions","addCsvQueryParameter","additionalProperties","allValues","buildFullUrl","urlSegments","removePreSlash","pre","cur","urlJoin","debugLogging","queryDictionaryOrString","parseQueryParamenterString","setURLComponentsQueryParamater","isValidQueryKeyValuePair","indexOfFirstEquals","paramKey","paramValue","currentValue","isValueAppendable","indexofFirstEquals","updateRequestOptions","optionsHeaders","fetchOptions","send","_responseType","setHeaderContentType","headerKeys","select","expand","orderby","filterStr","$filter","searchStr","$search","top","$top","$skip","skipToken","$skipToken","count","isCount","$count","DELETE","del","getStream","putStream","HTTPClient","middleware","setMiddleware","parseMiddleWareArray","middlewareArray","element","HTTPClientFactory","createWithAuthenticationProvider","authProvider","authenticationHandler","retryHandler","telemetryHandler","httpMessageHandler","require","redirectHandler","createWithMiddleware","Client","initWithMiddleware","validatePolyFilling","api","isUpKey","isDownKey","isBackspaceKey","isTabKey","isNumberKey","isEnterKey","AbortPromptError","CancelPromptError","ExitPromptError","HookError","ValidationError","hookStorage","AsyncLocalStorage","getStore","store","readline","rl","withUpdates","AsyncResource","shouldUpdate","oldHandleChange","handleChange","returnValue","withPointer","hooks","initialized","effectScheduler","queue","hooksEffect","hooksCleanup","cleanFn","run","effect","clearAll","useState","pointer","setState","useEffect","depArray","oldDeps","dep","is","hasColors","WriteStream","openCode","closeCode","replaceCode","reset","bold","dim","italic","underline","overline","inverse","hidden","strikethrough","black","red","green","yellow","blue","magenta","cyan","white","gray","bgBlack","bgRed","bgGreen","bgYellow","bgBlue","bgMagenta","bgCyan","bgWhite","bgGray","redBright","greenBright","yellowBright","blueBright","magentaBright","cyanBright","whiteBright","bgRedBright","bgGreenBright","bgYellowBright","bgBlueBright","bgMagentaBright","bgCyanBright","bgWhiteBright","yoctocolorsCjs","circleQuestionMark","questionMarkPrefix","square","squareDarkShade","squareMediumShade","squareLightShade","squareTop","squareBottom","squareLeft","squareRight","squareCenter","bullet","dot","ellipsis","pointerSmall","triangleUp","triangleUpSmall","triangleDown","triangleDownSmall","triangleLeftSmall","triangleRightSmall","home","heart","musicNote","musicNoteBeamed","arrowUp","arrowDown","arrowLeft","arrowRight","arrowLeftRight","arrowUpDown","almostEqual","notEqual","lessOrEqual","greaterOrEqual","identical","infinity","subscriptZero","subscriptOne","subscriptTwo","subscriptThree","subscriptFour","subscriptFive","subscriptSix","subscriptSeven","subscriptEight","subscriptNine","oneHalf","oneThird","oneQuarter","oneFifth","oneSixth","oneEighth","twoThirds","twoFifths","threeQuarters","threeFifths","threeEighths","fourFifths","fiveSixths","fiveEighths","sevenEighths","line","lineBold","lineDouble","lineDashed0","lineDashed1","lineDashed2","lineDashed3","lineDashed4","lineDashed5","lineDashed6","lineDashed7","lineDashed8","lineDashed9","lineDashed10","lineDashed11","lineDashed12","lineDashed13","lineDashed14","lineDashed15","lineVertical","lineVerticalBold","lineVerticalDouble","lineVerticalDashed0","lineVerticalDashed1","lineVerticalDashed2","lineVerticalDashed3","lineVerticalDashed4","lineVerticalDashed5","lineVerticalDashed6","lineVerticalDashed7","lineVerticalDashed8","lineVerticalDashed9","lineVerticalDashed10","lineVerticalDashed11","lineDownLeft","lineDownLeftArc","lineDownBoldLeftBold","lineDownBoldLeft","lineDownLeftBold","lineDownDoubleLeftDouble","lineDownDoubleLeft","lineDownLeftDouble","lineDownRight","lineDownRightArc","lineDownBoldRightBold","lineDownBoldRight","lineDownRightBold","lineDownDoubleRightDouble","lineDownDoubleRight","lineDownRightDouble","lineUpLeft","lineUpLeftArc","lineUpBoldLeftBold","lineUpBoldLeft","lineUpLeftBold","lineUpDoubleLeftDouble","lineUpDoubleLeft","lineUpLeftDouble","lineUpRight","lineUpRightArc","lineUpBoldRightBold","lineUpBoldRight","lineUpRightBold","lineUpDoubleRightDouble","lineUpDoubleRight","lineUpRightDouble","lineUpDownLeft","lineUpBoldDownBoldLeftBold","lineUpBoldDownBoldLeft","lineUpDownLeftBold","lineUpBoldDownLeftBold","lineUpDownBoldLeftBold","lineUpDownBoldLeft","lineUpBoldDownLeft","lineUpDoubleDownDoubleLeftDouble","lineUpDoubleDownDoubleLeft","lineUpDownLeftDouble","lineUpDownRight","lineUpBoldDownBoldRightBold","lineUpBoldDownBoldRight","lineUpDownRightBold","lineUpBoldDownRightBold","lineUpDownBoldRightBold","lineUpDownBoldRight","lineUpBoldDownRight","lineUpDoubleDownDoubleRightDouble","lineUpDoubleDownDoubleRight","lineUpDownRightDouble","lineDownLeftRight","lineDownBoldLeftBoldRightBold","lineDownLeftBoldRightBold","lineDownBoldLeftRight","lineDownBoldLeftBoldRight","lineDownBoldLeftRightBold","lineDownLeftRightBold","lineDownLeftBoldRight","lineDownDoubleLeftDoubleRightDouble","lineDownDoubleLeftRight","lineDownLeftDoubleRightDouble","lineUpLeftRight","lineUpBoldLeftBoldRightBold","lineUpLeftBoldRightBold","lineUpBoldLeftRight","lineUpBoldLeftBoldRight","lineUpBoldLeftRightBold","lineUpLeftRightBold","lineUpLeftBoldRight","lineUpDoubleLeftDoubleRightDouble","lineUpDoubleLeftRight","lineUpLeftDoubleRightDouble","lineUpDownLeftRight","lineUpBoldDownBoldLeftBoldRightBold","lineUpDownBoldLeftBoldRightBold","lineUpBoldDownLeftBoldRightBold","lineUpBoldDownBoldLeftRightBold","lineUpBoldDownBoldLeftBoldRight","lineUpBoldDownLeftRight","lineUpDownBoldLeftRight","lineUpDownLeftBoldRight","lineUpDownLeftRightBold","lineUpBoldDownBoldLeftRight","lineUpDownLeftBoldRightBold","lineUpBoldDownLeftBoldRight","lineUpBoldDownLeftRightBold","lineUpDownBoldLeftBoldRight","lineUpDownBoldLeftRightBold","lineUpDoubleDownDoubleLeftDoubleRightDouble","lineUpDoubleDownDoubleLeftRight","lineUpDownLeftDoubleRightDouble","lineCross","lineBackslash","lineSlash","mainSymbols","tick","cross","squareSmall","squareSmallFilled","circle","circleFilled","circleDotted","circleDouble","circleCircle","circleCross","circlePipe","radioOn","radioOff","checkboxOn","checkboxOff","checkboxCircleOn","checkboxCircleOff","triangleUpOutline","triangleLeft","triangleRight","lozenge","lozengeOutline","hamburger","smiley","mustache","star","play","nodejs","oneSeventh","oneNinth","oneTenth","fallbackSymbols","figures$1","defaultTheme","idle","figures","spinner","frames","frame","answer","defaultAnswer","help","highlight","deepMerge","objects","output","prevValue","makeTheme","themes","theme","usePrefix","showLoader","setShowLoader","setTick","tickInterval","delayTimeout","useMemo","dependencies","useRef","useKeypress","userHandler","ignore","_input","cliWidth_1","defaultOpts","defaultWidth","normalizeOpts","getWindowSize","columns","CLI_WIDTH","width","ansiRegex","onlyFirst","stripAnsi","isFullwidthCodePoint","codePoint","isFullwidthCodePointModule","emojiRegex","stringWidth","codePointAt","stringWidthModule","cssKeywords","colorName","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","blanchedalmond","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","whitesmoke","yellowgreen","reverseKeywords","convert","rgb","channels","labels","hsl","hsv","hwb","cmyk","xyz","lab","lch","hex","keyword","ansi16","ansi256","hcg","apple","conversions","model","comparativeDistance","delta","rdif","gdif","bdif","diffc","reversed","currentClosestKeyword","currentClosestDistance","distance","t2","t3","t1","smin","lmin","hi","vmin","sl","wh","bl","ratio","y2","x2","z2","atan2","PI","sqrt","cos","sin","saturation","ansi","mult","rem","colorString","char","integer","chroma","grayscale","hue","pure","mg","deriveBFS","fromModel","graph","models","len","buildGraph","adjacents","adjacent","link","wrapConversion","toModel","conversion","route","routes","wrappedFn","arg0","wrapRounded","wrapRaw","colorConvert","wrapAnsi16","wrapAnsi256","wrapAnsi16m","ansi2ansi","rgb2rgb","setLazyProperty","makeDynamicStyles","wrap","targetSpace","identity","isBackground","styles","sourceSpace","suite","codes","blackBright","bgColor","bgBlackBright","bgGrey","groupName","group","styleName","ansiStyles","ESCAPES","wrapAnsi","wrapWord","rows","word","characters","isInsideEscape","visible","character","characterLength","stringVisibleTrimSpacesRight","words","last","escapeCode","lengths","wordLengths","trimLeft","rowLength","wordWrap","hard","remainingColumns","breaksStartingThisLine","wrapAnsi_1","normalize","breakLines","trimEnd","readlineWidth","cliWidth","usePagination","active","renderItem","pageSize","loop","bound","renderedItems","isActive","renderedLength","renderItemAtIndex","lastPointer","lastActive","middle","defaultPointerPosition","spaceUnderActive","usePointerPosition","activeItem","activeItemPosition","pageBuffer","itemVisited","bufferPointer","itemPointer","linesToAdd","lines","lib","muted","_onpipe","_prompt","_hadControl","destSrc","def","_dest","_src","mute","unmute","dest","pause","destroySoon","signals","processOk","reallyExit","listeners","kill","pid","kExitEmitter","global","ObjectDefineProperty","Emitter","emitted","afterExit","exit","ev","SignalExitBase","onExit","unload","hupSig","emitter","originalProcessEmit","originalProcessReallyExit","sigListeners","loaded","sig","__signal_exit_emitter__","alwaysLast","processEmit","processReallyExit","exitCode","og","ansiEscapes","ESC","OSC","BEL","SEP","isTerminalApp","cursorTo","cursorMove","cursorUp","cursorDown","cursorForward","cursorBackward","cursorLeft","cursorSavePosition","cursorRestorePosition","cursorGetPosition","cursorNextLine","cursorPrevLine","cursorHide","cursorShow","eraseLines","eraseLine","eraseEndLine","eraseStartLine","eraseDown","eraseUp","eraseScreen","scrollUp","scrollDown","clearScreen","clearTerminal","beep","image","height","preserveAspectRatio","iTerm","setCwd","annotation","hasX","hasY","isHidden","ScreenManager","extraLinesUnderPrompt","cursorPos","getCursorPos","render","bottomContent","promptLine","lastLine","rawPromptLine","stripVTControlCharacters","setPrompt","bottomContentHeight","cols","checkCursorPos","clearContent","PromisePolyfill","withResolver","rej","createPrompt","view","callSites","_prepareStackTrace","prepareStackTrace","callSitesWithoutCurrent","getCallSites","stdin","cleanups","MuteStream","createInterface","terminal","screen","onSignalExit","sigint","createStore","withHooks","cycle","nextView","setImmediate","callerFilename","getFileName","finally","clearPromptOnDone","Separator","isSeparator","choice","checkboxTheme","icon","checked","unchecked","cursor","disabledChoice","renderSelectedChoices","selectedChoices","short","description","helpMode","isSelectable","disabled","isChecked","toggle","checkbox","instructions","shortcuts","invert","firstRender","setItems","choices","normalizedChoice","bounds","findIndex","findLastIndex","setActive","showHelpTip","setShowHelpTip","errorMsg","setError","selection","isSpaceKey","selectAll","selectedIndex","selectableIndex","selectedItem","disabledLabel","helpTipTop","helpTipBottom","choiceDescription","ctx","rec","confidence","lang","language","unicode","UTF_32LE","UTF_16LE","UTF_16BE","match_1","det","rawInput","UTF_32","getChar","_index","numValid","numInvalid","hasBOM","limit","rawLen","ch","UTF_32BE","mbcs_1","gb_18030","euc_kr","euc_jp","sjis","binarySearch","left","right","mid","IteratedChar","charValue","nextIndex","nextByte","mbcs","commonChars","doubleByteCharCount","commonCharCount","badCharCount","totalCharCount","detectBlock","nextChar","cv","scaleFactor","_iter","_det","firstByte","secondByte","eucNextChar","thirdByte","big5","fourthByte","buildChar","sbcs_1","KOI8_R","windows_1251","ISO_8859_9","ISO_8859_7","ISO_8859_6","ISO_8859_2","ISO_8859_1","NGramParser","theNgramList","theByteMap","byteIndex","ngram","ngramCount","hitCount","spaceChar","ngramList","byteMap","lookup","thisNgram","addByte","inputLen","inputBytes","spaceCh","ignoreSpace","mb","rawPercent","NGramsPlusLang","la","ng","fLang","fNGrams","sbcs","nGramLang","ngrams","bestConfidence","ngl","c1Bytes","ISO_8859_5","ISO_8859_8","windows_1256","iso2022","ISO_2022_CN","ISO_2022_KR","ISO_2022_JP","ISO_2022","escapeSequences","escN","hits","misses","shifts","textLen","scanInput","checkEscapes","seq","ownKeys","detectFileSync","detectFile","analyse","detect","node_1","fsModule","ascii_1","ascii","utf8_1","utf8","trailBytes","utils_1","utils","isByteArray","recognisers","byteStats","filepath","fs","closeSync","sampleSize","openSync","sample","readSync","safer","Safer","RangeError","kStringMaxLength","binding","kMaxLength","MAX_STRING_LENGTH","safer_1","PrependBOMWrapper","encoder","addBOM","StripBOMWrapper","decoder","pass","bomHandling","PrependBOM","StripBOM","stripBOM","InternalCodec","codecOptions","iconv","enc","encodingName","bomAware","InternalEncoderBase64","InternalEncoderCesu8","InternalDecoderCesu8","defaultCharUnicode","internal","cesu8","unicode11utf8","ucs2","utf16le","binary","_internal","InternalEncoder","InternalDecoder","StringDecoder","codec","prevStr","contBytes","accBytes","completeQuads","bufIdx","charCode","curByte","fromCharCode","Utf32Codec","isLE","Utf32Encoder","highSurrogate","Utf32Decoder","badChar","overflow","_writeCodepoint","codepoint","Utf32AutoCodec","Utf32AutoEncoder","getEncoder","defaultEncoding","Utf32AutoDecoder","initialBufs","initialBufsLen","detectEncoding","bufs","charsProcessed","invalidLE","invalidBE","bmpCharsLE","bmpCharsBE","outer_loop","utf32","_utf32","utf32le","utf32be","ucs4le","ucs4be","write32","writeUInt32LE","writeUInt32BE","readUInt16LE","isHighSurrogate","isLowSurrogate","ucs4","getDecoder","resStr","trail","Utf16BECodec","Utf16BEEncoder","Utf16BEDecoder","overflowByte","Utf16Codec","Utf16Encoder","Utf16Decoder","asciiCharsLE","asciiCharsBE","utf16","utf16be","tmp","buf2","Utf7Codec","utf7","unicode11utf7","Utf7Encoder","Utf7Decoder","nonDirectChars","inBase64","base64Accum","encode","base64Regex","base64Chars","plusChar","minusChar","andChar","Utf7IMAPCodec","Utf7IMAPEncoder","base64AccumIdx","Utf7IMAPDecoder","lastI","b64str","canBeDecoded","utf7imap","uChar","base64IMAPChars","SBCSCodec","chars","asciiString","decodeBuf","encodeBuf","defaultCharSingleByte","SBCSEncoder","SBCSDecoder","sbcsCodec","_sbcs","newBuf","idx1","idx2","dbcsCodec","_dbcs","DBCSCodec","UNASSIGNED","GB18030_CODE","SEQ_START","NODE_START","UNASSIGNED_NODE","mappingTable","decodeTables","decodeTableSeq","_addDecodeChunk","gb18030","commonThirdByteNodeIdx","commonFourthByteNodeIdx","firstByteNode","secondByteNode","thirdByteNode","fourthByteNode","encodeTable","encodeTableSeq","skipEncodeChars","encodeSkipVals","_fillEncodeTable","encodeAdd","_setEncodeChar","defCharSB","DBCSEncoder","leadSurrogate","seqObj","DBCSDecoder","nodeIdx","prevBytes","findIdx","_getDecodeTrieNode","addr","curAddr","writeTable","codeTrail","_getEncodeBucket","uCode","dbcsCode","bucket","_setEncodeSequence","oldVal","hasValues","subNodeEmpty","mbCode","subNodeIdx","newPrefix","resCode","subtable","idx","uChars","gbChars","prevOffset","seqStart","ptr","uCodeLead","bytesArr","stream_module","IconvLiteEncoderStream","conv","decodeStrings","IconvLiteDecoderStream","_flush","collect","encodings","skipDecodeWarning","encodingExists","getCodec","toEncoding","fromEncoding","_codecDataCache","modules","sbcsData","maccenteuro","ibm808","cp808","mik","cp720","ascii8bit","usascii","ansix34","ansix341968","ansix341986","csascii","cp367","ibm367","isoir6","iso646us","iso646irv","us","latin1","latin2","latin3","latin4","latin5","latin6","latin7","latin8","latin9","latin10","csisolatin1","csisolatin2","csisolatin3","csisolatin4","csisolatincyrillic","csisolatinarabic","csisolatingreek","csisolatinhebrew","csisolatin5","csisolatin6","l1","l2","l3","l4","l5","l6","l7","l8","l9","l10","isoir14","isoir57","isoir100","isoir101","isoir109","isoir110","isoir144","isoir127","isoir126","isoir138","isoir148","isoir157","isoir166","isoir179","isoir199","isoir203","isoir226","cp819","ibm819","cyrillic","arabic","arabic8","ecma114","asmo708","greek","greek8","ecma118","elot928","hebrew","hebrew8","turkish","turkish8","thai","thai8","celtic","celtic8","isoceltic","tis6200","tis62025291","tis62025330","cspc8codepage437","cspc775baltic","cspc850multilingual","cspcp852","cspc862latinhebrew","cpgr","msee","mscyrl","msansi","msgreek","msturk","mshebr","msarab","winbaltrim","cp20866","ibm878","cskoi8r","cp21866","ibm1168","strk10482002","tcvn5712","tcvn57121","gb198880","cn","csiso14jisc6220ro","jisc62201969ro","jp","cshproman8","r8","roman8","xroman8","ibm1051","mac","csmacintosh","sbcsDataGenerated","windows874","win874","cp874","windows1250","win1250","cp1250","windows1251","win1251","cp1251","windows1252","win1252","cp1252","windows1253","win1253","cp1253","windows1254","win1254","cp1254","windows1255","win1255","cp1255","windows1256","win1256","cp1256","windows1257","win1257","cp1257","windows1258","win1258","cp1258","iso88591","cp28591","iso88592","cp28592","iso88593","cp28593","iso88594","cp28594","iso88595","cp28595","iso88596","cp28596","iso88597","cp28597","iso88598","cp28598","iso88599","cp28599","iso885910","cp28600","iso885911","cp28601","iso885913","cp28603","iso885914","cp28604","iso885915","cp28605","iso885916","cp28606","cp437","ibm437","csibm437","cp737","ibm737","csibm737","cp775","ibm775","csibm775","cp850","ibm850","csibm850","cp852","ibm852","csibm852","cp855","ibm855","csibm855","cp856","ibm856","csibm856","cp857","ibm857","csibm857","cp858","ibm858","csibm858","cp860","ibm860","csibm860","cp861","ibm861","csibm861","cp862","ibm862","csibm862","cp863","ibm863","csibm863","cp864","ibm864","csibm864","cp865","ibm865","csibm865","cp866","ibm866","csibm866","cp869","ibm869","csibm869","cp922","ibm922","csibm922","cp1046","ibm1046","csibm1046","cp1124","ibm1124","csibm1124","cp1125","ibm1125","csibm1125","cp1129","ibm1129","csibm1129","cp1133","ibm1133","csibm1133","cp1161","ibm1161","csibm1161","cp1162","ibm1162","csibm1162","cp1163","ibm1163","csibm1163","maccroatian","maccyrillic","macgreek","maciceland","macroman","macromania","macthai","macturkish","macukraine","koi8r","koi8u","koi8ru","koi8t","armscii8","rk1048","tcvn","georgianacademy","georgianps","pt154","viscii","iso646cn","iso646jp","hproman8","macintosh","tis620","dbcsData","shiftjis","csshiftjis","mskanji","windows31j","ms31j","xsjis","windows932","ms932","cp932","eucjp","gb2312","gb231280","gb23121980","csgb2312","csiso58gb231280","euccn","windows936","ms936","cp936","gbk","xgbk","isoir58","chinese","windows949","ms949","cp949","cseuckr","csksc56011987","euckr","isoir149","korean","ksc56011987","ksc56011989","ksc5601","windows950","ms950","cp950","big5hkscs","cnbig5","csbig5","xxbig5","_canonicalizeEncoding","codecDef","enableStreamingAPI","supportsStreams","encodeStream","decodeStream","CreateFileError","originalError","LaunchEditorError","ReadFileError","RemoveFileError","sanitizeAffix","affix","ExternalEditor","tempFile","editor","lastExitStatus","fileOptions","temp_file","last_exit_status","determineEditor","createTemporaryFile","launchEditor","readTemporaryFile","runAsync","launchEditorAsync","readError","launchError","removeTemporaryFile","editorOpts","pieces","currentString","strIndex","currentLetter","splitStringBySpace","piece","bin","baseDir","dir","tmpdir","postfix","candidate","baseResolved","sep","writeFileSync","createFileError","tempFileBuffer","readFileError","unlinkSync","removeFileError","editorProcess","spawnSync","stdio","spawn","editorTheme","validationFailureMode","waitForUseInput","fileProps","startEditor","cleanupError","editAsync","finalAnswer","editCallback","helpTip","enterKey","getBooleanValue","boolToString","confirm","transformer","clearLine","formattedValue","inputTheme","prefill","setDefaultValue","defaultStr","isFinal","validateNumber","valuePow","stepPow","minPow","isStepOf","number","validDefault","helpChoice","defaultKey","normalizeChoices","expanded","setExpanded","selectedChoice","allChoices","longChoices","shortChoices","currentOption","numberRegex","isSelectableChoice","getSelectedChoice","selectableChoices","rawlist","firstChoice","findLast","choicesStr","mask","repeat","searchTheme","searchTerm","setSearchTerm","searchResults","setSearchResults","searchError","setSearchError","fetchResults","pager","navigation","selectTheme","indexMode","searchTimeoutRef","defaultItemIndex","separatorCount","indexLabel","createErrorClass","createImpl","ctorFunc","UnsubscriptionError","_super","arrRemove","Subscription","initialTeardown","closed","_parentage","_finalizers","empty","unsubscribe","e_2","_parentage_1","_parentage_1_1","remove","initialFinalizer","_finalizers_1","_finalizers_1_1","finalizer","execFinalizer","e_2_1","teardown","_hasParent","_addParent","_removeParent","EMPTY","isSubscription","onUnhandledError","onStoppedNotification","useDeprecatedSynchronousErrorHandling","useDeprecatedNextContext","timeoutProvider","_i","delegate","handle","reportUnhandledError","noop","Subscriber","destination","_this","EMPTY_OBSERVER","SafeSubscriber","_next","_error","_complete","_bind","ConsumerObserver","partialObserver","handleUnhandledError","observerOrNext","context_1","observable","Observable","subscribe","_subscribe","lift","subscriber","isObserver","isRoot","errorThrown","errorContext","_trySubscribe","sink","promiseCtor","getPromiseCtor","Symbol_observable","fns","operations","toPromise","operate","hasLift","liftedSource","createOperatorSubscriber","onNext","onComplete","onError","onFinalize","OperatorSubscriber","shouldUnsubscribe","closed_1","popScheduler","schedule","isPromise","isInteropObservable","isAsyncIterable","createInvalidObservableTypeError","isIterable","Symbol_iterator","readableStreamLikeToAsyncGenerator","readableStream","isReadableStreamLike","innerFrom","obs","fromAsyncIterable","iterable","iterable_1","iterable_1_1","asyncIterable","asyncIterable_1","asyncIterable_1_1","executeSchedule","parentSubscription","scheduler","work","scheduleSubscription","observeOn","subscribeOn","scheduleAsyncIterable","scheduled","scheduleObservable","scheduleArray","schedulePromise","scheduleIterable","scheduleReadableStreamLike","EmptyError","mergeMap","project","resultSelector","concurrent","ii","onBeforeNext","innerSubScheduler","additionalFinalizer","isComplete","checkComplete","outerNext","doInnerSub","innerComplete","innerValue","_loop_1","bufferedValue","mergeInternals","accumulator","seed","hasSeed","emitOnNext","emitBeforeComplete","hasState","scanInternals","concatMap","runAsyncModule","proxyProperty","originalThis","resolved","wrappedResolve","wrappedReject","usingCallback","callbackConflict","contextEnded","doneFactory","Proxy","_target","Reflect","travel","regexp","fetchAsyncQuestionProperty","question","answers","propGetter","TTYError","isTtyError","PromptsRunner","prompts","questions","isQuestionArray","maybeQuestion","isQuestionMap","of","shouldRun","defer","observableFactory","fetchAnswer","hasConfig","_value","_hasValue","lastValueFrom","answersObj","prepareQuestion","resolvedChoices","choiceObj","rawQuestion","cleanupSignal","promptFn","isPromptConstructor","skipTTYChecks","setupReadlineOptions","onForceClose","activePrompt","cleanupModuleSignal","moduleSignal","askAnswered","when","builtInPrompts","createPromptModule","promptModule","runner","promptPromise","ui","registerPrompt","restoreDefaultPrompts","inquirer","Prompt","newPrompt","inquirer$1","createNumberConversion","bitLength","typeOpts","unsigned","lowerBound","upperBound","moduloVal","moduloBitLength","moduloBound","V","enforceRange","clamp","evenRound","treatNullAsEmptyString","S","U","fromCodePoint","mixin","wrapperSymbol","implSymbol","wrapperForImpl","impl","implForWrapper","wrapper","punycode","PROCESSING_OPTIONS","TRANSITIONAL","NONTRANSITIONAL","findStatus","regexAstralSymbols","countSymbols","combiningMarksRegex","validateLabel","processing_option","toUnicode","processing","domain_name","useSTD3","hasError","processed","mapChars","validation","tr46","toASCII","verifyDnsLength","domain","specialSchemes","ftp","gopher","ws","wss","isASCIIDigit","isASCIIAlpha","isASCIIHex","isSingleDot","isWindowsDriveLetterString","isSpecialScheme","isSpecial","percentEncode","isC0ControlPercentEncode","extraPathPercentEncodeSet","isPathPercentEncode","extraUserinfoPercentEncodeSet","isUserinfoPercentEncode","percentEncodeChar","encodeSetPredicate","cStr","utf8PercentEncode","parseIPv4Number","parseHost","isSpecialArg","pieceIndex","compress","numbersSeen","ipv4Piece","swaps","temp","parseIPv6","parseOpaqueHost","utf8PercentDecode","asciiDomain","ipv4Host","numbers","ipv4","counter","parseIPv4","serializeHost","serializeIPv4","seqResult","maxIdx","maxLen","currStart","currLen","findLongestZeroSequence","ignore0","serializeIPv6","shortenPath","includesCredentials","URLStateMachine","encodingOverride","stateOverride","parseError","fragment","cannotBeABaseURL","trimControlChars","trimTabAndNewline","atFlag","arrFlag","passwordTokenSeenFlag","isASCIIAlphanumeric","encodedCodePoints","fileOtherwiseCodePoints","cp1","cp2","serializeURL","excludeFragment","serializeURLOrigin","parseURL","tuple","serializeOrigin","basicURLParse","usm","baseURL","setTheUsername","setThePassword","cannotHaveAUsernamePasswordPort","serializeInteger","Impl","URLImpl_1","implementation","constructorArgs","parsedBase","parsedURL","_url","origin","setup","privateData","interface","expose","Window","Worker","publicApi","BUFFER","TYPE","blobParts","byteOffset","ab","_read","relativeStart","relativeEnd","slicedBuffer","FetchError","systemError","errno","defineProperties","toStringTag","INTERNALS","PassThrough","Body","_ref","_ref$size","_ref$timeout","isURLSearchParams","disturbed","consumeBody","_this4","accum","accumBytes","resTimeout","getAll","p1","p2","bodyUsed","getBoundary","extractContentType","getTotalBytes","getLengthSync","_lengthRetrievers","hasKnownLength","ct","_this2","textConverted","_this3","charset","convertBody","mixIn","invalidTokenRegex","invalidHeaderCharRegex","validateName","validateValue","MAP","headerNames","getHeaders","_pairs$i","createHeadersIterator","HeadersIteratorPrototype","_INTERNAL","exportNodeCompatibleHeaders","hostHeaderKey","INTERNALS$1","STATUS_CODES","Response","redirected","INTERNALS$2","Url","whatwgUrl","parse_url","format_url","urlStr","streamDestructionSupported","isRequest","inputBody","isAbortSignal","follow","URL$1","PassThrough$1","contentLengthValue","totalBytes","getNodeRequestOptions","destroyStream","abortAndFinalize","finalize","reqTimeout","errorCallback","hadError","fixResponseChunkedTransferBadEnding","addListener","hasDataListener","createHeadersLenient","locationURL","requestOpts","orig","isDomainOrSubdomain","response_options","codings","zlibOptions","flush","Z_SYNC_FLUSH","finishFlush","createInflateRaw","createBrotliDecompress","writeToStream","realFetch","validateConfig","PROPERTIES","GROUPINGS","FILE_OUTPUT_NAME","buildQueries","queries","propertyKeys","groupNames","allGroupedKeys","groupObj","KEYS","VALUES","buildUpdateChoices","promptForValue","queriesMap","currentEnv","customPromptMessage","groupQuery","groupValue","promptOptions","buildSecretName","fsp","promises","promptAndWriteEnv","envFilePath","skipEvaluation","AZURE_SERVER","getAzureCredentials","promptForVaultSecretsWithGroups","promptForVaultSecrets","envContent","writeFile","groupedKeys","updateChoices","keysToUpdate","secrets","useJsonLogic","JSON_LOGIC","unifiedSecretName","jsonObj","jsonErr","fetchSecretsFromVault","allConfigKeys","updateEnvFileInteractively","access","rest","readEnvFile","configPath","configFile","configContent","getCurrentUserEmail","tokenResponse","user","mail","userPrincipalName","promptKeyVaultSecretsAndWriteEnv","envFile","propertyValues","KEY_VAULT_INPUTS","inputs","promptType","isDockerCached","cachedResult","isDocker","hasDockerEnv","hasDockerCGroup","isInsideContainer","hasContainerEnv","isWsl","__IS_WSL_TEST__","wslDrivesMountPoint","defaultMountPoint","mountPoint","configFilePath","isConfigFileExists","fsConstants","configMountPoint","groups","powerShellPath","powerShellPathFromWsl","SYSTEMROOT","windir","defineLazyProperty","valueGetter","define","execFileAsync","promisify","bundleName","bundleId","script","humanReadableOutput","outputArguments","runAppleScript","windowsBrowserProgIds","AppXq0fevzme2pys62n3e0fbqa7peapykr8v","MSEdgeDHTML","MSEdgeHTM","FirefoxURL","ChromeHTML","BraveHTML","BraveBHTML","BraveSSHTM","UnknownBrowserError","defaultBrowser","defaultBrowserId","_execFileAsync","windows","__dirname","dirname","fileURLToPath","localXdgOpenPath","pTryEach","latestError","baseOpen","wait","background","allowNonzeroExitCode","singleApp","appArguments","ids","flags","chrome","brave","firefox","edge","powershellPath","rawCommand","encodedCommand","progId","browserMap","getWindowsDefaultBrowserFromWsl","browserName","apps","cliArguments","childProcessOptions","windowsVerbatimArguments","encodedArguments","argument","isBundled","exeLocalXdgOpen","X_OK","electron","detached","subprocess","detectArchBinary","archBinary","detectPlatformBinary","platformBinary","wsl","darwin","ia32","x64","getVaultSecretsWithTags","secretProperties","buildGroupingsFromTags","groupings","secretNames","isSensitive","ungrouped","ungroupedAnswers","promptUtils","dynamicConfig","parsedSecrets","keySets","keySetCounts","keySetMap","keyStr","majorityKeyStr","maxCount","majorityKeys","validGroupSecrets","PROMPT_MESSAGE","invalidGroupSecrets","promptMessage","finalAnswers","selected","secretValue"],"mappings":"u0CAKO,MAAMA,GAAc,SAQdC,GAA0B,uCAShC,IAAIC,IACX,SAAWA,GAIPA,EAAgC,WAAI,iCAOpCA,EAAkC,aAAI,mCAItCA,EAAqC,gBAAI,mCAIzCA,EAAsC,iBAAI,mCAC7C,CApBD,CAoBGA,KAAwBA,GAAsB,CAAE,IAK5C,MAAMC,GAAuBD,GAAoBE,iBAU3CC,GAAc,CAAC,KCsErB,MAAMC,GAAc,CACvBC,4BA1DJ,SAAqCC,GACjC,MAAMC,EAAS,CACXC,MAAO,CAAE,EACTC,OAAQ,IACDH,EAAQI,cACXC,UAAWL,EAAQI,eAAeE,UAAW,EAC7CC,qBAAsBP,EAAQI,eAAeI,6BAA8B,IAGnF,GAAIR,EAAQS,8BAA8BH,QAElC,MAAM,IAAII,MAAM,CACZ,sFACA,0HACA,oFACA,4FACFC,KAAK,MAYf,GAAIX,EAAQI,eAAeE,QACvB,MAAIN,EAAQY,mBAEE,IAAIF,MAAM,CACZ,mHACA,oGACA,oFACA,kEACFC,KAAK,MAMD,IAAID,MAAM,CACZ,mFACA,oGACA,oFACA,kEACFC,KAAK,MAKnB,OAAOV,CACX,GC5GO,MAAMY,WAAmCH,MAC5C,WAAAI,CAAYC,EAASf,GACjBgB,MAAMD,EAASf,GACfiB,KAAKC,KATiC,4BAUzC,EAKE,MAAMC,GAA0B,sBAMhC,MAAMC,WAA4BV,MAIrCW,WAIAC,cACA,WAAAR,CAAYO,EAAYE,EAAWvB,GAC/B,IAAIsB,EAAgB,CAChBE,MAAO,UACPC,iBAAkB,sEAEtB,GA3CR,SAAyBH,GACrB,OAAQA,GAC2B,iBAAxBA,EAAcE,OACsB,iBAApCF,EAAcI,iBAC7B,CAuCYC,CAAgBJ,GAChBD,EAAgBM,GAAyCL,QAExD,GAAyB,iBAAdA,EACZ,IAIID,EAAgBM,GADWC,KAAKC,MAAMP,GAEzC,CACD,MAAOQ,GAECT,EADe,MAAfD,EACgB,CACZG,MAAO,kBACPC,iBAAkB,0DAA0DF,KAIhE,CACZC,MAAO,gBACPC,iBAAkB,oDAAoDF,IAGjF,MAGDD,EAAgB,CACZE,MAAO,gBACPC,iBAAkB,sEAG1BT,MAAM,GAAGM,EAAcE,sBAAsBH,qBAA8BC,EAAcG,oBAAqBzB,GAC9GiB,KAAKI,WAAaA,EAClBJ,KAAKK,cAAgBA,EAErBL,KAAKC,KAAOC,EACf,EAUE,MAAMa,WAAqCtB,MAK9CuB,OACA,WAAAnB,CAAYmB,EAAQC,GAEhBlB,MAAM,GAAGkB,MADWD,EAAOtB,KAAK,SAEhCM,KAAKgB,OAASA,EAEdhB,KAAKC,KAhBmC,8BAiB3C,EAEL,SAASU,GAAyCL,GAC9C,MAAO,CACHC,MAAOD,EAAUC,MACjBC,iBAAkBF,EAAUG,kBAC5BS,cAAeZ,EAAUa,eACzBC,WAAYd,EAAUe,YACtBC,UAAWhB,EAAUgB,UACrBC,QAASjB,EAAUkB,SAE3B,CAIO,MAAMC,WAAoChC,MAI7CiC,OAIAC,gBACA,WAAA9B,CAIAd,GACIgB,MAAMhB,EAAQe,QAASf,EAAQ6C,MAAQ,CAAEA,MAAO7C,EAAQ6C,YAAUC,GAClE7B,KAAK0B,OAAS3C,EAAQ2C,OACtB1B,KAAK2B,gBAAkB5C,EAAQ4C,gBAC/B3B,KAAKC,KAAO,6BACf,ECrIL,MAAM6B,GAAuC,oBAAZC,SAA2BA,QAAQC,KAAOD,QAAQC,IAAIC,YAAUJ,EACjG,IAAIK,GACAC,GAAoB,GACpBC,GAAoB,GACxB,MAAMC,GAAY,GACdP,IACAQ,GAAOR,IAEX,MAAMS,GAAWC,OAAOC,OAAQC,GACrBC,GAAeD,GACvB,CACCJ,UACAjD,WACAuD,QAqCJ,WACI,MAAMC,EAASX,IAAiB,GAEhC,OADAI,GAAO,IACAO,CACX,EAxCIC,ICZG,SAAahD,KAAYiD,GAC5BhB,EAAQiB,OAAOC,MAAM,GAAGC,EAAKC,OAAOrD,KAAYiD,KAAQK,IAC5D,IDYA,SAASd,GAAOe,GACZnB,GAAgBmB,EAChBlB,GAAoB,GACpBC,GAAoB,GACpB,MAAMkB,EAAW,MACXC,EAAgBF,EAAWG,MAAM,KAAKC,IAAKC,GAAOA,EAAGC,OAAOC,QAAQN,EAAU,QACpF,IAAK,MAAMI,KAAMH,EACTG,EAAGG,WAAW,KACdzB,GAAkB0B,KAAK,IAAIC,OAAO,IAAIL,EAAGM,OAAO,QAGhD7B,GAAkB2B,KAAK,IAAIC,OAAO,IAAIL,OAG9C,IAAK,MAAMO,KAAY5B,GACnB4B,EAAS5E,QAAUA,GAAQ4E,EAASvB,UAE5C,CACA,SAASrD,GAAQqD,GACb,GAAIA,EAAUwB,SAAS,KACnB,OAAO,EAEX,IAAK,MAAMC,KAAW/B,GAClB,GAAI+B,EAAQC,KAAK1B,GACb,OAAO,EAGf,IAAK,MAAM2B,KAAoBlC,GAC3B,GAAIkC,EAAiBD,KAAK1B,GACtB,OAAO,EAGf,OAAO,CACX,CAMA,SAASC,GAAeD,GACpB,MAAM4B,EAAc9B,OAAOC,OAO3B,YAAkBM,GACd,IAAKuB,EAAYjF,QACb,OAEA0D,EAAKwB,OAAS,IACdxB,EAAK,GAAK,GAAGL,KAAaK,EAAK,MAEnCuB,EAAYxB,OAAOC,EACtB,EAfwC,CACrC1D,QAASA,GAAQqD,GACjB8B,WACA1B,IAAKP,GAASO,IACdJ,YACA+B,YAYJ,OADApC,GAAUyB,KAAKQ,GACRA,CACX,CACA,SAASE,KACL,MAAME,EAAQrC,GAAUsC,QAAQ3E,MAChC,OAAI0E,GAAS,IACTrC,GAAUuC,OAAOF,EAAO,IACjB,EAGf,CACA,SAASD,GAAO/B,GACZ,MAAM4B,EAAc3B,GAAe,GAAG3C,KAAK0C,aAAaA,KAExD,OADA4B,EAAYxB,IAAM9C,KAAK8C,IAChBwB,CACX,CEvFA,MAAMO,GAA8B,CAAC,UAAW,OAAQ,UAAW,SAC7DC,GAAW,CACbC,QAAS,IACTC,KAAM,IACNC,QAAS,IACT1E,MAAO,KAEX,SAAS2E,GAAeC,EAAQC,GAC5BA,EAAMtC,IAAM,IAAIC,KACZoC,EAAOrC,OAAOC,GAEtB,CACA,SAASsC,GAA0BC,GAC/B,OAAOT,GAA4BU,SAASD,EAChD,CAMO,SAASE,GAAoBzG,GAChC,MAAM0G,EAAoB,IAAIC,IACxBC,EAAsC,oBAAZ5D,SAA2BA,QAAQC,KAAOD,QAAQC,IAAIjD,EAAQ6G,0BAC1F/D,EACJ,IAAIgE,EACJ,MAAMC,EAAeC,GAAMhH,EAAQ2D,WAInC,SAASsD,EAAmBV,GACxB,GAAIA,IAAUD,GAA0BC,GACpC,MAAM,IAAI7F,MAAM,sBAAsB6F,0BAA8BT,GAA4BnF,KAAK,QAEzGmG,EAAWP,EACX,MAAMnD,EAAoB,GAC1B,IAAK,MAAM8D,KAAUR,EACbS,EAAaD,IACb9D,EAAkB2B,KAAKmC,EAAOvD,WAGtCqD,GAAMzD,OAAOH,EAAkBzC,KAAK,KACvC,CAUD,SAASwG,EAAaD,GAClB,OAAOE,QAAQN,GAAYf,GAASmB,EAAOX,QAAUR,GAASe,GACjE,CACD,SAASO,EAAajB,EAAQG,GAC1B,MAAMW,EAASzD,OAAOC,OAAO0C,EAAOV,OAAOa,GAAQ,CAC/CA,UAGJ,GADAJ,GAAeC,EAAQc,GACnBC,EAAaD,GAAS,CACtB,MAAM9D,EAAoB4D,GAAMnD,UAChCmD,GAAMzD,OAAOH,EAAoB,IAAM8D,EAAOvD,UACjD,CAED,OADA+C,EAAkBY,IAAIJ,GACfA,CACV,CAcD,OArDAH,EAAahD,IAAM,IAAIC,KACnBgD,GAAMjD,OAAOC,IAeb4C,IAEIN,GAA0BM,GAC1BK,EAAmBL,GAGnBW,QAAQ/F,MAAM,GAAGxB,EAAQ6G,gDAAgDD,kDAAgEd,GAA4BnF,KAAK,WA+B3K,CACH6G,YAAaP,EACbQ,YAfJ,WACI,OAAOX,CACV,EAcGY,mBAbJ,SAAmC/D,GAC/B,MAAMgE,EAAmBZ,EAAarB,OAAO/B,GAE7C,OADAwC,GAAeY,EAAcY,GACtB,CACHnG,MAAO6F,EAAaM,EAAkB,SACtCzB,QAASmB,EAAaM,EAAkB,WACxC1B,KAAMoB,EAAaM,EAAkB,QACrC3B,QAASqB,EAAaM,EAAkB,WAE/C,EAKGT,OAAQH,EAEhB,CACA,MAAMa,GAAUnB,GAAoB,CAChCI,mBAAoB,6BACpBlD,UAAW,oBA8BR,SAAS+D,GAAmB/D,GAC/B,OAAOiE,GAAQF,mBAAmB/D,EACtC,CCxHA,MAAMiE,GAAUnB,GAAoB,CAChCI,mBAAoB,kBACpBlD,UAAW,UAuBR,SAAS8D,KACZ,OAAOG,GAAQH,aACnB,CAMO,SAASC,GAAmB/D,GAC/B,OAAOiE,GAAQF,mBAAmB/D,EACtC,CChCO,MAAMuD,GAASQ,GAAmB,YAKlC,SAASG,GAAeC,GAC3B,OAAOA,EAAiBC,OAAO,CAACC,EAAKC,KAC7BjF,QAAQC,IAAIgF,GACZD,EAAIE,SAASnD,KAAKkD,GAGlBD,EAAIG,QAAQpD,KAAKkD,GAEdD,GACR,CAAEG,QAAS,GAAID,SAAU,IAChC,CAcO,SAASE,GAAcC,GAC1B,MAAO,oBAAoBC,MAAMC,QAAQF,GAASA,EAAM1H,KAAK,MAAQ0H,IACzE,CAIO,SAASG,GAAYH,EAAO7G,GAC/B,IAAIT,EAAU,SAId,OAHIsH,GAAO7C,SACPzE,GAAW,YAAYuH,MAAMC,QAAQF,GAASA,EAAM1H,KAAK,MAAQ0H,MAE9D,GAAGtH,oBAA2C,iBAAVS,EAAqBA,EAAQA,EAAMT,UAClF,CASO,SAAS0H,GAAyBC,EAAOtC,EAAQrC,EAAMmD,IAC1D,MAAMyB,EAAYvC,EAAS,GAAGA,EAAOuC,aAAaD,IAAUA,EAa5D,MAAO,CACHA,QACAC,YACA1C,KAfJ,SAAclF,GACVgD,EAAIkC,KAAK,GAAG0C,OAAgB5H,EAC/B,EAcGmF,QAbJ,SAAiBnF,GACbgD,EAAImC,QAAQ,GAAGyC,OAAgB5H,EAClC,EAYGiF,QAXJ,SAAiBjF,GACbgD,EAAIiC,QAAQ,GAAG2C,OAAgB5H,EAClC,EAUGS,MATJ,SAAeT,GACXgD,EAAIvC,MAAM,GAAGmH,OAAgB5H,EAChC,EASL,CAWO,SAAS6H,GAAiBF,EAAO3E,EAAMmD,IAC1C,MAAM2B,EAAaJ,GAAyBC,OAAO5F,EAAWiB,GAC9D,MAAO,IACA8E,EACHzC,OAAQrC,EACR+E,SAAUL,GAAyB,gBAAiBI,EAAY9E,GAExE,CC7FO,MAAMgF,GAAmB,CAC5BC,KAAMC,OAAOC,IAAI,4BACjBvF,UAAWsF,OAAOC,IAAI,kCASnB,SAASC,GAAqBnJ,EAAU,IAC3C,IAAI4H,EAAU,IAAIwB,GAAmBpJ,EAAQqJ,eAO7C,OANIrJ,EAAQgJ,OACRpB,EAAUA,EAAQ0B,SAASP,GAAiBC,KAAMhJ,EAAQgJ,OAE1DhJ,EAAQ2D,YACRiE,EAAUA,EAAQ0B,SAASP,GAAiBpF,UAAW3D,EAAQ2D,YAE5DiE,CACX,CAEO,MAAMwB,GACT,WAAAtI,CAAYyI,GACRtI,KAAKuI,YACDD,aAA0BH,GACpB,IAAIK,IAAIF,EAAeC,aACvB,IAAIC,GACjB,CACD,QAAAH,CAASI,EAAKC,GACV,MAAMC,EAAa,IAAIR,GAAmBnI,MAE1C,OADA2I,EAAWJ,YAAYK,IAAIH,EAAKC,GACzBC,CACV,CACD,QAAAE,CAASJ,GACL,OAAOzI,KAAKuI,YAAYO,IAAIL,EAC/B,CACD,WAAAM,CAAYN,GACR,MAAME,EAAa,IAAIR,GAAmBnI,MAE1C,OADA2I,EAAWJ,YAAYS,OAAOP,GACvBE,CACV,2wBCpCE,MAAMM,cCLbzG,OAAO0G,eAAeD,GAAS,aAAc,CAAEP,OAAO,IACzCO,GAAAA,WAAG,EAMhBA,GAAAA,MAAgB,CACZE,gCAA4BtH,QDHHoH,MEgDtB,SAASG,KAIZ,OAHKH,GAAME,6BACPF,GAAME,2BAjCH,CACHE,qBAAsB,KACX,IAEXC,uBAAwB,OAGxBC,UAAW,CAACC,EAAOC,KACR,CACH1B,KA7BL,CACH2B,IAAK,OAGLC,YAAa,KAAM,EACnBC,gBAAiB,OAGjBC,aAAc,OAGdC,UAAW,OAGXC,SAAU,QAgBFC,eAAgB9B,GAAqB,CAAEE,cAAeqB,EAAYO,mBAG1EC,YAAW,CAACC,EAAUC,KAAaC,IACxBD,KAAYC,KAqBpBnB,GAAME,0BACjB,CCnDO,SAASkB,GAAoBtL,GAChC,MAAM2D,UAAEA,EAAS4H,YAAEA,EAAWC,eAAEA,GAAmBxL,EACnD,SAASwK,EAAUtJ,EAAMuK,EAAkBf,GACvC,IAAIgB,EACJ,MAAMC,EAAkBtB,KAAkBG,UAAUtJ,EAAMuC,OAAOC,OAAOD,OAAOC,OAAO,CAAE,EAAEgH,GAAc,CAAEa,YAAaA,EAAaC,eAAgBA,EAAgBP,eAA+H,QAA9GS,EAAKD,aAA2D,EAASA,EAAiBG,sBAAmC,IAAPF,OAAgB,EAASA,EAAGT,kBACvU,IAAIA,EAAiBU,EAAgBV,eACrC,MAAMjC,EAAO2C,EAAgB3C,KACxBiC,EAAenB,SAASf,GAAiBpF,aAC1CsH,EAAiBA,EAAe3B,SAASP,GAAiBpF,UAAWA,IAEzEqF,EAAK8B,aAAa,eAAgBG,EAAenB,SAASf,GAAiBpF,YAI3E,MAAO,CACHqF,OACA6C,eALmBpI,OAAOC,OAAO,CAAA,EAAI+H,EAAkB,CACvDG,eAAgBnI,OAAOC,OAAOD,OAAOC,OAAO,CAAA,EAAI+H,aAA2D,EAASA,EAAiBG,gBAAiB,CAAEX,qBAM/J,CAgBD,SAASC,EAAYtD,EAASwD,KAAaC,GACvC,OAAOhB,KAAkBa,YAAYtD,EAASwD,KAAaC,EAC9D,CAmBD,MAAO,CACHb,YACAsB,SAtCJC,eAAwB7K,EAAMuK,EAAkBL,EAAUV,GACtD,MAAM1B,KAAEA,EAAI6C,eAAEA,GAAmBrB,EAAUtJ,EAAMuK,EAAkBf,GACnE,IACI,MAAM5G,QAAeoH,EAAYW,EAAeD,eAAeX,eAAgB,IAAMe,QAAQC,QAAQb,EAASS,EAAgB7C,KAE9H,OADAA,EAAK+B,UAAU,CAAEmB,OAAQ,YAClBpI,CACV,CACD,MAAOqI,GAEH,MADAnD,EAAK+B,UAAU,CAAEmB,OAAQ,QAAS1K,MAAO2K,IACnCA,CACT,CACO,QACJnD,EAAK2B,KACR,CACJ,EAyBGO,cACAX,uBAhBJ,SAAgC6B,GAC5B,OAAO/B,KAAkBE,uBAAuB6B,EACnD,EAeG9B,qBARJ,SAA8BW,GAC1B,OAAOZ,KAAkBC,qBAAqBW,EACjD,EAQL,CChEO,MAAMoB,GAAgBf,GAAoB,CAC7C3H,UAAW,gBACX4H,YAAa,kBACbC,eAAgBhM,KCHP0H,GAAS0B,GAAiB,0BAMhC,MAAM0D,GACTC,SAAW,GAsBX,WAAAzL,IAAe0L,GACXvL,KAAKsL,SAAWC,CACnB,CAcD,cAAM1D,CAASnG,EAAQ3C,EAAU,IAC7B,MAAMyM,MAAEA,SAAgBxL,KAAKyL,iBAAiB/J,EAAQ3C,GACtD,OAAOyM,CACV,CACD,sBAAMC,CAAiB/J,EAAQ3C,EAAU,IACrC,IACI2M,EADAF,EAAQ,KAEZ,MAAMxK,EAAS,GACf,OAAOoK,GAAcP,SAAS,kCAAmC9L,EAAS+L,MAAOF,IAC7E,IAAK,IAAIe,EAAI,EAAGA,EAAI3L,KAAKsL,SAAS/G,QAAoB,OAAViH,EAAgBG,IACxD,IACIH,QAAcxL,KAAKsL,SAASK,GAAG9D,SAASnG,EAAQkJ,GAChDc,EAAuB1L,KAAKsL,SAASK,EACxC,CACD,MAAOT,GACH,GAAiB,+BAAbA,EAAIjL,MACS,gCAAbiL,EAAIjL,KAKJ,MADAgG,GAAO4B,SAAS7C,KAAKuC,GAAY7F,EAAQwJ,IACnCA,EAJNlK,EAAO8C,KAAKoH,EAMnB,CAEL,IAAKM,GAASxK,EAAOuD,OAAS,EAAG,CAC7B,MAAM2G,EAAM,IAAInK,GAA6BC,EAAQ,iDAErD,MADAiF,GAAO4B,SAAS7C,KAAKuC,GAAY7F,EAAQwJ,IACnCA,CACT,CAED,GADAjF,GAAO4B,SAAS7C,KAAK,cAAc0G,EAAqB7L,YAAYI,SAASkH,GAAczF,MAC7E,OAAV8J,EACA,MAAM,IAAI5L,GAA2B,oCAEzC,MAAO,CAAE4L,QAAOE,yBAEvB;yCC/EL,MAAME,GAKF,wBAAOC,CAAkBC,GACrB,OAAOlL,KAAKmL,UAAUD,EACzB,CAKD,wBAAOE,CAAkBC,GACrB,MAAMC,EAAW,CAAA,EAmBjB,OAlBA1J,OAAO2J,KAAKF,GAAUxI,IAAI,SAAUgF,GAChC,MAAM2D,EAAgBH,EAASxD,GAC/ByD,EAASzD,GAAO,CACZ4D,gBAAiBD,EAAcE,cAC/BC,YAAaH,EAAcG,YAC3BC,MAAOJ,EAAcI,MACrBC,iBAAkBL,EAAcM,eAChCC,SAAUP,EAAcO,SACxBC,eAAgBR,EAAcS,cAC9B5M,KAAMmM,EAAcnM,KACpB6M,YAAaV,EAAcW,WAC3BC,uBAAwBZ,EAAca,qBACtCC,sBAAuBd,EAAce,oBACrCC,eAAgBhB,EAAcgB,gBAAgB3J,IAAK4J,GACxCzM,KAAKmL,UAAUsB,IAG1C,GACenB,CACV,CAKD,wBAAOoB,CAAkBC,GACrB,MAAMC,EAAW,CAAA,EAYjB,OAXAhL,OAAO2J,KAAKoB,GAAU9J,IAAI,SAAUgF,GAChC,MAAMgF,EAAYF,EAAS9E,GAC3B+E,EAAS/E,GAAO,CACZ4D,gBAAiBoB,EAAUnB,cAC3BC,YAAakB,EAAUlB,YACvBmB,gBAAiBD,EAAUE,eAC3BC,UAAWH,EAAUI,SACrBC,OAAQL,EAAUK,OAClBtB,MAAOiB,EAAUjB,MAEjC,GACegB,CACV,CAKD,4BAAOO,CAAsBC,GACzB,MAAMC,EAAe,CAAA,EAsBrB,OArBAzL,OAAO2J,KAAK6B,GAASvK,IAAI,SAAUgF,GAC/B,MAAMyF,EAAWF,EAAQvF,GACzBwF,EAAaxF,GAAO,CAChB4D,gBAAiB6B,EAAS5B,cAC1BC,YAAa2B,EAAS3B,YACtBmB,gBAAiBQ,EAASP,eAC1BC,UAAWM,EAASL,SACpBC,OAAQI,EAASJ,OACjBtB,MAAO0B,EAAS1B,MAChB2B,OAAQD,EAASC,OACjBC,UAAWF,EAASG,SACpBC,WAAYJ,EAASK,UACrBC,oBAAqBN,EAASO,kBAC9BC,WAAYR,EAASS,UACrBC,OAAQV,EAASW,MACjBC,WAAYZ,EAASa,UACrBC,gBAAiBd,EAASc,gBAC1BC,oBAAqBf,EAASe,oBAC9BC,kBAAmBhB,EAASgB,kBAE5C,GACejB,CACV,CAKD,6BAAOkB,CAAuBC,GAC1B,MAAMC,EAAgB,CAAA,EActB,OAbA7M,OAAO2J,KAAKiD,GAAS3L,IAAI,SAAUgF,GAC/B,MAAM6G,EAAWF,EAAQ3G,GACzB4G,EAAc5G,GAAO,CACjB4D,gBAAiBiD,EAAShD,cAC1BC,YAAa+C,EAAS/C,YACtBmB,gBAAiB4B,EAAS3B,eAC1BC,UAAW0B,EAASzB,SACpBC,OAAQwB,EAASxB,OACjByB,UAAWD,EAASE,SACpBrB,OAAQmB,EAASnB,OACjB3B,MAAO8C,EAAS9C,MAEhC,GACe6C,CACV,CAKD,2BAAOI,CAAqBC,GACxB,MAAMC,EAAc,CAAA,EASpB,OARAnN,OAAO2J,KAAKuD,GAAWjM,IAAI,SAAUgF,GACjC,MAAMmH,EAAaF,EAAUjH,GAC7BkH,EAAYlH,GAAO,CACfmF,UAAWgC,EAAW/B,SACtBtB,YAAaqD,EAAWrD,YACxBgD,UAAWK,EAAWJ,SAEtC,GACeG,CACV,CAKD,wBAAOE,CAAkBC,GACrB,MAAO,CACHC,QAAS/P,KAAKgM,kBAAkB8D,EAAW5D,UAC3C8D,QAAShQ,KAAKsN,kBAAkBwC,EAAWtC,UAC3CyC,YAAajQ,KAAK+N,sBAAsB+B,EAAW7B,cACnDiC,aAAclQ,KAAKmP,uBAAuBW,EAAWT,eACrDc,YAAanQ,KAAKyP,qBAAqBK,EAAWH,aAEzD;6CCvIL,MAAMS,GAAY,CACdC,aAAc,UACdC,IAAK,iBAELC,kBAAmB,4CACnBC,uBAAwB,4BACxBC,sBAAuB,SAEvBC,KAAM,OACNC,KAAM,SAENC,6BAA8B,sGAE9BC,cAAe,iBACfC,yBAA0B,mBAE1BC,eAAgB,IAEhBC,WAAY,aAEZC,OAAQ,SAERC,cAAe,uCAEfC,aAAc,SACdC,cAAe,UACfC,qBAAsB,iBACtBC,YAAa,QACbC,gBAAiB,qBACjBC,cAAe,gBACfC,2BAA4B,OAC5BC,sBAAuB,kDACvBC,sBAAuB,wBACvBC,YAAa,cACbC,aAAc,GACdC,eAAgB,MAChBC,cAAe,gBACfC,cAAe,IACfC,cAAe,4DACfC,aAAc,aACdC,aAAc,IACdC,gCAAiC,gBACjCC,kCAAmC,sBACnCC,oBAAqB,CACjB,4BACA,oBACA,sBACA,mBAEJC,mBAAoB,IACpBC,iBAAkB,oBAEhBC,GACO,IADPA,GAEmB,IAFnBA,GAGiB,IAHjBA,GAIQ,IAJRA,GAMwB,IANxBA,GAOW,IAPXA,GAQY,IARZA,GASS,IATTA,GAUe,IAVfA,GAWI,IAXJA,GAYiB,IAZjBA,GAasB,IAbtBA,GAcY,IAdZA,GAewB,IAfxBA,GAgBmB,IAhBnBA,GAiBe,IAjBfA,GAkBsB,IAOtBC,GAAsB,CACxBtC,GAAUe,aACVf,GAAUgB,cACVhB,GAAUiB,sBAERsB,GAAc,IAAID,GAAqBtC,GAAUkB,aAIjDsB,GACY,eADZA,GAEc,iBAFdA,GAGW,cAHXA,GAIU,kBAJVA,GAOe,kBAPfA,GAQiB,eAWjBC,GAAwB,CAC1BC,OAAQ,SACRC,cAAe,gBACfC,UAAW,aAKTC,GACY,eADZA,GAEM,SAONC,GAEc,iBAFdA,GAII,OAOJC,GAEI,OAKJC,GACI,OADJA,GAEa,iBAcbC,GACK,QAOLC,GAEwB,qBAFxBA,GAGwB,qBAHxBA,GAI6B,WAJ7BA,GAKmB,gBALnBA,GAMiB,cANjBA,GAOU,8CAKVC,GACkB,QADlBA,GAEiB,OAFjBA,GAIoB,UAKpBC,GACmB,IADnBA,GAEqB,IAKrBC,GAAiB,CACnBC,SAAU,UACVC,aAAc,cACdC,8BAA+B,8BAC/BC,cAAe,gBAmBbC,GAAe,cAEfC,GAAgB,IAChBC,GACS,qBADTA,GAEoB,MAEpBC,GACM,SADNA,GAEK,QAFLA,GAGO,UAHPA,GAIgB,mBAEhBC,GAAyB,CAC3BC,eAAgB,EAChBC,sBAAuB,IACvBC,kBAAmB,GACnBC,UAAW,mBACXC,mBAAoB,IACpBC,gBAAiB,IACjBC,cAAe,IACfC,eAAgB,IAChBC,cAAe,iBAKbC,GAAuB,CACzBC,OAAQ,SACRC,IAAK,MACLC,IAAK,YAKHC,GAE6B,GAF7BA,GAIiC,KAJjCA,GAMiB,aANjBA,GAQyB,oBAEzBC,GACmB,gBADnBA,GAEqB,kBAKrBC,GACQ,WADRA,GAEQ,WAKRC,GACqB,IADrBA,GAGoB,IAHpBA,GAII,IAKJC,GAC4B,IAD5BA,GAEmC,IAFnCA,GAG+B,IAK/BC,GAEc,IAFdA,GAIuB,IAJvBA,GAMsB,IANtBA,GAQ2B,IAR3BA,GAUqB,IAUrBC,GACM,SADNA,GAEG,MAFHA,GAGI,QCvTJC,GAAkB,mBAClBC,GAAoB,sBCCpBC,GAAoB,CACtBF,CAACA,IAAkB,sCACnBC,CAACA,IAAoB,wIAmBzB,MAAME,WAAkBjW,MACpB,WAAAI,CAAY8V,EAAW1U,EAAc2U,GAIjC7V,MAHoBkB,EACd,GAAG0U,MAAc1U,IACjB0U,GAENnT,OAAOqT,eAAe7V,KAAM0V,GAAUI,WACtC9V,KAAK2V,UAAYA,GAAavF,GAAUyB,aACxC7R,KAAKiB,aAAeA,GAAgBmP,GAAUyB,aAC9C7R,KAAK+V,SAAWH,GAAYxF,GAAUyB,aACtC7R,KAAKC,KAAO,WACf,CACD,gBAAA+V,CAAiB9U,GACblB,KAAKkB,cAAgBA,CACxB,EAEL,SAAS+U,GAAgBC,EAAMC,GAC3B,OAAO,IAAIT,GAAUQ,EAAMC,EACrB,GAAGV,GAAkBS,MAASC,IAC9BV,GAAkBS,GAC5B;6CC9CA,MAAME,GAA0B,6BAC1BC,GAAuB,0BACvBC,GAAoB,sBACpBC,GAAmB,sBACnBC,GAA0B,6BAC1BC,GAAe,gBACfC,GAAoB,sBACpBC,GAAsB,wBACtBC,GAAe,gBACfC,GAAgB,iBAChBC,GAAgB,kBAChBC,GAAgB,iBAChBC,GAAmB,sBACnBC,GAAmB,qBACnBC,GAAyB,2BACzBC,GAA2B,6BAC3BC,GAA8B,gCAC9BC,GAAsB,yBACtBC,GAAyB,4BACzBC,GAAuB,yBACvBC,GAAqB,uBACrBC,GAA6B,gCAC7BC,GAAoB,sBACpBC,GAAyB,4BACzBC,GAA2B,+BAC3BC,GAAqB,uBACrBC,GAA0B,4BAC1BC,GAAiB,mBACjBC,GAAiB,mBACjBC,GAA2B,6BAC3BC,GAAmB,oBACnBC,GAA0B,4BAC1BC,GAAuB,yBACvBC,GAAqB,uBACrBC,GAAqC,0CACrCC,GAA6C,kDAC7CC,GAAuB,0BACvBC,GAAiC,qCACjCC,GAAe,iBACfC,GAAwB,0BACxBC,GAAe,gBACfC,GAAuB,0BACvBC,GAAuB,yBACvBC,GAA8B,kCCnC9BC,GAA0B,CAC5B5C,CAACA,IAA0B,wDAC3BC,CAACA,IAAuB,4BACxBC,CAACA,IAAoB,yBACrBC,CAACA,IAAmB,6BACpBC,CAACA,IAA0B,+BAC3BC,CAACA,IAAe,yBAChBC,CAACA,IAAoB,8IACrBC,CAACA,IAAsB,gDACvBC,CAACA,IAAe,oCAChBC,CAACA,IAAgB,uBACjBC,CAACA,IAAgB,kBACjBC,CAACA,IAAgB,uBACjBC,CAACA,IAAmB,+NAGpBC,CAACA,IAAmB,4FACpBC,CAACA,IAAyB,oJAE1BC,CAACA,IAA2B,4HAC5BC,CAACA,IAA8B,mIAC/BC,CAACA,IAAsB,4EACvBC,CAACA,IAAyB,kDAC1BC,CAACA,IAAuB,yBACxBC,CAACA,IAAqB,2CACtBC,CAACA,IAA6B,kHAC9BC,CAACA,IAAoB,0BACrBC,CAACA,IAAyB,mDAC1BC,CAACA,IAA2B,0FAC5BC,CAACA,IAAqB,6CACtBC,CAACA,IAA0B,4DAC3BC,CAACA,IAAiB,2CAClBC,CAACA,IAAiB,6BAClBC,CAACA,IAA2B,8BAC5BC,CAACA,IAAmB,2FACpBC,CAACA,IAA0B,iKAC3BC,CAACA,IAAuB,qOACxBC,CAACA,IAAqB,uDACtBC,CAACA,IAAqC,kEACtCC,CAACA,IAA6C,oEAC9CC,CAACA,IAAuB,8DACxBC,CAACA,IAAiC,iDAClCC,CAACA,IAAe,wIAChBC,CAACA,IAAwB,2DACzBC,CAACA,IAAe,2BAChBC,CAACA,IAAuB,oHACxBC,CAACA,IAAuB,uCACxBC,CAACA,IAA8B,0CAuLnC,MAAME,WAAwBvD,GAC1B,WAAA7V,CAAY8V,EAAWQ,GACnBpW,MAAM4V,EAAWQ,EACX,GAAG6C,GAAwBrD,OAAeQ,IAC1C6C,GAAwBrD,IAC9B3V,KAAKC,KAAO,kBACZuC,OAAOqT,eAAe7V,KAAMiZ,GAAgBnD,UAC/C,EAEL,SAASoD,GAAsBvD,EAAWQ,GACtC,OAAO,IAAI8C,GAAgBtD,EAAWQ,EAC1C;6CCtPA,MAAMgD,GAAgC,CAClCC,cAAe,KACX,MAAMF,GAAsBJ,KAEhCO,aAAc,KACV,MAAMH,GAAsBJ,KAEhCQ,aAAc,KACV,MAAMJ,GAAsBJ,KAEhCS,gBAAiB,KACb,MAAML,GAAsBJ,KAEhCU,UAAW,KACP,MAAMN,GAAsBJ,KAEhC,4BAAMW,GACF,MAAMP,GAAsBJ,GAC/B,EACD,2BAAMY,GACF,MAAMR,GAAsBJ,GAC/B,EACD,mBAAMa,GACF,MAAMT,GAAsBJ,GAC/B,EACD,aAAMc,GACF,MAAMV,GAAsBJ,GAC/B,EACD,gBAAMe,GACF,MAAMX,GAAsBJ,GAC/B;6CC5BL,IAAIgB,IACJ,SAAWA,GACPA,EAASA,EAAgB,MAAI,GAAK,QAClCA,EAASA,EAAkB,QAAI,GAAK,UACpCA,EAASA,EAAe,KAAI,GAAK,OACjCA,EAASA,EAAkB,QAAI,GAAK,UACpCA,EAASA,EAAgB,MAAI,GAAK,OACrC,CAND,CAMGA,KAAaA,GAAW,CAAE,IAI7B,MAAMC,GACF,WAAAla,CAAYma,EAAe1P,EAAaC,GAEpCvK,KAAKsF,MAAQwU,GAASG,KACtB,MAGMC,EAAmBF,GAAiBD,GAAOI,6BACjDna,KAAKoa,cACDF,EAAiBG,gBALS,SAM9Bra,KAAKsa,kBAAoBJ,EAAiBI,oBAAqB,EAC/Dta,KAAKsF,MACoC,iBAA9B4U,EAAiBrU,SAClBqU,EAAiBrU,SACjBiU,GAASG,KACnBja,KAAKkB,cACDgZ,EAAiBhZ,eAAiBkP,GAAUyB,aAChD7R,KAAKsK,YAAcA,GAAe8F,GAAUyB,aAC5C7R,KAAKuK,eAAiBA,GAAkB6F,GAAUyB,YACrD,CACD,iCAAOsI,GACH,MAAO,CACHE,eAAgB,OAGhBC,mBAAmB,EACnBzU,SAAUiU,GAASG,KAE1B,CAID,KAAAM,CAAMjQ,EAAaC,EAAgBrJ,GAC/B,OAAO,IAAI6Y,GAAO,CACdM,eAAgBra,KAAKoa,cACrBE,kBAAmBta,KAAKsa,kBACxBzU,SAAU7F,KAAKsF,MACfpE,cAAeA,GAAiBlB,KAAKkB,eACtCoJ,EAAaC,EACnB,CAID,UAAAiQ,CAAWA,EAAYzb,GACnB,GAAIA,EAAQ8G,SAAW7F,KAAKsF,QACtBtF,KAAKsa,mBAAqBvb,EAAQ0b,YACpC,OAEJ,MAGM3X,EAAM,GADM,KAFA,IAAI4X,MAAOC,qBAEU5b,EAAQmC,eAAiBlB,KAAKkB,eAAiB,WACxDlB,KAAKsK,eAAetK,KAAKuK,oBAAoBuP,GAAS/a,EAAQ8G,eAAe2U,IAE3Gxa,KAAK4a,gBAAgB7b,EAAQ8G,SAAU/C,EAAK/D,EAAQ0b,cAAe,EACtE,CAID,eAAAG,CAAgBtV,EAAOxF,EAAS2a,GACxBza,KAAKoa,eACLpa,KAAKoa,cAAc9U,EAAOxF,EAAS2a,EAE1C,CAID,KAAAla,CAAMT,EAASoB,GACXlB,KAAKwa,WAAW1a,EAAS,CACrB+F,SAAUiU,GAASra,MACnBgb,aAAa,EACbvZ,cAAeA,GAAiBkP,GAAUyB,cAEjD,CAID,QAAAgJ,CAAS/a,EAASoB,GACdlB,KAAKwa,WAAW1a,EAAS,CACrB+F,SAAUiU,GAASra,MACnBgb,aAAa,EACbvZ,cAAeA,GAAiBkP,GAAUyB,cAEjD,CAID,OAAA5M,CAAQnF,EAASoB,GACblB,KAAKwa,WAAW1a,EAAS,CACrB+F,SAAUiU,GAASgB,QACnBL,aAAa,EACbvZ,cAAeA,GAAiBkP,GAAUyB,cAEjD,CAID,UAAAkJ,CAAWjb,EAASoB,GAChBlB,KAAKwa,WAAW1a,EAAS,CACrB+F,SAAUiU,GAASgB,QACnBL,aAAa,EACbvZ,cAAeA,GAAiBkP,GAAUyB,cAEjD,CAID,IAAA7M,CAAKlF,EAASoB,GACVlB,KAAKwa,WAAW1a,EAAS,CACrB+F,SAAUiU,GAASG,KACnBQ,aAAa,EACbvZ,cAAeA,GAAiBkP,GAAUyB,cAEjD,CAID,OAAAmJ,CAAQlb,EAASoB,GACblB,KAAKwa,WAAW1a,EAAS,CACrB+F,SAAUiU,GAASG,KACnBQ,aAAa,EACbvZ,cAAeA,GAAiBkP,GAAUyB,cAEjD,CAID,OAAA9M,CAAQjF,EAASoB,GACblB,KAAKwa,WAAW1a,EAAS,CACrB+F,SAAUiU,GAASmB,QACnBR,aAAa,EACbvZ,cAAeA,GAAiBkP,GAAUyB,cAEjD,CAID,UAAAqJ,CAAWpb,EAASoB,GAChBlB,KAAKwa,WAAW1a,EAAS,CACrB+F,SAAUiU,GAASmB,QACnBR,aAAa,EACbvZ,cAAeA,GAAiBkP,GAAUyB,cAEjD,CAID,KAAAsJ,CAAMrb,EAASoB,GACXlB,KAAKwa,WAAW1a,EAAS,CACrB+F,SAAUiU,GAASsB,MACnBX,aAAa,EACbvZ,cAAeA,GAAiBkP,GAAUyB,cAEjD,CAID,QAAAwJ,CAASvb,EAASoB,GACdlB,KAAKwa,WAAW1a,EAAS,CACrB+F,SAAUiU,GAASsB,MACnBX,aAAa,EACbvZ,cAAeA,GAAiBkP,GAAUyB,cAEjD,CAID,mBAAAyJ,GACI,OAAOtb,KAAKsa,oBAAqB,CACpC;6CC3LL,MAAMra,GAAO,qBACPsb,GAAU,UCEVC,GAEI,OCFJC,GAAmB,qBACnBC,GAA4B,+BAC5BC,GAAuB,yBACvBC,GAAgB,kBAChBC,GAAgB,kBAChBC,GAAwB,2BACxBC,GAAgB,iBAChBC,GAAoB,sBACpBC,GAAqB,uBACrBC,GAA6B,gCAC7BC,GAAoB,sBACpBC,GAAgC,mCAChCC,GAA2B,6BAC3BC,GAAqB,sBACrBC,GAAgB,kBAChBC,GAAgB,kBAChBC,GAAmC,sCACnCC,GAA8B,gCAC9BC,GAAuB,yBACvBC,GAA4B,+BAC5BC,GAAoB,qBACpBC,GAA6B,iCAC7BC,GAAqC,yCCjBrCC,GAAmC,CACrCvB,CAACA,IAAmB,mEACpBC,CAACA,IAA4B,mDAC7BC,CAACA,IAAuB,4NACxBC,CAACA,IAAgB,qDACjBC,CAACA,IAAgB,yBACjBC,CAACA,IAAwB,iHACzBC,CAACA,IAAgB,4DACjBC,CAACA,IAAoB,kDACrBC,CAACA,IAAqB,4CACtBC,CAACA,IAA6B,gFAC9BC,CAACA,IAAoB,sGACrBC,CAACA,IAAgC,sIACjCC,CAACA,IAA2B,0IAC5BC,CAACA,IAAqB,6HACtBC,CAACA,IAAgB,8HACjBC,CAACA,IAAgB,wJACjBC,CAACA,IAAmC,iLACpCC,CAACA,IAA8B,yCAC/BC,CAACA,IAAuB,8GACxBC,CAACA,IAA4B,kFAC7BC,CAACA,IAAoB,mPACrBE,CAACA,IAAqC,kLACtCD,CAACA,IAA6B,0JAuGlC,MAAMG,WAAiCvH,GACnC,WAAA7V,CAAY8V,GACR5V,MAAM4V,EAAWqH,GAAiCrH,IAClD3V,KAAKC,KAAO,2BACZuC,OAAOqT,eAAe7V,KAAMid,GAAyBnH,UACxD,EAEL,SAASoH,GAA+BvH,GACpC,OAAO,IAAIsH,GAAyBtH,EACxC;6CCzIA,MAAMwH,GAKF,iBAAOC,CAAWC,GACd,GAAIA,EACA,IACI,MAAMC,EAAM1c,KAAKC,MAAMwc,GACvB,OAAmC,IAA5B7a,OAAO2J,KAAKmR,GAAK/Y,MAC3B,CACD,MAAOzD,GAAM,CAEjB,OAAO,CACV,CACD,iBAAO+C,CAAW0Z,EAAKC,GACnB,OAA+B,IAAxBD,EAAI5Y,QAAQ6Y,EACtB,CACD,eAAOtZ,CAASqZ,EAAKC,GACjB,OAAQD,EAAIhZ,QAAUiZ,EAAOjZ,QACzBgZ,EAAIE,YAAYD,KAAYD,EAAIhZ,OAASiZ,EAAOjZ,MACvD,CAMD,0BAAOmZ,CAAoBC,GACvB,MAAML,EAAM,CAAA,EACNM,EAASD,EAAMna,MAAM,KACrBqa,EAAUC,GAAMC,mBAAmBD,EAAEla,QAAQ,MAAO,MAS1D,OARAga,EAAOI,QAASC,IACZ,GAAIA,EAAKta,OAAQ,CACb,MAAO8E,EAAKC,GAASuV,EAAKza,MAAM,SAAU,GACtCiF,GAAOC,IACP4U,EAAIO,EAAOpV,IAAQoV,EAAOnV,GAEjC,IAEE4U,CACV,CAMD,uBAAOY,CAAiBC,GACpB,OAAOA,EAAI1a,IAAK2a,GAAUA,EAAMza,OACnC,CAKD,kCAAO0a,CAA4BF,GAC/B,OAAOA,EAAIG,OAAQF,KACNA,EAEhB,CAKD,sBAAOG,CAAgBhB,GACnB,IACI,OAAO3c,KAAKC,MAAM0c,EACrB,CACD,MAAOzc,GACH,OAAO,IACV,CACJ,CAMD,mBAAO0d,CAAaC,EAASC,GAUzB,OAJc,IAAI3a,OAAO0a,EACpB7a,QAAQ,MAAO,QACfA,QAAQ,MAAO,SACfA,QAAQ,MAAO,QACPQ,KAAKsa,EACrB;6CC7EL,MAAMC,GACF,WAAA9e,CAAY+e,GAER,MAAMC,EAAWD,EACXzB,GAAYe,iBAAiB,IAAIU,IACjC,GACAE,EAAgBD,EAChB1B,GAAYkB,4BAA4BQ,GACxC,GAEN,IAAKC,IAAkBA,EAAcva,OACjC,MAAM2Y,GAA+BpB,IAEzC9b,KAAK0B,OAAS,IAAIgE,IAClBoZ,EAAcd,QAAS5W,GAAUpH,KAAK0B,OAAO2E,IAAIe,GACpD,CAOD,iBAAO2X,CAAWC,GACd,MACMJ,GADcI,GAAoB5O,GAAUyB,cAClBrO,MAAM,KACtC,OAAO,IAAImb,GAASC,EACvB,CAMD,yBAAOK,CAAmBD,GAEtB,MAAME,EAAcF,GAAoBA,EAAiBza,OAAS,EAC5Dya,EACA,IAAItM,IACJyM,EAAW,IAAIR,GAASO,GAO9B,OANKC,EAASC,yBAIVD,EAASE,YAAYjP,GAAUiB,sBAH/B8N,EAASG,mBAKNH,CACV,CAKD,aAAAI,CAAcnY,GACV,MAAMoY,EAAkBxf,KAAKyf,uBAAuBjc,MAAM,KACpDkc,EAAqB,IAAIf,GAASa,GAExC,QAAOpY,GACDsY,EAAmBhe,OAAOie,IAAIvY,EAAMwY,cAE7C,CAKD,gBAAAC,CAAiBV,GACb,SAAKA,GAAYA,EAASzd,OAAOoe,MAAQ,KAGjC9f,KAAK0B,OAAOoe,MAAQX,EAASzd,OAAOoe,MACxCX,EAASY,UAAUC,MAAO5Y,GAAUpH,KAAKuf,cAAcnY,IAC9D,CAID,sBAAAgY,GACI,IAAIa,EAAoB,EAMxB,OALAtN,GAAYqL,QAASkC,IACblgB,KAAKuf,cAAcW,KACnBD,GAAqB,KAGtBjgB,KAAK0B,OAAOoe,OAASG,CAC/B,CAKD,WAAAE,CAAYC,GACJA,GACApgB,KAAK0B,OAAO2E,IAAI+Z,EAASzc,OAEhC,CAKD,YAAA0c,CAAaC,GACT,IACIA,EAAUtC,QAASoC,GAAapgB,KAAKmgB,YAAYC,GACpD,CACD,MAAOtf,GACH,MAAMoY,GAAsB3B,GAC/B,CACJ,CAKD,WAAA8H,CAAYjY,GACR,IAAKA,EACD,MAAM8R,GAAsB5B,IAEhCtX,KAAK0B,OAAOsH,OAAO5B,EAAMzD,OAC5B,CAKD,gBAAA2b,GACI3M,GAAYqL,QAASkC,IACjBlgB,KAAK0B,OAAOsH,OAAOkX,IAE1B,CAKD,cAAAK,CAAeC,GACX,IAAKA,EACD,MAAMtH,GAAsB1B,IAEhC,MAAMiJ,EAAc,IAAI/a,IAGxB,OAFA8a,EAAY9e,OAAOsc,QAAS5W,GAAUqZ,EAAYpa,IAAIe,EAAMwY,gBAC5D5f,KAAK0B,OAAOsc,QAAS5W,GAAUqZ,EAAYpa,IAAIe,EAAMwY,gBAC9Ca,CACV,CAKD,qBAAAC,CAAsBF,GAClB,IAAKA,EACD,MAAMtH,GAAsB1B,IAG3BgJ,EAAYpB,0BACboB,EAAYlB,mBAEhB,MAAMmB,EAAczgB,KAAKugB,eAAeC,GAClCG,EAAkBH,EAAYI,gBAC9BC,EAAiB7gB,KAAK4gB,gBAE5B,OADwBH,EAAYX,KACXe,EAAiBF,CAC7C,CAID,aAAAC,GACI,OAAO5gB,KAAK0B,OAAOoe,IACtB,CAID,OAAAC,GACI,MAAMe,EAAQ,GAEd,OADA9gB,KAAK0B,OAAOsc,QAAS+C,GAAQD,EAAMhd,KAAKid,IACjCD,CACV,CAID,WAAAE,GACI,GAAIhhB,KAAK0B,OAAQ,CAEb,OADiB1B,KAAK+f,UACNrgB,KAAK,IACxB,CACD,OAAO0Q,GAAUyB,YACpB,CAID,oBAAA4N,GACI,OAAOzf,KAAKghB,cAAcpB,aAC7B;6CC3LL,SAASqB,GAA0BC,EAAU5U,GACzC,QAAU4U,KACJ5U,GACF4U,IAAa5U,EAAc9I,MAAM,KAAK,EAC9C,CASA,SAAS2d,GAAmB7U,EAAeI,EAAgBwU,EAAUE,GACjE,GAAIA,EAAe,CACf,MAAMC,IAAEA,EAAGC,IAAEA,EAAGC,IAAEA,EAAGthB,KAAEA,EAAIuhB,IAAEA,EAAGC,IAAEA,EAAGC,mBAAEA,EAAkBC,IAAEA,EAAGC,WAAEA,GAAgBR,EAO1EF,EAAWK,GAAOC,GAAOC,GAAO,GACtC,MAAO,CACHP,SAAUA,EACVxU,eAAgB2U,GAAOC,GAAO,GAC9BrhB,KAAMA,EACN0M,SAAU+U,GAAsBC,GAAO,GACvCE,UAAWD,EACXE,aAAcb,GAA0BC,EAAU5U,GAEzD,CAEG,MAAO,CACH4U,WACAxU,iBACAC,SAAU,GACVmV,aAAcb,GAA0BC,EAAU5U,GAG9D,CAOA,SAASyV,GAA+BC,EAAiB3U,EAAe+T,EAAea,GACnF,IAAIC,EAAqBF,EAEzB,GAAI3U,EAAe,CAEf,MAAMyU,aAAEA,KAAiBK,GAA0B9U,EACnD6U,EAAqB,IAAKF,KAAoBG,EACjD,CAED,GAAIf,EAAe,CAGf,MAAMU,aAAEA,KAAiBM,GAA+BjB,GAAmBa,EAAgB1V,cAAe0V,EAAgBtV,eAAgBsV,EAAgBd,SAAUE,GAOpK,OANAc,EAAqB,IACdA,KACAE,EACHhB,cAAeA,EACfiB,QAASJ,GAENC,CACV,CACD,OAAOA,CACX;6CCnEA,SAASI,GAAmBC,EAAclJ,GACtC,MAAMmJ,EAgBV,SAAuBC,GACnB,IAAKA,EACD,MAAMvJ,GAAsB3C,IAEhC,MACMmM,EADkB,uCACQC,KAAKF,GACrC,IAAKC,GAAWA,EAAQne,OAAS,EAC7B,MAAM2U,GAAsB5C,IAShC,OAAOoM,EAAQ,EACnB,CAjCuBE,CAAcL,GAEjC,IAEI,MAAMM,EAAgBxJ,EAAamJ,GACnC,OAAO5hB,KAAKC,MAAMgiB,EACrB,CACD,MAAO3X,GACH,MAAMgO,GAAsB5C,GAC/B,CACL,CA2BA,SAASwM,GAAYC,EAAUC,GAO3B,GAAe,IAAXA,GAAgBtI,KAAKuI,MADF,IAC2BF,EAAWC,EACzD,MAAM9J,GAAsBjC,GAEpC;6CCbA,SAASiM,GAAwBC,GAE7B,IAAKA,GAAkBA,EAAexe,QAAQ,KAAO,EACjD,OAAO,KAEX,IAEI,MAAMye,EApBd,SAAiCD,GAC7B,OAAIA,EAAetf,WAAW,MACnBsf,EAAeE,UAAU,GAE3BF,EAAetf,WAAW,MAC/Bsf,EAAetf,WAAW,KACnBsf,EAAeE,UAAU,GAE7BF,CACX,CAWmCG,CAAwBH,GAE7CI,EAAmB/gB,OAAOghB,YAAY,IAAIC,gBAAgBL,IAEhE,GAAIG,EAAiBrN,MACjBqN,EAAiBG,SACjBH,EAAiBhjB,OACjBgjB,EAAiB9iB,mBACjB8iB,EAAiBta,MACjB,OAAOsa,CAEd,CACD,MAAOziB,GACH,MAAMoY,GAAsBvC,GAC/B,CACD,OAAO,IACX,CAIA,SAASgN,GAAiBC,EAAYC,GAAoB,EAAMC,GAC5D,MAAMC,EAAsB,IAAI1c,MAWhC,OAVAuc,EAAW5F,QAAQ,CAACtV,EAAOD,MAClBob,GACDC,GACArb,KAAOqb,EACPC,EAAoBjgB,KAAK,GAAG2E,KAAOC,KAGnCqb,EAAoBjgB,KAAK,GAAG2E,KAAOub,mBAAmBtb,QAGvDqb,EAAoBrkB,KAAK,IACpC;6CC1EA,MAAMukB,GACF,aAAIC,GACA,OAAOlkB,KAAKmkB,UACf,CACD,WAAAtkB,CAAYukB,GAER,GADApkB,KAAKmkB,WAAaC,GACbpkB,KAAKmkB,WAEN,MAAMjH,GAA+BrB,IAEpCuI,EAAI7e,SAAS,OACdvF,KAAKmkB,WAAaF,GAAUI,gBAAgBD,GAEnD,CAKD,sBAAOC,CAAgBD,GACnB,GAAIA,EAAK,CACL,IAAIE,EAAeF,EAAIxE,cAUvB,OATIzC,GAAYjZ,SAASogB,EAAc,KACnCA,EAAeA,EAAaC,MAAM,GAAI,GAEjCpH,GAAYjZ,SAASogB,EAAc,QACxCA,EAAeA,EAAaC,MAAM,GAAI,IAErCpH,GAAYjZ,SAASogB,EAAc,OACpCA,GAAgB,KAEbA,CACV,CACD,OAAOF,CACV,CAID,aAAAI,GAEI,IAAIC,EACJ,IACIA,EAAazkB,KAAK0kB,kBACrB,CACD,MAAO5jB,GACH,MAAMoc,GAA+BtB,GACxC,CAED,IAAK6I,EAAWE,kBAAoBF,EAAWG,aAC3C,MAAM1H,GAA+BtB,IAGzC,IAAK6I,EAAWI,UAC0B,WAAtCJ,EAAWI,SAASjF,cACpB,MAAM1C,GAA+BvB,GAE5C,CAMD,wBAAOmJ,CAAkBV,EAAKW,GAC1B,OAAKA,EAGEX,EAAIzf,QAAQ,KAAO,EACpB,GAAGyf,KAAOW,IACV,GAAGX,KAAOW,IAJLX,CAKd,CAKD,wBAAOY,CAAkBZ,GACrB,OAAOH,GAAUI,gBAAgBD,EAAI5gB,MAAM,KAAK,GACnD,CAMD,iBAAAyhB,CAAkB/D,GACd,MAAMgE,EAAYllB,KAAK0kB,mBACjBS,EAAYD,EAAUN,aAO5B,OANI1D,GACqB,IAArBiE,EAAU5gB,QACT4gB,EAAU,KAAOtS,GAAsBC,QACpCqS,EAAU,KAAOtS,GAAsBE,gBAC3CoS,EAAU,GAAKjE,GAEZ+C,GAAUmB,gCAAgCF,EACpD,CAKD,gBAAAR,GAEI,MAAMW,EAAQthB,OAAO,8DAEfuhB,EAAQtlB,KAAKkkB,UAAUoB,MAAMD,GACnC,IAAKC,EACD,MAAMpI,GAA+BtB,IAGzC,MAAM2J,EAAgB,CAClBV,SAAUS,EAAM,GAChBX,gBAAiBW,EAAM,GACvBE,aAAcF,EAAM,GACpBG,YAAaH,EAAM,IAEvB,IAAII,EAAeH,EAAcC,aAAahiB,MAAM,KAOpD,OANAkiB,EAAeA,EAAapH,OAAQyC,GAAQA,GAAOA,EAAIxc,OAAS,GAChEghB,EAAcX,aAAec,EACzBH,EAAcE,aACdF,EAAcE,YAAYvhB,SAAS,OACnCqhB,EAAcE,YAAcF,EAAcE,YAAYpC,UAAU,EAAGkC,EAAcE,YAAYlhB,OAAS,IAEnGghB,CACV,CACD,uBAAOI,CAAiBvB,GACpB,MAAMiB,EAAQthB,OAAO,4BACfuhB,EAAQlB,EAAIkB,MAAMD,GACxB,IAAKC,EACD,MAAMpI,GAA+BtB,IAEzC,OAAO0J,EAAM,EAChB,CACD,qBAAOM,CAAeC,EAAaC,GAC/B,GAAID,EAAY,KAAOzV,GAAU4B,cAAe,CAC5C,MACM+T,EADM,IAAI9B,GAAU6B,GACCpB,mBAC3B,OAAQqB,EAAelB,SACnB,KACAkB,EAAepB,gBACfkB,CACP,CACD,OAAOA,CACV,CACD,sCAAOT,CAAgCF,GACnC,OAAO,IAAIjB,GAAUiB,EAAUL,SAC3B,KACAK,EAAUP,gBACV,IACAO,EAAUN,aAAallB,KAAK,KACnC,CAKD,kCAAOsmB,CAA4BC,GAC/B,QAAS/C,GAAwB+C,EACpC;6CC9JL,MAiEMC,GAhEgB,CACd,4BAA6B,CACzBC,eAAgB,iEAChBC,SAAU,mEACVC,OAAQ,oDACRC,uBAAwB,qEACxBC,qBAAsB,mEAE1B,yBAA0B,CACtBJ,eAAgB,8DAChBC,SAAU,gEACVC,OAAQ,2DACRC,uBAAwB,kEACxBC,qBAAsB,gEAE1B,2BAA4B,CACxBJ,eAAgB,gEAChBC,SAAU,kEACVC,OAAQ,mDACRC,uBAAwB,oEACxBC,qBAAsB,mEA6C5BC,GA1CyB,CACvBC,SAAU,CACN,CACIC,kBAAmB,4BACnBC,gBAAiB,oBACjBC,QAAS,CACL,4BACA,oBACA,sBACA,oBAGR,CACIF,kBAAmB,mCACnBC,gBAAiB,mCACjBC,QAAS,CACL,mCACA,2BAGR,CACIF,kBAAmB,2BACnBC,gBAAiB,2BACjBC,QAAS,CAAC,6BAEd,CACIF,kBAAmB,2BACnBC,gBAAiB,2BACjBC,QAAS,CACL,2BACA,4BAGR,CACIF,kBAAmB,+BACnBC,gBAAiB,+BACjBC,QAAS,CAAC,mCAOpBC,GAAmC,IAAInhB,IA8B7C,SAASohB,GAAuBC,EAAeC,EAAwBC,EAAQhhB,GAE3E,GADAA,GAAQkV,MAAM,8CAA8C8L,KACxDF,GAAiBC,EAAwB,CACzC,MAAMP,EAAWS,GAA6CF,EAAwBD,GACtF,GAAIN,EAEA,OADAxgB,GAAQkV,MAAM,6DAA6D8L,wBACpER,EAASG,QAGhB3gB,GAAQkV,MAAM,oEAAoE8L,IAEzF,CACD,OAAO,IACX,CAaA,SAASC,GAA6CjB,EAAUc,GAC5D,IAAK,IAAIpb,EAAI,EAAGA,EAAIsa,EAAS1hB,OAAQoH,IAAK,CACtC,MAAM8a,EAAWR,EAASta,GAC1B,GAAI8a,EAASG,QAAQrhB,SAASwhB,GAC1B,OAAON,CAEd,CACD,OAAO,IACX;6CA/DAD,GAA0BC,SAASzI,QAASmJ,IACxCA,EAAcP,QAAQ5I,QAASoJ,IAC3BP,GAAiCxgB,IAAI+gB,OCzE7C,MAAMC,GAAqB,uBACrBC,GAAoB,sBCIpBC,GAAqB,CACvBF,CAACA,IAAqB,mCACtBC,CAACA,IAAoB,uDAKzB,MAAME,WAAmB9R,GACrB,WAAA7V,CAAY8V,EAAW1U,GACnB,MAAMnB,EAAUmB,IACXsmB,GAAmB5R,GACd4R,GAAmB5R,GACnB4R,GAAmBD,KAC7BvnB,MAAM,GAAG4V,MAAc7V,KACvB0C,OAAOqT,eAAe7V,KAAMwnB,GAAW1R,WACvC9V,KAAKC,KAAO,aACZD,KAAK2V,UAAYA,EACjB3V,KAAKiB,aAAenB,CACvB;;ACRL,MAAM2nB,GACF,WAAA5nB,CAAYgO,EAAU6Z,EAAYzhB,EAAQ0hB,EAAmBC,GACzD5nB,KAAK6N,SAAWA,EAChB7N,KAAK0nB,WAAaA,EAClB1nB,KAAK6nB,aAAe5hB,EAAOsU,MAAMta,GAAMsb,IACvCvb,KAAK4nB,uBAAyBA,EAC9B5nB,KAAK2nB,kBAAoBA,CAC5B,CAMD,cAAAG,CAAeC,EAAe7mB,GAC1B,OAAOlB,KAAKgoB,oBAAoBhoB,KAAKioB,sBAAsBF,EAAe7mB,GAAgBA,EAAe6mB,EAC5G,CAID,wBAAAG,CAAyBH,EAAe7mB,GACpC,GAA0C,IAAtCsB,OAAO2J,KAAK4b,GAAexjB,QAC3B/B,OAAO2lB,OAAOJ,GAAe/H,MAAOtX,IAAWA,GAE/C,OADA1I,KAAK6nB,aAAa5iB,QAAQ,gFACnB,KAEX,MAAMmjB,EAAcpoB,KAAK8nB,eAAeC,EAAe7mB,GACvD,GAAIknB,EAAY7jB,OAAS,EAAG,CAKxB,OAHuB6jB,EAAYC,KAAMC,GAC9BA,EAAQlH,eAAiB,EAAI,GAElB,EACzB,CACI,OAA2B,IAAvBgH,EAAY7jB,OAEV6jB,EAAY,GAGZ,IAEd,CAMD,kBAAAG,CAAmBR,EAAe7mB,GAC9B,MAAMsnB,EAAkBxoB,KAAKioB,sBAAsBF,EAAe7mB,GAClE,OAAIsnB,EAAgBjkB,OAAS,EAClBikB,EAAgB,GAAGC,iBAGnB,IAEd,CAQD,mBAAAT,CAAoBU,EAAgBxnB,EAAe6mB,GAC/C,OAAOW,EAAeC,QAASvc,GACpBpM,KAAK4oB,mCAAmCxc,EAAelL,EAAe6mB,GAAe7G,SAAU6G,GAE7G,CACD,8BAAAc,CAA+BC,EAAaC,EAAW1b,EAAenM,EAAe8nB,GACjF,IACI5H,EADA6H,EAAsB,KAE1B,GAAID,IACKhpB,KAAKkpB,2BAA2B7b,EAAe2b,GAChD,OAAO,KAGf,MAAM3G,EAAUriB,KAAKmpB,WAAWL,EAAa5nB,EAAe6nB,EAAW1b,EAAc6T,UACrF,OAAImB,IACAjB,EAAgBkB,GAAmBD,EAAQvU,OAAQ9N,KAAK0nB,WAAWrO,eAC9DrZ,KAAKopB,sCAAsChI,EAAe4H,IAEpD,MAIfC,EAAsBlH,GAA+B+G,EAAazb,EAAe+T,EAAeiB,GAASvU,QAClGmb,EACV,CACD,kCAAAL,CAAmCxc,EAAelL,EAAemoB,EAAgBL,GAC7E,MAAMF,EAAc1c,EAAcqc,iBAClC,IAAIa,EAAuBR,EAAY1b,gBAAkB,IAAI5E,IAC7D,MAAMugB,EAAY/oB,KAAKupB,eAEvB,GAAIF,EAAgB,CAChB,MAAMhc,EAAgBic,EAAqBxgB,IAAIugB,GAC/C,IAAIhc,EAQA,MAAO,GANPic,EAAuB,IAAI9gB,IAAI,CAC3B,CAAC6gB,EAAgBhc,IAO5B,CACD,MAAMmc,EAAyB,GAO/B,OANAF,EAAqBtL,QAAS3Q,IAC1B,MAAM4b,EAAsBjpB,KAAK6oB,+BAA+BC,EAAaC,EAAW1b,EAAenM,EAAe8nB,GAClHC,GACAO,EAAuB1lB,KAAKmlB,KAG7BO,CACV,CACD,0BAAAN,CAA2B7b,EAAe2b,GACtC,QAAMA,EAAoBtc,iBACrB1M,KAAKypB,qCAAqCpc,EAAe2b,EAAoBtc,qBAG5Esc,EAAoB/oB,MACpBoN,EAAcpN,OAAS+oB,EAAoB/oB,aAGR4B,IAArCmnB,EAAoBlH,cAClBzU,EAAcyU,eAAiBkH,EAAoBlH,cAI5D,CACD,qCAAAsH,CAAsChI,EAAe4H,GAEjD,GAAIA,EAAqB,CACrB,GAAMA,EAAoBtc,iBACrB1M,KAAK0pB,mCAAmCtI,EAAe4H,EAAoBtc,gBAC5E,OAAO,EAEX,GAAMsc,EAAoBnH,YACrB7hB,KAAK2pB,8BAA8BvI,EAAe4H,EAAoBnH,WACvE,OAAO,EAEX,GAAMmH,EAAoBrc,WACrB3M,KAAK4pB,cAAcxI,EAAcM,mBAAoBsH,EAAoBrc,UAC1E,OAAO,EAEX,GAAMqc,EAAoB/oB,OACrBD,KAAK6pB,UAAUzI,EAAe4H,EAAoB/oB,MACnD,OAAO,EAEX,GAAM+oB,EAAoBc,MACrB9pB,KAAK+pB,SAAS3I,EAAe4H,EAAoBc,KAClD,OAAO,CAEd,CACD,OAAO,CACV,CAOD,qBAAME,CAAgBC,EAAa/oB,EAAegpB,GAC9C,IAAKD,EACD,MAAM/Q,GAAsBrB,IAEhC,IACUoS,EAAY3B,eACRtoB,KAAKmqB,WAAWF,EAAY3B,QAASpnB,GAEzC+oB,EAAY5H,UAAqC,IAA1B6H,GAAc7H,eACjCriB,KAAKoqB,qBAAqBH,EAAY5H,QAASnhB,GAEnD+oB,EAAYI,cACgB,IAA9BH,GAAcG,mBACRrqB,KAAKsqB,gBAAgBL,EAAYI,YAAanpB,GAElD+oB,EAAYM,eACiB,IAA/BL,GAAcK,oBACRvqB,KAAKwqB,0BAA0BP,EAAYM,aAAcrpB,GAE7D+oB,EAAYta,aACd3P,KAAKyqB,eAAeR,EAAYta,YAAazO,EAEpD,CACD,MAAOJ,GAEH,MADAd,KAAK6nB,cAActnB,MAAM,wCACrBO,aAAa4U,GACP5U,ED5KtB,SAA0BA,GACtB,OAAMA,aAAarB,MAGJ,uBAAXqB,EAAEb,MACS,+BAAXa,EAAEb,MACFa,EAAEhB,QAAQyF,SAAS,sBACZ,IAAIiiB,GAAWH,IAGf,IAAIG,GAAW1mB,EAAEb,KAAMa,EAAEhB,SARzB,IAAI0nB,GAAWF,GAU9B,CCmKsBoD,CAAiB5pB,EAE9B,CACJ,CAKD,qBAAMwpB,CAAgBK,EAAYzpB,GAC9B,MAAM0pB,EAAoB,CACtB/c,SAAU8c,EAAW9c,SACrBF,eAAgBgd,EAAWhd,eAC3BpB,YAAaoe,EAAWpe,YACxBD,cAAeqe,EAAWre,cAC1BE,MAAOme,EAAWne,MAClBuC,UAAW4b,EAAW5b,UACtBE,oBAAqB0b,EAAW1b,qBAE9B8Z,EAAY/oB,KAAKupB,eACjBsB,EAAgBlM,GAASI,WAAW4L,EAAWxc,QACrD4a,EAAUsB,YAAYrM,QAASvV,IAC3B,IAAKzI,KAAK8qB,4BAA4BriB,EAAKmiB,GAAmB,GAC1D,OAEJ,MAAMG,EAAc/qB,KAAKgrB,yBAAyBviB,EAAKvH,GACvD,GAAI6pB,GACA/qB,KAAKirB,wBAAwBF,EAAaH,GAAoB,CACxCjM,GAASI,WAAWgM,EAAY5c,QACpCuS,sBAAsBmK,IACpC7qB,KAAKkrB,kBAAkBziB,EAAKvH,EAEnC,UAEClB,KAAKmrB,yBAAyBR,EAAYzpB,EACnD,CAMD,qBAAA+mB,CAAsBF,EAAe7mB,GACjC,MAAMkqB,EAAiBprB,KAAKqrB,iBACtBC,EAAmB,GA6CzB,OA5CAF,EAAepN,QAASuN,IACpB,MAAMC,EAASxrB,KAAKyrB,WAAWF,EAAUrqB,GAEzC,IAAKsqB,EACD,OAEJ,GAAMzD,EAAczb,gBACftM,KAAK0rB,mBAAmBF,EAAQzD,EAAczb,eAC/C,OAEJ,GAAMyb,EAAcpb,WACf3M,KAAK4pB,cAAc4B,EAAO7e,SAAUob,EAAcpb,UACnD,OAEJ,GAAMob,EAAcxb,cACfvM,KAAK2rB,iBAAiBH,EAAQzD,EAAcxb,aAC7C,OAEJ,GAAMwb,EAAcvb,QACfxM,KAAK4rB,WAAWJ,EAAQzD,EAAcvb,OACvC,OAEJ,GAAMub,EAAc8D,kBACf7rB,KAAK8rB,qBAAqBN,EAAQzD,EAAc8D,iBACjD,OAEJ,GAAM9D,EAAclb,gBACf7M,KAAK+rB,mBAAmBP,EAAQzD,EAAclb,eAC/C,OAGJ,MAAMmc,EAAsB,CACxBtc,eAAgBqb,GAAerb,eAC/BzM,KAAM8nB,GAAe9nB,MAEnBupB,EAAyBgC,EAAOpe,gBAAgBkR,OAAQjR,GACnDrN,KAAKkpB,2BAA2B7b,EAAe2b,IAEtDQ,GAA4D,IAAlCA,EAAuBjlB,QAIrD+mB,EAAiBxnB,KAAK0nB,KAEnBF,CACV,CAOD,uBAAAL,CAAwBO,EAAQlN,GAC5B,GAAMA,EAAOzQ,WAAa7N,KAAKgsB,cAAcR,EAAQlN,EAAOzQ,UACxD,OAAO,EAEX,GAAMyQ,EAAOpP,oBACRlP,KAAKisB,uBAAuBT,EAAQlN,EAAOpP,mBAC5C,OAAO,EAMX,GAAoC,iBAAzBoP,EAAOhS,gBACbtM,KAAK0rB,mBAAmBF,EAAQlN,EAAOhS,eACxC,OAAO,EAEX,GAAMgS,EAAO/R,cACRvM,KAAK2rB,iBAAiBH,EAAQlN,EAAO/R,aACtC,OAAO,EAEX,GAAM+R,EAAO9R,QAAUxM,KAAK4rB,WAAWJ,EAAQlN,EAAO9R,OAClD,OAAO,EAEX,GAAM8R,EAAO3Q,iBACR3N,KAAKksB,oBAAoBV,EAAQlN,EAAO3Q,gBACzC,OAAO,EAEX,GAAM2Q,EAAO9O,WAAaxP,KAAKmsB,cAAcX,EAAQlN,EAAO9O,UACxD,OAAO,EAMX,GAAM8O,EAAOnQ,SAAWnO,KAAKosB,YAAYZ,EAAQlN,EAAOnQ,QACpD,OAAO,EAGX,IAAImQ,EAAOrP,qBAAuBuc,EAAOvc,sBAEjCuc,EAAOvc,sBAAwBqP,EAAOrP,oBACtC,OAAO,EAIf,GAAIuc,EAAO7d,iBACP8F,GAAeG,8BAA+B,CAC9C,GAAM0K,EAAOvP,YACR/O,KAAKqsB,eAAeb,EAAQlN,EAAOvP,WACpC,OAAO,EAGX,GAAIuP,EAAOvP,YAAc6F,GAAqBG,KACtCuJ,EAAOzP,QAAU7O,KAAKssB,WAAWd,EAAQlN,EAAOzP,OAChD,OAAO,CAGlB,CACD,OAAO,CACV,CAKD,wBAAA0d,CAAyBjO,GACrB,MAAMkO,EAAexsB,KAAKysB,UACpBC,EAAsB,CAAA,EAqB5B,OApBAF,EAAaxO,QAASuN,IAElB,IAAKvrB,KAAK2sB,cAAcpB,GACpB,OAGJ,MAAMC,EAASxrB,KAAK4sB,eAAerB,GAC9BC,IAGClN,EAAO/R,cACRvM,KAAK2rB,iBAAiBH,EAAQlN,EAAO/R,cAGpC+R,EAAOzQ,WACR7N,KAAKgsB,cAAcR,EAAQlN,EAAOzQ,YAGvC6e,EAAoBnB,GAAYC,MAE7BkB,CACV,CAKD,2BAAAG,CAA4BC,GACxB,MAAMN,EAAexsB,KAAK+sB,2BAC1B,IAAIC,EAAgB,KAiBpB,OAhBAR,EAAaxO,QAASuN,IAElB,IAAKvrB,KAAKitB,oBAAoB1B,KACW,IAArCA,EAAS5mB,QAAQ3E,KAAK6N,UACtB,OAGJ,MAAM2d,EAASxrB,KAAKktB,qBAAqB3B,GACpCC,IAGiC,IAAlCA,EAAO5E,QAAQjiB,QAAQmoB,KAG3BE,EAAgBxB,KAEbwB,CACV,CAID,iBAAAG,CAAkBjsB,GACGlB,KAAK8nB,eAAe,CAAE,EAAE5mB,GAChC8c,QAASsK,IACdtoB,KAAKotB,cAAc9E,EAASpnB,IAEnC,CAKD,aAAAksB,CAAc9E,EAASpnB,GACnBlB,KAAKqtB,qBAAqB/E,EAASpnB,GACflB,KAAKqrB,iBAKb/M,OAJO7V,GACPA,EAAIlD,SAAS+iB,EAAQhc,gBACzB7D,EAAIlD,SAAS+iB,EAAQ/b,cAECyR,QAASvV,IACnCzI,KAAKstB,WAAW7kB,EAAKvH,GACrBlB,KAAK2nB,kBAAkB4F,gBAAgB,CAAEC,gBAAiB,GAAKtsB,IAEtE,CAKD,oBAAAmsB,CAAqB/E,EAASpnB,GAC1B,MAAMusB,EAAeztB,KAAKupB,eACpBmE,EAAajlB,GACPA,EAAIlD,SAAS+iB,EAAQhc,gBACzB7D,EAAIlD,SAAS+iB,EAAQ/b,aAE7BkhB,EAAapL,QAAQ/D,OAAOoP,GAAW1P,QAASvV,IAC5CzI,KAAK2tB,cAAcllB,EAAKvH,KAE5BusB,EAAapD,YAAY/L,OAAOoP,GAAW1P,QAASvV,IAChDzI,KAAKkrB,kBAAkBziB,EAAKvH,KAEhCusB,EAAalD,aAAajM,OAAOoP,GAAW1P,QAASvV,IACjDzI,KAAK4tB,mBAAmBnlB,EAAKvH,IAEpC,CAMD,iBAAAgqB,CAAkBziB,EAAKvH,GACnB,MAAMypB,EAAa3qB,KAAKgrB,yBAAyBviB,EAAKvH,GAGtD,GAFAlB,KAAKstB,WAAW7kB,EAAKvH,GACrBlB,KAAK2nB,kBAAkB4F,gBAAgB,CAAEM,oBAAqB,GAAK3sB,IAC9DypB,GACDA,EAAWhd,eAAeiS,gBACtBnM,GAAeG,8BAA8BgM,eACjD+K,EAAW5b,YAAc6F,GAAqBE,IAE9C,OAGJ,MAAMgZ,EAAMnD,EAAW9b,MACnBif,GACK9tB,KAAK0nB,WAAWhO,sBAAsBoU,GAAKC,MAAM,KAClD/tB,KAAK6nB,aAAatnB,MAAM,sCAAsCutB,IAAO5sB,GACrElB,KAAK2nB,mBAAmB4F,gBAAgB,CAAES,6BAA8B,GAAK9sB,IAGxF,CAID,iBAAA+sB,CAAkB/sB,GAOd,OANqBlB,KAAKysB,UACbzO,QAASuN,IACdvrB,KAAK2sB,cAAcpB,IACnBvrB,KAAKstB,WAAW/B,EAAUrqB,MAG3B,CACV,CASD,UAAAioB,CAAWb,EAASpnB,EAAe6nB,EAAWmF,EAAavG,GACvD3nB,KAAK6nB,aAAa1M,MAAM,oCACxB,MAAMgT,EAAgB,CAClB7hB,cAAegc,EAAQhc,cACvBC,YAAa+b,EAAQ/b,YACrBoB,eAAgB8F,GAAeC,SAC/B7F,SAAU7N,KAAK6N,SACfrB,MAAO0hB,GAELE,EAAapuB,KAAKquB,oBAAoBF,EAAejtB,EAAe6nB,GACpEuF,EAAcF,EAAWtO,KAC/B,GAAIwO,EAAc,EAEd,OADAtuB,KAAK6nB,aAAa7iB,KAAK,4CAChB,KAEN,GAAIspB,EAAc,EAAG,CACtB,IAAIC,EAAoBH,EAExB,IAAKF,EAAa,CACd,MAAMM,EAAiB,IAAIhmB,IAC3B4lB,EAAWpQ,QAAQ,CAACqE,EAAS5Z,KACrB4Z,EAAQ7V,QAAU8b,EAAQpH,UAC1BsN,EAAe5lB,IAAIH,EAAK4Z,KAGhC,MAAMoM,EAAkBD,EAAe1O,KACvC,GAAI2O,EAAkB,EAElB,OADAzuB,KAAK6nB,aAAa7iB,KAAK,kIAChBopB,EAAWjG,SAASuG,OAAOhmB,MAEjC,GAAwB,IAApB+lB,EAEL,OADAzuB,KAAK6nB,aAAa7iB,KAAK,qGAChBwpB,EAAerG,SAASuG,OAAOhmB,MAItC6lB,EAAoBC,CAE3B,CASD,OAPAxuB,KAAK6nB,aAAa7iB,KAAK,8EACvBupB,EAAkBvQ,QAAQ,CAACqE,EAAS5Z,KAChCzI,KAAK2tB,cAAcllB,EAAKvH,KAExBymB,GAAqBzmB,GACrBymB,EAAkBgH,UAAU,CAAEC,eAAgBR,EAAWtO,MAAQ5e,GAE9D,IACV,CAED,OADAlB,KAAK6nB,aAAa7iB,KAAK,gDAChBopB,EAAWjG,SAASuG,OAAOhmB,KACrC,CAMD,mBAAA2lB,CAAoB/P,EAAQpd,EAAe6nB,GACvC,MAAM8F,EAAe9F,GAAaA,EAAU1G,SAAYriB,KAAKupB,eAAelH,QACtE7U,EAAW,IAAIhF,IAarB,OAZAqmB,EAAY7Q,QAASvV,IACjB,IAAKzI,KAAK8uB,wBAAwBrmB,EAAK,CACnCoF,SAAU7N,KAAK6N,YACZyQ,IAEH,OAEJ,MAAM+D,EAAUriB,KAAK+uB,qBAAqBtmB,EAAKvH,GAC3CmhB,GAAWriB,KAAKirB,wBAAwB5I,EAAS/D,IACjD9Q,EAAS5E,IAAIH,EAAK4Z,KAGnB7U,CACV,CAOD,uBAAAshB,CAAwBE,EAAU1Q,GAC9B,MAAM7V,EAAMumB,EAASpP,cACrB,QAAItB,EAAOzQ,WACyC,IAAhDpF,EAAI9D,QAAQ2Z,EAAOzQ,SAAS+R,mBAG5BtB,EAAOhS,gBAC8C,IAArD7D,EAAI9D,QAAQ2Z,EAAOhS,cAAcsT,eAIxC,CAKD,aAAA+N,CAAcllB,EAAKvH,GACflB,KAAKstB,WAAW7kB,EAAKvH,EACxB,CAKD,kBAAA0sB,CAAmBnlB,EAAKvH,GACpBlB,KAAKstB,WAAW7kB,EAAKvH,EACxB,CASD,cAAA+tB,CAAe3G,EAAS4G,EAASnG,EAAWmF,GACxC,MAAMhtB,EAAgBguB,EAAQhuB,cAC9BlB,KAAK6nB,aAAa1M,MAAM,uCAAwCja,GAChE,MAAMQ,EAASid,GAASM,mBAAmBiQ,EAAQxtB,QAC7CytB,EAAaD,EAAQE,sBAAwBxa,GAAqBC,OAKlElH,EAAiBwhB,GACnBA,EAAWvP,gBACPhL,GAAqBC,OAAO+K,cAC9BnM,GAAeG,8BACfH,GAAeE,aACfiX,EAAoB,CACtBte,cAAegc,EAAQhc,cACvBC,YAAa+b,EAAQ/b,YACrBoB,eAAgBA,EAChBE,SAAU7N,KAAK6N,SACfrB,MAAO0hB,GAAe5F,EAAQpH,SAC9B/S,OAAQzM,EACRqN,UAAWogB,EACXtgB,MAAOqgB,EAAQG,OACfpgB,oBAAqBigB,EAAQjgB,qBAE3BqgB,EAAmBvG,GAAaA,EAAUsB,aAC5CrqB,KAAKupB,eAAec,YAClBpc,EAAe,GACrBqhB,EAAgBtR,QAASvV,IAErB,GAAIzI,KAAK8qB,4BAA4BriB,EAAKmiB,GAAmB,GAAO,CAChE,MAAMP,EAAcrqB,KAAKgrB,yBAAyBviB,EAAKvH,GAEnDmpB,GACArqB,KAAKirB,wBAAwBZ,EAAaO,IAC1C3c,EAAanK,KAAKumB,EAEzB,IAEL,MAAMkF,EAAkBthB,EAAa1J,OACrC,OAAIgrB,EAAkB,GAClBvvB,KAAK6nB,aAAa7iB,KAAK,+CAAgD9D,GAChE,MAEFquB,EAAkB,GACvBvvB,KAAK6nB,aAAa7iB,KAAK,4EAA6E9D,GACpG+M,EAAa+P,QAASqM,IAClBrqB,KAAKkrB,kBAAkBlrB,KAAKwvB,sBAAsBnF,GAAcnpB,KAEpElB,KAAK2nB,kBAAkBgH,UAAU,CAAEc,eAAgBxhB,EAAa1J,QAAUrD,GACnE,OAEXlB,KAAK6nB,aAAa7iB,KAAK,uDAAwD9D,GACxE+M,EAAa,GACvB,CAQD,2BAAA6c,CAA4BkE,EAAU1Q,EAAQoR,GAC1C,MAAMjnB,EAAMumB,EAASpP,cACrB,GAAItB,EAAOzQ,WACyC,IAAhDpF,EAAI9D,QAAQ2Z,EAAOzQ,SAAS+R,eAC5B,OAAO,EAEX,GAAItB,EAAOhS,gBAC8C,IAArD7D,EAAI9D,QAAQ2Z,EAAOhS,cAAcsT,eACjC,OAAO,EAEX,GAAItB,EAAO9R,QAAsD,IAA7C/D,EAAI9D,QAAQ2Z,EAAO9R,MAAMoT,eACzC,OAAO,EAEX,GAAItB,EAAOrP,sBACoD,IAA3DxG,EAAI9D,QAAQ2Z,EAAOrP,oBAAoB2Q,eACvC,OAAO,EAEX,GAAItB,EAAOnQ,OAAQ,CACf,MAAMzM,EAAS4c,EAAOnQ,OAAO4R,UAC7B,IAAK,IAAIpU,EAAI,EAAGA,EAAIjK,EAAO6C,OAAQoH,IAAK,CACpC,GAAI+jB,IACCjnB,EAAIlD,SAAS7D,EAAOiK,GAAGiU,eAExB,OAAO,EAEN,IAAK8P,GACNjnB,EAAIlD,SAAS7D,EAAOiK,GAAGiU,eAEvB,OAAO,CAEd,CACJ,CACD,OAAO,CACV,CAMD,uBAAA+P,CAAwBrR,EAAQpd,GAC5B,MAAM6nB,EAAY/oB,KAAKupB,eACjBtb,EAAe,GAWrB,OAVA8a,EAAUsB,YAAYrM,QAASvV,IAC3B,IAAKzI,KAAK8qB,4BAA4BriB,EAAK6V,GAAQ,GAC/C,OAEJ,MAAM+L,EAAcrqB,KAAKgrB,yBAAyBviB,EAAKvH,GACnDmpB,GACArqB,KAAKirB,wBAAwBZ,EAAa/L,IAC1CrQ,EAAanK,KAAKumB,KAGnBpc,CACV,CASD,eAAA2hB,CAAgBtH,EAASuH,EAAU3uB,EAAe6nB,EAAWpB,GACzD3nB,KAAK6nB,aAAa1M,MAAM,yCACxB,MAAM2U,EAAKD,EAAW9b,QAAgBlS,EAChCkuB,EAAqB,CACvBzjB,cAAegc,EAAQhc,cACvBC,YAAa+b,EAAQ/b,YACrBoB,eAAgB8F,GAAeI,cAC/BhG,SAAU7N,KAAK6N,SACf2B,SAAUsgB,GAERE,EAAoBjH,GAAaA,EAAUwB,cAC7CvqB,KAAKupB,eAAegB,aAClBlb,EAAgB,GACtB2gB,EAAiBhS,QAASvV,IAEtB,GAAIzI,KAAKiwB,6BAA6BxnB,EAAKsnB,GAAqB,CAC5D,MAAMxF,EAAevqB,KAAKkwB,0BAA0BznB,EAAKvH,GAErDqpB,GACAvqB,KAAKirB,wBAAwBV,EAAcwF,IAC3C1gB,EAAcvL,KAAKymB,EAE1B,IAEL,MAAM4F,EAAmB9gB,EAAc9K,OACvC,OAAI4rB,EAAmB,GACnBnwB,KAAK6nB,aAAa7iB,KAAK,0DAChB,OAGPmrB,EAAmB,GAAKxI,GAAqBzmB,GAC7CymB,EAAkBgH,UAAU,CAAEyB,eAAgBD,GAAoBjvB,GAEtElB,KAAK6nB,aAAa7iB,KAAK,0DAChBqK,EAAc,GACxB,CAMD,4BAAA4gB,CAA6BjB,EAAU1Q,GACnC,MAAM7V,EAAMumB,EAASpP,cACrB,QAAItB,EAAO9O,WACyC,IAAhD/G,EAAI9D,QAAQ2Z,EAAO9O,SAASoQ,qBAI3BtB,EAAO9O,UACR8O,EAAOzQ,WACyC,IAAhDpF,EAAI9D,QAAQ2Z,EAAOzQ,SAAS+R,mBAG5BtB,EAAOhS,gBAC8C,IAArD7D,EAAI9D,QAAQ2Z,EAAOhS,cAAcsT,gBAIxC,CAID,wBAAAyQ,CAAyB9jB,GACrB,MAAM+jB,EAAoB,CACtB/jB,cACAsB,SAAU7N,KAAK6N,UAEb8B,EAAc3P,KAAKusB,yBAAyB+D,GAC5CC,EAAqB/tB,OAAO2J,KAAKwD,GAAalM,IAAKgF,GAAQkH,EAAYlH,IACvE+nB,EAAiBD,EAAmBhsB,OAC1C,GAAIisB,EAAiB,EACjB,OAAO,KAEN,GAAIA,EAAiB,EACtB,MAAMtX,GAAsB9B,IAEhC,OAAOmZ,EAAmB,EAC7B,CAMD,iBAAAE,CAAkBlkB,GACd,MAAMoD,EAAc3P,KAAKqwB,yBAAyB9jB,GAClD,SAAUoD,GAAeA,EAAYH,WAAauE,GACrD,CAMD,kBAAA2X,CAAmBF,EAAQlf,GACvB,QAA0C,iBAAzBkf,EAAOlf,eACpBA,IAAkBkf,EAAOlf,cAChC,CAOD,kCAAAod,CAAmCgH,EAAahkB,GAE5C,OAAOA,KADuBgkB,EAAYrP,KAAOqP,EAAYpP,IAEhE,CACD,oCAAAmI,CAAqCpc,EAAeX,GAChD,OAAOW,EAAcX,iBAAmBA,CAC3C,CAOD,SAAAmd,CAAU8G,EAAQ1wB,GACd,QAAUA,EAAK2f,gBAAkB+Q,EAAO1wB,MAAM2f,cACjD,CAOD,aAAAgK,CAAcgH,EAAgBC,GAC1B,SAAUD,GACoB,iBAAnBA,GACPC,GAAgBjR,gBAAkBgR,EAAehR,cACxD,CAMD,sBAAAqM,CAAuBT,EAAQtc,GAC3B,SAAUsc,EAAOtc,mBACbA,IAAsBsc,EAAOtc,kBACpC,CAMD,gBAAAyc,CAAiBH,EAAQjf,GAErB,GAAIvM,KAAK4nB,uBAAwB,CAC7B,MAAMkJ,EHtyBlB,SAAqClJ,EAAwB3hB,GACzD,IAAI6qB,EACJ,MAAMC,EAAqBnJ,EAAuBmJ,mBAClD,GAAIA,EAAoB,CACpB,MAAMhK,EAAgB,IAAI9C,GAAU8M,GAAoBrM,mBAAmBC,gBAC3EmM,EACIhK,GAAuBC,EAAea,EAAuBZ,wBAAwBP,SAAUxS,GAAgChO,IAC3H6gB,GAAuBC,EAAeP,GAA0BC,SAAUxS,GAA0ChO,IACpH2hB,EAAuBoJ,gBAClC,CACD,OAAOF,GAAiB,EAC5B,CG2xBkCG,CAA4BjxB,KAAK4nB,uBAAwB5nB,KAAK6nB,cACpF,GAAIiJ,EAAcvrB,SAASgH,IACvBukB,EAAcvrB,SAASimB,EAAOjf,aAC9B,OAAO,CAEd,CAED,MAAM2kB,EAAgBlxB,KAAK6sB,4BAA4BtgB,GACvD,SAAI2kB,GACAA,EAActK,QAAQjiB,QAAQ6mB,EAAOjf,cAAgB,EAI5D,CAMD,mBAAA2f,CAAoBV,EAAQ7d,GACxB,OAAQ6d,EAAO7d,gBACXA,EAAeiS,gBAAkB4L,EAAO7d,eAAeiS,aAC9D,CAMD,aAAAoM,CAAcR,EAAQ3d,GAClB,SAAU2d,EAAO3d,UAAYA,IAAa2d,EAAO3d,SACpD,CAMD,aAAAse,CAAcX,EAAQhc,GAClB,SAAUgc,EAAOhc,UAAYA,IAAagc,EAAOhc,SACpD,CAMD,UAAAoc,CAAWJ,EAAQhf,GACf,QAAUgf,EAAOhf,OAAOoT,gBAAkBpT,EAAMoT,cACnD,CAOD,oBAAAkM,CAAqBN,EAAQK,GACzB,SAAUL,EAAOK,iBAAmBA,IAAoBL,EAAOK,gBAClE,CAUD,6BAAAlC,CAA8B+G,EAAa7O,GACvC,OAAI6O,EAAY9O,aAAeC,IAG3B6O,EAAYhP,qBAAuBG,GAGnC6O,EAAY/O,MAAQE,EAI3B,CAOD,QAAAkI,CAAS3I,EAAe0I,GACpB,OAAO1I,EAAc0I,MAAQA,CAChC,CACD,kBAAAiC,CAAmBP,EAAQ3e,GACvB,SAAU2e,EAAO3e,eACbA,EAAc+S,gBAAkB4L,EAAO3e,cAAc+S,cAC5D,CAMD,WAAAwM,CAAYZ,EAAQrd,GAIhB,GAHmCqd,EAAO7d,iBAAmB8F,GAAeE,cACxE6X,EAAO7d,iBACH8F,GAAeG,gCACY4X,EAAOrd,OACtC,OAAO,EAGX,OADuBwQ,GAASI,WAAWyM,EAAOrd,QAC5B0R,iBAAiB1R,EAC1C,CAMD,cAAAke,CAAeb,EAAQzc,GACnB,SAAUyc,EAAOzc,WAAayc,EAAOzc,YAAcA,EACtD,CAMD,UAAAud,CAAWd,EAAQ3c,GACf,SAAU2c,EAAO3c,OAAS2c,EAAO3c,QAAUA,EAC9C,CAKD,aAAA8d,CAAclkB,GACV,OAAsC,IAA/BA,EAAI9D,QAAQmP,GACtB,CAKD,mBAAAmZ,CAAoBxkB,GAChB,OAAgE,IAAzDA,EAAI9D,QAAQqP,GACtB,CAID,iCAAAmd,CAAkCC,GAC9B,MAAO,GAAGpd,MAA0ChU,KAAK6N,YAAYujB,GACxE,CAMD,eAAOC,CAAS/T,EAAKgU,GACjB,IAAK,MAAMC,KAAgBD,EACvBhU,EAAIiU,GAAgBD,EAAKC,GAE7B,OAAOjU,CACV,EAGL,MAAMkU,WAA4B/J,GAC9B,gBAAM0C,GACF,MAAMjR,GAAsBJ,GAC/B,CACD,UAAA2S,GACI,MAAMvS,GAAsBJ,GAC/B,CACD,0BAAMsR,GACF,MAAMlR,GAAsBJ,GAC/B,CACD,oBAAAiW,GACI,MAAM7V,GAAsBJ,GAC/B,CACD,8BAAMqS,GACF,MAAMjS,GAAsBJ,GAC/B,CACD,wBAAAkS,GACI,MAAM9R,GAAsBJ,GAC/B,CACD,+BAAM0R,GACF,MAAMtR,GAAsBJ,GAC/B,CACD,yBAAAoX,GACI,MAAMhX,GAAsBJ,GAC/B,CACD,cAAA2R,GACI,MAAMvR,GAAsBJ,GAC/B,CACD,cAAA8T,GACI,MAAM1T,GAAsBJ,GAC/B,CACD,kBAAA2Y,GACI,MAAMvY,GAAsBJ,GAC/B,CACD,kBAAA4Y,GACI,MAAMxY,GAAsBJ,GAC/B,CACD,oBAAA6Y,GACI,MAAMzY,GAAsBJ,GAC/B,CACD,oBAAAoU,GACI,MAAMhU,GAAsBJ,GAC/B,CACD,wBAAAiU,GACI,MAAM7T,GAAsBJ,GAC/B,CACD,kBAAA8Y,GACI,MAAM1Y,GAAsBJ,GAC/B,CACD,kBAAA+Y,GACI,MAAM3Y,GAAsBJ,GAC/B,CACD,UAAAwU,GACI,MAAMpU,GAAsBJ,GAC/B,CACD,OAAA2T,GACI,MAAMvT,GAAsBJ,GAC/B,CACD,cAAAuS,GACI,MAAMnS,GAAsBJ,GAC/B,CACD,YAAAyQ,GACI,MAAMrQ,GAAsBJ,GAC/B,CACD,qBAAA0W,GACI,MAAMtW,GAAsBJ,GAC/B,CACD,kBAAAgZ,GACI,MAAM5Y,GAAsBJ,GAC/B;6CCplCL,MAAMiZ,GAIG,MAJHA,GASI,OCNJC,GA2FiC,oCA3FjCA,GA4F4C,+CA5F5CA,GA6FiD,oDA7FjDA,GA6GqC,wCA7GrCA,GAiH8B,iCAjH9BA,GAqHoD,uDArHpDA,GAyH4C,+CAzH5CA,GA6HwC,2CA7HxCA,GAmIkC,qCAnIlCA,GAoI6C,gDApI7CA,GAkL4B,+BAlL5BA,GAsLsB,yBAtLtBA,GAuL6B,gCAvL7BA,GAwLgC,mCAxLhCA,GA4LmB,sBA5LnBA,GA6LmB,sBA7LnBA,GAiMyB,4BAjMzBA,GAsMwC,2CAtMxCA,GAuM8B,iCAvM9BA,GAyM6C,gDAzM7CA,GA0MqC,wCA1MrCA,GA2MuC,0CA3MvCA,GA4M+B,kCA5M/BA,GA6M8C,iDA7M9CA,GAiN2B,8BAjN3BA,GAkNgC,mCAlNhCA,GAmNgC,mCAnNhCA,GAkO2B,8BA8P3BC,GAEU;;;ACtehB,MAAMC,GACF,gBAAAC,GAEC,CACD,cAAAC,GAEC,CACD,gBAAAC,GACI,OAAO,IACV,EAEL,MAAMC,GACF,UAAAC,GACI,MAAO,aACV,CACD,gBAAAJ,CAAiBK,EAAatxB,GAC1B,MAAO,CACHwI,IAAK,IAAM,KACX+oB,QAAS,OACTpsB,IAAK,OACLqsB,UAAW,OACXC,MAAO,CACHC,QAAS5yB,KAAKuyB,aACdtnB,OAAQgnB,GACRb,UAAW,GACXyB,YAAa,GACbC,eAAgB,GAChBjlB,SAAU,GACV5N,KAAMuyB,EACNO,YAAarY,KAAKuI,MAClB/hB,cAAeA,GAAiB,IAEpC8xB,YAAa,IAAId,GAExB,CACD,2BAAAe,GACI,OAAO,IAAIf,EACd,CACD,mBAAAgB,GACI,OAAO,CACV,CACD,mBAAAC,GAEC,CACD,eAAAC,GAEC,CACD,cAAAhB,GACI,OAAO,IACV,CACD,mBAAAiB,GAEC,CACD,yBAAAC,GACI,OAAO,CACV,CACD,sBAAAC,GACI,MAAO,EACV,CACD,UAAAC,GAEC,CACD,SAAA7E,GAEC,CACD,eAAApB,GAEC,CACD,yBAAAkG,GAEC;6CC7DL,MAAMC,GAAyB,CAC3BC,0BxB0SqC,IwBzSrCC,sBAAsB,GAEpBC,GAAgC,CAClCxZ,eAAgB,OAGhBC,mBAAmB,EACnBzU,SAAUiU,GAASG,KACnB/Y,cAAekP,GAAUyB,cAEvBiiB,GAAwB,CAC1BC,2BAA2B,GAEzBC,GAAiC,CACnC,yBAAMC,GACF,MAAM/a,GAAsBJ,GAC/B,EACD,0BAAMob,GACF,MAAMhb,GAAsBJ,GAC/B,GAECqb,GAAuB,CACzBC,IAAKhkB,GAAUE,IACfiL,QAASA,GACT8Y,IAAKjkB,GAAUyB,aACfyiB,GAAIlkB,GAAUyB,cAEZ0iB,GAA6B,CAC/BC,aAAcpkB,GAAUyB,aACxB4iB,qBAAiB5yB,GAEf6yB,GAA8B,CAChCC,mBAAoBnZ,GACpBoZ,OAAQ,GAAGxkB,GAAUK,yBAEnBokB,GAA4B,CAC9BC,YAAa,CACTC,QAAS,GACTC,WAAY,KAkDpB,SAASC,GAAmBj2B,GACxB,OAAQA,EAAOk2B,YAAY9D,UAAUryB,QAAQo2B,eAAiBpD,EAClE;6CCvGA,MAAMqD,GACe,kBADfA,GAEG;6CCOT,SAASC,GAAgBC,EAAejc,GACpC,IAAKic,EACD,MAAMpc,GAAsB7C,IAEhC,IACI,MAAMkf,EAAoBlc,EAAaic,GACvC,OAAO10B,KAAKC,MAAM00B,EACrB,CACD,MAAOz0B,GACH,MAAMoY,GAAsB9C,GAC/B,CACL,CAKA,SAASof,GAAiClpB,GACtC,IAAKA,EACD,MAAM4M,GAAsB9C,IAEhC,MAAMqf,EAAkBnpB,EAAc9I,MAAMgQ,GAAkC,GAC9E,MAAO,CACHkiB,IAAKD,EAAgB,GACrBE,KAAMF,EAAgBlxB,OAAS,EACzB6L,GAAUyB,aACV4jB,EAAgB,GAE9B;6CCpCA,MAAMG,GAAY,YACZC,GAAe,eAsCfC,GAAa,aACbC,GAAU,UAMVC,GAAkB,kBAMlBC,GAAqB,oBACrBC,GAAmB,gBACnBC,GAAsB,mBACtBC,GAAiB;;ACjDvB,SAASC,GAAuBzS,EAAY1iB,EAAeymB,GACvD,IAAKzmB,EACD,OAEJ,MAAM2M,EAAW+V,EAAW9a,IAAI8sB,IAC5B/nB,GAAY+V,EAAWjE,IAAIuW,KAC3BvO,GAAmBgH,UAAU,CACzB2H,iBAAkBzoB,EAClB0oB,oBAAqB3S,EAAW9a,IAAI+sB,KACrC30B,EAEX,CAMA,SAASs1B,GAAgB5S,EAAY6S,GACjC7S,EAAWhb,IDtBO,gBCsBY6tB,EAClC,CAmBA,SAASC,GAAU9S,EAAYliB,EAAQi1B,GAAgB,EAAMC,EAAgBlkB,KAErEikB,GACCC,EAAcrxB,SAAS,WACvB7D,EAAO6D,SAAS,WACjBqxB,EAAc9yB,KAAK,UAEvB,MAAM+yB,EAAgBF,EAChB,IAAKj1B,GAAU,MAAQk1B,GACvBl1B,GAAU,GACVyd,EAAW,IAAIR,GAASkY,GAC9BjT,EAAWhb,IDjDD,QCiDYuW,EAAS6B,cACnC,CAKA,SAAS8V,GAAYlT,EAAY/V,GAC7B+V,EAAWhb,IAAIgtB,GAAW/nB,EAC9B,CAKA,SAASkpB,GAAenT,EAAYoT,GAChCpT,EAAWhb,IAAIitB,GAAcmB,EACjC,CA0BA,SAASC,GAAarT,EAAY/B,GAC9B+B,EAAWhb,ID/CI,aC+CYiZ,EAC/B,CAKA,SAASqV,GAAUtT,EAAY/B,GAC3B+B,EAAWhb,IAAIgK,GAAwB,OAAOiP,IAClD,CAKA,SAASsV,GAAUvT,EAAY7W,GAC3B6W,EAAWhb,IAAIgK,GAAwB,OAAO7F,EAAW2oB,OAAO3oB,EAAW4oB,OAC/E,CAKA,SAASyB,GAAOxT,EAAYkG,GACxBlG,EAAWhb,IDrEH,MCqEYkhB,EACxB,CAKA,SAASuN,GAAUzT,EAAY+M,EAAQ2G,GACnC,MAAMC,EAkLV,SAAuC5G,EAAQ2G,GAC3C,IAAIC,EAEJ,GAAK5G,EAID,IACI4G,EAAe32B,KAAKC,MAAM8vB,EAC7B,CACD,MAAO7vB,GACH,MAAMoc,GAA+BnB,GACxC,MARDwb,EAAe,CAAA,EAUfD,GAAsBA,EAAmB/yB,OAAS,IAC7CgzB,EAAaC,eAAevkB,MAE7BskB,EAAatkB,IAAkC,IAGnDskB,EAAatkB,IAAgCA,IACzC,CACIkV,OAAQmP,IAGpB,OAAO12B,KAAKmL,UAAUwrB,EAC1B,CA5MyBE,CAA8B9G,EAAQ2G,GAC3D,IACI12B,KAAKC,MAAM02B,EACd,CACD,MAAOz2B,GACH,MAAMoc,GAA+BnB,GACxC,CACD6H,EAAWhb,ID/HA,SC+HY2uB,EAC3B,CAKA,SAASG,GAAiB9T,EAAY1iB,GAClC0iB,EAAWhb,IDpHW,oBCoHY1H,EACtC,CAKA,SAASy2B,GAAe/T,EAAYgU,GAEhChU,EAAWhb,ID3HM,eC2HYgvB,EAAYxD,KACzCxQ,EAAWhb,ID3HM,eC2HYgvB,EAAYrc,SACrCqc,EAAYtD,IACZ1Q,EAAWhb,ID5HC,cC4HgBgvB,EAAYtD,IAExCsD,EAAYvD,KACZzQ,EAAWhb,ID9HE,eC8HgBgvB,EAAYvD,IAEjD,CAKA,SAASwD,GAAwBjU,EAAYkU,GACrCA,GAAc/C,SACdnR,EAAWhb,IDnIA,aCmIgBkvB,EAAa/C,SAExC+C,GAAc9C,YACdpR,EAAWhb,IDrID,YCqIgBkvB,EAAa9C,WAE/C,CAYA,SAAS+C,GAASnU,EAAY3a,GACtBA,GACA2a,EAAWhb,IDvKL,QCuKgBK,EAE9B,CAuDA,SAAS+uB,GAAgBpU,EAAY4Q,GACjC5Q,EAAWhb,ID3MO,gBC2MY4rB,EAClC,CAKA,SAASyD,GAAmBrU,EAAY6Q,GAChCA,GACA7Q,EAAWhb,IDlNM,mBCkNgB6rB,EAEzC,CAKA,SAASyD,GAAuBtU,EAAYuU,GACpCA,GACAvU,EAAWhb,ID1NW,wBC0NgBuvB,EAE9C,CAmBA,SAASC,GAAaxU,EAAYyU,GAC9BzU,EAAWhb,IDlRI,aCkRYyvB,EAC/B,CAKA,SAASC,GAAc1U,GACnBA,EAAWhb,I5BrEK,c4BqEY,IAChC,CACA,SAAS2vB,GAAiB3U,GACjBA,EAAWjE,IAAIyW,KAChBxS,EAAWhb,IAAIwtB,GAAgB,OAEvC,CAKA,SAASoC,GAAwB5U,EAAY6U,GACzCj2B,OAAOk2B,QAAQD,GAAUza,QAAQ,EAAEvV,EAAKC,OAC/Bkb,EAAWjE,IAAIlX,IAAQC,GACxBkb,EAAWhb,IAAIH,EAAKC,IAGhC,CA8CA,SAASiwB,GAAY/U,EAAYgV,GACzBA,IACAhV,EAAWhb,IAAIktB,GAAYlhB,GAAqBE,KAChD8O,EAAWhb,IAAImtB,GAAS6C,GAEhC,CAIA,SAASC,GAAUjV,EAAYkV,GACvBA,IACAlV,EAAWhb,IAAIktB,GAAYlhB,GAAqBG,KAChD6O,EAAWhb,IAAImtB,GAAS+C,GAEhC,CAKA,SAASC,GAAmBnV,EAAYoV,GACpCpV,EAAWhb,IDpVa,6BCoVYowB,EAAuBC,qCAC3DrV,EAAWhb,IDpVa,0BCoVYowB,EAAuBE,iCAC/D,CAIA,SAASC,GAAcvV,GACnBA,EAAWhb,IDzVa,sBCyVYoM,GACxC,CAOA,SAASokB,GAAoBxV,EAAYyV,EAAgBC,GAChD1V,EAAWjE,IAAIuW,KAChBtS,EAAWhb,IAAIstB,GAAkBmD,GAEhCzV,EAAWjE,IAAIwW,KAChBvS,EAAWhb,IAAIutB,GAAqBmD,EAE5C;6CCnYA,MAAMC,GACO,EADPA,GAEI,EAFJA,GAGI,EAHJA,GAII;;;ACKV,MA6CMC,GAAc,CAACrvB,EAAUsvB,EAAWxzB,EAAQyzB,EAAiBx4B,IACxD,IAAI6B,KACPkD,EAAOkV,MAAM,sBAAsBse,KACnC,MAAME,EAAkBD,GAAiBvH,iBAAiBsH,EAAWv4B,GACrE,GAAIA,EAAe,CAEf,MAAM04B,EAAaH,EAAY,YAC/BC,GAAiBnM,gBAAgB,CAAEqM,CAACA,GAAa,GAAK14B,EACzD,CAED,OADAw4B,GAAiBtG,gBAAgBqG,EAAWv4B,GACrCiJ,KAAYpH,GACd82B,KAAM5T,IACPhgB,EAAOkV,MAAM,yBAAyBse,KACtCE,GAAiBjwB,IAAI,CACjBowB,SAAS,IAEN7T,IAEN8H,MAAOjtB,IACRmF,EAAOkV,MAAM,qBAAqBse,KAClC,IACIxzB,EAAOkV,MAAMva,KAAKmL,UAAUjL,GAC/B,CACD,MAAOA,GACHmF,EAAOkV,MAAM,iCAChB,CAID,MAHAwe,GAAiBjwB,IAAI,CACjBowB,SAAS,GACVh5B,GACGA;;AClFlB,MAAMi5B,GACF,WAAAl6B,CAAYm6B,EAAkB/zB,EAAQ0hB,EAAmBzmB,GACrDlB,KAAKg6B,iBAAmBA,EACxBh6B,KAAKiG,OAASA,EACdjG,KAAK2nB,kBAAoBA,EACzB3nB,KAAKkB,cAAgBA,CACxB,CAMD,kBAAM+4B,CAAaC,EAAmBC,GAClCn6B,KAAK2nB,mBAAmBwL,oBAAoBnB,GAA+ChyB,KAAKkB,eAEhG,IAAIk5B,EAAyBF,EAE7B,GAAKE,EAiCDD,EAAwBE,cACpBllB,OAlCqB,CACzB,MAAMpW,EAAUg7B,GAAgBO,aAChC,IACI,MAAMC,QAAiCf,GAAYx5B,KAAKw6B,kBAAkBC,KAAKz6B,MAAOgyB,GAAoDhyB,KAAKiG,OAAQjG,KAAK2nB,kBAAmB3nB,KAAKkB,cAA7Is4B,CAA4JppB,GAAU8B,aAAcnT,GAO3N,GANIw7B,EAAyBtvB,SAAWwH,KACpC2nB,EAAyBG,EAAyBG,KAClDP,EAAwBE,cACpBllB,IAGJolB,EAAyBtvB,SAAWwH,GAAwB,CAC5D,MAAMkoB,QAA2BnB,GAAYx5B,KAAK46B,kBAAkBH,KAAKz6B,MAAOgyB,GAAoDhyB,KAAKiG,OAAQjG,KAAK2nB,kBAAmB3nB,KAAKkB,cAA7Is4B,CAA4Jz6B,GAC7L,IAAK47B,EAGD,OAFAR,EAAwBE,cACpBllB,GACG,KAEX,MAAM0lB,QAAmCrB,GAAYx5B,KAAKw6B,kBAAkBC,KAAKz6B,MAAOgyB,GAAoDhyB,KAAKiG,OAAQjG,KAAK2nB,kBAAmB3nB,KAAKkB,cAA7Is4B,CAA4JmB,EAAoB57B,GACrN87B,EAA2B5vB,SAAWwH,KACtC2nB,EACIS,EAA2BH,KAC/BP,EAAwBE,cACpBllB,GAEX,CACJ,CACD,MAAOrU,GAGH,OAFAq5B,EAAwBE,cACpBllB,GACG,IACV,CACJ,CAUD,OAJKilB,IACDD,EAAwBE,cACpBllB,IAEDilB,GAA0B,IACpC,CAOD,uBAAMI,CAAkBjf,EAASxc,GAE7B,OADAiB,KAAK2nB,mBAAmBwL,oBAAoBnB,GAAoDhyB,KAAKkB,eAC9FlB,KAAKg6B,iBAAiB/F,oBAAoB,GAAG7jB,GAAU6B,6BAA6BsJ,gBAAuBxc,EAASqR,GAAU+B,aACxI,CAMD,uBAAMyoB,CAAkB77B,GACpBiB,KAAK2nB,mBAAmBwL,oBAAoBnB,GAAoDhyB,KAAKkB,eACrG,IACI,MAAM+kB,QAAiBjmB,KAAKg6B,iBAAiB/F,oBAAoB,GAAG7jB,GAAU6B,4BAA6BlT,GAE3G,OAAIknB,EAAShb,SAAWwH,IACpBwT,EAASyU,MACTzU,EAASyU,KAAK,oBACdzU,EAASyU,KAAK,mBAAmBn2B,OAAS,EACnC0hB,EAASyU,KAAK,mBAAmB,GAErC,IACV,CACD,MAAO55B,GACH,OAAO,IACV,CACJ;;ACzFL,SAASg6B,KAEL,OAAOC,KAAKC,OAAM,IAAItgB,MAAOugB,UAAY,IAC7C,CAaA,SAASC,GAAkBC,GACvB,OAAIA,EACO,IAAIzgB,KAAuB,IAAlB0gB,OAAOD,IAEpB,IAAIzgB,IACf,CAKA,SAAS2gB,GAAe9sB,EAAW+sB,GAE/B,MAAMC,EAAgBH,OAAO7sB,IAAc,EAG3C,OAF6BusB,KAAeQ,EAEdC,CAClC,CA0BA,SAASC,GAAMC,EAAG/yB,GACd,OAAO,IAAIqC,QAASC,GAAY0wB,WAAW,IAAM1wB,EAAQtC,GAAQ+yB,GACrE;6CC4CA,SAASE,GAAmBnQ,GACxB,OAAQA,EAAOgM,eAAe,kBAC1BhM,EAAOgM,eAAe,gBACtBhM,EAAOgM,eAAe,mBACtBhM,EAAOgM,eAAe,aACtBhM,EAAOgM,eAAe,SAC9B,CAKA,SAASoE,GAAoBpQ,GACzB,QAAKA,IAGGmQ,GAAmBnQ,IACvBA,EAAOgM,eAAe,UACtBhM,EAAOgM,eAAe,YACrBhM,EAAuB,iBAAM/X,GAAeE,cACzC6X,EAAuB,iBACnB/X,GAAeG,+BAC/B,CAKA,SAASioB,GAAgBrQ,GACrB,QAAKA,IAGGmQ,GAAmBnQ,IACvBA,EAAOgM,eAAe,UACtBhM,EAAuB,iBAAM/X,GAAeC,SACpD,CAKA,SAASooB,GAAqBtQ,GAC1B,QAAKA,IAGGmQ,GAAmBnQ,IACvBA,EAAuB,iBAAM/X,GAAeI,cACpD,CAkDA,SAASkoB,GAAoBtzB,EAAK+iB,GAC9B,QAAKA,IAGiC,IAA9B/iB,EAAI9D,QAAQmP,KAChB0X,EAAOgM,eAAe,aACtBhM,EAAOgM,eAAe,eAC9B,CAyBA,SAASwE,KACL,OAAQlB,KACJ9mB,EACR,CACA,SAASioB,GAAgCC,EAAmBC,EAAeC,GACvEF,EAAkB5V,uBACd6V,EAAc7V,uBAClB4V,EAAkB/V,eAAiBgW,EAAchW,eACjD+V,EAAkB3V,qBAAuB4V,EAAc5V,qBACvD2V,EAAkB7V,OAAS8V,EAAc9V,OACzC6V,EAAkBG,qBAAuBD,EACzCF,EAAkB9V,SAAW+V,EAAc/V,QAC/C,CACA,SAASkW,GAA6BJ,EAAmBC,EAAeC,GACpEF,EAAkBtV,QAAUuV,EAAcvV,QAC1CsV,EAAkBvV,gBAAkBwV,EAAcxV,gBAClDuV,EAAkBxV,kBAAoByV,EAAczV,kBACpDwV,EAAkBK,mBAAqBH,CAC3C,CAIA,SAASI,GAA2B/V,GAChC,OAAOA,EAASgW,WAAa3B,IACjC;6CFlKAf,GAAgBO,aAAe,CAC3BoC,QAAS,CACLC,SAAU,SG5ElB,MAAMC,GACF,WAAA/8B,CAAYuxB,EAAW4I,EAAkB6C,EAAcC,EAAkB72B,EAAQ/E,EAAeymB,EAAmBoV,GAC/G/8B,KAAK+wB,mBAAqBK,EAC1BpxB,KAAKg9B,oBAAoBxY,gBACzBxkB,KAAKg6B,iBAAmBA,EACxBh6B,KAAK68B,aAAeA,EACpB78B,KAAK88B,iBAAmBA,EACxB98B,KAAKm6B,wBAA0B,CAC3B8C,iBAAap7B,EACbw4B,mBAAex4B,EACfq7B,oBAAgBr7B,GAEpB7B,KAAKiG,OAASA,EACdjG,KAAK2nB,kBAAoBA,EACzB3nB,KAAKkB,cAAgBA,EACrBlB,KAAK+8B,gBAAkBA,IAAmB,EAC1C/8B,KAAKm9B,gBAAkB,IAAIpD,GAAgBC,EAAkBh6B,KAAKiG,OAAQjG,KAAK2nB,kBAAmB3nB,KAAKkB,cAC1G,CAMD,gBAAAk8B,CAAiBC,GAEb,GAAIA,EAAa1Y,gBAAgBzgB,SAASkM,GAAUS,eAChD,OAAO0oB,GAEX,MAAM7T,EAAe2X,EAAazY,aAClC,GAAIc,EAAanhB,OACb,OAAQmhB,EAAa,GAAG9F,eACpB,KAAKxP,GAAUM,KACX,OAAO6oB,GACX,KAAKnpB,GAAUO,KACX,OAAO4oB,GAGnB,OAAOA,EACV,CAED,iBAAI1sB,GACA,OAAO7M,KAAKo9B,iBAAiBp9B,KAAKs9B,gCACrC,CAID,gBAAInI,GACA,OAAOn1B,KAAK88B,iBAAiB3H,YAChC,CAID,WAAIp2B,GACA,OAAOiB,KAAK88B,gBACf,CAID,sBAAI/L,GACA,OAAO/wB,KAAKg9B,oBAAoB9Y,SACnC,CAID,sBAAI6M,CAAmB3M,GACnBpkB,KAAKg9B,oBAAsB,IAAI/Y,GAAUG,GACzCpkB,KAAKg9B,oBAAoBxY,gBACzBxkB,KAAKu9B,iCAAmC,IAC3C,CAID,mCAAID,GAKA,OAJKt9B,KAAKu9B,mCACNv9B,KAAKu9B,iCACDv9B,KAAKg9B,oBAAoBtY,oBAE1B1kB,KAAKu9B,gCACf,CAID,mBAAIC,GACA,OAAOx9B,KAAKs9B,gCAAgC3Y,gBAAgB/E,aAC/D,CAID,UAAIgV,GACA,OAAO50B,KAAKs9B,gCAAgC1Y,aAAa,EAC5D,CAID,yBAAI6Y,GACA,GAAIz9B,KAAK09B,oBACL,OAAO19B,KAAK29B,YAAY39B,KAAKymB,SAASH,wBAGtC,MAAMpN,GAAsB1C,GAEnC,CAID,iBAAIonB,GACA,GAAI59B,KAAK09B,oBACL,OAAO19B,KAAK29B,YAAY39B,KAAKymB,SAASN,gBAGtC,MAAMjN,GAAsB1C,GAEnC,CACD,sBAAIqnB,GACA,GAAI79B,KAAK09B,oBACL,OAAO19B,KAAK29B,YAAY39B,KAAKymB,SAASN,eAAeviB,QAAQ,SAAU,gBAGvE,MAAMsV,GAAsB1C,GAEnC,CAID,sBAAIsnB,GACA,GAAI99B,KAAK09B,oBAAqB,CAE1B,IAAK19B,KAAKymB,SAASF,qBACf,MAAMrN,GAAsBT,IAEhC,OAAOzY,KAAK29B,YAAY39B,KAAKymB,SAASF,qBACzC,CAEG,MAAMrN,GAAsB1C,GAEnC,CAID,yBAAIunB,GACA,GAAI/9B,KAAK09B,oBACL,OAAO19B,KAAK29B,YAAY39B,KAAKymB,SAASJ,QAGtC,MAAMnN,GAAsB1C,GAEnC,CAID,WAAIwnB,GACA,GAAIh+B,KAAK09B,oBACL,OAAO19B,KAAK29B,YAAY39B,KAAKymB,SAASL,UAGtC,MAAMlN,GAAsB1C,GAEnC,CAMD,gBAAAynB,CAAiBZ,GACb,OAA6C,IAArCA,EAAazY,aAAargB,SAC7Bq4B,GAAUsB,sBAAsBve,IAAI0d,EAAazY,aAAa,KAC/D5kB,KAAKo9B,iBAAiBC,KAAkB9D,IACxCv5B,KAAKm1B,eAAiBpD,EAC7B,CAKD,aAAAoM,CAAcja,GACV,OAAOA,EAAUtgB,QAAQ,uBAAwB5D,KAAK40B,OACzD,CAKD,WAAA+I,CAAYzZ,GACR,IAAIka,EAAWla,EACf,MACMma,EADqB,IAAIpa,GAAUjkB,KAAKymB,SAAS6X,qBACC5Z,mBAClD6Z,EAAuBF,EAA6BzZ,aAqB1D,OApB8B5kB,KAAKs9B,gCAAgC1Y,aAC7C5G,QAAQ,CAACwgB,EAAa95B,KACxC,IAAI+5B,EAAaF,EAAqB75B,GACtC,GAAc,IAAVA,GACA1E,KAAKi+B,iBAAiBI,GAA+B,CACrD,MAAMnd,EAAW,IAAI+C,GAAUjkB,KAAKymB,SAASH,wBAAwB5B,mBAAmBE,aAAa,GAMjG6Z,IAAevd,IACflhB,KAAKiG,OAAOlB,QAAQ,gCAAgC05B,aAAsBvd,KAC1Eud,EAAavd,EAEpB,CACGsd,IAAgBC,IAChBL,EAAWA,EAASx6B,QAAQ,IAAI66B,KAAe,IAAID,SAGpDx+B,KAAKm+B,cAAcC,EAC7B,CAID,sCAAIM,GACA,MAAMC,EAAyB3+B,KAAKw9B,gBACpC,OAAIx9B,KAAK+wB,mBAAmB7sB,SAAS,UACjClE,KAAK6M,gBAAkB0sB,IACtBv5B,KAAKm1B,eAAiBpD,KAClB/xB,KAAK4+B,iCAAiCD,GACpC,GAAG3+B,KAAK+wB,qDAEZ,GAAG/wB,KAAK+wB,yDAClB,CAID,iBAAA2M,GACI,QAAS19B,KAAKymB,QACjB,CAKD,2BAAMoY,GACF7+B,KAAK2nB,mBAAmBwL,oBAAoBnB,GAAkDhyB,KAAKkB,eACnG,MAAM49B,EAAiB9+B,KAAK++B,2BACtBC,QAA6BxF,GAAYx5B,KAAKs8B,6BAA6B7B,KAAKz6B,MAAOgyB,GAAyDhyB,KAAKiG,OAAQjG,KAAK2nB,kBAAmB3nB,KAAKkB,cAA7Js4B,CAA4KsF,GAC/M9+B,KAAK+wB,mBAAqB/wB,KAAK+wB,mBAAmBntB,QAAQ5D,KAAKw9B,gBAAiBsB,EAAepY,mBAC/F,MAAMuY,QAAuBzF,GAAYx5B,KAAKk/B,uBAAuBzE,KAAKz6B,MAAOgyB,GAAmDhyB,KAAKiG,OAAQjG,KAAK2nB,kBAAmB3nB,KAAKkB,cAAjJs4B,CAAgKsF,GAC7L9+B,KAAKm/B,qBAAqBL,EAAgBE,EAAsB,CAC5D/X,OAAQgY,IAEZj/B,KAAK2nB,mBAAmBgH,UAAU,CAC9BqQ,qBAAsBA,EACtBI,wBAAyBH,GAC1Bj/B,KAAKkB,cACX,CAMD,wBAAA69B,GACI,IAAID,EAAiB9+B,KAAK68B,aAAahQ,4BAA4B7sB,KAAKw9B,iBAiBxE,OAhBKsB,IACDA,EAAiB,CACblY,QAAS,GACTD,gBAAiB3mB,KAAKw9B,gBACtB9W,kBAAmB1mB,KAAKw9B,gBACxBc,oBAAqBt+B,KAAK+wB,mBAC1BzK,uBAAwB,GACxBH,eAAgB,GAChBI,qBAAsB,GACtBF,OAAQ,GACRkW,oBAAoB,EACpBF,sBAAsB,EACtBI,UAAWT,KACX5V,SAAU,KAGX0Y,CACV,CAQD,oBAAAK,CAAqBL,EAAgBE,EAAsBK,GACnDL,IAAyB/qB,IACzBorB,GAAwBpY,SAAWhT,KAEnC6qB,EAAerC,UACXT,KACJ8C,EAAeR,oBAAsBt+B,KAAK+wB,oBAE9C,MAAMxF,EAAWvrB,KAAK68B,aAAa1L,kCAAkC2N,EAAenY,iBACpF3mB,KAAK68B,aAAalL,qBAAqBpG,EAAUuT,GACjD9+B,KAAKymB,SAAWqY,CACnB,CAKD,4BAAMI,CAAuBJ,GACzB9+B,KAAK2nB,mBAAmBwL,oBAAoBnB,GAAmDhyB,KAAKkB,eACpG,MAAMo+B,EAAgBt/B,KAAKu/B,uCAAuCT,GAElE,GAAIQ,EAAe,CACf,GAAIA,EAAcrY,SACdhT,IAEIjU,KAAK88B,iBAAiB0C,0BAA0BC,aAC5CH,EAAc7Y,SAAU,CAExBwV,GAAgC6C,QADAtF,GAAYx5B,KAAK0/B,sCAAsCjF,KAAKz6B,MAAOgyB,GAAkEhyB,KAAKiG,OAAQjG,KAAK2nB,kBAAmB3nB,KAAKkB,cAA/Ks4B,CAA8L8F,EAAc7Y,WACzK,GACnEqY,EAAeR,oBACXt+B,KAAK+wB,kBACZ,CAGT,OAAOuO,EAAcrY,MACxB,CAED,IAAIR,QAAiB+S,GAAYx5B,KAAK2/B,+BAA+BlF,KAAKz6B,MAAOgyB,GAA2DhyB,KAAKiG,OAAQjG,KAAK2nB,kBAAmB3nB,KAAKkB,cAAjKs4B,GACrB,GAAI/S,EAMA,OAJIzmB,KAAK88B,iBAAiB0C,0BAA0BC,cAChDhZ,QAAiB+S,GAAYx5B,KAAK0/B,sCAAsCjF,KAAKz6B,MAAOgyB,GAAkEhyB,KAAKiG,OAAQjG,KAAK2nB,kBAAmB3nB,KAAKkB,cAA/Ks4B,CAA8L/S,IAEnNwV,GAAgC6C,EAAgBrY,GAAU,GACnDxS,GAIP,MAAMiF,GAAsBxC,GAAmB1W,KAAK0+B,mCAE3D,CAOD,sCAAAa,CAAuCT,GACnC9+B,KAAKiG,OAAOlB,QAAQ,oEACpB,MAAM66B,EAAiB5/B,KAAK6/B,gCAC5B,GAAID,EAGA,OAFA5/B,KAAKiG,OAAOlB,QAAQ,sDACpBk3B,GAAgC6C,EAAgBc,GAAgB,GACzD,CACH3Y,OAAQhT,IAKhB,GAFAjU,KAAKiG,OAAOlB,QAAQ,kHAEhB/E,KAAK88B,iBAAiBgD,2BACtB9/B,KAAKiG,OAAOlB,QAAQ,+JAEnB,CACD,MAAMg7B,EAAoB//B,KAAKggC,yCAC/B,GAAID,EAEA,OADA9D,GAAgC6C,EAAgBiB,GAAmB,GAC5D,CACH9Y,OAAQhT,GACRwS,SAAUsZ,GAId//B,KAAKiG,OAAOlB,QAAQ,6HAE3B,CAED,MAAMk7B,EAAwBzD,GAA2BsC,GACzD,OAAI9+B,KAAKkgC,oBAAoBpB,IACzBA,EAAezC,uBACd4D,GAEDjgC,KAAKiG,OAAOlB,QAAQ,yCACb,CAAEkiB,OAAQhT,MAEZgsB,GACLjgC,KAAKiG,OAAOlB,QAAQ,mCAEjB,KACV,CAOD,mBAAAm7B,CAAoBpB,GAGhB,OAF2B,IAAI7a,GAAU6a,EAAeR,qBACjB5Z,mBAAmBE,aACtCrgB,SAChBvE,KAAKs9B,gCAAgC1Y,aAAargB,MACzD,CAID,6BAAAs7B,GACI,GAAI7/B,KAAK88B,iBAAiBZ,kBACtB,IACI,OAAOt7B,KAAKC,MAAMb,KAAK88B,iBAAiBZ,kBAC3C,CACD,MAAOp7B,GACH,MAAMoc,GAA+Bb,GACxC,CAEL,OAAO,IACV,CAMD,oCAAMsjB,GACF3/B,KAAK2nB,mBAAmBwL,oBAAoBnB,GAA2DhyB,KAAKkB,eAC5G,MAAMnC,EAAU,CAAA,EAKVohC,EAA8BngC,KAAK0+B,mCACzC1+B,KAAKiG,OAAOlB,QAAQ,yFAAyFo7B,KAC7G,IACI,MAAMla,QAAiBjmB,KAAKg6B,iBAAiB/F,oBAAoBkM,EAA6BphC,GACxFqhC,ECxblB,SAAgCna,GAC5B,OAAQA,EAASuR,eAAe,2BAC5BvR,EAASuR,eAAe,mBACxBvR,EAASuR,eAAe,WACxBvR,EAASuR,eAAe,WAChC;6CDmboC6I,CAAuBpa,EAASyU,MACxD,OAAI0F,EACOna,EAASyU,MAGhB16B,KAAKiG,OAAOlB,QAAQ,8FACb,KAEd,CACD,MAAOjE,GAEH,OADAd,KAAKiG,OAAOlB,QAAQ,6CAA6CjE,KAC1D,IACV,CACJ,CAID,sCAAAk/B,GACI,OAAIhgC,KAAKw9B,mBAAmBtX,GACjBA,GAAiBlmB,KAAKw9B,iBAE1B,IACV,CAKD,2CAAMkC,CAAsCjZ,GACxCzmB,KAAK2nB,mBAAmBwL,oBAAoBnB,GAAkEhyB,KAAKkB,eACnH,MAAMo/B,EAA4BtgC,KAAK88B,iBAAiB0C,0BAA0BC,YAClF,GAAIa,EAA2B,CAC3B,GAAIA,IACAlwB,GAAUgC,gCAKV,OAJApS,KAAKm6B,wBAAwB+C,eACzB9nB,GACJpV,KAAKm6B,wBAAwB8C,YACzBqD,EACG1D,GAAU2D,+BAA+B9Z,EAAU6Z,GAE9D,MAAMlG,QAA+BZ,GAAYx5B,KAAKm9B,gBAAgBlD,aAAaQ,KAAKz6B,KAAKm9B,iBAAkBnL,GAA+ChyB,KAAKiG,OAAQjG,KAAK2nB,kBAAmB3nB,KAAKkB,cAAnKs4B,CAAkLx5B,KAAK88B,iBAAiB0C,0BACvOtF,kBAAmBl6B,KAAKm6B,yBAC9B,GAAIC,EAKA,OAJAp6B,KAAKm6B,wBAAwB+C,eACzB9nB,GACJpV,KAAKm6B,wBAAwB8C,YACzB7C,EACGwC,GAAU2D,+BAA+B9Z,EAAU2T,GAE9Dp6B,KAAKm6B,wBAAwB+C,eACzB9nB,EACP,CACD,OAAOqR,CACV,CAOD,kCAAM6V,CAA6BwC,GAC/B9+B,KAAK2nB,mBAAmBwL,oBAAoBnB,GAAyDhyB,KAAKkB,eAC1G,MAAMs/B,EAAsBxgC,KAAKygC,6CAA6C3B,GAC9E,GAAI0B,EACA,OAAOA,EAGX,MAAM/Z,QAAiB+S,GAAYx5B,KAAK0gC,qCAAqCjG,KAAKz6B,MAAOgyB,GAAiEhyB,KAAKiG,OAAQjG,KAAK2nB,kBAAmB3nB,KAAKkB,cAA7Ks4B,GACvB,GAAI/S,EAEA,OADA6V,GAA6BwC,EAAgBrY,GAAU,GAChDxS,GAGX,MAAMiJ,GAA+BZ,GACxC,CACD,4CAAAmkB,CAA6C3B,GACzC9+B,KAAKiG,OAAOlB,QAAQ,4EACpB/E,KAAKiG,OAAOiV,WAAW,sBAAsBlb,KAAK88B,iBAAiB9L,kBAC/D5gB,GAAU0B,kBACd9R,KAAKiG,OAAOiV,WAAW,uBAAuBlb,KAAK88B,iBAAiBZ,mBAChE9rB,GAAU0B,kBACd9R,KAAKiG,OAAOiV,WAAW,wBAAwB4jB,EAAeR,qBAAuBluB,GAAU0B,kBAC/F,MAAM2U,EAAWzmB,KAAK2gC,sCACtB,GAAIla,EAGA,OAFAzmB,KAAKiG,OAAOlB,QAAQ,6DACpBu3B,GAA6BwC,EAAgBrY,GAAU,GAChDxS,GAIX,GADAjU,KAAKiG,OAAOlB,QAAQ,gIAChB/E,KAAKjB,QAAQ+gC,2BACb9/B,KAAKiG,OAAOlB,QAAQ,sLAEnB,CACD,MAAMg7B,GjBhaoChZ,EiBga6B/mB,KAAKw9B,gBjB/ZnEtW,GAA6CV,GAA0BC,SAAUM,IiBga1F,GAAIgZ,EAGA,OAFA//B,KAAKiG,OAAOlB,QAAQ,yDACpBu3B,GAA6BwC,EAAgBiB,GAAmB,GACzD9rB,GAEXjU,KAAKiG,OAAOlB,QAAQ,2IACvB,CjBvaT,IAAsDgiB,EiBwa9C,MAAMkZ,EAAwBzD,GAA2BsC,GACzD,OAAI9+B,KAAKkgC,oBAAoBpB,IACzBA,EAAevC,qBACd0D,GACDjgC,KAAKiG,OAAOlB,QAAQ,gDAEbkP,KAEFgsB,GACLjgC,KAAKiG,OAAOlB,QAAQ,mCAEjB,KACV,CAID,mCAAA47B,GAEI,GAAI3gC,KAAK6M,gBAAkB0sB,GAEvB,OADAv5B,KAAKiG,OAAOlB,QAAQ,uGACb63B,GAAUgE,qCAAqC5gC,KAAKw9B,iBAG/D,GAAIx9B,KAAK88B,iBAAiB9V,uBAAwB,CAC9ChnB,KAAKiG,OAAOlB,QAAQ,wFACpB,IACI/E,KAAKiG,OAAOlB,QAAQ,qDACpB,MACM0hB,EAAWS,GADMtmB,KAAKC,MAAMb,KAAK88B,iBAAiB9V,wBACqBP,SAAUzmB,KAAKw9B,iBAE5F,GADAx9B,KAAKiG,OAAOlB,QAAQ,wCAChB0hB,EAEA,OADAzmB,KAAKiG,OAAOlB,QAAQ,iFACb0hB,EAGPzmB,KAAKiG,OAAOlB,QAAQ,wEAE3B,CACD,MAAOjE,GAEH,MADAd,KAAKiG,OAAOlB,QAAQ,kGACdmY,GAA+Bd,GACxC,CACJ,CAED,OAAIpc,KAAK6gC,wBACL7gC,KAAKiG,OAAOlB,QAAQ,kGACb63B,GAAUgE,qCAAqC5gC,KAAKw9B,kBAExD,IACV,CAMD,0CAAMkD,GACF1gC,KAAK2nB,mBAAmBwL,oBAAoBnB,GAAiEhyB,KAAKkB,eAClH,MAAM4/B,EAA4B,GAAG1wB,GAAUQ,+BAA+B5Q,KAAK+wB,0CAC7EhyB,EAAU,CAAA,EAKhB,IAAIumB,EAAQ,KACZ,IACI,MAAMW,QAAiBjmB,KAAKg6B,iBAAiB/F,oBAAoB6M,EAA2B/hC,GAC5F,IAAIgiC,EACAta,EACJ,GEjmBZ,SAA0CR,GACtC,OAAQA,EAASuR,eAAe,8BAC5BvR,EAASuR,eAAe,WAChC;6CF8lBgBwJ,CAAiC/a,EAASyU,MAC1CqG,EACI9a,EAASyU,KACbjU,EAAWsa,EAAkBta,SAC7BzmB,KAAKiG,OAAOiV,WAAW,iCAAiC6lB,EAAkBE,iCAEzE,KGvmBjB,SAA+Chb,GAC3C,OAAQA,EAASuR,eAAe,UAC5BvR,EAASuR,eAAe,oBAChC,CHomBqB0J,CAAsCjb,EAASyU,MAepD,OADA16B,KAAKiG,OAAO1F,MAAM,8FACX,KAXP,GAHAP,KAAKiG,OAAOhB,QAAQ,sHAAsHghB,EAAShb,UACnJ81B,EACI9a,EAASyU,KACTqG,EAAkBxgC,QAAU6P,GAAUoC,iBAEtC,OADAxS,KAAKiG,OAAO1F,MAAM,sEACX,KAEXP,KAAKiG,OAAOhB,QAAQ,oDAAoD87B,EAAkBxgC,SAC1FP,KAAKiG,OAAOhB,QAAQ,gEAAgE87B,EAAkBtgC,qBACtGT,KAAKiG,OAAOhB,QAAQ,6FACpBwhB,EAAW,EAKd,CACDzmB,KAAKiG,OAAOlB,QAAQ,0IACpBugB,EAAQ4B,GAA6CT,EAAUzmB,KAAKw9B,gBACvE,CACD,MAAOj9B,GACH,GAAIA,aAAiBmV,GACjB1V,KAAKiG,OAAO1F,MAAM,oGAAoGA,EAAMoV,iCAAiCpV,EAAMU,oBAElK,CACD,MAAMkgC,EAAa5gC,EACnBP,KAAKiG,OAAO1F,MAAM,wGAAwG4gC,EAAWlhC,4BAA4BkhC,EAAWrhC,UAC/K,CACD,OAAO,IACV,CAOD,OALKwlB,IACDtlB,KAAKiG,OAAOhB,QAAQ,wHACpBjF,KAAKiG,OAAOlB,QAAQ,yDACpBugB,EAAQsX,GAAUgE,qCAAqC5gC,KAAKw9B,kBAEzDlY,CACV,CAID,oBAAAub,GAMI,OALgB7gC,KAAK88B,iBAAiB9L,iBAAiB1S,OAAQ8S,GACnDA,GACJnN,GAAU0B,iBAAiByL,GAAWxR,gBAClC5f,KAAKw9B,iBAEFj5B,OAAS,CAC3B,CAMD,wBAAO68B,CAAkBC,EAAiBC,GACtC,IAAIC,EACJ,GAAID,GACAA,EAAkB3M,qBAAuBnZ,GAAyB,CAClE,MAAMoZ,EAAS0M,EAAkB1M,OAC3B0M,EAAkB1M,OAClBxkB,GAAUK,sBAChB8wB,EAA8B,GAAGD,EAAkB3M,sBAAsBC,IAC5E,CACD,OAAO2M,GAEDF,CACT,CAKD,2CAAOT,CAAqC9T,GACxC,MAAO,CACHpG,kBAAmBoG,EACnBnG,gBAAiBmG,EACjBlG,QAAS,CAACkG,GAEjB,CAID,iBAAA0U,GACI,GAAIxhC,KAAK+8B,gBACL,OAAO3sB,GAAUI,uBAEhB,GAAIxQ,KAAK09B,oBACV,OAAO19B,KAAKymB,SAASE,gBAGrB,MAAMzN,GAAsB1C,GAEnC,CAKD,OAAAirB,CAAQ3U,GACJ,OAAO9sB,KAAKymB,SAASG,QAAQjiB,QAAQmoB,IAAS,CACjD,CAKD,gCAAA8R,CAAiC9R,GAC7B,OAAOjG,GAAiClH,IAAImN,EAC/C,CAOD,6BAAO4U,CAAuB5U,GAC1B,OAAO1c,GAAUkC,oBAAoB3N,QAAQmoB,IAAS,CACzD,CAOD,mCAAO6U,CAA6B7U,EAAM8U,EAAQ7c,GAE9C,MAAM8c,EAAuB,IAAI5d,GAAU6I,GAC3C+U,EAAqBrd,gBACrB,MAAMsd,EAAoBD,EAAqBnd,mBAC/C,IAAIqd,EAAkB,GAAGH,KAAUE,EAAkBnd,kBACjD3kB,KAAK0hC,uBAAuBI,EAAkBnd,mBAC9Cod,EAAkB,GAAGH,KAAUxxB,GAAUiC,qCAG7C,MAAM+R,EAAMH,GAAUmB,gCAAgC,IAC/Cyc,EAAqBnd,mBACxBC,gBAAiBod,IAClB7d,UAEH,OAAIa,EACO,GAAGX,KAAOW,IACdX,CACV,CAOD,qCAAOmc,CAA+B9Z,EAAUgZ,GAC5C,MAAMuC,EAAmB,IAAKvb,GAS9B,OARAub,EAAiB1b,uBACbsW,GAAU+E,6BAA6BK,EAAiB1b,uBAAwBmZ,GACpFuC,EAAiB7b,eACbyW,GAAU+E,6BAA6BK,EAAiB7b,eAAgBsZ,GACxEuC,EAAiBzb,uBACjByb,EAAiBzb,qBACbqW,GAAU+E,6BAA6BK,EAAiBzb,qBAAsBkZ,IAE/EuC,CACV,CAUD,6BAAOC,CAAuB7Q,GAC1B,IAAI8Q,EAAgB9Q,EACpB,MACM+Q,EADe,IAAIle,GAAUmN,GACS1M,mBAE5C,GAAmD,IAA/Cyd,EAAuBvd,aAAargB,QACpC49B,EAAuBxd,gBAAgBzgB,SAASkM,GAAUS,eAAgB,CAE1EqxB,EAAgB,GAAGA,IADMC,EAAuBxd,gBAAgBnhB,MAAM,KAAK,KACrB4M,GAAUU,0BACnE,CACD,OAAOoxB,CACV,EAkCL,SAASE,GAAmB/E,GACxB,OAAOA,EAAan5B,SAASkM,GAAU4B,eACjCqrB,EACA,GAAGA,IAAejtB,GAAU4B,eACtC;;AI9yBAlH,eAAeu3B,GAAyBhF,EAAciF,EAAezF,EAAcC,EAAkB72B,EAAQ/E,EAAeymB,GACxHA,GAAmBwL,oBAAoBnB,GAA4D9wB,GACnG,MAAMqhC,EAAoB3F,GAAUqF,uBAAuBG,GAAmB/E,IAExEmF,EAAwB,IAAI5F,GAAU2F,EAAmBD,EAAezF,EAAcC,EAAkB72B,EAAQ/E,EAAeymB,GACrI,IAEI,aADM6R,GAAYgJ,EAAsB3D,sBAAsBpE,KAAK+H,GAAwBxQ,GAAkD/rB,EAAQ0hB,EAAmBzmB,EAAlKs4B,GACCgJ,CACV,CACD,MAAO1hC,GACH,MAAMoY,GAAsB1C,GAC/B,CACL;6CJ+vBAomB,GAAUsB,sBAAwB,IAAIx4B,IAAI,CACtC,WACA,aACAmN,GAAsBC,OACtBD,GAAsBG,UACtBH,GAAsBE,gBK5xB1B,MAAM0vB,WAAoB/sB,GACtB,WAAA7V,CAAY8V,EAAW1U,EAAc8U,EAAU2sB,EAASz3B,GACpDlL,MAAM4V,EAAW1U,EAAc8U,GAC/B/V,KAAKC,KAAO,cACZD,KAAK0iC,QAAUA,EACf1iC,KAAKiL,OAASA,EACdzI,OAAOqT,eAAe7V,KAAMyiC,GAAY3sB,UAC3C;6CCZL,SAAS6sB,GAAqB90B,EAAUqhB,EAAS5iB,GAC7C,MAAO,CACHuB,SAAUA,EACVujB,UAAWlC,EAAQkC,UACnB1vB,OAAQwtB,EAAQxtB,OAChBkhC,sBAAuBt2B,EACvBqkB,OAAQzB,EAAQyB,OAChBvB,qBAAsBF,EAAQE,qBAC9ByT,sBAAuB3T,EAAQ2T,sBAC/BC,mBAAoB5T,EAAQ4T,mBAC5BC,UAAW7T,EAAQ6T,UACnB1T,OAAQH,EAAQG,OAChBiH,iBAAkBpH,EAAQoH,kBAAoBpH,EAAQ8T,qBAAqBn1B,SAEnF;6CCTA,MAAMo1B,GAKF,mCAAOC,CAA6BC,GAChC,MAAO,GAAGnuB,MAAyCpU,KAAKmL,UAAUo3B,IACrE,CAMD,iBAAOC,CAAWvG,EAAcsG,EAAYjiC,GACxC,MAAMuH,EAAMw6B,GAAgBC,6BAA6BC,GACnDz6B,EAAQm0B,EAAahL,mBAAmBppB,GAC9C,GAAIC,EAAO,CACP,GAAIA,EAAM26B,aAAe3oB,KAAKuI,MAE1B,YADA4Z,EAAavP,WAAW7kB,EAAKvH,GAGjC,MAAM,IAAIuhC,GAAY/5B,EAAMtH,YAAY1B,KAAK,MAAQ0Q,GAAUyB,aAAcnJ,EAAMzH,aAAcyH,EAAMqN,SAC1G,CACJ,CAOD,kBAAOutB,CAAYzG,EAAcsG,EAAYld,EAAU/kB,GACnD,GAAI+hC,GAAgBM,oBAAoBtd,IACpCgd,GAAgBO,2BAA2Bvd,GAAW,CACtD,MAAMwd,EAAkB,CACpBJ,aAAcJ,GAAgBS,sBAAsBC,SAAS1d,EAASyW,QAAQ9pB,MAC9ErS,MAAO0lB,EAASyU,KAAKn6B,MACrBa,WAAY6kB,EAASyU,KAAKr5B,YAC1BJ,aAAcglB,EAASyU,KAAKj6B,kBAC5BsV,SAAUkQ,EAASyU,KAAK9kB,UAE5BinB,EAAajL,mBAAmBqR,GAAgBC,6BAA6BC,GAAaM,EAAiBviC,EAC9G,CACJ,CAKD,0BAAOqiC,CAAoBtd,GACvB,OAA4B,MAApBA,EAAShb,QACZgb,EAAShb,QAAU,KAAOgb,EAAShb,OAAS,GACpD,CAKD,iCAAOu4B,CAA2Bvd,GAC9B,QAAIA,EAASyW,UACDzW,EAASyW,QAAQlF,eAAe5kB,MACnCqT,EAAShb,OAAS,KAAOgb,EAAShb,QAAU,KAGxD,CAKD,4BAAOy4B,CAAsBL,GACzB,MAAMO,EAAOP,GAAgB,EAAI,EAAIA,EAC/BQ,EAAiBnpB,KAAKuI,MAAQ,IACpC,OAAO8X,KAAK+I,MAEiD,IAF3C/I,KAAKgJ,IAAIF,GACtBD,GAAQ5uB,IAAoD6uB,EAC7D7uB,IACP,CACD,qBAAOgvB,CAAenH,EAAchvB,EAAUqhB,EAAS0T,GACnD,MAAMO,EAAaR,GAAqB90B,EAAUqhB,EAAS0T,GACrDn6B,EAAMzI,KAAKkjC,6BAA6BC,GAC9CtG,EAAavP,WAAW7kB,EAAKymB,EAAQhuB,cACxC;6CC7EL,MAAM+iC,WAAqBvuB,GACvB,WAAA7V,CAAYU,EAAO2jC,EAAYC,GAC3BpkC,MAAMQ,EAAMoV,UAAWpV,EAAMU,aAAcV,EAAMwV,UACjDvT,OAAOqT,eAAe7V,KAAMikC,GAAanuB,WACzC9V,KAAKC,KAAO,eACZD,KAAKO,MAAQA,EACbP,KAAKkkC,WAAaA,EAClBlkC,KAAKmkC,gBAAkBA,CAC1B;6CCQL,MAAMC,GACF,WAAAvkC,CAAYwkC,EAAe1c,GAEvB3nB,KAAKhB,OnBqCb,UAAoCk2B,YAAaoP,EAAiBC,cAAeC,EAAmBxqB,cAAeyqB,EAAkBC,aAAcC,EAAkBC,iBAAkBC,EAAuB7K,iBAAkB8K,EAAuBC,gBAAiBC,EAAsBC,kBAAmBA,EAAmBrN,YAAaA,EAAasN,UAAWA,EAAWlM,uBAAwBA,EAAwBmM,kBAAmBA,EAAmBC,kBAAmBA,IACzd,MAAMprB,EAAgB,IACf6Z,MACA4Q,GAEP,MAAO,CACHvP,aAoBkBA,EApBYoP,EAqB3B,CACHhN,mBAAoB,GACpBgK,kBAAmB5M,GACnBoL,4BAA4B,EAC5BuF,eAAe,EACfC,wBAAwB,KACrBpQ,IA1BHqP,cAAe,IAAK7Q,MAA2B8Q,GAC/CxqB,cAAeA,EACf0qB,aAAc,IAAK5Q,MAA0B6Q,GAC7CC,iBAAkBC,GACd,IAAIrT,GAAoB8S,EAAgBz2B,SAAUsL,GAA+B,IAAIY,GAAOC,GAAgB,IAAIsY,IACpH0H,iBAAkB8K,GAAyB9Q,GAC3C+Q,gBAAiBC,GAAwB7rB,GACzC8rB,kBAAmBA,GAAqB1Q,GACxCqD,YAAa,IAAKzD,MAAyByD,GAC3CsN,UAAW,IAAKrQ,MAA8BqQ,GAC9ClM,uBAAwBA,GAA0B,KAClDmM,kBAAmBA,GAAqB,KACxCC,kBAAmBA,GAAqB,MAOhD,IAA0BlQ,CAL1B,CmB1DsBqQ,CAAyBlB,GAEvCrkC,KAAKiG,OAAS,IAAI8T,GAAO/Z,KAAKhB,OAAOgb,cAAe/Z,GAAMsb,IAE1Dvb,KAAKwlC,YAAcxlC,KAAKhB,OAAO+lC,gBAE/B/kC,KAAK68B,aAAe78B,KAAKhB,OAAO4lC,iBAEhC5kC,KAAKsiC,cAAgBtiC,KAAKhB,OAAOg7B,iBAEjCh6B,KAAKg5B,uBAAyBh5B,KAAKhB,OAAOg6B,uBAE1Ch5B,KAAKoxB,UAAYpxB,KAAKhB,OAAOk2B,YAAY9D,UAEzCpxB,KAAK2nB,kBAAoBA,CAC5B,CAID,yBAAA8d,CAA0BC,GACtB,MAAMhJ,EAAU,CAAA,EAEhB,GADAA,EAAQ9pB,IAA4BxC,GAAUsB,uBACzC1R,KAAKhB,OAAOulC,cAAc3Q,sBAAwB8R,EACnD,OAAQA,EAAQC,MACZ,KAAKvQ,GACD,IACI,MAAMroB,EAAayoB,GAAiCkQ,EAAQ/a,YAC5D+R,EAAQ9pB,IAA0B,OAAO7F,EAAW2oB,OAAO3oB,EAAW4oB,MACzE,CACD,MAAO70B,GACHd,KAAKiG,OAAOlB,QAAQ,mDAChBjE,EACP,CACD,MACJ,KAAKs0B,GACDsH,EAAQ9pB,IAA0B,QAAQ8yB,EAAQ/a,aAI9D,OAAO+R,CACV,CAQD,gCAAMkJ,CAA2BhI,EAAe7Y,EAAa2X,EAASyG,EAAYjiC,EAAe2kC,GACzFA,GACA7lC,KAAK2nB,mBAAmBwL,oBAAoB0S,EAAa3kC,GAE7D,MAAM+kB,QAAiBjmB,KAAK8lC,gBAAgB3C,EAAYvF,EAAe,CAAElD,KAAM3V,EAAa2X,QAASA,GAAWx7B,GAOhH,OANIlB,KAAKhB,OAAOg6B,wBACZ/S,EAAShb,OAAS,KACE,MAApBgb,EAAShb,QAETjL,KAAKhB,OAAOg6B,uBAAuB+M,sBAEhC9f,CACV,CAQD,qBAAM6f,CAAgB3C,EAAYvF,EAAe7+B,EAASmC,GAEtD,IAAI+kB,EADJgd,GAAgBG,WAAWpjC,KAAK68B,aAAcsG,EAAYjiC,GAE1D,IACI+kB,QAAiBuT,GAAax5B,KAAKsiC,cAAcpO,qBAAqBuG,KAAKz6B,KAAKsiC,eAAiBtQ,GAAqDhyB,KAAKiG,OAAQjG,KAAK2nB,kBAAmBzmB,EAA1Ks4B,CAAyLoE,EAAe7+B,GACzN,MAAMolC,EAAkBle,EAASyW,SAAW,GAC5C18B,KAAK2nB,mBAAmBgH,UAAU,CAC9BqX,iBAAkB/f,EAASyU,KAAKuL,eAAe1hC,QAAU,EACzD2hC,aAAc/B,EAAgBvxB,KAAkC,GAChEuzB,UAAWhC,EAAgBvxB,KAAgC,IAC5D1R,EACN,CACD,MAAOJ,GACH,GAAIA,aAAamjC,GAAc,CAC3B,MAAME,EAAkBrjC,EAAEqjC,gBAa1B,MAZIA,GACAnkC,KAAK2nB,mBAAmBgH,UAAU,CAC9BuX,aAAc/B,EAAgBvxB,KAAkC,GAChEuzB,UAAWhC,EAAgBvxB,KACvB,GACJwzB,kBAAmBjC,EAAgBvxB,UAC/B/Q,EACJwkC,oBAAqBlC,EAAgBvxB,UACjC/Q,EACJqiC,WAAYpjC,EAAEojC,YACfhjC,GAEDJ,EAAEP,KACX,CACD,MAAIO,aAAa4U,GACP5U,EAGAoY,GAAsBzC,GAEnC,CAED,OADAwsB,GAAgBK,YAAYtjC,KAAK68B,aAAcsG,EAAYld,EAAU/kB,GAC9D+kB,CACV,CAKD,qBAAMqgB,CAAgBC,EAAuBrlC,GACzClB,KAAK2nB,mBAAmBwL,oBAAoBnB,GAAgD9wB,GAC5F,MAAMslC,EAA4B,WAAWD,KAAyBvmC,KAAKoxB,UAAUwD,UAC/E6R,QAA+BpE,GAAyBmE,EAA2BxmC,KAAKsiC,cAAetiC,KAAK68B,aAAc78B,KAAKoxB,UAAUryB,QAASiB,KAAKiG,OAAQ/E,EAAelB,KAAK2nB,mBACzL3nB,KAAKoxB,UAAYqV,CACpB,CAKD,0BAAAC,CAA2BxX,GACvB,MAAMtL,EAAa,IAAIpb,IASvB,OARI0mB,EAAQoH,kBACR8C,GAAoBxV,EAAY5jB,KAAKhB,OAAOk2B,YAAYrnB,SAAU7N,KAAKhB,OAAOk2B,YAAY8B,aAE1F9H,EAAQyX,sBACRnO,GAAwB5U,EAAYsL,EAAQyX,sBAEhDjP,GAAiB9T,EAAYsL,EAAQhuB,eACrCm1B,GAAuBzS,EAAYsL,EAAQhuB,cAAelB,KAAK2nB,mBACxDhE,GAAiBC,EAC3B;6CCnJL,SAASgjB,GAA6BxlB,GAClC,GAAIA,EAAe,CAEf,OADiBA,EAAcG,KAAOH,EAAcI,KAAOJ,EAAcK,KACtD,IACtB,CACD,OAAO,IACX;6CCiBA,MAAMolB,GAIF,cAAApe,GACI,MAAO,CACHnc,cAAetM,KAAKsM,cACpBC,YAAavM,KAAKuM,YAClB2U,SAAUlhB,KAAKwM,MACfG,SAAU3M,KAAK2M,SACfD,eAAgB1M,KAAK0M,eACrBmV,UAAW7hB,KAAK6hB,UAChB5hB,KAAMD,KAAKC,KACX4rB,gBAAiB7rB,KAAK6rB,gBACtBhf,cAAe7M,KAAK6M,cAEpBO,eAAgB,IAAI5E,KAAKxI,KAAKoN,gBAAkB,IAAI3J,IAAK4J,GAC9C,CAACA,EAAc6T,SAAU7T,KAG3C,CAID,cAAAy5B,GACI,OAAQ9mC,KAAKoN,cAChB,CAKD,oBAAO25B,CAAcC,EAAgB5V,EAAW/X,GAC5C,MAAMiP,EAAU,IAAIue,GAUpB,IAAI95B,EATAqkB,EAAUvkB,gBAAkB0sB,GAC5BjR,EAAQzb,cAAgB0G,GAEnB6d,EAAU+D,eAAiBpD,GAChCzJ,EAAQzb,cAAgB0G,GAGxB+U,EAAQzb,cAAgB0G,GAGxByzB,EAAej6B,YAAcsM,IAC7BtM,EAAasoB,GAAgB2R,EAAej6B,WAAYsM,IAE5DiP,EAAQvb,WAAai6B,EAAej6B,WACpCub,EAAQhc,cAAgB06B,EAAe16B,cACvCgc,EAAQuD,gBAAkBmb,EAAenb,gBACzC,MAAM7pB,EAAMglC,EAAez6B,aACtB6kB,GAAaA,EAAUoQ,oBAC5B,IAAKx/B,EACD,MAAMkX,GAAsBpB,IAEhCwQ,EAAQ/b,YAAcvK,EAEtBsmB,EAAQ9b,MACJO,GAAY4oB,MACRiR,GAA6BI,EAAe5lB,gBAC5C,GAERkH,EAAQ5b,eACJK,GAAY2oB,KACRsR,EAAe5lB,eAAeC,KAC9B2lB,EAAe5lB,eAAeE,KAC9B,GAMR,MAAM2lB,EAAoBD,EAAe5lB,eAAeM,oBACpDslB,EAAe5lB,eAAeO,IAC5BulB,EAAQF,EAAe5lB,eAAe+lB,OACtCH,EAAe5lB,cAAc+lB,OAAO,GACpC,KAMN,GALA7e,EAAQ3b,SAAWs6B,GAAqBC,GAAS,GACjD5e,EAAQzG,UAAYmlB,EAAe5lB,eAAeQ,WAClD0G,EAAQroB,KAAO+mC,EAAe5lB,eAAenhB,MAAQ,GACrDqoB,EAAQ8e,mBAAqBJ,EAAeI,mBAC5C9e,EAAQ+e,YAAcL,EAAeK,YACjCL,EAAe55B,eACfkb,EAAQlb,eAAiB45B,EAAe55B,mBAEvC,CACD,MAAMC,EAAgB8T,GAAmB6lB,EAAe16B,cAAegc,EAAQ5b,eAAgB4b,EAAQ9b,MAAOw6B,EAAe5lB,eAC7HkH,EAAQlb,eAAiB,CAACC,EAC7B,CACD,OAAOib,CACV,CAQD,4BAAOgf,CAAsBxe,EAAase,EAAoBC,GAC1D,MAAM/e,EAAU,IAAIue,GAepB,OAdAve,EAAQzb,cACJic,EAAYjc,eAAiB0G,GACjC+U,EAAQhc,cAAgBwc,EAAYxc,cACpCgc,EAAQ5b,eAAiBoc,EAAYpc,eACrC4b,EAAQuD,gBAAkB/C,EAAY+C,gBACtCvD,EAAQ9b,MAAQsc,EAAY5H,SAC5BoH,EAAQ/b,YAAcuc,EAAYvc,YAClC+b,EAAQ3b,SAAWmc,EAAYnc,SAC/B2b,EAAQroB,KAAO6oB,EAAY7oB,KAC3BqoB,EAAQzG,UAAYiH,EAAYjH,UAChCyG,EAAQ8e,mBAAqBA,EAC7B9e,EAAQ+e,YAAcA,EAEtB/e,EAAQlb,eAAiB/F,MAAMkgC,KAAKze,EAAY1b,gBAAgB+a,UAAY,IACrEG,CACV,CAMD,4BAAOkf,CAAsBC,EAAkBC,EAAUzhC,EAAQ0hC,EAAWvmB,GAExE,GAAMsmB,IAAanO,IACfmO,IAAanO,GAAqB,CAElC,GAAIkO,EACA,IACI,MAAM16B,EAAasoB,GAAgBoS,EAAkBE,EAAUtuB,cAC/D,GAAItM,EAAW2oB,KAAO3oB,EAAW4oB,KAC7B,MAAO,GAAG5oB,EAAW2oB,OAAO3oB,EAAW4oB,MAE9C,CACD,MAAO70B,GAAM,CAEjBmF,EAAOhB,QAAQ,6BAClB,CAED,OAAOmc,GAAeE,KAAO,EAChC,CAKD,sBAAOsmB,CAAgBpc,GACnB,QAAKA,IAGGA,EAAOgM,eAAe,kBAC1BhM,EAAOgM,eAAe,gBACtBhM,EAAOgM,eAAe,UACtBhM,EAAOgM,eAAe,mBACtBhM,EAAOgM,eAAe,aACtBhM,EAAOgM,eAAe,iBAC7B,CAOD,yBAAOqQ,CAAmBC,EAAUC,EAAUC,GAC1C,IAAKF,IAAaC,EACd,OAAO,EAEX,IAAIE,GAAc,EAClB,GAAID,EAAe,CACf,MAAME,EAAkBJ,EAAS1mB,eAC7B,CAAA,EACE+mB,EAAkBJ,EAAS3mB,eAC7B,CAAA,EAEJ6mB,EACIC,EAAeE,MAAQD,EAAeC,KAClCF,EAAeG,QAAUF,EAAeE,KACnD,CACD,OAAQP,EAASx7B,gBAAkBy7B,EAASz7B,eACxCw7B,EAASp7B,iBAAmBq7B,EAASr7B,gBACrCo7B,EAASn7B,WAAao7B,EAASp7B,UAC/Bm7B,EAAS5mB,WAAa6mB,EAAS7mB,UAC/B4mB,EAASjmB,YAAckmB,EAASlmB,WAChCimB,EAASv7B,cAAgBw7B,EAASx7B,aAClCu7B,EAASjc,kBAAoBkc,EAASlc,iBACtCoc,CACP;6CCtNL,MAAMK,GAAgB,kBAChBC,GAA2B,6BAC3BC,GAAsB,wBACtBC,GAAe,iBAKfC,GAAW,YCAXC,GAAwC,CDHlB,uBACJ,mBACF,iBCKlBD,GACAD,IAEEG,GAAyC,CAC3C,eACA,oBACA,eACA,wBACA,mBACA,aAEEC,GAAuC,CACzCP,CAACA,IAAgB,uDACjBC,CAACA,IAA2B,sJAC5BC,CAACA,IAAsB,6BACvBE,CAACA,IAAW,gIACZD,CAACA,IAAe,kIAuBpB,MAAMK,WAAqCpzB,GACvC,WAAA7V,CAAY8V,EAAW1U,EAAc8U,EAAUzU,EAAWC,EAASL,EAAeyvB,EAAQ+R,GACtF3iC,MAAM4V,EAAW1U,EAAc8U,GAC/BvT,OAAOqT,eAAe7V,KAAM8oC,GAA6BhzB,WACzD9V,KAAKsB,UAAYA,GAAa8O,GAAUyB,aACxC7R,KAAKuB,QAAUA,GAAW6O,GAAUyB,aACpC7R,KAAKkB,cAAgBA,GAAiBkP,GAAUyB,aAChD7R,KAAK2wB,OAASA,GAAUvgB,GAAUyB,aAClC7R,KAAKC,KAAO,+BACZD,KAAK0iC,QAAUA,CAClB,EAwBL,SAASqG,GAAmCpzB,GACxC,OAAO,IAAImzB,GAA6BnzB,EAAWkzB,GAAqClzB,GAC5F;6CCjFA,MAAMqzB,GAMF,sBAAOC,CAAgBtB,EAAWuB,EAAWC,GACzC,MAAMC,EAAeJ,GAAcK,qBAAqB1B,EAAWwB,GACnE,OAAOD,EACD,GAAGE,IAAeh5B,GAAUW,iBAAiBm4B,IAC7CE,CACT,CAMD,2BAAOC,CAAqB1B,EAAWwB,GACnC,IAAKxB,EACD,MAAMzuB,GAAsBlB,IAGhC,MAAMsxB,EAAW,CACbxZ,GAAI6X,EAAUvuB,iBAEd+vB,IACAG,EAASH,KAAOA,GAEpB,MAAMI,EAAc3oC,KAAKmL,UAAUu9B,GACnC,OAAO3B,EAAUruB,aAAaiwB,EACjC,CAMD,wBAAOC,CAAkB7B,EAAW1+B,GAChC,IAAK0+B,EACD,MAAMzuB,GAAsBlB,IAEhC,IAAK/O,EACD,MAAMiQ,GAAsBtC,IAEhC,IAEI,MAAM6yB,EAAaxgC,EAAMzF,MAAM4M,GAAUW,gBACnCq4B,EAAeK,EAAW,GAC1BP,EAAYO,EAAWllC,OAAS,EAChCklC,EAAWllB,MAAM,GAAG7kB,KAAK0Q,GAAUW,gBACnCX,GAAUyB,aACV63B,EAAqB/B,EAAUtuB,aAAa+vB,GAC5CO,EAAkB/oC,KAAKC,MAAM6oC,GACnC,MAAO,CACHE,iBAAkBV,GAAa94B,GAAUyB,aACzCu3B,aAAcO,EAErB,CACD,MAAO7oC,GACH,MAAMoY,GAAsBtC,GAC/B,CACJ;6CC9DL,MAAMizB,GACE,KAER,MAAMC,GACF,WAAAjqC,CAAY2lC,EAAa7d,GACrB3nB,KAAKwlC,YAAcA,EACnBxlC,KAAK2nB,kBAAoBA,CAC5B,CAOD,iBAAMoiB,CAAY7a,EAASjpB,GACvBjG,KAAK2nB,mBAAmBwL,oBAAoBnB,GAAuC9C,EAAQhuB,eAC3F,MAAM8oC,QAAexQ,GAAYx5B,KAAKiqC,YAAYxP,KAAKz6B,MAAOgyB,GAAuC/rB,EAAQjG,KAAK2nB,kBAAmBuH,EAAQhuB,cAAxHs4B,CAAuItK,GACtJgb,EAAelqC,KAAKwlC,YAAYjsB,gBAAgB3Y,KAAKmL,UAAUi+B,IACrE,MAAO,CACHlc,IAAKkc,EAAOlc,IACZoc,eAEP,CAMD,iBAAMD,CAAY/a,GACdlvB,KAAK2nB,mBAAmBwL,oBAAoBnB,GAAuC9C,EAAQhuB,eAE3F,MAAO,CACH4sB,UAFwB9tB,KAAKwlC,YAAY/rB,uBAAuByV,GAGhEib,QAASN,GAEhB,CAOD,kBAAMO,CAAa/f,EAAaxb,EAAOqgB,GACnC,OAAOlvB,KAAKqqC,YAAYhgB,EAAaxb,EAAOqgB,EAC/C,CASD,iBAAMmb,CAAYC,EAASz7B,EAAOqgB,EAASyB,GAEvC,MAAMkS,sBAAEA,EAAqBC,mBAAEA,EAAkBC,UAAEA,EAASwH,SAAEA,EAAQC,WAAEA,GAAgBtb,EAClFub,EAAoB3H,EACpB,IAAI7e,GAAU6e,QACdjhC,EACA6oC,EAAwBD,GAAmB/lB,mBACjD,OAAO1kB,KAAKwlC,YAAY5rB,QAAQ,CAC5B+wB,GAAIL,EACJM,GAAI9P,KACJ+P,EAAGhI,GAAuBiI,cAC1BC,EAAGL,GAAuB/lB,gBAC1B0jB,MAAOkC,GAAYvqC,KAAKwlC,YAAYpsB,gBACpC4xB,EAAGN,GAAuBllB,aAC1BylB,EAAGP,GAAuBjlB,YACpB,CAAC,GAAIilB,EAAsBjlB,kBAC3B5jB,EACNqpC,cAAenI,QAAalhC,KACzB8uB,GACJ9hB,EAAO27B,EAAYtb,EAAQhuB,cACjC;6CC3ED,MAAMiqC,GACN,WAAAtrC,CAAYurC,EAAYC,GACpBrrC,KAAKf,MAAQmsC,EACbprC,KAAKqrC,WAAaA,CACrB,CAID,mBAAIC,GACA,OAAOtrC,KAAKqrC,UACf,CAID,cAAID,GACA,OAAOprC,KAAKf,KACf;6CCEL,MAAMssC,GACF,WAAA1rC,CAAYgO,EAAU29B,EAAc7D,EAAW1hC,EAAQm/B,EAAmBD,EAAmBxd,GACzF3nB,KAAK6N,SAAWA,EAChB7N,KAAKwrC,aAAeA,EACpBxrC,KAAK2nC,UAAYA,EACjB3nC,KAAKiG,OAASA,EACdjG,KAAKolC,kBAAoBA,EACzBplC,KAAKmlC,kBAAoBA,EACzBnlC,KAAK2nB,kBAAoBA,CAC5B,CAMD,qBAAA8jB,CAAsBC,EAAgBC,GAElC,GAAID,EAAenrC,OACfmrC,EAAejrC,mBACfirC,EAAe91B,SAAU,CACzB,MAAMg2B,EAAY,aAAaF,EAAerqC,aAAe+O,GAAU2B,8BAA8B25B,EAAepqC,WAAa8O,GAAU2B,gCAAgC25B,EAAejrC,mBAAqB2P,GAAU2B,mCAAmC25B,EAAevqC,gBAAkBiP,GAAU2B,6BAA6B25B,EAAelqC,UAAY4O,GAAU2B,gBACnW85B,EAAgBH,EAAerqC,aAAakD,OAC5CmnC,EAAerqC,YAAY,QAC3BQ,EACAiqC,EAAc,IAAIrJ,GAAYiJ,EAAenrC,MAAOqrC,EAAWF,EAAe91B,SAAUi2B,EAAeH,EAAezgC,QAE5H,GAAI0gC,GACAD,EAAezgC,QACfygC,EAAezgC,QAAUwH,IACzBi5B,EAAezgC,QAAUwH,GAGzB,YAFAzS,KAAKiG,OAAOhB,QAAQ,6HAA6H6mC,KAKhJ,GAAIH,GACLD,EAAezgC,QACfygC,EAAezgC,QAAUwH,IACzBi5B,EAAezgC,QAAUwH,GAGzB,YAFAzS,KAAKiG,OAAOhB,QAAQ,sHAAsH6mC,KAI9I,GJMZ,SAAoCn2B,EAAWo2B,EAAah2B,GACxD,MAAMi2B,IAAmCr2B,GACrCgzB,GAAsChkC,QAAQgR,IAAc,EAC1Ds2B,IAAkCl2B,GACpC6yB,GAAuCjkC,QAAQoR,IAAa,EAC1Dm2B,IAAmCH,GACrCpD,GAAsCwD,KAAMC,GACjCL,EAAYpnC,QAAQynC,IAAgB,GAEnD,OAAQJ,GACJE,GACAD,CACR,CIlBgBI,CAA2BX,EAAenrC,MAAOmrC,EAAejrC,kBAAmBirC,EAAe91B,UAClG,MAAM,IAAIkzB,GAA6B4C,EAAenrC,MAAOmrC,EAAejrC,kBAAmBirC,EAAe91B,SAAU81B,EAAepqC,WAAa8O,GAAUyB,aAAc65B,EAAelqC,UAAY4O,GAAUyB,aAAc65B,EAAevqC,gBAAkBiP,GAAUyB,aAAc65B,EAAe/a,QAAUvgB,GAAUyB,aAAcg6B,GAE7U,MAAMC,CACT,CACJ,CAMD,+BAAMQ,CAA0BC,EAAqBnb,EAAWob,EAActd,EAASud,EAAiBv9B,EAAmBw9B,EAA8BC,EAAgCC,GAGrL,IAAIxrB,EAqBAyrB,EApBJ,GAHA7sC,KAAK2nB,mBAAmBwL,oBAAoBnB,GAA6Cua,EAAoBprC,gBAGzGorC,EAAoBO,SAAU,CAG9B,GAFA1rB,EAAgBkB,GAAmBiqB,EAAoBO,UAAY18B,GAAUyB,aAAc7R,KAAK2nC,UAAUtuB,cAEtGozB,GAAmBA,EAAgBpE,OAC/BjnB,EAAcinB,QAAUoE,EAAgBpE,MACxC,MAAMnvB,GAAsBnC,IAIpC,GAAImY,EAAQlM,QAA6B,IAAnBkM,EAAQlM,OAAc,CACxC,MAAMD,EAAW3B,EAAc2rB,UAC/B,IAAKhqB,EACD,MAAM7J,GAAsBlC,IAEhC8L,GAAYC,EAAUmM,EAAQlM,OACjC,CACJ,CAEDhjB,KAAK4iC,sBAAwBiE,GAAcW,sBAAsB+E,EAAoBz/B,aAAesD,GAAUyB,aAAcuf,EAAUvkB,cAAe7M,KAAKiG,OAAQjG,KAAK2nC,UAAWvmB,GAG5KqrB,GAAqBA,EAAgBxjC,QACvC4jC,EAAkB7D,GAAcQ,kBAAkBxpC,KAAK2nC,UAAW8E,EAAgBxjC,QAGtFsjC,EAAoB39B,OAChB29B,EAAoB39B,QAAUsgB,EAAQG,aAAUxtB,EACpD,MAAMooB,EAAcjqB,KAAKgtC,oBAAoBT,EAAqBnb,EAAWob,EAActd,EAAS9N,EAAelS,EAAmBu9B,GACtI,IAAIQ,EACJ,IAYI,GAXIjtC,KAAKmlC,mBAAqBnlC,KAAKolC,oBAC/BplC,KAAKiG,OAAOlB,QAAQ,kDACpBkoC,EAAe,IAAI9B,GAAkBnrC,KAAKolC,mBAAmB,SACvDplC,KAAKmlC,kBAAkB+H,kBAAkBD,IAQ/CP,IACCC,GACD1iB,EAAY3B,QAAS,CACrB,MAAM7f,EAAMzI,KAAKwrC,aAAa1Z,mBAAmB7H,EAAY3B,QAAQG,kBAErE,IADgBzoB,KAAKwrC,aAAa/f,WAAWhjB,EAAKymB,EAAQhuB,eAGtD,OADAlB,KAAKiG,OAAOhB,QAAQ,6GACPsmC,GAAgB4B,6BAA6BntC,KAAK2nC,UAAWvW,EAAWnH,GAAa,EAAOiF,EAAS9N,EAAeyrB,OAAiBhrC,EAAW+qC,EAEpK,OACK5sC,KAAKwrC,aAAaxhB,gBAAgBC,EAAaiF,EAAQhuB,cAAeguB,EAAQhF,aACvF,CACO,QACAlqB,KAAKmlC,mBACLnlC,KAAKolC,mBACL6H,IACAjtC,KAAKiG,OAAOlB,QAAQ,uDACd/E,KAAKmlC,kBAAkBiI,iBAAiBH,GAErD,CACD,OAAO1B,GAAgB4B,6BAA6BntC,KAAK2nC,UAAWvW,EAAWnH,GAAa,EAAOiF,EAAS9N,EAAeyrB,EAAiBN,EAAqBK,EACpK,CAOD,mBAAAI,CAAoBT,EAAqBnb,EAAWob,EAActd,EAAS9N,EAAelS,EAAmBu9B,GACzG,MAAMzqC,EAAMovB,EAAUoQ,oBACtB,IAAKx/B,EACD,MAAMkX,GAAsBpB,IAEhC,MAAMu1B,EAAiBzG,GAA6BxlB,GAEpD,IAAIksB,EACAC,ElB/IZ,IAA6BjhC,EAAeC,EAAa8V,EAASxU,EAAUqT,EkBgJhEqrB,EAAoBO,UAAc1rB,IlBhJjB9U,EkBiJmBtM,KAAK4iC,sBlBjJTr2B,EkBiJgCvK,ElBjJnBqgB,EkBiJwBkqB,EAAoBO,SlBjJnCj/B,EkBiJ6C7N,KAAK6N,SlBjJxCqT,EkBiJkDmsB,GAAkB,GAApIC,ElBhJc,CAClB3/B,eAAgB8F,GAAeC,SAC/BpH,cAAeA,EACfC,YAAaA,EACbsB,SAAUA,EACVC,OAAQuU,EACR7V,MAAO0U,EACPssB,cAAe9yB,KAAKuI,MAAMwqB,YkB0ItBF,EAqJZ,SAA6B/B,EAAcpa,EAAW9kB,EAAe+M,EAAcnY,EAAekgB,EAAerU,EAAYR,EAAa8gC,EAAgBZ,EAAiB5gB,EAAiB5lB,GACxLA,GAAQlB,QAAQ,2BAEhB,MACM2oC,EADclC,EAAangB,iBACEsiB,KAAMC,GAC9BA,EAAW/pC,WAAWyI,IAEjC,IAAIihC,EAAgB,KAChBG,IACAH,EAAgB/B,EAAa/f,WAAWiiB,EAAgBxsC,IAE5D,MAAM2sC,EAAcN,GAChB1G,GAAcE,cAAc,CACxBz6B,gBACA8U,gBACArU,aACAR,cACA66B,mBAAoBqF,GAAiBqB,sBACrCzG,YAAaoF,GAAiBsB,aAC9BliB,gBAAiBA,GAClBuF,EAAW/X,GACZjM,EAAiBygC,EAAYzgC,gBAAkB,GAC/C8T,EAAWmsB,GAAkBQ,EAAYrhC,MAC/C,GAAI0U,IACC9T,EAAeugC,KAAMtgC,GACXA,EAAc6T,WAAaA,GAClC,CACJ,MAAM8sB,EAAmB7sB,GAAmB7U,EAAeuhC,EAAYnhC,eAAgBwU,EAAUE,GACjGhU,EAAetJ,KAAKkqC,EACvB,CAED,OADAH,EAAYzgC,eAAiBA,EACtBygC,CACX;6CArL4BI,CAAoBjuC,KAAKwrC,aAAcpa,EAAWpxB,KAAK4iC,sBAAuB5iC,KAAK2nC,UAAUtuB,aAAc6V,EAAQhuB,cAAekgB,EAAemrB,EAAoBz/B,YAAa9K,EAAKqrC,EAAgBZ,OAAiB5qC,EACxO7B,KAAKiG,SAGT,IAAIioC,EAAoB,KACxB,GAAI3B,EAAoB4B,aAAc,CAElC,MAAMC,EAAiB7B,EAAoBnlC,MACrCuX,GAASI,WAAWwtB,EAAoBnlC,OACxC,IAAIuX,GAASuQ,EAAQxtB,QAAU,IAK/B2sC,GAAuD,iBAAnC9B,EAAoB+B,WACxC3K,SAAS4I,EAAoB+B,WAAY,IACzC/B,EAAoB+B,aAAe,EACnCC,GAA8D,iBAAvChC,EAAoBiC,eAC3C7K,SAAS4I,EAAoBiC,eAAgB,IAC7CjC,EAAoBiC,iBAAmB,EACvCC,GAAuD,iBAAnClC,EAAoBmC,WACxC/K,SAAS4I,EAAoBmC,WAAY,IACzCnC,EAAoBmC,kBAAe7sC,EACnC8sC,EAAyBnC,EAAe6B,EACxCO,EAAiCD,EAAyBJ,EAC1DM,EAAmBJ,GAAaA,EAAY,EAC5CjC,EAAeiC,OACf5sC,EAENqsC,ElBxJZ,SAAiC5hC,EAAeC,EAAa8d,EAAaxc,EAAUqT,EAAUxf,EAAQ6M,EAAWugC,EAAcz1B,EAAc1K,EAAWI,EAAWG,EAAmBL,EAAOG,EAAiBC,GAC1M,MAAMf,EAAW,CACb5B,cAAeA,EACfqB,eAAgB8F,GAAeE,aAC/B7F,OAAQuc,EACRhc,SAAUysB,KAAa2S,WACvBl/B,UAAWA,EAAUk/B,WACrBh/B,kBAAmBqgC,EAAarB,WAChClhC,YAAaA,EACbsB,SAAUA,EACVrB,MAAO0U,EACP/S,OAAQzM,EACRqN,UAAWA,GAAa6F,GAAqBC,OAC7C24B,cAAe9yB,KAAKuI,MAAMwqB,YAgB9B,GAdIv+B,IACAhB,EAASgB,kBAAoBA,GAE7BP,IACAT,EAASS,UAAYA,EAAU8+B,YAE/Bz+B,IACAd,EAASc,gBAAkBA,EAC3Bd,EAASe,oBAAsBA,GAM/Bf,EAASa,WAAW6Q,gBACpBhL,GAAqBC,OAAO+K,cAE5B,OADA1R,EAASP,eAAiB8F,GAAeG,8BACjC1F,EAASa,WACb,KAAK6F,GAAqBE,IAEtB,MAAM4b,EAAcpO,GAAmB+H,EAAahR,GACpD,IAAKqX,GAAaqe,KAAKjhB,IACnB,MAAM5U,GAAsBZ,IAEhCpK,EAASW,MAAQ6hB,EAAYqe,IAAIjhB,IACjC,MACJ,KAAKlZ,GAAqBG,IACtB7G,EAASW,MAAQA,EAG7B,OAAOX,CACX,CkB0GgC8gC,CAAwBhvC,KAAK4iC,sBAAuB5gC,EAAKuqC,EAAoB4B,aAAcnuC,KAAK6N,SAAUw/B,GAAkBjc,EAAUwD,QAAU,GAAIwZ,EAAeptB,cAAe2tB,EAAwBC,EAAgC5uC,KAAK2nC,UAAUtuB,aAAcw1B,EAAkBtC,EAAoBz9B,WAAYI,EAAmBq9B,EAAoB39B,OAAQsgB,EAAQyB,OAAQzB,EAAQjgB,oBACvZ,CAED,IAAIggC,EAAqB,KACzB,GAAI1C,EAAoBtG,cAAe,CACnC,IAAIiJ,EACJ,GAAI3C,EAAoB4C,yBAA0B,CAK9CD,EAAc1C,GAHV,iBADuBD,EAAoB4C,yBAEzCxL,SAAS4I,EAAoB4C,yBAA0B,IACvD5C,EAAoB4C,yBAE7B,CACDF,ElB/GZ,SAAkC3iC,EAAeC,EAAage,EAAc1c,EAAU2B,EAAUN,EAAmBX,GAC/G,MAAMe,EAAW,CACb3B,eAAgB8F,GAAeI,cAC/BvH,cAAeA,EACfC,YAAaA,EACbsB,SAAUA,EACVC,OAAQyc,EACRijB,cAAe9yB,KAAKuI,MAAMwqB,YAW9B,OATIv+B,IACAI,EAASJ,kBAAoBA,GAE7BM,IACAF,EAASE,SAAWA,GAEpBjB,IACAe,EAASf,UAAYA,EAAUk/B,YAE5Bn+B,CACX,CkB4FiC8/B,CAAyBpvC,KAAK4iC,sBAAuB5gC,EAAKuqC,EAAoBtG,cAAejmC,KAAK6N,SAAU0+B,EAAoB8C,KAAMngC,EAAmBggC,EACjL,CAED,IAAII,EAAoB,KAQxB,OAPI/C,EAAoB8C,OACpBC,EAAoB,CAChBzhC,SAAU7N,KAAK6N,SACftB,YAAavK,EACbwN,SAAU+8B,EAAoB8C,OAG/B,CACH/mB,QAASilB,EACTlrB,QAASirB,EACTjjB,YAAa6jB,EACb3jB,aAAc0kB,EACdt/B,YAAa2/B,EAEpB,CAWD,yCAAanC,CAA6BxF,EAAWvW,EAAWnH,EAAaslB,EAAgBrgB,EAAS9N,EAAeouB,EAAcjD,EAAqBpG,GACpJ,IAGI2I,EACAngC,EAJA0b,EAAcja,GAAUyB,aACxBu8B,EAAiB,GACjB7/B,EAAY,KAGZiB,EAAWY,GAAUyB,aACzB,GAAIoY,EAAYI,YAAa,CAKzB,GAAIJ,EAAYI,YAAYtb,YACxB6F,GAAqBE,KACpBoa,EAAQugB,OASTplB,EAAcJ,EAAYI,YAAYvc,WATrB,CACjB,MAAM4hC,EAAoB,IAAI5F,GAAkBnC,IAC1C75B,OAAEA,EAAMe,MAAEA,GAAUob,EAAYI,YACtC,IAAKxb,EACD,MAAMqK,GAAsBR,IAEhC2R,QAAoBqlB,EAAkBtF,aAAat8B,EAAQe,EAAOqgB,EACrE,CAIDkf,EAAiBzvB,GAASI,WAAWkL,EAAYI,YAAYlc,QAAQ4R,UAErExR,EAAY2sB,GAAkBjR,EAAYI,YAAY9b,WACtDugC,EAAe5T,GAAkBjR,EAAYI,YAAY5b,mBACrDwb,EAAYI,YAAY1b,YACxBA,EAAYusB,GAAkBjR,EAAYI,YAAY1b,WAE7D,CACGsb,EAAYta,cACZH,EACIya,EAAYta,YAAYH,WAAauE,GAC/BA,GACA,IAEd,MAAM2hB,EAAMtU,GAAeC,KAAOD,GAAeE,KAAO,GAClDC,EAAMH,GAAeG,KAAO,GAE9BgrB,GAAqBoD,eAAmB1lB,EAAY3B,UACpD2B,EAAY3B,QAAQuD,gBAChB0gB,GAAqBoD,eAE7B,MAAM7mB,EAAcmB,EAAY3B,QAC1BvG,GAA+BkI,EAAY3B,QAAQG,sBAAkB5mB,EACvEuf,EAAe6I,EAAY5H,SAASvU,QAClC,KACN,MAAO,CACHsjB,UAAWA,EAAUL,mBACrB6e,SAAUla,EACVxU,SAAUK,EACV7f,OAAQ0sC,EACR9lB,QAASQ,EACTzG,QAAS4H,GAAa5H,SAASvU,QAAU,GACzCsT,cAAeA,GAAiB,CAAE,EAClCiJ,YAAaA,EACbwlB,UAAWN,EACXhhC,UAAWA,EACXugC,aAAcA,EACdngC,UAAWA,EACXzN,cAAeguB,EAAQhuB,cACvBilC,UAAWA,GAAa/1B,GAAUyB,aAClCrC,SAAUA,EACVT,UAAWkb,EAAYI,aAAatb,WAAaqB,GAAUyB,aAC3D5I,MAAOumC,EACDA,EAAa5F,iBACbx5B,GAAUyB,aAChBu1B,mBAAoBnd,EAAY3B,SAAS8e,oBACrCh3B,GAAUyB,aACdw1B,YAAapd,EAAY3B,SAAS+e,aAAej3B,GAAUyB,aAC3DqE,KAAMq2B,GAAqBuD,SAC3BC,kBAAkB,EAEzB,EClTLjlC,eAAeklC,GAAmBvb,EAAiB5mB,EAAU+vB,GACzD,GAA+B,iBAApBnJ,EACP,OAAOA,EAOP,OAAOA,EAJQ,CACX5mB,SAAUA,EACV+vB,cAAeA,GAI3B;6CCeA,MAAMqS,WAAgC7L,GAClC,WAAAvkC,CAAYwkC,EAAe1c,GACvB5nB,MAAMskC,EAAe1c,GAErB3nB,KAAKkwC,oBAAqB,EAC1BlwC,KAAKmwC,kBACDnwC,KAAKhB,OAAOk2B,YAAY9D,UAAUryB,QAAQqxC,aAAaxZ,aAC9D,CAMD,kBAAMyZ,CAAanhB,EAASud,GAExB,GADAzsC,KAAK2nB,mBAAmBwL,oBAAoBnB,GAA0C9C,EAAQhuB,gBACzFguB,EAAQhZ,KACT,MAAMgD,GAAsB7B,IAEhC,MAAMm1B,EAAe1R,KACf7U,QAAiBuT,GAAYx5B,KAAKswC,oBAAoB7V,KAAKz6B,MAAOgyB,GAAiDhyB,KAAKiG,OAAQjG,KAAK2nB,kBAAmBuH,EAAQhuB,cAA/Is4B,CAA8Jx5B,KAAKoxB,UAAWlC,GAE/LiX,EAAYlgB,EAASyW,UAAU9pB,IAC/B29B,EAAkB,IAAIhF,GAAgBvrC,KAAKhB,OAAOk2B,YAAYrnB,SAAU7N,KAAK68B,aAAc78B,KAAKwlC,YAAaxlC,KAAKiG,OAAQjG,KAAKhB,OAAOomC,kBAAmBplC,KAAKhB,OAAOmmC,kBAAmBnlC,KAAK2nB,mBAGnM,OADA4oB,EAAgB9E,sBAAsBxlB,EAASyU,MACxClB,GAAY+W,EAAgBjE,0BAA0B7R,KAAK8V,GAAkBve,GAA6ChyB,KAAKiG,OAAQjG,KAAK2nB,kBAAmBuH,EAAQhuB,cAAvKs4B,CAAsLvT,EAASyU,KAAM16B,KAAKoxB,UAAWob,EAActd,EAASud,OAAiB5qC,OAAWA,OAAWA,EAAWskC,EACxS,CAMD,YAAAqK,CAAaC,GAET,IAAKA,EACD,MAAMvzB,GAA+BjB,IAEzC,MAAM8I,EAAc/kB,KAAK0wC,2BAA2BD,GAEpD,OAAOxsB,GAAUa,kBAAkB9kB,KAAKoxB,UAAU0M,mBAAoB/Y,EACzE,CAMD,yBAAMurB,CAAoBlf,EAAWlC,GACjClvB,KAAK2nB,mBAAmBwL,oBAAoBnB,GAAiD9C,EAAQhuB,eACrG,MAAMyvC,EAAwB3wC,KAAK0mC,2BAA2BxX,GACxDkP,EAAWna,GAAUa,kBAAkBsM,EAAUwM,cAAe+S,GAChEC,QAAoBpX,GAAYx5B,KAAK6wC,uBAAuBpW,KAAKz6B,MAAOgyB,GAAoDhyB,KAAKiG,OAAQjG,KAAK2nB,kBAAmBuH,EAAQhuB,cAArJs4B,CAAoKtK,GAC9L,IAAI4hB,EACJ,GAAI5hB,EAAQniB,WACR,IACI,MAAMA,EAAasoB,GAAgBnG,EAAQniB,WAAY/M,KAAKwlC,YAAYnsB,cACxEy3B,EAAgB,CACZnmB,WAAY,GAAG5d,EAAW2oB,MAAMliB,KAAmCzG,EAAW4oB,OAC9EgQ,KAAMvQ,GAEb,CACD,MAAOt0B,GACHd,KAAKiG,OAAOlB,QAAQ,+CAAiDjE,EACxE,CAEL,MAAM47B,EAAU18B,KAAKylC,0BAA0BqL,GAAiB5hB,EAAQ4hB,eAClE3N,EAAaR,GAAqB3iC,KAAKhB,OAAOk2B,YAAYrnB,SAAUqhB,GAC1E,OAAOsK,GAAYx5B,KAAK4lC,2BAA2BnL,KAAKz6B,MAAOgyB,GAAqEhyB,KAAKiG,OAAQjG,KAAK2nB,kBAAmBuH,EAAQhuB,cAA1Ks4B,CAAyL4E,EAAUwS,EAAalU,EAASyG,EAAYjU,EAAQhuB,cAAe8wB,GACtQ,CAKD,4BAAM6e,CAAuB3hB,GACzBlvB,KAAK2nB,mBAAmBwL,oBAAoBnB,GAAoD9C,EAAQhuB,eACxG,MAAM0iB,EAAa,IAAIpb,IAQvB,GAPAsuB,GAAYlT,EAAYsL,EAAQoH,kBAC5BpH,EAAQ8T,sBAAsBpN,KAC9B51B,KAAKhB,OAAOk2B,YAAYrnB,UAKvB7N,KAAKkwC,mBAQNnZ,GAAenT,EAAYsL,EAAQ8H,kBANnC,IAAK9H,EAAQ8H,YACT,MAAM9Z,GAA+BzB,IAyB7C,GAjBAib,GAAU9S,EAAYsL,EAAQxtB,QAAQ,EAAM1B,KAAKmwC,mBzB2FzD,SAA8BvsB,EAAY1N,GACtC0N,EAAWhb,IDhMF,OCgMYsN,EACzB,CyB3FQ66B,CAAqBntB,EAAYsL,EAAQhZ,MAEzCyhB,GAAe/T,EAAY5jB,KAAKhB,OAAO44B,aACvCC,GAAwBjU,EAAY5jB,KAAKhB,OAAOkmC,UAAUpQ,aAC1DqE,GAAcvV,GACV5jB,KAAKg5B,yBAA2B/D,GAAmBj1B,KAAKhB,SACxD+5B,GAAmBnV,EAAY5jB,KAAKg5B,wBAGpC9J,EAAQ8hB,czBqGpB,SAAyBptB,EAAYotB,GACjCptB,EAAWhb,IDlNO,gBCkNYooC,EAClC,CyBtGYC,CAAgBrtB,EAAYsL,EAAQ8hB,cAEpChxC,KAAKhB,OAAOimC,kBAAkBzQ,cAC9BwD,GAAgBpU,EAAY5jB,KAAKhB,OAAOimC,kBAAkBzQ,cAE1Dx0B,KAAKhB,OAAOimC,kBAAkBxQ,gBAAiB,CAC/C,MAAMA,EAAkBz0B,KAAKhB,OAAOimC,kBAAkBxQ,gBACtDwD,GAAmBrU,QAAkBosB,GAAmBvb,EAAgByc,UAAWlxC,KAAKhB,OAAOk2B,YAAYrnB,SAAUqhB,EAAQ4T,qBAC7H5K,GAAuBtU,EAAY6Q,EAAgB0c,cACtD,CAGD,GAFA/Y,GAAaxU,EAAYtQ,IACzBglB,GAAc1U,GACVsL,EAAQE,uBAAyBxa,GAAqBE,IAAK,CAC3D,MAAM46B,EAAoB,IAAI5F,GAAkB9pC,KAAKwlC,YAAaxlC,KAAK2nB,mBACvE,IAAIypB,EACJ,GAAKliB,EAAQugB,OAKT2B,EAAapxC,KAAKwlC,YAAYhsB,UAAU0V,EAAQugB,YAL/B,CAEjB2B,SADkC5X,GAAYkW,EAAkB3F,YAAYtP,KAAKiV,GAAoB1d,GAAuChyB,KAAKiG,OAAQjG,KAAK2nB,kBAAmBuH,EAAQhuB,cAAvJs4B,CAAsKtK,EAASlvB,KAAKiG,SACrLikC,YACpC,CAKDvR,GAAY/U,EAAYwtB,EAC3B,MACI,GAAIliB,EAAQE,uBAAyBxa,GAAqBG,IAAK,CAChE,IAAIma,EAAQmiB,OAIR,MAAMn0B,GAA+BX,IAHrCsc,GAAUjV,EAAYsL,EAAQmiB,OAKrC,CAMD,IAAI3L,EACJ,KANKvoB,GAAYC,WAAW8R,EAAQyB,SAC/B3wB,KAAKhB,OAAOk2B,YAAYoC,oBACrBt3B,KAAKhB,OAAOk2B,YAAYoC,mBAAmB/yB,OAAS,IACxD8yB,GAAUzT,EAAYsL,EAAQyB,OAAQ3wB,KAAKhB,OAAOk2B,YAAYoC,oBAG9DpI,EAAQniB,WACR,IACI,MAAMA,EAAasoB,GAAgBnG,EAAQniB,WAAY/M,KAAKwlC,YAAYnsB,cACxEqsB,EAAU,CACN/a,WAAY,GAAG5d,EAAW2oB,MAAMliB,KAAmCzG,EAAW4oB,OAC9EgQ,KAAMvQ,GAEb,CACD,MAAOt0B,GACHd,KAAKiG,OAAOlB,QAAQ,+CAAiDjE,EACxE,MAGD4kC,EAAUxW,EAAQ4hB,cAGtB,GAAI9wC,KAAKhB,OAAOulC,cAAc3Q,sBAAwB8R,EAClD,OAAQA,EAAQC,MACZ,KAAKvQ,GACD,IAEI+B,GAAUvT,EADS4R,GAAiCkQ,EAAQ/a,YAE/D,CACD,MAAO7pB,GACHd,KAAKiG,OAAOlB,QAAQ,mDAChBjE,EACP,CACD,MACJ,KAAKs0B,GACD8B,GAAUtT,EAAY8hB,EAAQ/a,YAmB1C,OAfIuE,EAAQoH,kBACR8C,GAAoBxV,EAAY5jB,KAAKhB,OAAOk2B,YAAYrnB,SAAU7N,KAAKhB,OAAOk2B,YAAY8B,aAE1F9H,EAAQ8T,qBACRxK,GAAwB5U,EAAYsL,EAAQ8T,sBAG5C9T,EAAQoiB,4BACNpiB,EAAQ8T,qBACL9T,EAAQ8T,oBAAoBhN,KACjCwC,GAAwB5U,EAAY,CAChCoS,CAACA,IAAkB,MAG3BK,GAAuBzS,EAAYsL,EAAQhuB,cAAelB,KAAK2nB,mBACxDhE,GAAiBC,EAC3B,CAKD,0BAAA8sB,CAA2BxhB,GACvB,MAAMtL,EAAa,IAAIpb,IAsBvB,OArBI0mB,EAAQqiB,uBzBvJpB,SAAkC3tB,EAAYoT,GAC1CpT,EAAWhb,ID3CS,2BC2CYouB,EACpC,CyBsJYwa,CAAyB5tB,EAAYsL,EAAQqiB,uBAE7CriB,EAAQhuB,eACRw2B,GAAiB9T,EAAYsL,EAAQhuB,eAErCguB,EAAQuiB,azBtJpB,SAAwB7tB,EAAY6tB,GAChC7tB,EAAWhb,IDjDO,gBCiDY6oC,EAClC,CyBqJYC,CAAe9tB,EAAYsL,EAAQuiB,aAEnCviB,EAAQjmB,OACR8uB,GAASnU,EAAYsL,EAAQjmB,OAE7BimB,EAAQyiB,YzB8IpB,SAAuB/tB,EAAY+tB,GAC/B/tB,EAAWhb,ID7UK,cC6UY+oC,EAChC,CyB/IYC,CAAchuB,EAAYsL,EAAQyiB,YAElCziB,EAAQpL,sBACR0U,GAAwB5U,EAAYsL,EAAQpL,sBAE5C9jB,KAAKhB,OAAOk2B,YAAYmQ,eACxB9M,GAAiB3U,GAEdD,GAAiBC,EAAY5jB,KAAKhB,OAAOk2B,YAAYoQ,uBAAwBpW,EAAQpL,qBAC/F;6CC1NL,MAAM+tB,WAA2BzN,GAC7B,WAAAvkC,CAAYwkC,EAAe1c,GACvB5nB,MAAMskC,EAAe1c,EACxB,CACD,kBAAM0oB,CAAanhB,GACflvB,KAAK2nB,mBAAmBwL,oBAAoBnB,GAAkD9C,EAAQhuB,eACtG,MAAMsrC,EAAe1R,KACf7U,QAAiBuT,GAAYx5B,KAAKswC,oBAAoB7V,KAAKz6B,MAAOgyB,GAAyDhyB,KAAKiG,OAAQjG,KAAK2nB,kBAAmBuH,EAAQhuB,cAAvJs4B,CAAsKtK,EAASlvB,KAAKoxB,WAErM+U,EAAYlgB,EAASyW,UAAU9pB,IAC/B29B,EAAkB,IAAIhF,GAAgBvrC,KAAKhB,OAAOk2B,YAAYrnB,SAAU7N,KAAK68B,aAAc78B,KAAKwlC,YAAaxlC,KAAKiG,OAAQjG,KAAKhB,OAAOomC,kBAAmBplC,KAAKhB,OAAOmmC,mBAE3K,OADAoL,EAAgB9E,sBAAsBxlB,EAASyU,MACxClB,GAAY+W,EAAgBjE,0BAA0B7R,KAAK8V,GAAkBve,GAA6ChyB,KAAKiG,OAAQjG,KAAK2nB,kBAAmBuH,EAAQhuB,cAAvKs4B,CAAsLvT,EAASyU,KAAM16B,KAAKoxB,UAAWob,EAActd,OAASrtB,OAAWA,GAAW,EAAMqtB,EAAQ4iB,WAAY3L,EACtS,CAKD,gCAAM4L,CAA2B7iB,GAE7B,IAAKA,EACD,MAAMhS,GAA+BlB,IAIzC,GAFAhc,KAAK2nB,mBAAmBwL,oBAAoBnB,GAAgE9C,EAAQhuB,gBAE/GguB,EAAQ5G,QACT,MAAMpP,GAAsBtB,IAKhC,GAFe5X,KAAK68B,aAAapM,kBAAkBvB,EAAQ5G,QAAQ/b,aAG/D,IACI,aAAaitB,GAAYx5B,KAAKgyC,mCAAmCvX,KAAKz6B,MAAOgyB,GAAwEhyB,KAAKiG,OAAQjG,KAAK2nB,kBAAmBuH,EAAQhuB,cAArLs4B,CAAoMtK,GAAS,EAC7N,CACD,MAAOpuB,GACH,MAAMmxC,EAAoBnxC,aAAagoC,IACnChoC,EAAE6U,YACE2yB,GACF4J,EAAkCpxC,aAAa2hC,IACjD3hC,EAAE6U,YAAcV,IAChBnU,EAAEiV,WAAad,GAEnB,GAAIg9B,GAAqBC,EACrB,OAAO1Y,GAAYx5B,KAAKgyC,mCAAmCvX,KAAKz6B,MAAOgyB,GAAwEhyB,KAAKiG,OAAQjG,KAAK2nB,kBAAmBuH,EAAQhuB,cAArLs4B,CAAoMtK,GAAS,GAIpN,MAAMpuB,CAEb,CAGL,OAAO04B,GAAYx5B,KAAKgyC,mCAAmCvX,KAAKz6B,MAAOgyB,GAAwEhyB,KAAKiG,OAAQjG,KAAK2nB,kBAAmBuH,EAAQhuB,cAArLs4B,CAAoMtK,GAAS,EACvN,CAKD,wCAAM8iB,CAAmC9iB,EAASmgB,GAC9CrvC,KAAK2nB,mBAAmBwL,oBAAoBnB,GAAwE9C,EAAQhuB,eAE5H,MAAMqpB,ExBhFC,EAACpgB,EAAUsvB,EAAWxzB,EAAQyzB,EAAiBx4B,IACnD,IAAI6B,KACPkD,EAAOkV,MAAM,sBAAsBse,KACnC,MAAME,EAAkBD,GAAiBvH,iBAAiBsH,EAAWv4B,GACrE,GAAIA,EAAe,CAEf,MAAM04B,EAAaH,EAAY,YAC/BC,GAAiBnM,gBAAgB,CAAEqM,CAACA,GAAa,GAAK14B,EACzD,CACD,IACI,MAAM2B,EAASsH,KAAYpH,GAK3B,OAJA42B,GAAiBjwB,IAAI,CACjBowB,SAAS,IAEb7zB,EAAOkV,MAAM,yBAAyBse,KAC/B52B,CACV,CACD,MAAO/B,GACHmF,EAAOkV,MAAM,qBAAqBse,KAClC,IACIxzB,EAAOkV,MAAMva,KAAKmL,UAAUjL,GAC/B,CACD,MAAOA,GACHmF,EAAOkV,MAAM,iCAChB,CAID,MAHAwe,GAAiBjwB,IAAI,CACjBowB,SAAS,GACVh5B,GACGA,CACT,GwBmDoBqxC,CAAOnyC,KAAK68B,aAAajN,gBAAgB6K,KAAKz6B,KAAK68B,cAAe7K,GAA+ChyB,KAAKiG,OAAQjG,KAAK2nB,kBAAmBuH,EAAQhuB,cAA9JixC,CAA6KjjB,EAAQ5G,QAAS+mB,EAAMngB,EAAQhuB,mBAAeW,EAAW7B,KAAK2nB,mBAChQ,IAAK4C,EACD,MAAMwe,GAAmCT,IAE7C,GAAI/d,EAAahc,WACb8sB,GAAe9Q,EAAahc,UAAW2gB,EAAQkjB,qCAxEH,KA2E5C,MADApyC,KAAK2nB,mBAAmBgH,UAAU,CAAE0jB,cAAejX,OAAO7Q,EAAahc,YAAc2gB,EAAQhuB,eACvF6nC,GAAmCP,IAG7C,MAAM8J,EAAsB,IACrBpjB,EACH3E,aAAcA,EAAazc,OAC3BshB,qBAAsBF,EAAQE,sBAAwBxa,GAAqBC,OAC3Ei8B,cAAe,CACXnmB,WAAYuE,EAAQ5G,QAAQhc,cAC5Bq5B,KAAMvQ,KAGd,IACI,aAAaoE,GAAYx5B,KAAKqwC,aAAa5V,KAAKz6B,MAAOgyB,GAAkDhyB,KAAKiG,OAAQjG,KAAK2nB,kBAAmBuH,EAAQhuB,cAAzIs4B,CAAwJ8Y,EACxK,CACD,MAAOxxC,GACH,GAAIA,aAAagoC,KACb9oC,KAAK2nB,mBAAmBgH,UAAU,CAAE0jB,cAAejX,OAAO7Q,EAAahc,YAAc2gB,EAAQhuB,eACzFJ,EAAEiV,WAAa2yB,IAAU,CAEzB1oC,KAAKiG,OAAOlB,QAAQ,wEACpB,MAAMwtC,EAAqBvyC,KAAK68B,aAAarN,sBAAsBjF,GACnEvqB,KAAK68B,aAAajP,mBAAmB2kB,EAAoBrjB,EAAQhuB,cACpE,CAEL,MAAMJ,CACT,CACJ,CAMD,yBAAMwvC,CAAoBphB,EAASkC,GAC/BpxB,KAAK2nB,mBAAmBwL,oBAAoBnB,GAAyD9C,EAAQhuB,eAC7G,MAAMyvC,EAAwB3wC,KAAK0mC,2BAA2BxX,GACxDkP,EAAWna,GAAUa,kBAAkBsM,EAAUwM,cAAe+S,GAChEC,QAAoBpX,GAAYx5B,KAAK6wC,uBAAuBpW,KAAKz6B,MAAOgyB,GAA4DhyB,KAAKiG,OAAQjG,KAAK2nB,kBAAmBuH,EAAQhuB,cAA7Js4B,CAA4KtK,GAChMwN,EAAU18B,KAAKylC,0BAA0BvW,EAAQ4hB,eACjD3N,EAAaR,GAAqB3iC,KAAKhB,OAAOk2B,YAAYrnB,SAAUqhB,GAC1E,OAAOsK,GAAYx5B,KAAK4lC,2BAA2BnL,KAAKz6B,MAAOgyB,GAAgEhyB,KAAKiG,OAAQjG,KAAK2nB,kBAAmBuH,EAAQhuB,cAArKs4B,CAAoL4E,EAAUwS,EAAalU,EAASyG,EAAYjU,EAAQhuB,cAAe8wB,GACjQ,CAKD,4BAAM6e,CAAuB3hB,GACzBlvB,KAAK2nB,mBAAmBwL,oBAAoBnB,GAA4D9C,EAAQhuB,eAChH,MAAM0iB,EAAa,IAAIpb,IAoBvB,GAnBAsuB,GAAYlT,EAAYsL,EAAQoH,kBAC5BpH,EAAQ8T,sBAAsBpN,KAC9B51B,KAAKhB,OAAOk2B,YAAYrnB,UACxBqhB,EAAQ8H,aACRD,GAAenT,EAAYsL,EAAQ8H,aAEvCN,GAAU9S,EAAYsL,EAAQxtB,QAAQ,EAAM1B,KAAKhB,OAAOk2B,YAAY9D,UAAUryB,QAAQqxC,aAAaxZ,eACnGwB,GAAaxU,EAAYtQ,IACzBglB,GAAc1U,GACd+T,GAAe/T,EAAY5jB,KAAKhB,OAAO44B,aACvCC,GAAwBjU,EAAY5jB,KAAKhB,OAAOkmC,UAAUpQ,aAC1DqE,GAAcvV,GACV5jB,KAAKg5B,yBAA2B/D,GAAmBj1B,KAAKhB,SACxD+5B,GAAmBnV,EAAY5jB,KAAKg5B,wB1B8DhD,SAAyBpV,EAAY2G,GACjC3G,EAAWhb,IDtNO,gBCsNY2hB,EAClC,C0B9DQioB,CAAgB5uB,EAAYsL,EAAQ3E,cAChCvqB,KAAKhB,OAAOimC,kBAAkBzQ,cAC9BwD,GAAgBpU,EAAY5jB,KAAKhB,OAAOimC,kBAAkBzQ,cAE1Dx0B,KAAKhB,OAAOimC,kBAAkBxQ,gBAAiB,CAC/C,MAAMA,EAAkBz0B,KAAKhB,OAAOimC,kBAAkBxQ,gBACtDwD,GAAmBrU,QAAkBosB,GAAmBvb,EAAgByc,UAAWlxC,KAAKhB,OAAOk2B,YAAYrnB,SAAUqhB,EAAQ4T,qBAC7H5K,GAAuBtU,EAAY6Q,EAAgB0c,cACtD,CACD,GAAIjiB,EAAQE,uBAAyBxa,GAAqBE,IAAK,CAC3D,MAAM46B,EAAoB,IAAI5F,GAAkB9pC,KAAKwlC,YAAaxlC,KAAK2nB,mBACvE,IAAIypB,EACJ,GAAKliB,EAAQugB,OAKT2B,EAAapxC,KAAKwlC,YAAYhsB,UAAU0V,EAAQugB,YAL/B,CAEjB2B,SADkC5X,GAAYkW,EAAkB3F,YAAYtP,KAAKiV,GAAoB1d,GAAuChyB,KAAKiG,OAAQjG,KAAK2nB,kBAAmBuH,EAAQhuB,cAAvJs4B,CAAsKtK,EAASlvB,KAAKiG,SACrLikC,YACpC,CAKDvR,GAAY/U,EAAYwtB,EAC3B,MACI,GAAIliB,EAAQE,uBAAyBxa,GAAqBG,IAAK,CAChE,IAAIma,EAAQmiB,OAIR,MAAMn0B,GAA+BX,IAHrCsc,GAAUjV,EAAYsL,EAAQmiB,OAKrC,CAMD,KALKl0B,GAAYC,WAAW8R,EAAQyB,SAC/B3wB,KAAKhB,OAAOk2B,YAAYoC,oBACrBt3B,KAAKhB,OAAOk2B,YAAYoC,mBAAmB/yB,OAAS,IACxD8yB,GAAUzT,EAAYsL,EAAQyB,OAAQ3wB,KAAKhB,OAAOk2B,YAAYoC,oBAE9Dt3B,KAAKhB,OAAOulC,cAAc3Q,sBAC1B1E,EAAQ4hB,cACR,OAAQ5hB,EAAQ4hB,cAAcnL,MAC1B,KAAKvQ,GACD,IAEI+B,GAAUvT,EADS4R,GAAiCtG,EAAQ4hB,cAAcnmB,YAE7E,CACD,MAAO7pB,GACHd,KAAKiG,OAAOlB,QAAQ,mDAChBjE,EACP,CACD,MACJ,KAAKs0B,GACD8B,GAAUtT,EAAYsL,EAAQ4hB,cAAcnmB,YAWxD,OAPIuE,EAAQoH,kBACR8C,GAAoBxV,EAAY5jB,KAAKhB,OAAOk2B,YAAYrnB,SAAU7N,KAAKhB,OAAOk2B,YAAY8B,aAE1F9H,EAAQ8T,qBACRxK,GAAwB5U,EAAYsL,EAAQ8T,qBAEhD3M,GAAuBzS,EAAYsL,EAAQhuB,cAAelB,KAAK2nB,mBACxDhE,GAAiBC,EAC3B;6CCpNL,MAAM6uB,WAAyBrO,GAC3B,WAAAvkC,CAAYwkC,EAAe1c,GACvB5nB,MAAMskC,EAAe1c,EACxB,CAKD,wBAAM+qB,CAAmBxjB,GACrBlvB,KAAK2nB,mBAAmBwL,oBAAoBnB,GAAsD9C,EAAQhuB,eAC1G,IAAIyxC,EAAmBt9B,GACvB,GAAI6Z,EAAQ0jB,eACN5yC,KAAKhB,OAAO0lC,aAAa3Q,4BACtB5W,GAAYC,WAAW8R,EAAQyB,QAGpC,MADA3wB,KAAK6yC,gBAAgBx9B,GAAsC6Z,EAAQhuB,eAC7DgY,GAAsBd,IAGhC,IAAK8W,EAAQ5G,QACT,MAAMpP,GAAsBtB,IAEhC,MAAMk7B,EAAkB5jB,EAAQ5G,QAAQpH,UrBmwBhD,SAAsCkQ,GAClC,MACM+Q,EADe,IAAIle,GAAUmN,GACS1M,mBAStCxD,EAAWihB,EAAuBvd,aAAaL,OAAO,GAAG,IAAI3E,cACnE,OAAQsB,GACJ,KAAKrO,GAAsBC,OAC3B,KAAKD,GAAsBE,cAC3B,KAAKF,GAAsBG,UACvB,OACJ,QACI,OAAOkO,EAEnB,CqBtxBY6xB,CAA6B7jB,EAAQkC,WACnCrI,EAAY/oB,KAAK68B,aAAatT,eAC9B2kB,EAAoBluC,KAAK68B,aAAa5N,eAAeC,EAAQ5G,QAAS4G,EAASnG,EAAW+pB,GAChG,IAAK5E,EAGD,MADAluC,KAAK6yC,gBAAgBx9B,GAAqC6Z,EAAQhuB,eAC5DgY,GAAsBd,IAE3B,GvBWe/J,EuBXQ6/B,EAAkB7/B,SvBY9B+sB,OAAO/sB,GACNysB,MuBZbO,GAAe6S,EAAkB3/B,UAAWvO,KAAKhB,OAAOulC,cAAc5Q,2BAGtE,MADA3zB,KAAK6yC,gBAAgBx9B,GAA0C6Z,EAAQhuB,eACjEgY,GAAsBd,IvBOxC,IAA4B/J,EuBLX6/B,EAAkBv/B,WACvB0sB,GAAe6S,EAAkBv/B,UAAW,KAE5CgkC,EAAmBt9B,IAGvB,MAAM9I,EAAc2iB,EAAQkC,WAAapxB,KAAKoxB,UAAUoQ,oBAClDvX,EAAc,CAChB3B,QAAStoB,KAAK68B,aAAapR,WAAWzrB,KAAK68B,aAAa/K,mBAAmB5C,EAAQ5G,SAAU4G,EAAQhuB,eACrGmpB,YAAa6jB,EACb7rB,QAASriB,KAAK68B,aAAa1T,WAAW+F,EAAQ5G,QAAS4G,EAAQhuB,cAAe6nB,EAAW+pB,EAAiB9yC,KAAK2nB,mBAC/G4C,aAAc,KACd5a,YAAa3P,KAAK68B,aAAaxM,yBAAyB9jB,IAM5D,OAJAvM,KAAK6yC,gBAAgBF,EAAkBzjB,EAAQhuB,eAC3ClB,KAAKhB,OAAOg6B,wBACZh5B,KAAKhB,OAAOg6B,uBAAuBga,qBAEhC,OACGxZ,GAAYx5B,KAAKizC,8BAA8BxY,KAAKz6B,MAAOgyB,GAAiEhyB,KAAKiG,OAAQjG,KAAK2nB,kBAAmBuH,EAAQhuB,cAAzKs4B,CAAwLvP,EAAaiF,GAC3MyjB,EAEP,CACD,eAAAE,CAAgBK,EAAchyC,GAC1BlB,KAAKg5B,wBAAwB6Z,gBAAgBK,GAC7ClzC,KAAK2nB,mBAAmBgH,UAAU,CAC9BukB,aAAcA,GACfhyC,GACCgyC,IAAiB79B,IACjBrV,KAAKiG,OAAOjB,KAAK,mDAAmDkuC,IAE3E,CAKD,mCAAMD,CAA8BhpB,EAAaiF,GAE7C,IAAI9N,EAKJ,GANAphB,KAAK2nB,mBAAmBwL,oBAAoBnB,GAAiE9C,EAAQhuB,eAEjH+oB,EAAY5H,UACZjB,EAAgBkB,GAAmB2H,EAAY5H,QAAQvU,OAAQ9N,KAAKhB,OAAO+lC,gBAAgB1rB,eAG3F6V,EAAQlM,QAA6B,IAAnBkM,EAAQlM,OAAc,CACxC,MAAMD,EAAW3B,GAAe2rB,UAChC,IAAKhqB,EACD,MAAM7J,GAAsBlC,IAEhC8L,GAAYC,EAAUmM,EAAQlM,OACjC,CACD,OAAOuoB,GAAgB4B,6BAA6BntC,KAAKwlC,YAAaxlC,KAAKoxB,UAAWnH,GAAa,EAAMiF,EAAS9N,EACrH;6CClFL,SAAS+xB,GAAsCje,EAAahG,EAASjpB,EAAQ0hB,GAEzE,MAAMzmB,EAAgBguB,EAAQhuB,cACxB0iB,EAAa,IAAIpb,IACvBsuB,GAAYlT,EAAYsL,EAAQoH,kBAC5BpH,EAAQpL,uBAAuB8R,KAC/BV,EAAYrnB,UAqBhB,GAhBA6oB,GAAU9S,EAJY,IACdsL,EAAQxtB,QAAU,MAClBwtB,EAAQkkB,sBAAwB,KAEH,EAAMle,EAAY9D,UAAUryB,QAAQqxC,aAAaxZ,eACtFG,GAAenT,EAAYsL,EAAQ8H,aACnCU,GAAiB9T,EAAY1iB,G5BFjC,SAAyB0iB,EAAYyvB,GACjCzvB,EAAWhb,ID5BO,gBC4BYyqC,GAA8BhgC,GAChE,C4BEIigC,CAAgB1vB,EAAYsL,EAAQmkB,cAEpC/a,GAAc1U,GACVsL,EAAQqkB,U5BuIhB,SAAmB3vB,EAAY2vB,GAC3B3vB,EAAWhb,ID7JA,SC6JY2qC,EAC3B,C4BxIQC,CAAU5vB,EAAYsL,EAAQqkB,QAC9B5rB,GAAmBgH,UAAU,CAAE4kB,OAAQrkB,EAAQqkB,QAAUryC,IAEzDguB,EAAQukB,c5BgDhB,SAAuB7vB,EAAY6vB,GAC/B7vB,EAAWhb,IDvCK,cCuCY6qC,EAChC,C4BjDQC,CAAc9vB,EAAYsL,EAAQukB,YAClC9rB,GAAmBgH,UAAU,CAAEglB,uBAAuB,GAAQzyC,IAG9DguB,EAAQqkB,SAAWrgC,GAEnB,GAAIgc,EAAQpF,KAAOoF,EAAQqkB,SAAWrgC,GAElCjN,EAAOlB,QAAQ,yEACfqyB,GAAOxT,EAAYsL,EAAQpF,KAC3BnC,GAAmBgH,UAAU,CAAEilB,gBAAgB,GAAQ1yC,QAEtD,GAAIguB,EAAQ5G,QAAS,CACtB,MAAMurB,GAuKSvrB,EAvKsB4G,EAAQ5G,QAwK9CA,EAAQlH,eAAe0I,KAAO,MAvK7B,IAAIgqB,EAyKhB,SAA0BxrB,GACtB,OAAOA,EAAQzG,WAAayG,EAAQlH,eAAeQ,YAAc,IACrE;6CA3KwCmyB,CAAiB7kB,EAAQ5G,SAMrD,GALIwrB,GAAyB5kB,EAAQukB,aACjCxtC,EAAOhB,QAAQ,+JACf6uC,EAAwB,MAGxBA,EAAuB,CACvB7tC,EAAOlB,QAAQ,qEACfkyB,GAAarT,EAAYkwB,GACzBnsB,GAAmBgH,UAAU,CAAEqlB,oBAAoB,GAAQ9yC,GAC3D,IAEIi2B,GAAUvT,EADS4R,GAAiCtG,EAAQ5G,QAAQhc,eAEvE,CACD,MAAOxL,GACHmF,EAAOlB,QAAQ,+EAClB,CACJ,MACI,GAAI8uC,GAAc3kB,EAAQqkB,SAAWrgC,GAAkB,CAKxDjN,EAAOlB,QAAQ,yEACfqyB,GAAOxT,EAAYiwB,GACnBlsB,GAAmBgH,UAAU,CAAEslB,cAAc,GAAQ/yC,GACrD,IAEIi2B,GAAUvT,EADS4R,GAAiCtG,EAAQ5G,QAAQhc,eAEvE,CACD,MAAOxL,GACHmF,EAAOlB,QAAQ,+EAClB,CACJ,MACI,GAAImqB,EAAQrN,UACb5b,EAAOlB,QAAQ,gEACfkyB,GAAarT,EAAYsL,EAAQrN,WACjCqV,GAAUtT,EAAYsL,EAAQrN,WAC9B8F,GAAmBgH,UAAU,CAAEulB,sBAAsB,GAAQhzC,QAE5D,GAAIguB,EAAQ5G,QAAQ3b,SAAU,CAE/B1G,EAAOlB,QAAQ,gEACfkyB,GAAarT,EAAYsL,EAAQ5G,QAAQ3b,UACzCgb,GAAmBgH,UAAU,CAAEwlB,kBAAkB,GAAQjzC,GACzD,IAEIi2B,GAAUvT,EADS4R,GAAiCtG,EAAQ5G,QAAQhc,eAEvE,CACD,MAAOxL,GACHmF,EAAOlB,QAAQ,+EAClB,CACJ,CACJ,MACQmqB,EAAQrN,YACb5b,EAAOlB,QAAQ,4EACfkyB,GAAarT,EAAYsL,EAAQrN,WACjCqV,GAAUtT,EAAYsL,EAAQrN,WAC9B8F,GAAmBgH,UAAU,CAAEulB,sBAAsB,GAAQhzC,SAIjE+E,EAAOlB,QAAQ,kFAwGvB,IAA2BujB,EAlFvB,OApBI4G,EAAQmZ,O5BoEhB,SAAkBzkB,EAAYykB,GAC1BzkB,EAAWhb,ID9KD,QC8KYy/B,EAC1B,C4BrEQ+L,CAASxwB,EAAYsL,EAAQmZ,OAE7BnZ,EAAQjmB,OACR8uB,GAASnU,EAAYsL,EAAQjmB,QAE7BimB,EAAQyB,QACPuE,EAAYoC,oBACTpC,EAAYoC,mBAAmB/yB,OAAS,IAC5C8yB,GAAUzT,EAAYsL,EAAQyB,OAAQuE,EAAYoC,oBAElDpI,EAAQoH,kBACR8C,GAAoBxV,EAAYsR,EAAYrnB,SAAUqnB,EAAY8B,cAGlE9B,EAAYmQ,eACVnW,EAAQpL,sBACLthB,OAAO2J,KAAK+iB,EAAQpL,sBAAsBve,SAAS6wB,KACxDmC,GAAiB3U,GAEdA,CACX,CCxIA,SAASywB,GAAmBz2B,GACxB,MAAM02B,KAAEA,EAAIzhB,YAAEA,EAAWC,eAAEA,EAAcyhB,cAAEA,EAAaC,iBAAEA,GAAsB52B,EAC1E62B,EAAS,IAAIjsC,IAAI,CACnB,CAAC,EAAG,CAACqqB,EAAaC,IAClB,CAAC,EAAG,CAACyhB,EAAeC,MAExB,IAAIE,EAAS,GACb,GAAIJ,GAAM/vC,QAGN,GAFAmwC,EAASJ,EAAK9wC,MAVI,KAYdkxC,EAAOnwC,OAAS,EAChB,OAAO+vC,OAIXI,EAASrtC,MAAMkgC,KAAK,CAAEhjC,OAAQ,GAAK,IAhBjB,KA4BtB,OAVAkwC,EAAOz2B,QAAQ,CAACtV,EAAOD,KACE,IAAjBC,EAAMnE,QAAgBmE,EAAM,IAAInE,QAAUmE,EAAM,IAAInE,QAWhE,SAAgBqZ,GACZ,MAAM82B,OAAEA,EAAMhwC,MAAEA,EAAKiwC,QAAEA,EAAOC,WAAEA,GAAeh3B,EAC/C,GAAIlZ,GAASgwC,EAAOnwC,OAChB,OAEJmwC,EAAOhwC,GAAS,CAACiwC,EAASC,GAAYl1C,KAnChB,IAoC1B,CAhBYm1C,CAAO,CACHH,SACAhwC,MAAO+D,EACPksC,QAASjsC,EAAM,GACfksC,WAAYlsC,EAAM,OAIvBgsC,EAAOh1C,KA7BQ,IA8B1B,CASA,MAAMo1C,GACF,WAAAj1C,CAAYk1C,EAAkBlY,GAC1B78B,KAAKkzC,aAAe79B,GACpBrV,KAAK68B,aAAeA,EACpB78B,KAAKg1C,MAAQD,EAAiBC,MAC9Bh1C,KAAKkB,cAAgB6zC,EAAiB7zC,cACtClB,KAAKi1C,WAAaF,EAAiBE,YAAc7kC,GAAUyB,aAC3D7R,KAAKk1C,WAAaH,EAAiBG,YAAc9kC,GAAUyB,aAC3D7R,KAAKm1C,kBACDjhC,GAAuBI,UACnBd,GACAuhC,EAAiBlnC,QAC5B,CAID,iCAAAorB,GACI,MAAM/J,EAAU,GAAGlvB,KAAKg1C,QAAQ9gC,GAAuBM,kBAAkBxU,KAAKkzC,eACxEkC,EAAoB,CAACp1C,KAAKi1C,WAAYj1C,KAAKk1C,YAC3CG,EAAwBr1C,KAAKs1C,2BAC/BD,GAAuB9wC,QACvB6wC,EAAkBtxC,KAAK,gBAAgBuxC,KAE3C,MAAME,EAAiBH,EAAkB11C,KAAKwU,GAAuBM,iBAE/DghC,EAAmC,CACrCtmB,EAF0BlvB,KAAKy1C,4BAIjC/1C,KAAKwU,GAAuBM,iBAC9B,MAAO,CACHN,GAAuBC,eACvBqhC,EACAD,GACF71C,KAAKwU,GAAuBK,mBACjC,CAID,8BAAA2kB,GACI,MAAMwc,EAAe11C,KAAK21C,kBACpBC,EAAYd,GAAuBe,gBAAgBH,GACnDI,EAAiBJ,EAAaI,eAC/BvxB,MAAM,EAAG,EAAIqxB,GACbl2C,KAAKwU,GAAuBM,iBAC3BxT,EAAS00C,EAAa10C,OACvBujB,MAAM,EAAGqxB,GACTl2C,KAAKwU,GAAuBM,iBAC3BuhC,EAAaL,EAAa10C,OAAOuD,OAKjCgxC,EAAiB,CAACQ,EAHPH,EAAYG,EACvB7hC,GAAuBO,cACvBP,GAAuBQ,gBACiBhV,KAAKwU,GAAuBM,iBAC1E,MAAO,CACHN,GAAuBC,eACvBuhC,EAAaM,UACbF,EACA90C,EACAu0C,GACF71C,KAAKwU,GAAuBK,mBACjC,CAKD,kBAAA0hC,CAAmB11C,GACf,MAAMm1C,EAAe11C,KAAK21C,kBACtBD,EAAa10C,OAAOuD,QACpB2P,GAAuBG,oBAEvBqhC,EAAaI,eAAeI,QAC5BR,EAAaI,eAAeI,QAC5BR,EAAa10C,OAAOk1C,SAExBR,EAAaI,eAAehyC,KAAK9D,KAAKg1C,MAAOh1C,KAAKkB,eAC9CX,aAAiBd,OAAWc,GAASA,EAAMktC,WACvCltC,aAAiBmV,GACbnV,EAAMwV,SACN2/B,EAAa10C,OAAO8C,KAAKvD,EAAMwV,UAE1BxV,EAAMoV,UACX+/B,EAAa10C,OAAO8C,KAAKvD,EAAMoV,WAG/B+/B,EAAa10C,OAAO8C,KAAKvD,EAAMktC,YAInCiI,EAAa10C,OAAO8C,KAAKvD,EAAMktC,YAInCiI,EAAa10C,OAAO8C,KAAKoQ,GAAuBS,eAEpD3U,KAAK68B,aAAapL,mBAAmBzxB,KAAKm1C,kBAAmBO,EAAc11C,KAAKkB,cAEnF,CAID,kBAAA8xC,GACI,MAAM0C,EAAe11C,KAAK21C,kBAG1B,OAFAD,EAAaM,WAAa,EAC1Bh2C,KAAK68B,aAAapL,mBAAmBzxB,KAAKm1C,kBAAmBO,EAAc11C,KAAKkB,eACzEw0C,EAAaM,SACvB,CAID,eAAAL,GAOI,OADqB31C,KAAK68B,aAAanL,mBAAmB1xB,KAAKm1C,oBAL1C,CACjBW,eAAgB,GAChB90C,OAAQ,GACRg1C,UAAW,EAIlB,CAID,mBAAAjQ,GACI,MAAM2P,EAAe11C,KAAK21C,kBACpBQ,EAAmBrB,GAAuBe,gBAAgBH,GAEhE,GAAIS,IADeT,EAAa10C,OAAOuD,OAGnCvE,KAAK68B,aAAavP,WAAWttB,KAAKm1C,kBAAmBn1C,KAAKkB,mBAEzD,CAED,MAAMk1C,EAAoB,CACtBN,eAAgBJ,EAAaI,eAAevxB,MAAyB,EAAnB4xB,GAClDn1C,OAAQ00C,EAAa10C,OAAOujB,MAAM4xB,GAClCH,UAAW,GAEfh2C,KAAK68B,aAAapL,mBAAmBzxB,KAAKm1C,kBAAmBiB,EAAmBp2C,KAAKkB,cACxF,CACJ,CAKD,sBAAO20C,CAAgBQ,GACnB,IAAI1qC,EACAiqC,EAAY,EACZU,EAAW,EACf,MAAMP,EAAaM,EAAsBr1C,OAAOuD,OAChD,IAAKoH,EAAI,EAAGA,EAAIoqC,EAAYpqC,IAAK,CAE7B,MAAMqpC,EAAQqB,EAAsBP,eAAe,EAAInqC,IACnDyE,GAAUyB,aACR3Q,EAAgBm1C,EAAsBP,eAAe,EAAInqC,EAAI,IAC/DyE,GAAUyB,aACR8D,EAAY0gC,EAAsBr1C,OAAO2K,IAAMyE,GAAUyB,aAO/D,GALAykC,GACItB,EAAMvH,WAAWlpC,OACbrD,EAAcusC,WAAWlpC,OACzBoR,EAAUpR,OACV,IACJ+xC,EAAWpiC,GAAuBE,uBAKlC,MAHAwhC,GAAa,CAKpB,CACD,OAAOA,CACV,CAMD,wBAAAH,GACI,MAAMc,EAAwB,GAI9B,OAHAA,EAAsBzyC,KAAK9D,KAAKw2C,YAAcpmC,GAAUyB,cACxD0kC,EAAsBzyC,KAAK9D,KAAKy2C,cAAgBrmC,GAAUyB,cAC1D0kC,EAAsBzyC,KAAK9D,KAAK02C,eAAiBtmC,GAAUyB,cACpD0kC,EAAsB72C,KAAK,IACrC,CAOD,6BAAAi3C,CAA8Bxc,GAC1Bn6B,KAAKw2C,WAAarc,EAAwB8C,YAC1Cj9B,KAAKy2C,aAAetc,EAAwBE,cAC5Cr6B,KAAK02C,cAAgBvc,EAAwB+C,cAChD,CAID,eAAA2V,CAAgBK,GACZlzC,KAAKkzC,aAAeA,CACvB,CACD,wBAAA0D,CAAyBjhC,GACrB,MAAM+/B,EAAe11C,KAAK21C,kBAC1BD,EAAaL,sBAAwB1/B,EACrC3V,KAAK68B,aAAapL,mBAAmBzxB,KAAKm1C,kBAAmBO,EAAc11C,KAAKkB,cACnF,CACD,wBAAAo0C,GACI,OAAOt1C,KAAK21C,kBAAkBN,qBACjC,CACD,0BAAAwB,GACI,MAAMnB,EAAe11C,KAAK21C,yBACnBD,EAAaL,sBACpBr1C,KAAK68B,aAAapL,mBAAmBzxB,KAAKm1C,kBAAmBO,EAAc11C,KAAKkB,cACnF,CACD,yBAAOmzC,CAAmBz2B,GACtB,OAAOy2B,GAAmBz2B,EAC7B;yCC3PL,MAAMk5B,GAKF,0BAAOC,CAAoBC,GAEvB,OAD2BA,EAAgBp2C,KAAKC,MAAMm2C,GAAhB,CAAA,CAEzC,CAKD,0BAAOC,CAAoB/qC,GACvB,MAAMgrC,EAAiB,CAAA,EAyBvB,OAxBIhrC,GACA1J,OAAO2J,KAAKD,GAAUzI,IAAI,SAAUgF,GAChC,MAAM0uC,EAAgBjrC,EAASzD,GACzB2uC,EAAY,CACd9qC,cAAe6qC,EAAc9qC,gBAC7BE,YAAa4qC,EAAc5qC,YAC3BC,MAAO2qC,EAAc3qC,MACrBE,eAAgByqC,EAAc1qC,iBAC9BE,SAAUwqC,EAAcxqC,SACxBE,cAAesqC,EAAcvqC,eAC7B3M,KAAMk3C,EAAcl3C,KACpB8M,WAAYoqC,EAAcrqC,YAC1BG,qBAAsBkqC,EAAcnqC,uBACpCG,oBAAqBgqC,EAAcjqC,sBACnCE,eAAgB+pC,EAAc/pC,gBAAgB3J,IAAK4zC,GACxCz2C,KAAKC,MAAMw2C,IAEtB7J,cAAe9yB,KAAKuI,MAAMwqB,YAExBnlB,EAAU,IAAIue,GACpBpf,GAAa4J,SAAS/I,EAAS8uB,GAC/BF,EAAezuC,GAAO6f,CACtC,GAEe4uB,CACV,CAKD,0BAAOI,CAAoB9pC,GACvB,MAAM+pC,EAAY,CAAA,EAgBlB,OAfI/pC,GACAhL,OAAO2J,KAAKqB,GAAU/J,IAAI,SAAUgF,GAChC,MAAM+uC,EAAgBhqC,EAAS/E,GACzB4Z,EAAU,CACZ/V,cAAekrC,EAAcnrC,gBAC7BE,YAAairC,EAAcjrC,YAC3BoB,eAAgB6pC,EAAc9pC,gBAC9BG,SAAU2pC,EAAc5pC,UACxBE,OAAQ0pC,EAAc1pC,OACtBtB,MAAOgrC,EAAchrC,MACrBghC,cAAe9yB,KAAKuI,MAAMwqB,YAE9B8J,EAAU9uC,GAAO4Z,CACjC,GAEek1B,CACV,CAKD,8BAAOE,CAAwBxpC,GAC3B,MAAMypC,EAAY,CAAA,EA0BlB,OAzBIzpC,GACAzL,OAAO2J,KAAK8B,GAAcxK,IAAI,SAAUgF,GACpC,MAAMkvC,EAAe1pC,EAAaxF,GAC5B4hB,EAAc,CAChB/d,cAAeqrC,EAAatrC,gBAC5BE,YAAaorC,EAAaprC,YAC1BoB,eAAgBgqC,EAAajqC,gBAC7BG,SAAU8pC,EAAa/pC,UACvBE,OAAQ6pC,EAAa7pC,OACrBtB,MAAOmrC,EAAanrC,MACpB2B,OAAQwpC,EAAaxpC,OACrBE,SAAUspC,EAAavpC,UACvBG,UAAWopC,EAAarpC,WACxBG,kBAAmBkpC,EAAanpC,oBAChCG,UAAWgpC,EAAajpC,WACxBG,MAAO8oC,EAAa/oC,OACpBG,UAAW4oC,EAAa7oC,WACxBE,gBAAiB2oC,EAAa3oC,gBAC9BC,oBAAqB0oC,EAAa1oC,oBAClCC,kBAAmByoC,EAAazoC,kBAChCs+B,cAAe9yB,KAAKuI,MAAMwqB,YAE9BiK,EAAUjvC,GAAO4hB,CACjC,GAEeqtB,CACV,CAKD,+BAAOE,CAAyBvoC,GAC5B,MAAMwoC,EAAY,CAAA,EAkBlB,OAjBIxoC,GACA7M,OAAO2J,KAAKkD,GAAe5L,IAAI,SAAUgF,GACrC,MAAMqvC,EAAezoC,EAAc5G,GAC7B8hB,EAAe,CACjBje,cAAewrC,EAAazrC,gBAC5BE,YAAaurC,EAAavrC,YAC1BoB,eAAgBmqC,EAAapqC,gBAC7BG,SAAUiqC,EAAalqC,UACvBE,OAAQgqC,EAAahqC,OACrB0B,SAAUsoC,EAAavoC,UACvBpB,OAAQ2pC,EAAa3pC,OACrB3B,MAAOsrC,EAAatrC,MACpBghC,cAAe9yB,KAAKuI,MAAMwqB,YAE9BoK,EAAUpvC,GAAO8hB,CACjC,GAEestB,CACV,CAKD,6BAAOE,CAAuBpoC,GAC1B,MAAMqoC,EAAqB,CAAA,EAW3B,OAVIroC,GACAnN,OAAO2J,KAAKwD,GAAalM,IAAI,SAAUgF,GACnC,MAAMwvC,EAAiBtoC,EAAYlH,GACnCuvC,EAAmBvvC,GAAO,CACtBoF,SAAUoqC,EAAerqC,UACzBrB,YAAa0rC,EAAe1rC,YAC5BiD,SAAUyoC,EAAe1oC,UAE7C,GAEeyoC,CACV,CAKD,0BAAOE,CAAoBC,GACvB,MAAO,CACHjsC,SAAUisC,EAAUpoC,QACd/P,KAAKi3C,oBAAoBkB,EAAUpoC,SACnC,CAAE,EACRvC,SAAU2qC,EAAUnoC,QACdhQ,KAAKs3C,oBAAoBa,EAAUnoC,SACnC,CAAE,EACR/B,aAAckqC,EAAUloC,YAClBjQ,KAAKy3C,wBAAwBU,EAAUloC,aACvC,CAAE,EACRZ,cAAe8oC,EAAUjoC,aACnBlQ,KAAK43C,yBAAyBO,EAAUjoC,cACxC,CAAE,EACRP,YAAawoC,EAAUhoC,YACjBnQ,KAAK+3C,uBAAuBI,EAAUhoC,aACtC,CAAE,EAEf;yCCrKL,MAEMioC,GAAyC,sDAIzCC,GACyB,gBADzBA,GAEoB,WAFpBA,GAG8B,oBAH9BA,GAI4B,SAK5BC,GACW,cADXA,GAEQ,WAFRA,GAGuB,0BAHvBA,GAIM,SAKNC,GACiC,oCADjCA,GAE0B,6BAF1BA,GAGiB,oBAHjBA,GAIe,kBAJfA,GAK0B,6BAL1BA,GAMa,gBANbA,GAOY,eAPZA,GAQU,aAMVC,GACW,aADXA,GAES,WAFTA,GAGW,aAHXA,GAIe,gBAJfA,GAKI,OALJA,GAMgB,kBANhBA,GAOc,gBAKdC,GACe,kBADfA,GAEuB,0BAFvBA,GAGyB,4BAHzBA,GAIuB,0BAKvBC,GACG,MADHA,GAEI,OAEJC,GAAc,CAChBC,oBAAqBnmC,GACrBomC,kBAAmBpmC,GACnBqmC,aAAcrmC,IAcZsmC,GACM,SAKNC,GACU,qEAKVC,GACa,IAKb7oC,GACQ,eADRA,GAEyB,yDAFzBA,GAGqB,wBAHrBA,GAIa,UAJbA,GAKS,YAST8oC,GACkB,GADlBA,GAE8B,IAF9BA,GAGwB,IAHxBA,GAI8B,IAJ9BA,GAKkB,IALlBA,GAM0B,IAK1BC,GACO,QADPA,GAEO,QAFPA,GAGO,WAHPA,GAIG,MAJHA,GAKG,MALHA,GAMQ,MANRA,GAOe,MAPfA,GAQM,MARNA,GASO,MATPA,GAUU,MAVVA,GAWM,MAENC,GACW,IADXA,GAEU;;AC7IhB,MAAMC,GACF,yBAAOC,CAAmB5c,EAAShC,EAAMt6B,GACrC,MAAO,CACHs8B,QAASA,EACThC,KAAMA,EACNzvB,OAAQ7K,EAEf,CAMD,uBAAOm5C,CAAiBn1B,GACpB,MAAMrlB,EAAU,CACZy6C,SAAUp1B,EAAIo1B,SACdC,SAAUr1B,EAAIq1B,UAAYr1B,EAAIq1B,SAAS51C,WAAW,KAC5CugB,EAAIq1B,SAASl1B,MAAM,GAAI,GACvBH,EAAIq1B,SACVC,KAAMt1B,EAAIs1B,KACVl8B,OAAQ4G,EAAI5G,OACZm8B,SAAUv1B,EAAIu1B,SACdC,KAAM,GAAGx1B,EAAIu1B,UAAY,KAAKv1B,EAAI5G,QAAU,KAC5Cq8B,KAAMz1B,EAAIy1B,MAQd,MANiB,KAAbz1B,EAAI01B,OACJ/6C,EAAQ+6C,KAAO1e,OAAOhX,EAAI01B,QAE1B11B,EAAIzX,UAAYyX,EAAI21B,YACpBh7C,EAAQi7C,KAAO,GAAGj8B,mBAAmBqG,EAAIzX,aAAaoR,mBAAmBqG,EAAI21B,aAE1Eh7C,CACV;yCCvBL,MAAMk7C,GACF,WAAAp6C,CAAYq6C,EAAUC,GAClBn6C,KAAKk6C,SAAWA,GAAY,GAC5Bl6C,KAAKm6C,mBAAqBA,GAAsB,EACnD,CAMD,yBAAMlmB,CAAoB7P,EAAKrlB,EAASq7C,GACpC,OAAIp6C,KAAKk6C,SACEG,GAAuBj2B,EAAKpkB,KAAKk6C,SAAUxB,GAAgB35C,EAASiB,KAAKm6C,mBAAoBC,GAG7FE,GAAuBl2B,EAAKs0B,GAAgB35C,EAASiB,KAAKm6C,mBAAoBC,EAE5F,CAMD,0BAAMlmB,CAAqB9P,EAAKrlB,GAC5B,OAAIiB,KAAKk6C,SACEG,GAAuBj2B,EAAKpkB,KAAKk6C,SAAUxB,GAAiB35C,EAASiB,KAAKm6C,oBAG1EG,GAAuBl2B,EAAKs0B,GAAiB35C,EAASiB,KAAKm6C,mBAEzE,EAEL,MAAME,GAAyB,CAACE,EAAsBC,EAAgBC,EAAY17C,EAAS27C,EAAcN,KACrG,MAAMO,EAAiB,IAAIC,IAAIL,GACzBL,EAAW,IAAIU,IAAIJ,GAEnB9d,EAAU39B,GAAS29B,SAAW,GAC9Bme,EAAuB,CACzB/tB,KAAMotB,EAAST,SACfK,KAAMI,EAASJ,KACfgB,OAAQ,UACRlB,KAAMe,EAAelB,SACrB/c,QAASA,GAETge,GAAgBl4C,OAAO2J,KAAKuuC,GAAcn2C,SAC1Cs2C,EAAqBE,MAAQ,IAAIC,EAAKC,MAAMP,IAGhD,IAAIQ,EAA2B,GAC/B,GAAIT,IAAe/B,GAAiB,CAChC,MAAMhe,EAAO37B,GAAS27B,MAAQ,GAC9BwgB,EAEQ,sEAAmBxgB,EAAKn2B,iBACjBm2B,GAClB,MAGO0f,IACAS,EAAqBT,QAAUA,GAGvC,MAAMe,EAAwB,GAAGV,EAAW3P,iBAAiB6P,EAAed,0BAC/Dc,EAAe7tB,gCAExBouB,EACA,OACJ,OAAO,IAAInwC,QAAQ,CAACC,EAASowC,KACzB,MAAMlsB,EAAU8rB,EAAK9rB,QAAQ2rB,GACzBT,GACAlrB,EAAQmsB,GAAG,UAAW,KAClBnsB,EAAQ1qB,UACR42C,EAAO,IAAI37C,MAAM,uBAGzByvB,EAAQxlB,MAERwlB,EAAQmsB,GAAG,UAAW,CAACp1B,EAAUq1B,KAC7B,MAAMC,EAAkBt1B,GAAU7lB,YAAcu4C,GAAYG,cACxDyC,EAAkB5C,GAAYC,qBAC9B2C,EAAkB5C,GAAYE,qBAC9B3pB,EAAQ1qB,UACR82C,EAAO92C,UACP42C,EAAO,IAAI37C,MAAM,gDAAgDwmB,EAAS7lB,oCAAoC6lB,GAAUu1B,eAAiB,eAG7IF,EAAOr4C,MAAMk4C,GACb,MAAMrvC,EAAO,GACbwvC,EAAOD,GAAG,OAASI,IACf3vC,EAAKhI,KAAK23C,KAEdH,EAAOD,GAAG,MAAO,KAEb,MAEMK,EAFaC,OAAOC,OAAO,IAAI9vC,IAAO2hC,WAETjqC,MAAM,QAEnCq4C,EAAiBlY,SAAS+X,EAAgB,GAAGl4C,MAAM,KAAK,IAExDg4C,EAAgBE,EAAgB,GACjCl4C,MAAM,KACN+gB,MAAM,GACN7kB,KAAK,KAEJg7B,EAAOghB,EAAgBA,EAAgBn3C,OAAS,GAEhDu3C,EAAeJ,EAAgBn3B,MAAM,EAAGm3B,EAAgBn3C,OAAS,GAEjEm0B,EAAU,IAAIlwB,IACpBszC,EAAa99B,QAAS+9B,IAOlB,MAAMC,EAAiBD,EAAOv4C,MAAM,IAAIO,OAAO,aACzCk4C,EAAYD,EAAe,GACjC,IAAIE,EAAcF,EAAe,GAEjC,IACI,MAAMG,EAASv7C,KAAKC,MAAMq7C,GAEtBC,GAA4B,iBAAXA,IACjBD,EAAcC,EAErB,CACD,MAAOr7C,GAEN,CACD43B,EAAQ9vB,IAAIqzC,EAAWC,KAE3B,MACME,EADU55C,OAAOghB,YAAYkV,GAE7B2jB,EAAkBhD,GAAaC,mBAAmB8C,EAAeE,GAAUT,EAAgBL,EAAeY,EAAe1hB,GAAOmhB,IACjIA,EAAiBppC,IAClBopC,EAAiBppC,KAEjB4pC,EAAgB3hB,KAAY,QACxBtqB,IACJ8e,EAAQ1qB,UAEZwG,EAAQqxC,KAEZf,EAAOD,GAAG,QAAUI,IAChBvsB,EAAQ1qB,UACR82C,EAAO92C,UACP42C,EAAO,IAAI37C,MAAMg8C,EAAMhO,iBAG/Bve,EAAQmsB,GAAG,QAAUI,IACjBvsB,EAAQ1qB,UACR42C,EAAO,IAAI37C,MAAMg8C,EAAMhO,kBAI7B6M,GAAyB,CAACp2B,EAAWu2B,EAAY17C,EAAS27C,EAAcN,KAC1E,MAAMmC,EAAgB9B,IAAe/B,GAC/Bhe,EAAO37B,GAAS27B,MAAQ,GACxBtW,EAAM,IAAIw2B,IAAI12B,GAEds4B,EAAgB,CAClB1B,OAAQL,EACR/d,QAHY39B,GAAS29B,SAAW,MAI7B2c,GAAaE,iBAAiBn1B,IAkBrC,OAhBIs2B,GAAgBl4C,OAAO2J,KAAKuuC,GAAcn2C,SAC1Ci4C,EAAczB,MAAQ,IAAI0B,EAAMxB,MAAMP,IAEtC6B,EAEAC,EAAc9f,QAAU,IACjB8f,EAAc9f,QACjB,iBAAkBhC,EAAKn2B,QAKvB61C,IACAoC,EAAcpC,QAAUA,GAGzB,IAAIrvC,QAAQ,CAACC,EAASowC,KACzB,IAAIlsB,EAGAA,EAD2B,UAA3BstB,EAAchD,SACJwB,EAAK9rB,QAAQstB,GAGbC,EAAMvtB,QAAQstB,GAExBD,GACArtB,EAAQjsB,MAAMy3B,GAEd0f,GACAlrB,EAAQmsB,GAAG,UAAW,KAClBnsB,EAAQ1qB,UACR42C,EAAO,IAAI37C,MAAM,uBAGzByvB,EAAQxlB,MACRwlB,EAAQmsB,GAAG,WAAap1B,IACpB,MAAMyW,EAAUzW,EAASyW,QACnBt8B,EAAa6lB,EAAS7lB,WACtBo7C,EAAgBv1B,EAASu1B,cACzB1vC,EAAO,GACbma,EAASo1B,GAAG,OAASI,IACjB3vC,EAAKhI,KAAK23C,KAEdx1B,EAASo1B,GAAG,MAAO,KAEf,MAAM3gB,EAAOihB,OAAOC,OAAO,IAAI9vC,IAAO2hC,WAChC2O,EAAgB1f,EAChB2f,EAAkBhD,GAAaC,mBAAmB8C,EAAeE,GAAUl8C,EAAYo7C,EAAeY,EAAe1hB,GAAOt6B,IAC7HA,EAAaqS,IACdrS,EAAaqS,KAEb4pC,EAAgB3hB,KAAY,QACxBtqB,IACJ8e,EAAQ1qB,UAEZwG,EAAQqxC,OAGhBntB,EAAQmsB,GAAG,QAAUI,IACjBvsB,EAAQ1qB,UACR42C,EAAO,IAAI37C,MAAMg8C,EAAMhO,kBAY7B6O,GAAY,CAACl8C,EAAYo7C,EAAe9e,EAAShC,KAQnD,IAAIgiB,EACJ,IACIA,EAAa97C,KAAKC,MAAM65B,EAC3B,CACD,MAAOn6B,GACH,IAAIo8C,EACAC,EACAx8C,GAAcqS,IACdrS,GAAcqS,IACdkqC,EAAY,eACZC,EAAyB,YAEpBx8C,GAAcqS,IACnBrS,GAAcqS,IACdkqC,EAAY,eACZC,EAAyB,aAGzBD,EAAY,gBACZC,EAAyB,cAE7BF,EAAa,CACTn8C,MAAOo8C,EACPl8C,kBAAmB,GAAGm8C,uCAA4Dx8C,2BAAoCo7C,GAAiB,uBAAuB56C,KAAKmL,UAAU2wB,KAEpL,CACD,OAAOggB,GCvRLG,GAAuB,yBACvBC,GAAkB,oBAClBC,GAA+B,mCAC/BC,GAAgB,iBAChBC,GAAY,oBACZC,GAAqB,sBACrBC,GAAuB,yBACvBC,GAAyB,6BACzBC,GAA2B,+BAC3BC,GAAuB,0BACvBC,GAAyB,6BACzBC,GAAoC,yCACpCC,GAA+B,kCAC/BC,GAAyC,6CACzCC,GAA+C,CACjDC,CAACrF,IAA4E,kDAC7EsF,CAACtF,IAA4D,kCAC7DuF,CAACvF,IAAwD,8BACzDwF,CAACxF,IAAuD,8BCbtDyF,GAA+B,CACjCnB,CAACA,IAAuB,6EACxBC,CAACA,IAAkB,0FACnBC,CAACA,IAA+B,oDAChCC,CAACA,IAAgB,qGACjBG,CAACA,IAAuB,yFACxBF,CAACA,IAAY,2CACb,CAACU,GACIM,mCAAoC,2BAA2B1F,yCACpE,CAACoF,GACIO,mBAAoB,2BAA2B3F,yCACpD,CAACoF,GACI1rC,eAAgB,2BAA2BsmC,yCAChD,CAACoF,GACIQ,cAAe,2BAA2B5F,yCAC/C2E,CAACA,IAAqB,sFACtBE,CAACA,IAAyB,4DAC1BC,CAACA,IAA2B,8DAC5BC,CAACA,IAAuB,6EACxBC,CAACA,IAAyB,kCAC1BC,CAACA,IAAoC,uGACrCC,CAACA,IAA+B,+GAChCC,CAACA,IAAyC,iIAE9C,MAAMU,WAA6B1oC,GAC/B,WAAA7V,CAAY8V,GACR5V,MAAM4V,EAAWqoC,GAA6BroC,IAC9C3V,KAAKC,KAAO,uBACZuC,OAAOqT,eAAe7V,KAAMo+C,GAAqBtoC,UACpD,EAEL,SAASuoC,GAA2B1oC,GAChC,OAAO,IAAIyoC,GAAqBzoC,EACpC;yCCpCA,MAAM2oC,GACF,MAAIxuB,GACA,OAAO9vB,KAAKu+C,GACf,CACD,MAAIzuB,CAAGpnB,GACH1I,KAAKu+C,IAAM71C,CACd,CACD,UAAI81C,GACA,OAAOx+C,KAAKy+C,OACf,CACD,UAAID,CAAO91C,GACP1I,KAAKy+C,QAAU/1C,CAClB,CACD,WAAA7I,CAAY6+C,GACR,MAAMC,EAAuBD,GAAyBC,qBAChDC,EAAyBF,GAAyBE,uBAClDC,EAAuBH,GAAyBG,qBACtD,GAAIF,EAAsB,CACtB,GAAIC,GAA0BC,EAC1B,MAAMR,GAA2BtB,IAErC/8C,KAAK8vB,GAAK6uB,EACV3+C,KAAKw+C,OAAS/F,EACjB,MACI,GAAImG,EAAwB,CAC7B,GAAID,GAAwBE,EACxB,MAAMR,GAA2BtB,IAErC/8C,KAAK8vB,GAAK8uB,EACV5+C,KAAKw+C,OAAS/F,EACjB,MACI,GAAIoG,EAAsB,CAC3B,GAAIF,GAAwBC,EACxB,MAAMP,GAA2BtB,IAErC/8C,KAAK8vB,GAAK+uB,EACV7+C,KAAKw+C,OAAS/F,EACjB,MAEGz4C,KAAK8vB,GLxCmB,mCKyCxB9vB,KAAKw+C,OAAS/F,EAErB;yCCzCL,MAAMqG,GAC0B,CACxB5oC,KAAM,uCACN6oC,KAAM,mEAHRD,GAKuB,CACrB5oC,KAAM,6BACN6oC,KAAM,2EAPRD,GASoB,CAClB5oC,KAAM,2BACN6oC,KAAM,0GAXRD,GAasB,CACpB5oC,KAAM,4BACN6oC,KAAM,kCAfRD,GAiB2B,CACzB5oC,KAAM,iCACN6oC,KAAM,0DAnBRD,GAqBqB,CACnB5oC,KAAM,0BACN6oC,KAAM,8DAvBRD,GAyBkB,CAChB5oC,KAAM,kBACN6oC,KAAM,yEA3BRD,GA6BiB,CACf5oC,KAAM,6CACN6oC,KAAM,sEA/BRD,GAiCuB,CACrB5oC,KAAM,6BACN6oC,KAAM,8FAGd,MAAMC,WAAsBtpC,GACxB,WAAA7V,CAAY8V,EAAW1U,GACnBlB,MAAM4V,EAAW1U,GACjBjB,KAAKC,KAAO,eACf,CAID,4CAAOg/C,GACH,OAAO,IAAID,GAAcF,GAAgD5oC,KAAM,GAAG4oC,GAAgDC,OACrI,CAID,yCAAOG,GACH,OAAO,IAAIF,GAAcF,GAA6C5oC,KAAM,GAAG4oC,GAA6CC,OAC/H,CAID,sCAAOI,GACH,OAAO,IAAIH,GAAcF,GAA0C5oC,KAAM,GAAG4oC,GAA0CC,OACzH,CAID,wCAAOK,GACH,OAAO,IAAIJ,GAAcF,GAA4C5oC,KAAM,GAAG4oC,GAA4CC,OAC7H,CAID,6CAAOM,GACH,OAAO,IAAIL,GAAcF,GAAiD5oC,KAAM,GAAG4oC,GAAiDC,OACvI,CAID,uCAAOO,GACH,OAAO,IAAIN,GAAcF,GAA2C5oC,KAAM,GAAG4oC,GAA2CC,OAC3H,CAID,+BAAOQ,GACH,OAAO,IAAIP,GAAcF,GAAwC5oC,KAAM4oC,GAAwCC,KAClH,CAID,mCAAOS,GACH,OAAO,IAAIR,GAAcF,GAAuC5oC,KAAM4oC,GAAuCC,KAChH,CAID,yCAAOU,GACH,OAAO,IAAIT,GAAcF,GAA6C5oC,KAAM4oC,GAA6CC,KAC5H;yCChGL,MAAMW,GAAuB,CACzB7xC,SAAUuC,GAAUyB,aACpBuf,UAAWhhB,GAAUG,kBACrBikB,aAAcpkB,GAAUyB,aACxB4iB,gBAAiBrkB,GAAUyB,aAC3B8tC,kBAAmB,CACfxc,WAAY/yB,GAAUyB,aACtB+tC,iBAAkBxvC,GAAUyB,aAC5BguC,WAAYzvC,GAAUyB,aACtBiuC,IAAK1vC,GAAUyB,cAEnBmf,iBAAkB,GAClBhK,uBAAwB5W,GAAUyB,aAClCqqB,kBAAmB9rB,GAAUyB,aAC7BylB,mBAAoB,GACpBnC,aAAcpD,GACduP,kBAAmB,CACf3M,mBAAoBnZ,GACpBoZ,OAAQxkB,GAAUyB,cAEtBiuB,4BAA4B,EAC5BwF,wBAAwB,GAEtBxR,GAAwB,CAC1BC,2BAA2B,GAEzBgsB,GAAyB,CAC3B1lC,eAAgB,OAGhBC,mBAAmB,EACnBzU,SAAUiU,GAASG,MAEjByZ,GAAyB,CAC3B1Z,cAAe+lC,GACfzd,cAAe,IAAI2X,GACnBC,SAAU9pC,GAAUyB,aACpBsoC,mBAAoB,CAAE,EACtB6F,wBAAwB,GAEtBnrB,GAA4B,CAC9BC,YAAa,CACTC,QAAS3kB,GAAUyB,aACnBmjB,WAAY5kB,GAAUyB,eCnD9B,IAAIouC,GACAC,GAAQ,IAAIC,WAAW,IACZ,SAASC,KAEtB,IAAKH,MAGHA,GAAoC,oBAAXI,QAA0BA,OAAOJ,iBAAmBI,OAAOJ,gBAAgBxlB,KAAK4lB,SAA+B,oBAAbC,UAAgE,mBAA7BA,SAASL,iBAAkCK,SAASL,gBAAgBxlB,KAAK6lB,WAGrO,MAAM,IAAI7gD,MAAM,4GAIpB,OAAOwgD,GAAgBC,GACzB,CClBA,IAAAK,GAAe,sHCQf,IAFA,IAAIC,GAAY,GAEP70C,GAAI,EAAGA,GAAI,MAAOA,GACzB60C,GAAU18C,MAAM6H,GAAI,KAAO8hC,SAAS,IAAIzpC,OAAO,IAGjD,SAAS+H,GAAUoS,GACjB,IAAImd,EAASmlB,UAAUl8C,OAAS,QAAsB1C,IAAjB4+C,UAAU,GAAmBA,UAAU,GAAK,EAG7EC,GAAQF,GAAUriC,EAAImd,EAAS,IAAMklB,GAAUriC,EAAImd,EAAS,IAAMklB,GAAUriC,EAAImd,EAAS,IAAMklB,GAAUriC,EAAImd,EAAS,IAAM,IAAMklB,GAAUriC,EAAImd,EAAS,IAAMklB,GAAUriC,EAAImd,EAAS,IAAM,IAAMklB,GAAUriC,EAAImd,EAAS,IAAMklB,GAAUriC,EAAImd,EAAS,IAAM,IAAMklB,GAAUriC,EAAImd,EAAS,IAAMklB,GAAUriC,EAAImd,EAAS,IAAM,IAAMklB,GAAUriC,EAAImd,EAAS,KAAOklB,GAAUriC,EAAImd,EAAS,KAAOklB,GAAUriC,EAAImd,EAAS,KAAOklB,GAAUriC,EAAImd,EAAS,KAAOklB,GAAUriC,EAAImd,EAAS,KAAOklB,GAAUriC,EAAImd,EAAS,MAAM1b,cAMzf,ICpBF,SAAkB8gC,GAChB,MAAuB,iBAATA,GAAqBH,GAAMn8C,KAAKs8C,EAChD,CDkBOC,CAASD,GACZ,MAAME,UAAU,+BAGlB,OAAOF,CACT,CExBA,SAASG,GAAG9hD,EAAS+hD,EAAKxlB,GAExB,IAAIylB,GADJhiD,EAAUA,GAAW,IACFiiD,SAAWjiD,EAAQqhD,KAAOA,MAK7C,GAHAW,EAAK,GAAe,GAAVA,EAAK,GAAY,GAC3BA,EAAK,GAAe,GAAVA,EAAK,GAAY,IAEvBD,EAAK,CACPxlB,EAASA,GAAU,EAEnB,IAAK,IAAI3vB,EAAI,EAAGA,EAAI,KAAMA,EACxBm1C,EAAIxlB,EAAS3vB,GAAKo1C,EAAKp1C,GAGzB,OAAOm1C,CACR,CAED,OAAO/0C,GAAUg1C,EACnB;yCCbA,MAAME,GAMF,YAAAC,GACI,OAAOL,IACV,CAKD,MAAAM,CAAOC,GAEH,MADkB,6EACDh9C,KAAKg9C,EACzB;yCChBL,MAAMC,GAOF,mBAAO/nC,CAAaiE,EAAK+jC,GACrB,OAAO3F,OAAOpU,KAAKhqB,EAAK+jC,GAAU7T,SAASn4B,GAC9C,CAKD,sBAAOisC,CAAgBhkC,EAAK+jC,GACxB,OAAOD,GAAc/nC,aAAaiE,EAAK+jC,GAClC19C,QAAQ,KAAMwM,GAAUyB,cACxBjO,QAAQ,MAAO,KACfA,QAAQ,MAAO,IACvB,CAOD,mBAAOyV,CAAamoC,GAChB,OAAO7F,OAAOpU,KAAKia,EAAWlsC,IAAsBm4B,SAAS,OAChE,CAID,sBAAOgU,CAAgBD,GACnB,IAAIjkC,EAAMikC,EAAU59C,QAAQ,KAAM,KAAKA,QAAQ,KAAM,KACrD,KAAO2Z,EAAIhZ,OAAS,GAChBgZ,GAAO,IAEX,OAAO8jC,GAAchoC,aAAakE,EACrC;yCCrCL,MAAMmkC,GAKF,MAAAC,CAAOC,GACH,OAAOvB,EAAOwB,WAAW9I,IAAa+I,OAAOF,GAAQG,QACxD;yCCDL,MAAMC,GACF,WAAAniD,GACIG,KAAKiiD,UAAY,IAAIP,EACxB,CAKD,uBAAMQ,GACF,MAAMC,EAAWniD,KAAKoiD,uBAEtB,MAAO,CAAED,WAAUE,UADDriD,KAAKsiD,kCAAkCH,GAE5D,CAID,oBAAAC,GACI,MAAMG,EAAU,GACVC,EAAY,IAAO,IAAMxJ,GAAmBz0C,OAClD,KAAOg+C,EAAQh+C,QhBmDG,IgBnD0B,CACxC,MAAMk+C,EAAOpC,EAAOqC,YAAY,GAAG,GACnC,GAAID,GAAQD,EAKR,SAEJ,MAAM99C,EAAQ+9C,EAAOzJ,GAAmBz0C,OACxCg+C,EAAQz+C,KAAKk1C,GAAmBt0C,GACnC,CACD,MAAMy9C,EAAWI,EAAQ7iD,KAAK0Q,GAAUyB,cACxC,OAAOwvC,GAAcE,gBAAgBY,EACxC,CAKD,iCAAAG,CAAkCtR,GAC9B,OAAOqQ,GAAcE,gBAAgBvhD,KAAKiiD,UAAUN,OAAO3Q,GAAcvD,SAASn4B,IAAuBA,GAC5G;yCCtCL,MAAMqtC,GACF,WAAA9iD,GAEIG,KAAK4iD,cAAgB,IAAIZ,GACzBhiD,KAAK6iD,cAAgB,IAAI5B,GACzBjhD,KAAKiiD,UAAY,IAAIP,EACxB,CAID,eAAAnoC,GACI,MAAM,IAAI9Z,MAAM,0BACnB,CAMD,SAAA+Z,GACI,MAAM,IAAI/Z,MAAM,0BACnB,CAKD,aAAA2Z,GACI,OAAOpZ,KAAK6iD,cAAc3B,cAC7B,CAKD,YAAA5nC,CAAaoF,GACT,OAAO2iC,GAAc/nC,aAAaoF,EACrC,CAKD,YAAArF,CAAaqF,GACT,OAAO2iC,GAAchoC,aAAaqF,EACrC,CAID,iBAAAwjC,GACI,OAAOliD,KAAK4iD,cAAcV,mBAC7B,CAID,sBAAAzoC,GACI,MAAM,IAAIha,MAAM,0BACnB,CAKD,qBAAAia,GACI,MAAM,IAAIja,MAAM,0BACnB,CAID,aAAAka,GACI,MAAM,IAAIla,MAAM,0BACnB,CAID,OAAAma,GACI,MAAM,IAAIna,MAAM,0BACnB,CAID,gBAAMoa,CAAWipC,GACb,OAAOzB,GAAcE,gBAAgBvhD,KAAKiiD,UAAUN,OAAOmB,GAAWrV,SAASn4B,IAAuBA,GACzG;;;AC/EL,MAAMytC,WAAoBt7B,GACtB,WAAA5nB,CAAYoG,EAAQ4H,EAAU6Z,EAAYE,GACtC7nB,MAAM8N,EAAU6Z,EAAYzhB,EAAQ,IAAIqsB,GAAyB1K,GACjE5nB,KAAKf,MAAQ,GACbe,KAAKgjD,eAAiB,GACtBhjD,KAAKiG,OAASA,CACjB,CAKD,qBAAAg9C,CAAsBC,GAClBljD,KAAKgjD,eAAel/C,KAAKo/C,EAC5B,CAID,UAAAC,GACInjD,KAAKgjD,eAAehlC,QAASklC,GAASA,EAAKE,KAAK,MACnD,CAKD,oBAAAC,CAAqBpkD,GACjB,MAAMqkD,EAAgB,CAClBp3C,SAAU,CAAE,EACZsB,SAAU,CAAE,EACZS,aAAc,CAAE,EAChBoB,cAAe,CAAE,EACjBM,YAAa,CAAE,GAEnB,IAAK,MAAMlH,KAAOxJ,EAAO,CACrB,MAAMyJ,EAAQzJ,EAAMwJ,GACpB,GAAqB,iBAAVC,EAGX,GAAIA,aAAiBm+B,GACjByc,EAAcp3C,SAASzD,GAAOC,OAE7B,GAAI66C,GAA6B76C,GAClC46C,EAAc91C,SAAS/E,GAAOC,OAE7B,GAAI86C,GAAiC96C,GACtC46C,EAAcr1C,aAAaxF,GAAOC,OAEjC,GAAI+6C,GAAkC/6C,GACvC46C,EAAcj0C,cAAc5G,GAAOC,MAElC,KAAIg7C,GAAiCj7C,EAAKC,GAI3C,SAHA46C,EAAc3zC,YAAYlH,GAAOC,CAIpC,CACJ,CACD,OAAO46C,CACV,CAKD,oBAAAK,CAAqBL,GAEjB,IAAIrkD,EAAQe,KAAK4jD,WAUjB,OATA3kD,EAAQ,IACDA,KACAqkD,EAAcp3C,YACdo3C,EAAc91C,YACd81C,EAAcr1C,gBACdq1C,EAAcj0C,iBACdi0C,EAAc3zC,aAGd1Q,CACV,CAID,gBAAA4kD,GACI7jD,KAAKiG,OAAOkV,MAAM,2BAGlB,OADsBnb,KAAKqjD,qBAAqBrjD,KAAK4jD,WAExD,CAKD,gBAAAE,CAAiBR,GACbtjD,KAAKiG,OAAOkV,MAAM,2BAElB,MAAMlc,EAAQe,KAAK2jD,qBAAqBL,GACxCtjD,KAAK+jD,SAAS9kD,GACde,KAAKmjD,YACR,CAID,QAAAS,GAEI,OADA5jD,KAAKiG,OAAOkV,MAAM,iCACXnb,KAAKf,KACf,CAKD,QAAA8kD,CAAS9kD,GACLe,KAAKiG,OAAOkV,MAAM,iCAClBnb,KAAKf,MAAQA,EAEbe,KAAKmjD,YACR,CAKD,OAAAa,CAAQv7C,GACJzI,KAAKiG,OAAOoV,SAAS,aAAa5S,KAGlC,OADczI,KAAK4jD,WACNn7C,EAChB,CAMD,OAAAw7C,CAAQx7C,EAAKC,GACT1I,KAAKiG,OAAOoV,SAAS,aAAa5S,KAElC,MAAMxJ,EAAQe,KAAK4jD,WACnB3kD,EAAMwJ,GAAOC,EAEb1I,KAAK+jD,SAAS9kD,EACjB,CACD,qBAAAuwB,CAAsB7E,GAClB,OChJR,SAA+BA,GAC3B,MAAMnb,EAAYmb,EAAWhd,iBAAmB8F,GAAeI,eAC3D8W,EAAWnb,UACXmb,EAAW9c,SACTq2C,EAASv5B,EAAW5b,WACtB4b,EAAW5b,UAAU6Q,gBACjBhL,GAAqBC,OAAO+K,cAC9B+K,EAAW5b,UAAU6Q,cACrB,GAWN,MAVsB,CAClB+K,EAAWre,cACXqe,EAAWpe,YACXoe,EAAWhd,eACX6B,EACAmb,EAAWne,OAAS,GACpBme,EAAWxc,QAAU,GACrBwc,EAAW1b,qBAAuB,GAClCi1C,GAEiBxkD,KAAKu5C,IAAqBr5B,aACnD,CD4He4P,CAAsB7E,EAChC,CACD,kBAAAmH,CAAmBxJ,GACf,OC9HR,SAA4BA,GACxB,MAAM67B,EAAe77B,EAAQhc,cAAc9I,MAAM,KAAK,GAMtD,MALmB,CACf8kB,EAAQhc,cACRgc,EAAQ/b,YACR43C,GAAgB77B,EAAQpH,UAAY,IAEtBxhB,KAAKu5C,IAAqBr5B,aAChD,CDsHekS,CAAmBxJ,EAC7B,CACD,cAAA+C,GACI,MAAMi4B,EAAgBtjD,KAAK6jD,mBAE3B,OADoBrhD,OAAO2J,KAAKm3C,EAAcp3C,SAEjD,CACD,YAAAqd,GACI,MAAM+5B,EAAgBtjD,KAAK6jD,mBAM3B,MALkB,CACdxhC,QAAS7f,OAAO2J,KAAKm3C,EAAc91C,UACnC6c,YAAa7nB,OAAO2J,KAAKm3C,EAAcr1C,cACvCsc,aAAc/nB,OAAO2J,KAAKm3C,EAAcj0C,eAG/C,CAMD,UAAAoc,CAAWmiB,GAEP,OADsB5tC,KAAKgkD,QAAQpW,GAE7BprC,OAAOC,OAAO,IAAIokC,GAAiB7mC,KAAKgkD,QAAQpW,IAChD,IACT,CAKD,gBAAMzjB,CAAW7B,GACb,MAAMslB,EAAa5tC,KAAK8xB,mBAAmBxJ,EAAQG,kBACnDzoB,KAAKikD,QAAQrW,EAAYtlB,EAC5B,CAKD,oBAAAyG,CAAqBq1B,GACjB,MAAM/hC,EAAUriB,KAAKgkD,QAAQI,GAC7B,OAAIb,GAA6BlhC,GACtBA,EAEJ,IACV,CAKD,0BAAM+H,CAAqB/H,GACvB,MAAM+hC,EAAapkD,KAAKwvB,sBAAsBnN,GAC9CriB,KAAKikD,QAAQG,EAAY/hC,EAC5B,CAKD,wBAAA2I,CAAyBq5B,GACrB,MAAMh6B,EAAcrqB,KAAKgkD,QAAQK,GACjC,OAAIb,GAAiCn5B,GAC1BA,EAEJ,IACV,CAKD,8BAAMc,CAAyBd,GAC3B,MAAMg6B,EAAiBrkD,KAAKwvB,sBAAsBnF,GAClDrqB,KAAKikD,QAAQI,EAAgBh6B,EAChC,CAKD,yBAAA6F,CAA0Bo0B,GACtB,MAAM/5B,EAAevqB,KAAKgkD,QAAQM,GAClC,OAAIb,GAAkCl5B,GAC3BA,EAEJ,IACV,CAKD,+BAAMC,CAA0BD,GAC5B,MAAM+5B,EAAkBtkD,KAAKwvB,sBAAsBjF,GACnDvqB,KAAKikD,QAAQK,EAAiB/5B,EACjC,CAKD,cAAAqC,CAAe23B,GACX,MAAM50C,EAAc3P,KAAKgkD,QAAQO,GACjC,OAAIb,GAAiCa,EAAgB50C,GAC1CA,EAEJ,IACV,CAKD,cAAA8a,CAAe9a,GACX,MAAM40C,E5CpEd,UAAgCh4C,YAAEA,EAAWsB,SAAEA,IAM3C,MAL4B,CACxBiG,GACAvH,EACAsB,GAGCnO,KAAK8T,IACLoM,aACT,C4C2D+B4kC,CAAoC70C,GAC3D3P,KAAKikD,QAAQM,EAAgB50C,EAChC,CAKD,kBAAA+hB,CAAmB+yB,GACf,MAAMpO,EAAwBr2C,KAAKgkD,QAAQS,GAC3C,OAAIpO,G5C3GZ,SAAiC5tC,EAAK+iB,GAClC,MAAMk5B,EAAgE,IAAlDj8C,EAAI9D,QAAQuP,GAAuBI,WACvD,IAAIqwC,GAAiB,EAOrB,OANIn5B,IACAm5B,EACIn5B,EAAOgM,eAAe,mBAClBhM,EAAOgM,eAAe,WACtBhM,EAAOgM,eAAe,cAE3BktB,GAAeC,CAC1B,C4CkGYC,CAAqCH,EAAoBpO,GAClDA,EAEJ,IACV,CAMD,kBAAA5kB,CAAmBozB,EAAoBC,GACnC9kD,KAAKikD,QAAQY,EAAoBC,EACpC,CAKD,oBAAA53B,CAAqBzkB,GACjB,MAAMs8C,EAA0B/kD,KAAKgkD,QAAQv7C,GAC7C,OAAIs8C,G5CvEZ,SAAmCt8C,EAAK+iB,GACpC,QAAKA,GAG2D,IAAxD/iB,EAAI9D,QAAQqP,KAChBwX,EAAOgM,eAAe,YACtBhM,EAAOgM,eAAe,oBACtBhM,EAAOgM,eAAe,sBACtBhM,EAAOgM,eAAe,wBACtBhM,EAAOgM,eAAe,2BACtBhM,EAAOgM,eAAe,mBACtBhM,EAAOgM,eAAe,WACtBhM,EAAOgM,eAAe,uBACtBhM,EAAOgM,eAAe,yBACtBhM,EAAOgM,eAAe,cACtBhM,EAAOgM,eAAe,WAC9B,C4CwDYwtB,CAAuCv8C,EAAKs8C,GACrCA,EAEJ,IACV,CAID,wBAAAh4B,GACI,OAAO/sB,KAAKysB,UAAUnO,OAAQ7V,GACnBzI,KAAKitB,oBAAoBxkB,GAEvC,CAMD,oBAAAkpB,CAAqBlpB,EAAKge,GACtBzmB,KAAKikD,QAAQx7C,EAAKge,EACrB,CAKD,kBAAAoL,CAAmBozB,GACf,MAAMC,EAAkBllD,KAAKgkD,QAAQiB,GACrC,OAAIC,G5C3IZ,SAA4Bz8C,EAAK+iB,GAC7B,IAAIk5B,GAAc,EACdj8C,IACAi8C,EAAqE,IAAvDj8C,EAAI9D,QAAQqQ,KAE9B,IAAI2vC,GAAiB,EAIrB,OAHIn5B,IACAm5B,EAAiBn5B,EAAOgM,eAAe,iBAEpCktB,GAAeC,CAC1B,C4CkIYQ,CAAgCF,EAAoBC,GAC7CA,EAEJ,IACV,CAMD,kBAAAtzB,CAAmBqzB,EAAoBC,GACnCllD,KAAKikD,QAAQgB,EAAoBC,EACpC,CAMD,UAAA53B,CAAW7kB,GACPzI,KAAKiG,OAAOoV,SAAS,aAAa5S,KAElC,IAAI5F,GAAS,EACb,MAAM5D,EAAQe,KAAK4jD,WAUnB,OATM3kD,EAAMwJ,YACDxJ,EAAMwJ,GACb5F,GAAS,GAGTA,IACA7C,KAAK+jD,SAAS9kD,GACde,KAAKmjD,cAEFtgD,CACV,CAKD,qBAAAuiD,CAAsBxX,GAClB5tC,KAAKstB,WAAWsgB,EACnB,CAKD,WAAAyX,CAAY58C,GACR,OAAOzI,KAAKysB,UAAUlnB,SAASkD,EAClC,CAID,OAAAgkB,GACIzsB,KAAKiG,OAAOkV,MAAM,6BAElB,MAAMlc,EAAQe,KAAK4jD,WACnB,MAAO,IAAIphD,OAAO2J,KAAKlN,GAC1B,CAID,KAAAqmD,GACItlD,KAAKiG,OAAOkV,MAAM,0CAEAnb,KAAKysB,UAEbzO,QAASvV,IACfzI,KAAKstB,WAAW7kB,KAEpBzI,KAAKmjD,YACR,CAKD,4BAAOoC,CAAsBtmD,GACzB,OAAO63C,GAAaoB,oBAAoBpB,GAAaC,oBAAoB93C,GAC5E,CAKD,wBAAOumD,CAAkBlC,GACrB,OAAO13C,GAAWiE,kBAAkByzC,EACvC,CAID,wBAAAmC,CAAyBC,EAAiB/6B,GACtC,MAAMg7B,EAAkB3lD,KAAKwvB,sBAAsB7E,GACnD,GAAI+6B,IAAoBC,EAAiB,CACrC,MAAMC,EAAY5lD,KAAKgkD,QAAQ0B,GAC/B,GAAIE,EAIA,OAHA5lD,KAAKstB,WAAWo4B,GAChB1lD,KAAKikD,QAAQ0B,EAAiBC,GAC9B5lD,KAAKiG,OAAOlB,QAAQ,uBAAuB4lB,EAAWhd,4BAC/Cg4C,EAGP3lD,KAAKiG,OAAO1F,MAAM,mCAAmCoqB,EAAWhd,sFAEvE,CACD,OAAO+3C,CACV;yCE3ZL,MAAMG,GACO,CAAE,EADTA,GAEO,CAAE,EAFTA,GAGW,CAAE,EAHbA,GAIY,CAAE,EAJdA,GAKW,CAAE,EAMnB,MAAMC,GACF,WAAAjmD,CAAYkmD,EAAS9/C,EAAQ+/C,GACzBhmD,KAAKsrC,iBAAkB,EACvBtrC,KAAK+lD,QAAUA,EACf/lD,KAAK+lD,QAAQ9C,sBAAsBjjD,KAAKimD,kBAAkBxrB,KAAKz6B,OAC3DgmD,IACAhmD,KAAKkmD,YAAcF,GAEvBhmD,KAAKiG,OAASA,CACjB,CAID,UAAAolC,GACI,OAAOrrC,KAAKsrC,eACf,CAID,SAAA6a,GACInmD,KAAKiG,OAAOkV,MAAM,+BAClB,IAAIirC,EAAax6C,GAAWiE,kBAAkB7P,KAAK+lD,QAAQlC,oBAU3D,OARI7jD,KAAKqmD,eACLrmD,KAAKiG,OAAOkV,MAAM,oCAClBirC,EAAapmD,KAAKsmD,WAAW1lD,KAAKC,MAAMb,KAAKqmD,eAAgBD,IAG7DpmD,KAAKiG,OAAOkV,MAAM,8BAEtBnb,KAAKsrC,iBAAkB,EAChB1qC,KAAKmL,UAAUq6C,EACzB,CAKD,WAAAG,CAAYtnD,GAGR,GAFAe,KAAKiG,OAAOkV,MAAM,yCAClBnb,KAAKqmD,cAAgBpnD,EACjBe,KAAKqmD,cAAe,CACpBrmD,KAAKiG,OAAOkV,MAAM,oCAClB,MAAMqrC,EAAoB1P,GAAaoB,oBAAoBl4C,KAAKymD,gBAAgB7lD,KAAKC,MAAMb,KAAKqmD,iBAChGrmD,KAAK+lD,QAAQjC,iBAAiB0C,EACjC,MAEGxmD,KAAKiG,OAAOkV,MAAM,mCAEzB,CAID,UAAAurC,GACI,OAAO1mD,KAAK+lD,QAAQnC,UACvB,CAID,gBAAA+C,GACI,MAAMC,EAAgC7D,GAAYwC,sBAAsBvlD,KAAKqmD,eAC7E,OAAOrmD,KAAK+lD,QAAQpC,qBAAqBiD,EAC5C,CAID,oBAAM9+B,CAAe5mB,GAAgB,IAAIyhD,IAAiBvpC,iBAEtD,IAAI6zB,EADJjtC,KAAKiG,OAAOkV,MAAM,yBAElB,IAKI,OAJInb,KAAKkmD,cACLjZ,EAAe,IAAI9B,GAAkBnrC,MAAM,SACrCA,KAAKkmD,YAAYhZ,kBAAkBD,IAEtCjtC,KAAK+lD,QAAQj+B,eAAe,CAAE,EAAE5mB,EAC1C,CACO,QACAlB,KAAKkmD,aAAejZ,SACdjtC,KAAKkmD,YAAY9Y,iBAAiBH,EAE/C,CACJ,CAOD,wBAAM4Z,CAAmBv6C,GACrB,MAAM8b,QAAoBpoB,KAAK8nB,iBAC/B,OAAIxb,GAAiB8b,GAAeA,EAAY7jB,QACpC6jB,EAAY9J,OAAQwoC,GAAeA,EAAWx6C,gBAAkBA,GAAe,IAGhF,IAEd,CAOD,yBAAMy6C,CAAoBr6C,GACtB,MAAM0b,QAAoBpoB,KAAK8nB,iBAC/B,OAAIpb,GAAkB0b,GAAeA,EAAY7jB,QACrC6jB,EAAY9J,OAAQwoC,GAAeA,EAAWp6C,iBAAmBA,GAAgB,IAGlF,IAEd,CAKD,mBAAM0gB,CAAc9E,EAASpnB,GAEzB,IAAI+rC,EADJjtC,KAAKiG,OAAOkV,MAAM,wBAElB,IACQnb,KAAKkmD,cACLjZ,EAAe,IAAI9B,GAAkBnrC,MAAM,SACrCA,KAAKkmD,YAAYhZ,kBAAkBD,IAE7CjtC,KAAK+lD,QAAQ34B,cAAc9E,EAASpnB,IAAiB,IAAI+/C,IAAgBC,eAC5E,CACO,QACAlhD,KAAKkmD,aAAejZ,SACdjtC,KAAKkmD,YAAY9Y,iBAAiBH,EAE/C,CACJ,CAID,oBAAM+Z,GACF,IAAKhnD,KAAKkmD,YAEN,YADAlmD,KAAKiG,OAAOjB,KAAK,+DAGrBhF,KAAKiG,OAAOjB,KAAK,qDACjBhF,KAAK+lD,QAAQT,QACb,MAAMrY,EAAe,IAAI9B,GAAkBnrC,MAAM,SAC3CA,KAAKkmD,YAAYhZ,kBAAkBD,GACzC,MAAMoZ,EAAgBrmD,KAAK2mD,mBAC3B3mD,KAAK+lD,QAAQhC,SAASsC,SAChBrmD,KAAKkmD,YAAY9Y,iBAAiBH,EAC3C,CAID,iBAAAgZ,GACIjmD,KAAKsrC,iBAAkB,CAC1B,CAMD,UAAAgb,CAAWW,EAAUC,GACjBlnD,KAAKiG,OAAOkV,MAAM,+CAClB,MAAMgsC,EAAoBnnD,KAAKonD,cAAcH,EAAUC,GACvD,OAAOlnD,KAAKqnD,aAAaF,EAAmBD,EAC/C,CAMD,YAAAG,CAAaJ,EAAUK,GA2BnB,OA1BA9kD,OAAO2J,KAAKm7C,GAAUtpC,QAASupC,IAC3B,MAAMC,EAAWF,EAASC,GAE1B,GAAKN,EAASzvB,eAAe+vB,GAKxB,CAED,MAAME,EAA+B,OAAbD,EAClBE,EAAuC,iBAAbF,EAC1BG,GAAsBtgD,MAAMC,QAAQkgD,GACpCI,OAAyD,IAArBX,EAASM,IAC1B,OAArBN,EAASM,GACTE,GACAC,GACAC,GACAC,EACA5nD,KAAKqnD,aAAaJ,EAASM,GAASC,GAGpCP,EAASM,GAAUC,CAE1B,MApBoB,OAAbA,IACAP,EAASM,GAAUC,KAqBxBP,CACV,CAOD,aAAAG,CAAcH,EAAUK,GACpBtnD,KAAKiG,OAAOkV,MAAM,mCAClB,MAAMjP,EAAW+6C,EAASl3C,QACpB/P,KAAK6nD,kBAAkBZ,EAASl3C,QAASu3C,EAASv3C,SAClDk3C,EAASl3C,QACT9B,EAAeg5C,EAASh3C,YACxBjQ,KAAK6nD,kBAAkBZ,EAASh3C,YAAaq3C,EAASr3C,aACtDg3C,EAASh3C,YACTZ,EAAgB43C,EAAS/2C,aACzBlQ,KAAK6nD,kBAAkBZ,EAAS/2C,aAAco3C,EAASp3C,cACvD+2C,EAAS/2C,aACT1C,EAAWy5C,EAASj3C,QACpBhQ,KAAK6nD,kBAAkBZ,EAASj3C,QAASs3C,EAASt3C,SAClDi3C,EAASj3C,QACTL,EAAcs3C,EAAS92C,YACvBnQ,KAAK6nD,kBAAkBZ,EAAS92C,YAAam3C,EAASn3C,aACtD82C,EAAS92C,YACf,MAAO,IACA82C,EACHl3C,QAAS7D,EACT+D,YAAahC,EACbiC,aAAcb,EACdW,QAASxC,EACT2C,YAAaR,EAEpB,CAMD,iBAAAk4C,CAAkBZ,EAAUK,GACxB,MAAMlB,EAAa,IAAKa,GAMxB,OALAzkD,OAAO2J,KAAK86C,GAAUjpC,QAAS8pC,IACtBR,GAAaA,EAAS9vB,eAAeswB,WAC/B1B,EAAW0B,KAGnB1B,CACV,CAKD,eAAAK,CAAgBsB,GAEZ,OADA/nD,KAAKiG,OAAOkV,MAAM,iDACX,CACHpL,QAAS,IACF81C,MACAkC,EAAch4C,SAErBC,QAAS,IACF61C,MACAkC,EAAc/3C,SAErBC,YAAa,IACN41C,MACAkC,EAAc93C,aAErBC,aAAc,IACP21C,MACAkC,EAAc73C,cAErBC,YAAa,IACN01C,MACAkC,EAAc53C,aAG5B,mKCrSL,IAAIyxC,EAASoG,EACTrM,EAASiG,EAAOjG,OAGpB,SAASsM,EAAWC,EAAKC,GACvB,IAAK,IAAI1/C,KAAOy/C,EACdC,EAAI1/C,GAAOy/C,EAAIz/C,EAEnB,CASA,SAAS2/C,EAAYC,EAAKC,EAAkB/jD,GAC1C,OAAOo3C,EAAO0M,EAAKC,EAAkB/jD,EACvC,CAVIo3C,EAAOpU,MAAQoU,EAAO4M,OAAS5M,EAAO6M,aAAe7M,EAAO8M,gBAC9DC,EAAiBC,QAAA/G,GAGjBqG,EAAUrG,EAAQ+G,GAClBA,EAAiBhN,OAAAyM,GAOnBA,EAAWtyC,UAAYtT,OAAOomD,OAAOjN,EAAO7lC,WAG5CmyC,EAAUtM,EAAQyM,GAElBA,EAAW7gB,KAAO,SAAU8gB,EAAKC,EAAkB/jD,GACjD,GAAmB,iBAAR8jD,EACT,MAAM,IAAIzH,UAAU,iCAEtB,OAAOjF,EAAO0M,EAAKC,EAAkB/jD,EACvC,EAEA6jD,EAAWG,MAAQ,SAAUzoC,EAAM+oC,EAAMvH,GACvC,GAAoB,iBAATxhC,EACT,MAAM,IAAI8gC,UAAU,6BAEtB,IAAIE,EAAMnF,EAAO77B,GAUjB,YATaje,IAATgnD,EACsB,iBAAbvH,EACTR,EAAI+H,KAAKA,EAAMvH,GAEfR,EAAI+H,KAAKA,GAGX/H,EAAI+H,KAAK,GAEJ/H,CACT,EAEAsH,EAAWI,YAAc,SAAU1oC,GACjC,GAAoB,iBAATA,EACT,MAAM,IAAI8gC,UAAU,6BAEtB,OAAOjF,EAAO77B,EAChB,EAEAsoC,EAAWK,gBAAkB,SAAU3oC,GACrC,GAAoB,iBAATA,EACT,MAAM,IAAI8gC,UAAU,6BAEtB,OAAOgB,EAAOkH,WAAWhpC,EAC3B,iEC/DA,IAAI67B,EAASqM,KAAuBrM,OAChCoN,EAASC,EAGb,SAASC,EAAWn9C,GAMlB,GALA9L,KAAK4hD,OAAS,KACd5hD,KAAKkpD,UAAW,EAChBlpD,KAAKmpD,UAAW,GAGXr9C,EAEH,OADA9L,KAAK4hD,OAASjG,EAAO4M,MAAM,GACpBvoD,KAIT,GAAyB,mBAAd8L,EAAKs9C,KAGd,OAFAppD,KAAK4hD,OAASjG,EAAO4M,MAAM,GAC3Bz8C,EAAKs9C,KAAKppD,MACHA,KAKT,GAAI8L,EAAKvH,QAA0B,iBAATuH,EAQxB,OAPA9L,KAAK4hD,OAAS91C,EACd9L,KAAKkpD,UAAW,EAChBnnD,QAAQsnD,SAAS,WACfrpD,KAAKspD,KAAK,MAAOx9C,GACjB9L,KAAKmpD,UAAW,EAChBnpD,KAAKspD,KAAK,QAChB,EAAM7uB,KAAKz6B,OACAA,KAGT,MAAM,IAAI4gD,UAAU,gCAAiC90C,EAAO,IAC9D,QAlCWy9C,EAmCNC,SAASP,EAAYF,GAE1BE,EAAWnzC,UAAU7S,MAAQ,SAAe6I,GAC1C9L,KAAK4hD,OAASjG,EAAOC,OAAO,CAAC57C,KAAK4hD,OAAQjG,EAAOpU,KAAKz7B,KACtD9L,KAAKspD,KAAK,OAAQx9C,IAGpBm9C,EAAWnzC,UAAUpM,IAAM,SAAaoC,GAClCA,GACF9L,KAAKiD,MAAM6I,GACb9L,KAAKspD,KAAK,MAAOx9C,GACjB9L,KAAKspD,KAAK,SACVtpD,KAAKkpD,UAAW,EAChBlpD,KAAKmpD,UAAW,GAGlBM,GAAiBR,qCCpDjB,IAAItN,EAASqM,KAAuBrM,OAEhC+N,6BCFJ,SAASC,EAAaC,GAErB,OADeA,EAAU,EAAK,IAAMA,EAAU,GAAM,EAAI,EAAI,EAE7D,MAEA,IAAIC,EAAmB,CACtBC,MAAOH,EAAa,KACpBI,MAAOJ,EAAa,KACpBK,MAAOL,EAAa,aAYrBM,GATA,SAA6BC,GAC5B,IAAIC,EAAaN,EAAiBK,GAClC,GAAIC,EACH,OAAOA,EAGR,MAAM,IAAI1qD,MAAM,sBAAwByqD,EAAM,IAC/C,EDhB0BlB,GAEtBoB,EAAY,IAehB,SAASC,EAAkBC,GAC1B,GAAI3O,EAAO4O,SAASD,GACnB,OAAOA,EACD,GAAI,iBAAoBA,EAC9B,OAAO3O,EAAOpU,KAAK+iB,EAAW,UAG/B,MAAM,IAAI1J,UAAU,sDACrB,CAuFA,SAAS4J,EAAa1J,EAAK2J,EAAOC,GAEjC,IADA,IAAIC,EAAU,EACPF,EAAQE,EAAUD,GAAiC,IAAzB5J,EAAI2J,EAAQE,MAC1CA,EAQH,OALgB7J,EAAI2J,EAAQE,IAAYP,KAErCO,EAGIA,CACR,QAuDAC,GAAiB,CAChBC,UAzJD,SAAmBP,EAAWJ,GAC7BI,EAAYD,EAAkBC,GAC9B,IAAIH,EAAaT,EAAoBQ,GAIjCY,EAAwBX,EAAa,EAErCY,EAAcT,EAAU/lD,OAExB+2B,EAAS,EACb,GA/BkB,KA+BdgvB,EAAUhvB,KACb,MAAM,IAAI77B,MAAM,iCAGjB,IAAIurD,EAAYV,EAAUhvB,KAK1B,GAJa,MAAT0vB,IACHA,EAAYV,EAAUhvB,MAGnByvB,EAAczvB,EAAS0vB,EAC1B,MAAM,IAAIvrD,MAAM,8BAAgCurD,EAAY,aAAeD,EAAczvB,GAAU,eAGpG,GA7CU,IA6CNgvB,EAAUhvB,KACb,MAAM,IAAI77B,MAAM,yCAGjB,IAAIwrD,EAAUX,EAAUhvB,KAExB,GAAIyvB,EAAczvB,EAAS,EAAI2vB,EAC9B,MAAM,IAAIxrD,MAAM,4BAA8BwrD,EAAU,aAAeF,EAAczvB,EAAS,GAAK,eAGpG,GAAIwvB,EAAwBG,EAC3B,MAAM,IAAIxrD,MAAM,4BAA8BwrD,EAAU,cAAgBH,EAAwB,mBAGjG,IAAII,EAAU5vB,EAGd,GAFAA,GAAU2vB,EA5DA,IA8DNX,EAAUhvB,KACb,MAAM,IAAI77B,MAAM,yCAGjB,IAAI0rD,EAAUb,EAAUhvB,KAExB,GAAIyvB,EAAczvB,IAAW6vB,EAC5B,MAAM,IAAI1rD,MAAM,4BAA8B0rD,EAAU,iBAAmBJ,EAAczvB,GAAU,KAGpG,GAAIwvB,EAAwBK,EAC3B,MAAM,IAAI1rD,MAAM,4BAA8B0rD,EAAU,cAAgBL,EAAwB,mBAGjG,IAAIM,EAAU9vB,EAGd,IAFAA,GAAU6vB,KAEKJ,EACd,MAAM,IAAItrD,MAAM,4CAA8CsrD,EAAczvB,GAAU,kBAGvF,IAAI+vB,EAAWlB,EAAac,EAC3BK,EAAWnB,EAAagB,EAErBhD,EAAMxM,EAAO6M,YAAY6C,EAAWJ,EAAUK,EAAWH,GAE7D,IAAK7vB,EAAS,EAAGA,EAAS+vB,IAAY/vB,EACrC6sB,EAAI7sB,GAAU,EAEfgvB,EAAUiB,KAAKpD,EAAK7sB,EAAQ4vB,EAAUnwB,KAAKywB,KAAKH,EAAU,GAAIH,EAAUD,GAIxE,IAAK,IAAIQ,EAFTnwB,EAAS6uB,EAEY7uB,EAASmwB,EAAIH,IAAYhwB,EAC7C6sB,EAAI7sB,GAAU,EAOf,OALAgvB,EAAUiB,KAAKpD,EAAK7sB,EAAQ8vB,EAAUrwB,KAAKywB,KAAKF,EAAU,GAAIF,EAAUD,GAGxEhD,GADAA,EAAMA,EAAI1a,SAAS,WA9FjB7pC,QAAQ,KAAM,IACdA,QAAQ,MAAO,KACfA,QAAQ,MAAO,IAgGlB,EAuEC8nD,UAvDD,SAAmBpB,EAAWJ,GAC7BI,EAAYD,EAAkBC,GAC9B,IAAIH,EAAaT,EAAoBQ,GAEjCyB,EAAiBrB,EAAU/lD,OAC/B,GAAIonD,IAAgC,EAAbxB,EACtB,MAAM,IAAIvJ,UAAU,IAAMsJ,EAAM,yBAAwC,EAAbC,EAAiB,iBAAmBwB,EAAiB,KAGjH,IAAIN,EAAWb,EAAaF,EAAW,EAAGH,GACtCmB,EAAWd,EAAaF,EAAWH,EAAYG,EAAU/lD,QACzD0mD,EAAUd,EAAakB,EACvBF,EAAUhB,EAAamB,EAEvBM,EAAU,EAAQX,EAAU,EAAI,EAAIE,EAEpCU,EAAcD,EAAUxB,EAExBjC,EAAMxM,EAAO6M,aAAaqD,EAAc,EAAI,GAAKD,GAEjDtwB,EAAS,EA8Bb,OA7BA6sB,EAAI7sB,KA5Ic,GA6IduwB,EAGH1D,EAAI7sB,KAAYswB,GAIhBzD,EAAI7sB,KAAY8uB,IAEhBjC,EAAI7sB,KAAsB,IAAVswB,GAEjBzD,EAAI7sB,KAzJM,EA0JV6sB,EAAI7sB,KAAY2vB,EACZI,EAAW,GACdlD,EAAI7sB,KAAY,EAChBA,GAAUgvB,EAAUiB,KAAKpD,EAAK7sB,EAAQ,EAAG6uB,IAEzC7uB,GAAUgvB,EAAUiB,KAAKpD,EAAK7sB,EAAQ+vB,EAAUlB,GAEjDhC,EAAI7sB,KAjKM,EAkKV6sB,EAAI7sB,KAAY6vB,EACZG,EAAW,GACdnD,EAAI7sB,KAAY,EAChBgvB,EAAUiB,KAAKpD,EAAK7sB,EAAQ6uB,IAE5BG,EAAUiB,KAAKpD,EAAK7sB,EAAQ6uB,EAAamB,GAGnCnD,CACR,sCErLA,IAwII2D,EAxIAnQ,EAASqM,KAAuBrM,OAChC0E,EAAS2I,EACT+C,EAAcxC,KACdrmD,EAAO8oD,EAGPC,EAAqB,oCACrBC,EAA2B,mCAG3BC,EAAuD,mBAA3B9L,EAAO+L,gBAMvC,SAASC,EAAiB5jD,GACxB,IAAIkzC,EAAO4O,SAAS9hD,IAID,iBAARA,EAAX,CAIA,IAAK0jD,EACH,MAAMG,EAAUJ,GAGlB,GAAmB,iBAARzjD,EACT,MAAM6jD,EAAUJ,GAGlB,GAAwB,iBAAbzjD,EAAIk9B,KACb,MAAM2mB,EAAUJ,GAGlB,GAAqC,iBAA1BzjD,EAAI8jD,kBACb,MAAMD,EAAUJ,GAGlB,GAA0B,mBAAfzjD,EAAI+jD,OACb,MAAMF,EAAUJ,EAnBpB,EAuBA,SAASO,EAAkBhkD,GACzB,IAAIkzC,EAAO4O,SAAS9hD,IAID,iBAARA,GAIQ,iBAARA,EAIX,MAAM6jD,EAnDqB,+CAgF7B,SAASI,EAAWC,GAClB,OAAOA,EACJ/oD,QAAQ,KAAM,IACdA,QAAQ,MAAO,KACfA,QAAQ,MAAO,IACpB,CAEA,SAASgpD,EAASC,GAGhB,IAAIlC,EAAU,GAFdkC,EAAYA,EAAUpf,YAEMlpC,OAAS,EACrC,GAAgB,IAAZomD,EACF,IAAK,IAAIh/C,EAAI,EAAGA,EAAIg/C,IAAWh/C,EAC7BkhD,GAAa,IAIjB,OAAOA,EACJjpD,QAAQ,MAAO,KACfA,QAAQ,KAAM,IACnB,CAEA,SAAS0oD,EAAUQ,GACjB,IAAI/pD,EAAO,GAAGwhB,MAAM6+B,KAAK3C,UAAW,GAChCsM,EAAS7pD,EAAKC,OAAOs3B,KAAKv3B,EAAM4pD,GAAUE,MAAM,KAAMjqD,GAC1D,OAAO,IAAI69C,UAAUmM,EACvB,CAMA,SAASE,EAAeC,GAJxB,IAAwB5vC,EAOtB,OAPsBA,EAKF4vC,EAJbvR,EAAO4O,SAASjtC,IAAuB,iBAARA,IAKpC4vC,EAAQtsD,KAAKmL,UAAUmhD,IAClBA,CACT,CAEA,SAASC,EAAiBC,GACxB,OAAO,SAAcF,EAAOp/C,IAjE9B,SAA0BrF,GACxB,IAAIkzC,EAAO4O,SAAS9hD,GAApB,CAIA,GAAmB,iBAARA,EACT,OAAOA,EAGT,IAAK0jD,EACH,MAAMG,EAAUL,GAGlB,GAAmB,iBAARxjD,EACT,MAAM6jD,EAAUL,GAGlB,GAAiB,WAAbxjD,EAAIk9B,KACN,MAAM2mB,EAAUL,GAGlB,GAA0B,mBAAfxjD,EAAI+jD,OACb,MAAMF,EAAUL,EAnBpB,CAqBA,CA0CIoB,CAAiBv/C,GACjBo/C,EAAQD,EAAeC,GACvB,IAAII,EAAOjN,EAAOkN,WAAW,MAAQH,EAAMt/C,GAE3C,OAAO4+C,GADIY,EAAKxL,OAAOoL,GAAQI,EAAKvL,OAAO,WAE/C,CACA,CA3HIoK,IACFD,GAA4B,kBAC5BD,GAAsB,kBA4HxB,IAAIuB,EAAkB,oBAAqBnN,EAAS,SAAyBoN,EAAGC,GAC9E,OAAID,EAAEE,aAAeD,EAAEC,YAIhBtN,EAAOmN,gBAAgBC,EAAGC,EACnC,EAAI,SAAyBD,EAAGC,GAK9B,OAJK5B,IACHA,kCC/IJ,IAAInQ,EAASqM,EAAkBrM,OAC3BmN,EAAad,EAAkBc,WAInC,SAAS8E,EAASH,EAAGC,GAGnB,IAAK/R,EAAO4O,SAASkD,KAAO9R,EAAO4O,SAASmD,GAC1C,OAAO,EAMT,GAAID,EAAElpD,SAAWmpD,EAAEnpD,OACjB,OAAO,EAIT,IADA,IAAIspD,EAAI,EACCliD,EAAI,EAAGA,EAAI8hD,EAAElpD,OAAQoH,IAE5BkiD,GAAKJ,EAAE9hD,GAAK+hD,EAAE/hD,GAEhB,OAAa,IAANkiD,CACT,CAtBAC,GAAiBF,EAwBjBA,EAASG,QAAU,WACjBpS,EAAO7lC,UAAUk4C,MAAQlF,EAAWhzC,UAAUk4C,MAAQ,SAAeC,GACnE,OAAOL,EAAS5tD,KAAMiuD,KAI1B,IAAIC,EAAevS,EAAO7lC,UAAUk4C,MAChCG,EAAmBrF,EAAWhzC,UAAUk4C,aAC5CJ,EAASQ,QAAU,WACjBzS,EAAO7lC,UAAUk4C,MAAQE,EACzBpF,EAAWhzC,UAAUk4C,MAAQG,MD0GbE,IAGTvC,EAAY2B,EAAGC,EACxB,EAEA,SAASY,EAAmBlB,GAC1B,OAAO,SAAgBF,EAAO5C,EAAWx8C,GACvC,IAAIygD,EAAcpB,EAAiBC,EAAjBD,CAAuBD,EAAOp/C,GAChD,OAAO0/C,EAAgB7R,EAAOpU,KAAK+iB,GAAY3O,EAAOpU,KAAKgnB,GAC/D,CACA,CAEA,SAASC,EAAgBpB,GACxB,OAAO,SAAcF,EAAOrN,GACzB4M,EAAkB5M,GAClBqN,EAAQD,EAAeC,GAGvB,IAAIuB,EAASpO,EAAOqO,WAAW,UAAYtB,GAE3C,OAAOV,GADI+B,EAAO3M,OAAOoL,GAAQuB,EAAOE,KAAK9O,EAAY,WAE7D,CACA,CAEA,SAAS+O,EAAkBxB,GACzB,OAAO,SAAgBF,EAAO5C,EAAWuE,GACvCxC,EAAiBwC,GACjB3B,EAAQD,EAAeC,GACvB5C,EAAYsC,EAAStC,GACrB,IAAInI,EAAW9B,EAAOyO,aAAa,UAAY1B,GAE/C,OADAjL,EAASL,OAAOoL,GACT/K,EAAS4M,OAAOF,EAAWvE,EAAW,SACjD,CACA,CAEA,SAAS0E,EAAmB5B,GAC1B,OAAO,SAAcF,EAAOrN,GAC1B4M,EAAkB5M,GAClBqN,EAAQD,EAAeC,GACvB,IAAIuB,EAASpO,EAAOqO,WAAW,UAAYtB,GAM3C,OAAOV,GALI+B,EAAO3M,OAAOoL,GAAQuB,EAAOE,KAAK,CAC3ClmD,IAAKo3C,EACL8K,QAAStK,EAAO4O,UAAUC,sBAC1BC,WAAY9O,EAAO4O,UAAUG,wBAC5B,WAEP,CACA,CAEA,SAASC,EAAqBjC,GAC5B,OAAO,SAAgBF,EAAO5C,EAAWuE,GACvCxC,EAAiBwC,GACjB3B,EAAQD,EAAeC,GACvB5C,EAAYsC,EAAStC,GACrB,IAAInI,EAAW9B,EAAOyO,aAAa,UAAY1B,GAE/C,OADAjL,EAASL,OAAOoL,GACT/K,EAAS4M,OAAO,CACrBtmD,IAAKomD,EACLlE,QAAStK,EAAO4O,UAAUC,sBAC1BC,WAAY9O,EAAO4O,UAAUG,wBAC5B9E,EAAW,SAClB,CACA,CAEA,SAASgF,EAAkBlC,GACzB,IAAImC,EAAQf,EAAgBpB,GAC5B,OAAO,WACL,IAAI9C,EAAYiF,EAAMvC,MAAM,KAAMvM,WAElC,OADA6J,EAAYyB,EAAYlB,UAAUP,EAAW,KAAO8C,GAGxD,CAEA,SAASoC,EAAmBpC,GAC1B,IAAImC,EAAQX,EAAkBxB,GAC9B,OAAO,SAAgBF,EAAO5C,EAAWuE,GAGvC,OAFAvE,EAAYyB,EAAYL,UAAUpB,EAAW,KAAO8C,GAAM3f,SAAS,UACtD8hB,EAAMrC,EAAO5C,EAAWuE,GAGzC,CAEA,SAASY,IACP,OAAO,WACL,MAAO,EACX,CACA,CAEA,SAASC,IACP,OAAO,SAAgBxC,EAAO5C,GAC5B,MAAqB,KAAdA,CACX,CACA,QAEAqF,GAAiB,SAAaC,GAC5B,IAAIC,EAAkB,CACpBC,GAAI3C,EACJ4C,GAAIvB,EACJwB,GAAIhB,EACJiB,GAAIX,EACJY,KAAMT,GAEJU,EAAoB,CACtBL,GAAIxB,EACJyB,GAAInB,EACJoB,GAAIX,EACJY,GAAIT,EACJU,KAAMR,GAEJpqC,EAAQsqC,EAAUtqC,MAAM,0CAC5B,IAAKA,EACH,MAAMgnC,EA5PkB,wLA4PesD,GACzC,IAAIQ,GAAQ9qC,EAAM,IAAMA,EAAM,IAAI1F,cAC9BwtC,EAAO9nC,EAAM,GAEjB,MAAO,CACLqpC,KAAMkB,EAAgBO,GAAMhD,GAC5B2B,OAAQoB,EAAkBC,GAAMhD,2CEtQpC,IAAIzR,EAASqM,EAAkBrM,cAE/B0U,GAAiB,SAAkB/yC,GACjC,MAAmB,iBAARA,EACFA,EACU,iBAARA,GAAoBq+B,EAAO4O,SAASjtC,GACtCA,EAAImwB,WACN7sC,KAAKmL,UAAUuR,uCCPxB,IAAIq+B,EAASqM,KAAuBrM,OAChCsN,EAAaD,KACb2G,EAAMpG,KACNR,EAASiD,EACTve,EAAW4gB,KACXnrD,EAAOotD,EAEX,SAASzD,EAAU0D,EAAQjP,GACzB,OAAO3F,EACJpU,KAAKgpB,EAAQjP,GACb7T,SAAS,UACT7pC,QAAQ,KAAM,IACdA,QAAQ,MAAO,KACfA,QAAQ,MAAO,IACpB,CASA,SAAS4sD,EAAQC,GACf,IAAI1U,EAAS0U,EAAK1U,OACdzR,EAAUmmB,EAAKnmB,QACfomB,EAAcD,EAAK3iD,QAAU2iD,EAAK5Q,WAClCyB,EAAWmP,EAAKnP,SAChB8O,EAAOT,EAAI5T,EAAOmO,KAClByG,EAbN,SAAyB5U,EAAQzR,EAASgX,GACxCA,EAAWA,GAAY,OACvB,IAAIsP,EAAgB/D,EAAUpf,EAASsO,GAAS,UAC5C8U,EAAiBhE,EAAUpf,EAASnD,GAAUgX,GAClD,OAAOp+C,EAAKC,OAAO,QAASytD,EAAeC,EAC7C,CAQqBC,CAAgB/U,EAAQzR,EAASgX,GAChDgJ,EAAY8F,EAAKzB,KAAKgC,EAAcD,GACxC,OAAOxtD,EAAKC,OAAO,QAASwtD,EAAcrG,EAC5C,CAEA,SAASyG,EAAWN,GAClB,IAAI3iD,EAAS2iD,EAAK3iD,QAAQ2iD,EAAK5Q,YAAY4Q,EAAKhoD,IAC5CuoD,EAAe,IAAI/H,EAAWn7C,GAClC9N,KAAKmpD,UAAW,EAChBnpD,KAAK+7C,OAAS0U,EAAK1U,OACnB/7C,KAAKshD,SAAWmP,EAAKnP,SACrBthD,KAAK8N,OAAS9N,KAAK6/C,WAAa7/C,KAAKyI,IAAMuoD,EAC3ChxD,KAAKsqC,QAAU,IAAI2e,EAAWwH,EAAKnmB,SACnCtqC,KAAK8N,OAAOmjD,KAAK,QAAS,YACnBjxD,KAAKsqC,QAAQ4e,UAAYlpD,KAAKmpD,UACjCnpD,KAAK2uD,MACX,EAAIl0B,KAAKz6B,OAEPA,KAAKsqC,QAAQ2mB,KAAK,QAAS,YACpBjxD,KAAK8N,OAAOo7C,UAAYlpD,KAAKmpD,UAChCnpD,KAAK2uD,MACX,EAAIl0B,KAAKz6B,MACT,QACAkD,EAAKsmD,SAASuH,EAAYhI,GAE1BgI,EAAWj7C,UAAU64C,KAAO,WAC1B,IACE,IAAIrE,EAAYkG,EAAQ,CACtBzU,OAAQ/7C,KAAK+7C,OACbzR,QAAStqC,KAAKsqC,QAAQsX,OACtB9zC,OAAQ9N,KAAK8N,OAAO8zC,OACpBN,SAAUthD,KAAKshD,WAMjB,OAJAthD,KAAKspD,KAAK,OAAQgB,GAClBtqD,KAAKspD,KAAK,OAAQgB,GAClBtqD,KAAKspD,KAAK,OACVtpD,KAAKmpD,UAAW,EACTmB,CACR,CAAC,MAAOxpD,GACPd,KAAKmpD,UAAW,EAChBnpD,KAAKspD,KAAK,QAASxoD,GACnBd,KAAKspD,KAAK,QACd,GAGAyH,EAAWpC,KAAO6B,EAElBU,GAAiBH,qCC5EjB,IAAIpV,EAASqM,KAAuBrM,OAChCsN,EAAaD,KACb2G,EAAMpG,KACNR,EAASiD,EACTve,EAAW4gB,KAEX8C,EAAY,2DAMhB,SAASC,EAAclE,GACrB,GALF,SAAkBA,GAChB,MAAiD,oBAA1C1qD,OAAOsT,UAAU23B,SAAS2V,KAAK8J,EACxC,CAGMmE,CAASnE,GACX,OAAOA,EACT,IAAM,OAAOtsD,KAAKC,MAAMqsD,EAAO,CAC/B,MAAOpsD,GAAK,MAAiB,CAC/B,CAEA,SAASwwD,EAAcC,GACrB,IAAIX,EAAgBW,EAAO/tD,MAAM,IAAK,GAAG,GACzC,OAAO4tD,EAAczV,EAAOpU,KAAKqpB,EAAe,UAAUnjB,SAAS,UACrE,CAMA,SAAS+jB,EAAiBD,GACxB,OAAOA,EAAO/tD,MAAM,KAAK,EAC3B,CAQA,SAASiuD,EAAWlB,GAClB,OAAOY,EAAU/sD,KAAKmsD,MAAae,EAAcf,EACnD,CAEA,SAASmB,EAAUH,EAAQ3B,EAAWc,GACpC,IAAKd,EAAW,CACd,IAAI1kD,EAAM,IAAIzL,MAAM,8CAEpB,MADAyL,EAAIgL,KAAO,oBACLhL,CACV,CAEE,IAAIo/C,EAAYkH,EADhBD,EAAS9jB,EAAS8jB,IAEdZ,EA1BN,SAA6BY,GAC3B,OAAOA,EAAO/tD,MAAM,IAAK,GAAG9D,KAAK,IACnC,CAwBqBiyD,CAAoBJ,GAEvC,OADW5B,EAAIC,GACHb,OAAO4B,EAAcrG,EAAWoG,EAC9C,CAEA,SAASkB,EAAUL,EAAQd,GAIzB,GAHAA,EAAOA,GAAQ,IAGVgB,EAFLF,EAAS9jB,EAAS8jB,IAGhB,OAAO,KAET,IAAIxV,EAASuV,EAAcC,GAE3B,IAAKxV,EACH,OAAO,KAET,IAAIzR,EAnCN,SAAwBinB,EAAQjQ,GAC9BA,EAAWA,GAAY,OACvB,IAAIhX,EAAUinB,EAAO/tD,MAAM,KAAK,GAChC,OAAOm4C,EAAOpU,KAAK+C,EAAS,UAAUmD,SAAS6T,EACjD,CA+BgBuQ,CAAeN,GAI7B,OAHmB,QAAfxV,EAAO+V,KAAiBrB,EAAKn/B,QAC/BgZ,EAAU1pC,KAAKC,MAAMypC,EAASmmB,EAAKnP,WAE9B,CACLvF,OAAQA,EACRzR,QAASA,EACTggB,UAAWkH,EAAiBD,GAEhC,CAEA,SAASQ,EAAatB,GAEpB,IAAIC,GADJD,EAAOA,GAAQ,IACQ3iD,QAAQ2iD,EAAK5B,WAAW4B,EAAKhoD,IAChDuoD,EAAe,IAAI/H,EAAWyH,GAClC1wD,KAAKmpD,UAAW,EAChBnpD,KAAK4vD,UAAYa,EAAKb,UACtB5vD,KAAKshD,SAAWmP,EAAKnP,SACrBthD,KAAK8N,OAAS9N,KAAK6uD,UAAY7uD,KAAKyI,IAAMuoD,EAC1ChxD,KAAKsqD,UAAY,IAAIrB,EAAWwH,EAAKnG,WACrCtqD,KAAK8N,OAAOmjD,KAAK,QAAS,YACnBjxD,KAAKsqD,UAAUpB,UAAYlpD,KAAKmpD,UACnCnpD,KAAK+uD,QACX,EAAIt0B,KAAKz6B,OAEPA,KAAKsqD,UAAU2G,KAAK,QAAS,YACtBjxD,KAAK8N,OAAOo7C,UAAYlpD,KAAKmpD,UAChCnpD,KAAK+uD,QACX,EAAIt0B,KAAKz6B,MACT,QA3FWswD,EA4FN9G,SAASuI,EAAchJ,GAC5BgJ,EAAaj8C,UAAUi5C,OAAS,WAC9B,IACE,IAAIiD,EAAQN,EAAU1xD,KAAKsqD,UAAU1I,OAAQ5hD,KAAK4vD,UAAW5vD,KAAKyI,IAAIm5C,QAClEtkC,EAAMs0C,EAAU5xD,KAAKsqD,UAAU1I,OAAQ5hD,KAAKshD,UAKhD,OAJAthD,KAAKspD,KAAK,OAAQ0I,EAAO10C,GACzBtd,KAAKspD,KAAK,OAAQ0I,GAClBhyD,KAAKspD,KAAK,OACVtpD,KAAKmpD,UAAW,EACT6I,CACR,CAAC,MAAOlxD,GACPd,KAAKmpD,UAAW,EAChBnpD,KAAKspD,KAAK,QAASxoD,GACnBd,KAAKspD,KAAK,QACd,GAGAyI,EAAal0C,OAAS+zC,EACtBG,EAAaE,QAAUR,EACvBM,EAAahD,OAAS2C,EAEtBQ,GAAiBH,qCCtHjB,IAAIhB,EAAa/I,KACb+J,EAAe/I,YASnBmJ,GAAAC,WAPiB,CACf,QAAS,QAAS,QAClB,QAAS,QAAS,QAClB,QAAS,QAAS,QAClB,QAAS,QAAS,SAIRD,GAAAxD,KAAGoC,EAAWpC,KACZwD,GAAApD,OAAGgD,EAAahD,OAChBoD,GAAAt0C,OAAGk0C,EAAal0C,OACfs0C,GAAAF,QAAGF,EAAaE,QAC/BE,GAAAzD,WAAqB,SAAoB+B,GACvC,OAAO,IAAIM,EAAWN,IAExB0B,GAAArD,aAAuB,SAAsB2B,GAC3C,OAAO,IAAIsB,EAAatB,0CCpB1B,IAAI0B,EAAMnK,YAEVnqC,GAAiB,SAAUw0C,EAAKtzD,GAC9BA,EAAUA,GAAW,GACrB,IAAIuzD,EAAUH,EAAIt0C,OAAOw0C,EAAKtzD,GAC9B,IAAKuzD,EAAW,OAAO,KACvB,IAAIhoB,EAAUgoB,EAAQhoB,QAGtB,GAAsB,iBAAZA,EACR,IACE,IAAIhtB,EAAM1c,KAAKC,MAAMypC,GACV,OAARhtB,GAA+B,iBAARA,IACxBgtB,EAAUhtB,GAEZ,MAAOxc,GAAG,CAMd,OAAyB,IAArB/B,EAAQwzD,SACH,CACLxW,OAAQuW,EAAQvW,OAChBzR,QAASA,EACTggB,UAAWgI,EAAQhI,WAGhBhgB,yCC5BT,IAAIkoB,EAAoB,SAAU1yD,EAASS,GACzCd,MAAM2jD,KAAKpjD,KAAMF,GACdL,MAAMgzD,mBACPhzD,MAAMgzD,kBAAkBzyD,KAAMA,KAAKH,aAErCG,KAAKC,KAAO,oBACZD,KAAKF,QAAUA,EACXS,IAAOP,KAAKuvD,MAAQhvD,WAG1BiyD,EAAkB18C,UAAYtT,OAAOomD,OAAOnpD,MAAMqW,YACtBjW,YAAc2yD,EAE1CE,GAAiBF,qCCbjB,IAAIA,EAAoBxK,KAEpB2K,EAAiB,SAAU7yD,EAAS8yD,GACtCJ,EAAkBpP,KAAKpjD,KAAMF,GAC7BE,KAAKC,KAAO,iBACZD,KAAK4yD,KAAOA,UAGdD,EAAe78C,UAAYtT,OAAOomD,OAAO4J,EAAkB18C,YAElCjW,YAAc8yD,EAEvCE,GAAiBF,qCCZjB,IAAIH,EAAoBxK,KAEpB8K,EAAoB,SAAUhzD,EAASizD,GACzCP,EAAkBpP,KAAKpjD,KAAMF,GAC7BE,KAAKC,KAAO,oBACZD,KAAK+yD,UAAYA,UAGnBD,EAAkBh9C,UAAYtT,OAAOomD,OAAO4J,EAAkB18C,YAElCjW,YAAcizD,EAE1CE,GAAiBF,qCCRjB,IAAIh1C,EAAI,IACJ+sB,EAAQ,GAAJ/sB,EACJm1C,EAAQ,GAAJpoB,EACJqoB,EAAQ,GAAJD,EACJE,EAAQ,EAAJD,EACJE,EAAQ,OAAJF,EAqJR,SAASG,EAAOC,EAAIC,EAAOC,EAAGvzD,GAC5B,IAAIwzD,EAAWF,GAAa,IAAJC,EACxB,OAAOz4B,KAAKC,MAAMs4B,EAAKE,GAAK,IAAMvzD,GAAQwzD,EAAW,IAAM,GAC7D,QAxIAH,GAAiB,SAAUvyC,EAAKhiB,GAC9BA,EAAUA,GAAW,GACrB,IAAI4mC,SAAc5kB,EAClB,GAAa,WAAT4kB,GAAqB5kB,EAAIxc,OAAS,EACpC,OAkBJ,SAAegZ,GAEb,IADAA,EAAMm2C,OAAOn2C,IACLhZ,OAAS,IACf,OAEF,IAAI+gB,EAAQ,mIAAmI3C,KAC7IpF,GAEF,IAAK+H,EACH,OAEF,IAAIkuC,EAAIG,WAAWruC,EAAM,IAEzB,QADYA,EAAM,IAAM,MAAM1F,eAE5B,IAAK,QACL,IAAK,OACL,IAAK,MACL,IAAK,KACL,IAAK,IACH,OAAO4zC,EAAIJ,EACb,IAAK,QACL,IAAK,OACL,IAAK,IACH,OAAOI,EAAIL,EACb,IAAK,OACL,IAAK,MACL,IAAK,IACH,OAAOK,EAAIN,EACb,IAAK,QACL,IAAK,OACL,IAAK,MACL,IAAK,KACL,IAAK,IACH,OAAOM,EAAIP,EACb,IAAK,UACL,IAAK,SACL,IAAK,OACL,IAAK,MACL,IAAK,IACH,OAAOO,EAAI3oB,EACb,IAAK,UACL,IAAK,SACL,IAAK,OACL,IAAK,MACL,IAAK,IACH,OAAO2oB,EAAI11C,EACb,IAAK,eACL,IAAK,cACL,IAAK,QACL,IAAK,OACL,IAAK,KACH,OAAO01C,EACT,QACE,OAEN,CAzEW3yD,CAAMkgB,GACR,GAAa,WAAT4kB,GAAqBiuB,SAAS7yC,GACvC,OAAOhiB,EAAQ80D,KA0GnB,SAAiBP,GACf,IAAIC,EAAQx4B,KAAK+4B,IAAIR,GACrB,GAAIC,GAASL,EACX,OAAOG,EAAOC,EAAIC,EAAOL,EAAG,OAE9B,GAAIK,GAASN,EACX,OAAOI,EAAOC,EAAIC,EAAON,EAAG,QAE9B,GAAIM,GAAS1oB,EACX,OAAOwoB,EAAOC,EAAIC,EAAO1oB,EAAG,UAE9B,GAAI0oB,GAASz1C,EACX,OAAOu1C,EAAOC,EAAIC,EAAOz1C,EAAG,UAE9B,OAAOw1C,EAAK,KACd,CAzH0BS,CAAQhzC,GAiFlC,SAAkBuyC,GAChB,IAAIC,EAAQx4B,KAAK+4B,IAAIR,GACrB,GAAIC,GAASL,EACX,OAAOn4B,KAAKC,MAAMs4B,EAAKJ,GAAK,IAE9B,GAAIK,GAASN,EACX,OAAOl4B,KAAKC,MAAMs4B,EAAKL,GAAK,IAE9B,GAAIM,GAAS1oB,EACX,OAAO9P,KAAKC,MAAMs4B,EAAKzoB,GAAK,IAE9B,GAAI0oB,GAASz1C,EACX,OAAOid,KAAKC,MAAMs4B,EAAKx1C,GAAK,IAE9B,OAAOw1C,EAAK,IACd,CAhGyCU,CAASjzC,GAEhD,MAAM,IAAIthB,MACR,wDACEmB,KAAKmL,UAAUgV,2CCnCrB,IAAIuyC,EAAKtL,YAETiM,GAAiB,SAAUrwB,EAAMwE,GAC/B,IAAI9mC,EAAY8mC,GAAOrN,KAAK+I,MAAMppB,KAAKuI,MAAQ,KAE/C,GAAoB,iBAAT2gB,EAAmB,CAC5B,IAAIswB,EAAeZ,EAAG1vB,GACtB,QAA4B,IAAjBswB,EACT,OAEF,OAAOn5B,KAAK+I,MAAMxiC,EAAY4yD,EAAe,IACjD,CAAS,MAAoB,iBAATtwB,EACTtiC,EAAYsiC,OAEnB,yZCVJ,MAGMuwB,EAAmB/4B,OAAO+4B,kBACL,wBAmB3BlF,GAAiB,CACfmF,WAtBiB,IAuBjBC,0BAlBgC,GAmBhCC,sBAf4BF,IAgB5BD,mBACAI,cAfoB,CACpB,QACA,WACA,QACA,WACA,QACA,WACA,cASAC,oBA7B0B,QA8B1BC,wBAAyB,EACzBC,WAAY,sCCjCd,MAAM3uD,EACe,iBAAZhE,SACPA,QAAQC,KACRD,QAAQC,IAAI2yD,YACZ,cAAcvwD,KAAKrC,QAAQC,IAAI2yD,YAC7B,IAAI5xD,IAASuD,QAAQ/F,MAAM,YAAawC,GACxC,cAEJ6xD,GAAiB7uD,+CCRjB,MAAMsuD,0BACJA,EAAyBC,sBACzBA,EAAqBF,WACrBA,GACEpM,KACEjiD,EAAQijD,KAIR6L,GAHNlM,EAAUD,EAAiBC,QAAA,CAAA,GAGHkM,GAAA,GAClBC,EAASnM,EAAiBmM,OAAA,GAC1B5M,EAAMS,EAAcT,IAAA,GACpB6M,EAAUpM,EAAkBoM,QAAA,GAC5Bt5B,EAAIktB,EAAYltB,EAAA,CAAA,EACtB,IAAIu5B,EAAI,EAER,MAAMC,EAAmB,eAQnBC,EAAwB,CAC5B,CAAC,MAAO,GACR,CAAC,MAAOd,GACR,CAACa,EAAkBX,IAYfa,EAAc,CAACl1D,EAAMyI,EAAO0sD,KAChC,MAAMC,EAVc,CAAC3sD,IACrB,IAAK,MAAO8C,EAAOggD,KAAQ0J,EACzBxsD,EAAQA,EACLlF,MAAM,GAAGgI,MAAU9L,KAAK,GAAG8L,OAAWggD,MACtChoD,MAAM,GAAGgI,MAAU9L,KAAK,GAAG8L,OAAWggD,MAE3C,OAAO9iD,GAIM4sD,CAAc5sD,GACrBhE,EAAQswD,IACdjvD,EAAM9F,EAAMyE,EAAOgE,GACnB+yB,EAAEx7B,GAAQyE,EACVwjD,EAAIxjD,GAASgE,EACbqsD,EAAQrwD,GAAS2wD,EACjBR,EAAGnwD,GAAS,IAAIX,OAAO2E,EAAO0sD,EAAW,SAAMvzD,GAC/CizD,EAAOpwD,GAAS,IAAIX,OAAOsxD,EAAMD,EAAW,SAAMvzD,IASpDszD,EAAY,oBAAqB,eACjCA,EAAY,yBAA0B,QAMtCA,EAAY,uBAAwB,gBAAgBF,MAKpDE,EAAY,cAAe,IAAIjN,EAAIzsB,EAAE85B,0BACdrN,EAAIzsB,EAAE85B,0BACNrN,EAAIzsB,EAAE85B,uBAE7BJ,EAAY,mBAAoB,IAAIjN,EAAIzsB,EAAE+5B,+BACdtN,EAAIzsB,EAAE+5B,+BACNtN,EAAIzsB,EAAE+5B,4BAOlCL,EAAY,uBAAwB,MAAMjN,EAAIzsB,EAAEg6B,yBAC5CvN,EAAIzsB,EAAE85B,uBAEVJ,EAAY,4BAA6B,MAAMjN,EAAIzsB,EAAEg6B,yBACjDvN,EAAIzsB,EAAE+5B,4BAMVL,EAAY,aAAc,QAAQjN,EAAIzsB,EAAEi6B,8BAC/BxN,EAAIzsB,EAAEi6B,6BAEfP,EAAY,kBAAmB,SAASjN,EAAIzsB,EAAEk6B,mCACrCzN,EAAIzsB,EAAEk6B,kCAKfR,EAAY,kBAAmB,GAAGF,MAMlCE,EAAY,QAAS,UAAUjN,EAAIzsB,EAAEm6B,yBAC5B1N,EAAIzsB,EAAEm6B,wBAWfT,EAAY,YAAa,KAAKjN,EAAIzsB,EAAEo6B,eACjC3N,EAAIzsB,EAAEq6B,eACP5N,EAAIzsB,EAAEs6B,WAERZ,EAAY,OAAQ,IAAIjN,EAAIzsB,EAAEu6B,eAK9Bb,EAAY,aAAc,WAAWjN,EAAIzsB,EAAEw6B,oBACxC/N,EAAIzsB,EAAEy6B,oBACPhO,EAAIzsB,EAAEs6B,WAERZ,EAAY,QAAS,IAAIjN,EAAIzsB,EAAE06B,gBAE/BhB,EAAY,OAAQ,gBAKpBA,EAAY,wBAAyB,GAAGjN,EAAIzsB,EAAE+5B,mCAC9CL,EAAY,mBAAoB,GAAGjN,EAAIzsB,EAAE85B,8BAEzCJ,EAAY,cAAe,YAAYjN,EAAIzsB,EAAE26B,4BAChBlO,EAAIzsB,EAAE26B,4BACNlO,EAAIzsB,EAAE26B,wBACVlO,EAAIzsB,EAAEq6B,gBACV5N,EAAIzsB,EAAEs6B,eAG3BZ,EAAY,mBAAoB,YAAYjN,EAAIzsB,EAAE46B,iCAChBnO,EAAIzsB,EAAE46B,iCACNnO,EAAIzsB,EAAE46B,6BACVnO,EAAIzsB,EAAEy6B,qBACVhO,EAAIzsB,EAAEs6B,eAGhCZ,EAAY,SAAU,IAAIjN,EAAIzsB,EAAE66B,YAAYpO,EAAIzsB,EAAE86B,iBAClDpB,EAAY,cAAe,IAAIjN,EAAIzsB,EAAE66B,YAAYpO,EAAIzsB,EAAE+6B,sBAIvDrB,EAAY,cAAe,oBACDd,mBACIA,qBACAA,SAC9Bc,EAAY,SAAU,GAAGjN,EAAIzsB,EAAEg7B,4BAC/BtB,EAAY,aAAcjN,EAAIzsB,EAAEg7B,aAClB,MAAMvO,EAAIzsB,EAAEq6B,gBACZ,MAAM5N,EAAIzsB,EAAEs6B,wBAE1BZ,EAAY,YAAajN,EAAIzsB,EAAEi7B,SAAS,GACxCvB,EAAY,gBAAiBjN,EAAIzsB,EAAEk7B,aAAa,GAIhDxB,EAAY,YAAa,WAEzBA,EAAY,YAAa,SAASjN,EAAIzsB,EAAEm7B,kBAAkB,GAC1DjO,EAA2BkO,iBAAA,MAE3B1B,EAAY,QAAS,IAAIjN,EAAIzsB,EAAEm7B,aAAa1O,EAAIzsB,EAAE86B,iBAClDpB,EAAY,aAAc,IAAIjN,EAAIzsB,EAAEm7B,aAAa1O,EAAIzsB,EAAE+6B,sBAIvDrB,EAAY,YAAa,WAEzBA,EAAY,YAAa,SAASjN,EAAIzsB,EAAEq7B,kBAAkB,GAC1DnO,EAA2BoO,iBAAA,MAE3B5B,EAAY,QAAS,IAAIjN,EAAIzsB,EAAEq7B,aAAa5O,EAAIzsB,EAAE86B,iBAClDpB,EAAY,aAAc,IAAIjN,EAAIzsB,EAAEq7B,aAAa5O,EAAIzsB,EAAE+6B,sBAGvDrB,EAAY,kBAAmB,IAAIjN,EAAIzsB,EAAE66B,aAAapO,EAAIzsB,EAAE06B,oBAC5DhB,EAAY,aAAc,IAAIjN,EAAIzsB,EAAE66B,aAAapO,EAAIzsB,EAAEu6B,mBAIvDb,EAAY,iBAAkB,SAASjN,EAAIzsB,EAAE66B,aACrCpO,EAAIzsB,EAAE06B,eAAejO,EAAIzsB,EAAE86B,iBAAiB,GACpD5N,EAAgCqO,sBAAA,SAMhC7B,EAAY,cAAe,SAASjN,EAAIzsB,EAAE86B,0BAEnBrO,EAAIzsB,EAAE86B,sBAG7BpB,EAAY,mBAAoB,SAASjN,EAAIzsB,EAAE+6B,+BAEnBtO,EAAIzsB,EAAE+6B,2BAIlCrB,EAAY,OAAQ,mBAEpBA,EAAY,OAAQ,6BACpBA,EAAY,UAAW,8FC3NvB,MAAM8B,EAAcz0D,OAAO00D,OAAO,CAAEC,OAAO,IACrCC,EAAY50D,OAAO00D,OAAO,WAYhCG,GAXqBt4D,GACdA,EAIkB,iBAAZA,EACFk4D,EAGFl4D,EAPEq4D,qCCLX,MAAME,EAAU,WACVC,EAAqB,CAAC9J,EAAGC,KAC7B,MAAM8J,EAAOF,EAAQlzD,KAAKqpD,GACpBgK,EAAOH,EAAQlzD,KAAKspD,GAO1B,OALI8J,GAAQC,IACVhK,GAAKA,EACLC,GAAKA,GAGAD,IAAMC,EAAI,EACZ8J,IAASC,GAAS,EAClBA,IAASD,EAAQ,EAClB/J,EAAIC,GAAK,EACT,UAKNgK,GAAiB,CACfH,qBACAI,oBAJ0B,CAAClK,EAAGC,IAAM6J,EAAmB7J,EAAGD,uCCjB5D,MAAM1nD,EAAQiiD,MACRoM,WAAEA,EAAUD,iBAAEA,GAAqBnL,MACjC8L,OAAQD,EAAEp5B,EAAEA,GAAM8tB,KAEpBqO,EAAe5L,MACfuL,mBAAEA,GAAuBlJ,KAC/B,MAAMwJ,EACJ,WAAAh4D,CAAa0b,EAASxc,GAGpB,GAFAA,EAAU64D,EAAa74D,GAEnBwc,aAAmBs8C,EAAQ,CAC7B,GAAIt8C,EAAQ47C,UAAYp4D,EAAQo4D,OAC9B57C,EAAQu8C,sBAAwB/4D,EAAQ+4D,kBACxC,OAAOv8C,EAEPA,EAAUA,EAAQA,OAE1B,MAAW,GAAuB,iBAAZA,EAChB,MAAM,IAAIqlC,UAAU,uDAAuDrlC,OAG7E,GAAIA,EAAQhX,OAAS6vD,EACnB,MAAM,IAAIxT,UACR,0BAA0BwT,gBAI9BruD,EAAM,SAAUwV,EAASxc,GACzBiB,KAAKjB,QAAUA,EACfiB,KAAKm3D,QAAUp4D,EAAQo4D,MAGvBn3D,KAAK83D,oBAAsB/4D,EAAQ+4D,kBAEnC,MAAMjtB,EAAItvB,EAAQ5X,OAAO2hB,MAAMvmB,EAAQo4D,MAAQtC,EAAGp5B,EAAEs8B,OAASlD,EAAGp5B,EAAEu8B,OAElE,IAAKntB,EACH,MAAM,IAAI+V,UAAU,oBAAoBrlC,KAU1C,GAPAvb,KAAKi4D,IAAM18C,EAGXvb,KAAKk4D,OAASrtB,EAAE,GAChB7qC,KAAKm4D,OAASttB,EAAE,GAChB7qC,KAAKo4D,OAASvtB,EAAE,GAEZ7qC,KAAKk4D,MAAQ/D,GAAoBn0D,KAAKk4D,MAAQ,EAChD,MAAM,IAAItX,UAAU,yBAGtB,GAAI5gD,KAAKm4D,MAAQhE,GAAoBn0D,KAAKm4D,MAAQ,EAChD,MAAM,IAAIvX,UAAU,yBAGtB,GAAI5gD,KAAKo4D,MAAQjE,GAAoBn0D,KAAKo4D,MAAQ,EAChD,MAAM,IAAIxX,UAAU,yBAIjB/V,EAAE,GAGL7qC,KAAKq4D,WAAaxtB,EAAE,GAAGrnC,MAAM,KAAKC,IAAKqsB,IACrC,GAAI,WAAW1rB,KAAK0rB,GAAK,CACvB,MAAMwoC,GAAOxoC,EACb,GAAIwoC,GAAO,GAAKA,EAAMnE,EACpB,OAAOmE,CAEnB,CACQ,OAAOxoC,IATT9vB,KAAKq4D,WAAa,GAapBr4D,KAAKu4D,MAAQ1tB,EAAE,GAAKA,EAAE,GAAGrnC,MAAM,KAAO,GACtCxD,KAAKmD,QACT,CAEE,MAAAA,GAKE,OAJAnD,KAAKub,QAAU,GAAGvb,KAAKk4D,SAASl4D,KAAKm4D,SAASn4D,KAAKo4D,QAC/Cp4D,KAAKq4D,WAAW9zD,SAClBvE,KAAKub,SAAW,IAAIvb,KAAKq4D,WAAW34D,KAAK,QAEpCM,KAAKub,OAChB,CAEE,QAAAkyB,GACE,OAAOztC,KAAKub,OAChB,CAEE,OAAAi9C,CAASC,GAEP,GADA1yD,EAAM,iBAAkB/F,KAAKub,QAASvb,KAAKjB,QAAS05D,KAC9CA,aAAiBZ,GAAS,CAC9B,GAAqB,iBAAVY,GAAsBA,IAAUz4D,KAAKub,QAC9C,OAAO,EAETk9C,EAAQ,IAAIZ,EAAOY,EAAOz4D,KAAKjB,QACrC,CAEI,OAAI05D,EAAMl9C,UAAYvb,KAAKub,QAClB,EAGFvb,KAAK04D,YAAYD,IAAUz4D,KAAK24D,WAAWF,EACtD,CAEE,WAAAC,CAAaD,GAKX,OAJMA,aAAiBZ,IACrBY,EAAQ,IAAIZ,EAAOY,EAAOz4D,KAAKjB,UAI/Bw4D,EAAmBv3D,KAAKk4D,MAAOO,EAAMP,QACrCX,EAAmBv3D,KAAKm4D,MAAOM,EAAMN,QACrCZ,EAAmBv3D,KAAKo4D,MAAOK,EAAML,MAE3C,CAEE,UAAAO,CAAYF,GAMV,GALMA,aAAiBZ,IACrBY,EAAQ,IAAIZ,EAAOY,EAAOz4D,KAAKjB,UAI7BiB,KAAKq4D,WAAW9zD,SAAWk0D,EAAMJ,WAAW9zD,OAC9C,OAAQ,EACH,IAAKvE,KAAKq4D,WAAW9zD,QAAUk0D,EAAMJ,WAAW9zD,OACrD,OAAO,EACF,IAAKvE,KAAKq4D,WAAW9zD,SAAWk0D,EAAMJ,WAAW9zD,OACtD,OAAO,EAGT,IAAIoH,EAAI,EACR,EAAG,CACD,MAAM8hD,EAAIztD,KAAKq4D,WAAW1sD,GACpB+hD,EAAI+K,EAAMJ,WAAW1sD,GAE3B,GADA5F,EAAM,qBAAsB4F,EAAG8hD,EAAGC,QACxB7rD,IAAN4rD,QAAyB5rD,IAAN6rD,EACrB,OAAO,EACF,QAAU7rD,IAAN6rD,EACT,OAAO,EACF,QAAU7rD,IAAN4rD,EACT,OAAQ,EACH,GAAIA,IAAMC,EAGf,OAAO6J,EAAmB9J,EAAGC,EAEhC,SAAU/hD,EACf,CAEE,YAAAitD,CAAcH,GACNA,aAAiBZ,IACrBY,EAAQ,IAAIZ,EAAOY,EAAOz4D,KAAKjB,UAGjC,IAAI4M,EAAI,EACR,EAAG,CACD,MAAM8hD,EAAIztD,KAAKu4D,MAAM5sD,GACf+hD,EAAI+K,EAAMF,MAAM5sD,GAEtB,GADA5F,EAAM,gBAAiB4F,EAAG8hD,EAAGC,QACnB7rD,IAAN4rD,QAAyB5rD,IAAN6rD,EACrB,OAAO,EACF,QAAU7rD,IAAN6rD,EACT,OAAO,EACF,QAAU7rD,IAAN4rD,EACT,OAAQ,EACH,GAAIA,IAAMC,EAGf,OAAO6J,EAAmB9J,EAAGC,EAEhC,SAAU/hD,EACf,CAIE,GAAAktD,CAAKC,EAASC,EAAYC,GACxB,GAAIF,EAAQj1D,WAAW,OAAQ,CAC7B,IAAKk1D,IAAiC,IAAnBC,EACjB,MAAM,IAAIv5D,MAAM,mDAGlB,GAAIs5D,EAAY,CACd,MAAMzzC,EAAQ,IAAIyzC,IAAazzC,MAAMtlB,KAAKjB,QAAQo4D,MAAQtC,EAAGp5B,EAAEy6B,iBAAmBrB,EAAGp5B,EAAEq6B,aACvF,IAAKxwC,GAASA,EAAM,KAAOyzC,EACzB,MAAM,IAAIt5D,MAAM,uBAAuBs5D,IAEjD,CACA,CAEI,OAAQD,GACN,IAAK,WACH94D,KAAKq4D,WAAW9zD,OAAS,EACzBvE,KAAKo4D,MAAQ,EACbp4D,KAAKm4D,MAAQ,EACbn4D,KAAKk4D,QACLl4D,KAAK64D,IAAI,MAAOE,EAAYC,GAC5B,MACF,IAAK,WACHh5D,KAAKq4D,WAAW9zD,OAAS,EACzBvE,KAAKo4D,MAAQ,EACbp4D,KAAKm4D,QACLn4D,KAAK64D,IAAI,MAAOE,EAAYC,GAC5B,MACF,IAAK,WAIHh5D,KAAKq4D,WAAW9zD,OAAS,EACzBvE,KAAK64D,IAAI,QAASE,EAAYC,GAC9Bh5D,KAAK64D,IAAI,MAAOE,EAAYC,GAC5B,MAGF,IAAK,aAC4B,IAA3Bh5D,KAAKq4D,WAAW9zD,QAClBvE,KAAK64D,IAAI,QAASE,EAAYC,GAEhCh5D,KAAK64D,IAAI,MAAOE,EAAYC,GAC5B,MACF,IAAK,UACH,GAA+B,IAA3Bh5D,KAAKq4D,WAAW9zD,OAClB,MAAM,IAAI9E,MAAM,WAAWO,KAAKi4D,2BAElCj4D,KAAKq4D,WAAW9zD,OAAS,EACzB,MAEF,IAAK,QAMc,IAAfvE,KAAKm4D,OACU,IAAfn4D,KAAKo4D,OACsB,IAA3Bp4D,KAAKq4D,WAAW9zD,QAEhBvE,KAAKk4D,QAEPl4D,KAAKm4D,MAAQ,EACbn4D,KAAKo4D,MAAQ,EACbp4D,KAAKq4D,WAAa,GAClB,MACF,IAAK,QAKgB,IAAfr4D,KAAKo4D,OAA0C,IAA3Bp4D,KAAKq4D,WAAW9zD,QACtCvE,KAAKm4D,QAEPn4D,KAAKo4D,MAAQ,EACbp4D,KAAKq4D,WAAa,GAClB,MACF,IAAK,QAK4B,IAA3Br4D,KAAKq4D,WAAW9zD,QAClBvE,KAAKo4D,QAEPp4D,KAAKq4D,WAAa,GAClB,MAGF,IAAK,MAAO,CACV,MAAMY,EAAO79B,OAAO49B,GAAkB,EAAI,EAE1C,GAA+B,IAA3Bh5D,KAAKq4D,WAAW9zD,OAClBvE,KAAKq4D,WAAa,CAACY,OACd,CACL,IAAIttD,EAAI3L,KAAKq4D,WAAW9zD,OACxB,OAASoH,GAAK,GACsB,iBAAvB3L,KAAKq4D,WAAW1sD,KACzB3L,KAAKq4D,WAAW1sD,KAChBA,GAAK,GAGT,IAAW,IAAPA,EAAU,CAEZ,GAAIotD,IAAe/4D,KAAKq4D,WAAW34D,KAAK,OAA2B,IAAnBs5D,EAC9C,MAAM,IAAIv5D,MAAM,yDAElBO,KAAKq4D,WAAWv0D,KAAKm1D,EACjC,CACA,CACQ,GAAIF,EAAY,CAGd,IAAIV,EAAa,CAACU,EAAYE,IACP,IAAnBD,IACFX,EAAa,CAACU,IAE2C,IAAvDxB,EAAmBv3D,KAAKq4D,WAAW,GAAIU,GACrCG,MAAMl5D,KAAKq4D,WAAW,MACxBr4D,KAAKq4D,WAAaA,GAGpBr4D,KAAKq4D,WAAaA,CAE9B,CACQ,KACR,CACM,QACE,MAAM,IAAI54D,MAAM,+BAA+Bq5D,KAMnD,OAJA94D,KAAKi4D,IAAMj4D,KAAKmD,SACZnD,KAAKu4D,MAAMh0D,SACbvE,KAAKi4D,KAAO,IAAIj4D,KAAKu4D,MAAM74D,KAAK,QAE3BM,IACX,SAGAm5D,GAAiBtB,qCC5TjB,MAAMA,EAAS7P,YAefoR,GAdc,CAAC79C,EAASxc,EAASs6D,GAAc,KAC7C,GAAI99C,aAAmBs8C,EACrB,OAAOt8C,EAET,IACE,OAAO,IAAIs8C,EAAOt8C,EAASxc,EAC5B,CAAC,MAAOu6D,GACP,IAAKD,EACH,OAAO,KAET,MAAMC,CACV,yCCZA,MAAMzB,EAAS7P,YAIfuR,GAHgB,CAAC9L,EAAGC,EAAGyJ,IACrB,IAAIU,EAAOpK,EAAG0J,GAAOqB,QAAQ,IAAIX,EAAOnK,EAAGyJ,uCCF7C,MAAMU,EAAS7P,YAMfwR,GALqB,CAAC/L,EAAGC,EAAGyJ,KAC1B,MAAMsC,EAAW,IAAI5B,EAAOpK,EAAG0J,GACzBuC,EAAW,IAAI7B,EAAOnK,EAAGyJ,GAC/B,OAAOsC,EAASjB,QAAQkB,IAAaD,EAASb,aAAac,uCCJ7D,MAAMlB,EAAUxQ,YAEhB2R,GADW,CAAClM,EAAGC,EAAGyJ,IAAUqB,EAAQ/K,EAAGC,EAAGyJ,GAAS,qCCDnD,MAAMqB,EAAUxQ,YAEhB4R,GADW,CAACnM,EAAGC,EAAGyJ,IAAUqB,EAAQ/K,EAAGC,EAAGyJ,GAAS,qCCDnD,MAAMqB,EAAUxQ,YAEhB6R,GADW,CAACpM,EAAGC,EAAGyJ,IAAmC,IAAzBqB,EAAQ/K,EAAGC,EAAGyJ,sCCD1C,MAAMqB,EAAUxQ,YAEhB8R,GADY,CAACrM,EAAGC,EAAGyJ,IAAmC,IAAzBqB,EAAQ/K,EAAGC,EAAGyJ,sCCD3C,MAAMqB,EAAUxQ,YAEhB+R,GADY,CAACtM,EAAGC,EAAGyJ,IAAUqB,EAAQ/K,EAAGC,EAAGyJ,IAAU,qCCDrD,MAAMqB,EAAUxQ,YAEhBgS,GADY,CAACvM,EAAGC,EAAGyJ,IAAUqB,EAAQ/K,EAAGC,EAAGyJ,IAAU,qCCDrD,MAAM8C,EAAKjS,KACLkS,EAAMlR,KACNmR,EAAK5Q,KACL6Q,EAAMpO,KACNqO,EAAKhM,KACLiM,EAAMhK,YA8CZiK,GA5CY,CAAC9M,EAAG+M,EAAI9M,EAAGyJ,KACrB,OAAQqD,GACN,IAAK,MAOH,MANiB,iBAAN/M,IACTA,EAAIA,EAAElyC,SAES,iBAANmyC,IACTA,EAAIA,EAAEnyC,SAEDkyC,IAAMC,EAEf,IAAK,MAOH,MANiB,iBAAND,IACTA,EAAIA,EAAElyC,SAES,iBAANmyC,IACTA,EAAIA,EAAEnyC,SAEDkyC,IAAMC,EAEf,IAAK,GACL,IAAK,IACL,IAAK,KACH,OAAOuM,EAAGxM,EAAGC,EAAGyJ,GAElB,IAAK,KACH,OAAO+C,EAAIzM,EAAGC,EAAGyJ,GAEnB,IAAK,IACH,OAAOgD,EAAG1M,EAAGC,EAAGyJ,GAElB,IAAK,KACH,OAAOiD,EAAI3M,EAAGC,EAAGyJ,GAEnB,IAAK,IACH,OAAOkD,EAAG5M,EAAGC,EAAGyJ,GAElB,IAAK,KACH,OAAOmD,EAAI7M,EAAGC,EAAGyJ,GAEnB,QACE,MAAM,IAAIvW,UAAU,qBAAqB4Z,0CChD/C,MAAMC,EAAmB,OAGzB,MAAMC,EACJ,WAAA76D,CAAa86D,EAAO57D,GAGlB,GAFAA,EAAU64D,EAAa74D,GAEnB47D,aAAiBD,EACnB,OACEC,EAAMxD,UAAYp4D,EAAQo4D,OAC1BwD,EAAM7C,sBAAwB/4D,EAAQ+4D,kBAE/B6C,EAEA,IAAID,EAAMC,EAAM1C,IAAKl5D,GAIhC,GAAI47D,aAAiBC,EAKnB,OAHA56D,KAAKi4D,IAAM0C,EAAMjyD,MACjB1I,KAAK4I,IAAM,CAAC,CAAC+xD,IACb36D,KAAK66D,eAAYh5D,EACV7B,KAsBT,GAnBAA,KAAKjB,QAAUA,EACfiB,KAAKm3D,QAAUp4D,EAAQo4D,MACvBn3D,KAAK83D,oBAAsB/4D,EAAQ+4D,kBAKnC93D,KAAKi4D,IAAM0C,EAAMh3D,OAAOC,QAAQ62D,EAAkB,KAGlDz6D,KAAK4I,IAAM5I,KAAKi4D,IACbz0D,MAAM,MAENC,IAAIq3D,GAAK96D,KAAK+6D,WAAWD,EAAEn3D,SAI3B2a,OAAOuvC,GAAKA,EAAEtpD,SAEZvE,KAAK4I,IAAIrE,OACZ,MAAM,IAAIq8C,UAAU,yBAAyB5gD,KAAKi4D,OAIpD,GAAIj4D,KAAK4I,IAAIrE,OAAS,EAAG,CAEvB,MAAMy2D,EAAQh7D,KAAK4I,IAAI,GAEvB,GADA5I,KAAK4I,IAAM5I,KAAK4I,IAAI0V,OAAOuvC,IAAMoN,EAAUpN,EAAE,KACrB,IAApB7tD,KAAK4I,IAAIrE,OACXvE,KAAK4I,IAAM,CAACoyD,QACP,GAAIh7D,KAAK4I,IAAIrE,OAAS,EAE3B,IAAK,MAAMspD,KAAK7tD,KAAK4I,IACnB,GAAiB,IAAbilD,EAAEtpD,QAAgB22D,EAAMrN,EAAE,IAAK,CACjC7tD,KAAK4I,IAAM,CAACilD,GACZ,KACZ,CAGA,CAEI7tD,KAAK66D,eAAYh5D,CACrB,CAEE,SAAI84D,GACF,QAAuB94D,IAAnB7B,KAAK66D,UAAyB,CAChC76D,KAAK66D,UAAY,GACjB,IAAK,IAAIlvD,EAAI,EAAGA,EAAI3L,KAAK4I,IAAIrE,OAAQoH,IAAK,CACpCA,EAAI,IACN3L,KAAK66D,WAAa,MAEpB,MAAMM,EAAQn7D,KAAK4I,IAAI+C,GACvB,IAAK,IAAIyvD,EAAI,EAAGA,EAAID,EAAM52D,OAAQ62D,IAC5BA,EAAI,IACNp7D,KAAK66D,WAAa,KAEpB76D,KAAK66D,WAAaM,EAAMC,GAAG3tB,WAAW9pC,MAEhD,CACA,CACI,OAAO3D,KAAK66D,SAChB,CAEE,MAAA13D,GACE,OAAOnD,KAAK26D,KAChB,CAEE,QAAAltB,GACE,OAAOztC,KAAK26D,KAChB,CAEE,UAAAI,CAAYJ,GAGV,MAGMU,IAFHr7D,KAAKjB,QAAQ+4D,mBAAqBrD,IAClCz0D,KAAKjB,QAAQo4D,OAASzC,IACE,IAAMiG,EAC3BW,EAASr8D,EAAM6J,IAAIuyD,GACzB,GAAIC,EACF,OAAOA,EAGT,MAAMnE,EAAQn3D,KAAKjB,QAAQo4D,MAErBoE,EAAKpE,EAAQtC,EAAGp5B,EAAE+/B,kBAAoB3G,EAAGp5B,EAAEggC,aACjDd,EAAQA,EAAM/2D,QAAQ23D,EAAIG,EAAc17D,KAAKjB,QAAQ+4D,oBACrD/xD,EAAM,iBAAkB40D,GAGxBA,EAAQA,EAAM/2D,QAAQixD,EAAGp5B,EAAEkgC,gBAAiB3E,GAC5CjxD,EAAM,kBAAmB40D,GAGzBA,EAAQA,EAAM/2D,QAAQixD,EAAGp5B,EAAEmgC,WAAY/E,GACvC9wD,EAAM,aAAc40D,GAGpBA,EAAQA,EAAM/2D,QAAQixD,EAAGp5B,EAAEogC,WAAY9E,GACvChxD,EAAM,aAAc40D,GAKpB,IAAImB,EAAYnB,EACbn3D,MAAM,KACNC,IAAIs4D,GAAQC,EAAgBD,EAAM/7D,KAAKjB,UACvCW,KAAK,KACL8D,MAAM,OAENC,IAAIs4D,GAAQE,EAAYF,EAAM/7D,KAAKjB,UAElCo4D,IAEF2E,EAAYA,EAAUx9C,OAAOy9C,IAC3Bh2D,EAAM,uBAAwBg2D,EAAM/7D,KAAKjB,WAChCg9D,EAAKz2C,MAAMuvC,EAAGp5B,EAAEygC,qBAG7Bn2D,EAAM,aAAc+1D,GAKpB,MAAMK,EAAW,IAAI3zD,IACf4zD,EAAcN,EAAUr4D,IAAIs4D,GAAQ,IAAInB,EAAWmB,EAAM/7D,KAAKjB,UACpE,IAAK,MAAMg9D,KAAQK,EAAa,CAC9B,GAAInB,EAAUc,GACZ,MAAO,CAACA,GAEVI,EAASvzD,IAAImzD,EAAKrzD,MAAOqzD,EAC/B,CACQI,EAASr8C,KAAO,GAAKq8C,EAASx8C,IAAI,KACpCw8C,EAASnzD,OAAO,IAGlB,MAAMnG,EAAS,IAAIs5D,EAASh0C,UAE5B,OADAlpB,EAAM2J,IAAIyyD,EAASx4D,GACZA,CACX,CAEE,UAAAw5D,CAAY1B,EAAO57D,GACjB,KAAM47D,aAAiBD,GACrB,MAAM,IAAI9Z,UAAU,uBAGtB,OAAO5gD,KAAK4I,IAAIujC,KAAMmwB,GAElBC,EAAcD,EAAiBv9D,IAC/B47D,EAAM/xD,IAAIujC,KAAMqwB,GAEZD,EAAcC,EAAkBz9D,IAChCu9D,EAAgBt8C,MAAOy8C,GACdD,EAAiBx8C,MAAO08C,GACtBD,EAAeJ,WAAWK,EAAiB39D,MAOlE,CAGE,IAAAqF,CAAMmX,GACJ,IAAKA,EACH,OAAO,EAGT,GAAuB,iBAAZA,EACT,IACEA,EAAU,IAAIs8C,EAAOt8C,EAASvb,KAAKjB,QACpC,CAAC,MAAOu6D,GACP,OAAO,CACf,CAGI,IAAK,IAAI3tD,EAAI,EAAGA,EAAI3L,KAAK4I,IAAIrE,OAAQoH,IACnC,GAAIgxD,EAAQ38D,KAAK4I,IAAI+C,GAAI4P,EAASvb,KAAKjB,SACrC,OAAO,EAGX,OAAO,CACX,EAGA47D,GAAiBD,EAEjB,MACMz7D,EAAQ,gBChLd29D,GAvCA,MACE,WAAA/8D,GACEG,KAAKwrD,IAAM,IACXxrD,KAAKyD,IAAM,IAAI+E,GACnB,CAEE,GAAAM,CAAKL,GACH,MAAMC,EAAQ1I,KAAKyD,IAAIqF,IAAIL,GAC3B,YAAc5G,IAAV6G,OACF,GAGA1I,KAAKyD,IAAIuF,OAAOP,GAChBzI,KAAKyD,IAAImF,IAAIH,EAAKC,GACXA,EAEb,CAEE,OAAQD,GACN,OAAOzI,KAAKyD,IAAIuF,OAAOP,EAC3B,CAEE,GAAAG,CAAKH,EAAKC,GAGR,IAFgB1I,KAAKgJ,OAAOP,SAEF5G,IAAV6G,EAAqB,CAEnC,GAAI1I,KAAKyD,IAAIqc,MAAQ9f,KAAKwrD,IAAK,CAC7B,MAAMqR,EAAW78D,KAAKyD,IAAI0I,OAAOuiB,OAAOhmB,MACxC1I,KAAKgJ,OAAO6zD,EACpB,CAEM78D,KAAKyD,IAAImF,IAAIH,EAAKC,EACxB,CAEI,OAAO1I,IACX,KDqLM43D,EAAe5O,KACf4R,EAAarR,KACbxjD,EAAQimD,KACR6L,EAASxJ,MAEbyG,OAAQD,EAAEp5B,EACVA,EAACu7B,sBACDA,EAAqBH,iBACrBA,EAAgBE,iBAChBA,GACEzG,MACEmE,wBAAEA,EAAuBC,WAAEA,GAAeoI,KAE1C7B,EAAYpN,GAAiB,aAAZA,EAAEnlD,MACnBwyD,EAAQrN,GAAiB,KAAZA,EAAEnlD,MAIf6zD,EAAgB,CAACH,EAAar9D,KAClC,IAAI8D,GAAS,EACb,MAAMk6D,EAAuBX,EAAY73C,QACzC,IAAIy4C,EAAiBD,EAAqBE,MAE1C,KAAOp6D,GAAUk6D,EAAqBx4D,QACpC1B,EAASk6D,EAAqB/8C,MAAOk9C,GAC5BF,EAAeX,WAAWa,EAAiBn+D,IAGpDi+D,EAAiBD,EAAqBE,MAGxC,OAAOp6D,GAMHm5D,EAAkB,CAACD,EAAMh9D,KAC7BgH,EAAM,OAAQg2D,EAAMh9D,GACpBg9D,EAAOoB,EAAcpB,EAAMh9D,GAC3BgH,EAAM,QAASg2D,GACfA,EAAOqB,EAAcrB,EAAMh9D,GAC3BgH,EAAM,SAAUg2D,GAChBA,EAAOsB,EAAetB,EAAMh9D,GAC5BgH,EAAM,SAAUg2D,GAChBA,EAAOuB,EAAavB,EAAMh9D,GAC1BgH,EAAM,QAASg2D,GACRA,GAGHwB,EAAMztC,IAAOA,GAA2B,MAArBA,EAAGlQ,eAAgC,MAAPkQ,EAS/CstC,EAAgB,CAACrB,EAAMh9D,IACpBg9D,EACJp4D,OACAH,MAAM,OACNC,IAAKoqD,GAAM2P,EAAa3P,EAAG9uD,IAC3BW,KAAK,KAGJ89D,EAAe,CAACzB,EAAMh9D,KAC1B,MAAM+7D,EAAI/7D,EAAQo4D,MAAQtC,EAAGp5B,EAAEgiC,YAAc5I,EAAGp5B,EAAEiiC,OAClD,OAAO3B,EAAKn4D,QAAQk3D,EAAG,CAAC6C,EAAGC,EAAG/yB,EAAGG,EAAG6yB,KAElC,IAAIC,EAoBJ,OArBA/3D,EAAM,QAASg2D,EAAM4B,EAAGC,EAAG/yB,EAAGG,EAAG6yB,GAG7BN,EAAIK,GACNE,EAAM,GACGP,EAAI1yB,GACbizB,EAAM,KAAKF,WAAWA,EAAI,UACjBL,EAAIvyB,GAEb8yB,EAAM,KAAKF,KAAK/yB,QAAQ+yB,MAAM/yB,EAAI,QACzBgzB,GACT93D,EAAM,kBAAmB83D,GACzBC,EAAM,KAAKF,KAAK/yB,KAAKG,KAAK6yB,MACrBD,MAAM/yB,EAAI,SAGfizB,EAAM,KAAKF,KAAK/yB,KAAKG,MAChB4yB,MAAM/yB,EAAI,QAGjB9kC,EAAM,eAAgB+3D,GACfA,KAYLX,EAAgB,CAACpB,EAAMh9D,IACpBg9D,EACJp4D,OACAH,MAAM,OACNC,IAAKoqD,GAAMkQ,EAAalQ,EAAG9uD,IAC3BW,KAAK,KAGJq+D,EAAe,CAAChC,EAAMh9D,KAC1BgH,EAAM,QAASg2D,EAAMh9D,GACrB,MAAM+7D,EAAI/7D,EAAQo4D,MAAQtC,EAAGp5B,EAAEuiC,YAAcnJ,EAAGp5B,EAAEwiC,OAC5CC,EAAIn/D,EAAQ+4D,kBAAoB,KAAO,GAC7C,OAAOiE,EAAKn4D,QAAQk3D,EAAG,CAAC6C,EAAGC,EAAG/yB,EAAGG,EAAG6yB,KAElC,IAAIC,EA2CJ,OA5CA/3D,EAAM,QAASg2D,EAAM4B,EAAGC,EAAG/yB,EAAGG,EAAG6yB,GAG7BN,EAAIK,GACNE,EAAM,GACGP,EAAI1yB,GACbizB,EAAM,KAAKF,QAAQM,OAAON,EAAI,UACrBL,EAAIvyB,GAEX8yB,EADQ,MAANF,EACI,KAAKA,KAAK/yB,MAAMqzB,MAAMN,MAAM/yB,EAAI,QAEhC,KAAK+yB,KAAK/yB,MAAMqzB,OAAON,EAAI,UAE1BC,GACT93D,EAAM,kBAAmB83D,GAGrBC,EAFM,MAANF,EACQ,MAAN/yB,EACI,KAAK+yB,KAAK/yB,KAAKG,KAAK6yB,MACrBD,KAAK/yB,MAAMG,EAAI,MAEd,KAAK4yB,KAAK/yB,KAAKG,KAAK6yB,MACrBD,MAAM/yB,EAAI,QAGX,KAAK+yB,KAAK/yB,KAAKG,KAAK6yB,OACpBD,EAAI,YAGZ73D,EAAM,SAGF+3D,EAFM,MAANF,EACQ,MAAN/yB,EACI,KAAK+yB,KAAK/yB,KAAKG,IAClBkzB,MAAMN,KAAK/yB,MAAMG,EAAI,MAElB,KAAK4yB,KAAK/yB,KAAKG,IAClBkzB,MAAMN,MAAM/yB,EAAI,QAGf,KAAK+yB,KAAK/yB,KAAKG,OACf4yB,EAAI,WAId73D,EAAM,eAAgB+3D,GACfA,KAILT,EAAiB,CAACtB,EAAMh9D,KAC5BgH,EAAM,iBAAkBg2D,EAAMh9D,GACvBg9D,EACJv4D,MAAM,OACNC,IAAKoqD,GAAMsQ,EAActQ,EAAG9uD,IAC5BW,KAAK,MAGJy+D,EAAgB,CAACpC,EAAMh9D,KAC3Bg9D,EAAOA,EAAKp4D,OACZ,MAAMm3D,EAAI/7D,EAAQo4D,MAAQtC,EAAGp5B,EAAE2iC,aAAevJ,EAAGp5B,EAAE4iC,QACnD,OAAOtC,EAAKn4D,QAAQk3D,EAAG,CAACgD,EAAKQ,EAAMV,EAAG/yB,EAAGG,EAAG6yB,KAC1C93D,EAAM,SAAUg2D,EAAM+B,EAAKQ,EAAMV,EAAG/yB,EAAGG,EAAG6yB,GAC1C,MAAMU,EAAKhB,EAAIK,GACTY,EAAKD,GAAMhB,EAAI1yB,GACf4zB,EAAKD,GAAMjB,EAAIvyB,GACf0zB,EAAOD,EA+Db,MA7Da,MAATH,GAAgBI,IAClBJ,EAAO,IAKTT,EAAK9+D,EAAQ+4D,kBAAoB,KAAO,GAEpCyG,EAGAT,EAFW,MAATQ,GAAyB,MAATA,EAEZ,WAGA,IAECA,GAAQI,GAGbF,IACF3zB,EAAI,GAENG,EAAI,EAES,MAATszB,GAGFA,EAAO,KACHE,GACFZ,GAAKA,EAAI,EACT/yB,EAAI,EACJG,EAAI,IAEJH,GAAKA,EAAI,EACTG,EAAI,IAEY,OAATszB,IAGTA,EAAO,IACHE,EACFZ,GAAKA,EAAI,EAET/yB,GAAKA,EAAI,GAIA,MAATyzB,IACFT,EAAK,MAGPC,EAAM,GAAGQ,EAAOV,KAAK/yB,KAAKG,IAAI6yB,KACrBW,EACTV,EAAM,KAAKF,QAAQC,OAAQD,EAAI,UACtBa,IACTX,EAAM,KAAKF,KAAK/yB,MAAMgzB,MACjBD,MAAM/yB,EAAI,SAGjB9kC,EAAM,gBAAiB+3D,GAEhBA,KAMLR,EAAe,CAACvB,EAAMh9D,KAC1BgH,EAAM,eAAgBg2D,EAAMh9D,GAErBg9D,EACJp4D,OACAC,QAAQixD,EAAGp5B,EAAEkjC,MAAO,KAGnB1C,EAAc,CAACF,EAAMh9D,KACzBgH,EAAM,cAAeg2D,EAAMh9D,GACpBg9D,EACJp4D,OACAC,QAAQixD,EAAG91D,EAAQ+4D,kBAAoBr8B,EAAEmjC,QAAUnjC,EAAEojC,MAAO,KAS3DnD,EAAgBoD,GAAS,CAACC,EAC9Bx3B,EAAMy3B,EAAIC,EAAIC,EAAIC,EAAKC,EACvBC,EAAIC,EAAIC,EAAIC,EAAIC,IA2BT,GAzBLl4B,EADEg2B,EAAIyB,GACC,GACEzB,EAAI0B,GACN,KAAKD,QAASF,EAAQ,KAAO,KAC3BvB,EAAI2B,GACN,KAAKF,KAAMC,MAAOH,EAAQ,KAAO,KAC/BK,EACF,KAAK53B,IAEL,KAAKA,IAAOu3B,EAAQ,KAAO,QAIlCO,EADE9B,EAAI+B,GACD,GACI/B,EAAIgC,GACR,KAAKD,EAAK,UACN/B,EAAIiC,GACR,IAAIF,MAAOC,EAAK,QACZE,EACJ,KAAKH,KAAMC,KAAMC,KAAMC,IACnBX,EACJ,IAAIQ,KAAMC,MAAOC,EAAK,MAEtB,KAAKH,MAGW17D,OAGnBg5D,EAAU,CAAC/zD,EAAK2S,EAASxc,KAC7B,IAAK,IAAI4M,EAAI,EAAGA,EAAI/C,EAAIrE,OAAQoH,IAC9B,IAAK/C,EAAI+C,GAAGvH,KAAKmX,GACf,OAAO,EAIX,GAAIA,EAAQ88C,WAAW9zD,SAAWxF,EAAQ+4D,kBAAmB,CAM3D,IAAK,IAAInsD,EAAI,EAAGA,EAAI/C,EAAIrE,OAAQoH,IAE9B,GADA5F,EAAM6C,EAAI+C,GAAGwtD,QACTvwD,EAAI+C,GAAGwtD,SAAWyB,EAAW8E,KAI7B92D,EAAI+C,GAAGwtD,OAAOd,WAAW9zD,OAAS,EAAG,CACvC,MAAMo7D,EAAU/2D,EAAI+C,GAAGwtD,OACvB,GAAIwG,EAAQzH,QAAU38C,EAAQ28C,OAC1ByH,EAAQxH,QAAU58C,EAAQ48C,OAC1BwH,EAAQvH,QAAU78C,EAAQ68C,MAC5B,OAAO,CAEjB,CAII,OAAO,CACX,CAEE,OAAO,gDExiBT,MAAMsH,EAAM13D,OAAO,cAEnB,MAAM4yD,EACJ,cAAW8E,GACT,OAAOA,CACX,CAEE,WAAA7/D,CAAak8D,EAAMh9D,GAGjB,GAFAA,EAAU64D,EAAa74D,GAEnBg9D,aAAgBnB,EAAY,CAC9B,GAAImB,EAAK5E,UAAYp4D,EAAQo4D,MAC3B,OAAO4E,EAEPA,EAAOA,EAAKrzD,KAEpB,CAEIqzD,EAAOA,EAAKp4D,OAAOH,MAAM,OAAO9D,KAAK,KACrCqG,EAAM,aAAcg2D,EAAMh9D,GAC1BiB,KAAKjB,QAAUA,EACfiB,KAAKm3D,QAAUp4D,EAAQo4D,MACvBn3D,KAAKa,MAAMk7D,GAEP/7D,KAAKm5D,SAAWuG,EAClB1/D,KAAK0I,MAAQ,GAEb1I,KAAK0I,MAAQ1I,KAAK4/D,SAAW5/D,KAAKm5D,OAAO59C,QAG3CxV,EAAM,OAAQ/F,KAClB,CAEE,KAAAa,CAAOk7D,GACL,MAAMjB,EAAI96D,KAAKjB,QAAQo4D,MAAQtC,EAAGp5B,EAAEygC,iBAAmBrH,EAAGp5B,EAAEokC,YACtDh1B,EAAIkxB,EAAKz2C,MAAMw1C,GAErB,IAAKjwB,EACH,MAAM,IAAI+V,UAAU,uBAAuBmb,KAG7C/7D,KAAK4/D,cAAoB/9D,IAATgpC,EAAE,GAAmBA,EAAE,GAAK,GACtB,MAAlB7qC,KAAK4/D,WACP5/D,KAAK4/D,SAAW,IAIb/0B,EAAE,GAGL7qC,KAAKm5D,OAAS,IAAItB,EAAOhtB,EAAE,GAAI7qC,KAAKjB,QAAQo4D,OAF5Cn3D,KAAKm5D,OAASuG,CAIpB,CAEE,QAAAjyB,GACE,OAAOztC,KAAK0I,KAChB,CAEE,IAAAtE,CAAMmX,GAGJ,GAFAxV,EAAM,kBAAmBwV,EAASvb,KAAKjB,QAAQo4D,OAE3Cn3D,KAAKm5D,SAAWuG,GAAOnkD,IAAYmkD,EACrC,OAAO,EAGT,GAAuB,iBAAZnkD,EACT,IACEA,EAAU,IAAIs8C,EAAOt8C,EAASvb,KAAKjB,QACpC,CAAC,MAAOu6D,GACP,OAAO,CACf,CAGI,OAAOwG,EAAIvkD,EAASvb,KAAK4/D,SAAU5/D,KAAKm5D,OAAQn5D,KAAKjB,QACzD,CAEE,UAAAs9D,CAAYN,EAAMh9D,GAChB,KAAMg9D,aAAgBnB,GACpB,MAAM,IAAIha,UAAU,4BAGtB,MAAsB,KAAlB5gD,KAAK4/D,SACY,KAAf5/D,KAAK0I,OAGF,IAAIgyD,EAAMqB,EAAKrzD,MAAO3J,GAASqF,KAAKpE,KAAK0I,OACrB,KAAlBqzD,EAAK6D,SACK,KAAf7D,EAAKrzD,OAGF,IAAIgyD,EAAM16D,KAAK0I,MAAO3J,GAASqF,KAAK23D,EAAK5C,WAGlDp6D,EAAU64D,EAAa74D,IAGX+4D,mBACM,aAAf93D,KAAK0I,OAAuC,aAAfqzD,EAAKrzD,YAGhC3J,EAAQ+4D,oBACV93D,KAAK0I,MAAM7E,WAAW,WAAak4D,EAAKrzD,MAAM7E,WAAW,iBAKxD7D,KAAK4/D,SAAS/7D,WAAW,OAAQk4D,EAAK6D,SAAS/7D,WAAW,WAI1D7D,KAAK4/D,SAAS/7D,WAAW,OAAQk4D,EAAK6D,SAAS/7D,WAAW,UAK3D7D,KAAKm5D,OAAO59C,UAAYwgD,EAAK5C,OAAO59C,UACrCvb,KAAK4/D,SAASr6D,SAAS,OAAQw2D,EAAK6D,SAASr6D,SAAS,WAIpDu6D,EAAI9/D,KAAKm5D,OAAQ,IAAK4C,EAAK5C,OAAQp6D,IACrCiB,KAAK4/D,SAAS/7D,WAAW,MAAQk4D,EAAK6D,SAAS/7D,WAAW,UAIxDi8D,EAAI9/D,KAAKm5D,OAAQ,IAAK4C,EAAK5C,OAAQp6D,IACrCiB,KAAK4/D,SAAS/7D,WAAW,MAAQk4D,EAAK6D,SAAS/7D,WAAW,UAIhE,EAGAk8D,GAAiBnF,EAEjB,MAAMhD,EAAe5P,MACb8M,OAAQD,EAAEp5B,EAAEA,GAAMutB,KACpB8W,EAAMvW,KACNxjD,EAAQimD,KACR6L,EAASxJ,KACTqM,EAAQpK,kDC5Id,MAAMoK,EAAQ1S,YASdgY,GARkB,CAACzkD,EAASo/C,EAAO57D,KACjC,IACE47D,EAAQ,IAAID,EAAMC,EAAO57D,EAC1B,CAAC,MAAOu6D,GACP,OAAO,CACX,CACE,OAAOqB,EAAMv2D,KAAKmX,0CCPpB,MAAMm/C,EAAQ1S,YAUdgK,GATmB,CAAC2I,EAAO57D,KACzB,IAGE,OAAO,IAAI27D,EAAMC,EAAO57D,GAAS47D,OAAS,GAC3C,CAAC,MAAOrB,GACP,OAAO,IACX,yCCRA,MAAMzB,EAAS7P,KACT4S,EAAa5R,MACb0W,IAAEA,GAAQ9E,EACVF,EAAQnR,KACR0W,EAAYjU,KACZmO,EAAK9L,KACLgM,EAAK/J,KACLgK,EAAMwC,KACN1C,EAAM8F,YAuEZC,GArEgB,CAAC5kD,EAASo/C,EAAOyF,EAAMrhE,KAIrC,IAAIshE,EAAMC,EAAOC,EAAMxE,EAAMyE,EAC7B,OAJAjlD,EAAU,IAAIs8C,EAAOt8C,EAASxc,GAC9B47D,EAAQ,IAAID,EAAMC,EAAO57D,GAGjBqhE,GACN,IAAK,IACHC,EAAOlG,EACPmG,EAAQhG,EACRiG,EAAOlG,EACP0B,EAAO,IACPyE,EAAQ,KACR,MACF,IAAK,IACHH,EAAOhG,EACPiG,EAAQlG,EACRmG,EAAOpG,EACP4B,EAAO,IACPyE,EAAQ,KACR,MACF,QACE,MAAM,IAAI5f,UAAU,yCAIxB,GAAIqf,EAAU1kD,EAASo/C,EAAO57D,GAC5B,OAAO,EAMT,IAAK,IAAI4M,EAAI,EAAGA,EAAIgvD,EAAM/xD,IAAIrE,SAAUoH,EAAG,CACzC,MAAMywD,EAAczB,EAAM/xD,IAAI+C,GAE9B,IAAI80D,EAAO,KACPC,EAAM,KAiBV,GAfAtE,EAAYp+C,QAAS+hD,IACfA,EAAW5G,SAAWuG,IACxBK,EAAa,IAAInF,EAAW,YAE9B6F,EAAOA,GAAQV,EACfW,EAAMA,GAAOX,EACTM,EAAKN,EAAW5G,OAAQsH,EAAKtH,OAAQp6D,GACvC0hE,EAAOV,EACEQ,EAAKR,EAAW5G,OAAQuH,EAAIvH,OAAQp6D,KAC7C2hE,EAAMX,KAMNU,EAAKb,WAAa7D,GAAQ0E,EAAKb,WAAaY,EAC9C,OAAO,EAKT,KAAME,EAAId,UAAYc,EAAId,WAAa7D,IACnCuE,EAAM/kD,EAASmlD,EAAIvH,QACrB,OAAO,EACF,GAAIuH,EAAId,WAAaY,GAASD,EAAKhlD,EAASmlD,EAAIvH,QACrD,OAAO,CAEb,CACE,OAAO,yCC3ET,MAAMwH,EAAa3Y,KACbiH,EAAYjG,KACZ6O,EAAStO,KACTmO,EAAc1L,KACdnrD,EAAQwtD,KACR2D,kCCNN,MAAMnxD,EAAQmnD,YAKd4Y,GAJc,CAACrlD,EAASxc,KACtB,MAAM8hE,EAAIhgE,EAAM0a,EAASxc,GACzB,OAAO8hE,EAAIA,EAAEtlD,QAAU,SDGX+0C,GACRwQ,kCEPN,MAAMjgE,EAAQmnD,YAKd+Y,GAJc,CAACxlD,EAASxc,KACtB,MAAM+e,EAAIjd,EAAM0a,EAAQ5X,OAAOC,QAAQ,SAAU,IAAK7E,GACtD,OAAO+e,EAAIA,EAAEvC,QAAU,SFIXuhD,GACRjE,kCGRN,MAAMhB,EAAS7P,YAkBfgZ,GAhBY,CAACzlD,EAASu9C,EAAS/5D,EAASg6D,EAAYC,KACzB,iBAAb,IACVA,EAAiBD,EACjBA,EAAah6D,EACbA,OAAU8C,GAGZ,IACE,OAAO,IAAIg2D,EACTt8C,aAAmBs8C,EAASt8C,EAAQA,QAAUA,EAC9Cxc,GACA85D,IAAIC,EAASC,EAAYC,GAAgBz9C,OAC5C,CAAC,MAAO+9C,GACP,OAAO,IACX,MHRY4G,GACNe,kCITN,MAAMpgE,EAAQmnD,YAyDdkZ,GAvDa,CAACC,EAAUC,KACtB,MAAMC,EAAKxgE,EAAMsgE,EAAU,MAAM,GAC3BG,EAAKzgE,EAAMugE,EAAU,MAAM,GAC3BG,EAAaF,EAAG7I,QAAQ8I,GAE9B,GAAmB,IAAfC,EACF,OAAO,KAGT,MAAMC,EAAWD,EAAa,EACxBE,EAAcD,EAAWH,EAAKC,EAC9BI,EAAaF,EAAWF,EAAKD,EAC7BM,IAAeF,EAAYpJ,WAAW9zD,OAG5C,GAFoBm9D,EAAWrJ,WAAW9zD,SAExBo9D,EAAY,CAQ5B,IAAKD,EAAWtJ,QAAUsJ,EAAWvJ,MACnC,MAAO,QAIT,GAA4C,IAAxCuJ,EAAWhJ,YAAY+I,GACzB,OAAIC,EAAWvJ,QAAUuJ,EAAWtJ,MAC3B,QAEF,OAEb,CAGE,MAAMwJ,EAASD,EAAa,MAAQ,GAEpC,OAAIN,EAAGnJ,QAAUoJ,EAAGpJ,MACX0J,EAAS,QAGdP,EAAGlJ,QAAUmJ,EAAGnJ,MACXyJ,EAAS,QAGdP,EAAGjJ,QAAUkJ,EAAGlJ,MACXwJ,EAAS,QAIX,cJ7CIC,GACP3J,kCKVN,MAAML,EAAS7P,YAEf8Z,GADc,CAACrU,EAAG0J,IAAU,IAAIU,EAAOpK,EAAG0J,GAAOe,MLSnC6J,GACR5J,kCMXN,MAAMN,EAAS7P,YAEfga,GADc,CAACvU,EAAG0J,IAAU,IAAIU,EAAOpK,EAAG0J,GAAOgB,MNUnC8J,GACR7J,kCOZN,MAAMP,EAAS7P,YAEfka,GADc,CAACzU,EAAG0J,IAAU,IAAIU,EAAOpK,EAAG0J,GAAOiB,MPWnC+J,GACR9J,kCQbN,MAAMx3D,EAAQmnD,YAKdoa,GAJmB,CAAC7mD,EAASxc,KAC3B,MAAMsjE,EAASxhE,EAAM0a,EAASxc,GAC9B,OAAQsjE,GAAUA,EAAOhK,WAAW9zD,OAAU89D,EAAOhK,WAAa,SRUjDiK,GACb9J,EAAU+J,KACVC,kCSfN,MAAMhK,EAAUxQ,YAEhBya,GADiB,CAAChV,EAAGC,EAAGyJ,IAAUqB,EAAQ9K,EAAGD,EAAG0J,GTc/BuL,GACXC,kCUhBN,MAAMnK,EAAUxQ,YAEhB4a,GADqB,CAACnV,EAAGC,IAAM8K,EAAQ/K,EAAGC,GAAG,GVexBmV,GACfjK,EAAekK,KACfz6C,kCWlBN,MAAMuwC,EAAe5Q,YAErB+a,GADa,CAACC,EAAM7L,IAAU6L,EAAK36C,KAAK,CAAColC,EAAGC,IAAMkL,EAAanL,EAAGC,EAAGyJ,IXiBxD8L,GACPC,kCYnBN,MAAMtK,EAAe5Q,YAErBmb,GADc,CAACH,EAAM7L,IAAU6L,EAAK36C,KAAK,CAAColC,EAAGC,IAAMkL,EAAalL,EAAGD,EAAG0J,IZkBxDiM,GACRjJ,EAAKkJ,KACLhJ,EAAKiJ,KACLrJ,EAAKsJ,KACLrJ,EAAMsJ,KACNpJ,EAAMqJ,KACNnJ,EAAMoJ,KACN5D,EAAM6D,KACNC,kCa3BN,MAAM/L,EAAS7P,KACTnnD,EAAQmoD,MACN8L,OAAQD,EAAEp5B,EAAEA,GAAM8tB,YAyD1Bsa,GAvDe,CAACtoD,EAASxc,KACvB,GAAIwc,aAAmBs8C,EACrB,OAAOt8C,EAOT,GAJuB,iBAAZA,IACTA,EAAUm4C,OAAOn4C,IAGI,iBAAZA,EACT,OAAO,KAKT,IAAI+J,EAAQ,KACZ,IAHAvmB,EAAUA,GAAW,CAAA,GAGR+kE,IAEN,CAUL,MAAMC,EAAiBhlE,EAAQ+4D,kBAAoBjD,EAAGp5B,EAAEuoC,eAAiBnP,EAAGp5B,EAAEwoC,WAC9E,IAAIv1C,EACJ,MAAQA,EAAOq1C,EAAephD,KAAKpH,OAC7B+J,GAASA,EAAM5gB,MAAQ4gB,EAAM,GAAG/gB,SAAWgX,EAAQhX,SAElD+gB,GACCoJ,EAAKhqB,MAAQgqB,EAAK,GAAGnqB,SAAW+gB,EAAM5gB,MAAQ4gB,EAAM,GAAG/gB,SAC3D+gB,EAAQoJ,GAEVq1C,EAAeG,UAAYx1C,EAAKhqB,MAAQgqB,EAAK,GAAGnqB,OAASmqB,EAAK,GAAGnqB,OAGnEw/D,EAAeG,WAAa,CAChC,MAxBI5+C,EAAQ/J,EAAQ+J,MAAMvmB,EAAQ+4D,kBAAoBjD,EAAGp5B,EAAEk7B,YAAc9B,EAAGp5B,EAAEi7B,SA0B5E,GAAc,OAAVpxC,EACF,OAAO,KAGT,MAAM4yC,EAAQ5yC,EAAM,GACd6yC,EAAQ7yC,EAAM,IAAM,IACpB8yC,EAAQ9yC,EAAM,IAAM,IACpB+yC,EAAat5D,EAAQ+4D,mBAAqBxyC,EAAM,GAAK,IAAIA,EAAM,KAAO,GACtEizC,EAAQx5D,EAAQ+4D,mBAAqBxyC,EAAM,GAAK,IAAIA,EAAM,KAAO,GAEvE,OAAOzkB,EAAM,GAAGq3D,KAASC,KAASC,IAAQC,IAAaE,IAASx5D,Ob9BnDolE,GACTvJ,EAAawJ,KACb1J,EAAQ2J,KACRpE,EAAYqE,KACZC,kCc/BN,MAAM7J,EAAQ1S,YAOdwc,GAJsB,CAAC7J,EAAO57D,IAC5B,IAAI27D,EAAMC,EAAO57D,GAAS6J,IACvBnF,IAAIs4D,GAAQA,EAAKt4D,IAAIoqD,GAAKA,EAAEnlD,OAAOhJ,KAAK,KAAKiE,OAAOH,MAAM,Sd0BzCihE,GAChBC,kCehCN,MAAM7M,EAAS7P,KACT0S,EAAQ1R,YAuBd2b,GArBsB,CAACC,EAAUjK,EAAO57D,KACtC,IAAIysD,EAAM,KACNqZ,EAAQ,KACRC,EAAW,KACf,IACEA,EAAW,IAAIpK,EAAMC,EAAO57D,EAC7B,CAAC,MAAOu6D,GACP,OAAO,IACX,CAWE,OAVAsL,EAAS5mD,QAAS6iD,IACZiE,EAAS1gE,KAAKy8D,KAEXrV,IAA6B,IAAtBqZ,EAAMrM,QAAQqI,KAExBrV,EAAMqV,EACNgE,EAAQ,IAAIhN,EAAOrM,EAAKzsD,OAIvBysD,MfUauZ,GAChBC,kCgBjCN,MAAMnN,EAAS7P,KACT0S,EAAQ1R,YAsBdic,GArBsB,CAACL,EAAUjK,EAAO57D,KACtC,IAAIglC,EAAM,KACNmhC,EAAQ,KACRJ,EAAW,KACf,IACEA,EAAW,IAAIpK,EAAMC,EAAO57D,EAC7B,CAAC,MAAOu6D,GACP,OAAO,IACX,CAWE,OAVAsL,EAAS5mD,QAAS6iD,IACZiE,EAAS1gE,KAAKy8D,KAEX98B,GAA4B,IAArBmhC,EAAM1M,QAAQqI,KAExB98B,EAAM88B,EACNqE,EAAQ,IAAIrN,EAAO9zB,EAAKhlC,OAIvBglC,MhBYaohC,GAChBC,kCiBlCN,MAAMvN,EAAS7P,KACT0S,EAAQ1R,KACRmR,EAAK5Q,YA0DX8b,GAxDmB,CAAC1K,EAAOxD,KACzBwD,EAAQ,IAAID,EAAMC,EAAOxD,GAEzB,IAAImO,EAAS,IAAIzN,EAAO,SACxB,GAAI8C,EAAMv2D,KAAKkhE,GACb,OAAOA,EAIT,GADAA,EAAS,IAAIzN,EAAO,WAChB8C,EAAMv2D,KAAKkhE,GACb,OAAOA,EAGTA,EAAS,KACT,IAAK,IAAI35D,EAAI,EAAGA,EAAIgvD,EAAM/xD,IAAIrE,SAAUoH,EAAG,CACzC,MAAMywD,EAAczB,EAAM/xD,IAAI+C,GAE9B,IAAI45D,EAAS,KACbnJ,EAAYp+C,QAAS+hD,IAEnB,MAAMyF,EAAU,IAAI3N,EAAOkI,EAAW5G,OAAO59C,SAC7C,OAAQwkD,EAAWH,UACjB,IAAK,IAC+B,IAA9B4F,EAAQnN,WAAW9zD,OACrBihE,EAAQpN,QAERoN,EAAQnN,WAAWv0D,KAAK,GAE1B0hE,EAAQvN,IAAMuN,EAAQriE,SAExB,IAAK,GACL,IAAK,KACEoiE,IAAUpL,EAAGqL,EAASD,KACzBA,EAASC,GAEX,MACF,IAAK,IACL,IAAK,KAEH,MAEF,QACE,MAAM,IAAI/lE,MAAM,yBAAyBsgE,EAAWH,gBAGtD2F,GAAYD,IAAUnL,EAAGmL,EAAQC,KACnCD,EAASC,EAEf,CAEE,OAAID,GAAU3K,EAAMv2D,KAAKkhE,GAChBA,EAGF,SjBxBUG,GACbC,EAAaC,KACbC,EAAUC,KACVC,kCkBpCN,MAAMF,EAAU5d,YAEhB+d,GADY,CAACxqD,EAASo/C,EAAO57D,IAAY6mE,EAAQrqD,EAASo/C,EAAO,IAAK57D,MlBmC1DinE,GACNC,kCmBtCN,MAAML,EAAU5d,YAGhBke,GADY,CAAC3qD,EAASo/C,EAAO57D,IAAY6mE,EAAQrqD,EAASo/C,EAAO,IAAK57D,MnBoC1DonE,GACN9J,kCoBvCN,MAAM3B,EAAQ1S,YAMdoe,GALmB,CAACC,EAAIC,EAAIvnE,KAC1BsnE,EAAK,IAAI3L,EAAM2L,EAAItnE,GACnBunE,EAAK,IAAI5L,EAAM4L,EAAIvnE,GACZsnE,EAAGhK,WAAWiK,EAAIvnE,IpBmCRwnE,GACbC,kCqBrCN,MAAMvG,EAAYjY,KACZwQ,EAAUxP,YAChByd,GAAiB,CAAC7B,EAAUjK,EAAO57D,KACjC,MAAM6J,EAAM,GACZ,IAAIoyD,EAAQ,KACR0L,EAAO,KACX,MAAM7F,EAAI+D,EAASv8C,KAAK,CAAColC,EAAGC,IAAM8K,EAAQ/K,EAAGC,EAAG3uD,IAChD,IAAK,MAAMwc,KAAWslD,EACHZ,EAAU1kD,EAASo/C,EAAO57D,IAEzC2nE,EAAOnrD,EACFy/C,IACHA,EAAQz/C,KAGNmrD,GACF99D,EAAI9E,KAAK,CAACk3D,EAAO0L,IAEnBA,EAAO,KACP1L,EAAQ,MAGRA,GACFpyD,EAAI9E,KAAK,CAACk3D,EAAO,OAGnB,MAAM2L,EAAS,GACf,IAAK,MAAO5iC,EAAKynB,KAAQ5iD,EACnBm7B,IAAQynB,EACVmb,EAAO7iE,KAAKigC,GACFynB,GAAOznB,IAAQ88B,EAAE,GAEjBrV,EAEDznB,IAAQ88B,EAAE,GACnB8F,EAAO7iE,KAAK,KAAK0nD,KAEjBmb,EAAO7iE,KAAK,GAAGigC,OAASynB,KAJxBmb,EAAO7iE,KAAK,KAAKigC,KAFjB4iC,EAAO7iE,KAAK,KAShB,MAAM8iE,EAAaD,EAAOjnE,KAAK,QACzBmnE,EAAgC,iBAAdlM,EAAM1C,IAAmB0C,EAAM1C,IAAMvE,OAAOiH,GACpE,OAAOiM,EAAWriE,OAASsiE,EAAStiE,OAASqiE,EAAajM,MrBLtCmM,GAChBC,kCsBzCN,MAAMrM,EAAQ1S,KACR4S,EAAa5R,MACb0W,IAAEA,GAAQ9E,EACVqF,EAAY1W,KACZiP,EAAUxM,KAkEVgb,EAA+B,CAAC,IAAIpM,EAAW,cAC/CqM,EAAiB,CAAC,IAAIrM,EAAW,YAEjCsM,EAAe,CAAC5lD,EAAK6lD,EAAKpoE,KAC9B,GAAIuiB,IAAQ6lD,EACV,OAAO,EAGT,GAAmB,IAAf7lD,EAAI/c,QAAgB+c,EAAI,GAAG63C,SAAWuG,EAAK,CAC7C,GAAmB,IAAfyH,EAAI5iE,QAAgB4iE,EAAI,GAAGhO,SAAWuG,EACxC,OAAO,EAEPp+C,EADSviB,EAAQ+4D,kBACXkP,EAEAC,CAEZ,CAEE,GAAmB,IAAfE,EAAI5iE,QAAgB4iE,EAAI,GAAGhO,SAAWuG,EAAK,CAC7C,GAAI3gE,EAAQ+4D,kBACV,OAAO,EAEPqP,EAAMF,CAEZ,CAEE,MAAMG,EAAQ,IAAI1hE,IAClB,IAAIy0D,EAAIE,EAeJgN,EA6BAC,EAAQC,EACRC,EAAUC,EA5Cd,IAAK,MAAM5Z,KAAKvsC,EACK,MAAfusC,EAAE+R,UAAmC,OAAf/R,EAAE+R,SAC1BzF,EAAKuN,EAASvN,EAAItM,EAAG9uD,GACG,MAAf8uD,EAAE+R,UAAmC,OAAf/R,EAAE+R,SACjCvF,EAAKsN,EAAQtN,EAAIxM,EAAG9uD,GAEpBqoE,EAAM/gE,IAAIwnD,EAAEsL,QAIhB,GAAIiO,EAAMtnD,KAAO,EACf,OAAO,KAIT,GAAIq6C,GAAME,EAAI,CAEZ,GADAgN,EAAW7O,EAAQ2B,EAAGhB,OAAQkB,EAAGlB,OAAQp6D,GACrCsoE,EAAW,EACb,OAAO,KACF,GAAiB,IAAbA,IAAmC,OAAhBlN,EAAGyF,UAAqC,OAAhBvF,EAAGuF,UACvD,OAAO,IAEb,CAGE,IAAK,MAAM3F,KAAMmN,EAAO,CACtB,GAAIjN,IAAO8F,EAAUhG,EAAIvG,OAAOyG,GAAKp7D,GACnC,OAAO,KAGT,GAAIs7D,IAAO4F,EAAUhG,EAAIvG,OAAO2G,GAAKt7D,GACnC,OAAO,KAGT,IAAK,MAAM8uD,KAAKsZ,EACd,IAAKlH,EAAUhG,EAAIvG,OAAO7F,GAAI9uD,GAC5B,OAAO,EAIX,OAAO,CACX,CAME,IAAI6oE,KAAevN,GAChBt7D,EAAQ+4D,oBACTuC,EAAGlB,OAAOd,WAAW9zD,SAAS81D,EAAGlB,OAC/B0O,KAAe1N,GAChBp7D,EAAQ+4D,oBACTqC,EAAGhB,OAAOd,WAAW9zD,SAAS41D,EAAGhB,OAE/ByO,GAAmD,IAAnCA,EAAavP,WAAW9zD,QACxB,MAAhB81D,EAAGuF,UAAmD,IAA/BgI,EAAavP,WAAW,KACjDuP,GAAe,GAGjB,IAAK,MAAM/Z,KAAKsZ,EAAK,CAGnB,GAFAM,EAAWA,GAA2B,MAAf5Z,EAAE+R,UAAmC,OAAf/R,EAAE+R,SAC/C4H,EAAWA,GAA2B,MAAf3Z,EAAE+R,UAAmC,OAAf/R,EAAE+R,SAC3CzF,EASF,GARI0N,GACEha,EAAEsL,OAAOd,YAAcxK,EAAEsL,OAAOd,WAAW9zD,QAC3CspD,EAAEsL,OAAOjB,QAAU2P,EAAa3P,OAChCrK,EAAEsL,OAAOhB,QAAU0P,EAAa1P,OAChCtK,EAAEsL,OAAOf,QAAUyP,EAAazP,QAClCyP,GAAe,GAGA,MAAfha,EAAE+R,UAAmC,OAAf/R,EAAE+R,UAE1B,GADA0H,EAASI,EAASvN,EAAItM,EAAG9uD,GACrBuoE,IAAWzZ,GAAKyZ,IAAWnN,EAC7B,OAAO,OAEJ,GAAoB,OAAhBA,EAAGyF,WAAsBK,EAAU9F,EAAGhB,OAAQzF,OAAO7F,GAAI9uD,GAClE,OAAO,EAGX,GAAIs7D,EASF,GARIuN,GACE/Z,EAAEsL,OAAOd,YAAcxK,EAAEsL,OAAOd,WAAW9zD,QAC3CspD,EAAEsL,OAAOjB,QAAU0P,EAAa1P,OAChCrK,EAAEsL,OAAOhB,QAAUyP,EAAazP,OAChCtK,EAAEsL,OAAOf,QAAUwP,EAAaxP,QAClCwP,GAAe,GAGA,MAAf/Z,EAAE+R,UAAmC,OAAf/R,EAAE+R,UAE1B,GADA2H,EAAQI,EAAQtN,EAAIxM,EAAG9uD,GACnBwoE,IAAU1Z,GAAK0Z,IAAUlN,EAC3B,OAAO,OAEJ,GAAoB,OAAhBA,EAAGuF,WAAsBK,EAAU5F,EAAGlB,OAAQzF,OAAO7F,GAAI9uD,GAClE,OAAO,EAGX,IAAK8uD,EAAE+R,WAAavF,GAAMF,IAAoB,IAAbkN,EAC/B,OAAO,CAEb,CAKE,QAAIlN,GAAMqN,IAAanN,GAAmB,IAAbgN,GAIzBhN,GAAMoN,IAAatN,GAAmB,IAAbkN,GAOzBQ,GAAgBD,IAQhBF,EAAW,CAACja,EAAGC,EAAG3uD,KACtB,IAAK0uD,EACH,OAAOC,EAET,MAAMqO,EAAOvD,EAAQ/K,EAAE0L,OAAQzL,EAAEyL,OAAQp6D,GACzC,OAAOg9D,EAAO,EAAItO,EACdsO,EAAO,GACQ,MAAfrO,EAAEkS,UAAmC,OAAfnS,EAAEmS,SADblS,EAEXD,GAIAka,EAAU,CAACla,EAAGC,EAAG3uD,KACrB,IAAK0uD,EACH,OAAOC,EAET,MAAMqO,EAAOvD,EAAQ/K,EAAE0L,OAAQzL,EAAEyL,OAAQp6D,GACzC,OAAOg9D,EAAO,EAAItO,EACdsO,EAAO,GACQ,MAAfrO,EAAEkS,UAAmC,OAAfnS,EAAEmS,SADblS,EAEXD,UAGNqa,GA5Me,CAACxmD,EAAK6lD,EAAKpoE,EAAU,CAAA,KAClC,GAAIuiB,IAAQ6lD,EACV,OAAO,EAGT7lD,EAAM,IAAIo5C,EAAMp5C,EAAKviB,GACrBooE,EAAM,IAAIzM,EAAMyM,EAAKpoE,GACrB,IAAIgpE,GAAa,EAEjBC,EAAO,IAAK,MAAMC,KAAa3mD,EAAI1Y,IAAK,CACtC,IAAK,MAAMs/D,KAAaf,EAAIv+D,IAAK,CAC/B,MAAMu/D,EAAQjB,EAAae,EAAWC,EAAWnpE,GAEjD,GADAgpE,EAAaA,GAAwB,OAAVI,EACvBA,EACF,SAASH,CAEjB,CAKI,GAAID,EACF,OAAO,CAEb,CACE,OAAO,GtB1BMK,UACfjP,GAAiB,CACft4D,QACAmxD,QACA8O,QACAjI,MACAoI,OACA/I,QACAC,QACAC,QACAC,aACAG,UACAgK,WACAG,eACA/J,eACAvwC,OACA66C,QACA/I,KACAE,KACAJ,KACAC,MACAE,MACAE,MACAwF,MACA8D,SACAhJ,aACAF,QACAuF,YACAsE,gBACAG,gBACAM,gBACAI,aACAM,aACAE,UACAE,MACAG,MACA5J,aACAmK,gBACAO,SACAlP,SACAhD,GAAI8L,EAAW9L,GACf3M,IAAKyY,EAAWzY,IAChBmgB,OAAQ1H,EAAWllC,EACnB+4B,oBAAqBvF,EAAUuF,oBAC/BD,cAAetF,EAAUsF,cACzBgD,mBAAoBG,EAAYH,mBAChCI,oBAAqBD,EAAYC,wDuBzFnC,MAAM2Q,kCCAN,MAAMnP,EAASnR,YAEDugB,GAAGpP,EAAO8G,UAAUl+D,QAAQwZ,QAAS,YDFVysC,GACnCwgB,kCEDN,MAAMrP,EAASnR,YAEDygB,GAAGtP,EAAO8G,UAAUl+D,QAAQwZ,QAAS,YFDbytC,GAEhC0f,EAA2B,CAC/BC,GAAM,CAAC,QAAS,QAAS,SACzBC,IAAO,CAAC,QAAS,QAAS,QAAS,QAAS,QAAS,SACrD,UAAW,CAAC,QAAS,QAAS,UAG1BC,EAAgB,CACpB/e,MAAO,aACPC,MAAO,YACPC,MAAO,oBAGT8e,GAAiB,SAASlZ,EAAWnnD,GACnC,IAAKmnD,IAAcnnD,EAAK,OAExB,MAAMsgE,EAAUtgE,EAAI8jD,kBACpB,IAAKwc,EAAS,OAEd,MAAMC,EAAoBN,EAAyBK,GAEnD,IAAKC,EACH,MAAM,IAAIvpE,MAAM,qBAAqBspE,OAGvC,IAAKC,EAAkBzjE,SAASqqD,GAC9B,MAAM,IAAInwD,MAAM,wBAAwBspE,+BAAqCC,EAAkBtpE,KAAK,UAUtG,GAAI4oE,EACF,OAAQS,GACR,IAAK,KACH,MAAME,EAAWxgE,EAAIygE,qBAAqBC,WACpCC,EAAeP,EAAcjZ,GAEnC,GAAIqZ,IAAaG,EACf,MAAM,IAAI3pE,MAAM,oBAAoBmwD,sBAA8BwZ,OAEpE,MAEF,IAAK,UACH,GAAIZ,EAA+B,CACjC,MAAMjkE,EAASo/B,SAASisB,EAAUrrC,OAAO,GAAI,KACvC8kD,cAAEA,EAAaC,kBAAEA,EAAiBna,WAAEA,GAAe1mD,EAAIygE,qBAE7D,GAAIG,IAAkB,MAAM9kE,KAAY+kE,IAAsBD,EAC5D,MAAM,IAAI5pE,MAAM,gGAAgGmwD,MAGlH,QAAmB/tD,IAAfstD,GAA4BA,EAAa5qD,GAAU,EACrD,MAAM,IAAI9E,MAAM,4GAA4GmwD,KAEtI,EAIA,qCGjEA,IAAIuJ,EAASnR,YAECuhB,GAAGpQ,EAAO8G,UAAUl+D,QAAQwZ,QAAS,yDCFnD,MAAMi3C,EAAoBxK,KACpB2K,EAAiB3J,KACjB8J,EAAoBvJ,KACpB1rC,EAASmuC,KACTiI,EAAW5F,KACXya,EAAwBxY,KACxBkZ,EAAe1M,KACf3K,EAAM+N,MACNuJ,UAACA,EAASC,gBAAEA,EAAetd,gBAAEA,GAAmByV,EAEhD8H,EAAe,CAAC,QAAS,QAAS,SAClCC,EAAc,CAAC,QAAS,QAAS,SACjCC,EAAe,CAAC,QAAS,QAAS,SAClCC,EAAU,CAAC,QAAS,QAAS,gBAE/BN,IACFG,EAAa/kE,OAAO+kE,EAAaplE,OAAQ,EAAG,QAAS,QAAS,SAC9DslE,EAAajlE,OAAOilE,EAAatlE,OAAQ,EAAG,QAAS,QAAS,UAGlDwqD,GAAG,SAAUgb,EAAWC,EAAmBjrE,EAASoL,GAahE,IAAI8/D,EAWJ,GAvBwB,mBAAZlrE,GAA4BoL,IACtCA,EAAWpL,EACXA,EAAU,CAAA,GAGPA,IACHA,EAAU,CAAA,GAIZA,EAAUyD,OAAOC,OAAO,CAAE,EAAE1D,GAK1BkrE,EADE9/D,GAGK,SAASe,EAAKY,GACnB,GAAIZ,EAAK,MAAMA,EACf,OAAOY,GAIP/M,EAAQmrE,gBAAoD,iBAA3BnrE,EAAQmrE,eAC3C,OAAOD,EAAK,IAAIzX,EAAkB,oCAGpC,QAAsB3wD,IAAlB9C,EAAQspC,QAAiD,iBAAlBtpC,EAAQspC,OAA+C,KAAzBtpC,EAAQspC,MAAM1kC,QACrF,OAAOsmE,EAAK,IAAIzX,EAAkB,qCAGpC,QAA+C3wD,IAA3C9C,EAAQorE,gCAAkG,kBAA3CprE,EAAQorE,+BACzE,OAAOF,EAAK,IAAIzX,EAAkB,qDAGpC,MAAM0X,EAAiBnrE,EAAQmrE,gBAAkBnvC,KAAK+I,MAAMppB,KAAKuI,MAAQ,KAEzE,IAAK8mD,EACH,OAAOE,EAAK,IAAIzX,EAAkB,yBAGpC,GAAyB,iBAAduX,EACT,OAAOE,EAAK,IAAIzX,EAAkB,yBAGpC,MAAM4X,EAAQL,EAAUvmE,MAAM,KAE9B,GAAqB,IAAjB4mE,EAAM7lE,OACR,OAAO0lE,EAAK,IAAIzX,EAAkB,kBAGpC,IAAI6X,EAEJ,IACEA,EAAexsD,EAAOksD,EAAW,CAAExX,UAAU,GAC9C,CAAC,MAAMrnD,GACN,OAAO++D,EAAK/+D,EAChB,CAEE,IAAKm/D,EACH,OAAOJ,EAAK,IAAIzX,EAAkB,kBAGpC,MAAMzW,EAASsuB,EAAatuB,OAC5B,IAAIuuB,EAEJ,GAAgC,mBAAtBN,EAAkC,CAC1C,IAAI7/D,EACF,OAAO8/D,EAAK,IAAIzX,EAAkB,yFAGpC8X,EAAYN,CAChB,MAEIM,EAAY,SAASvuB,EAAQwuB,GAC3B,OAAOA,EAAe,KAAMP,IAIhC,OAAOM,EAAUvuB,EAAQ,SAAS7wC,EAAK8+D,GACrC,GAAG9+D,EACD,OAAO++D,EAAK,IAAIzX,EAAkB,2CAA6CtnD,EAAIpL,UAGrF,MAAM0qE,EAAmC,KAApBJ,EAAM,GAAGzmE,OAE9B,IAAK6mE,GAAgBR,EACnB,OAAOC,EAAK,IAAIzX,EAAkB,8BAGpC,GAAIgY,IAAiBR,EACnB,OAAOC,EAAK,IAAIzX,EAAkB,0CAGpC,IAAKgY,IAAiBzrE,EAAQ0rE,WAC5B,OAAOR,EAAK,IAAIzX,EAAkB,oEAGpC,GAAyB,MAArBwX,KAA+BA,aAA6BP,GAC9D,IACEO,EAAoB5d,EAAgB4d,EACrC,CAAC,MAAOrM,GACP,IACEqM,EAAoBN,EAA6C,iBAAtBM,EAAiCruB,OAAOpU,KAAKyiC,GAAqBA,EAC9G,CAAC,MAAOrM,GACP,OAAOsM,EAAK,IAAIzX,EAAkB,+CAC5C,CACA,CAeI,GAZKzzD,EAAQ0rE,aACoB,WAA3BT,EAAkBrkC,KACpB5mC,EAAQ0rE,WAAaX,EACZ,CAAC,MAAO,WAAWvkE,SAASykE,EAAkBzd,mBACvDxtD,EAAQ0rE,WAAaZ,EAC4B,OAAxCG,EAAkBzd,kBAC3BxtD,EAAQ0rE,WAAab,EAErB7qE,EAAQ0rE,WAAad,IAIoC,IAAzD5qE,EAAQ0rE,WAAW9lE,QAAQ0lE,EAAatuB,OAAOmO,KACjD,OAAO+f,EAAK,IAAIzX,EAAkB,sBAGpC,GAAIzW,EAAOmO,IAAIrmD,WAAW,OAAoC,WAA3BmmE,EAAkBrkC,KACnD,OAAOskC,EAAK,IAAIzX,EAAmB,wDAAwDzW,EAAOmO,QAC7F,GAAI,gBAAgB9lD,KAAK23C,EAAOmO,MAAmC,WAA3B8f,EAAkBrkC,KAC/D,OAAOskC,EAAK,IAAIzX,EAAmB,0DAA0DzW,EAAOmO,QAGtG,IAAKnrD,EAAQorE,+BACX,IACErB,EAAsB/sB,EAAOmO,IAAK8f,EACnC,CAAC,MAAOlpE,GACP,OAAOmpE,EAAKnpE,EACpB,CAGI,IAAIkxD,EAEJ,IACEA,EAAQG,EAAIpD,OAAOgb,EAAWM,EAAatuB,OAAOmO,IAAK8f,EACxD,CAAC,MAAOlpE,GACP,OAAOmpE,EAAKnpE,EAClB,CAEI,IAAKkxD,EACH,OAAOiY,EAAK,IAAIzX,EAAkB,sBAGpC,MAAMloB,EAAU+/B,EAAa//B,QAE7B,QAA2B,IAAhBA,EAAQogC,MAAwB3rE,EAAQ4rE,gBAAiB,CAClE,GAA2B,iBAAhBrgC,EAAQogC,IACjB,OAAOT,EAAK,IAAIzX,EAAkB,sBAEpC,GAAIloB,EAAQogC,IAAMR,GAAkBnrE,EAAQ6rE,gBAAkB,GAC5D,OAAOX,EAAK,IAAItX,EAAe,iBAAkB,IAAIj4C,KAAmB,IAAd4vB,EAAQogC,MAE1E,CAEI,QAA2B,IAAhBpgC,EAAQugC,MAAwB9rE,EAAQ+rE,iBAAkB,CACnE,GAA2B,iBAAhBxgC,EAAQugC,IACjB,OAAOZ,EAAK,IAAIzX,EAAkB,sBAEpC,GAAI0X,GAAkB5/B,EAAQugC,KAAO9rE,EAAQ6rE,gBAAkB,GAC7D,OAAOX,EAAK,IAAInX,EAAkB,cAAe,IAAIp4C,KAAmB,IAAd4vB,EAAQugC,MAE1E,CAEI,GAAI9rE,EAAQgsE,SAAU,CACpB,MAAMC,EAAY3jE,MAAMC,QAAQvI,EAAQgsE,UAAYhsE,EAAQgsE,SAAW,CAAChsE,EAAQgsE,UAShF,KARe1jE,MAAMC,QAAQgjC,EAAQ2gC,KAAO3gC,EAAQ2gC,IAAM,CAAC3gC,EAAQ2gC,MAE9C9+B,KAAK,SAAU++B,GAClC,OAAOF,EAAU7+B,KAAK,SAAU4+B,GAC9B,OAAOA,aAAoBhnE,OAASgnE,EAAS3mE,KAAK8mE,GAAkBH,IAAaG,CAC3F,EACA,GAGQ,OAAOjB,EAAK,IAAIzX,EAAkB,mCAAqCwY,EAAUtrE,KAAK,SAE9F,CAEI,GAAIX,EAAQsnB,OAAQ,CAKlB,GAHmC,iBAAnBtnB,EAAQsnB,QAAuBikB,EAAQ6gC,MAAQpsE,EAAQsnB,QAC9Dhf,MAAMC,QAAQvI,EAAQsnB,UAAoD,IAAzCtnB,EAAQsnB,OAAO1hB,QAAQ2lC,EAAQ6gC,KAGvE,OAAOlB,EAAK,IAAIzX,EAAkB,iCAAmCzzD,EAAQsnB,QAErF,CAEI,GAAItnB,EAAQqsE,SACN9gC,EAAQhpB,MAAQviB,EAAQqsE,QAC1B,OAAOnB,EAAK,IAAIzX,EAAkB,kCAAoCzzD,EAAQqsE,UAIlF,GAAIrsE,EAAQssE,OACN/gC,EAAQghC,MAAQvsE,EAAQssE,MAC1B,OAAOpB,EAAK,IAAIzX,EAAkB,gCAAkCzzD,EAAQssE,QAIhF,GAAItsE,EAAQspC,OACNiC,EAAQjC,QAAUtpC,EAAQspC,MAC5B,OAAO4hC,EAAK,IAAIzX,EAAkB,gCAAkCzzD,EAAQspC,QAIhF,GAAItpC,EAAQikB,OAAQ,CAClB,GAA2B,iBAAhBsnB,EAAQlC,IACjB,OAAO6hC,EAAK,IAAIzX,EAAkB,0CAGpC,MAAM+Y,EAAkBtX,EAASl1D,EAAQikB,OAAQsnB,EAAQlC,KACzD,QAA+B,IAApBmjC,EACT,OAAOtB,EAAK,IAAIzX,EAAkB,iGAEpC,GAAI0X,GAAkBqB,GAAmBxsE,EAAQ6rE,gBAAkB,GACjE,OAAOX,EAAK,IAAInX,EAAkB,kBAAmB,IAAIp4C,KAAuB,IAAlB6wD,IAEtE,CAEI,IAAyB,IAArBxsE,EAAQwzD,SAAmB,CAC7B,MAAMjI,EAAY+f,EAAa/f,UAE/B,OAAO2f,EAAK,KAAM,CAChBluB,OAAQA,EACRzR,QAASA,EACTggB,UAAWA,GAEnB,CAEI,OAAO2f,EAAK,KAAM3/B,EACtB,0CC3PA,IAAIkhC,EAAW,IACXrX,EAAmB,iBACnBsX,EAAc,sBACdC,EAAM,IAGNC,EAAU,qBACVC,EAAU,oBACVC,EAAS,6BACTC,EAAY,kBACZC,EAAY,kBAGZC,EAAS,aAGTC,EAAa,qBAGbC,EAAa,aAGbC,EAAY,cAGZC,EAAW,mBAGXC,EAAe1oC,SA4EnB,SAAS2oC,EAAU5jE,GACjB,OAAOA,GAAUA,CACnB,CA+BA,SAAS6jE,EAAWpwB,EAAQqwB,GAC1B,OAnGF,SAAkB1rD,EAAO2rD,GAKvB,IAJA,IAAI/nE,GAAS,EACTH,EAASuc,EAAQA,EAAMvc,OAAS,EAChC1B,EAASwE,MAAM9C,KAEVG,EAAQH,GACf1B,EAAO6B,GAAS+nE,EAAS3rD,EAAMpc,GAAQA,EAAOoc,GAEhD,OAAOje,CACT,CA0FS6pE,CAASF,EAAO,SAAS/jE,GAC9B,OAAO0zC,EAAO1zC,EAClB,EACA,CAiBA,IAPiBy6C,EAAMypB,EAOnBC,EAAcpqE,OAAOsT,UAGrB0hB,EAAiBo1C,EAAYp1C,eAO7Bq1C,EAAiBD,EAAYn/B,SAG7Bq/B,EAAuBF,EAAYE,qBAGnCC,GAvBa7pB,EAuBQ1gD,OAAO2J,KAvBTwgE,EAuBenqE,OAtB7B,SAAS6lD,GACd,OAAOnF,EAAKypB,EAAUtkB,MAsBtB2kB,EAAYjyC,KAAKywB,IAUrB,SAASyhB,EAAcvkE,EAAOwkE,GAG5B,IAAIrqE,EAAUyE,EAAQoB,IA8HxB,SAAqBA,GAEnB,OAmFF,SAA2BA,GACzB,OAAOykE,EAAazkE,IAAU0kE,EAAY1kE,EAC5C,CArFS2kE,CAAkB3kE,IAAU8uB,EAAe4rB,KAAK16C,EAAO,aAC1DokE,EAAqB1pB,KAAK16C,EAAO,WAAamkE,EAAezpB,KAAK16C,IAAUijE,EAClF,CAlIkC2B,CAAY5kE,GAvE9C,SAAmB8qD,EAAGiZ,GAIpB,IAHA,IAAI/nE,GAAS,EACT7B,EAASwE,MAAMmsD,KAEV9uD,EAAQ8uD,GACf3wD,EAAO6B,GAAS+nE,EAAS/nE,GAE3B,OAAO7B,CACT,CAgEM0qE,CAAU7kE,EAAMnE,OAAQmvD,QACxB,GAEAnvD,EAAS1B,EAAO0B,OAChBipE,IAAgBjpE,EAEpB,IAAK,IAAIkE,KAAOC,GACTwkE,IAAa11C,EAAe4rB,KAAK16C,EAAOD,IACvC+kE,IAAuB,UAAP/kE,GAAmBglE,EAAQhlE,EAAKlE,KACpD1B,EAAOiB,KAAK2E,GAGhB,OAAO5F,CACT,CASA,SAAS6qE,EAASvxB,GAChB,GAmCIwxB,GADejlE,EAlCFyzC,IAmCGzzC,EAAM7I,YACtB+tE,EAAwB,mBAARD,GAAsBA,EAAK73D,WAAc82D,EAEtDlkE,IAAUklE,EArCf,OAAOb,EAAW5wB,GAiCtB,IAAqBzzC,EACfilE,EACAC,EAjCA/qE,EAAS,GACb,IAAK,IAAI4F,KAAOjG,OAAO25C,GACjB3kB,EAAe4rB,KAAKjH,EAAQ1zC,IAAe,eAAPA,GACtC5F,EAAOiB,KAAK2E,GAGhB,OAAO5F,CACT,CAUA,SAAS4qE,EAAQ/kE,EAAOnE,GAEtB,SADAA,EAAmB,MAAVA,EAAiB4vD,EAAmB5vD,KAE1B,iBAATmE,GAAqB0jE,EAAShoE,KAAKsE,KAC1CA,GAAS,GAAKA,EAAQ,GAAK,GAAKA,EAAQnE,CAC7C,CA0GA,IAAI+C,EAAUD,MAAMC,QA2BpB,SAAS8lE,EAAY1kE,GACnB,OAAgB,MAATA,GAkFT,SAAkBA,GAChB,MAAuB,iBAATA,GACZA,GAAS,GAAKA,EAAQ,GAAK,GAAKA,GAASyrD,CAC7C,CArF0B0Z,CAASnlE,EAAMnE,UAiDzC,SAAoBmE,GAGlB,IAAIolE,EAAMzc,EAAS3oD,GAASmkE,EAAezpB,KAAK16C,GAAS,GACzD,OAAOolE,GAAOlC,GAAWkC,GAAOjC,CAClC,CAtDqDkC,CAAWrlE,EAChE,CA+GA,SAAS2oD,EAAS3oD,GAChB,IAAIi9B,SAAcj9B,EAClB,QAASA,IAAkB,UAARi9B,GAA4B,YAARA,EACzC,CA0BA,SAASwnC,EAAazkE,GACpB,QAASA,GAAyB,iBAATA,CAC3B,QA4NAslE,GAncA,SAAkBC,EAAYvlE,EAAOwlE,EAAWC,GA+bhD,IAAgBhyB,EA9bd8xB,EAAab,EAAYa,GAAcA,GA8bzB9xB,EA9b6C8xB,GA+b3C1B,EAAWpwB,EA/B7B,SAAcA,GACZ,OAAOixB,EAAYjxB,GAAU8wB,EAAc9wB,GAAUuxB,EAASvxB,EAChE,CA6BqChwC,CAAKgwC,IAAW,GA9bnD+xB,EAAaA,IAAcC,EAgV7B,SAAmBzlE,GACjB,IAAI7F,EAvCN,SAAkB6F,GAChB,IAAKA,EACH,OAAiB,IAAVA,EAAcA,EAAQ,EAG/B,GADAA,EAgEF,SAAkBA,GAChB,GAAoB,iBAATA,EACT,OAAOA,EAET,GApGF,SAAkBA,GAChB,MAAuB,iBAATA,GACXykE,EAAazkE,IAAUmkE,EAAezpB,KAAK16C,IAAUqjE,CAC1D,CAiGMqC,CAAS1lE,GACX,OAAOgjE,EAET,GAAIra,EAAS3oD,GAAQ,CACnB,IAAI+vD,EAAgC,mBAAjB/vD,EAAM2lE,QAAwB3lE,EAAM2lE,UAAY3lE,EACnEA,EAAQ2oD,EAASoH,GAAUA,EAAQ,GAAMA,CAC7C,CACE,GAAoB,iBAAT/vD,EACT,OAAiB,IAAVA,EAAcA,GAASA,EAEhCA,EAAQA,EAAM9E,QAAQooE,EAAQ,IAC9B,IAAIsC,EAAWpC,EAAW9nE,KAAKsE,GAC/B,OAAQ4lE,GAAYnC,EAAU/nE,KAAKsE,GAC/B2jE,EAAa3jE,EAAM6b,MAAM,GAAI+pD,EAAW,EAAI,GAC3CrC,EAAW7nE,KAAKsE,GAASgjE,GAAOhjE,CACvC,CAnFU6lE,CAAS7lE,GACbA,IAAU8iE,GAAY9iE,KAAU,IAAW,CAE7C,OADYA,EAAQ,GAAK,EAAI,GACf+iE,CAClB,CACE,OAAO/iE,GAAUA,EAAQA,EAAQ,CACnC,CA6Be8lE,CAAS9lE,GAClB+lE,EAAY5rE,EAAS,EAEzB,OAAOA,GAAWA,EAAU4rE,EAAY5rE,EAAS4rE,EAAY5rE,EAAU,CACzE,CArVsC6rE,CAAUR,GAAa,EAE3D,IAAI3pE,EAAS0pE,EAAW1pE,OAIxB,OAHI2pE,EAAY,IACdA,EAAYlB,EAAUzoE,EAAS2pE,EAAW,IAoP9C,SAAkBxlE,GAChB,MAAuB,iBAATA,IACVpB,EAAQoB,IAAUykE,EAAazkE,IAAUmkE,EAAezpB,KAAK16C,IAAUojE,CAC7E,CArPS6C,CAASV,GACXC,GAAa3pE,GAAU0pE,EAAWtpE,QAAQ+D,EAAOwlE,IAAc,IAC7D3pE,GAnNT,SAAqBuc,EAAOpY,EAAOwlE,GACjC,GAAIxlE,GAAUA,EACZ,OAvBJ,SAAuBoY,EAAO8tD,EAAWV,EAAWW,GAIlD,IAHA,IAAItqE,EAASuc,EAAMvc,OACfG,EAAQwpE,GAAaW,EAAY,GAAK,GAElCA,EAAYnqE,MAAYA,EAAQH,GACtC,GAAIqqE,EAAU9tD,EAAMpc,GAAQA,EAAOoc,GACjC,OAAOpc,EAGX,OAAQ,CACV,CAaWoqE,CAAchuD,EAAOwrD,EAAW4B,GAKzC,IAHA,IAAIxpE,EAAQwpE,EAAY,EACpB3pE,EAASuc,EAAMvc,SAEVG,EAAQH,GACf,GAAIuc,EAAMpc,KAAWgE,EACnB,OAAOhE,EAGX,OAAQ,CACV,CAsMmBqqE,CAAYd,EAAYvlE,EAAOwlE,IAAc,CAChE,wCCtSA,IAAI1C,EAAW,IACXC,EAAc,sBACdC,EAAM,IAGNK,EAAY,kBAGZC,EAAS,aAGTC,EAAa,qBAGbC,EAAa,aAGbC,EAAY,cAGZE,EAAe1oC,SAUfkpC,EAPcrqE,OAAOsT,UAOQ23B,SAyDjC,SAAS4jB,EAAS3oD,GAChB,IAAIi9B,SAAcj9B,EAClB,QAASA,IAAkB,UAARi9B,GAA4B,YAARA,EACzC,QAoKAqpC,GApMA,SAAmBtmE,GACjB,MAAuB,iBAATA,GAAqBA,GAgJrC,SAAmBA,GACjB,IAAI7F,EAvCN,SAAkB6F,GAChB,IAAKA,EACH,OAAiB,IAAVA,EAAcA,EAAQ,EAG/B,GADAA,EAgEF,SAAkBA,GAChB,GAAoB,iBAATA,EACT,OAAOA,EAET,GApGF,SAAkBA,GAChB,MAAuB,iBAATA,GAtBhB,SAAsBA,GACpB,QAASA,GAAyB,iBAATA,CAC3B,CAqBKykE,CAAazkE,IAAUmkE,EAAezpB,KAAK16C,IAAUqjE,CAC1D,CAiGMqC,CAAS1lE,GACX,OAAOgjE,EAET,GAAIra,EAAS3oD,GAAQ,CACnB,IAAI+vD,EAAgC,mBAAjB/vD,EAAM2lE,QAAwB3lE,EAAM2lE,UAAY3lE,EACnEA,EAAQ2oD,EAASoH,GAAUA,EAAQ,GAAMA,CAC7C,CACE,GAAoB,iBAAT/vD,EACT,OAAiB,IAAVA,EAAcA,GAASA,EAEhCA,EAAQA,EAAM9E,QAAQooE,EAAQ,IAC9B,IAAIsC,EAAWpC,EAAW9nE,KAAKsE,GAC/B,OAAQ4lE,GAAYnC,EAAU/nE,KAAKsE,GAC/B2jE,EAAa3jE,EAAM6b,MAAM,GAAI+pD,EAAW,EAAI,GAC3CrC,EAAW7nE,KAAKsE,GAASgjE,GAAOhjE,CACvC,CAnFU6lE,CAAS7lE,GACbA,IAAU8iE,GAAY9iE,KAAU,IAAW,CAE7C,OADYA,EAAQ,GAAK,EAAI,GACf+iE,CAClB,CACE,OAAO/iE,GAAUA,EAAQA,EAAQ,CACnC,CA6Be8lE,CAAS9lE,GAClB+lE,EAAY5rE,EAAS,EAEzB,OAAOA,GAAWA,EAAU4rE,EAAY5rE,EAAS4rE,EAAY5rE,EAAU,CACzE,CArJ8C6rE,CAAUhmE,EACxD,qCC5DA,IAGI8iE,EAAW,IACXC,EAAc,sBACdC,EAAM,IAGNK,EAAY,kBAGZC,EAAS,aAGTC,EAAa,qBAGbC,EAAa,aAGbC,EAAY,cAGZE,EAAe1oC,SAUfkpC,EAPcrqE,OAAOsT,UAOQ23B,SAmBjC,SAASwhC,EAAOzb,EAAGtQ,GACjB,IAAIrgD,EACJ,GAAmB,mBAARqgD,EACT,MAAM,IAAItC,UAvDQ,uBA0DpB,OADA4S,EA+KF,SAAmB9qD,GACjB,IAAI7F,EAvCN,SAAkB6F,GAChB,IAAKA,EACH,OAAiB,IAAVA,EAAcA,EAAQ,EAG/B,GADAA,EAgEF,SAAkBA,GAChB,GAAoB,iBAATA,EACT,OAAOA,EAET,GApGF,SAAkBA,GAChB,MAAuB,iBAATA,GAtBhB,SAAsBA,GACpB,QAASA,GAAyB,iBAATA,CAC3B,CAqBKykE,CAAazkE,IAAUmkE,EAAezpB,KAAK16C,IAAUqjE,CAC1D,CAiGMqC,CAAS1lE,GACX,OAAOgjE,EAET,GAAIra,EAAS3oD,GAAQ,CACnB,IAAI+vD,EAAgC,mBAAjB/vD,EAAM2lE,QAAwB3lE,EAAM2lE,UAAY3lE,EACnEA,EAAQ2oD,EAASoH,GAAUA,EAAQ,GAAMA,CAC7C,CACE,GAAoB,iBAAT/vD,EACT,OAAiB,IAAVA,EAAcA,GAASA,EAEhCA,EAAQA,EAAM9E,QAAQooE,EAAQ,IAC9B,IAAIsC,EAAWpC,EAAW9nE,KAAKsE,GAC/B,OAAQ4lE,GAAYnC,EAAU/nE,KAAKsE,GAC/B2jE,EAAa3jE,EAAM6b,MAAM,GAAI+pD,EAAW,EAAI,GAC3CrC,EAAW7nE,KAAKsE,GAASgjE,GAAOhjE,CACvC,CAnFU6lE,CAAS7lE,GACbA,IAAU8iE,GAAY9iE,KAAU,IAAW,CAE7C,OADYA,EAAQ,GAAK,EAAI,GACf+iE,CAClB,CACE,OAAO/iE,GAAUA,EAAQA,EAAQ,CACnC,CA6Be8lE,CAAS9lE,GAClB+lE,EAAY5rE,EAAS,EAEzB,OAAOA,GAAWA,EAAU4rE,EAAY5rE,EAAS4rE,EAAY5rE,EAAU,CACzE,CApLM6rE,CAAUlb,GACP,WAOL,QANMA,EAAI,IACR3wD,EAASqgD,EAAK8J,MAAMhtD,KAAMygD,YAExB+S,GAAK,IACPtQ,OAAOrhD,GAEFgB,EAEX,CAiDA,SAASwuD,EAAS3oD,GAChB,IAAIi9B,SAAcj9B,EAClB,QAASA,IAAkB,UAARi9B,GAA4B,YAARA,EACzC,QAoKAupC,GApMA,SAAchsB,GACZ,OAAO+rB,EAAO,EAAG/rB,EACnB,qCCnGA,MAAM+Q,EAAWjM,KACXwhB,EAAexgB,KACf8f,EAAwBvf,KACxB4I,EAAMnG,KACNzmD,EAAW8oD,KACX8gB,kCCKN,IASItC,EANcrqE,OAAOsT,UAMQ23B,gBAkDjC2hC,GAhCA,SAAmB1mE,GACjB,OAAiB,IAAVA,IAA4B,IAAVA,GA2B3B,SAAsBA,GACpB,QAASA,GAAyB,iBAATA,CAC3B,CA5BKykE,CAAazkE,IA7BJ,oBA6BcmkE,EAAezpB,KAAK16C,EAChD,EDnCkB4nD,GACZ+e,EAAYvS,KACZwS,kCEGN,IASIzC,EANcrqE,OAAOsT,UAMQ23B,gBA2DjC8hC,GALA,SAAkB7mE,GAChB,MAAuB,iBAATA,GA9BhB,SAAsBA,GACpB,QAASA,GAAyB,iBAATA,CAC3B,CA6BKykE,CAAazkE,IAjEF,mBAiEYmkE,EAAezpB,KAAK16C,EAChD,EFrEiBw3D,GACXsP,kCGsCN,IAPiBtsB,EAAMypB,EAOnB8C,EAAYC,SAAS55D,UACrB82D,EAAcpqE,OAAOsT,UAGrB65D,EAAeF,EAAUhiC,SAGzBjW,EAAiBo1C,EAAYp1C,eAG7Bo4C,EAAmBD,EAAavsB,KAAK5gD,QAOrCqqE,EAAiBD,EAAYn/B,SAG7BoiC,GA3Ba3sB,EA2BU1gD,OAAOstE,eA3BXnD,EA2B2BnqE,OA1BzC,SAAS6lD,GACd,OAAOnF,EAAKypB,EAAUtkB,aAiG1B0nB,GAdA,SAAuBrnE,GACrB,IAjCF,SAAsBA,GACpB,QAASA,GAAyB,iBAATA,CAC3B,CA+BOykE,CAAazkE,IAnHJ,mBAoHVmkE,EAAezpB,KAAK16C,IA3G1B,SAAsBA,GAGpB,IAAI7F,GAAS,EACb,GAAa,MAAT6F,GAA0C,mBAAlBA,EAAM+kC,SAChC,IACE5qC,KAAY6F,EAAQ,IACpB,MAAO5H,GAAG,CAEd,OAAO+B,CACT,CAiGiDmtE,CAAatnE,GAC1D,OAAO,EAET,IAAIklE,EAAQiC,EAAannE,GACzB,GAAc,OAAVklE,EACF,OAAO,EAET,IAAID,EAAOn2C,EAAe4rB,KAAKwqB,EAAO,gBAAkBA,EAAM/tE,YAC9D,MAAuB,mBAAR8tE,GACbA,aAAgBA,GAAQgC,EAAavsB,KAAKuqB,IAASiC,CACvD,EHhIsB/N,GAChB8M,kCICN,IASI9B,EANcrqE,OAAOsT,UAMQ23B,SAyB7BnmC,EAAUD,MAAMC,eAkDpB2oE,GALA,SAAkBvnE,GAChB,MAAuB,iBAATA,IACVpB,EAAQoB,IAtBd,SAAsBA,GACpB,QAASA,GAAyB,iBAATA,CAC3B,CAoBwBykE,CAAazkE,IAjFrB,mBAiF+BmkE,EAAezpB,KAAK16C,EACnE,EJnFiBq5D,GACX9Q,EAAOgR,MACPwH,UAAEA,EAASC,gBAAEA,EAAewG,iBAAEA,GAAqB/N,EAEnDgO,EAAiB,CAAC,QAAS,QAAS,QAAS,QAAS,QAAS,QAAS,QAAS,QAAS,QAAS,QACrG3G,GACF2G,EAAevrE,OAAO,EAAG,EAAG,QAAS,QAAS,SAGhD,MAAMwrE,EAAsB,CAC1B/hC,UAAW,CAAE4jB,QAAS,SAASvpD,GAAS,OAAO2mE,EAAU3mE,IAAWimE,EAASjmE,IAAUA,CAAO,EAAI5I,QAAS,+EAC3GuwE,UAAW,CAAEpe,QAAS,SAASvpD,GAAS,OAAO2mE,EAAU3mE,IAAWimE,EAASjmE,IAAUA,CAAO,EAAI5I,QAAS,+EAC3GirE,SAAU,CAAE9Y,QAAS,SAASvpD,GAAS,OAAOimE,EAASjmE,IAAUrB,MAAMC,QAAQoB,EAAO,EAAI5I,QAAS,wCACnG8vD,UAAW,CAAEqC,QAAS1sD,EAASk1B,KAAK,KAAM01C,GAAiBrwE,QAAS,iDACpEi8C,OAAQ,CAAEkW,QAASud,EAAe1vE,QAAS,8BAC3CwhD,SAAU,CAAE2Q,QAAS0c,EAAU7uE,QAAS,+BACxCumB,OAAQ,CAAE4rC,QAAS0c,EAAU7uE,QAAS,6BACtCsrE,QAAS,CAAEnZ,QAAS0c,EAAU7uE,QAAS,8BACvCurE,MAAO,CAAEpZ,QAAS0c,EAAU7uE,QAAS,4BACrCwwE,YAAa,CAAEre,QAASkd,EAAWrvE,QAAS,mCAC5CywE,MAAO,CAAEte,QAAS0c,EAAU7uE,QAAS,4BACrC0wE,cAAe,CAAEve,QAASkd,EAAWrvE,QAAS,qCAC9C2wE,sBAAuB,CAAExe,QAASkd,EAAWrvE,QAAS,6CACtDqqE,+BAAgC,CAAElY,QAASkd,EAAWrvE,QAAS,uDAG3D4wE,EAA2B,CAC/BtoC,IAAK,CAAE6pB,QAASqd,EAAUxvE,QAAS,uCACnC+qE,IAAK,CAAE5Y,QAASqd,EAAUxvE,QAAS,uCACnC4qE,IAAK,CAAEzY,QAASqd,EAAUxvE,QAAS,wCAGrC,SAAS6gD,EAASgwB,EAAQC,EAAcz0B,EAAQ00B,GAC9C,IAAKrB,EAAcrzB,GACjB,MAAM,IAAI18C,MAAM,aAAeoxE,EAAgB,2BAEjDruE,OAAO2J,KAAKgwC,GACTn+B,QAAQ,SAASvV,GAChB,MAAMqoE,EAAYH,EAAOloE,GACzB,GAAKqoE,GAML,IAAKA,EAAU7e,QAAQ9V,EAAO1zC,IAC5B,MAAM,IAAIhJ,MAAMqxE,EAAUhxE,cAN1B,IAAK8wE,EACH,MAAM,IAAInxE,MAAM,IAAMgJ,EAAM,wBAA0BooE,EAAgB,IAOhF,EACA,CAUA,MAAME,EAAqB,CACzBhG,SAAY,MACZ1kD,OAAU,MACV+kD,QAAW,MACXC,MAAS,OAGL2F,EAAsB,CAC1B,YACA,YACA,cACA,WACA,SACA,UACA,gBAGYriB,GAAG,SAAUrkB,EAAS2mC,EAAoBlyE,EAASoL,GACxC,mBAAZpL,GACToL,EAAWpL,EACXA,EAAU,CAAA,GAEVA,EAAUA,GAAW,GAGvB,MAAMmyE,EAAqC,iBAAZ5mC,IACRqR,OAAO4O,SAASjgB,GAEjCyR,EAASv5C,OAAOC,OAAO,CAC3BynD,IAAKnrD,EAAQ6wD,WAAa,QAC1BkC,IAAKof,EAAkB,WAAQrvE,EAC/BisB,IAAK/uB,EAAQwxE,OACZxxE,EAAQg9C,QAEX,SAASo1B,EAAQjmE,GACf,GAAIf,EACF,OAAOA,EAASe,GAElB,MAAMA,CACV,CAEE,IAAK+lE,GAA4C,SAAtBlyE,EAAQ6wD,UACjC,OAAOuhB,EAAQ,IAAI1xE,MAAM,yCAG3B,GAA0B,MAAtBwxE,KAAgCA,aAA8BxH,GAChE,IACEwH,EAAqBf,EAAiBe,EACvC,CAAC,MAAOtT,GACP,IACEsT,EAAqBvH,EAA8C,iBAAvBuH,EAAkCt1B,OAAOpU,KAAK0pC,GAAsBA,EACjH,CAAC,MAAOtT,GACP,OAAOwT,EAAQ,IAAI1xE,MAAM,gDACjC,CACA,CAGE,GAAIs8C,EAAOmO,IAAIrmD,WAAW,OAAqC,WAA5BotE,EAAmBtrC,KACpD,OAAOwrC,EAAQ,IAAI1xE,MAAO,yDAAyDs8C,EAAOmO,QACrF,GAAI,gBAAgB9lD,KAAK23C,EAAOmO,KAAM,CAC3C,GAAgC,YAA5B+mB,EAAmBtrC,KACrB,OAAOwrC,EAAQ,IAAI1xE,MAAO,2DAA2Ds8C,EAAOmO,QAE9F,IAAKnrD,EAAQ0xE,wBACV10B,EAAOmO,IAAIrmD,WAAW,YACqBhC,IAA5CovE,EAAmB/H,sBACnB+H,EAAmB/H,qBAAqBkI,cAAgB,KACxD,OAAOD,EAAQ,IAAI1xE,MAAM,8DAA8Ds8C,EAAOmO,OAEpG,CAEE,QAAuB,IAAZ5f,EACT,OAAO6mC,EAAQ,IAAI1xE,MAAM,wBACpB,GAAIyxE,EAAiB,CAC1B,KA9EJ,SAAyB5mC,GAChBqW,EAAS+vB,GAA0B,EAAMpmC,EAAS,UAC3D,CA6EM+mC,CAAgB/mC,EACtB,CACI,MAAO/pC,GACL,OAAO4wE,EAAQ5wE,EACrB,CACSxB,EAAQyxE,gBACXlmC,EAAU9nC,OAAOC,OAAO,CAAE,EAAC6nC,GAEjC,KAAS,CACL,MAAMgnC,EAAkBN,EAAoB1yD,OAAO,SAAUizD,GAC3D,YAA+B,IAAjBxyE,EAAQwyE,EAC5B,GAEI,GAAID,EAAgB/sE,OAAS,EAC3B,OAAO4sE,EAAQ,IAAI1xE,MAAM,WAAa6xE,EAAgB5xE,KAAK,KAAO,sBAAyB4qC,EAAY,YAE7G,CAEE,QAA2B,IAAhBA,EAAQugC,UAAoD,IAAtB9rE,EAAQsvC,UACvD,OAAO8iC,EAAQ,IAAI1xE,MAAM,8EAG3B,QAA2B,IAAhB6qC,EAAQogC,UAAoD,IAAtB3rE,EAAQsxE,UACvD,OAAOc,EAAQ,IAAI1xE,MAAM,8EAG3B,KA7GF,SAAyBV,GAChB4hD,EAASyvB,GAAqB,EAAOrxE,EAAS,UACvD,CA4GIyyE,CAAgBzyE,EACpB,CACE,MAAOwB,GACL,OAAO4wE,EAAQ5wE,EACnB,CAEE,IAAKxB,EAAQorE,+BACX,IACErB,EAAsB/sB,EAAOmO,IAAK+mB,EACnC,CAAC,MAAO1wE,GACP,OAAO4wE,EAAQ5wE,EACrB,CAGE,MAAMe,EAAYgpC,EAAQlC,KAAOrN,KAAK+I,MAAMppB,KAAKuI,MAAQ,KAQzD,GANIlkB,EAAQuxE,mBACHhmC,EAAQlC,IACN8oC,IACT5mC,EAAQlC,IAAM9mC,QAGiB,IAAtBvC,EAAQsxE,UAA2B,CAC5C,IACE/lC,EAAQogC,IAAMzW,EAASl1D,EAAQsxE,UAAW/uE,EAChD,CACI,MAAO4J,GACL,OAAOimE,EAAQjmE,EACrB,CACI,QAA2B,IAAhBo/B,EAAQogC,IACjB,OAAOyG,EAAQ,IAAI1xE,MAAM,mGAE/B,CAEE,QAAiC,IAAtBV,EAAQsvC,WAAgD,iBAAZ/D,EAAsB,CAC3E,IACEA,EAAQugC,IAAM5W,EAASl1D,EAAQsvC,UAAW/sC,EAChD,CACI,MAAO4J,GACL,OAAOimE,EAAQjmE,EACrB,CACI,QAA2B,IAAhBo/B,EAAQugC,IACjB,OAAOsG,EAAQ,IAAI1xE,MAAM,mGAE/B,CAEE+C,OAAO2J,KAAK4kE,GAAoB/yD,QAAQ,SAAUvV,GAChD,MAAMgpE,EAAQV,EAAmBtoE,GACjC,QAA4B,IAAjB1J,EAAQ0J,GAAsB,CACvC,QAA8B,IAAnB6hC,EAAQmnC,GACjB,OAAON,EAAQ,IAAI1xE,MAAM,gBAAkBgJ,EAAM,yCAA2CgpE,EAAQ,gBAEtGnnC,EAAQmnC,GAAS1yE,EAAQ0J,EAC/B,CACA,GAEE,MAAM64C,EAAWviD,EAAQuiD,UAAY,OAErC,GAAwB,mBAAbn3C,EAgBJ,CACL,IAAImgD,EAAY6H,EAAIxD,KAAK,CAAC5S,OAAQA,EAAQzR,QAASA,EAASx8B,OAAQmjE,EAAoB3vB,SAAUA,IAElG,IAAIviD,EAAQ0xE,uBAAyB,aAAarsE,KAAK23C,EAAOmO,MAAQI,EAAU/lD,OAAS,IACvF,MAAM,IAAI9E,MAAM,8DAA8Ds8C,EAAOmO,OAEvF,OAAOI,CACX,CAtBIngD,EAAWA,GAAY8mD,EAAK9mD,GAE5BgoD,EAAIzD,WAAW,CACb3S,OAAQA,EACR8D,WAAYoxB,EACZ3mC,QAASA,EACTgX,SAAUA,IACT2P,KAAK,QAAS9mD,GACd8mD,KAAK,OAAQ,SAAU3G,GAEtB,IAAIvrD,EAAQ0xE,uBAAyB,aAAarsE,KAAK23C,EAAOmO,MAAQI,EAAU/lD,OAAS,IACvF,OAAO4F,EAAS,IAAI1K,MAAM,8DAA8Ds8C,EAAOmO,QAEjG//C,EAAS,KAAMmgD,EACvB,0BKnPAonB,GAAiB,CACf7zD,OAAQmqC,KACR+G,OAAQ/F,KACR2F,KAAMpF,KACNiJ,kBAAmBxG,KACnB2G,eAAgBtE,KAChByE,kBAAmBxC;;ACSrB,MAAMqhB,GAKF,oBAAOC,CAAc1gC,GACjB,MAAMzc,EAAkB,IAAIk9C,GAE5B,OADAl9C,EAAgB49B,IAAMnhB,EACfzc,CACV,CAQD,sBAAOo9C,CAAgB1uC,EAAY0c,EAAYiyB,GAC3C,MAAMr9C,EAAkB,IAAIk9C,GAQ5B,OAPAl9C,EAAgBorB,WAAaA,EAC7BprB,EAAgB0O,WAAaA,EAC7B1O,EAAgBs9C,WAAY,EACxBD,IACAr9C,EAAgBq9C,kBACZ9xE,KAAKgyE,iBAAiBF,IAEvBr9C,CACV,CAOD,0CAAOw9C,CAAoC9uC,EAAY0c,EAAYiyB,GAC/D,MAAMr9C,EAAkB,IAAIk9C,GAQ5B,OAPAl9C,EAAgBorB,WAAaA,EAC7BprB,EAAgB0O,WAAaA,EAC7B1O,EAAgBs9C,WAAY,EACxBD,IACAr9C,EAAgBq9C,kBACZ9xE,KAAKgyE,iBAAiBF,IAEvBr9C,CACV,CAOD,MAAAy9C,CAAOC,EAAgB9rD,EAAQ+rD,GAE3B,GAAIpyE,KAAK6/C,YAAc7/C,KAAKmjC,WACxB,OAAInjC,KAAKqyD,MACJryD,KAAKqyE,aACNhsD,IAAWrmB,KAAKqmB,QAChB+rD,IAAgBpyE,KAAKoyE,YACdpyE,KAAKqyD,IAETryD,KAAKsyE,UAAUH,EAAgB9rD,EAAQ+rD,GAMlD,GAAIpyE,KAAKqyD,IACL,OAAOryD,KAAKqyD,IAEhB,MAAMn5C,GAAsBq5D,GAC/B,CAID,SAAAD,CAAUH,EAAgB9rD,EAAQ+rD,GAC9BpyE,KAAKqmB,OAASA,EACdrmB,KAAKoyE,YAAcA,EACnB,MAAMI,EAAWC,KACjBzyE,KAAK0yE,eAAiBF,EAAW,IACjC,MAGMz2B,EAAS,CACXmO,IAJclqD,KAAK+xE,UACjB54B,GACAA,IAIAw5B,EAAmB3yE,KAAK+xE,UACxB54B,GACAA,GACN32C,OAAOC,OAAOs5C,EAAQ,CAClB42B,CAACA,GAAmBtxB,GAAcE,gBAAgBvhD,KAAKmjC,WAAY7tB,MAEnEtV,KAAK8xE,mBACLtvE,OAAOC,OAAOs5C,EAAQ,CAClB62B,CAACz5B,IAAmBn5C,KAAK8xE,oBAGjC,MAAMxnC,EAAU,CACZuoC,CAAC15B,IAAwBn5C,KAAKoyE,YAC9BU,CAAC35B,IAA+Bn5C,KAAK0yE,eACrCK,CAAC55B,IAAsBn5C,KAAKqmB,OAC5B2sD,CAAC75B,IAAuBn5C,KAAKqmB,OAC7B4sD,CAAC95B,IAA0Bq5B,EAC3BU,CAAC/5B,IAAsBg5B,EAAe/4D,iBAG1C,OADApZ,KAAKqyD,IAAMA,GAAI1D,KAAKrkB,EAAStqC,KAAK6/C,WAAY,CAAE9D,WACzC/7C,KAAKqyD,GACf,CAID,SAAAggB,GACI,OAAOryE,KAAK0yE,eAAiBD,IAChC,CAKD,uBAAOT,CAAiBF,GAQpB,MAAMqB,EAAmB,wEACnBC,EAAQ,GACd,IAAI1wD,EACJ,KAAgE,QAAxDA,EAAUywD,EAAiBxwD,KAAKmvD,KAEpCsB,EAAMtvE,KAAK4e,EAAQ,GAAG9e,QAAQ,SAAUwM,GAAUyB,eAEtD,OAAOuhE,CACV;yCCjJL,MAAMnzE,GAAO,mBACPsb,GAAU;;ACUhB,MAAM83D,WAA+BjvC,GACjC,WAAAvkC,CAAYwkC,GACRtkC,MAAMskC,EACT,CAMD,kBAAMgM,CAAanhB,GACflvB,KAAKiG,OAAOjB,KAAK,oDACjB,MAAMwnC,EAAeimC,KACfxsD,QAAiBjmB,KAAKswC,oBAAoBtwC,KAAKoxB,UAAWlC,GAC1DqhB,EAAkB,IAAIhF,GAAgBvrC,KAAKhB,OAAOk2B,YAAYrnB,SAAU7N,KAAK68B,aAAc78B,KAAKwlC,YAAaxlC,KAAKiG,OAAQjG,KAAKhB,OAAOomC,kBAAmBplC,KAAKhB,OAAOmmC,mBAE3KoL,EAAgB9E,sBAAsBxlB,EAASyU,MAE/C,OADsB6V,EAAgBjE,0BAA0BrmB,EAASyU,KAAM16B,KAAKoxB,UAAWob,EAActd,EAEhH,CAMD,yBAAMohB,CAAoBlf,EAAWlC,GACjC,MAAMyhB,EAAwB3wC,KAAK0mC,2BAA2BxX,GACxDkP,EAAWna,GAAUa,kBAAkBsM,EAAUwM,cAAe+S,GAChEC,QAAoB5wC,KAAK6wC,uBAAuB3hB,GAChDwN,EAAU18B,KAAKylC,0BAA0B,CAC3C9a,WAAYuE,EAAQviB,SACpBg5B,KAAMvQ,KAEJ+N,EAAa,CACft1B,SAAU7N,KAAKhB,OAAOk2B,YAAYrnB,SAClCujB,UAAWA,EAAUL,mBACrBrvB,OAAQwtB,EAAQxtB,OAChBivB,OAAQzB,EAAQyB,OAChBvB,qBAAsBF,EAAQE,qBAC9ByT,sBAAuB3T,EAAQ2T,sBAC/BC,mBAAoB5T,EAAQ4T,mBAC5BC,UAAW7T,EAAQ6T,UACnB1T,OAAQH,EAAQG,QAEpB,OAAOrvB,KAAK4lC,2BAA2BxH,EAAUwS,EAAalU,EAASyG,EAAYjU,EAAQhuB,cAC9F,CAKD,4BAAM2vC,CAAuB3hB,GACzB,MAAMtL,EAAa,IAAIpb,IACvB8qE,GAAoC1vD,EAAY5jB,KAAKhB,OAAOk2B,YAAYrnB,UjImRhF,SAAqB+V,EAAYjX,GAC7BiX,EAAWhb,IAAIsM,GAAiCvI,EACpD,CiIpRQ4mE,CAAoC3vD,EAAYsL,EAAQviB,UjIyRhE,SAAqBiX,EAAYm2B,GAC7Bn2B,EAAWhb,IAAIsM,GAAiC6kC,EACpD,CiI1RQy5B,CAAoC5vD,EAAYsL,EAAQ6qB,UACxD05B,GAAkC7vD,EAAYsL,EAAQxtB,QACtDgyE,GAAwC9vD,EAAYxQ,IACpDugE,GAAqC/vD,EAAYtQ,IACjDsgE,GAAsChwD,GACtCiwD,GAAuCjwD,EAAY5jB,KAAKhB,OAAO44B,aAC/Dk8C,GAAgDlwD,EAAY5jB,KAAKhB,OAAOkmC,UAAUpQ,aAClFi/C,GAAsCnwD,GAClC5jB,KAAKg5B,wBACLg7C,GAA2CpwD,EAAY5jB,KAAKg5B,wBAIhEi7C,GAAyCrwD,EAFnBsL,EAAQhuB,eAC1BlB,KAAKhB,OAAO+lC,gBAAgB3rB,iBAE5BpZ,KAAKhB,OAAOimC,kBAAkBzQ,cAC9B0/C,GAAwCtwD,EAAY5jB,KAAKhB,OAAOimC,kBAAkBzQ,cAEtF,MAAMC,EAAkBz0B,KAAKhB,OAAOimC,kBAAkBxQ,gBActD,OAbIA,IACA0/C,GAA2CvwD,QAAkBosB,GAAmBvb,EAAgByc,UAAWlxC,KAAKhB,OAAOk2B,YAAYrnB,SAAUqhB,EAAQ4T,qBACrJsxC,GAA+CxwD,EAAY6Q,EAAgB0c,kBAE1Eh0B,GAAYC,WAAW8R,EAAQyB,SAC/B3wB,KAAKhB,OAAOk2B,YAAYoC,oBACrBt3B,KAAKhB,OAAOk2B,YAAYoC,mBAAmB/yB,OAAS,IACxD8vE,GAAkCzwD,EAAYsL,EAAQyB,OAAQ3wB,KAAKhB,OAAOk2B,YAAYoC,oBAEtFt3B,KAAKhB,OAAOulC,cAAc3Q,sBAC1B1E,EAAQviB,UACR2nE,GAAkC1wD,EAAYsL,EAAQviB,UAEnD4nE,GAA0B3wD,EACpC;yCCjFL,SAAS4wD,GAAsBx1E,EAAQoyB,EAAWlC,EAASjpB,GACvD,MAAM2d,EAAa6wD,GAAwD,IACpEz1E,EAAOg7C,KACV5oB,UAAWA,EACX4F,YAAa9H,EAAQ8H,aAAe,IACrC9H,EAASjpB,GAeZ,OAdA4tE,GAAuCjwD,EAAY,CAC/CwQ,IAAKhkB,GACLmL,QAASA,GACT8Y,IAAKtyB,QAAQ2yE,MAAQ,GACrBpgD,GAAIvyB,QAAQ4yE,UAAY,KAExB31E,EAAOg7C,KAAK7kB,eAAiBpD,IAC7B+hD,GAAgDlwD,EAAY5kB,EAAOkmC,UAAUpQ,aAEjF4+C,GAAwC9vD,EAAYxQ,IAChD8b,EAAQ0lD,eAAiB1lD,EAAQ2lD,qBlIyKzC,SAAgCjxD,EAAYgxD,EAAeC,GACvD,IAAID,IAAiBC,EAKjB,MAAM33D,GAA+Bf,IAJrCyH,EAAWhb,IDnLI,iBCmLgBgsE,GAC/BhxD,EAAWhb,IDnLW,wBCmLgBisE,EAK9C,CkIhLQC,CAA+ClxD,EAAYsL,EAAQ0lD,cAAe1lD,EAAQ2lD,qBAE9FE,GAAgDnxD,EAAYsL,EAAQpL,sBAAwB,CAAE,GtGqHlG,SAAyBsN,EAAW4jD,EAAmBC,EAAcnxD,GACjE,MAAMiB,EAAcpB,GAAiBqxD,EAAmBC,EAAcnxD,GACtE,OAAOG,GAAUa,kBAAkBsM,EAAUqM,sBAAuB1Y,EACxE,CsGvHWmwD,CAAkC9jD,EAAWxN,EAAY5kB,EAAOg7C,KAAK1U,uBAAwBpW,EAAQpL,qBAChH;yCCjBA,MAAMqxD,GAIF,WAAAt1E,CAAYwkC,GACRrkC,KAAKhB,O7FyCb,UAA+Bg7C,KAAEA,EAAI96C,OAAEA,EAAMD,MAAEA,EAAKm2E,OAAEA,EAAMlwC,UAAEA,IAC1D,MAAMX,EAAgB,IACf7Q,GACH4O,cAAe,IAAI2X,GAAWm7B,GAAQl7B,SAAUk7B,GAAQj7B,oBACxDngC,cAAeo7D,GAAQp7D,eAAiB+lC,GACxCC,uBAAwBo1B,GAAQp1B,yBAA0B,GAG9D,GAAMhG,EAAK2F,oBACJ3F,EAAK2F,kBAAkBxc,aACvB6W,EAAK2F,kBAAkBC,iBAC1B,MAAMZ,GAAcO,2BAExB,MAAO,CACHvF,KAAM,IAAK0F,MAAyB1F,GACpC96C,OAAQ,IAAKA,GACbD,MAAO,IAAK60B,MAA0B70B,GACtCm2E,OAAQ,IAAK7wC,KAAkB6wC,GAC/BlwC,UAAW,IAAKrQ,MAA8BqQ,GAEtD,C6F7DsBmwC,CAAsBhxC,GACpCrkC,KAAKmyE,eAAiB,IAAIxvB,GAC1B3iD,KAAKiG,OAAS,IAAI8T,GAAO/Z,KAAKhB,OAAOo2E,OAAOp7D,cAAe/Z,GAAMsb,IACjEvb,KAAK+lD,QAAU,IAAIhD,GAAY/iD,KAAKiG,OAAQjG,KAAKhB,OAAOg7C,KAAKnsC,SAAU7N,KAAKmyE,e7HwyBpF,SAAqCj9C,GACjC,MAAMogD,EAA4BpgD,EAAYlO,uBAC9C,IAAIA,EACJ,GAAIsuD,EACA,IACItuD,EAAyBpmB,KAAKC,MAAMy0E,EACvC,CACD,MAAOx0E,GACH,MAAMoc,GAA+Bd,GACxC,CAEL,MAAO,CACH2U,mBAAoBmE,EAAY9D,UAC1BgR,GAAmBlN,EAAY9D,gBAC/BvvB,EACNmvB,iBAAkBkE,EAAYlE,iBAC9BhK,uBAAwBA,EAEhC,C6H1zBoGuuD,CAA4Bv1E,KAAKhB,OAAOg7C,OACpIh6C,KAAKorC,WAAa,IAAI0a,GAAW9lD,KAAK+lD,QAAS/lD,KAAKiG,OAAQjG,KAAKhB,OAAOC,MAAM+mD,YACjF,CAUD,oBAAMwvB,CAAetmD,GACjBlvB,KAAKiG,OAAOjB,KAAK,wBAAyBkqB,EAAQhuB,eAClD,MAAMu0E,EAAe,IACdvmD,WACOlvB,KAAK01E,sBAAsBxmD,GACrCmkB,aAAcnkB,EAAQmkB,cAAgBhgC,GACtC+b,qBAAsBxa,GAAqBC,OAC3C5L,MAAOimB,EAAQjmB,OAAS,GACxBo/B,MAAOnZ,EAAQmZ,OAAS,IAEtBstC,QAA4B31E,KAAK41E,gBAAgBH,EAAarkD,UAAWqkD,EAAav0E,mBAAeW,EAAWqtB,EAAQoS,mBAC9H,OAAOkzC,GAAsBx0E,KAAKhB,OAAQ22E,EAAqBF,EAAcz1E,KAAKiG,OACrF,CASD,wBAAM4vE,CAAmB3mD,EAAS4mD,GAC9B91E,KAAKiG,OAAOjB,KAAK,6BACbkqB,EAAQjmB,OAAS6sE,IACjB91E,KAAKiG,OAAOjB,KAAK,yCACjBhF,KAAK+1E,cAAc7mD,EAAQjmB,MAAO6sE,EAAgB7sE,OAAS,IAE3D6sE,EAAkB,IAAKA,EAAiB7sE,MAAO,KAEnD,MAAMwsE,EAAe,IACdvmD,WACOlvB,KAAK01E,sBAAsBxmD,GACrCE,qBAAsBxa,GAAqBC,QAEzCmkB,EAAyBh5B,KAAKg2E,iCAAiC98B,GAA0Bu8B,EAAav0E,eAC5G,IACI,MAAMy0E,QAA4B31E,KAAK41E,gBAAgBH,EAAarkD,UAAWqkD,EAAav0E,mBAAeW,EAAWqtB,EAAQoS,mBACxH20C,QAAyBj2E,KAAKk2E,8BAA8BP,EAAqBF,EAAav0E,cAAeu0E,EAAaz+C,YAAagC,GACvIm9C,EAA0B,IAAIlmC,GAAwBgmC,GAE5D,OADAj2E,KAAKiG,OAAOlB,QAAQ,2BAA4B0wE,EAAav0E,qBAChDi1E,EAAwB9lC,aAAaolC,EAAcK,EACnE,CACD,MAAOh1E,GAKH,MAJIA,aAAa4U,IACb5U,EAAEkV,iBAAiBy/D,EAAav0E,eAEpC83B,EAAuBid,mBAAmBn1C,GACpCA,CACT,CACJ,CAQD,gCAAMixC,CAA2B7iB,GAC7BlvB,KAAKiG,OAAOjB,KAAK,oCAAqCkqB,EAAQhuB,eAC9D,MAAMu0E,EAAe,IACdvmD,WACOlvB,KAAK01E,sBAAsBxmD,GACrCE,qBAAsBxa,GAAqBC,QAEzCmkB,EAAyBh5B,KAAKg2E,iCAAiC98B,GAAkCu8B,EAAav0E,eACpH,IACI,MAAMy0E,QAA4B31E,KAAK41E,gBAAgBH,EAAarkD,UAAWqkD,EAAav0E,mBAAeW,EAAWqtB,EAAQoS,mBACxH80C,QAAiCp2E,KAAKk2E,8BAA8BP,EAAqBF,EAAav0E,cAAeu0E,EAAaz+C,aAAe,GAAIgC,GACrJq9C,EAAqB,IAAIxkC,GAAmBukC,GAElD,OADAp2E,KAAKiG,OAAOlB,QAAQ,+BAAgC0wE,EAAav0E,qBACpDm1E,EAAmBhmC,aAAaolC,EAChD,CACD,MAAO30E,GAKH,MAJIA,aAAa4U,IACb5U,EAAEkV,iBAAiBy/D,EAAav0E,eAEpC83B,EAAuBid,mBAAmBn1C,GACpCA,CACT,CACJ,CASD,wBAAMw1E,CAAmBpnD,GACrB,MAAMumD,EAAe,IACdvmD,WACOlvB,KAAK01E,sBAAsBxmD,GACrC0jB,aAAc1jB,EAAQ0jB,eAAgB,GAEpC5Z,EAAyBh5B,KAAKg2E,iCAAiC98B,GAA0Bu8B,EAAav0E,cAAeu0E,EAAa7iC,cACxI,IACI,MAAM+iC,QAA4B31E,KAAK41E,gBAAgBH,EAAarkD,UAAWqkD,EAAav0E,mBAAeW,EAAWqtB,EAAQoS,mBACxHi1C,QAA4Bv2E,KAAKk2E,8BAA8BP,EAAqBF,EAAav0E,cAAeu0E,EAAaz+C,aAAe,GAAIgC,GAChJw9C,EAAmB,IAAI/jC,GAAiB8jC,GAC9Cv2E,KAAKiG,OAAOlB,QAAQ,6BAA8B0wE,EAAav0E,eAC/D,IAGI,aADMlB,KAAKorC,WAAW4b,uBACThnD,KAAKy2E,yBAAyBhB,EAAce,EAAkBD,EAC9E,CACD,MAAOh2E,GACH,GAAIA,aAAiB0Y,IACjB1Y,EAAMoV,YACF+gE,GAA2C,CAE/C,OAD2B,IAAI7kC,GAAmB0kC,GACxBxkC,2BAA2B0jC,EACxD,CACD,MAAMl1E,CACT,CACJ,CACD,MAAOA,GAKH,MAJIA,aAAiBmV,IACjBnV,EAAMyV,iBAAiBy/D,EAAav0E,eAExC83B,EAAuBid,mBAAmB11C,GACpCA,CACT,CACJ,CACD,8BAAMk2E,CAAyBhB,EAAce,EAAkBD,GAC3D,MAAOI,EAAczjC,SAAsBsjC,EAAiB9jC,mBAAmB,IACxE+iC,EACH/zE,OAAQ+zE,EAAa/zE,QAAQ6C,OACvBkxE,EAAa/zE,OACb,IAAIgR,MAEd,GAAIwgC,IAAiB79B,GAAoC,CACrDrV,KAAKiG,OAAOjB,KAAK,sJAEjB,MAAMqxE,EAAqB,IAAIxkC,GAAmB0kC,GAClD,UACUF,EAAmBtkC,2BAA2B0jC,EACvD,CACD,MAEC,CACJ,CAED,OAAOkB,CACV,CAYD,oCAAMC,CAA+B1nD,GACjClvB,KAAKiG,OAAOjB,KAAK,wCAAyCkqB,EAAQhuB,eAClE,MAAMu0E,EAAe,IACdvmD,WACOlvB,KAAK01E,sBAAsBxmD,IAEnC8J,EAAyBh5B,KAAKg2E,iCAAiC98B,GAAsCu8B,EAAav0E,eACxH,IACI,MAAMy0E,QAA4B31E,KAAK41E,gBAAgBH,EAAarkD,UAAWqkD,EAAav0E,mBAAeW,EAAWqtB,EAAQoS,mBACxHu1C,QAAqC72E,KAAKk2E,8BAA8BP,EAAqBF,EAAav0E,cAAe,GAAI83B,GAC7H89C,EAAyB,IAAIzD,GAAuBwD,GAE1D,OADA72E,KAAKiG,OAAOlB,QAAQ,mCAAoC0wE,EAAav0E,qBACxD41E,EAAuBzmC,aAAaolC,EACpD,CACD,MAAO30E,GAKH,MAJIA,aAAa4U,IACb5U,EAAEkV,iBAAiBy/D,EAAav0E,eAEpC83B,EAAuBid,mBAAmBn1C,GACpCA,CACT,CACJ,CAID,aAAAi2E,GAEI,OADA/2E,KAAKiG,OAAOjB,KAAK,wBACVhF,KAAKorC,UACf,CAUD,aAAA2qC,CAAc9sE,EAAO+tE,GACjB,IAAK/tE,EACD,MAAM+1C,GAAcO,2BAExB,GAAIt2C,IAAU+tE,EACV,MAAM99D,GAAsB+9D,GAEnC,CAID,SAAAC,GACI,OAAOl3E,KAAKiG,MACf,CAKD,SAAAkxE,CAAUlxE,GACNjG,KAAKiG,OAASA,CACjB,CAMD,mCAAMiwE,CAA8BP,EAAqByB,EAAsBpgD,EAAagC,GACxFh5B,KAAKiG,OAAOlB,QAAQ,uCAAwCqyE,GAC5Dp3E,KAAKiG,OAAOjB,KAAK,qEAAqE2wE,EAAoB/3C,iBAAkBw5C,GAC5Hp+C,GAAwB2d,8BAA8Bg/B,EAAoBx7C,yBAmC1E,MAlC4B,CACxBjF,YAAa,CACTrnB,SAAU7N,KAAKhB,OAAOg7C,KAAKnsC,SAC3BujB,UAAWukD,EACXr+C,mBAAoBt3B,KAAKhB,OAAOg7C,KAAK1iB,mBACrCN,eAEJhd,cAAe,CACXnU,SAAU7F,KAAKhB,OAAOo2E,OAAOp7D,cAAcnU,SAC3CwU,eAAgBra,KAAKhB,OAAOo2E,OAAOp7D,cAAcK,eACjDC,kBAAmBta,KAAKhB,OAAOo2E,OAAOp7D,cAAcM,kBACpDpZ,cAAek2E,GAEnB1yC,aAAc,CACV3Q,0BAA2B/zB,KAAKhB,OAAOC,MAAM80B,2BAEjDgR,gBAAiB/kC,KAAKmyE,eACtBn4C,iBAAkBh6B,KAAKhB,OAAOo2E,OAAO9yC,cACrCsC,iBAAkB5kC,KAAK+lD,QACvB/sB,uBAAwBA,EACxBiM,kBAAmB,CACfzQ,aAAcx0B,KAAKw0B,aACnBC,sBAAuBz0B,KAAKgwC,mBAAmB2lC,IAEnD/9C,YAAa,CACTxD,IAAKijD,GACL97D,QAASA,GACT8Y,IAAKtyB,QAAQ2yE,MAAQtkE,GAAUyB,aAC/ByiB,GAAIvyB,QAAQ4yE,UAAYvkE,GAAUyB,cAEtCqzB,UAAWllC,KAAKhB,OAAOkmC,UACvBC,kBAAmBnlC,KAAKhB,OAAOC,MAAM+mD,YACrC5gB,kBAAmBplC,KAAKorC,WAG/B,CACD,wBAAM4E,CAAmB5e,GAIrB,OAHIpxB,KAAKs3E,mCACLt3E,KAAKy0B,gBAAkBk9C,GAAgBC,oBAAoB5hC,GAAmBhwC,KAAKs3E,iCAAkCt3E,KAAKhB,OAAOg7C,KAAKnsC,SAAUujB,EAAUwM,iBAEtJ59B,KAAKy0B,iBAAmB,CAC5Byc,UAAWlxC,KAAKy0B,gBAAgBy9C,OAAOlyE,KAAKmyE,eAAgBnyE,KAAKhB,OAAOg7C,KAAKnsC,SAAUujB,EAAUwM,eACjGuT,cAAekmC,GAEtB,CAKD,2BAAM3B,CAAsB6B,GAgBxB,OAfAv3E,KAAKiG,OAAOlB,QAAQ,iCAAkCwyE,EAAYr2E,eAE9Dq2E,EAAYnoD,sBACZmoD,EAAYnoD,uBAAyBxa,GAAqBE,KAC1D9U,KAAKiG,OAAOlB,QAAQ,0GAA2GwyE,EAAYr2E,eAE/Iq2E,EAAYnoD,qBAAuBxa,GAAqBC,OAEpD7U,KAAKhB,OAAOC,MAAM80B,2BAClBwjD,EAAY5mD,SAEXxT,GAAYC,WAAWm6D,EAAY5mD,UACpC4mD,EAAYtoE,0BACFjP,KAAKmyE,eAAet4D,WAAW09D,EAAY5mD,SAElD,IACA4mD,EACH71E,OAAQ,IACC61E,GAAeA,EAAY71E,QAAW,MACxCgR,IAEPxR,cAAgBq2E,GAAeA,EAAYr2E,eACvClB,KAAKmyE,eAAe/4D,gBACxBgY,UAAWmmD,EAAYnmD,WAAapxB,KAAKhB,OAAOg7C,KAAK5oB,UAE5D,CAOD,gCAAA4kD,CAAiChhC,EAAO9zC,EAAe0xC,GACnD,MAAM4kC,EAAmB,CACrB3pE,SAAU7N,KAAKhB,OAAOg7C,KAAKnsC,SAC3B3M,cAAeA,EACf8zC,MAAOA,EACPpC,aAAcA,IAAgB,GAElC,OAAO,IAAIkC,GAAuB0iC,EAAkBx3E,KAAK+lD,QAC5D,CAMD,qBAAM6vB,CAAgBv0C,EAAiB+1C,EAAsB53C,EAA0B8B,GACnFthC,KAAKiG,OAAOlB,QAAQ,yBAA0BqyE,GAE9C,MAAMK,EAAe76C,GAAUwE,kBAAkBC,EAAiBC,GAAqBthC,KAAKhB,OAAOg7C,KAAK1Y,mBAClGxE,EAAmB,CACrB3H,aAAcn1B,KAAKhB,OAAOg7C,KAAK7kB,aAC/BnE,iBAAkBhxB,KAAKhB,OAAOg7C,KAAKhpB,iBACnChK,uBAAwBhnB,KAAKhB,OAAOg7C,KAAKhzB,uBACzCkV,kBAAmBl8B,KAAKhB,OAAOg7C,KAAK9d,kBACpCsD,2BACAM,2BAA4B9/B,KAAKhB,OAAOg7C,KAAKla,4BAEjD,OAAO43C,GAA0CD,EAAcz3E,KAAKhB,OAAOo2E,OAAO9yC,cAAetiC,KAAK+lD,QAASjpB,EAAkB98B,KAAKiG,OAAQmxE,EACjJ,CAID,UAAAO,GACI33E,KAAK+lD,QAAQT,OAChB;yCCjXL,MAAMsyB,GAOF,uBAAMC,CAAkBC,EAAiBC,GACrC,GAAI/3E,KAAKg4E,OACL,MAAMh5B,GAAcK,yCAExB,OAAO,IAAIt0C,QAAQ,CAACC,EAASowC,KACzBp7C,KAAKg4E,OAASh9B,EAAKi9B,aAAa,CAACC,EAAKC,KAClC,MAAM/zD,EAAM8zD,EAAI9zD,IAChB,IAAKA,EAID,OAHA+zD,EAAIzuE,IAAIquE,GACJ,2CACJ38B,EAAO4D,GAAcE,sCAGpB,GAAI96B,IAAQhU,GAAU4B,cAGvB,YAFAmmE,EAAIzuE,IAAIouE,GACJ,uEAGR,MAAM9gD,EAAch3B,KAAKo4E,iBAEnBC,EAAmBC,GADP,IAAI19B,IAAIx2B,EAAK4S,GACqCxZ,SAChE,GACA66D,EAAiBniE,OACjBiiE,EAAII,UAAU9lE,GAAqB,CAC/B+lE,SAAUxhD,IAEdmhD,EAAIzuE,OAEJ2uE,EAAiB93E,OACjB43E,EAAIzuE,IAAIquE,GACJ,mBAAmBM,EAAiB93E,SAE5CyK,EAAQqtE,KAEZr4E,KAAKg4E,OAAOS,OAAO,EAAG,cAE7B,CAKD,cAAAL,GACI,IAAKp4E,KAAKg4E,SAAWh4E,KAAKg4E,OAAOU,UAC7B,MAAM15B,GAAcI,oCAExB,MAAMu5B,EAAU34E,KAAKg4E,OAAOW,UAC5B,IAAKA,GAA8B,iBAAZA,IAAyBA,EAAQ7+B,KAEpD,MADA95C,KAAK44E,cACC55B,GAAcC,wCAExB,MAAMnF,EAAO6+B,GAAWA,EAAQ7+B,KAChC,MAAO,GAAGu9B,KAA4BA,MAAyBv9B,GAClE,CAID,WAAA8+B,GACQ54E,KAAKg4E,SAELh4E,KAAKg4E,OAAOa,QACmC,mBAApC74E,KAAKg4E,OAAOc,qBAInB94E,KAAKg4E,OAAOc,sBAEhB94E,KAAKg4E,OAAOe,QACZ/4E,KAAKg4E,YAASn2E,EAErB;yCC3EL,MAAMm3E,WAAyB50C,GAC3B,WAAAvkC,CAAYwkC,GACRtkC,MAAMskC,EACT,CAMD,kBAAMgM,CAAanhB,GACf,MAAM+pD,QAA2Bj5E,KAAKk5E,cAAchqD,GACpDA,EAAQiqD,mBAAmBF,GAC3B,MAAMzsC,EAAeimC,KACfxsD,QAAiBjmB,KAAKo5E,2BAA2BlqD,EAAS+pD,GAC1D1oC,EAAkB,IAAIhF,GAAgBvrC,KAAKhB,OAAOk2B,YAAYrnB,SAAU7N,KAAK68B,aAAc78B,KAAKwlC,YAAaxlC,KAAKiG,OAAQjG,KAAKhB,OAAOomC,kBAAmBplC,KAAKhB,OAAOmmC,mBAG3K,OADAoL,EAAgB9E,sBAAsBxlB,GAC/BsqB,EAAgBjE,0BAA0BrmB,EAAUjmB,KAAKoxB,UAAWob,EAActd,EAC5F,CAKD,mBAAMgqD,CAAchqD,GAChB,MAAMyhB,EAAwB3wC,KAAKq5E,2BAA2BnqD,GACxDkP,EAAWna,GAAUa,kBAAkB9kB,KAAKoxB,UAAUyM,mBAAoB8S,GAC1E5rB,EAAc/kB,KAAKs5E,kBAAkBpqD,GACrCwN,EAAU18B,KAAKylC,4BACftC,EAAa,CACft1B,SAAU7N,KAAKhB,OAAOk2B,YAAYrnB,SAClCujB,UAAWlC,EAAQkC,UACnB1vB,OAAQwtB,EAAQxtB,OAChBivB,OAAQzB,EAAQyB,OAChBvB,qBAAsBF,EAAQE,qBAC9ByT,sBAAuB3T,EAAQ2T,sBAC/BC,mBAAoB5T,EAAQ4T,mBAC5BC,UAAW7T,EAAQ6T,UACnB1T,OAAQH,EAAQG,QAEpB,OAAOrvB,KAAKu5E,uCAAuCn7C,EAAUrZ,EAAa2X,EAASyG,EAAYjU,EAAQhuB,cAC1G,CAKD,0BAAAm4E,CAA2BnqD,GACvB,MAAMtL,EAAa,IAAIpb,IAIvB,OAHI0mB,EAAQpL,sBACRixD,GAAgDnxD,EAAYsL,EAAQpL,sBAEjEywD,GAA0B3wD,EACpC,CASD,4CAAM21D,CAAuC17C,EAAoB9Y,EAAa2X,EAASyG,EAAYjiC,GAC/F,MAAQw5B,MAAQ8+C,UAAWC,EAAUC,YAAaC,EAAYC,iBAAkBC,EAAiBvrC,WAAYD,EAASyrC,SAAEA,EAAQh6E,QAAEA,UAAsBE,KAAK8lC,gBAAgB3C,EAAYtF,EAAoB,CACzMnD,KAAM3V,EACN2X,QAASA,GACVx7B,GACH,MAAO,CACHu4E,WACAE,aACAE,kBACAxrC,YACAyrC,WACAh6E,UAEP,CAKD,iBAAAw5E,CAAkBpqD,GACd,MAAMtL,EAAa,IAAIpb,IAWvB,OAVAirE,GAAkC7vD,EAAYsL,EAAQxtB,QACtD4xE,GAAoC1vD,EAAY5jB,KAAKhB,OAAOk2B,YAAYrnB,UACpEqhB,EAAQpL,sBACRixD,GAAgDnxD,EAAYsL,EAAQpL,uBAEpEoL,EAAQyB,QACP3wB,KAAKhB,OAAOk2B,YAAYoC,oBACrBt3B,KAAKhB,OAAOk2B,YAAYoC,mBAAmB/yB,OAAS,IACxD8vE,GAAkCzwD,EAAYsL,EAAQyB,OAAQ3wB,KAAKhB,OAAOk2B,YAAYoC,oBAEnFi9C,GAA0B3wD,EACpC,CAOD,eAAAm2D,CAAgBC,EAA0BC,EAAsBC,GAC5D,GAAIA,EAEA,MADAl6E,KAAKiG,OAAO1F,MAAM,sEACZ2Y,GAAsBihE,IAE3B,GAAIF,GACLA,EAAuBD,GACvBvH,KAAyBwH,EAEzB,MADAj6E,KAAKiG,OAAO1F,MAAM,iFAAiF05E,KAC7F/gE,GAAsBkhE,IAE3B,GAAI3H,KAAyBuH,EAK9B,MAJIC,GACAj6E,KAAKiG,OAAOlB,QAAQ,oIAAoIk1E,KAE5Jj6E,KAAKiG,OAAO1F,MAAM,2DAA2Dy5E,KACvE9gE,GAAsBmhE,IAEhC,OAAO,CACV,CAMD,gCAAMjB,CAA2BlqD,EAAS+pD,GACtC,MAAMtoC,EAAwB3wC,KAAK0mC,2BAA2BxX,GACxDkP,EAAWna,GAAUa,kBAAkB9kB,KAAKoxB,UAAUwM,cAAe+S,GACrEC,EAAc5wC,KAAK6wC,uBAAuB3hB,EAAS+pD,GACnDv8C,EAAU18B,KAAKylC,4BACfw0C,EAAuB/qD,EAAQkrB,QAC/Bq4B,KAAyBvjD,EAAQkrB,aACjCv4C,EACAm4E,EAA2BvH,KAAyBwG,EAAmB5qC,UACvEisC,EAAqD,IAA9BrB,EAAmBa,SAKhD,KAAO95E,KAAK+5E,gBAAgBC,EAA0BC,EAAsB/qD,EAAQqrD,SAAS,CACzF,MAAMp3C,EAAa,CACft1B,SAAU7N,KAAKhB,OAAOk2B,YAAYrnB,SAClCujB,UAAWlC,EAAQkC,UACnB1vB,OAAQwtB,EAAQxtB,OAChBivB,OAAQzB,EAAQyB,OAChBvB,qBAAsBF,EAAQE,qBAC9ByT,sBAAuB3T,EAAQ2T,sBAC/BC,mBAAoB5T,EAAQ4T,mBAC5BC,UAAW7T,EAAQ6T,UACnB1T,OAAQH,EAAQG,QAEdpJ,QAAiBjmB,KAAK4lC,2BAA2BxH,EAAUwS,EAAalU,EAASyG,EAAYjU,EAAQhuB,eAC3G,IAAI+kB,EAASyU,OAAQzU,EAASyU,KAAKn6B,MAc/B,OADAP,KAAKiG,OAAOlB,QAAQ,0DACbkhB,EAASyU,KAZhB,GAAIzU,EAASyU,KAAKn6B,QAAU6P,GAAUuB,sBAOlC,MADA3R,KAAKiG,OAAOjB,KAAK,+CACXiR,GAAgBukE,GAAkCv0D,EAASyU,KAAKn6B,OANtEP,KAAKiG,OAAOjB,KAAK,kDACXy1E,GAAgBH,EAYjC,CAMD,MADAt6E,KAAKiG,OAAO1F,MAAM,wCACZ2Y,GAAsBwhE,GAC/B,CAMD,sBAAA7pC,CAAuB3hB,EAAS+pD,GAC5B,MAAMr1D,EAAa,IAAIpb,IACvBirE,GAAkC7vD,EAAYsL,EAAQxtB,QACtD4xE,GAAoC1vD,EAAY5jB,KAAKhB,OAAOk2B,YAAYrnB,UACxE8lE,GAAqC/vD,EAAYtQ,IrI4BzD,SAAuBsQ,EAAY1N,GAC/B0N,EAAWhb,IDvLK,cCuLYsN,EAChC,CqI7BQykE,CAAsC/2D,EAAYq1D,EAAmBU,YAgBrE,OAbA1F,GAAyCrwD,EAFnBsL,EAAQhuB,eAC1BlB,KAAKhB,OAAO+lC,gBAAgB3rB,iBAEhCw6D,GAAsChwD,GACtCiwD,GAAuCjwD,EAAY5jB,KAAKhB,OAAO44B,aAC/Dk8C,GAAgDlwD,EAAY5jB,KAAKhB,OAAOkmC,UAAUpQ,aAClFi/C,GAAsCnwD,GAClC5jB,KAAKg5B,wBACLg7C,GAA2CpwD,EAAY5jB,KAAKg5B,0BAE3D7b,GAAYC,WAAW8R,EAAQyB,SAC/B3wB,KAAKhB,OAAOk2B,YAAYoC,oBACrBt3B,KAAKhB,OAAOk2B,YAAYoC,mBAAmB/yB,OAAS,IACxD8vE,GAAkCzwD,EAAYsL,EAAQyB,OAAQ3wB,KAAKhB,OAAOk2B,YAAYoC,oBAEnFi9C,GAA0B3wD,EACpC;yCClML,MAAMg3D,WAAgCzF,GAkBlC,WAAAt1E,CAAYwkC,GACRtkC,MAAMskC,GACFrkC,KAAKhB,OAAOE,OAAO27E,qBACf76E,KAAKhB,OAAOE,OAAO27E,mBAAmBC,mBACtC96E,KAAK66E,mBAAqB76E,KAAKhB,OAAOE,OAAO27E,mBAC7C76E,KAAK66E,mBAAmB1D,UAAUn3E,KAAKhB,OAAOo2E,OAAOp7D,gBAGrDha,KAAKiG,OAAOhB,QAAQ,4EAG5BjF,KAAKs0C,KAAOQ,GAAuBT,mBAAmB,CAClDxhB,YAAaziB,GACb0iB,eAAgBvX,IAEvB,CAUD,8BAAMw/D,CAAyB7rD,GAC3BlvB,KAAKiG,OAAOjB,KAAK,kCAAmCkqB,EAAQhuB,eAC5D,MAAMu0E,EAAejzE,OAAOC,OAAOysB,QAAelvB,KAAK01E,sBAAsBxmD,IACvE8J,EAAyBh5B,KAAKg2E,iCAAiC98B,GAAgCu8B,EAAav0E,eAClH,IACI,MAAMy0E,QAA4B31E,KAAK41E,gBAAgBH,EAAarkD,UAAWqkD,EAAav0E,mBAAeW,EAAWqtB,EAAQoS,mBACxH05C,QAAyBh7E,KAAKk2E,8BAA8BP,EAAqBF,EAAav0E,cAAe,GAAI83B,GACjHiiD,EAAmB,IAAIjC,GAAiBgC,GAE9C,OADAh7E,KAAKiG,OAAOlB,QAAQ,6BAA8B0wE,EAAav0E,qBAClD+5E,EAAiB5qC,aAAaolC,EAC9C,CACD,MAAO30E,GAKH,MAJIA,aAAa4U,IACb5U,EAAEkV,iBAAiBy/D,EAAav0E,eAEpC83B,EAAuBid,mBAAmBn1C,GACpCA,CACT,CACJ,CAID,6BAAMo6E,CAAwBhsD,GAC1B,MAAMhuB,EAAgBguB,EAAQhuB,eAAiBlB,KAAKmyE,eAAe/4D,gBACnEpZ,KAAKiG,OAAOkV,MAAM,iCAAkCja,GACpD,MAAMi6E,YAAEA,EAAWrD,gBAAEA,EAAeC,cAAEA,EAAaqD,aAAEA,EAAcC,eAAgBC,KAAyBC,GAAwBrsD,EACpI,GAAIlvB,KAAK66E,mBAAoB,CACzB,MAAMW,EAAgB,IACfD,EACH1tE,SAAU7N,KAAKhB,OAAOg7C,KAAKnsC,SAC3BnM,OAAQwtB,EAAQxtB,QAAUgR,GAC1BskB,YAAa9H,EAAQ8H,aAAe,GACpC5F,UAAWlC,EAAQkC,WAAapxB,KAAKhB,OAAOg7C,KAAK5oB,UACjDlwB,cAAeA,EACfu6E,gBAAiB,IACVF,EAAoBz3D,wBACpBy3D,EAAoB50C,qBACvB1Q,CAACylD,IAAwC17E,KAAKs0C,MAElDqnC,UAAWJ,EAAoBjzD,SAASuD,iBAE5C,OAAO7rB,KAAK66E,mBAAmBK,wBAAwBM,EAAeJ,EACzE,CACD,GAAIlsD,EAAQ8H,YACR,MAAMgoB,GAAcS,qCAExB,MAAM0C,SAAEA,EAAQE,UAAEA,SAAoBriD,KAAKmyE,eAAejwB,oBACpDm5B,EAAiBC,GAAwB,IAAI1D,GACnD,IAAIS,EAAmB,CAAA,EACnBuD,EAAwB,KAC5B,IACI,MAAMC,EAAmBR,EACpBxD,kBAAkBC,EAAiBC,GACnCl+C,KAAM5T,IACPoyD,EAAmBpyD,IAElB8H,MAAOjtB,IAER86E,EAAwB96E,IAGtBk2B,QAAoBh3B,KAAK87E,mBAAmBT,GAC5C5F,EAAe,IACd8F,EACHr6E,cAAeA,EACfQ,OAAQwtB,EAAQxtB,QAAUgR,GAC1BskB,YAAaA,EACbqc,aAAchgC,GACduhE,cAAevyB,EACfwyB,oBAAqB1hE,IAEnB4oE,QAAoB/7E,KAAKw1E,eAAeC,GAG9C,SAFM0F,EAAYY,SACZF,EACFD,EACA,MAAMA,EAEV,GAAIvD,EAAiB93E,MACjB,MAAM,IAAIkiC,GAAY41C,EAAiB93E,MAAO83E,EAAiB53E,kBAAmB43E,EAAiBziE,UAElG,IAAKyiE,EAAiBniE,KACvB,MAAM8oC,GAAcG,kCAExB,MAAMpyC,EAAasrE,EAAiBvrE,YAC9BkvE,EAAe,CACjB9lE,KAAMmiE,EAAiBniE,KACvB86B,aAAcmR,EACdp1C,WAAYA,GAAcsqE,GAAYxlE,gBACnC4jE,GAEP,aAAaz1E,KAAK61E,mBAAmBmG,EACxC,CACO,QACJX,EAAezC,aAClB,CACJ,CAMD,wBAAMtC,CAAmBpnD,GACrB,MAAMhuB,EAAgBguB,EAAQhuB,eAAiBlB,KAAKmyE,eAAe/4D,gBAEnE,GADApZ,KAAKiG,OAAOkV,MAAM,4BAA6Bja,GAC3ClB,KAAK66E,mBAAoB,CACzB,MAAMW,EAAgB,IACftsD,EACHrhB,SAAU7N,KAAKhB,OAAOg7C,KAAKnsC,SAC3BnM,OAAQwtB,EAAQxtB,QAAUgR,GAC1BskB,YAAa9H,EAAQ8H,aAAe,GACpC5F,UAAWlC,EAAQkC,WAAapxB,KAAKhB,OAAOg7C,KAAK5oB,UACjDlwB,cAAeA,EACfu6E,gBAAiB,IACVvsD,EAAQyX,qBACX1Q,CAACylD,IAAwC17E,KAAKs0C,MAElDqnC,UAAWzsD,EAAQ5G,QAAQuD,gBAC3B+mB,aAAc1jB,EAAQ0jB,eAAgB,GAE1C,OAAO5yC,KAAK66E,mBAAmBvE,mBAAmBkF,EACrD,CACD,GAAItsD,EAAQ8H,YACR,MAAMgoB,GAAcS,qCAExB,OAAO1/C,MAAMu2E,mBAAmBpnD,EACnC,CAMD,aAAM+sD,CAAQ/sD,GACV,GAAIlvB,KAAK66E,oBAAsB3rD,EAAQ5G,QAAQuD,gBAAiB,CAC5D,MAAMqwD,EAAiB,CACnBruE,SAAU7N,KAAKhB,OAAOg7C,KAAKnsC,SAC3B8tE,UAAWzsD,EAAQ5G,QAAQuD,gBAC3B3qB,cAAeguB,EAAQhuB,eACnBlB,KAAKmyE,eAAe/4D,uBAEtBpZ,KAAK66E,mBAAmBoB,QAAQC,EACzC,OACKl8E,KAAK+2E,gBAAgB3pD,cAAc8B,EAAQ5G,QAAS4G,EAAQhuB,cACrE,CAKD,oBAAM4mB,GACF,GAAI9nB,KAAK66E,mBAAoB,CACzB,MAAM35E,EAAgBlB,KAAKmyE,eAAe/4D,gBAC1C,OAAOpZ,KAAK66E,mBAAmB/yD,eAAe9nB,KAAKhB,OAAOg7C,KAAKnsC,SAAU3M,EAC5E,CACD,OAAOlB,KAAK+2E,gBAAgBjvD,gBAC/B,CAMD,wBAAMg0D,CAAmBT,GACrB,OAAO,IAAItwE,QAAQ,CAACC,EAASowC,KACzB,IAAI+gC,EAAQ,EACZ,MAAMrsD,EAAKssD,YAAY,KACnB,GAAIhjC,GACAA,GACA+iC,EAGA,OAFAE,cAAcvsD,QACdsrB,EAAO4D,GAAcM,oCAGzB,IACI,MAAMwb,EAAIugB,EAAejD,iBAGzB,OAFAiE,cAAcvsD,QACd9kB,EAAQ8vD,EAEX,CACD,MAAOh6D,GACH,OAAIA,aAAa4U,IACb5U,EAAE6U,YACEmpC,GAA4C5oC,UAEhDimE,KAGJE,cAAcvsD,QACdsrB,EAAOt6C,GAEV,GACFs4C,KAEV;yCChPL,MAAMkjC,WAA+Bl4C,GACjC,WAAAvkC,CAAYwkC,EAAek4C,GACvBx8E,MAAMskC,GACNrkC,KAAKu8E,iBAAmBA,CAC3B,CAKD,kBAAMlsC,CAAanhB,GACf,GAAIA,EAAQstD,WAAattD,EAAQyB,OAC7B,OAAO3wB,KAAKswC,oBAAoBphB,EAASlvB,KAAKoxB,WAElD,MAAOqrD,EAA4B9pC,SAA0B3yC,KAAK08E,8BAA8BxtD,EAASlvB,KAAKhB,OAAQgB,KAAKwlC,YAAaxlC,KAAKoxB,UAAWpxB,KAAK68B,aAAc78B,KAAKg5B,wBAChL,GAAIyjD,EAA4B,CAE5B,GAAI9pC,IAAqBt9B,GAAoC,CACzDrV,KAAKiG,OAAOjB,KAAK,gKAEjB,MAAM2mC,GAAqB,QACrB3rC,KAAKswC,oBAAoBphB,EAASlvB,KAAKoxB,UAAWua,EAC3D,CAED,OAAO8wC,CACV,CAEG,OAAOz8E,KAAKswC,oBAAoBphB,EAASlvB,KAAKoxB,UAErD,CAID,mCAAMsrD,CAA8BxtD,EAASlwB,EAAQwmC,EAAapU,EAAWyL,EAAc7D,GACvF,MAAMu9C,EAAsBv3E,EACtB29E,EAA+B39E,EACrC,IAEIiuC,EAFA0F,EAAmBt9B,GAGnBkhE,EAAoBnxC,mBACpBmxC,EAAoBpxC,oBACpB8H,EAAe,IAAI9B,GAAkBorC,EAAoBnxC,mBAAmB,SACtEmxC,EAAoBpxC,kBAAkB+H,kBAAkBD,IAElE,MAAMiB,EAAoBluC,KAAK48E,yBAAyBxrD,EAAWurD,EAA6BE,mBAAmB/sD,IAC/GymD,EAAoBrhD,YAAYrnB,SAAU,IAAI8Q,GAASuQ,EAAQxtB,QAAU,IAAKm7B,EAAc3N,EAAQhuB,eAOxG,OANIq1E,EAAoBnxC,mBACpBmxC,EAAoBpxC,mBACpB8H,SACMspC,EAAoBpxC,kBAAkBiI,iBAAiBH,GAG5DiB,EAKD4uC,GAAyB5uC,EAAkB3/B,UAAWgoE,EAAoBhyC,eAAe5Q,2BnKwP5D,MmKtP7BqF,GAAwB6Z,gBAAgBx9B,IACjC,CAAC,KAAMA,MAGd64B,EAAkBv/B,WAClBmuE,GAAyB5uC,EAAkBv/B,UAAU8+B,WAAY,KACjEkF,EAAmBt9B,GACnB2jB,GAAwB6Z,gBAAgBx9B,KAErC,OACGk2B,GAAgB4B,6BAA6B3H,EAAapU,EAAW,CACvE9I,QAAS,KACTjG,QAAS,KACTgI,YAAa6jB,EACb3jB,aAAc,KACd5a,YAAa,OACd,EAAMuf,GACTyjB,KAvBA3Z,GAAwB6Z,gBAAgBx9B,IACjC,CAAC,KAAMA,IAwBrB,CAID,wBAAAunE,CAAyBxrD,EAAWtB,EAAI3Q,EAAU0d,EAAc37B,GAC5D,MAAM0pB,EAAoB,CACtBte,cAAe8D,GAAUyB,aACzBtF,YAAa6kB,EAAUkM,gCAAgC3Y,gBACvDhX,eAAgB8F,GAAeE,aAC/B9F,SAAUiiB,EACVtjB,MAAO4kB,EAAUwD,OACjBzmB,OAAQwQ,GAASM,mBAAmBE,EAASY,YAE3C9R,EAAe4uB,EAAalN,wBAAwB/E,EAAmB1pB,GAC7E,GAAI+M,EAAa1J,OAAS,EACtB,OAAO,KAEN,GAAI0J,EAAa1J,OAAS,EAC3B,MAAM2U,GAAsB6jE,IAEhC,OAAO9uE,EAAa,EACvB,CAMD,yBAAMqiC,CAAoBphB,EAASkC,EAAWua,GAC1C,IAAIY,EACAC,EACJ,GAAIxsC,KAAKu8E,iBAAkB,CACvBv8E,KAAKiG,OAAOjB,KAAK,yCACjB,MAAMg4E,EAA8B,CAChC97E,cAAeguB,EAAQhuB,cACvBggB,SAAUlhB,KAAKhB,OAAOk2B,YAAY9D,UAAUwD,OAC5ClzB,OAAQwtB,EAAQxtB,OAChBivB,OAAQzB,EAAQyB,QAEpB6b,EAAeimC,KACf,MAAMwK,QAA+Bj9E,KAAKu8E,iBAAiBS,GAC3DzwC,EAAsB,CAClB4B,aAAc8uC,EAAuB5yD,YACrCikB,WAAY2uC,EAAuBC,iBACnCxuC,WAAYuuC,EAAuBE,iBACnCruE,WAAY8F,GAAqBC,OAExC,KACI,CACD,MAAM87B,EAAwB3wC,KAAK0mC,2BAA2BxX,GACxDkP,EAAWna,GAAUa,kBAAkBsM,EAAUwM,cAAe+S,GAChEC,QAAoB5wC,KAAK6wC,uBAAuB3hB,GAChDwN,EAAU18B,KAAKylC,4BACftC,EAAa,CACft1B,SAAU7N,KAAKhB,OAAOk2B,YAAYrnB,SAClCujB,UAAWlC,EAAQkC,UACnB1vB,OAAQwtB,EAAQxtB,OAChBivB,OAAQzB,EAAQyB,OAChBvB,qBAAsBF,EAAQE,qBAC9ByT,sBAAuB3T,EAAQ2T,sBAC/BC,mBAAoB5T,EAAQ4T,mBAC5BC,UAAW7T,EAAQ6T,UACnB1T,OAAQH,EAAQG,QAEpBrvB,KAAKiG,OAAOjB,KAAK,sCAAwCosB,EAAUwM,eACnE4O,EAAeimC,KACf,MAAMxsD,QAAiBjmB,KAAK4lC,2BAA2BxH,EAAUwS,EAAalU,EAASyG,EAAYjU,EAAQhuB,eAC3GqrC,EAAsBtmB,EAASyU,KAC/B6R,EAAoBthC,OAASgb,EAAShb,MACzC,CACD,MAAMslC,EAAkB,IAAIhF,GAAgBvrC,KAAKhB,OAAOk2B,YAAYrnB,SAAU7N,KAAK68B,aAAc78B,KAAKwlC,YAAaxlC,KAAKiG,OAAQjG,KAAKhB,OAAOomC,kBAAmBplC,KAAKhB,OAAOmmC,mBAC3KoL,EAAgB9E,sBAAsBc,EAAqBZ,GAE3D,aAD4B4E,EAAgBjE,0BAA0BC,EAAqBvsC,KAAKoxB,UAAWob,EAActd,EAE5H,CAKD,4BAAM2hB,CAAuB3hB,GACzB,MAAMtL,EAAa,IAAIpb,IACvB8qE,GAAoC1vD,EAAY5jB,KAAKhB,OAAOk2B,YAAYrnB,UACxE4lE,GAAkC7vD,EAAYsL,EAAQxtB,QAAQ,GAC9DiyE,GAAqC/vD,EAAYtQ,IACjDugE,GAAuCjwD,EAAY5jB,KAAKhB,OAAO44B,aAC/Dk8C,GAAgDlwD,EAAY5jB,KAAKhB,OAAOkmC,UAAUpQ,aAClFi/C,GAAsCnwD,GAClC5jB,KAAKg5B,wBACLg7C,GAA2CpwD,EAAY5jB,KAAKg5B,wBAIhEi7C,GAAyCrwD,EAFnBsL,EAAQhuB,eAC1BlB,KAAKhB,OAAO+lC,gBAAgB3rB,iBAE5BpZ,KAAKhB,OAAOimC,kBAAkBzQ,cAC9B0/C,GAAwCtwD,EAAY5jB,KAAKhB,OAAOimC,kBAAkBzQ,cAGtF,MAAMC,EAAkBvF,EAAQuF,iBAC5Bz0B,KAAKhB,OAAOimC,kBAAkBxQ,gBAUlC,OATIA,IACA0/C,GAA2CvwD,QAAkBosB,GAAmBvb,EAAgByc,UAAWlxC,KAAKhB,OAAOk2B,YAAYrnB,SAAUqhB,EAAQ4T,qBACrJsxC,GAA+CxwD,EAAY6Q,EAAgB0c,kBAE1Eh0B,GAAYC,WAAW8R,EAAQyB,SAC/B3wB,KAAKhB,OAAOk2B,YAAYoC,oBACrBt3B,KAAKhB,OAAOk2B,YAAYoC,mBAAmB/yB,OAAS,IACxD8vE,GAAkCzwD,EAAYsL,EAAQyB,OAAQ3wB,KAAKhB,OAAOk2B,YAAYoC,oBAEnFi9C,GAA0B3wD,EACpC;yCCxLL,MAAMw5D,WAAyBh5C,GAC3B,WAAAvkC,CAAYwkC,GACRtkC,MAAMskC,EACT,CAKD,kBAAMgM,CAAanhB,GAIf,GAHAlvB,KAAKmf,SAAW,IAAIR,GAASuQ,EAAQxtB,QAAU,IAE/C1B,KAAKkP,wBAA0BlP,KAAKwlC,YAAY3rB,WAAWqV,EAAQmuD,cAC/DnuD,EAAQstD,WAAattD,EAAQyB,OAC7B,OAAO3wB,KAAKswC,oBAAoBphB,EAASlvB,KAAKoxB,UAAWpxB,KAAKkP,mBAElE,IACI,aAAalP,KAAK08E,8BAA8BxtD,EACnD,CACD,MAAOpuB,GAEH,aAAad,KAAKswC,oBAAoBphB,EAASlvB,KAAKoxB,UAAWpxB,KAAKkP,kBACvE,CACJ,CASD,mCAAMwtE,CAA8BxtD,GAEhC,MAAMgf,EAAoBluC,KAAKs9E,+BAA+Bt9E,KAAKhB,OAAOk2B,YAAYrnB,SAAUqhB,GAChG,IAAKgf,EAID,MAFAluC,KAAKg5B,wBAAwB6Z,gBAAgBx9B,IAC7CrV,KAAKiG,OAAOjB,KAAK,kGACXkU,GAAsBw9D,IAE3B,GAAIoG,GAAyB5uC,EAAkB3/B,UAAWvO,KAAKhB,OAAOulC,cAAc5Q,2BAIrF,MAFA3zB,KAAKg5B,wBAAwB6Z,gBAAgBx9B,IAC7CrV,KAAKiG,OAAOjB,KAAK,uGAAuGhF,KAAKhB,OAAOulC,cAAc5Q,sCAC5Iza,GAAsBw9D,IAGhC,MAAMppC,EAAgBttC,KAAKu9E,2BAA2BrvC,EAAkB5hC,cAAe4iB,EAAQhuB,eAC/F,IAAIkgB,EACAmsB,EAAgB,KACpB,GAAID,EAAe,CACflsB,EAAgBo8D,GAA6BlwC,EAAcx/B,OAAQuzC,GAAchoC,cACjF,MAAM3M,EAAiB0U,EAAcC,KAAOD,EAAcE,IACpDwH,EAAc,CAChBxc,cAAeghC,EAAchhC,cAC7BC,YAAa+gC,EAAc/gC,YAC3B2U,SAAUosB,EAAc9gC,MACxBG,SAAUyD,GAAUyB,aACpBnF,eAAgBA,GAAkB0D,GAAUyB,cAEhD07B,EAAgBvtC,KAAK68B,aAAapR,WAAWzrB,KAAK68B,aAAa/K,mBAAmBhJ,GAAcoG,EAAQhuB,cAC3G,CAKD,OAHIlB,KAAKhB,OAAOg6B,wBACZh5B,KAAKhB,OAAOg6B,uBAAuBga,qBAEhCzH,GAAgB4B,6BAA6BntC,KAAKwlC,YAAaxlC,KAAKoxB,UAAW,CAClF9I,QAASilB,EACTljB,YAAa6jB,EACb7rB,QAASirB,EACT/iB,aAAc,KACd5a,YAAa,OACd,EAAMuf,EAAS9N,EACrB,CAMD,0BAAAm8D,CAA2BE,EAAiBv8E,GACxC,MAAMitB,EAAgB,CAClB7hB,cAAemxE,EACflxE,YAAavM,KAAKoxB,UAAUkM,gCAAgC3Y,gBAC5DhX,eAAgB8F,GAAeC,SAC/B7F,SAAU7N,KAAKhB,OAAOk2B,YAAYrnB,SAClCrB,MAAOxM,KAAKoxB,UAAUwD,QAEpBxG,EAAapuB,KAAK68B,aAAaxO,oBAAoBF,EAAejtB,GAExE,OAAIsB,OAAO2lB,OAAOiG,GAAY7pB,OAAS,EAC5B,KAEJ/B,OAAO2lB,OAAOiG,GAAY,EACpC,CAMD,8BAAAkvD,CAA+BzvE,EAAUqhB,GACrC,MAAMC,EAAaD,EAAQE,sBAAwBxa,GAAqBC,OAUlE+V,EAAoB,CACtBjd,eANmBwhB,GACnBA,EAAWvP,gBACPhL,GAAqBC,OAAO+K,cAC9BnM,GAAeG,8BACfH,GAAeE,aAGjB9F,WACAM,OAAQwQ,GAASM,mBAAmBjf,KAAKmf,SAASY,WAClDhR,UAAWogB,EACXtgB,MAAOqgB,EAAQG,OACfpgB,oBAAqBigB,EAAQjgB,oBAC7BC,kBAAmBlP,KAAKkP,mBAEtBjB,EAAejO,KAAK68B,aAAalN,wBAAwB/E,EAAmBsE,EAAQhuB,eACpFquB,EAAkBthB,EAAa1J,OACrC,GAAIgrB,EAAkB,EAClB,OAAO,KAEN,GAAIA,EAAkB,EACvB,MAAMrW,GAAsB6jE,IAEhC,OAAO9uE,EAAa,EACvB,CAMD,yBAAMqiC,CAAoBphB,EAASkC,EAAWliB,GAC1C,MAAMyhC,EAAwB3wC,KAAK0mC,2BAA2BxX,GACxDkP,EAAWna,GAAUa,kBAAkBsM,EAAUwM,cAAe+S,GAChEC,QAAoB5wC,KAAK6wC,uBAAuB3hB,GAChDwN,EAAU18B,KAAKylC,4BACftC,EAAa,CACft1B,SAAU7N,KAAKhB,OAAOk2B,YAAYrnB,SAClCujB,UAAWlC,EAAQkC,UACnB1vB,OAAQwtB,EAAQxtB,OAChBivB,OAAQzB,EAAQyB,OAChBvB,qBAAsBF,EAAQE,qBAC9ByT,sBAAuB3T,EAAQ2T,sBAC/BC,mBAAoB5T,EAAQ4T,mBAC5BC,UAAW7T,EAAQ6T,UACnB1T,OAAQH,EAAQG,QAEdmd,EAAeimC,KACfxsD,QAAiBjmB,KAAK4lC,2BAA2BxH,EAAUwS,EAAalU,EAASyG,EAAYjU,EAAQhuB,eACrGqvC,EAAkB,IAAIhF,GAAgBvrC,KAAKhB,OAAOk2B,YAAYrnB,SAAU7N,KAAK68B,aAAc78B,KAAKwlC,YAAaxlC,KAAKiG,OAAQjG,KAAKhB,OAAOomC,kBAAmBplC,KAAKhB,OAAOmmC,mBAC3KoL,EAAgB9E,sBAAsBxlB,EAASyU,MAE/C,aAD4B6V,EAAgBjE,0BAA0BrmB,EAASyU,KAAM16B,KAAKoxB,UAAWob,EAActd,OAASrtB,EAAWqN,EAE1I,CAKD,4BAAM2hC,CAAuB3hB,GACzB,MAAMtL,EAAa,IAAIpb,IACvB8qE,GAAoC1vD,EAAY5jB,KAAKhB,OAAOk2B,YAAYrnB,UACxE4lE,GAAkC7vD,EAAYsL,EAAQxtB,QACtDiyE,GAAqC/vD,EAAYtQ,IACjDsgE,GAAsChwD,GACtCiwD,GAAuCjwD,EAAY5jB,KAAKhB,OAAO44B,aAC/Dk8C,GAAgDlwD,EAAY5jB,KAAKhB,OAAOkmC,UAAUpQ,aAClFi/C,GAAsCnwD,GAClC5jB,KAAKg5B,wBACLg7C,GAA2CpwD,EAAY5jB,KAAKg5B,wBAIhEi7C,GAAyCrwD,EAFnBsL,EAAQhuB,eAC1BlB,KAAKhB,OAAO+lC,gBAAgB3rB,iBxIyFxC,SAA4BwK,EAAY85D,GACpC95D,EAAWhb,IDrOa,sBCqOY80E,EACxC,CwIzFQC,CAA2C/5D,EzI5I9B,gBC4NrB,SAAyBA,EAAYy5D,GACjCz5D,EAAWhb,ID/NO,YC+NYy0E,EAClC,CwIjFQO,CAAwCh6D,EAAYsL,EAAQmuD,cACxDr9E,KAAKhB,OAAOimC,kBAAkBzQ,cAC9B0/C,GAAwCtwD,EAAY5jB,KAAKhB,OAAOimC,kBAAkBzQ,cAEtF,MAAMC,EAAkBz0B,KAAKhB,OAAOimC,kBAAkBxQ,gBAUtD,OATIA,IACA0/C,GAA2CvwD,QAAkBosB,GAAmBvb,EAAgByc,UAAWlxC,KAAKhB,OAAOk2B,YAAYrnB,SAAUqhB,EAAQ4T,qBACrJsxC,GAA+CxwD,EAAY6Q,EAAgB0c,iBAE3EjiB,EAAQyB,QACP3wB,KAAKhB,OAAOk2B,YAAYoC,oBACrBt3B,KAAKhB,OAAOk2B,YAAYoC,mBAAmB/yB,OAAS,IACxD8vE,GAAkCzwD,EAAYsL,EAAQyB,OAAQ3wB,KAAKhB,OAAOk2B,YAAYoC,oBAEnFi9C,GAA0B3wD,EACpC;yCC1LL,MAAMi6D,WAAsC1I,GAoBxC,WAAAt1E,CAAYwkC,GACRtkC,MAAMskC,GACN,MAAMy5C,IAAyB99E,KAAKhB,OAAOg7C,KAAKxlB,aAC1CupD,IAA4B/9E,KAAKhB,OAAOg7C,KAAKvlB,gBAC7CupD,KAAyBh+E,KAAKhB,OAAOg7C,KAAK2F,mBAAmBxc,aAC7DnjC,KAAKhB,OAAOg7C,KAAK2F,mBAAmBC,mBACpC5/C,KAAKhB,OAAOg7C,KAAK2F,mBAAmBE,YAK1C,IAAI7/C,KAAKu8E,iBAAT,CAIA,GAAKuB,GAAwBC,GACxBA,GAA2BC,GAC3BF,GAAwBE,EACzB,MAAM9kE,GAAsB+kE,IAEhC,GAAIj+E,KAAKhB,OAAOg7C,KAAKxlB,aACjBx0B,KAAKw0B,aAAex0B,KAAKhB,OAAOg7C,KAAKxlB,kBAGzC,GAAIx0B,KAAKhB,OAAOg7C,KAAKvlB,gBACjBz0B,KAAKs3E,iCACDt3E,KAAKhB,OAAOg7C,KAAKvlB,oBAFzB,CAKA,IAAKupD,EACD,MAAM9kE,GAAsB+kE,IAG5Bj+E,KAAKy0B,gBAAoBz0B,KAAKhB,OAAOg7C,KAAK2F,kBACrCC,iBACC+xB,GAAgBM,oCAAoCjyE,KAAKhB,OAAOg7C,KAAK2F,kBAAkBC,iBAAkB5/C,KAAKhB,OAAOg7C,KAAK2F,kBAAkBE,WAAY7/C,KAAKhB,OAAOg7C,KAAK2F,kBAAkBG,KAC3L6xB,GAAgBE,gBAElB7xE,KAAKhB,OAAOg7C,KAAK2F,kBAAkBxc,WAAYnjC,KAAKhB,OAAOg7C,KAAK2F,kBAAkBE,WAAY7/C,KAAKhB,OAAOg7C,KAAK2F,kBAAkBG,KAEzI9/C,KAAKu8E,sBAAmB16E,CAZvB,CAfA,CA4BJ,CAOD,mBAAAq8E,CAAoBC,GAChBn+E,KAAKu8E,iBAAmB4B,CAC3B,CAID,oCAAMC,CAA+BlvD,GAGjC,IAAIuF,EAFJz0B,KAAKiG,OAAOjB,KAAK,wCAAyCkqB,EAAQhuB,eAG9DguB,EAAQuF,kBACRA,EAAkB,CACdyc,gBAAiBlB,GAAmB9gB,EAAQuF,gBAAiBz0B,KAAKhB,OAAOg7C,KAAKnsC,UAG9EsjC,cAAe/gC,KAGvB,MAAMiuE,QAAoBr+E,KAAK01E,sBAAsBxmD,GAE/CovD,EAAmB,IAClBD,EACH38E,OAAQ28E,EAAY38E,OAAO4c,OAAQlX,IAAWsL,GAAoBnN,SAAS6B,KAEzEquE,EAAe,IACdvmD,KACAovD,EACH7pD,mBAOEvT,EADY,IAAI+C,GAAUwxD,EAAarkD,WAClB1M,mBAAmBE,aAAa,GAC3D,GAAIpiB,OAAO2lB,OAAOtV,IAAuBtN,SAAS2b,GAC9C,MAAMhI,GAAsBqlE,IAMhC,MAAMC,EAAwBz8E,QAAQC,IAAqB,kBAC3D,IAAI4/B,EAC6B,2BAA7B6zC,EAAah2C,cAETmC,GADC6zC,EAAah2C,aAAe++C,EACpBA,EAGA/I,EAAah2C,aAG9B,MAAMD,EAA2B,CAC7BC,YAAamC,EACb1H,kBAAmBn4B,QAAQC,IAA+B,aAExDg3B,EAAyBh5B,KAAKg2E,iCAAiC98B,GAAsCu8B,EAAav0E,cAAeu0E,EAAa+G,WACpJ,IACI,MAAM7G,QAA4B31E,KAAK41E,gBAAgBH,EAAarkD,UAAWqkD,EAAav0E,cAAes+B,EAA0BtQ,EAAQoS,mBACvIm9C,QAA+Bz+E,KAAKk2E,8BAA8BP,EAAqBF,EAAav0E,cAAe,GAAI83B,GACvH0lD,EAAyB,IAAIpC,GAAuBmC,EAAwBz+E,KAAKu8E,kBAEvF,OADAv8E,KAAKiG,OAAOlB,QAAQ,mCAAoC0wE,EAAav0E,qBACxDw9E,EAAuBruC,aAAaolC,EACpD,CACD,MAAO30E,GAKH,MAJIA,aAAa4U,IACb5U,EAAEkV,iBAAiBy/D,EAAav0E,eAEpC83B,EAAuBid,mBAAmBn1C,GACpCA,CACT,CACJ,CAYD,4BAAM69E,CAAuBzvD,GACzBlvB,KAAKiG,OAAOjB,KAAK,gCAAiCkqB,EAAQhuB,eAC1D,MAAMu0E,EAAe,IACdvmD,WACOlvB,KAAK01E,sBAAsBxmD,IAEzC,IACI,MAAMymD,QAA4B31E,KAAK41E,gBAAgBH,EAAarkD,UAAWqkD,EAAav0E,mBAAeW,EAAWqtB,EAAQoS,mBACxHs9C,QAAyB5+E,KAAKk2E,8BAA8BP,EAAqBF,EAAav0E,cAAe,QAAIW,GACjHg9E,EAAY,IAAIzB,GAAiBwB,GAEvC,OADA5+E,KAAKiG,OAAOlB,QAAQ,8BAA+B0wE,EAAav0E,qBACnD29E,EAAUxuC,aAAaolC,EACvC,CACD,MAAO30E,GAIH,MAHIA,aAAa4U,IACb5U,EAAEkV,iBAAiBy/D,EAAav0E,eAE9BJ,CACT,CACJ;;;ACpLL,MAAMg+E,GACF,WAAAj/E,CAAYk/E,EAAqBC,EAAa/4E,GAC1CjG,KAAK++E,oBAAsBA,EAC3B/+E,KAAKg/E,YAAcA,EACnBh/E,KAAKiG,OAASA,CACjB,CACD,mCAAMg5E,CAA8BxkC,EAAYr2B,EAAKrlB,GACjD,OAAI07C,IAAe/B,GACR14C,KAAK++E,oBAAoB9qD,oBAAoB7P,EAAKrlB,GAGlDiB,KAAK++E,oBAAoB7qD,qBAAqB9P,EAAKrlB,EAEjE,CACD,6BAAMmgF,CAAwBzkC,EAAYr2B,EAAKrlB,GAE3C,IAAIknB,QAAiBjmB,KAAKi/E,8BAA8BxkC,EAAYr2B,EAAKrlB,GACrE,iBAAkBiB,KAAKg/E,cACvBh/E,KAAKg/E,YAAYG,cAAe,GAEpC,IAAIC,EAAe,EACnB,WAAap/E,KAAKg/E,YAAYK,cAAcp5D,EAAShb,OAAQm0E,EAAcp/E,KAAKiG,OAAQggB,EAASyW,QAAQ9pB,MACrGqT,QAAiBjmB,KAAKi/E,8BAA8BxkC,EAAYr2B,EAAKrlB,GACrEqgF,IAEJ,OAAOn5D,CACV,CACD,yBAAMgO,CAAoB7P,EAAKrlB,GAC3B,OAAOiB,KAAKk/E,wBAAwBxmC,GAAgBt0B,EAAKrlB,EAC5D,CACD,0BAAMm1B,CAAqB9P,EAAKrlB,GAC5B,OAAOiB,KAAKk/E,wBAAwBxmC,GAAiBt0B,EAAKrlB,EAC7D;yCCzBL,MAAMugF,GAC+B,WAD/BA,GAE0B,YAF1BA,GAG0B,YAH1BA,GAIiC,aAJjCA,GAKqC,YAE3C,MAAMC,GACF,WAAA1/E,CAAYoG,EAAQu5E,EAAal9C,EAAe6vC,EAAgBnyB,GAC5DhgD,KAAKiG,OAASA,EACdjG,KAAKw/E,YAAcA,EACnBx/E,KAAKsiC,cAAgBA,EACrBtiC,KAAKmyE,eAAiBA,EACtBnyE,KAAKggD,uBAAyBA,CACjC,CACD,iCAAMy/B,CAA4Bx5D,EAElCy5D,EAEAC,EAEAC,GACI,OAAO5/E,KAAK6/E,uBAAuB55D,EACtC,CACD,sBAAA45D,CAAuB55D,GACnB,IAAIwoB,EAAWJ,EACXpoB,EAASyU,KAAKpsB,aC7B1B,SAAmBwxE,GACf,GAA0B,iBAAfA,EACP,OAAO,EAEX,MAAMltB,EAAO,IAAIl4C,KAAKolE,GACtB,OAAQ5mB,MAAMtG,EAAK33B,YAAc23B,EAAKmtB,gBAAkBD,CAC5D,CDyBgBE,CAAU/5D,EAASyU,KAAKpsB,cACxB2X,EAASyU,KAAKpsB,WACV,IAAIoM,KAAKuL,EAASyU,KAAKpsB,YAAY2sB,UAAY,KAEvDoT,EAAYpoB,EAASyU,KAAKpsB,WAAamkE,KAEnCpkC,EAAY,OACZI,EAAYJ,EAAY,IAwBhC,MArB4B,CACxBpjC,OAAQgb,EAAShb,OAEjBkjC,aAAcloB,EAASyU,KAAKyT,aAC5BG,WAAYD,EACZjnC,MAAO6e,EAASyU,KAAKulD,SACrBnxE,WAAYmX,EAASyU,KAAK5rB,WAC1B4/B,WAAYD,EAEZttC,eAAgB8kB,EAASyU,KAAKv5B,gBAAkB8kB,EAASyU,KAAKx5B,cAC9DX,MAAsC,iBAAxB0lB,EAASyU,KAAKn6B,MACtB0lB,EAASyU,KAAKn6B,MACd0lB,EAASyU,KAAKn6B,OAAO2V,KAC3BzV,kBAAmBwlB,EAASyU,KAAK56B,UACG,iBAAxBmmB,EAASyU,KAAKn6B,MAChB0lB,EAASyU,KAAKj6B,kBACdwlB,EAASyU,KAAKn6B,OAAOT,SAC/BuB,YAAa4kB,EAASyU,KAAKr5B,YAC3BC,UAAW2kB,EAASyU,KAAKp5B,UACzBE,SAAUykB,EAASyU,KAAKl5B,SAG/B,CACD,qCAAM0+E,CAAgCC,EAAwBtD,EAAmBuD,EAAez0C,GAC5F,MAAM00C,EAAiBrgF,KAAKsgF,cAAcH,EAAuBF,SAAUpD,GAK3E,GAJIsD,EAAuBI,yBACvBvgF,KAAKiG,OAAOjB,KAAK,uEAAuEm7E,EAAuBxvD,UAC/G0vD,EAAeG,gBAAgBloC,IAA0D6nC,EAAuBI,wBAEhHJ,EAAuB7oD,oBAAoB/yB,OAAQ,CACnD,MAAM+yB,EAAqB6oD,EAAuB7oD,mBAAmBmW,WACrEztC,KAAKiG,OAAOjB,KAAK,oFAAoFsyB,KACrG+oD,EAAeG,gBAAgBloC,IAAyChhB,CAC3E,CACD,MAAMoF,EAAU2jD,EAAe3jD,QAC/BA,EAAQ9pB,IAA4BxC,GAAUsB,sBAC9C,MAAM+uE,EAAwB,CAAE/jD,WAC5Bl6B,OAAO2J,KAAKk0E,EAAeK,gBAAgBn8E,SAC3Ck8E,EAAsB/lD,KAClB2lD,EAAeM,+BAOvB,MAAMC,EAAsB5gF,KAAKggD,uBAC3BhgD,KAAKsiC,cACL,IAAIw8C,GAAsB9+E,KAAKsiC,cAAe+9C,EAAerB,YAAah/E,KAAKiG,QAC/EumC,EAAeimC,KACrB,IAAIxsD,EACJ,IAGQA,EADAo6D,EAAe5lC,aAAe/B,SAEpBkoC,EAAoB1sD,qBAAqBmsD,EAAeQ,aAAcJ,SAKtEG,EAAoB3sD,oBAAoBosD,EAAeQ,aAAcJ,EAEtF,CACD,MAAOlgF,GACH,MAAIA,aAAiBmV,GACXnV,EAGA2Y,GAAsB4nE,GAEnC,CACD,MAAMvwC,EAAkB,IAAIhF,GAAgBsxC,EAAkB/sD,GAAI9vB,KAAKw/E,YAAax/E,KAAKmyE,eAAgBnyE,KAAKiG,OAAQ,KAAM,MACtHsmC,QAA4BvsC,KAAKy/E,4BAA4Bx5D,EAAU26D,EAAqBP,EAAgBI,GAGlH,OAFAlwC,EAAgB9E,sBAAsBc,EAAqBZ,GAEpD4E,EAAgBjE,0BAA0BC,EAAqB6zC,EAAe5zC,EAAc2zC,EACtG,CACD,iDAAAY,CAAkDC,EAAuBC,EAAQC,GAC7E,OAAQF,GACJ,KAAKvoC,GAGD,OAFAz4C,KAAKiG,OAAOjB,KAAK,mCAAmCk8E,EAAc,QAAU,2DAErEA,EACD5B,GACAA,GACV,KAAK7mC,GAED,OADAz4C,KAAKiG,OAAOjB,KAAK,uEACVi8E,EACD3B,GACAA,GACV,KAAK7mC,GAED,OADAz4C,KAAKiG,OAAOjB,KAAK,qEACVs6E,GACX,QACI,MAAMjhC,GAA2BtB,IAE5C,EAELwiC,GAA0B4B,iCAAmC,CAACC,EAAuBp6E,EAAaq6E,EAAYp7E,KAC1G,IACI,OAAO,IAAIge,GAAUjd,GAAakd,SACrC,CACD,MAAO3jB,GAEH,MADA0F,EAAOjB,KAAK,sBAAsBq8E,kDAA2DD,yCACvF/iC,GAA2BV,GAA6CyjC,GACjF;;AEzJL,MAAME,GASF,cAAAC,CAAeC,EAAaC,GACxB,IAAKD,EACD,OAAOC,EAGX,IAAIC,EAAgB3mD,KAAKC,MAAgC,IAA1B24B,WAAW6tB,IAU1C,OALItoB,MAAMwoB,KAENA,EACI,IAAIhnE,KAAK8mE,GAAanT,WAAY,IAAI3zD,MAAO2zD,WAE9CtzC,KAAKywB,IAAIi2B,EAAcC,EACjC;yCCtBL,MAEMC,GAAyD,CAC3DlvE,GACAA,GACAA,GACAA,GACAA,GACAA,IAEJ,MAAMmvE,GACF,WAAA/hF,GACIG,KAAK6hF,oBAAsB,IAAIP,EAClC,CAKD,kDAAWQ,GACP,OAlBwC,GAmB3C,CACD,mBAAMzC,CAAcxjC,EAAgBujC,EAAcn5E,EAAQ87E,GACtD,GAAIJ,GAAuDp8E,SAASs2C,IAChEujC,EAvBiC,EAuBoB,CACrD,MAAM4C,EAAkBhiF,KAAK6hF,oBAAoBN,eAAeQ,EAAkBH,GAAkCE,yCAOpH,OANA77E,EAAOlB,QAAQ,uBAAuBi9E,uBAAqC5C,EAAe,YAEpF,IAAIr0E,QAASC,GAER0wB,WAAW1wB,EAASg3E,KAExB,CACV,CAED,OAAO,CACV;yCCnCL,MAAMC,GACF,WAAApiF,CAAY46C,EAAYrc,EAAU4gD,GAC9Bh/E,KAAKy6C,WAAaA,EAClBz6C,KAAKkiF,cAAgB9jD,EACrBp+B,KAAK08B,QAAU,GACf18B,KAAK0gF,eAAiB,GACtB1gF,KAAKwgF,gBAAkB,GACvBxgF,KAAKg/E,YACDA,GAAe,IAAI4C,EAC1B,CACD,UAAAf,GACI,MAAMj9D,EAAa,IAAIpb,IACnBxI,KAAKwgF,iBACLzL,GAAgDnxD,EAAY5jB,KAAKwgF,iBAErE,MAAM7vC,EAAwB4jC,GAA0B3wD,GACxD,OAAOK,GAAUa,kBAAkB9kB,KAAKkiF,cAAevxC,EAC1D,CACD,2BAAAgwC,GACI,MAAM/8D,EAAa,IAAIpb,IAIvB,OAHIxI,KAAK0gF,gBACL3L,GAAgDnxD,EAAY5jB,KAAK0gF,gBAE9DnM,GAA0B3wD,EACpC;yCClBL,MAAMu+D,WAAmB5C,GACrB,WAAA1/E,CAAYoG,EAAQu5E,EAAal9C,EAAe6vC,EAAgBnyB,EAAwBoiC,EAAkBC,GACtGtiF,MAAMkG,EAAQu5E,EAAal9C,EAAe6vC,EAAgBnyB,GAC1DhgD,KAAKoiF,iBAAmBA,EACxBpiF,KAAKqiF,eAAiBA,CACzB,CACD,8BAAOC,GAGH,MAAO,CAFkBvgF,QAAQC,IAAIu2C,IACdx2C,QAAQC,IAAIu2C,IAEtC,CACD,gBAAOgqC,CAAUt8E,EAAQu5E,EAAal9C,EAAe6vC,EAAgBnyB,GACjE,MAAOoiC,EAAkBC,GAAkBF,GAAWG,0BAEtD,IAAKF,IAAqBC,EAEtB,OADAp8E,EAAOjB,KAAK,sBAAsBwzC,kEAAsGD,YAAiEA,8CAClM,KAEX,MAAMiqC,EAA4BL,GAAWhB,iCAAiC5oC,GAA2D6pC,EAAkB5pC,GAAwCvyC,GAEnM,OADAA,EAAOjB,KAAK,kEAAkEwzC,sCAA0EgqC,eAAuChqC,wBACxL,IAAI2pC,GAAWl8E,EAAQu5E,EAAal9C,EAAe6vC,EAAgBnyB,EAAwBoiC,EAAkBC,EACvH,CACD,aAAA/B,CAAcL,EAAUpD,GACpB,MAAM3tD,EAAU,IAAI+yD,GAAiCvpC,GAAgB14C,KAAKoiF,kBAW1E,OAVAlzD,EAAQwN,QAAQ2b,IACZr4C,KAAKqiF,eACTnzD,EAAQsxD,gBAAgBloC,IA9BI,aAgC5BppB,EAAQsxD,gBAAgBloC,IACpB2nC,EACApD,EAAkBr+B,SAAW/F,KAC7BvpB,EAAQsxD,gBAAgBxgF,KAAK+gF,kDAAkDlE,EAAkBr+B,SAAWq+B,EAAkB/sD,IAG3HZ,CACV;yCCnCL,MACMuzD,GAAsC,wDACtCC,GAAiC,+BACjCC,GAAgC,CAClCC,MAAO,GAAG7gF,QAAQC,IAAiB,oDACnC6gF,MAAO,8BAELC,GAA2B,CAC7BF,MAAO,GAAG7gF,QAAQC,IAAkB,sDACpC6gF,MAAO,4BAKX,MAAME,WAAiBxD,GACnB,WAAA1/E,CAAYoG,EAAQu5E,EAAal9C,EAAe6vC,EAAgBnyB,EAAwBoiC,GACpFriF,MAAMkG,EAAQu5E,EAAal9C,EAAe6vC,EAAgBnyB,GAC1DhgD,KAAKoiF,iBAAmBA,CAC3B,CACD,8BAAOE,GACH,IAAIF,EAAmBrgF,QAAQC,IAAIu2C,IAC/ByqC,EAAejhF,QAAQC,IAAIu2C,IAE/B,IAAK6pC,IAAqBY,EAAc,CAEpC,MAAMC,EAAoBH,GAAyB/gF,QAAQ4yE,UAC3D,IAKIuO,EAAWD,EAAmBh0B,EAAUk0B,KAAOl0B,EAAUm0B,MACzDhB,EAAmBK,GACnBO,EAAeN,EAClB,CACD,MAAOx3E,GAKN,CACJ,CACD,MAAO,CAACk3E,EAAkBY,EAC7B,CACD,gBAAOT,CAAUt8E,EAAQu5E,EAAal9C,EAAe6vC,EAAgBnyB,EAAwB68B,GACzF,MAAOuF,EAAkBY,GAAgBD,GAAST,0BAElD,IAAKF,IAAqBY,EAEtB,OADA/8E,EAAOjB,KAAK,sBAAsBwzC,4FAA8HD,YAAmEA,wBAA2EC,mEACvS,KAGX,GAAIwqC,IAAiBN,GACjBz8E,EAAOjB,KAAK,sBAAsBwzC,gFAAkHA,gBAAkDiqC,gBAAiDjqC,4BAEtP,CAED,MAAMgqC,EAA4BO,GAAS5B,iCAAiC5oC,GAA2D6pC,EAAkB5pC,GAAsCvyC,GAE/Lu8E,EAA0Bt+E,SAAS,MAC7Bs+E,EAA0Bj+D,MAAM,GAAI,GAE1Cw+D,GAAS5B,iCAAiC5oC,GAAuDyqC,EAAcxqC,GAAsCvyC,GACrJA,EAAOjB,KAAK,kEAAkEwzC,sCAAwEgqC,eAAuChqC,uBAChM,CACD,GAAIqkC,EAAkBr+B,SAAW/F,GAC7B,MAAM4F,GAA2BjB,IAErC,OAAO,IAAI2lC,GAAS98E,EAAQu5E,EAAal9C,EAAe6vC,EAAgBnyB,EAAwBoiC,EACnG,CACD,aAAA9B,CAAcL,GACV,MAAM/wD,EAAU,IAAI+yD,GAAiCvpC,GAAgB14C,KAAKoiF,iBAAiBx+E,QAAQ,YAAa,cAOhH,OANAsrB,EAAQwN,QAAQ2b,IAA+C,OAC/DnpB,EAAQsxD,gBAAgBloC,IAzER,aA2EhBppB,EAAQsxD,gBAAgBloC,IACpB2nC,EAEG/wD,CACV,CACD,iCAAMuwD,CAA4B4D,EAAkB/gD,EAAe+9C,EAAgBI,GAC/E,IAAI6C,EACJ,GAAID,EAAiBp4E,SAAWwH,GAAyB,CACrD,MAAM8wE,EAAgBF,EAAiB3mD,QAAQ,oBAC/C,IAAK6mD,EACD,MAAMllC,GAA2BZ,IAErC,IAAK8lC,EAAch+E,SAAS,gBACxB,MAAM84C,GAA2BX,IAErC,MAAM8lC,EAAiBD,EAAc//E,MAAM,gBAAgB,GAE3D,IAAKm/E,GAA8BnrD,eAAez1B,QAAQ4yE,UACtD,MAAMt2B,GAA2BlB,IAGrC,MAAMsmC,EAAyBd,GAA8B5gF,QAAQ4yE,UAE/D+O,EAAW9pC,EAAK+pC,SAASH,GAC/B,IAAKE,EAASx/E,SAAS,QACnB,MAAMm6C,GAA2BxB,IAOrC,GAAI4mC,EAAyBC,IAAaF,EACtC,MAAMnlC,GAA2BvB,IAErC,IAAI8mC,EAaA91E,EAXJ,IACI81E,QAAuBC,EAASL,GAAgB1jE,IACnD,CACD,MAAOhf,GACH,MAAMu9C,GAA2Bd,GACpC,CAED,GAAIqmC,ElHe6B,KkHd7B,MAAMvlC,GAA2BrB,IAIrC,IACIlvC,EAASg2E,EAAaN,EAAgBluE,GACzC,CACD,MAAOxU,GACH,MAAMu9C,GAA2Bd,GACpC,CACD,MAAMwmC,EAAkB,SAASj2E,IACjC9N,KAAKiG,OAAOjB,KAAK,kEACjBq7E,EAAe3jD,QAAQ2b,IAAoD0rC,EAC3E,IACIT,QACUhhD,EAAcrO,oBAAoBosD,EAAeQ,aAAcJ,EAC5E,CACD,MAAOlgF,GACH,MAAIA,aAAiBmV,GACXnV,EAGA2Y,GAAsB4nE,GAEnC,CACJ,CACD,OAAO9gF,KAAK6/E,uBAAuByD,GAAiBD,EACvD;yCCnJL,MAAMW,WAAmBzE,GACrB,WAAA1/E,CAAYoG,EAAQu5E,EAAal9C,EAAe6vC,EAAgBnyB,EAAwBikC,GACpFlkF,MAAMkG,EAAQu5E,EAAal9C,EAAe6vC,EAAgBnyB,GAC1DhgD,KAAKikF,YAAcA,CACtB,CACD,8BAAO3B,GAEH,MAAO,CADavgF,QAAQC,IAAIu2C,IAEnC,CACD,gBAAOgqC,CAAUt8E,EAAQu5E,EAAal9C,EAAe6vC,EAAgBnyB,EAAwB68B,GACzF,MAAOoH,GAAeD,GAAW1B,0BAEjC,IAAK2B,EAED,OADAh+E,EAAOjB,KAAK,sBAAsBwzC,mDAAuFD,2CAClH,KAEX,MAAM2rC,EAAuBF,GAAW7C,iCAAiC5oC,GAAsD0rC,EAAazrC,GAAwCvyC,GAEpL,GADAA,EAAOjB,KAAK,iEAAiEwzC,sCAA0E0rC,eAAkC1rC,wBACrLqkC,EAAkBr+B,SAAW/F,GAC7B,MAAM4F,GAA2BhB,IAErC,OAAO,IAAI2mC,GAAW/9E,EAAQu5E,EAAal9C,EAAe6vC,EAAgBnyB,EAAwBikC,EACrG,CACD,aAAA3D,CAAcL,GACV,MAAM/wD,EAAU,IAAI+yD,GAAiCvpC,GAAiB14C,KAAKikF,aAI3E,OAHA/0D,EAAQwN,QAAQ2b,IAA+C,OAC/DnpB,EAAQwxD,eAAepoC,IACnB2nC,EACG/wD,CACV;yCCtCL,MAAMi1D,GACF,WAAAtkF,CAAYukF,EAAuBC,EAAuBC,GACtDtkF,KAAKokF,sBAAwBA,EAC7BpkF,KAAKqkF,sBAAwBA,EAC7BrkF,KAAKskF,wBAA0BA,CAClC,CAgBD,cAAA/C,CAAenC,GAEX,GAAqB,IAAjBA,EACA,OAAOp/E,KAAKokF,sBAIhB,OADyBrpD,KAAKgJ,IAAIhJ,KAAKwpD,IAAI,EAAGnF,EAAe,GAAKp/E,KAAKskF,wBAAyBtkF,KAAKqkF,sBAExG;yCC1BL,MAAMG,GAAiD,CACnD/xE,GACAA,GACAA,GACAA,IAQJ,MAAMgyE,GACF,WAAA5kF,GACIG,KAAK0kF,yBAA2B,IAAIP,GAAyBM,GAAgBE,2BAA4BF,GAAgBG,2BAA4BH,GAAgBI,6BACxK,CAKD,qCAAWF,GACP,OAb2B,GAc9B,CACD,qCAAWC,GACP,OAf2B,GAgB9B,CACD,uCAAWC,GACP,OAjB6B,GAkBhC,CACD,0CAAWC,GACP,OAnBgC,GAoBnC,CACD,gBAAI3F,CAAaz2E,GACb1I,KAAK+kF,cAAgBr8E,CACxB,CASD,mBAAM22E,CAAcxjC,EAAgBujC,EAAcn5E,GAgB9C,GAfIjG,KAAK+kF,gBACL/kF,KAAK+kF,eAAgB,EAErB/kF,KAAKglF,WACDnpC,IAAmBppC,GAzCC,EADK,IAqD5B+xE,GAA+Cj/E,SAASs2C,IACxDA,GAAkBppC,IACfopC,GAAkBppC,IAClB2sE,EAAep/E,KAAKglF,aACxB5F,EAAep/E,KAAKglF,WAAY,CAChC,MAAMhD,EAAkBnmC,IAAmBppC,GACrCgyE,GAAgBK,gCAChB9kF,KAAK0kF,yBAAyBnD,eAAenC,GAMnD,OALAn5E,EAAOlB,QAAQ,uBAAuBi9E,uBAAqC5C,EAAe,YAEpF,IAAIr0E,QAASC,GACR0wB,WAAW1wB,EAASg3E,KAExB,CACV,CAED,OAAO,CACV;yCCzEL,MAAMiD,GAAkB,kCAClBC,GAAwB,yBAAyBD,KAKvD,MAAME,WAAa5F,GAUf,WAAA1/E,CAAYoG,EAAQu5E,EAAal9C,EAAe6vC,EAAgBnyB,EAAwBoiC,GACpFriF,MAAMkG,EAAQu5E,EAAal9C,EAAe6vC,EAAgBnyB,GAC1DhgD,KAAKoiF,iBAAmBA,CAC3B,CAaD,gBAAOG,CAAUt8E,EAAQu5E,EAAal9C,EAAe6vC,EAAgBnyB,GACjE,IAAIwiC,EAYJ,OAXIzgF,QAAQC,IAAIu2C,KAEZtyC,EAAOjB,KAAK,2CAA2CuzC,UAAiFC,yBAAsDz2C,QAAQC,IAAIu2C,OAE1MiqC,EAA4B2C,GAAKhE,iCAAiC5oC,GAA2E,GAAGx2C,QAAQC,IAAIu2C,MAClH0sC,KAAmBzsC,GAAiCvyC,KAG9FA,EAAOjB,KAAK,qCAAqCuzC,+BAAsGC,mCACvJgqC,EAA4B0C,IAEzB,IAAIC,GAAKl/E,EAAQu5E,EAAal9C,EAAe6vC,EAAgBnyB,EAAwBwiC,EAC/F,CASD,aAAAlC,CAAcL,EAAUpD,GACpB,MAAM3tD,EAAU,IAAI+yD,GAAiCvpC,GAAgB14C,KAAKoiF,kBAY1E,OAXAlzD,EAAQwN,QAAQ2b,IAA+C,OAC/DnpB,EAAQsxD,gBAAgBloC,IAxDP,aA0DjBppB,EAAQsxD,gBAAgBloC,IACpB2nC,EACApD,EAAkBr+B,SAAW/F,KAC7BvpB,EAAQsxD,gBAAgBxgF,KAAK+gF,kDAAkDlE,EAAkBr+B,QAAQ,IACpGq+B,EAAkB/sD,IAG3BZ,EAAQ8vD,YAAc,IAAIyF,GACnBv1D,CACV;yCCnEL,MAAMk2D,WAAsB7F,GAWxB,WAAA1/E,CAAYoG,EAAQu5E,EAAal9C,EAAe6vC,EAAgBnyB,EAAwBoiC,EAAkBC,GACtGtiF,MAAMkG,EAAQu5E,EAAal9C,EAAe6vC,EAAgBnyB,GAC1DhgD,KAAKoiF,iBAAmBA,EACxBpiF,KAAKqiF,eAAiBA,CACzB,CAKD,8BAAOC,GAKH,MAAO,CAJkBvgF,QAAQC,IAAIu2C,IACdx2C,QAAQC,IAAIu2C,IACFx2C,QAAQC,IAAIu2C,IAGhD,CAWD,gBAAOgqC,CAAUt8E,EAAQu5E,EAAal9C,EAAe6vC,EAAgBnyB,EAAwB68B,GACzF,MAAOuF,EAAkBC,EAAgBgD,GAA4BD,GAAc9C,0BACnF,IAAKF,IAAqBC,IAAmBgD,EAEzC,OADAp/E,EAAOjB,KAAK,sBAAsBwzC,iEAAwGD,SAA8DA,WAAkEA,8CACnQ,KAEX,MAAMiqC,EAA4B4C,GAAcjE,iCAAiC5oC,GAA2D6pC,EAAkB5pC,GAA2CvyC,GAKzM,OAJAA,EAAOjB,KAAK,kEAAkEwzC,sCAA6EgqC,eAAuChqC,wBAC9LqkC,EAAkBr+B,SAAW/F,IAC7BxyC,EAAOhB,QAAQ,sBAAsBuzC,0NAElC,IAAI4sC,GAAcn/E,EAAQu5E,EAAal9C,EAAe6vC,EAAgBnyB,EAAwBoiC,EAAkBC,EAC1H,CAOD,aAAA/B,CAAcL,EAAUpD,GACpB,MAAM3tD,EAAU,IAAI+yD,GAAiCvpC,GAAgB14C,KAAKoiF,kBAW1E,OAVAlzD,EAAQwN,QAAQ2b,IACZr4C,KAAKqiF,eACTnzD,EAAQsxD,gBAAgBloC,IAhEO,qBAkE/BppB,EAAQsxD,gBAAgBloC,IACpB2nC,EACApD,EAAkBr+B,SAAW/F,KAC7BvpB,EAAQsxD,gBAAgBxgF,KAAK+gF,kDAAkDlE,EAAkBr+B,SAAWq+B,EAAkB/sD,IAG3HZ,CACV;yCCzEL,MACMo2D,GAA8D,qEAAqE9sC,MACzI,MAAM+sC,WAAwBhG,GAC1B,WAAA1/E,CAAYoG,EAAQu5E,EAAal9C,EAAe6vC,EAAgBnyB,EAAwBikC,EAAan2E,GACjG/N,MAAMkG,EAAQu5E,EAAal9C,EAAe6vC,EAAgBnyB,GAC1DhgD,KAAKikF,YAAcA,EACnBjkF,KAAK8N,OAASA,CACjB,CACD,8BAAOw0E,GAGH,MAAO,CAFavgF,QAAQC,IAAIu2C,IACjBx2C,QAAQC,IAAIu2C,IAE9B,CACD,gBAAOgqC,CAAUt8E,EAAQu5E,EAAal9C,EAAe6vC,EAAgBnyB,GACjE,MAAOikC,EAAan2E,GAAUy3E,GAAgBjD,0BAE9C,IAAK2B,IAAgBn2E,EAEjB,OADA7H,EAAOjB,KAAK,sBAAsBwzC,kEAA2GD,YAA8DA,8CACpM,KAEX,MAAM2rC,EAAuBqB,GAAgBpE,iCAAiC5oC,GAAsD0rC,EAAazrC,GAA6CvyC,GAE9L,OADAA,EAAOjB,KAAK,kEAAkEwzC,sCAA+E0rC,eAAkC1rC,wBACxL,IAAI+sC,GAAgBt/E,EAAQu5E,EAAal9C,EAAe6vC,EAAgBnyB,EAAwBikC,EAAan2E,EACvH,CACD,aAAAwyE,CAAcL,EAAUpD,GACpB,MAAM3tD,EAAU,IAAI+yD,GAAiCvpC,GAAgB14C,KAAKikF,aAQ1E,GAPA/0D,EAAQwN,QAAQ2b,IAA+C,OAC/DnpB,EAAQwN,QAAQ2b,IACZr4C,KAAK8N,OACTohB,EAAQsxD,gBAAgBloC,IA7BS,aA+BjCppB,EAAQsxD,gBAAgBloC,IACpB2nC,EACApD,EAAkBr+B,SAAW/F,GAC7BvpB,EAAQsxD,gBAAgBlB,IAAoFv9E,QAAQC,IAAIu2C,QAGvH,IAAIskC,EAAkBr+B,SACvB/F,GAMA,MAAM,IAAIh5C,MAAM6lF,IALhBp2D,EAAQsxD,gBAAgBxgF,KAAK+gF,kDAAkDlE,EAAkBr+B,QAAQ,GACzG,IACKq+B,EAAkB/sD,EAI1B,CAED,OAAOZ,CACV;yCCtCL,MAAMs2D,GACF,WAAA3lF,CAAYoG,EAAQu5E,EAAal9C,EAAe6vC,EAAgBnyB,GAC5DhgD,KAAKiG,OAASA,EACdjG,KAAKw/E,YAAcA,EACnBx/E,KAAKsiC,cAAgBA,EACrBtiC,KAAKmyE,eAAiBA,EACtBnyE,KAAKggD,uBAAyBA,CACjC,CACD,qCAAMylC,CAAgCtF,EAAwBtD,EAAmBuD,EAAez0C,GAK5F,OAJK65C,GAAsBE,iBACvBF,GAAsBE,eAClB1lF,KAAK2lF,4BAA4B3lF,KAAKiG,OAAQjG,KAAKw/E,YAAax/E,KAAKsiC,cAAetiC,KAAKmyE,eAAgBnyE,KAAKggD,uBAAwB68B,IAEvI2I,GAAsBE,eAAexF,gCAAgCC,EAAwBtD,EAAmBuD,EAAez0C,EACzI,CACD,iCAAAi6C,CAAkCC,GAC9B,OAAOrjF,OAAO2lB,OAAO09D,GAAsB7lE,MAAO8lE,QACfjkF,IAAxBikF,EAEd,CAKD,wBAAAC,GAaI,OAZAP,GAAsBnE,WAClBrhF,KAAK4lF,kCAAkCR,GAAc9C,2BAC/C9pC,GACAx4C,KAAK4lF,kCAAkCzD,GAAWG,2BAC9C9pC,GACAx4C,KAAK4lF,kCAAkCL,GAAgBjD,2BACnD9pC,GACAx4C,KAAK4lF,kCAAkC5B,GAAW1B,2BAC9C9pC,GACAx4C,KAAK4lF,kCAAkC7C,GAAST,2BAC5C9pC,GACAA,GACnBgtC,GAAsBnE,UAChC,CAKD,2BAAAsE,CAA4B1/E,EAAQu5E,EAAal9C,EAAe6vC,EAAgBnyB,EAAwB68B,GACpG,MAAM51D,EAASm+D,GAAc7C,UAAUt8E,EAAQu5E,EAAal9C,EAAe6vC,EAAgBnyB,EAAwB68B,IAC/GsF,GAAWI,UAAUt8E,EAAQu5E,EAAal9C,EAAe6vC,EAAgBnyB,IACzEulC,GAAgBhD,UAAUt8E,EAAQu5E,EAAal9C,EAAe6vC,EAAgBnyB,IAC9EgkC,GAAWzB,UAAUt8E,EAAQu5E,EAAal9C,EAAe6vC,EAAgBnyB,EAAwB68B,IACjGkG,GAASR,UAAUt8E,EAAQu5E,EAAal9C,EAAe6vC,EAAgBnyB,EAAwB68B,IAC/FsI,GAAK5C,UAAUt8E,EAAQu5E,EAAal9C,EAAe6vC,EAAgBnyB,GACvE,IAAK/4B,EACD,MAAMo3B,GAA2Bf,IAErC,OAAOr2B,CACV;yCC1DL,MAAM++D,GAAwC,CAACxtC,IAK/C,MAAMytC,GACF,WAAApmF,CAAYwkC,GAERrkC,KAAKhB,OnHiEb,UAA2Cs4B,mBAAEA,EAAkBonB,wBAAEA,EAAuB02B,OAAEA,IACtF,MAAMyH,EAAoB,IAAIv+B,GAAkBI,GAC1C1kC,EAAgBo7D,GAAQp7D,eAAiB+lC,GAC/C,IAAIzd,EASJ,OANIA,EADA8yC,GAAQ9yC,cACQ8yC,EAAO9yC,cAIP,IAAI2X,GAAWm7B,GAAQl7B,SAAUk7B,GAAQj7B,oBAEtD,CACH7iB,mBAAoBA,GAAsB,GAC1CulD,kBAAmBA,EACnBzH,OAAQ,CACJp7D,gBACAsoB,iBAEJ0d,uBAAwBo1B,GAAQp1B,yBAA0B,EAElE,CmHtFsBkmC,CAAkC7hD,GAAiB,CAAE,GACnErkC,KAAKiG,OAAS,IAAI8T,GAAO/Z,KAAKhB,OAAOo2E,OAAOp7D,cAAe/Z,GAAMsb,IACjE,MAAM4qE,EAA6B,CAC/Bp1D,mBAAoB3gB,GAAUG,mBAE7B01E,GAA2BzG,cAC5ByG,GAA2BzG,YAAc,IAAIz8B,GAAY/iD,KAAKiG,OAAQjG,KAAKhB,OAAO69E,kBAAkB/sD,GAAI3W,GAA+BgtE,IAE3InmF,KAAKsiC,cAAgBtiC,KAAKhB,OAAOo2E,OAAO9yC,cACxCtiC,KAAKmyE,eAAiB,IAAIxvB,GAC1B,MAAMyjC,EAAuB,CACzBjxD,aAAcpD,GACdf,iBAAkB,CAAConB,IACnBpxB,uBAAwB,GACxBkV,kBAAmB,IAEvBl8B,KAAKogF,cAAgB,IAAIxjD,GAAUwb,GAAwCp4C,KAAKsiC,cAAe2jD,GAA2BzG,YAAa4G,EAAsBpmF,KAAKiG,OAAQjG,KAAKmyE,eAAe/4D,qBAC9LvX,GAAW,GACX7B,KAAKqmF,2BAA6B,IAAI/J,GAAuB,CACzDpnD,YAAa,CACTrnB,SAAU7N,KAAKhB,OAAO69E,kBAAkB/sD,GACxCsB,UAAWpxB,KAAKogF,iBAGxBpgF,KAAKsmF,sBAAwB,IAAId,GAAsBxlF,KAAKiG,OAAQggF,GAA2BzG,YAAax/E,KAAKsiC,cAAetiC,KAAKmyE,eAAgBnyE,KAAKhB,OAAOghD,wBACjKhgD,KAAKiiD,UAAY,IAAIP,EACxB,CAMD,kBAAMrR,CAAak2C,GACf,IAAKA,EAA6BtG,SAC9B,MAAM/iE,GAA+BspE,IAEzC,MAAMrG,EAAyB,CAC3BvtC,aAAc2zC,EAA6B3zC,aAC3CqtC,SAAUsG,EAA6BtG,SAASr8E,QAAQ,YAAa,IACrElC,OAAQ,CACJ6kF,EAA6BtG,SAASr8E,QAAQ,YAAa,KAE/DwtB,UAAWpxB,KAAKogF,cAAcrvD,mBAC9B7vB,cAAelB,KAAKmyE,eAAe/4D,gBACnCuX,OAAQ41D,EAA6B51D,OACrC2G,mBAAoBt3B,KAAKhB,OAAOs4B,oBAEpC,GAAI6oD,EAAuBvtC,aACvB,OAAO5yC,KAAKymF,gCAAgCtG,EAAwBngF,KAAKhB,OAAO69E,kBAAmB78E,KAAKogF,eAE5G,MAAO3D,EAA4B9pC,SAA0B3yC,KAAKqmF,2BAA2B3J,8BAA8ByD,EAAwBngF,KAAKhB,OAAQgB,KAAKmyE,eAAgBnyE,KAAKogF,cAAe6F,GAA2BzG,aAKpO,GAAIW,EAAuBxvD,OAAQ,CAC/B,MAAM0wD,EAAarhF,KAAKsmF,sBAAsBP,2BAK9C,GAAItJ,GACAuJ,GAAsCzgF,SAAS87E,GAAa,CAC5D,MAAMd,EAAyBvgF,KAAKiiD,UAC/BN,OAAO86B,EAA2BpyD,aAClCojB,SAASn4B,IACd6qE,EAAuBI,uBACnBA,CACP,CACD,OAAOvgF,KAAKymF,gCAAgCtG,EAAwBngF,KAAKhB,OAAO69E,kBAAmB78E,KAAKogF,cAC3G,CACD,GAAI3D,EAA4B,CAE5B,GAAI9pC,IAAqBt9B,GAAoC,CACzDrV,KAAKiG,OAAOjB,KAAK,gKAEjB,MAAM2mC,GAAqB,QACrB3rC,KAAKymF,gCAAgCtG,EAAwBngF,KAAKhB,OAAO69E,kBAAmB78E,KAAKogF,cAAez0C,EACzH,CACD,OAAO8wC,CACV,CAEG,OAAOz8E,KAAKymF,gCAAgCtG,EAAwBngF,KAAKhB,OAAO69E,kBAAmB78E,KAAKogF,cAE/G,CAUD,qCAAMqG,CAAgCtG,EAAwBtD,EAAmBuD,EAAez0C,GAE5F,OAAO3rC,KAAKsmF,sBAAsBb,gCAAgCtF,EAAwBtD,EAAmBuD,EAAez0C,EAC/H,CAKD,wBAAAo6C,GACI,OAAQP,GAAsBnE,YAC1BrhF,KAAKsmF,sBAAsBP,0BAClC,ECxHE,SAASW,GAAoBC,EAAc3nF,GAE9C,MAAM4nF,EAAmB5nF,EAAO6nF,eAAiB9rD,KAAKwpD,IAAI,EAAGoC,GAEvDG,EAAe/rD,KAAKgJ,IAAI/kC,EAAO+nF,kBAAmBH,GCHrD,IAAmC7iD,EAAKynB,EDO3C,MAAO,CAAEw7B,eADcF,EAAe,GCNA/iD,EDM8B,ECNzBynB,EDM4Bs7B,EAAe,ECJtF/iD,EAAMhJ,KAAKksD,KAAKljD,GAChBynB,EAAMzwB,KAAK+I,MAAM0nB,GAIFzwB,KAAK+I,MAAM/I,KAAKimB,UAAYwK,EAAMznB,EAAM,IACvCA,GDApB,CEZO,SAASstB,GAAS3yC,GACrB,QAAyB,iBAAVA,GACD,OAAVA,GACCrX,MAAMC,QAAQoX,IACbA,aAAiB3a,QACjB2a,aAAiBhE,KAC3B,CCLO,SAASwsE,GAAQpmF,GACpB,GAAIuwD,GAASvwD,GAAI,CACb,MAAMqmF,EAA4B,iBAAXrmF,EAAEb,KACnBmnF,EAAkC,iBAAdtmF,EAAEhB,QAC5B,OAAOqnF,GAAWC,CACrB,CACD,OAAO,CACX,CCZA,IAAI38E,GAGJ,MAAM48E,GAAgK,mBAApD,QAApF58E,GAAoB,OAAf68E,iBAAsC,IAAfA,gBAAwB,EAASA,WAAWjnC,cAA2B,IAAP51C,QAAgB,EAASA,GAAG88E,YAChJD,WAAWjnC,OAAOknC,WAAW9sD,KAAK6sD,WAAWjnC,QAC7CmnC,EAMC,SAASD,KACZ,OAAOF,IACX,CCbA,IAAI58E,GAAIg9E,GAAIC,GAAIC,GAS2B,iBAATC,MAC8C,mBAA3D,OAATA,WAA0B,IAATA,UAAkB,EAASA,KAAKC,iBACmB,gCAA9C,QAA3Bp9E,GAAKm9E,KAAK/nF,mBAAgC,IAAP4K,QAAgB,EAASA,GAAGxK,OACa,8BAA9C,QAA3BwnF,GAAKG,KAAK/nF,mBAAgC,IAAP4nF,QAAgB,EAASA,GAAGxnF,OACpC,QAA3BynF,GAAKE,KAAK/nF,mBAAgC,IAAP6nF,IAAyBA,GAAGznF,MAInC,oBAAT6nF,WACD,IAAjBA,KAAKvsE,SACLusE,KAAKvsE,QAAQwsE,KAIY,oBAARC,KAA8BA,IAAIzsE,QAIvD,MAAM0sE,QAA2C,IAAvBX,WAAWvlF,SACxCoE,QAAQmhF,WAAWvlF,QAAQwZ,UAC3BpV,QAA+C,QAAtCwhF,GAAKL,WAAWvlF,QAAQ6iE,gBAA6B,IAAP+iB,QAAgB,EAASA,GAAGO,MCvBhF,SAASC,GAAmBC,EAAOjlF,GACtC,OAAOw4C,OAAOpU,KAAK6gD,GAAO36C,SAAStqC,EACvC,CAOO,SAASklF,GAAmB3/E,EAAOvF,GACtC,OAAOw4C,OAAOpU,KAAK7+B,EAAOvF,EAC9B,CChBA,MAAMmlF,GAAiB,WAEjBC,GAA4B,CAC9B,yBACA,gCACA,iBACA,8BACA,kBACA,oBACA,QACA,2BACA,cACA,mCACA,+BACA,+BACA,8BACA,gCACA,yBACA,iCACA,gCACA,SACA,SACA,kBACA,gBACA,aACA,iBACA,eACA,OACA,OACA,UACA,WACA,oBACA,gBACA,sBACA,gBACA,SACA,aACA,cACA,SACA,oBACA,aACA,oBAEEC,GAAgC,CAAC,eAIhC,MAAMC,GACT,WAAA5oF,EAAc6oF,6BAA8BC,EAAqB,GAAIC,iCAAkCC,EAAyB,IAAQ,IACpIF,EAAqBJ,GAA0B3sC,OAAO+sC,GACtDE,EAAyBL,GAA8B5sC,OAAOitC,GAC9D7oF,KAAK2oF,mBAAqB,IAAIjjF,IAAIijF,EAAmBllF,IAAK+vD,GAAMA,EAAE5zC,gBAClE5f,KAAK6oF,uBAAyB,IAAInjF,IAAImjF,EAAuBplF,IAAKunC,GAAMA,EAAEprB,eAC7E,CAMD,QAAAkpE,CAASxrE,GACL,MAAMyrE,EAAO,IAAIrjF,IACjB,OAAO9E,KAAKmL,UAAUuR,EAAK,CAAC7U,EAAKC,KAE7B,GAAIA,aAAiBjJ,MACjB,OAAO+C,OAAOC,OAAOD,OAAOC,OAAO,CAAA,EAAIiG,GAAQ,CAAEzI,KAAMyI,EAAMzI,KAAMH,QAAS4I,EAAM5I,UAEtF,GAAY,YAAR2I,EACA,OAAOzI,KAAKgpF,gBAAgBtgF,GAE3B,GAAY,QAARD,EACL,OAAOzI,KAAKipF,YAAYvgF,GAEvB,GAAY,UAARD,EACL,OAAOzI,KAAKkpF,cAAcxgF,GAEzB,GAAY,SAARD,GAIQ,aAARA,GAIQ,kBAARA,EAAJ,CAKA,GAAIpB,MAAMC,QAAQoB,IAAU2oD,GAAS3oD,GAAQ,CAC9C,GAAIqgF,EAAKppE,IAAIjX,GACT,MAAO,aAEXqgF,EAAK1iF,IAAIqC,EACZ,CACD,OAAOA,CADN,GAEF,EACN,CAMD,WAAAugF,CAAYvgF,GACR,GAAqB,iBAAVA,GAAgC,OAAVA,GAA4B,KAAVA,EAC/C,OAAOA,EAEX,MAAM0b,EAAM,IAAIw2B,IAAIlyC,GACpB,IAAK0b,EAAI5G,OACL,OAAO9U,EAEX,IAAK,MAAOD,KAAQ2b,EAAI+kE,aACfnpF,KAAK6oF,uBAAuBlpE,IAAIlX,EAAImX,gBACrCwE,EAAI+kE,aAAavgF,IAAIH,EAAK6/E,IAGlC,OAAOlkE,EAAIqpB,UACd,CACD,eAAAu7C,CAAgB1rE,GACZ,MAAM8rE,EAAY,CAAA,EAClB,IAAK,MAAM3gF,KAAOjG,OAAO2J,KAAKmR,GACtBtd,KAAK2oF,mBAAmBhpE,IAAIlX,EAAImX,eAChCwpE,EAAU3gF,GAAO6U,EAAI7U,GAGrB2gF,EAAU3gF,GAAO6/E,GAGzB,OAAOc,CACV,CACD,aAAAF,CAAcxgF,GACV,GAAqB,iBAAVA,GAAgC,OAAVA,EAC7B,OAAOA,EAEX,MAAM0gF,EAAY,CAAA,EAClB,IAAK,MAAMhuB,KAAK54D,OAAO2J,KAAKzD,GACpB1I,KAAK6oF,uBAAuBlpE,IAAIy7C,EAAEx7C,eAClCwpE,EAAUhuB,GAAK1yD,EAAM0yD,GAGrBguB,EAAUhuB,GAAKktB,GAGvB,OAAOc,CACV,EC9HE,MAAMC,WAAmB5pF,MAC5B,WAAAI,CAAYC,GACRC,MAAMD,GACNE,KAAKC,KAAO,YACf,ECbE,SAASu7B,GAAM8tD,EAAUvqF,GAC5B,IAAIyM,EACJ,MAAM+9E,YAAEA,EAAWC,cAAEA,GAAkBzqF,QAAyCA,EAAU,GAC1F,OCLG,SAAgC0qF,EAAc1qF,GACjD,MAAM2qF,mBAAEA,EAAkBH,YAAEA,EAAWC,cAAEA,GAAkBzqF,QAAyCA,EAAU,CAAA,EAC9G,OAAO,IAAIgM,QAAQ,CAACC,EAASowC,KACzB,SAASuuC,IACLvuC,EAAO,IAAIiuC,GAAWG,QAAqDA,EAAgB,8BAC9F,CACD,SAASI,IACLL,SAA0DA,EAAYM,oBAAoB,QAASC,EACtG,CACD,SAASA,IACLJ,SAAwEA,IACxEE,IACAD,GACH,CACD,GAAIJ,aAAiD,EAASA,EAAYQ,QACtE,OAAOJ,IAEX,IACIF,EAAcO,IACVJ,IACA5+E,EAAQg/E,IACRA,IACAJ,IACAxuC,EAAO4uC,IAEd,CACD,MAAO9+E,GACHkwC,EAAOlwC,EACV,CACDq+E,SAA0DA,EAAYU,iBAAiB,QAASH,IAExG,CD1BWI,CAAwBl/E,IAC3BQ,EAAQkwB,WAAW1wB,EAASs+E,IAC7B,CACCI,mBAAoB,IAAMS,aAAa3+E,GACvC+9E,cACAC,cAAeA,QAAqDA,EAf/C,0BAiB7B,CEZO,SAASY,GAAgBtpF,GAC5B,GAAIomF,GAAQpmF,GACR,OAAOA,EAAEhB,QAER,CACD,IAAIuqF,EACJ,IAEQA,EADa,iBAANvpF,GAAkBA,EACXF,KAAKmL,UAAUjL,GAGf4yD,OAAO5yD,EAE5B,CACD,MAAOoK,GACHm/E,EAAc,6BACjB,CACD,MAAO,iBAAiBA,GAC3B,CACL,CCtBO,SAASC,GAAUp9B,GACtB,OAAO,MAAOA,CAClB,CAsBO,SAASq9B,GAAkBr9B,EAAOs9B,GACrC,OAAQF,GAAUp9B,IAA2B,iBAAVA,GAAsBs9B,KAAYt9B,CACzE,CCyBO,SAASg6B,GAAQpmF,GACpB,OAAO2pF,GAAmB3pF,EAC9B,CAoCO,MAAM4pF,GAASC,GAIT1C,GAAa0C,GCxF1B,MAAM1kF,GAAS0B,GAAiB,iBAUzB,SAASijF,GAAqBlpF,EAAQmpF,EAAWlpF,GACpD,MAAMpB,EAAST,IACXmG,GAAO4B,SAAS7C,KAAKlF,GACd,IAAI2B,GAA4B,CACnCC,OAAQ2F,MAAMC,QAAQ5F,GAAUA,EAAS,CAACA,GAC1CC,kBACA7B,aAGR,IAAK+qF,EACD,MAAMtqF,EAAM,eAEhB,IAAKsqF,EAAUt8E,UACX,MAAMhO,EAAM,yCAEhB,IAAKsqF,EAAUxgE,YACX,MAAM9pB,EAAM,0CAEpB,CAOO,SAASuqF,GAAiB/rF,GAC7B,IAAIgoB,EAAgBhoB,GAASgoB,cAI7B,OAHKA,GAAiBkhE,KAClBlhE,EAAgBhlB,QAAQC,IAAI+oF,sBAEzBhkE,GAAiBroB,EAC5B,CAKO,SAASssF,GAAa9pE,EAAU4L,GAInC,OAHKA,IACDA,EAAOpuB,IAEP,IAAIqF,OAAO,GAAGmd,QAAe9c,KAAK0oB,GAC3BA,EAEPA,EAAK5oB,SAAS,KACP4oB,EAAO5L,EAGP,GAAG4L,KAAQ5L,GAE1B,CAQO,SAAS+pE,GAAoB/pE,EAAU6F,EAAemkE,GACzD,MAAkB,SAAbhqE,GAAuB6F,GAAkBmkE,EACnC,CAACnkE,GAEL,EACX,CAMO,MAAMokE,GAAwB,CAACvjF,EAAY+sE,GAAW+V,GAAS,OAAS,aAAc,CAACplF,EAAOxF,EAAS2a,KAC1G,IAAIA,EAGJ,OAAQnV,GACJ,KAAK8lF,GAAoB3rF,MAErB,YADAmI,EAAW5C,KAAK,QAAQ2vE,eAAsB70E,KAElD,KAAKsrF,GAAoBnxE,KAErB,YADArS,EAAW5C,KAAK,QAAQ2vE,sBAA6B70E,KAEzD,KAAKsrF,GAAoBnwE,QAErB,YADArT,EAAW5C,KAAK,QAAQ2vE,yBAAgC70E,KAE5D,KAAKsrF,GAAoBtwE,QAErB,YADAlT,EAAW5C,KAAK,QAAQ2vE,iBAAwB70E,OAOrD,SAASurF,GAAgBxlF,GAC5B,OAAQA,GACJ,IAAK,QACD,OAAOulF,GAAoB3rF,MAC/B,IAAK,OAML,QAEI,OAAO2rF,GAAoBnxE,KAN/B,IAAK,UACD,OAAOmxE,GAAoBnwE,QAC/B,IAAK,UACD,OAAOmwE,GAAoBtwE,QAKvC,CAcO,SAASwwE,GAAgB5pF,EAAQnB,EAAOoB,GAC3C,GAAmB,cAAfpB,EAAMN,MACS,oBAAfM,EAAMN,MACS,qBAAfM,EAAMN,KAA6B,CACnC,MAAMsrF,EAAYhrF,EAClB,OAAQgrF,EAAU51E,WACd,IAAK,6BAED,OADA1P,GAAOjB,KAAKuC,GAAY7F,EAAQnB,EAAMT,UAC/B,IAAIF,GAA2BW,EAAMT,SAChD,IAAK,gCACD,OAAO,IAAIupF,GAAW,sDAC1B,IAAK,mBACL,IAAK,uBACL,IAAK,iBACDpjF,GAAOjB,KAAKuC,GAAY7F,EAAQ,qCAAqC6pF,EAAU51E,cAC/E,MACJ,QACI1P,GAAOjB,KAAKuC,GAAY7F,EAAQ,4BAA4BnB,EAAMT,YAG7E,CACD,MAAmB,6BAAfS,EAAMN,MACS,kCAAfM,EAAMN,MACS,eAAfM,EAAMN,MACS,wBAAfM,EAAMN,KACCM,EAEQ,oBAAfA,EAAMN,MACNgG,GAAOjB,KAAKuC,GAAY7F,EAAQ,iCAAiCnB,EAAMT,6BAA6BS,EAAMH,eACnGG,GAEJ,IAAIkB,GAA4B,CAAEC,SAAQC,kBAAiB7B,QAASS,EAAMT,SACrF,CCtKO,MAAM0rF,GAAc,ICgEpB,SAASC,GAAgBC,EAAcC,GAC1C,IAAIlhF,EAAIg9E,EACR,MAAMrrC,EAAgBsvC,EAAatvC,cAGnC,GAAoC,SAAhCsvC,EAAax8D,QAAQ4rB,OACrB,OAAOt4C,OAAOC,OAAOD,OAAOC,OAAO,CAAE,EAAE25C,GAAgB,CAAE1hB,KAAMgxD,EAAahvC,aAEhF,MAAMkvC,EAAaD,GAAgBA,EAAaC,WAC1CC,EAAa1lF,QAAQylF,aAA+C,EAASA,EAAWE,UACxFC,EAAuBH,aAA+C,EAASA,EAAWjmD,KAAK1lC,KAErG,GAA6B,WAAzB8rF,EACA,OAAOvpF,OAAOC,OAAOD,OAAOC,OAAO,CAAA,EAAI25C,GAAgB,CAAE4vC,SAAUN,EAAaM,SAAUC,mBAAoBP,EAAaO,qBAE/H,MAAMC,EAA4C,cAAzBH,GACrBH,EAAWjmD,KAAKumD,iBAChB,GACEC,EAAqB3pF,OAAO2J,KAAK+/E,GAAiB//C,KAAMivB,GAA4C,KAAtC8wB,EAAgB9wB,GAAGgxB,gBACvF,GAA6B,aAAzBL,GAAuCI,EAAoB,CAC3D,MAAME,EAAmD,QAAlC5hF,EAAKihF,EAAahvC,kBAA+B,IAAPjyC,EAAgBA,EAAK,GACtF,IAAK,MAAMhC,KAAOjG,OAAO2J,KAAK+/E,GACtBA,EAAgBzjF,GAAK2jF,iBACrBC,EAAc5jF,GAA0C,QAAlCg/E,EAAKiE,EAAahvC,kBAA+B,IAAP+qC,OAAgB,EAASA,EAAGh/E,IAGpG,GAAI2zC,EACA,IAAK,MAAM3zC,KAAOjG,OAAO2J,KAAKiwC,GAC1BiwC,EAAc5jF,GAAO2zC,EAAc3zC,GAG3C,OAAOojF,GACFH,EAAahvC,YACbN,GACsD,IAAvD55C,OAAO8pF,oBAAoBJ,GAAiB3nF,OAE1C8nF,EADA,IAET,CACD,OAzDJ,SAAgDE,GAC5C,MAAMC,EAAyBhqF,OAAOC,OAAOD,OAAOC,OAAO,GAAI8pF,EAAe7vD,SAAU6vD,EAAe7xD,MACvG,OAAI6xD,EAAeE,iBAC+C,IAA9DjqF,OAAO8pF,oBAAoBE,GAAwBjoF,OAC5CgoF,EAAeG,eAAiB,CAAEhyD,KAAM,MAAS,KAGjD6xD,EAAeG,eAChBlqF,OAAOC,OAAOD,OAAOC,OAAO,CAAE,EAAE8pF,EAAe7vD,SAAU,CAAEhC,KAAM6xD,EAAe7xD,OAAU8xD,CAExG,CA+CWG,CAAuC,CAC1CjyD,KAAMgxD,EAAahvC,WACnBhgB,QAAS0f,EACTqwC,gBAAiBZ,EACjBa,gBAvGwBhkF,EAuGQgjF,EAAahvC,WAvGdkwC,EAuG0Bb,EAtGlC,cAAnBa,GACe,eAAnBA,IACkB,iBAAVlkF,GACa,iBAAVA,GACU,kBAAVA,GAEH,QADHkkF,aAAuD,EAASA,EAAetnE,MAAM,qEAHzF,MAKG5c,MARL,IAAyBA,EAAOkkF,CAyGvC,CCsxBO,MAAMC,GAYC,WAZDA,GAaD,SAbCA,GAcD,SCt3BL,MAAMxD,WAAmB5pF,MAC5B,WAAAI,CAAYC,GACRC,MAAMD,GACNE,KAAKC,KAAO,YACf,ECjCL,SAAS6sF,GAAc7sF,GACnB,OAAOA,EAAK2f,aAChB,CAMA,MAAMmtE,GACF,WAAAltF,CAAYmtF,GAER,GADAhtF,KAAKitF,YAAc,IAAIzkF,IACnBwkF,EACA,IAAK,MAAME,KAAc1qF,OAAO2J,KAAK6gF,GACjChtF,KAAK4I,IAAIskF,EAAYF,EAAWE,GAG3C,CAOD,GAAAtkF,CAAI3I,EAAMyI,GACN1I,KAAKitF,YAAYrkF,IAAIkkF,GAAc7sF,GAAO,CAAEA,OAAMyI,MAAOgrD,OAAOhrD,GAAO/E,QAC1E,CAMD,GAAAmF,CAAI7I,GACA,IAAIwK,EACJ,OAA4D,QAApDA,EAAKzK,KAAKitF,YAAYnkF,IAAIgkF,GAAc7sF,WAA2B,IAAPwK,OAAgB,EAASA,EAAG/B,KACnG,CAKD,GAAAiX,CAAI1f,GACA,OAAOD,KAAKitF,YAAYttE,IAAImtE,GAAc7sF,GAC7C,CAKD,OAAOA,GACHD,KAAKitF,YAAYjkF,OAAO8jF,GAAc7sF,GACzC,CAID,MAAAktF,CAAOpuF,EAAU,IACb,MAAM8D,EAAS,CAAA,EACf,GAAI9D,EAAQquF,aACR,IAAK,MAAMhvE,KAASpe,KAAKitF,YAAY9kE,SACjCtlB,EAAOub,EAAMne,MAAQme,EAAM1V,WAI/B,IAAK,MAAO2kF,EAAgBjvE,KAAUpe,KAAKitF,YACvCpqF,EAAOwqF,GAAkBjvE,EAAM1V,MAGvC,OAAO7F,CACV,CAID,QAAA4qC,GACI,OAAO7sC,KAAKmL,UAAU/L,KAAKmtF,OAAO,CAAEC,cAAc,IACrD,CAID,CAACplF,OAAOslF,YACJ,OAzER,UAAyB7pF,GACrB,IAAK,MAAM2a,KAAS3a,EAAI0kB,cACd,CAAC/J,EAAMne,KAAMme,EAAM1V,MAEjC,CAqEe6kF,CAAevtF,KAAKitF,YAC9B,EAME,SAASO,GAAkBR,GAC9B,OAAO,IAAID,GAAgBC,EAC/B,CCnFA,MAAMS,GACF,WAAA5tF,CAAYd,GACR,IAAI0L,EAAIg9E,EAAIC,EAAIC,EAAI+F,EAAIC,EAAIC,EAC5B5tF,KAAKokB,IAAMrlB,EAAQqlB,IACnBpkB,KAAK06B,KAAO37B,EAAQ27B,KACpB16B,KAAK08B,QAAqC,QAA1BjyB,EAAK1L,EAAQ29B,eAA4B,IAAPjyB,EAAgBA,EAAK+iF,KACvExtF,KAAK86C,OAAmC,QAAzB2sC,EAAK1oF,EAAQ+7C,cAA2B,IAAP2sC,EAAgBA,EAAK,MACrEznF,KAAKo6C,QAAqC,QAA1BstC,EAAK3oF,EAAQq7C,eAA4B,IAAPstC,EAAgBA,EAAK,EACvE1nF,KAAK6tF,cAAgB9uF,EAAQ8uF,cAC7B7tF,KAAK8tF,SAAW/uF,EAAQ+uF,SACxB9tF,KAAK+tF,iBAAuD,QAAnCpG,EAAK5oF,EAAQgvF,wBAAqC,IAAPpG,GAAgBA,EACpF3nF,KAAKguF,cAAgBjvF,EAAQivF,cAC7BhuF,KAAKiuF,0BAA4BlvF,EAAQkvF,0BACzCjuF,KAAKkuF,gBAAqD,QAAlCR,EAAK3uF,EAAQmvF,uBAAoC,IAAPR,GAAgBA,EAClF1tF,KAAKupF,YAAcxqF,EAAQwqF,YAC3BvpF,KAAKmuF,iBAAmBpvF,EAAQovF,iBAChCnuF,KAAKouF,mBAAqBrvF,EAAQqvF,mBAClCpuF,KAAKmmC,UAAYpnC,EAAQonC,WAAaohD,KACtCvnF,KAAKquF,wBAAqE,QAA1CV,EAAK5uF,EAAQsvF,+BAA4C,IAAPV,GAAgBA,EAClG3tF,KAAKsuF,qBAA+D,QAAvCV,EAAK7uF,EAAQuvF,4BAAyC,IAAPV,GAAgBA,EAC5F5tF,KAAKuuF,iBAAmBxvF,EAAQwvF,iBAChCvuF,KAAKwuF,YAAczvF,EAAQyvF,WAC9B,EAOE,SAASC,GAAsB1vF,GAClC,OAAO,IAAI0uF,GAAoB1uF,EACnC,CCjCA,MAAM2vF,GAAkB,IAAIhpF,IAAI,CAAC,cAAe,YAAa,QAAS,SAMtE,MAAMipF,GACF,WAAA9uF,CAAY+uF,GACR,IAAInkF,EACJzK,KAAK6uF,UAAY,GACjB7uF,KAAK6uF,UAA6F,QAAhFpkF,EAAKmkF,aAA2C,EAASA,EAASrqE,MAAM,UAAuB,IAAP9Z,EAAgBA,EAAK,GAC/HzK,KAAK8uF,sBAAmBjtF,CAC3B,CACD,SAAAktF,CAAUC,EAAQjwF,EAAU,IACxB,GAAIA,EAAQkwF,OAASlwF,EAAQmwF,WACzB,MAAM,IAAIzvF,MAAM,sDAEpB,GAAIV,EAAQkwF,QAAUP,GAAgB/uE,IAAI5gB,EAAQkwF,OAC9C,MAAM,IAAIxvF,MAAM,uBAAuBV,EAAQkwF,SAEnD,GAAIlwF,EAAQmwF,aAAeR,GAAgB/uE,IAAI5gB,EAAQmwF,YACnD,MAAM,IAAIzvF,MAAM,4BAA4BV,EAAQmwF,cAExDlvF,KAAK6uF,UAAU/qF,KAAK,CAChBkrF,SACAjwF,YAEJiB,KAAK8uF,sBAAmBjtF,CAC3B,CACD,YAAAstF,CAAapwF,GACT,MAAMqwF,EAAkB,GAYxB,OAXApvF,KAAK6uF,UAAY7uF,KAAK6uF,UAAUvwE,OAAQ+wE,KAC/BtwF,EAAQkB,MAAQovF,EAAiBL,OAAO/uF,OAASlB,EAAQkB,MACzDlB,EAAQkwF,OAASI,EAAiBtwF,QAAQkwF,QAAUlwF,EAAQkwF,SAC7DG,EAAgBtrF,KAAKurF,EAAiBL,SAC/B,IAMfhvF,KAAK8uF,sBAAmBjtF,EACjButF,CACV,CACD,WAAAE,CAAYC,EAAYrgE,GAOpB,OANiBlvB,KAAKwvF,qBACIC,YAAY,CAAC/gE,EAAMsgE,IACjC9W,GACG8W,EAAOM,YAAYpX,EAAKxpD,GAEnCwpD,GAAQqX,EAAWD,YAAYpX,GAC5BwX,CAASxgE,EACnB,CACD,kBAAAsgE,GAII,OAHKxvF,KAAK8uF,mBACN9uF,KAAK8uF,iBAAmB9uF,KAAK2vF,iBAE1B3vF,KAAK8uF,gBACf,CACD,KAAAv0E,GACI,OAAO,IAAIo0E,GAAa3uF,KAAK6uF,UAChC,CACD,aAAOjmC,GACH,OAAO,IAAI+lC,EACd,CACD,aAAAgB,GAoCI,MAAM9sF,EAAS,GAET+sF,EAAY,IAAIpnF,IACtB,SAASqnF,EAAY5vF,GACjB,MAAO,CACHA,OACA2uF,SAAU,IAAIlpF,IACdoqF,QAAQ,EACRC,kBAAkB,EAEzB,CAED,MAAMC,EAAiBH,EAAY,aAC7BI,EAAUJ,EAAY,QACtBK,EAAmBL,EAAY,eAC/BM,EAAaN,EAAY,SACzBO,EAAYP,EAAY,QAExBQ,EAAgB,CAACL,EAAgBC,EAASC,EAAkBC,EAAYC,GAE9E,SAASE,EAASrB,GACd,MAAc,UAAVA,EACOkB,EAEQ,cAAVlB,EACEe,EAEQ,gBAAVf,EACEiB,EAEQ,SAAVjB,EACEmB,EAGAH,CAEd,CAED,IAAK,MAAMM,KAAcvwF,KAAK6uF,UAAW,CACrC,MAAMG,EAASuB,EAAWvB,OACpBjwF,EAAUwxF,EAAWxxF,QACrByxF,EAAaxB,EAAO/uF,KAC1B,GAAI2vF,EAAUjwE,IAAI6wE,GACd,MAAM,IAAI/wF,MAAM,kDAEpB,MAAMyoF,EAAO,CACT8G,SACAyB,UAAW,IAAI/qF,IACfgrF,WAAY,IAAIhrF,KAEhB3G,EAAQmwF,aACRhH,EAAKgH,WAAaoB,EAASvxF,EAAQmwF,YACnChH,EAAKgH,WAAWa,kBAAmB,GAEvCH,EAAUhnF,IAAI4nF,EAAYtI,GACZoI,EAASvxF,EAAQkwF,OACzBL,SAASvoF,IAAI6hF,EACtB,CAED,IAAK,MAAMqI,KAAcvwF,KAAK6uF,UAAW,CACrC,MAAMG,OAAEA,EAAMjwF,QAAEA,GAAYwxF,EACtBC,EAAaxB,EAAO/uF,KACpBioF,EAAO0H,EAAU9mF,IAAI0nF,GAC3B,IAAKtI,EACD,MAAM,IAAIzoF,MAAM,2BAA2B+wF,KAE/C,GAAIzxF,EAAQ4xF,cACR,IAAK,MAAMC,KAAmB7xF,EAAQ4xF,cAAe,CACjD,MAAME,EAAYjB,EAAU9mF,IAAI8nF,GAC5BC,IAGA3I,EAAKuI,UAAUpqF,IAAIwqF,GACnBA,EAAUH,WAAWrqF,IAAI6hF,GAEhC,CAEL,GAAInpF,EAAQ+xF,eACR,IAAK,MAAMC,KAAoBhyF,EAAQ+xF,eAAgB,CACnD,MAAME,EAAapB,EAAU9mF,IAAIioF,GAC7BC,IAGAA,EAAWP,UAAUpqF,IAAI6hF,GACzBA,EAAKwI,WAAWrqF,IAAI2qF,GAE3B,CAER,CACD,SAASC,EAAUhC,GACfA,EAAMa,QAAS,EAEf,IAAK,MAAM5H,KAAQ+G,EAAML,SACrB,KAAI1G,EAAKgH,YAAgBhH,EAAKgH,WAAWY,SAAU5H,EAAKgH,WAAWN,SAAS9uE,OAOhD,IAAxBooE,EAAKuI,UAAU3wE,KAAY,CAG3Bjd,EAAOiB,KAAKokF,EAAK8G,QAGjB,IAAK,MAAMkC,KAAahJ,EAAKwI,WACzBQ,EAAUT,UAAUznF,OAAOk/E,GAE/B0H,EAAU5mF,OAAOk/E,EAAK8G,OAAO/uF,MAC7BgvF,EAAML,SAAS5lF,OAAOk/E,EACzB,CAER,CACD,SAASiJ,IACL,IAAK,MAAMlC,KAASoB,EAAe,CAG/B,GAFAY,EAAUhC,GAENA,EAAML,SAAS9uE,KAAO,GAAKmvE,IAAUgB,EAQrC,YAPKA,EAAQH,QAITmB,EAAUhB,IAKdhB,EAAMc,kBAENkB,EAAUhB,EAEjB,CACJ,CAED,IAAImB,EAAY,EAChB,KAAOxB,EAAU9vE,KAAO,GAAG,CACvBsxE,IACA,MAAMC,EAAsBxuF,EAAO0B,OAMnC,GAJA4sF,IAIItuF,EAAO0B,QAAU8sF,GAAuBD,EAAY,EACpD,MAAM,IAAI3xF,MAAM,gEAEvB,CACD,OAAOoD,CACV,EAME,SAASyuF,KACZ,OAAO3C,GAAa/lC,QACxB,CCjQO,MAAM2oC,GAASC,EAAQD,OCExBE,GAAiB,IAAIhJ,GAIpB,MAAMiJ,WAAkBjyF,MAC3B,WAAAI,CAAYC,EAASf,EAAU,IAC3BgB,MAAMD,GACNE,KAAKC,KAAO,YACZD,KAAKkW,KAAOnX,EAAQmX,KACpBlW,KAAKI,WAAarB,EAAQqB,WAK1BoC,OAAO0G,eAAelJ,KAAM,UAAW,CAAE0I,MAAO3J,EAAQmwB,QAASyiE,YAAY,IAC7EnvF,OAAO0G,eAAelJ,KAAM,WAAY,CAAE0I,MAAO3J,EAAQknB,SAAU0rE,YAAY,IAE/EnvF,OAAO0G,eAAelJ,KAAMuxF,GAAQ,CAChC7oF,MAAO,IAGI,cAAc1I,KAAKF,cAAc2xF,GAAe3I,SAAStmF,OAAOC,OAAOD,OAAOC,OAAO,GAAIzC,MAAO,CAAEkvB,QAASlvB,KAAKkvB,QAASjJ,SAAUjmB,KAAKimB,cAEnJ0rE,YAAY,IAEhBnvF,OAAOqT,eAAe7V,KAAM0xF,GAAU57E,UACzC,EAiBE,SAAS87E,GAAY9wF,GACxB,OAAIA,aAAa4wF,IAGVxK,GAAQpmF,IAAiB,cAAXA,EAAEb,IAC3B,CAfAyxF,GAAUG,mBAAqB,qBAK/BH,GAAUI,YAAc,cCxCjB,MAAM7rF,GAASQ,GAAmB,mBCQnCsrF,GAAuB,CAAA,EAC7B,SAASC,GAAiBt3D,GACtB,OAAOA,GAA6B,mBAAdA,EAAK0uB,IAC/B,CACA,SAAS6oC,GAAiBC,GACtB,OAAwB,IAApBA,EAAO/oC,SACAp+C,QAAQC,UAEZ,IAAID,QAASC,IAChB,MAAMmnF,EAAU,KACZnnF,IACAknF,EAAOE,eAAe,QAASD,GAC/BD,EAAOE,eAAe,MAAOD,GAC7BD,EAAOE,eAAe,QAASD,IAEnCD,EAAO72C,GAAG,QAAS82C,GACnBD,EAAO72C,GAAG,MAAO82C,GACjBD,EAAO72C,GAAG,QAAS82C,IAE3B,CACA,SAASE,GAAc33D,GACnB,OAAOA,GAAmC,iBAApBA,EAAKizB,UAC/B,CACA,MAAM2kC,WAAwBC,GAE1B,UAAAC,CAAW/2C,EAAOg3C,EAAWtoF,GACzBnK,KAAK8D,KAAK23C,GACVz7C,KAAK0yF,aAAej3C,EAAMl3C,OAC1B,IACIvE,KAAK2yF,iBAAiB,CAAED,YAAa1yF,KAAK0yF,cAC1CvoF,GACH,CACD,MAAOrJ,GACHqJ,EAASrJ,EACZ,CACJ,CACD,WAAAjB,CAAY8yF,GACR5yF,QACAC,KAAK0yF,YAAc,EACnB1yF,KAAK2yF,iBAAmBA,CAC3B,EAML,MAAMC,GACF,WAAA/yF,GACIG,KAAK6yF,kBAAoB,IAAIC,OAChC,CAKD,iBAAMxD,CAAYpgE,GACd,IAAIzkB,EAAIg9E,EAAIC,EACZ,MAAMqL,EAAkB,IAAIC,gBAC5B,IAAIC,EAYAC,EAXJ,GAAIhkE,EAAQq6D,YAAa,CACrB,GAAIr6D,EAAQq6D,YAAYQ,QACpB,MAAM,IAAIV,GAAW,iEAEzB4J,EAAiBtgE,IACM,UAAfA,EAAMgT,MACNotD,EAAgBI,SAGxBjkE,EAAQq6D,YAAYU,iBAAiB,QAASgJ,EACjD,CAEG/jE,EAAQkrB,QAAU,IAClB84C,EAAYx3D,WAAW,KACnB,MAAM03D,EAAY,IAAI3K,GACtBxiF,GAAOjB,KAAK,eAAeouF,EAAUnK,YAAY/5D,EAAQ9K,iCACzD2uE,EAAgBI,SACjBjkE,EAAQkrB,UAEf,MAAMi5C,EAAiBnkE,EAAQwN,QAAQ5zB,IAAI,mBACrCwqF,GAAoBD,aAAuD,EAASA,EAAe9tF,SAAS,WAAa8tF,aAAuD,EAASA,EAAe9tF,SAAS,YACvN,IAOIguF,EAPA74D,EAA+B,mBAAjBxL,EAAQwL,KAAsBxL,EAAQwL,OAASxL,EAAQwL,KACzE,GAAIA,IAASxL,EAAQwN,QAAQ/c,IAAI,kBAAmB,CAChD,MAAM6zE,EA6NX,SAAuB94D,GAC1B,OAAKA,EAGIihB,OAAO4O,SAAS7vB,GACdA,EAAKn2B,OAEPytF,GAAiBt3D,GACf,KAEF23D,GAAc33D,GACZA,EAAKizB,WAES,iBAATjzB,EACLihB,OAAOpU,KAAK7M,GAAMn2B,OAGlB,KAfA,CAiBf,CAhP+BkvF,CAAc/4D,GACd,OAAf84D,GACAtkE,EAAQwN,QAAQ9zB,IAAI,iBAAkB4qF,EAE7C,CAED,IACI,GAAI94D,GAAQxL,EAAQi/D,iBAAkB,CAClC,MAAMA,EAAmBj/D,EAAQi/D,iBAC3BuF,EAAqB,IAAIpB,GAAgBnE,GAC/CuF,EAAmBr4C,GAAG,QAAUv6C,IAC5BmF,GAAO1F,MAAM,2BAA4BO,KAEzCkxF,GAAiBt3D,GACjBA,EAAK0uB,KAAKsqC,GAGVA,EAAmBhqF,IAAIgxB,GAE3BA,EAAOg5D,CACV,CACD,MAAMvb,QAAYn4E,KAAK2zF,YAAYzkE,EAAS6jE,EAAiBr4D,QAC3C74B,IAAdqxF,GACA/I,aAAa+I,GAEjB,MAAMx2D,EA4IlB,SAA4By7C,GACxB,MAAMz7C,EAAU8wD,KAChB,IAAK,MAAMzxC,KAAUv5C,OAAO2J,KAAKgsE,EAAIz7C,SAAU,CAC3C,MAAMh0B,EAAQyvE,EAAIz7C,QAAQqf,GACtB10C,MAAMC,QAAQoB,GACVA,EAAMnE,OAAS,GACfm4B,EAAQ9zB,IAAImzC,EAAQrzC,EAAM,IAGzBA,GACLg0B,EAAQ9zB,IAAImzC,EAAQrzC,EAE3B,CACD,OAAOg0B,CACX,CA1J4Bk3D,CAAmBzb,GAE7BlyD,EAAW,CACbhb,OAFqC,QAAzBR,EAAK0tE,EAAI/3E,kBAA+B,IAAPqK,EAAgBA,EAAK,EAGlEiyB,UACAxN,WAIJ,GAAuB,SAAnBA,EAAQ4rB,OAIR,OADAq9B,EAAI0b,SACG5tE,EAEXstE,EAAiBD,EA4I7B,SAAkCpB,EAAQx1D,GACtC,MAAMo3D,EAAkBp3D,EAAQ5zB,IAAI,oBACpC,GAAwB,SAApBgrF,EAA4B,CAC5B,MAAMC,EAAQC,GAAKC,eAEnB,OADA/B,EAAO9oC,KAAK2qC,GACLA,CACV,CACI,GAAwB,YAApBD,EAA+B,CACpC,MAAMI,EAAUF,GAAKG,gBAErB,OADAjC,EAAO9oC,KAAK8qC,GACLA,CACV,CACD,OAAOhC,CACX,CAzJgDkC,CAAyBjc,EAAKz7C,GAAWy7C,EAC7E,MAAMiW,EAAqBl/D,EAAQk/D,mBACnC,GAAIA,EAAoB,CACpB,MAAMiG,EAAuB,IAAI/B,GAAgBlE,GACjDiG,EAAqBh5C,GAAG,QAAUv6C,IAC9BmF,GAAO1F,MAAM,6BAA8BO,KAE/CyyF,EAAenqC,KAAKirC,GACpBd,EAAiBc,CACpB,CAUD,OAP8C,QAA5C5M,EAAKv4D,EAAQ++D,iCAA8C,IAAPxG,OAAgB,EAASA,EAAG9nE,IAAIyb,OAAOk5D,sBAC3C,QAA5C5M,EAAKx4D,EAAQ++D,iCAA8C,IAAPvG,OAAgB,EAASA,EAAG/nE,IAAIsG,EAAShb,SAC/Fgb,EAASgmE,mBAAqBsH,EAG9BttE,EAASsuE,iBAyIHrC,EAzImCqB,EA0I9C,IAAIxoF,QAAQ,CAACC,EAASowC,KACzB,MAAMwG,EAAS,GACfswC,EAAO72C,GAAG,OAASI,IACXE,OAAO4O,SAAS9O,GAChBmG,EAAO99C,KAAK23C,GAGZmG,EAAO99C,KAAK63C,OAAOpU,KAAKkU,MAGhCy2C,EAAO72C,GAAG,MAAO,KACbrwC,EAAQ2wC,OAAOC,OAAOgG,GAAQnU,SAAS,WAE3CykD,EAAO72C,GAAG,QAAUv6C,IACZA,GAAwD,gBAAlDA,aAA6B,EAASA,EAAEb,MAC9Cm7C,EAAOt6C,GAGPs6C,EAAO,IAAIs2C,GAAU,mCAAmC5wF,EAAEhB,UAAW,CACjEoW,KAAMw7E,GAAUI,oBA3JjB7rE,CACV,CACO,QAEJ,GAAIiJ,EAAQq6D,aAAe0J,EAAe,CACtC,IAAIuB,EAAmBzpF,QAAQC,UAC3BgnF,GAAiBt3D,KACjB85D,EAAmBvC,GAAiBv3D,IAExC,IAAI+5D,EAAqB1pF,QAAQC,UAC7BgnF,GAAiBuB,KACjBkB,EAAqBxC,GAAiBsB,IAE1CxoF,QAAQ2pF,IAAI,CAACF,EAAkBC,IAC1B56D,KAAK,KACN,IAAIpvB,EAEAwoF,IAC+B,QAA9BxoF,EAAKykB,EAAQq6D,mBAAgC,IAAP9+E,GAAyBA,EAAGo/E,oBAAoB,QAASoJ,MAGnGllE,MAAOjtB,IACRmF,GAAOhB,QAAQ,sDAAuDnE,IAE7E,CACJ,CA8GT,IAAsBoxF,CA7GjB,CACD,WAAAyB,CAAYzkE,EAAS6jE,EAAiBr4D,GAClC,IAAIjwB,EACJ,MAAM2Z,EAAM,IAAIw2B,IAAI1rB,EAAQ9K,KACtBuwE,EAA8B,WAAjBvwE,EAAIo1B,SACvB,GAAIm7C,IAAezlE,EAAQm/D,wBACvB,MAAM,IAAI5uF,MAAM,qBAAqByvB,EAAQ9K,+CAEjD,MAAM22B,EAAiC,QAAxBtwC,EAAKykB,EAAQ6rB,aAA0B,IAAPtwC,EAAgBA,EAAKzK,KAAK40F,iBAAiB1lE,EAASylE,GAC7F51F,EAAUyD,OAAOC,OAAO,CAAEs4C,QAAOtB,SAAUr1B,EAAIq1B,SAAUG,KAAM,GAAGx1B,EAAIu1B,WAAWv1B,EAAI5G,SAAUs8B,KAAM11B,EAAI01B,KAAMgB,OAAQ5rB,EAAQ4rB,OAAQpe,QAASxN,EAAQwN,QAAQywD,OAAO,CAAEC,cAAc,KAAWl+D,EAAQq/D,kBAChN,OAAO,IAAIxjF,QAAQ,CAACC,EAASowC,KACzB,MAAM88B,EAAMyc,EAAa35C,GAAK9rB,QAAQnwB,EAASiM,GAAWyxC,GAAMvtB,QAAQnwB,EAASiM,GACjFktE,EAAIjnB,KAAK,QAAU/lD,IACf,IAAIT,EACJ2wC,EAAO,IAAIs2C,GAAUxmF,EAAIpL,QAAS,CAAEoW,KAA0B,QAAnBzL,EAAKS,EAAIgL,YAAyB,IAAPzL,EAAgBA,EAAKinF,GAAUG,mBAAoB3iE,eAE7H6jE,EAAgB8B,OAAO5K,iBAAiB,QAAS,KAC7C,MAAM6K,EAAa,IAAIzL,GAAW,yFAClCnR,EAAI1zE,QAAQswF,GACZ15C,EAAO05C,KAEPp6D,GAAQs3D,GAAiBt3D,GACzBA,EAAK0uB,KAAK8uB,GAELx9C,EACe,iBAATA,GAAqBihB,OAAO4O,SAAS7vB,GAC5Cw9C,EAAIxuE,IAAIgxB,GAEH23D,GAAc33D,GACnBw9C,EAAIxuE,IAAIqrF,YAAYC,OAAOt6D,GAAQihB,OAAOpU,KAAK7M,EAAKknB,QAAUjG,OAAOpU,KAAK7M,KAG1Ez0B,GAAO1F,MAAM,yBAA0Bm6B,GACvC0gB,EAAO,IAAIs2C,GAAU,4BAKzBxZ,EAAIxuE,OAGf,CACD,gBAAAkrF,CAAiB1lE,EAASylE,GACtB,IAAIlqF,EACJ,MAAMsjF,EAAmB7+D,EAAQ6+D,iBAEjC,GAAI4G,EACA,OAAI5G,EAEO/yC,GAAKi6C,aAEXj1F,KAAKk1F,kBAENl1F,KAAKk1F,gBAAkB,IAAIl6C,GAAKC,MAAM,CAAEk6C,WAAW,KAEhDn1F,KAAKk1F,iBAEX,CACD,GAAInH,IAAqB7+D,EAAQkmE,YAG7B,OAAO34C,GAAMw4C,YAGjB,MAAMG,EAA6C,QAA9B3qF,EAAKykB,EAAQkmE,mBAAgC,IAAP3qF,EAAgBA,EAAKsnF,GAGhF,IAAIh3C,EAAQ/6C,KAAK6yF,kBAAkB/pF,IAAIssF,GACvC,OAAIr6C,GAASA,EAAMh8C,QAAQo2F,aAAepH,IAG1C9nF,GAAOjB,KAAK,mDACZ+1C,EAAQ,IAAI0B,GAAMxB,MAAMz4C,OAAOC,OAAO,CAElC0yF,WAAYpH,GAAoBqH,IACpCp1F,KAAK6yF,kBAAkBjqF,IAAIwsF,EAAar6C,IAN7BA,CAQd,CACJ,ECzPE,SAASs6C,KACZ,OD2UO,IAAIzC,EC1Uf,CCDO,MAAM0C,GAAgB,YAKtB,SAASC,GAAUx2F,EAAU,IAChC,IAAI0L,EACJ,MAAMxE,EAAmC,QAAzBwE,EAAK1L,EAAQkH,cAA2B,IAAPwE,EAAgBA,EAAK+qF,GAAWxwF,KAC3EouF,EAAY,IAAI3K,GAAU,CAC5BC,6BAA8B3pF,EAAQ2pF,6BACtCE,iCAAkC7pF,EAAQ6pF,mCAE9C,MAAO,CACH3oF,KAAMq1F,GACN,iBAAMhG,CAAYpgE,EAASR,GACvB,IAAKzoB,EAAO5G,QACR,OAAOqvB,EAAKQ,GAEhBjpB,EAAO,YAAYmtF,EAAUtK,SAAS55D,MACtC,MAAMjJ,QAAiByI,EAAKQ,GAG5B,OAFAjpB,EAAO,yBAAyBggB,EAAShb,UACzChF,EAAO,YAAYmtF,EAAUtK,SAAS7iE,EAASyW,YACxCzW,CACV,EAET,CC3BO,MAAMwvE,GAAqB,iBAI5BC,GAAkB,CAAC,MAAO,QAOzB,SAASC,GAAe52F,EAAU,IACrC,MAAMimF,WAAEA,EAAa,IAAOjmF,EAC5B,MAAO,CACHkB,KAAMw1F,GACN,iBAAMnG,CAAYpgE,EAASR,GACvB,MAAMzI,QAAiByI,EAAKQ,GAC5B,OAAO0mE,GAAelnE,EAAMzI,EAAU++D,EACzC,EAET,CACAl6E,eAAe8qF,GAAelnE,EAAMzI,EAAU++D,EAAY6Q,EAAiB,GACvE,MAAM3mE,QAAEA,EAAOjkB,OAAEA,EAAMyxB,QAAEA,GAAYzW,EAC/B6vE,EAAiBp5D,EAAQ5zB,IAAI,YACnC,GAAIgtF,IACY,MAAX7qF,GACe,MAAXA,GAAkByqF,GAAgBnwF,SAAS2pB,EAAQ4rB,SACxC,MAAX7vC,GAAkByqF,GAAgBnwF,SAAS2pB,EAAQ4rB,SACxC,MAAX7vC,GAAqC,SAAnBikB,EAAQ4rB,QAChB,MAAX7vC,IACJ4qF,EAAiB7Q,EAAY,CAC7B,MAAM5gE,EAAM,IAAIw2B,IAAIk7C,EAAgB5mE,EAAQ9K,KAC5C8K,EAAQ9K,IAAMA,EAAIqpB,WAGH,MAAXxiC,IACAikB,EAAQ4rB,OAAS,MACjB5rB,EAAQwN,QAAQ1zB,OAAO,yBAChBkmB,EAAQwL,MAEnBxL,EAAQwN,QAAQ1zB,OAAO,iBACvB,MAAMmvE,QAAYzpD,EAAKQ,GACvB,OAAO0mE,GAAelnE,EAAMypD,EAAK6M,EAAY6Q,EAAiB,EACjE,CACD,OAAO5vE,CACX,CC7BOnb,eAAeirF,GAAkBn0B,GACpC,MAAMo0B,EAAc,IAAIxtF,IACxBwtF,EAAYptF,IAAI,kBCrBO,eCWpBkC,eAAuCrH,GAC1C,GAAI1B,GAAWA,EAAQ6iE,SAAU,CAC7B,MAAMA,EAAW7iE,EAAQ6iE,SACrBA,EAASqxB,IACTxyF,EAAImF,IAAI,MAAOg8D,EAASqxB,KAEnBrxB,EAASmjB,KACdtkF,EAAImF,IAAI,OAAQg8D,EAASmjB,MAEpBnjB,EAASsjB,MACdzkF,EAAImF,IAAI,OAAQg8D,EAASsjB,KAEhC,CACDzkF,EAAImF,IAAI,KAAM,IAAI0rB,EAAGogD,UAAUpgD,EAAGqR,UAAUrR,EAAGwkC,aACnD,CFHUo9B,CAAwBF,GAC9B,MAAMG,EArBV,SAA4BC,GACxB,MAAMhsB,EAAQ,GACd,IAAK,MAAO3hE,EAAKC,KAAU0tF,EAAe,CACtC,MAAM5qF,EAAQ9C,EAAQ,GAAGD,KAAOC,IAAUD,EAC1C2hE,EAAMtmE,KAAK0H,EACd,CACD,OAAO4+D,EAAM1qE,KAAK,IACtB,CAcyB22F,CAAmBL,GAExC,OADuBp0B,EAAS,GAAGA,KAAUu0B,IAAiBA,CAElE,CGzBA,MAAMG,GDKK,aEHJ,MAAMC,GAA+B,2BAKrC,SAASC,KACZ,MAAO,CACHv2F,KAAMs2F,GACNzrF,YAAiB,MAACokB,EAASR,KAEA,SAAnBQ,EAAQ4rB,QACR5rB,EAAQwN,QAAQ9zB,IAAI,kBAAmB,gBAEpC8lB,EAAKQ,IAGxB,CCRO,SAASsM,GAAMi7D,EAAW/tF,EAAO3J,GACpC,OAAO,IAAIgM,QAAQ,CAACC,EAASowC,KACzB,IAAIs7C,EACAC,EACJ,MAAMhN,EAAgB,IACXvuC,EAAO,IAAIiuC,IAAYtqF,aAAyC,EAASA,EAAQyqF,eAAiBzqF,aAAyC,EAASA,EAAQyqF,cAflJ,+BAiBfI,EAAkB,MACf7qF,aAAyC,EAASA,EAAQwqF,cAAgBoN,GAC3E53F,EAAQwqF,YAAYM,oBAAoB,QAAS8M,IAUzD,GAPAA,EAAY,KACJD,GACAvM,aAAauM,GAEjB9M,IACOD,MAEN5qF,aAAyC,EAASA,EAAQwqF,cAAgBxqF,EAAQwqF,YAAYQ,QAC/F,OAAOJ,IAEX+M,EAAQh7D,WAAW,KACfkuD,IACA5+E,EAAQtC,IACT+tF,IACC13F,aAAyC,EAASA,EAAQwqF,cAC1DxqF,EAAQwqF,YAAYU,iBAAiB,QAAS0M,IAG1D,CAKO,SAASC,GAAyB3wE,EAAUinE,GAC/C,MAAMxkF,EAAQud,EAASyW,QAAQ5zB,IAAIokF,GACnC,IAAKxkF,EACD,OACJ,MAAMmuF,EAAaz7D,OAAO1yB,GAC1B,OAAI0yB,OAAO89B,MAAM29B,QAAjB,EAEOA,CACX,CCjDA,MAAMC,GAAmB,cAQnBC,GAAuB,CAAC,iBAAkB,sBAAuBD,IAUvE,SAASE,GAAkB/wE,GACvB,GAAMA,GAAY,CAAC,IAAK,KAAK1gB,SAAS0gB,EAAShb,QAE/C,IAEI,IAAK,MAAM8wC,KAAUg7C,GAAsB,CACvC,MAAME,EAAkBL,GAAyB3wE,EAAU81B,GAC3D,GAAwB,IAApBk7C,GAAyBA,EAAiB,CAI1C,OAAOA,GADmBl7C,IAAW+6C,GAAmB,IAAO,EAElE,CACJ,CAED,MAAM/U,EAAmB97D,EAASyW,QAAQ5zB,IAAIguF,IAC9C,IAAK/U,EACD,OACJ,MACM9gB,EADOvmD,KAAK7Z,MAAMkhF,GACJrnE,KAAKuI,MAEzB,OAAOmY,OAAOw4B,SAASqN,GAAQlmC,KAAKywB,IAAI,EAAGyV,QAAQp/D,CACtD,CACD,MAAO4I,GACH,MACH,CACL,CCvCO,SAASi6E,GAAyB3lF,EAAU,IAC/C,IAAI0L,EAAIg9E,EACR,MAAMyP,EAAkD,QAAjCzsF,EAAK1L,EAAQ8nF,sBAAmC,IAAPp8E,EAAgBA,EAT9C,IAU5B0sF,EAAwD,QAApC1P,EAAK1oF,EAAQgoF,yBAAsC,IAAPU,EAAgBA,EAThD,KAUtC,MAAO,CACHxnF,KAAM,2BACN,KAAAm3F,EAAMC,WAAEA,EAAUpxE,SAAEA,EAAQqxE,cAAEA,IAC1B,MAAMC,EAiCX,SAAuBrsF,GAC1B,IAAKA,EACD,OAAO,EAEX,MAAqB,cAAbA,EAAIgL,MACK,oBAAbhL,EAAIgL,MACS,iBAAbhL,EAAIgL,MACS,eAAbhL,EAAIgL,MACS,WAAbhL,EAAIgL,MACS,cAAbhL,EAAIgL,IACZ,CA3CuCshF,CAAcF,GACnCG,EAAqBF,GAAsBx4F,EAAQ04F,mBACnDC,EAqBX,SAAoCzxE,GACvC,OAAO9f,QAAQ8f,QACSpkB,IAApBokB,EAAShb,SACRgb,EAAShb,QAAU,KAA2B,MAApBgb,EAAShb,SAChB,MAApBgb,EAAShb,QACW,MAApBgb,EAAShb,OACjB,CA3BkC0sF,CAA2B1xE,GAC3C2xE,EAA4BF,GAAiB34F,EAAQ84F,sBACrDC,EAAkB7xE,IDiC7B,SAAmCA,GACtC,OAAOmV,OAAOw4B,SAASojC,GAAkB/wE,GAC7C,CCnCiD8xE,CAA0B9xE,KAAcyxE,GAC7E,OAAII,GAAmBF,GAA6BH,EACzC,CAAEO,cAAc,IAEvBV,GAAkBC,GAAuBG,EAGtChR,GAAoB2Q,EAAY,CACnCxQ,eAAgBqQ,EAChBnQ,kBAAmBoQ,IAJZ,CAAEc,aAAcX,EAM9B,EAET,CC9BA,MAAMY,GAAoBzxF,GAAmB,+BAQtC,SAASu4E,GAAYmZ,EAAYp5F,EAAU,CAAEimF,WPXV,IOYtC,MAAM/+E,EAASlH,EAAQkH,QAAUiyF,GACjC,MAAO,CACHj4F,KAPgB,cAQhB,iBAAMqvF,CAAYpgE,EAASR,GACvB,IAAIjkB,EAAIg9E,EACR,IAAIxhE,EACAqxE,EACAD,GAAc,EAClBe,EAAc,OAAa,CACvBf,GAAc,EACdpxE,OAAWpkB,EACXy1F,OAAgBz1F,EAChB,IACIoE,EAAOjB,KAAK,SAASqyF,gCAA0CnoE,EAAQiX,WACvElgB,QAAiByI,EAAKQ,GACtBjpB,EAAOjB,KAAK,SAASqyF,sCAAgDnoE,EAAQiX,UAChF,CACD,MAAOrlC,GAMH,GALAmF,EAAO1F,MAAM,SAAS82F,oCAA8CnoE,EAAQiX,WAI5EmxD,EAAgBx2F,GACXA,GAA4B,cAAvBw2F,EAAcr3F,KACpB,MAAMa,EAEVmlB,EAAWqxE,EAAcrxE,QAC5B,CACD,GAAmC,QAA9Bxb,EAAKykB,EAAQq6D,mBAAgC,IAAP9+E,OAAgB,EAASA,EAAGs/E,QAAS,CAC5E9jF,EAAO1F,MAAM,SAAS82F,uBAEtB,MADmB,IAAIhO,EAE1B,CACD,GAAIgO,IAA6C,QAA7B5P,EAAK1oF,EAAQimF,kBAA+B,IAAPyC,EAAgBA,EP7C/C,GO6CiF,CAEvG,GADAxhF,EAAOjB,KAAK,SAASqyF,0GACjBC,EACA,MAAMA,EAEL,GAAIrxE,EACL,OAAOA,EAGP,MAAM,IAAIxmB,MAAM,6DAEvB,CACDwG,EAAOjB,KAAK,SAASqyF,iBAA0Bc,EAAW5zF,4BAC1D8zF,EAAgB,IAAK,MAAMC,KAAYH,EAAY,CAC/C,MAAMI,EAAiBD,EAASryF,QAAUA,EAC1CsyF,EAAevzF,KAAK,SAASqyF,gCAAyCiB,EAASr4F,SAC/E,MAAMu4F,EAAYF,EAASlB,MAAM,CAC7BC,aACApxE,WACAqxE,kBAEJ,GAAIkB,EAAUR,aAAc,CACxBO,EAAevzF,KAAK,SAASqyF,eAC7B,SAASgB,CACZ,CACD,MAAMJ,aAAEA,EAAYjR,eAAEA,EAAcyR,WAAEA,GAAeD,EACrD,GAAIP,EAEA,MADAM,EAAeh4F,MAAM,SAAS82F,qBAA8BiB,EAASr4F,qBAAsBg4F,GACrFA,EAEV,GAAIjR,GAAqC,IAAnBA,EAAsB,CACxCuR,EAAevzF,KAAK,SAASqyF,qBAA8BiB,EAASr4F,sBAAsB+mF,WACpFxrD,GAAMwrD,OAAgBnlF,EAAW,CAAE0nF,YAAar6D,EAAQq6D,cAC9D,SAAS6O,CACZ,CACD,GAAIK,EAAY,CACZF,EAAevzF,KAAK,SAASqyF,qBAA8BiB,EAASr4F,qBAAqBw4F,KACzFvpE,EAAQ9K,IAAMq0E,EACd,SAASL,CACZ,CACJ,CACD,GAAId,EAEA,MADArxF,EAAOjB,KAAK,iFACNsyF,EAEV,GAAIrxE,EAEA,OADAhgB,EAAOjB,KAAK,qFACLihB,CAKd,CACJ,EAET,CC9FO,MAAMyyE,GAAyB,qBAO/B,SAASC,GAAmB55F,EAAU,IACzC,IAAI0L,EACJ,MAAO,CACHxK,KAAMy4F,GACNpJ,YAAatQ,GAAY,CHwCtB,CACH/+E,KAAM,0BACN,KAAAm3F,EAAMnxE,SAAEA,IACJ,MAAM+gE,EAAiBgQ,GAAkB/wE,GACzC,OAAKmV,OAAOw4B,SAASozB,GAGd,CACHA,kBAHO,CAAEgR,cAAc,EAK9B,GGlDoDtT,GAAyB3lF,IAAW,CACrFimF,WAA0C,QAA7Bv6E,EAAK1L,EAAQimF,kBAA+B,IAAPv6E,EAAgBA,ERlBpC,IQmB/B6kF,YAEX,CChBO,MAAMsJ,GAAqB,iBAa3B,SAASC,KACZ,MAAO,CACH54F,KAAM24F,GACN,iBAAMtJ,CAAYpgE,EAASR,GAKvB,GAJIu5D,IAAkC,oBAAb6Q,UAA4B5pE,EAAQwL,gBAAgBo+D,WACzE5pE,EAAQ4+D,SAjBxB,SAA+BA,GAC3B,IAAIrjF,EACJ,MAAMsuF,EAAc,CAAA,EACpB,IAAK,MAAOtwF,EAAKC,KAAUolF,EAASp1D,UACJ,QAA3BjuB,EAAKsuF,EAAYtwF,UAAyB,IAAPgC,IAAsBsuF,EAAYtwF,GAAO,IAC7EswF,EAAYtwF,GAAK3E,KAAK4E,GAE1B,OAAOqwF,CACX,CASmCC,CAAsB9pE,EAAQwL,MACjDxL,EAAQwL,UAAO74B,GAEfqtB,EAAQ4+D,SAAU,CAClB,MAAMmL,EAAc/pE,EAAQwN,QAAQ5zB,IAAI,gBACpCmwF,IAA6E,IAA9DA,EAAYt0F,QAAQ,qCACnCuqB,EAAQwL,KAW5B,SAA0BozD,GACtB,MAAMoL,EAAkB,IAAIz1E,gBAC5B,IAAK,MAAOhb,EAAKC,KAAUlG,OAAOk2B,QAAQo1D,GACtC,GAAIzmF,MAAMC,QAAQoB,GACd,IAAK,MAAMywF,KAAYzwF,EACnBwwF,EAAgBE,OAAO3wF,EAAK0wF,EAAS1rD,iBAIzCyrD,EAAgBE,OAAO3wF,EAAKC,EAAM+kC,YAG1C,OAAOyrD,EAAgBzrD,UAC3B,CAxBmC4rD,CAAiBnqE,EAAQ4+D,gBAyB5DhjF,eAA+BgjF,EAAU5+D,GAErC,MAAM+pE,EAAc/pE,EAAQwN,QAAQ5zB,IAAI,gBACxC,GAAImwF,IAAgBA,EAAYp1F,WAAW,uBAEvC,OAEJqrB,EAAQwN,QAAQ9zB,IAAI,eAAgBqwF,QAAiDA,EAAc,uBAEnG,MAAM7uB,EAAQ,GACd,IAAK,MAAOkvB,EAAWnxE,KAAW3lB,OAAOk2B,QAAQo1D,GAC7C,IAAK,MAAMplF,KAASrB,MAAMC,QAAQ6gB,GAAUA,EAAS,CAACA,GAClD,GAAqB,iBAAVzf,EACP0hE,EAAMtmE,KAAK,CACP44B,QAAS8wD,GAAkB,CACvB,sBAAuB,oBAAoB8L,OAE/C5+D,KAAM2tD,GAAmB3/E,EAAO,eAGnC,IAAIA,SAA0D,iBAAVA,EACrD,MAAM,IAAIjJ,MAAM,4BAA4B65F,MAAc5wF,kDAEzD,CAED,MAAMg7E,EAAWh7E,EAAMzI,MAAQ,OACzBy8B,EAAU8wD,KAChB9wD,EAAQ9zB,IAAI,sBAAuB,oBAAoB0wF,iBAAyB5V,MAEhFhnD,EAAQ9zB,IAAI,eAAgBF,EAAMi9B,MAAQ,4BAC1CykC,EAAMtmE,KAAK,CACP44B,UACAhC,KAAMhyB,GAEb,EAGTwmB,EAAQ2+D,cAAgB,CAAEzjB,QAC9B,CA5D0BmvB,CAAgBrqE,EAAQ4+D,SAAU5+D,GAE5CA,EAAQ4+D,cAAWjsF,CACtB,CACD,OAAO6sB,EAAKQ,EACf,EAET,8FCyPAsqE,GA7RA,SAAex3F,GAqDd,SAASy3F,EAAY/2F,GACpB,IAAIg3F,EAEAC,EACAC,EAFAC,EAAiB,KAIrB,SAAS9zF,KAAShD,GAEjB,IAAKgD,EAAM1G,QACV,OAGD,MAAMuoF,EAAO7hF,EAGP+zF,EAAO1+D,OAAO,IAAI1gB,MAClB44C,EAAKwmC,GAAQJ,GAAYI,GAC/BlS,EAAK3mB,KAAO3N,EACZs0B,EAAKlhB,KAAOgzB,EACZ9R,EAAKkS,KAAOA,EACZJ,EAAWI,EAEX/2F,EAAK,GAAK02F,EAAY71B,OAAO7gE,EAAK,IAEX,iBAAZA,EAAK,IAEfA,EAAKg3F,QAAQ,MAId,IAAIr1F,EAAQ,EACZ3B,EAAK,GAAKA,EAAK,GAAGa,QAAQ,gBAAiB,CAAC0hB,EAAOniB,KAElD,GAAc,OAAVmiB,EACH,MAAO,IAER5gB,IACA,MAAMs1F,EAAYP,EAAYQ,WAAW92F,GACzC,GAAyB,mBAAd62F,EAA0B,CACpC,MAAMj5E,EAAMhe,EAAK2B,GACjB4gB,EAAQ00E,EAAU52C,KAAKwkC,EAAM7mE,GAG7Bhe,EAAK6B,OAAOF,EAAO,GACnBA,GACL,CACI,OAAO4gB,IAIRm0E,EAAYS,WAAW92C,KAAKwkC,EAAM7kF,IAEpB6kF,EAAK9kF,KAAO22F,EAAY32F,KAChCkqD,MAAM46B,EAAM7kF,EACrB,CAgCE,OA9BAgD,EAAMrD,UAAYA,EAClBqD,EAAMo0F,UAAYV,EAAYU,YAC9Bp0F,EAAMq0F,MAAQX,EAAYY,YAAY33F,GACtCqD,EAAMtB,OAASA,EACfsB,EAAMvB,QAAUi1F,EAAYj1F,QAE5BhC,OAAO0G,eAAenD,EAAO,UAAW,CACvC4rF,YAAY,EACZ2I,cAAc,EACdxxF,IAAK,IACmB,OAAnB+wF,EACIA,GAEJF,IAAoBF,EAAYp2F,aACnCs2F,EAAkBF,EAAYp2F,WAC9Bu2F,EAAeH,EAAYp6F,QAAQqD,IAG7Bk3F,GAERhxF,IAAKi4D,IACJg5B,EAAiBh5B,KAKa,mBAArB44B,EAAYc,MACtBd,EAAYc,KAAKx0F,GAGXA,CACT,CAEC,SAAStB,EAAO/B,EAAW83F,GAC1B,MAAMC,EAAWhB,EAAYz5F,KAAK0C,gBAAkC,IAAd83F,EAA4B,IAAMA,GAAa93F,GAErG,OADA+3F,EAAS33F,IAAM9C,KAAK8C,IACb23F,CACT,CAuCC,SAASC,EAAgBl9E,EAAQsvC,GAChC,IAAI6tC,EAAc,EACdC,EAAgB,EAChBC,GAAa,EACbC,EAAa,EAEjB,KAAOH,EAAcn9E,EAAOjZ,QAC3B,GAAIq2F,EAAgB9tC,EAASvoD,SAAWuoD,EAAS8tC,KAAmBp9E,EAAOm9E,IAA4C,MAA5B7tC,EAAS8tC,IAEnE,MAA5B9tC,EAAS8tC,IACZC,EAAYD,EACZE,EAAaH,EACbC,MAEAD,IACAC,SAEK,KAAmB,IAAfC,EAMV,OAAO,EAJPD,EAAgBC,EAAY,EAC5BC,IACAH,EAAcG,CAGlB,CAIE,KAAOF,EAAgB9tC,EAASvoD,QAAsC,MAA5BuoD,EAAS8tC,IAClDA,IAGD,OAAOA,IAAkB9tC,EAASvoD,MACpC,CAgEC,OAzRAk1F,EAAY1zF,MAAQ0zF,EACpBA,EAAYsB,QAAUtB,EACtBA,EAAY71B,OAsQZ,SAAgB7iD,GACf,GAAIA,aAAethB,MAClB,OAAOshB,EAAIi6E,OAASj6E,EAAIjhB,QAEzB,OAAOihB,CACT,EA1QC04E,EAAY72F,QA8NZ,WACC,MAAMS,EAAa,IACfo2F,EAAYwB,SACZxB,EAAYyB,MAAMz3F,IAAIf,GAAa,IAAMA,IAC3ChD,KAAK,KAEP,OADA+5F,EAAYn3F,OAAO,IACZe,CACT,EApOCo2F,EAAYn3F,OAsJZ,SAAgBe,GACfo2F,EAAY0B,KAAK93F,GACjBo2F,EAAYp2F,WAAaA,EAEzBo2F,EAAYwB,MAAQ,GACpBxB,EAAYyB,MAAQ,GAEpB,MAAM13F,GAA+B,iBAAfH,EAA0BA,EAAa,IAC3DM,OACAC,QAAQ,OAAQ,KAChBJ,MAAM,KACN8a,OAAOnY,SAET,IAAK,MAAMzC,KAAMF,EACF,MAAVE,EAAG,GACN+1F,EAAYyB,MAAMp3F,KAAKJ,EAAG6gB,MAAM,IAEhCk1E,EAAYwB,MAAMn3F,KAAKJ,EAG3B,EAzKC+1F,EAAYp6F,QA4OZ,SAAiBY,GAChB,IAAK,MAAMm7F,KAAQ3B,EAAYyB,MAC9B,GAAIR,EAAgBz6F,EAAMm7F,GACzB,OAAO,EAIT,IAAK,MAAM13F,KAAM+1F,EAAYwB,MAC5B,GAAIP,EAAgBz6F,EAAMyD,GACzB,OAAO,EAIT,OAAO,CACT,EAzPC+1F,EAAY4B,SAAWrzC,KACvByxC,EAAYj1F,QA4QZ,WACC8B,QAAQg1F,KAAK,wIACf,EA5QC94F,OAAO2J,KAAKnK,GAAKgc,QAAQvV,IACxBgxF,EAAYhxF,GAAOzG,EAAIyG,KAOxBgxF,EAAYwB,MAAQ,GACpBxB,EAAYyB,MAAQ,GAOpBzB,EAAYQ,WAAa,GAkBzBR,EAAYY,YAVZ,SAAqB33F,GACpB,IAAIg3C,EAAO,EAEX,IAAK,IAAI/tC,EAAI,EAAGA,EAAIjJ,EAAU6B,OAAQoH,IACrC+tC,GAASA,GAAQ,GAAKA,EAAQh3C,EAAU64F,WAAW5vF,GACnD+tC,GAAQ,EAGT,OAAO+/C,EAAY+B,OAAOzgE,KAAK+4B,IAAIpa,GAAQ+/C,EAAY+B,OAAOj3F,OAChE,EA6OCk1F,EAAYn3F,OAAOm3F,EAAYgC,QAExBhC,CACR,4EC/RciC,GAAG,CAACC,EAAMC,EAAO75F,QAAQ65F,QACtC,MAAMh6B,EAAS+5B,EAAK93F,WAAW,KAAO,GAAsB,IAAhB83F,EAAKp3F,OAAe,IAAM,KAChEs3F,EAAWD,EAAKj3F,QAAQi9D,EAAS+5B,GACjCG,EAAqBF,EAAKj3F,QAAQ,MACxC,OAAqB,IAAdk3F,KAA4C,IAAxBC,GAA6BD,EAAWC,kDCFpE,MAAMC,EAAM/zC,EACN9kD,EAAO8lD,EAMbL,EAAA4xC,KA2NA,SAAcx0F,GACbA,EAAMi2F,YAAc,GAEpB,MAAM7vF,EAAO3J,OAAO2J,KAAKw8C,EAAQqzC,aACjC,IAAK,IAAIrwF,EAAI,EAAGA,EAAIQ,EAAK5H,OAAQoH,IAChC5F,EAAMi2F,YAAY7vF,EAAKR,IAAMg9C,EAAQqzC,YAAY7vF,EAAKR,GAExD,EAjOAg9C,EAAA7lD,IAoLA,YAAgBC,GACf,OAAOhB,QAAQiB,OAAOC,MAAMC,EAAK+4F,kBAAkBtzC,EAAQqzC,eAAgBj5F,GAAQ,KACpF,EArLA4lD,EAAAuxC,WAyJA,SAAoBn3F,GACnB,MAAOL,UAAWzC,EAAIk6F,UAAEA,GAAan6F,KAErC,GAAIm6F,EAAW,CACd,MAAMtsC,EAAI7tD,KAAKo6F,MACT8B,EAAY,OAAcruC,EAAI,EAAIA,EAAI,OAASA,GAC/C+T,EAAS,KAAKs6B,OAAej8F,SAEnC8C,EAAK,GAAK6+D,EAAS7+D,EAAK,GAAGS,MAAM,MAAM9D,KAAK,KAAOkiE,GACnD7+D,EAAKe,KAAKo4F,EAAY,KAAOxzC,EAAOC,QAAQ0yC,SAASr7F,KAAKihE,MAAQ,OACpE,MACEl+D,EAAK,GAIP,WACC,GAAI4lD,EAAQqzC,YAAYG,SACvB,MAAO,GAER,OAAO,IAAIzhF,MAAOqlE,cAAgB,GACnC,CATYqc,GAAYn8F,EAAO,IAAM8C,EAAK,EAE1C,EArKA4lD,EAAAwyC,KA4LA,SAAc93F,GACTA,EACHtB,QAAQC,IAAIC,MAAQoB,SAIbtB,QAAQC,IAAIC,KAErB,EAnMA0mD,EAAA8yC,KA4MA,WACC,OAAO15F,QAAQC,IAAIC,KACpB,EA7MA0mD,EAAAwxC,UA0IA,WACC,MAAO,WAAYxxC,EAAQqzC,YAC1B71F,QAAQwiD,EAAQqzC,YAAYR,QAC5BO,EAAIM,OAAOt6F,QAAQiB,OAAOs5F,GAC5B,EA7IA3zC,EAAkBnkD,QAAAtB,EAAKq5F,UACtB,OACA,yIAOD5zC,EAAA6yC,OAAiB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAEjC,IAGC,MAAMgB,kCC9BP,MAAMloE,EAAK0zB,EACL+zC,EAAM/yC,EACN0yC,EAAUnyC,MAEVvnD,IAACA,GAAOD,QAEd,IAAI06F,EAuBJ,SAASC,EAAep3F,GACvB,OAAc,IAAVA,GAIG,CACNA,QACAq3F,UAAU,EACVC,OAAQt3F,GAAS,EACjBu3F,OAAQv3F,GAAS,EAEnB,CAEA,SAASk3F,EAAcM,EAAYC,GAClC,GAAmB,IAAfN,EACH,OAAO,EAGR,GAAIf,EAAQ,cACXA,EAAQ,eACRA,EAAQ,mBACR,OAAO,EAGR,GAAIA,EAAQ,aACX,OAAO,EAGR,GAAIoB,IAAeC,QAA8Bl7F,IAAf46F,EACjC,OAAO,EAGR,MAAM14D,EAAM04D,GAAc,EAE1B,GAAiB,SAAbz6F,EAAIg7F,KACP,OAAOj5D,EAGR,GAAyB,UAArBhiC,QAAQ4yE,SAAsB,CAGjC,MAAMsoB,EAAY3oE,EAAGwkC,UAAUt1D,MAAM,KACrC,OACC43B,OAAO6hE,EAAU,KAAO,IACxB7hE,OAAO6hE,EAAU,KAAO,MAEjB7hE,OAAO6hE,EAAU,KAAO,MAAQ,EAAI,EAGrC,CACT,CAEC,GAAI,OAAQj7F,EACX,MAAI,CAAC,SAAU,WAAY,WAAY,YAAa,iBAAkB,aAAamqC,KAAKwiB,GAAQA,KAAQ3sD,IAAwB,aAAhBA,EAAIk7F,QAC5G,EAGDn5D,EAGR,GAAI,qBAAsB/hC,EACzB,MAAO,gCAAgCoC,KAAKpC,EAAIm7F,kBAAoB,EAAI,EAGzE,GAAsB,cAAlBn7F,EAAIo7F,UACP,OAAO,EAGR,GAAI,iBAAkBp7F,EAAK,CAC1B,MAAMuZ,EAAUooB,UAAU3hC,EAAIq7F,sBAAwB,IAAI75F,MAAM,KAAK,GAAI,IAEzE,OAAQxB,EAAIs7F,cACX,IAAK,YACJ,OAAO/hF,GAAW,EAAI,EAAI,EAC3B,IAAK,iBACJ,OAAO,EAGX,CAEC,MAAI,iBAAiBnX,KAAKpC,EAAIg7F,MACtB,EAGJ,8DAA8D54F,KAAKpC,EAAIg7F,OAIvE,cAAeh7F,EAHX,EAOD+hC,CACR,QAnHI23D,EAAQ,aACXA,EAAQ,cACRA,EAAQ,gBACRA,EAAQ,eACRe,EAAa,GACHf,EAAQ,UAClBA,EAAQ,WACRA,EAAQ,eACRA,EAAQ,mBACRe,EAAa,GAGV,gBAAiBz6F,IAEnBy6F,EADuB,SAApBz6F,EAAIu7F,YACM,EACiB,UAApBv7F,EAAIu7F,YACD,EAE2B,IAA3Bv7F,EAAIu7F,YAAYh5F,OAAe,EAAIw2B,KAAKgJ,IAAIJ,SAAS3hC,EAAIu7F,YAAa,IAAK,IAwG1FC,GAAiB,CAChBhB,cAND,SAAyBtK,GAExB,OAAOwK,EADOF,EAActK,EAAQA,GAAUA,EAAOuL,OAEtD,EAICC,OAAQhB,EAAeF,GAAc,EAAMT,EAAIM,OAAO,KACtDr5F,OAAQ05F,EAAeF,GAAc,EAAMT,EAAIM,OAAO,MDtGhC9yC,GAElBizC,IAAkBA,EAAcx5F,QAAUw5F,GAAel3F,OAAS,IACrEqjD,EAAiB6yC,OAAA,CAChB,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,KAGF,CAAC,MAAOj7F,GAET,CAQAooD,EAAAqzC,YAAsBx5F,OAAO2J,KAAKpK,QAAQC,KAAKsc,OAAO7V,GAC9C,WAAWrE,KAAKqE,IACrB3B,OAAO,CAACwW,EAAK7U,KAEf,MAAMk1F,EAAOl1F,EACX4a,UAAU,GACVzD,cACAhc,QAAQ,YAAa,CAAC+5D,EAAGvC,IAClBA,EAAEtwB,eAIX,IAAI/pB,EAAMhf,QAAQC,IAAIyG,GAYtB,OAVCsY,IADG,2BAA2B3c,KAAK2c,KAEzB,6BAA6B3c,KAAK2c,KAE1B,SAARA,EACJ,KAEAqa,OAAOra,IAGdzD,EAAIqgF,GAAQ58E,EACLzD,GACL,CAAE,GA2FLorC,EAAiBC,QAAAqD,KAAoBrD,GAErC,MAAMsxC,WAACA,GAAcvxC,EAAOC,QAM5BsxC,EAAWxuC,EAAI,SAAUoV,GAExB,OADA7gE,KAAKg8F,YAAYR,OAASx7F,KAAKm6F,UACxBj3F,EAAKsuF,QAAQ3wB,EAAG7gE,KAAKg8F,aAC1Bx4F,MAAM,MACNC,IAAI8Z,GAAOA,EAAI5Z,QACfjE,KAAK,MAORu6F,EAAW2D,EAAI,SAAU/8B,GAExB,OADA7gE,KAAKg8F,YAAYR,OAASx7F,KAAKm6F,UACxBj3F,EAAKsuF,QAAQ3wB,EAAG7gE,KAAKg8F,yEEhQN,oBAAZj6F,SAA4C,aAAjBA,QAAQ4jC,OAA2C,IAApB5jC,QAAQ87F,SAAoB97F,QAAQ+7F,OACxGC,GAAAp1C,iCCADA,EAAAuxC,WA8IA,SAAoBn3F,GAQnB,GAPAA,EAAK,IAAM/C,KAAKm6F,UAAY,KAAO,IAClCn6F,KAAK0C,WACJ1C,KAAKm6F,UAAY,MAAQ,KAC1Bp3F,EAAK,IACJ/C,KAAKm6F,UAAY,MAAQ,KAC1B,IAAMzxC,EAAOC,QAAQ0yC,SAASr7F,KAAKihE,OAE/BjhE,KAAKm6F,UACT,OAGD,MAAMtsC,EAAI,UAAY7tD,KAAKo6F,MAC3Br3F,EAAK6B,OAAO,EAAG,EAAGipD,EAAG,kBAKrB,IAAInpD,EAAQ,EACRs5F,EAAQ,EACZj7F,EAAK,GAAGa,QAAQ,cAAe0hB,IAChB,OAAVA,IAGJ5gB,IACc,OAAV4gB,IAGH04E,EAAQt5F,MAIV3B,EAAK6B,OAAOo5F,EAAO,EAAGnwC,EACvB,EA9KAlF,EAAAwyC,KAgMA,SAAc93F,GACb,IACKA,EACHslD,EAAQ5C,QAAQ9B,QAAQ,QAAS5gD,GAEjCslD,EAAQ5C,QAAQz4B,WAAW,QAE5B,CAAC,MAAO/sB,GAGV,CACA,EA1MAooD,EAAA8yC,KAkNA,WACC,IAAI3gC,EACJ,IACCA,EAAInS,EAAQ5C,QAAQ/B,QAAQ,UAAY2E,EAAQ5C,QAAQ/B,QAAQ,QAChE,CAAC,MAAOzjD,GAGV,CAOC,OAJKu6D,GAAwB,oBAAZ/4D,SAA2B,QAASA,UACpD+4D,EAAI/4D,QAAQC,IAAIC,OAGV64D,CACR,EAhOAnS,EAAAwxC,UAyGA,WAIC,GAAsB,oBAAX8D,QAA0BA,OAAOl8F,UAAoC,aAAxBk8F,OAAOl8F,QAAQ4jC,MAAuBs4D,OAAOl8F,QAAQ+7F,QAC5G,OAAO,EAIR,GAAyB,oBAAdI,WAA6BA,UAAUC,WAAaD,UAAUC,UAAUv+E,cAAc0F,MAAM,yBACtG,OAAO,EAGR,IAAIulB,EAKJ,MAA4B,oBAAbuzD,UAA4BA,SAASC,iBAAmBD,SAASC,gBAAgBC,OAASF,SAASC,gBAAgBC,MAAMC,kBAEpH,oBAAXN,QAA0BA,OAAO33F,UAAY23F,OAAO33F,QAAQk4F,SAAYP,OAAO33F,QAAQm4F,WAAaR,OAAO33F,QAAQo4F,QAGrG,oBAAdR,WAA6BA,UAAUC,YAActzD,EAAIqzD,UAAUC,UAAUv+E,cAAc0F,MAAM,oBAAsBqe,SAASkH,EAAE,GAAI,KAAO,IAE/H,oBAAdqzD,WAA6BA,UAAUC,WAAaD,UAAUC,UAAUv+E,cAAc0F,MAAM,qBACtG,EAlIAqjC,EAAA5C,QA4OA,WACC,IAGC,OAAO44C,YACP,CAAC,MAAOp+F,GAGV,CACA,CArPkBq+F,GAClBj2C,EAAAnkD,QAAkB,MACjB,IAAIq6F,GAAS,EAEb,MAAO,KACDA,IACJA,GAAS,EACTv4F,QAAQg1F,KAAK,0IAGf,EATiB,GAelB3yC,EAAiB6yC,OAAA,CAChB,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,WAyFD7yC,EAAc7lD,IAAAwD,QAAQP,OAASO,QAAQxD,KAAG,MAAa,GAkEvD4lD,EAAiBC,QAAAX,KAAoBW,GAErC,MAAMsxC,WAACA,GAAcvxC,EAAOC,QAM5BsxC,EAAW6E,EAAI,SAAUj+B,GACxB,IACC,OAAOjgE,KAAKmL,UAAU80D,EACtB,CAAC,MAAOtgE,GACR,MA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AU,QAC5D,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAC5D,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAC5D,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAC5D,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAC5D,UAEJ,IAAIA,EAAe,KAAM,CACrB,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAC5D,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAC5D,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAC5D,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAC5D,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAC5D,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAC5D,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAC5D,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAC5D,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAC5D,UAEJ,IAAIA,EAAe,KAAM,CACrB,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAC5D,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAC5D,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAC5D,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAC5D,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAC5D,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAC5D,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAC5D,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAC5D,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAC5D,WAEJ,IAAIA,EAAe,KAAM,CACrB,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAC5D,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAC5D,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAC5D,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAC5D,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAC5D,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAC5D,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAC5D,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAC5D,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAC5D,UAEJ,IAAIA,EAAe,KAAM,CACrB,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAC5D,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAC5D,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAC5D,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAC5D,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAC5D,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAC5D,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAC5D,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAC5D,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAC5D,UAEJ,IAAIA,EAAe,KAAM,CACrB,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAC5D,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAC5D,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAC5D,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAC5D,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAC5D,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAC5D,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAC5D,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAC5D,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAC5D,UAEJ,IAAIA,EAAe,KAAM,CACrB,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAC5D,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAC5D,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAC5D,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAC5D,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAC5D,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAC5D,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAC5D,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAC5D,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAC5D,UAEJ,IAAIA,EAAe,KAAM,CACrB,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAC5D,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAC5D,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAC5D,QAAU,Q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,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAClE,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAClE,GAAM,GAAM,GAAM,EAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAClE,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAClE,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,IAAM,IAAM,IAAM,IAClE,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAClE,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,GAAM,GAAM,GAAM,GAAM,GAClE,GAAM,GAAM,GAAM,GAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAClE,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAClE,IAAM,IAAM,IAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAClE,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAClE,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAClE,GAAM,GAAM,GAAM,GAAM,GAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAClE,IAAM,IAAM,IAAM,IAAM,IAAM,GAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAClE,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAClE,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAClE,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAClE,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAClE,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAClE,GAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,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"}